CREATE OR REPLACE PACKAGE BODY CSF_OWN.PK_GERA_ARQ_EFD_PC IS

------------------------------------------------------------------------------------
-- Corpo do pacote de procedimentos de criação do arquivo do sped fiscal pis/cofins  
------------------------------------------------------------------------------------
w_dat_sis_ini    date;
w_dat_sis_atu    date; 
w_qt_segs        number;
w_houve_erro     number       := 0; 
----------------------------------------------------------
--| Função formata o valor na mascara deseja pelo usuário   
----------------------------------------------------------
FUNCTION FKG_FORMATA_NUM ( EN_NUM     IN NUMBER
                         , EV_MASCARA IN VARCHAR2 )
    RETURN VARCHAR2 IS
BEGIN
   --
   if trim(ev_mascara) is not null then
      return rtrim(ltrim(to_char(en_num, ev_mascara)));
   else
      return null;
   end if;
   --
EXCEPTION
   when others then
      return null;
END FKG_FORMATA_NUM;
----------------------------------------------------------
--| Função para recuperar o código do ajuste
----------------------------------------------------------
function fkg_ret_cod_ajuste(en_id_cod_ajuste in cod_aj_bc_contr.id%type)
    return varchar2 is
   --
   vv_cod_ajuste cod_aj_bc_contr.cod_ajuste%type;
   --
begin
   --
   select c.cod_ajuste
     into vv_cod_ajuste
     from cod_aj_bc_contr c
    where c.id = en_id_cod_ajuste;
   --
   return vv_cod_ajuste;
   --
exception
   when others then
      return null;
end fkg_ret_cod_ajuste;

------------------------------------------------------------------------
--| Procedimento que armazena a estrutura do arquivo da EFD em um array
------------------------------------------------------------------------
PROCEDURE PKB_ARMAZ_ESTR_ARQ_EFD_PC ( EV_REG_BLC   IN REGISTR_EFD_PC.CD%TYPE
                                    , EL_CONTEUDO  IN ESTR_ARQ_EFD_PC.CONTEUDO%TYPE ) IS
   --
   vn_fase            number := 0;
   vn_estrarqefdpc_id estr_arq_efd_pc.id%type := 0;
   vn_registrefdpc_id registr_efd_pc.id%type;
   --
BEGIN
   --
   vn_fase := 1;
   --
   if ev_reg_blc is not null and el_conteudo is not null then
      --
      vn_fase := 2;
      --
      gn_seq_arq := nvl(gn_seq_arq,0) + 1;
      --
      vn_fase := 3;
      --
      select estrarqefdpc_seq.nextval
        into vn_estrarqefdpc_id
        from dual;
      --
      vn_fase := 4;
      --
      vn_registrefdpc_id  := pk_csf_efd_pc.fkg_registr_efd_pc_id( ev_cd => ev_reg_blc );
      --
      vn_fase := 5;
      --
      insert into estr_arq_efd_pc ( id
                                  , aberturaefdpc_id
                                  , registrefdpc_id
                                  , sequencia
                                  , conteudo
                                  )
                           values ( vn_estrarqefdpc_id
                                  , gt_row_abertura_efd_pc.id
                                  , vn_registrefdpc_id
                                  , gn_seq_arq
                                  , (el_conteudo || FINAL_DE_LINHA)
                                  );
      --
      vn_fase := 6;
      --
      commit;
      --
   end if;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_armaz_estr_arq_efd_pc fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_ARMAZ_ESTR_ARQ_EFD_PC;

-----------------------------------------------------
--| Monta o REGISTRO 0500: PLANO DE CONTAS CONTÁBEIS
-----------------------------------------------------
--
-- A rotina foi alterada para utilizar um indexador sequencial devido as situações:
-- Se a rotina utilizava o ID do plano de conta como indexador, ocorriam contas repetidas por possuírem COD_CTA iguais em empresas diferentes.
-- Se a rotina utilizava o ID do plano de conta como indexador, ocorriam erros devido a qtde de carateres numéricos, pois a variável aceita até 9 caracteres.
-- Se a rotina utilizava o COD_CTA como indexador, ocorriam erros pois podem existir caracteres letras ou passar do tamanho de 9 caracteres.
-- Para verificar esses processos, as versões estão no repositório.
--
PROCEDURE PKB_MONTA_REG_0500 ( EN_PLANOCONTA_ID IN PLANO_CONTA.ID%TYPE
                             , vv_parametro in varchar2 ) IS
   --
   vn_fase           number := 0;
   vb_achou          boolean := false;
   vv_ind_cta_ref_dt varchar2(100) := null;
   vd_dt_alt         plano_conta.dt_inc_alt%type := null;
   vv_cod_nat_cc     cod_nat_pc.cod_nat%type := null;
   vv_ind_cta        plano_conta.dm_ind_cta%type := null;
   vn_nivel          plano_conta.nivel%type := null;
   vv_cod_cta        plano_conta.cod_cta%type := null;
   vv_nome_cta       plano_conta.descr_cta%type := null;
   vv_cod_cta_ref    plano_conta_ref_ecd.cod_cta_ref%type := null;
   --
   vn_parametro_0500 number := 0;
   --
   cursor c_cta_ref is
   select distinct
          pe.cod_cta_ref
     from pc_referen          pr
        , plano_conta_ref_ecd pe
    where pr.planoconta_id              = en_planoconta_id
      and pe.id                         = pr.planocontarefecd_id
      and gt_row_abertura_efd_pc.dt_ini between nvl(pr.dt_ini,gt_row_abertura_efd_pc.dt_ini) and nvl(pr.dt_fin,gt_row_abertura_efd_pc.dt_fin)
      and gt_row_abertura_efd_pc.dt_fin between nvl(pr.dt_ini,gt_row_abertura_efd_pc.dt_ini) and nvl(pr.dt_fin,gt_row_abertura_efd_pc.dt_fin);
   --
BEGIN
   --
   vn_fase := 1;
   --
   begin
      select trunc(pc.dt_inc_alt) dt_inc_alt
           , pc.cod_cta
           , substr(cn.cod_nat,1,2) cod_nat
           , pc.dm_ind_cta
           , pc.nivel
           , pc.descr_cta
        into vd_dt_alt
           , vv_cod_cta
           , vv_cod_nat_cc
           , vv_ind_cta
           , vn_nivel
           , vv_nome_cta
        from plano_conta pc
           , cod_nat_pc  cn
       where pc.id = en_planoconta_id
         and cn.id = pc.codnatpc_id;
   exception
      when others then
         vd_dt_alt     := null;
         vv_cod_cta    := null;
         vv_cod_nat_cc := null;
         vv_ind_cta    := null;
         vn_nivel      := null;
         vv_nome_cta   := null;
   end;
   --
   vn_fase := 2;
   --
   for r_cta_ref in c_cta_ref
   loop
      --
      exit when c_cta_ref%notfound or (c_cta_ref%notfound) is null;
      --
      vn_fase := 3;
      --
      vv_cod_cta_ref    := r_cta_ref.cod_cta_ref;
      vv_ind_cta_ref_dt := trim(replace(vv_cod_cta,'.',''))||trim(replace(r_cta_ref.cod_cta_ref,'.',''))||to_number(to_char(vd_dt_alt,'rrrrmmdd'));
      --
      vn_fase := 4;
      --
      vb_achou := false;
      --
      begin
         vb_achou := vt_tab_reg_0500.exists(vv_ind_cta_ref_dt);
      exception
         when others then
            vb_achou := false;
      end;
      --
      vn_fase := 5;
      --
      if not vb_achou then
         --
         vn_fase := 6;
         --
         if vd_dt_alt is not null then
            --
            vn_fase := 7;
            --
            vt_tab_reg_0500(vv_ind_cta_ref_dt).cod_cta_ref_dt := vv_ind_cta_ref_dt;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            -- 
            gl_conteudo := gl_conteudo || '0500' || '|';
            --
/*            if gt_row_abertura_efd_pc.dm_parametro_txt > 0 then   --para gerar no txt o cursor de origem da informação
            gl_conteudo := gl_conteudo || vv_parametro|| '|';
            end if;*/
            --
            gl_conteudo := gl_conteudo || to_char(vd_dt_alt, 'ddmmrrrr') || '|';
            gl_conteudo := gl_conteudo || vv_cod_nat_cc || '|';
            gl_conteudo := gl_conteudo || vv_ind_cta || '|';
            gl_conteudo := gl_conteudo || vn_nivel || '|';
            gl_conteudo := gl_conteudo || vv_cod_cta || '|';
            gl_conteudo := gl_conteudo || vv_nome_cta || '|';
            gl_conteudo := gl_conteudo || vv_cod_cta_ref || '|';
            gl_conteudo := gl_conteudo || '|'; -- cnpj_est
            --
            vn_fase := 8;
            --
            pkb_armaz_estr_arq_efd_pc( ev_reg_blc  => '0500'
                                     , el_conteudo => gl_conteudo );
            gn_qtde_reg_0500 := nvl(gn_qtde_reg_0500,0) + 1;
            --
         end if;
         --
      end if;
      --
   end loop;
   --
   vn_fase := 9;
   --
   if vv_cod_cta_ref is null then -- não possui conta referenciada
      --
      vn_fase := 10;
      --
      vv_ind_cta_ref_dt := trim(replace(vv_cod_cta,'.',''))||to_number(to_char(vd_dt_alt,'rrrrmmdd'));
      --
      vn_fase := 11;
      --
      vb_achou := false;
      --
      begin
         vb_achou := vt_tab_reg_0500.exists(vv_ind_cta_ref_dt);
      exception
         when others then
            vb_achou := false;
      end;
      --
      vn_fase := 12;
      --
      if not vb_achou then
         --
         vn_fase := 13;
         --
         vt_tab_reg_0500(vv_ind_cta_ref_dt).cod_cta_ref_dt := vv_ind_cta_ref_dt;
         --
         vn_fase := 14;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '0500' || '|';
         gl_conteudo := gl_conteudo || to_char(vd_dt_alt, 'ddmmrrrr') || '|';
         gl_conteudo := gl_conteudo || vv_cod_nat_cc || '|';
         gl_conteudo := gl_conteudo || vv_ind_cta || '|';
         gl_conteudo := gl_conteudo || vn_nivel || '|';
         gl_conteudo := gl_conteudo || vv_cod_cta || '|';
         gl_conteudo := gl_conteudo || vv_nome_cta || '|';
         gl_conteudo := gl_conteudo || vv_cod_cta_ref || '|';
         gl_conteudo := gl_conteudo || '|'; -- cnpj_est
         --
         vn_fase := 15;
         --
         pkb_armaz_estr_arq_efd_pc( ev_reg_blc  => '0500'
                                  , el_conteudo => gl_conteudo );
         gn_qtde_reg_0500 := nvl(gn_qtde_reg_0500,0) + 1;
         --
      end if;
      --
   end if;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0500 identificador da conta: '||en_planoconta_id||', fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0500;

------------------------------------------------
--| Monta o REGISTRO 9900: REGISTROS DO ARQUIVO
------------------------------------------------
PROCEDURE PKB_MONTA_REG_9900 IS
   --
   vn_fase    number := 0;
   vn_qtd_lin number := 0;
   --
   PROCEDURE PKB_INS_ARRAY ( EV_REG_BLC      IN VARCHAR2
                           , EN_QTD_REG_BLC  IN NUMBER ) IS
      --
   BEGIN
      --
      if ev_reg_blc is not null and nvl(en_qtd_reg_blc,0) > 0 then
         --
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '9900' || '|';
         gl_conteudo := gl_conteudo || ev_reg_blc || '|';
         gl_conteudo := gl_conteudo || en_qtd_reg_blc || '|';
         --
         vn_fase := 11;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '9900'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_9900 := nvl(gn_qtde_reg_9900,0) + 1;
         --
      end if;
      --
   END PKB_INS_ARRAY;
   --
BEGIN
   --
   vn_fase := 1;
   --
   -- BLOCO 0: ABERTURA, IDENTIFICAÇÃO E REFERÊNCIAS
   --
   pkb_ins_array ( ev_reg_blc     => '0000'
                 , en_qtd_reg_blc => gn_qtde_reg_0000 );
   --
   vn_fase := 1.1;
   --
   pkb_ins_array ( ev_reg_blc     => '0001'
                 , en_qtd_reg_blc => gn_qtde_reg_0001 );
   --
   vn_fase := 1.2;
   --
   pkb_ins_array ( ev_reg_blc     => '0035'
                 , en_qtd_reg_blc => gn_qtde_reg_0035 );
   --
   vn_fase := 1.3;
   --
   pkb_ins_array ( ev_reg_blc     => '0100'
                 , en_qtd_reg_blc => gn_qtde_reg_0100 );
   --
   vn_fase := 1.4;
   --
   pkb_ins_array ( ev_reg_blc     => '0110'
                 , en_qtd_reg_blc => gn_qtde_reg_0110 );
   --
   vn_fase := 1.5;
   --
   pkb_ins_array ( ev_reg_blc     => '0111'
                 , en_qtd_reg_blc => gn_qtde_reg_0111 );
   --
   vn_fase := 1.6;
   --
   pkb_ins_array ( ev_reg_blc     => '0120'
                 , en_qtd_reg_blc => gn_qtde_reg_0120 );
   --
   vn_fase := 1.7;
   --
   pkb_ins_array ( ev_reg_blc     => '0140'
                 , en_qtd_reg_blc => gn_qtde_reg_0140 );
   --
   vn_fase := 1.8;
   --
   pkb_ins_array ( ev_reg_blc     => '0145'
                 , en_qtd_reg_blc => gn_qtde_reg_0145 );
   --
   vn_fase := 1.9;
   --
   pkb_ins_array ( ev_reg_blc     => '0150'
                 , en_qtd_reg_blc => gn_qtde_reg_0150 );
   --
   vn_fase := 1.10;
   --
   pkb_ins_array ( ev_reg_blc     => '0190'
                 , en_qtd_reg_blc => gn_qtde_reg_0190 );
   --
   vn_fase := 1.11;
   --
   pkb_ins_array ( ev_reg_blc     => '0200'
                 , en_qtd_reg_blc => gn_qtde_reg_0200 );
   --
   vn_fase := 1.12;
   --
   pkb_ins_array ( ev_reg_blc     => '0205'
                 , en_qtd_reg_blc => gn_qtde_reg_0205 );
   --
   vn_fase := 1.13;
   --
   pkb_ins_array ( ev_reg_blc     => '0206'
                 , en_qtd_reg_blc => gn_qtde_reg_0206 );
   --
   vn_fase := 1.14;
   --
   pkb_ins_array ( ev_reg_blc     => '0208'
                 , en_qtd_reg_blc => gn_qtde_reg_0208 );
   --
   vn_fase := 1.15;
   --
   pkb_ins_array ( ev_reg_blc     => '0400'
                 , en_qtd_reg_blc => gn_qtde_reg_0400 );
   --
   vn_fase := 1.16;
   --
   pkb_ins_array ( ev_reg_blc     => '0450'
                 , en_qtd_reg_blc => gn_qtde_reg_0450 );
   --
   vn_fase := 1.17;
   --
   pkb_ins_array ( ev_reg_blc     => '0500'
                 , en_qtd_reg_blc => gn_qtde_reg_0500 );
   --
   vn_fase := 1.18;
   --
   pkb_ins_array ( ev_reg_blc     => '0600'
                 , en_qtd_reg_blc => gn_qtde_reg_0600 );
   --
   vn_fase := 1.19;
   --
   pkb_ins_array ( ev_reg_blc     => '0900'
                 , en_qtd_reg_blc => gn_qtde_reg_0900 );
   --
   vn_fase := 1.20;
   --
   pkb_ins_array ( ev_reg_blc     => '0990'
                 , en_qtd_reg_blc => gn_qtde_reg_0990 );
   --
   vn_fase := 2;
   --
   -- BLOCO A: DOCUMENTOS FISCAIS - SERVIÇOS (NÃO SUJEITOS AO ICMS)
   --
   pkb_ins_array ( ev_reg_blc     => 'A001'
                 , en_qtd_reg_blc => gn_qtde_reg_a001 );
   --
   vn_fase := 2.1;
   --
   pkb_ins_array ( ev_reg_blc     => 'A010'
                 , en_qtd_reg_blc => gn_qtde_reg_a010 );
   --
   vn_fase := 2.2;
   --
   pkb_ins_array ( ev_reg_blc     => 'A100'
                 , en_qtd_reg_blc => gn_qtde_reg_a100 );
   --
   vn_fase := 2.3;
   --
   pkb_ins_array ( ev_reg_blc     => 'A110'
                 , en_qtd_reg_blc => gn_qtde_reg_a110 );
   --
   vn_fase := 2.4;
   --
   pkb_ins_array ( ev_reg_blc     => 'A111'
                 , en_qtd_reg_blc => gn_qtde_reg_a111 );
   --
   vn_fase := 2.5;
   --
   pkb_ins_array ( ev_reg_blc     => 'A120'
                 , en_qtd_reg_blc => gn_qtde_reg_a120 );
   --
   vn_fase := 2.6;
   --
   pkb_ins_array ( ev_reg_blc     => 'A170'
                 , en_qtd_reg_blc => gn_qtde_reg_a170 );
   --
   vn_fase := 2.7;
   --
   pkb_ins_array ( ev_reg_blc     => 'A990'
                 , en_qtd_reg_blc => gn_qtde_reg_a990 );
   --
   vn_fase := 3;
   --
   -- BLOCO C: DOCUMENTOS FISCAIS I - MERCADORIAS (ICMS/IPI)
   --
   pkb_ins_array ( ev_reg_blc     => 'C001'
                 , en_qtd_reg_blc => gn_qtde_reg_c001 );
   --
   vn_fase := 3.1;
   --
   pkb_ins_array ( ev_reg_blc     => 'C010'
                 , en_qtd_reg_blc => gn_qtde_reg_c010 );
   --
   vn_fase := 3.2;
   --
   pkb_ins_array ( ev_reg_blc     => 'C100'
                 , en_qtd_reg_blc => gn_qtde_reg_c100 );
   --
   vn_fase := 3.3;
   --
   pkb_ins_array ( ev_reg_blc     => 'C110'
                 , en_qtd_reg_blc => gn_qtde_reg_c110 );
   --
   vn_fase := 3.4;
   --
   pkb_ins_array ( ev_reg_blc     => 'C111'
                 , en_qtd_reg_blc => gn_qtde_reg_c111 );
   --
   vn_fase := 3.5;
   --
   pkb_ins_array ( ev_reg_blc     => 'C120'
                 , en_qtd_reg_blc => gn_qtde_reg_c120 );
   --
   vn_fase := 3.6;
   --
   pkb_ins_array ( ev_reg_blc     => 'C170'
                 , en_qtd_reg_blc => gn_qtde_reg_c170 );
   --
   vn_fase := 3.7;
   --
   pkb_ins_array ( ev_reg_blc     => 'C175'
                 , en_qtd_reg_blc => gn_qtde_reg_c175 );
   --
   vn_fase := 3.8;
   --
   pkb_ins_array ( ev_reg_blc     => 'C380'
                 , en_qtd_reg_blc => gn_qtde_reg_c380 );
   --
   vn_fase := 3.9;
   --
   pkb_ins_array ( ev_reg_blc     => 'C381'
                 , en_qtd_reg_blc => gn_qtde_reg_c381 );
   --
   vn_fase := 3.10;
   --
   pkb_ins_array ( ev_reg_blc     => 'C385'
                 , en_qtd_reg_blc => gn_qtde_reg_c385 );
   --
   vn_fase := 3.11;
   --
   pkb_ins_array ( ev_reg_blc     => 'C400'
                 , en_qtd_reg_blc => gn_qtde_reg_c400 );
   --
   vn_fase := 3.12;
   --
   pkb_ins_array ( ev_reg_blc     => 'C405'
                 , en_qtd_reg_blc => gn_qtde_reg_c405 );
   --
   vn_fase := 3.13;
   --
   pkb_ins_array ( ev_reg_blc     => 'C481'
                 , en_qtd_reg_blc => gn_qtde_reg_c481 );
   --
   vn_fase := 3.14;
   --
   pkb_ins_array ( ev_reg_blc     => 'C485'
                 , en_qtd_reg_blc => gn_qtde_reg_c485 );
   --
   vn_fase := 3.15;
   --
   pkb_ins_array ( ev_reg_blc     => 'C489'
                 , en_qtd_reg_blc => gn_qtde_reg_c489 );
   --
   vn_fase := 3.16;
   --
   pkb_ins_array ( ev_reg_blc     => 'C490'
                 , en_qtd_reg_blc => gn_qtde_reg_c490 );
   --
   vn_fase := 3.17;
   --
   pkb_ins_array ( ev_reg_blc     => 'C491'
                 , en_qtd_reg_blc => gn_qtde_reg_c491 );
   --
   vn_fase := 3.18;
   --
   pkb_ins_array ( ev_reg_blc     => 'C495'
                 , en_qtd_reg_blc => gn_qtde_reg_c495 );
   --
   vn_fase := 3.19;
   --
   pkb_ins_array ( ev_reg_blc     => 'C500'
                 , en_qtd_reg_blc => gn_qtde_reg_c500 );
   --
   vn_fase := 3.20;
   --
   pkb_ins_array ( ev_reg_blc     => 'C501'
                 , en_qtd_reg_blc => gn_qtde_reg_c501 );
   --
   vn_fase := 3.21;
   --
   pkb_ins_array ( ev_reg_blc     => 'C505'
                 , en_qtd_reg_blc => gn_qtde_reg_c505 );
   --
   vn_fase := 3.22;
   --
   pkb_ins_array ( ev_reg_blc     => 'C509'
                 , en_qtd_reg_blc => gn_qtde_reg_c509 );
   --
   vn_fase := 3.23;
   --
   pkb_ins_array ( ev_reg_blc     => 'C860'
                 , en_qtd_reg_blc => gn_qtde_reg_c860 );
   --
   vn_fase := 3.24;
   --
   pkb_ins_array ( ev_reg_blc     => 'C870'
                 , en_qtd_reg_blc => gn_qtde_reg_c870 );
   --
   vn_fase := 3.25;
   --
   pkb_ins_array ( ev_reg_blc     => 'C880'
                 , en_qtd_reg_blc => gn_qtde_reg_c880 );
   --
   vn_fase := 3.26;
   --
   pkb_ins_array ( ev_reg_blc     => 'C990'
                 , en_qtd_reg_blc => gn_qtde_reg_c990 );
   --
   vn_fase := 4;
   --
   -- BLOCO D: DOCUMENTOS FISCAIS II - SERVIÇOS (ICMS).
   --
   pkb_ins_array ( ev_reg_blc     => 'D001'
                 , en_qtd_reg_blc => gn_qtde_reg_d001 );
   --
   vn_fase := 4.1;
   --
   pkb_ins_array ( ev_reg_blc     => 'D010'
                 , en_qtd_reg_blc => gn_qtde_reg_d010 );
   --
   vn_fase := 4.2;
   --
   pkb_ins_array ( ev_reg_blc     => 'D100'
                 , en_qtd_reg_blc => gn_qtde_reg_d100 );
   --
   vn_fase := 4.3;
   --
   pkb_ins_array ( ev_reg_blc     => 'D101'
                 , en_qtd_reg_blc => gn_qtde_reg_d101 );
   --
   vn_fase := 4.4;
   --
   pkb_ins_array ( ev_reg_blc     => 'D105'
                 , en_qtd_reg_blc => gn_qtde_reg_d105 );
   --
   vn_fase := 4.5;
   --
   pkb_ins_array ( ev_reg_blc     => 'D111'
                 , en_qtd_reg_blc => gn_qtde_reg_d111 );
   --
   vn_fase := 4.6;
   --
   pkb_ins_array ( ev_reg_blc     => 'D200'
                 , en_qtd_reg_blc => gn_qtde_reg_d200 );
   --
   vn_fase := 4.7;
   --
   pkb_ins_array ( ev_reg_blc     => 'D201'
                 , en_qtd_reg_blc => gn_qtde_reg_d201 );
   --
   vn_fase := 4.8;
   --
   pkb_ins_array ( ev_reg_blc     => 'D205'
                 , en_qtd_reg_blc => gn_qtde_reg_d205 );
   --
   vn_fase := 4.9;
   --
   pkb_ins_array ( ev_reg_blc     => 'D209'
                 , en_qtd_reg_blc => gn_qtde_reg_d209 );
   --
   vn_fase := 4.10;
   --
   pkb_ins_array ( ev_reg_blc     => 'D500'
                 , en_qtd_reg_blc => gn_qtde_reg_d500 );
   --
   vn_fase := 4.11;
   --
   pkb_ins_array ( ev_reg_blc     => 'D501'
                 , en_qtd_reg_blc => gn_qtde_reg_d501 );
   --
   vn_fase := 4.12;
   --
   pkb_ins_array ( ev_reg_blc     => 'D505'
                 , en_qtd_reg_blc => gn_qtde_reg_d505 );
   --
   vn_fase := 4.13;
   --
   pkb_ins_array ( ev_reg_blc     => 'D509'
                 , en_qtd_reg_blc => gn_qtde_reg_d509 );
   --
   vn_fase := 4.14;
   --
   pkb_ins_array ( ev_reg_blc     => 'D600'
                 , en_qtd_reg_blc => gn_qtde_reg_d600 );
   --
   vn_fase := 4.15;
   --
   pkb_ins_array ( ev_reg_blc     => 'D601'
                 , en_qtd_reg_blc => gn_qtde_reg_d601 );
   --
   vn_fase := 4.16;
   --
   pkb_ins_array ( ev_reg_blc     => 'D605'
                 , en_qtd_reg_blc => gn_qtde_reg_d605 );
   --
   vn_fase := 4.17;
   --
   pkb_ins_array ( ev_reg_blc     => 'D609'
                 , en_qtd_reg_blc => gn_qtde_reg_d609 );
   --
   vn_fase := 4.18;
   --
   pkb_ins_array ( ev_reg_blc     => 'D990'
                 , en_qtd_reg_blc => gn_qtde_reg_d990 );
   --
   vn_fase := 5;
   --
   --| BLOCO F: DEMAIS DOCUMENTOS E OPERAÇÕES
   --
   pkb_ins_array ( ev_reg_blc     => 'F001'
                 , en_qtd_reg_blc => gn_qtde_reg_f001 );
   --
   vn_fase := 5.1;
   --
   pkb_ins_array ( ev_reg_blc     => 'F010'
                 , en_qtd_reg_blc => gn_qtde_reg_f010 );
   --
   vn_fase := 5.2;
   --
   pkb_ins_array ( ev_reg_blc     => 'F100'
                 , en_qtd_reg_blc => gn_qtde_reg_f100 );
   --
   vn_fase := 5.3;
   --
   pkb_ins_array ( ev_reg_blc     => 'F111'
                 , en_qtd_reg_blc => gn_qtde_reg_f111 );
   --
   vn_fase := 5.4;
   --
   pkb_ins_array ( ev_reg_blc     => 'F120'
                 , en_qtd_reg_blc => gn_qtde_reg_f120 );
   --
   vn_fase := 5.5;
   --
   pkb_ins_array ( ev_reg_blc     => 'F129'
                 , en_qtd_reg_blc => gn_qtde_reg_f129 );
   --
   vn_fase := 5.6;
   --
   pkb_ins_array ( ev_reg_blc     => 'F130'
                 , en_qtd_reg_blc => gn_qtde_reg_f130 );
   --
   vn_fase := 5.7;
   --
   pkb_ins_array ( ev_reg_blc     => 'F139'
                 , en_qtd_reg_blc => gn_qtde_reg_f139 );
   --
   vn_fase := 5.8;
   --
   pkb_ins_array ( ev_reg_blc     => 'F150'
                 , en_qtd_reg_blc => gn_qtde_reg_f150 );
   --
   vn_fase := 5.9;
   --
   pkb_ins_array ( ev_reg_blc     => 'F200'
                 , en_qtd_reg_blc => gn_qtde_reg_f200 );
   --
   vn_fase := 5.10;
   --
   pkb_ins_array ( ev_reg_blc     => 'F205'
                 , en_qtd_reg_blc => gn_qtde_reg_f205 );
   --
   vn_fase := 5.11;
   --
   pkb_ins_array ( ev_reg_blc     => 'F210'
                 , en_qtd_reg_blc => gn_qtde_reg_f210 );
   --
   vn_fase := 5.12;
   --
   pkb_ins_array ( ev_reg_blc     => 'F211'
                 , en_qtd_reg_blc => gn_qtde_reg_f211 );
   --
   vn_fase := 5.13;
   --
   pkb_ins_array ( ev_reg_blc     => 'F500'
                 , en_qtd_reg_blc => gn_qtde_reg_f500 );
   --
   vn_fase := 5.14;
   --
   pkb_ins_array ( ev_reg_blc     => 'F509'
                 , en_qtd_reg_blc => gn_qtde_reg_f509 );
   --
   vn_fase := 5.15;
   --
   pkb_ins_array ( ev_reg_blc     => 'F510'
                 , en_qtd_reg_blc => gn_qtde_reg_f510 );
   --
   vn_fase := 5.16;
   --
   pkb_ins_array ( ev_reg_blc     => 'F519'
                 , en_qtd_reg_blc => gn_qtde_reg_f519 );
   --
   vn_fase := 5.17;
   --
   pkb_ins_array ( ev_reg_blc     => 'F525'
                 , en_qtd_reg_blc => gn_qtde_reg_f525 );
   --
   vn_fase := 5.18;
   --
   pkb_ins_array ( ev_reg_blc     => 'F550'
                 , en_qtd_reg_blc => gn_qtde_reg_f550 );
   --
   vn_fase := 5.19;
   --
   pkb_ins_array ( ev_reg_blc     => 'F559'
                 , en_qtd_reg_blc => gn_qtde_reg_f559 );
   --
   vn_fase := 5.20;
   --
   pkb_ins_array ( ev_reg_blc     => 'F560'
                 , en_qtd_reg_blc => gn_qtde_reg_f560 );
   --
   vn_fase := 5.21;
   --
   pkb_ins_array ( ev_reg_blc     => 'F569'
                 , en_qtd_reg_blc => gn_qtde_reg_f569 );
   --
   vn_fase := 5.22;
   --
   pkb_ins_array ( ev_reg_blc     => 'F600'
                 , en_qtd_reg_blc => gn_qtde_reg_f600 );
   --
   vn_fase := 5.23;
   --
   pkb_ins_array ( ev_reg_blc     => 'F700'
                 , en_qtd_reg_blc => gn_qtde_reg_f700 );
   --
   vn_fase := 5.24;
   --
   pkb_ins_array ( ev_reg_blc     => 'F800'
                 , en_qtd_reg_blc => gn_qtde_reg_f800 );
   --
   vn_fase := 5.25;
   --
   pkb_ins_array ( ev_reg_blc     => 'F990'
                 , en_qtd_reg_blc => gn_qtde_reg_f990 );
   --
   vn_fase := 6;
   --
   -- BLOCO I - OPERAÇÕES DAS INSTITUIÇÕES FINANCEIRAS, SEGURADORAS, ENTIDADES DE PREVID. PRIVADA, OPERADORAS DE PLANOS DE ASSIST. À SAÚDE E PESSOAS JURÍDICAS
   --
   pkb_ins_array ( ev_reg_blc     => 'I001'
                 , en_qtd_reg_blc => gn_qtde_reg_i001 );
   --
   vn_fase := 6.1;
   --
   pkb_ins_array ( ev_reg_blc     => 'I010'
                 , en_qtd_reg_blc => gn_qtde_reg_i010 );
   --
   vn_fase := 6.2;
   --
   pkb_ins_array ( ev_reg_blc     => 'I100'
                 , en_qtd_reg_blc => gn_qtde_reg_i100 );
   --
   vn_fase := 6.3;
   --
   pkb_ins_array ( ev_reg_blc     => 'I199'
                 , en_qtd_reg_blc => gn_qtde_reg_i199 );
   --
   vn_fase := 6.4;
   --
   pkb_ins_array ( ev_reg_blc     => 'I200'
                 , en_qtd_reg_blc => gn_qtde_reg_i200 );
   --
   vn_fase := 6.5;
   --
   pkb_ins_array ( ev_reg_blc     => 'I299'
                 , en_qtd_reg_blc => gn_qtde_reg_i299 );
   --
   vn_fase := 6.6;
   --
   pkb_ins_array ( ev_reg_blc     => 'I300'
                 , en_qtd_reg_blc => gn_qtde_reg_i300 );
   --
   vn_fase := 6.7;
   --
   pkb_ins_array ( ev_reg_blc     => 'I399'
                 , en_qtd_reg_blc => gn_qtde_reg_i399 );
   --
   vn_fase := 6.8;
   --
   pkb_ins_array ( ev_reg_blc     => 'I990'
                 , en_qtd_reg_blc => gn_qtde_reg_i990 );
   --
   vn_fase := 7;
   --
   -- BLOCO M - APURAÇÃO DA CONTRIBUIÇÃO E CRÉDITO DO PIS/PASEP E DA COFINS
   --
   pkb_ins_array ( ev_reg_blc     => 'M001'
                 , en_qtd_reg_blc => gn_qtde_reg_m001 );
   --
   vn_fase := 7.1;
   --
   pkb_ins_array ( ev_reg_blc     => 'M100'
                 , en_qtd_reg_blc => gn_qtde_reg_m100 );
   --
   vn_fase := 7.2;
   --
   pkb_ins_array ( ev_reg_blc     => 'M105'
                 , en_qtd_reg_blc => gn_qtde_reg_m105 );
   --
   vn_fase := 7.3;
   --
   pkb_ins_array ( ev_reg_blc     => 'M110'
                 , en_qtd_reg_blc => gn_qtde_reg_m110 );
   --
   vn_fase := 7.4;
   --
   pkb_ins_array ( ev_reg_blc     => 'M115'
                 , en_qtd_reg_blc => gn_qtde_reg_m115 );
   --
   vn_fase := 7.5;
   --
   pkb_ins_array ( ev_reg_blc     => 'M200'
                 , en_qtd_reg_blc => gn_qtde_reg_m200 );
   --
   vn_fase := 7.6;
   --
   pkb_ins_array ( ev_reg_blc     => 'M205'
                 , en_qtd_reg_blc => gn_qtde_reg_m205 );
   --
   vn_fase := 7.7;
   --
   pkb_ins_array ( ev_reg_blc     => 'M210'
                 , en_qtd_reg_blc => gn_qtde_reg_m210 );
   --
   vn_fase := 7.8;
   --
   pkb_ins_array ( ev_reg_blc     => 'M211'
                 , en_qtd_reg_blc => gn_qtde_reg_m211 );
   --
   vn_fase := 7.9;
   --
   pkb_ins_array ( ev_reg_blc     => 'M215'
                 , en_qtd_reg_blc => gn_qtde_reg_m215 );
   --
   vn_fase := 7.10;
   --
   pkb_ins_array ( ev_reg_blc     => 'M220'
                 , en_qtd_reg_blc => gn_qtde_reg_m220 );
   --
   vn_fase := 7.11;
   --
   pkb_ins_array ( ev_reg_blc     => 'M225'
                 , en_qtd_reg_blc => gn_qtde_reg_m225 );
   --
   vn_fase := 7.12;
   --
   pkb_ins_array ( ev_reg_blc     => 'M230'
                 , en_qtd_reg_blc => gn_qtde_reg_m230 );
   --
   vn_fase := 7.13;
   --
   pkb_ins_array ( ev_reg_blc     => 'M300'
                 , en_qtd_reg_blc => gn_qtde_reg_m300 );
   --
   vn_fase := 7.14;
   --
   pkb_ins_array ( ev_reg_blc     => 'M350'
                 , en_qtd_reg_blc => gn_qtde_reg_m350 );
   --
   vn_fase := 7.15;
   --
   pkb_ins_array ( ev_reg_blc     => 'M400'
                 , en_qtd_reg_blc => gn_qtde_reg_m400 );
   --
   vn_fase := 7.16;
   --
   pkb_ins_array ( ev_reg_blc     => 'M410'
                 , en_qtd_reg_blc => gn_qtde_reg_m410 );
   --
   vn_fase := 7.17;
   --
   pkb_ins_array ( ev_reg_blc     => 'M500'
                 , en_qtd_reg_blc => gn_qtde_reg_m500 );
   --
   vn_fase := 7.18;
   --
   pkb_ins_array ( ev_reg_blc     => 'M505'
                 , en_qtd_reg_blc => gn_qtde_reg_m505 );
   --
   vn_fase := 7.19;
   --
   pkb_ins_array ( ev_reg_blc     => 'M510'
                 , en_qtd_reg_blc => gn_qtde_reg_m510 );
   --
   vn_fase := 7.20;
   --
   pkb_ins_array ( ev_reg_blc     => 'M515'
                 , en_qtd_reg_blc => gn_qtde_reg_m515 );
   --
   vn_fase := 7.21;
   --
   pkb_ins_array ( ev_reg_blc     => 'M600'
                 , en_qtd_reg_blc => gn_qtde_reg_m600 );
   --
   vn_fase := 7.22;
   --
   pkb_ins_array ( ev_reg_blc     => 'M605'
                 , en_qtd_reg_blc => gn_qtde_reg_m605 );
   --
   vn_fase := 7.23;
   --
   pkb_ins_array ( ev_reg_blc     => 'M610'
                 , en_qtd_reg_blc => gn_qtde_reg_m610 );
   --
   vn_fase := 7.24;
   --
   pkb_ins_array ( ev_reg_blc     => 'M611'
                 , en_qtd_reg_blc => gn_qtde_reg_m611 );
   --
   vn_fase := 7.25;
   --
   pkb_ins_array ( ev_reg_blc     => 'M615'
                 , en_qtd_reg_blc => gn_qtde_reg_m615 );

   --
   vn_fase := 7.26;
   --
   pkb_ins_array ( ev_reg_blc     => 'M620'
                 , en_qtd_reg_blc => gn_qtde_reg_m620 );
   --
   vn_fase := 7.27;
   --
   pkb_ins_array ( ev_reg_blc     => 'M625'
                 , en_qtd_reg_blc => gn_qtde_reg_m625 );
   --
   vn_fase := 7.28;
   --
   pkb_ins_array ( ev_reg_blc     => 'M630'
                 , en_qtd_reg_blc => gn_qtde_reg_m630 );
   --
   vn_fase := 7.29;
   --
   pkb_ins_array ( ev_reg_blc     => 'M700'
                 , en_qtd_reg_blc => gn_qtde_reg_m700 );
   --
   vn_fase := 7.30;
   --
   pkb_ins_array ( ev_reg_blc     => 'M800'
                 , en_qtd_reg_blc => gn_qtde_reg_m800 );
   --
   vn_fase := 7.31;
   --
   pkb_ins_array ( ev_reg_blc     => 'M810'
                 , en_qtd_reg_blc => gn_qtde_reg_m810 );
   --
   vn_fase := 7.32;
   --
   pkb_ins_array ( ev_reg_blc     => 'M990'
                 , en_qtd_reg_blc => gn_qtde_reg_m990 );
   --
   vn_fase := 8;
   --
   -- BLOCO P: APURAÇÃO DA CONTRIBUIÇÃO PREVIDENCIÁRIA SOBRE A RECEITA BRUTA (CPRB)
   --
   pkb_ins_array ( ev_reg_blc     => 'P001'
                 , en_qtd_reg_blc => gn_qtde_reg_p001 );
   --
   vn_fase := 8.1;
   --
   pkb_ins_array ( ev_reg_blc     => 'P010'
                 , en_qtd_reg_blc => gn_qtde_reg_p010 );
   --
   vn_fase := 8.2;
   --
   pkb_ins_array ( ev_reg_blc     => 'P100'
                 , en_qtd_reg_blc => gn_qtde_reg_p100 );
   --
   vn_fase := 8.3;
   --
   pkb_ins_array ( ev_reg_blc     => 'P110'
                 , en_qtd_reg_blc => gn_qtde_reg_p110 );
   --
   vn_fase := 8.4;
   --
   pkb_ins_array ( ev_reg_blc     => 'P199'
                 , en_qtd_reg_blc => gn_qtde_reg_p199 );
   --
   vn_fase := 8.5;
   --
   pkb_ins_array ( ev_reg_blc     => 'P200'
                 , en_qtd_reg_blc => gn_qtde_reg_p200 );
   --
   vn_fase := 8.6;
   --
   pkb_ins_array ( ev_reg_blc     => 'P210'
                 , en_qtd_reg_blc => gn_qtde_reg_p210 );
   --
   vn_fase := 8.7;
   --
   pkb_ins_array ( ev_reg_blc     => 'P990'
                 , en_qtd_reg_blc => gn_qtde_reg_p990 );
   --
   vn_fase := 9;
   --
   -- BLOCO 1: COMPLEMENTO DA ESCRITURAÇÃO - CONTROLE DE SALDOS DE CRÉDITOS E DE RETENÇÕES, OPERAÇÕES EXTEMPORÂNEAS E OUTRAS INFORMAÇÕES
   --
   pkb_ins_array ( ev_reg_blc     => '1001'
                 , en_qtd_reg_blc => gn_qtde_reg_1001 );
   --
   vn_fase := 9.1;
   --
   pkb_ins_array ( ev_reg_blc     => '1010'
                 , en_qtd_reg_blc => gn_qtde_reg_1010 );
   --
   vn_fase := 9.2;
   --
   pkb_ins_array ( ev_reg_blc     => '1011'
                 , en_qtd_reg_blc => gn_qtde_reg_1011 );
   --
   vn_fase := 9.3;
   --
   pkb_ins_array ( ev_reg_blc     => '1020'
                 , en_qtd_reg_blc => gn_qtde_reg_1020 );
   --
   vn_fase := 9.4;
   --
   pkb_ins_array ( ev_reg_blc     => '1050'
                 , en_qtd_reg_blc => gn_qtde_reg_1050 );
   --
   vn_fase := 9.5;
   --
   pkb_ins_array ( ev_reg_blc     => '1100'
                 , en_qtd_reg_blc => gn_qtde_reg_1100 );
   --
   vn_fase := 9.6;
   --
   pkb_ins_array ( ev_reg_blc     => '1101'
                 , en_qtd_reg_blc => gn_qtde_reg_1101 );
   --
   vn_fase := 9.7;
   --
   pkb_ins_array ( ev_reg_blc     => '1102'
                 , en_qtd_reg_blc => gn_qtde_reg_1102 );
   --
   vn_fase := 9.8;
   --
   pkb_ins_array ( ev_reg_blc     => '1200'
                 , en_qtd_reg_blc => gn_qtde_reg_1200 );
   --
   vn_fase := 9.9;
   --
   pkb_ins_array ( ev_reg_blc     => '1210'
                 , en_qtd_reg_blc => gn_qtde_reg_1210 );
   --
   vn_fase := 9.10;
   --
   pkb_ins_array ( ev_reg_blc     => '1220'
                 , en_qtd_reg_blc => gn_qtde_reg_1220 );
   --
   vn_fase := 9.11;
   --
   pkb_ins_array ( ev_reg_blc     => '1300'
                 , en_qtd_reg_blc => gn_qtde_reg_1300 );
   --
   vn_fase := 9.12;
   --
   pkb_ins_array ( ev_reg_blc     => '1500'
                 , en_qtd_reg_blc => gn_qtde_reg_1500 );
   --
   vn_fase := 9.13;
   --
   pkb_ins_array ( ev_reg_blc     => '1501'
                 , en_qtd_reg_blc => gn_qtde_reg_1501 );
   --
   vn_fase := 9.14;
   --
   pkb_ins_array ( ev_reg_blc     => '1502'
                 , en_qtd_reg_blc => gn_qtde_reg_1502 );
   --
   vn_fase := 9.15;
   --
   pkb_ins_array ( ev_reg_blc     => '1600'
                 , en_qtd_reg_blc => gn_qtde_reg_1600 );
   --
   vn_fase := 9.16;
   --
   pkb_ins_array ( ev_reg_blc     => '1610'
                 , en_qtd_reg_blc => gn_qtde_reg_1610 );
   --
   vn_fase := 9.17;
   --
   pkb_ins_array ( ev_reg_blc     => '1620'
                 , en_qtd_reg_blc => gn_qtde_reg_1620 );
   --
   vn_fase := 9.18;
   --
   pkb_ins_array ( ev_reg_blc     => '1700'
                 , en_qtd_reg_blc => gn_qtde_reg_1700 );
   --
   vn_fase := 9.19;
   --
   pkb_ins_array ( ev_reg_blc     => '1800'
                 , en_qtd_reg_blc => gn_qtde_reg_1800 );
   --
   vn_fase := 9.20;
   --
   pkb_ins_array ( ev_reg_blc     => '1809'
                 , en_qtd_reg_blc => gn_qtde_reg_1809 );
   --
   vn_fase := 9.21;
   --
   pkb_ins_array ( ev_reg_blc     => '1900'
                 , en_qtd_reg_blc => gn_qtde_reg_1900 );
   --
   vn_fase := 9.22;
   --
   pkb_ins_array ( ev_reg_blc     => '1990'
                 , en_qtd_reg_blc => gn_qtde_reg_1990 );
   --
   vn_fase := 10;
   --
   -- BLOCO 9: CONTROLE E ENCERRAMENTO DO ARQUIVO DIGITAL
   --
   pkb_ins_array ( ev_reg_blc     => '9001'
                 , en_qtd_reg_blc => gn_qtde_reg_9001 );
   --
   vn_fase := 10.1;
   --
   gn_qtde_reg_9900 := nvl(gn_qtde_reg_9900,0) + 3; -- "3" corresponde aos registro 9900, 9990 e 9999
   --
   pkb_ins_array ( ev_reg_blc     => '9900'
                 , en_qtd_reg_blc => gn_qtde_reg_9900 );
   --
   gn_qtde_reg_9900 := nvl(gn_qtde_reg_9900,0) - 3;
   --
   vn_fase := 10.2;
   --
   pkb_ins_array ( ev_reg_blc     => '9990'
                 , en_qtd_reg_blc => 1 );
   --
   pkb_ins_array ( ev_reg_blc     => '9999'
                 , en_qtd_reg_blc => 1 );
   --
   vn_fase := 10.3;
   -- Monta o REGISTRO 9990: ENCERRAMENTO DO BLOCO 9
   gn_qtde_reg_9990 := 1;
   gn_qtde_reg_9999 := 1;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || '9990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_9001 + gn_qtde_reg_9900 + gn_qtde_reg_9990 + gn_qtde_reg_9999) || '|';
   --
   vn_fase := 10.4;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '9990'
                             , el_conteudo => gl_conteudo );
   --
   vn_fase := 10.5;
   -- Monta o REGISTRO 9999: ENCERRAMENTO DO ARQUIVO DIGITAL
   --
   vn_qtd_lin := gn_qtde_reg_0000 +
                 gn_qtde_reg_0001 +
                 gn_qtde_reg_0035 +
                 gn_qtde_reg_0100 +
                 gn_qtde_reg_0110 +
                 gn_qtde_reg_0111 +
                 gn_qtde_reg_0120 +
                 gn_qtde_reg_0140 +
                 gn_qtde_reg_0145 +
                 gn_qtde_reg_0150 +
                 gn_qtde_reg_0190 +
                 gn_qtde_reg_0200 +
                 gn_qtde_reg_0205 +
                 gn_qtde_reg_0206 +
                 gn_qtde_reg_0208 +
                 gn_qtde_reg_0400 +
                 gn_qtde_reg_0450 +
                 gn_qtde_reg_0500 +
                 gn_qtde_reg_0600 +
                 gn_qtde_reg_0900 +
                 gn_qtde_reg_0990 +
                 gn_qtde_reg_a001 +
                 gn_qtde_reg_a010 +
                 gn_qtde_reg_a100 +
                 gn_qtde_reg_a110 +
                 gn_qtde_reg_a111 +
                 gn_qtde_reg_a120 +
                 gn_qtde_reg_a170 +
                 gn_qtde_reg_a990 +
                 gn_qtde_reg_c001 +
                 gn_qtde_reg_c010 +
                 gn_qtde_reg_c100 +
                 gn_qtde_reg_c110 +
                 gn_qtde_reg_c111 +
                 gn_qtde_reg_c120 +
                 gn_qtde_reg_c170 +
                 gn_qtde_reg_c175 +
                 gn_qtde_reg_c380 +
                 gn_qtde_reg_c381 +
                 gn_qtde_reg_c385 +
                 gn_qtde_reg_c400 +
                 gn_qtde_reg_c405 +
                 gn_qtde_reg_c481 +
                 gn_qtde_reg_c485 +
                 gn_qtde_reg_c489 +
                 gn_qtde_reg_c490 +
                 gn_qtde_reg_c491 +
                 gn_qtde_reg_c495 +
                 gn_qtde_reg_c500 +
                 gn_qtde_reg_c501 +
                 gn_qtde_reg_c505 +
                 gn_qtde_reg_c509 +
                 gn_qtde_reg_c860 +
                 gn_qtde_reg_c870 +
                 gn_qtde_reg_c880 +
                 gn_qtde_reg_c990 +
                 gn_qtde_reg_d001 +
                 gn_qtde_reg_d010 +
                 gn_qtde_reg_d100 +
                 gn_qtde_reg_d101 +
                 gn_qtde_reg_d105 +
                 gn_qtde_reg_d111 +
                 gn_qtde_reg_d200 +
                 gn_qtde_reg_d201 +
                 gn_qtde_reg_d205 +
                 gn_qtde_reg_d209 +
                 gn_qtde_reg_d500 +
                 gn_qtde_reg_d501 +
                 gn_qtde_reg_d505 +
                 gn_qtde_reg_d509 +
                 gn_qtde_reg_d600 +
                 gn_qtde_reg_d601 +
                 gn_qtde_reg_d605 +
                 gn_qtde_reg_d609 +
                 gn_qtde_reg_d990 +
                 gn_qtde_reg_f001 +
                 gn_qtde_reg_f010 +
                 gn_qtde_reg_f100 +
                 gn_qtde_reg_f111 +
                 gn_qtde_reg_f120 +
                 gn_qtde_reg_f129 +
                 gn_qtde_reg_f130 +
                 gn_qtde_reg_f139 +
                 gn_qtde_reg_f150 +
                 gn_qtde_reg_f200 +
                 gn_qtde_reg_f205 +
                 gn_qtde_reg_f210 +
                 gn_qtde_reg_f211 +
                 gn_qtde_reg_f500 +
                 gn_qtde_reg_f509 +
                 gn_qtde_reg_f510 +
                 gn_qtde_reg_f519 +
                 gn_qtde_reg_f525 +
                 gn_qtde_reg_f550 +
                 gn_qtde_reg_f559 +
                 gn_qtde_reg_f560 +
                 gn_qtde_reg_f569 +
                 gn_qtde_reg_f600 +
                 gn_qtde_reg_f700 +
                 gn_qtde_reg_f800 +
                 gn_qtde_reg_f990 +
                 gn_qtde_reg_i001 +
                 gn_qtde_reg_i010 +
                 gn_qtde_reg_i100 +
                 gn_qtde_reg_i199 +
                 gn_qtde_reg_i200 +
                 gn_qtde_reg_i299 +
                 gn_qtde_reg_i300 +
                 gn_qtde_reg_i399 +
                 gn_qtde_reg_i990 +
                 gn_qtde_reg_m001 +
                 gn_qtde_reg_m100 +
                 gn_qtde_reg_m105 +
                 gn_qtde_reg_m110 +
                 gn_qtde_reg_m115 +
                 gn_qtde_reg_m200 +
                 gn_qtde_reg_m205 +
                 gn_qtde_reg_m210 +
                 gn_qtde_reg_m211 +
                 gn_qtde_reg_m215 +
                 gn_qtde_reg_m220 +
                 gn_qtde_reg_m225 +
                 gn_qtde_reg_m230 +
                 gn_qtde_reg_m300 +
                 gn_qtde_reg_m350 +
                 gn_qtde_reg_m400 +
                 gn_qtde_reg_m410 +
                 gn_qtde_reg_m500 +
                 gn_qtde_reg_m505 +
                 gn_qtde_reg_m510 +
                 gn_qtde_reg_m515 +
                 gn_qtde_reg_m600 +
                 gn_qtde_reg_m605 +
                 gn_qtde_reg_m610 +
                 gn_qtde_reg_m611 +
                 gn_qtde_reg_m615 +
                 gn_qtde_reg_m620 +
                 gn_qtde_reg_m625 +
                 gn_qtde_reg_m630 +
                 gn_qtde_reg_m700 +
                 gn_qtde_reg_m800 +
                 gn_qtde_reg_m810 +
                 gn_qtde_reg_m990 +
                 gn_qtde_reg_p001 +
                 gn_qtde_reg_p010 +
                 gn_qtde_reg_p100 +
                 gn_qtde_reg_p110 +
                 gn_qtde_reg_p199 +
                 gn_qtde_reg_p200 +
                 gn_qtde_reg_p210 +
                 gn_qtde_reg_p990 +
                 gn_qtde_reg_1001 +
                 gn_qtde_reg_1010 +
                 gn_qtde_reg_1011 +
                 gn_qtde_reg_1020 +
                 gn_qtde_reg_1050 +
                 gn_qtde_reg_1100 +
                 gn_qtde_reg_1101 +
                 gn_qtde_reg_1102 +
                 gn_qtde_reg_1200 +
                 gn_qtde_reg_1210 +
                 gn_qtde_reg_1220 +
                 gn_qtde_reg_1300 +
                 gn_qtde_reg_1500 +
                 gn_qtde_reg_1501 +
                 gn_qtde_reg_1502 +
                 gn_qtde_reg_1600 +
                 gn_qtde_reg_1610 +
                 gn_qtde_reg_1620 +
                 gn_qtde_reg_1700 +
                 gn_qtde_reg_1800 +
                 gn_qtde_reg_1809 +
                 gn_qtde_reg_1900 +
                 gn_qtde_reg_1990 +
                 gn_qtde_reg_9001 +
                 gn_qtde_reg_9900 +
                 gn_qtde_reg_9990 +
                 gn_qtde_reg_9999;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || '9999' || '|';
   gl_conteudo := gl_conteudo || vn_qtd_lin || '|';
   --
   vn_fase := 10.6;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '9999'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_9900 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_9900;
-----------------------------------------------
--| Monta o REGISTRO 9001: ABERTURA DO BLOCO 9
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_9001 IS
BEGIN
   --
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || '9001' || '|';
   gl_conteudo := gl_conteudo || 0 || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '9001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_9001 := nvl(gn_qtde_reg_9001,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_9001: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_9001;
-------------------------------------------------------------------------------------------
--| Procedimento monta os registros do BLOCO 9: CONTROLE E ENCERRAMENTO DO ARQUIVO DIGITAL
-------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_9 IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- Monta o REGISTRO 9001: ABERTURA DO BLOCO 9
   pkb_monta_reg_9001;
   --
   vn_fase := 2;
   -- Monta o REGISTRO 9900: REGISTROS DO ARQUIVO
   pkb_monta_reg_9900;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_9 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_9;
---------------------------------------------------
--| Monta o REGISTRO 1990: ENCERRAMENTO DO BLOCO 1
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_1990 IS
BEGIN
   --
   -- Cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || '1990' || '|';
   --
   gn_qtde_reg_1990 := 1;
   --
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_1001 +
                                   gn_qtde_reg_1010 +
                                   gn_qtde_reg_1011 +
                                   gn_qtde_reg_1020 +
                                   gn_qtde_reg_1050 +
                                   gn_qtde_reg_1100 +
                                   gn_qtde_reg_1101 +
                                   gn_qtde_reg_1102 +
                                   gn_qtde_reg_1200 +
                                   gn_qtde_reg_1210 +
                                   gn_qtde_reg_1220 +
                                   gn_qtde_reg_1300 +
                                   gn_qtde_reg_1500 +
                                   gn_qtde_reg_1501 +
                                   gn_qtde_reg_1502 +
                                   gn_qtde_reg_1600 +
                                   gn_qtde_reg_1610 +
                                   gn_qtde_reg_1620 +
                                   gn_qtde_reg_1700 +
                                   gn_qtde_reg_1800 +
                                   gn_qtde_reg_1809 +
                                   gn_qtde_reg_1900 +
                                   gn_qtde_reg_1990
                                 ) || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1990;
---------------------------------------------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO 1900: CONSOLIDAÇÃO DOS DOCUMENTOS EMITIDOS NO PERÍODO POR PESSOA JURÍDICA SUBMETIDA AO REGIME DE TRIBUTAÇÃO COM BASE NO
--| LUCRO PRESUMIDO - REGIME DE CAIXA OU DE COMPETÊNCIA
---------------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1900 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1900 is
   select cd.dt_oper
        , cd.cnpj
        , cd.ser
        , cd.sub_ser
        , cd.sitdocto_id
        , cd.vl_tot_rec
        , cd.quant_doc
        , cd.codst_id_pis
        , cd.codst_id_cofins
        , cd.cfop_id
        , cd.inf_compl
        , cd.planoconta_id
        , mf.cod_mod
     from cons_docto_emit_per cd
        , mod_fiscal          mf
    where cd.empresa_id    = gt_row_abertura_efd_pc.empresa_id
      and cd.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and cd.dm_st_proc    = 1 -- validada
      and mf.id            = cd.modfiscal_id
    order by cd.dt_oper;
   --
BEGIN
   --
   vn_fase := 1;
   --| Monta REGISTRO 1900: CONSOLIDAÇÃO DOS DOCUMENTOS EMITIDOS NO PERÍODO POR PESSOA JURÍDICA SUBMETIDA AO REGIME DE TRIBUTAÇÃO COM BASE NO
   --| LUCRO PRESUMIDO - REGIME DE CAIXA OU DE COMPETÊNCIA
   for rec_1900 in c_1900 loop
      exit when c_1900%notfound or (c_1900%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1900' || '|';
      gl_conteudo := gl_conteudo || lpad(rec_1900.cnpj,14,'0') || '|';
      gl_conteudo := gl_conteudo || rec_1900.cod_mod || '|';
      gl_conteudo := gl_conteudo || rec_1900.ser || '|';
      gl_conteudo := gl_conteudo || rec_1900.sub_ser || '|';
      --
      if nvl(rec_1900.sitdocto_id,0) = 0 then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || pk_csf.fkg_sit_docto_cd(rec_1900.sitdocto_id) || '|';
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1900.vl_tot_rec, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_1900.quant_doc || '|';
      --
      if nvl(rec_1900.codst_id_pis,0) = 0 then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod(rec_1900.codst_id_pis) || '|';
      end if;
      --
      if nvl(rec_1900.codst_id_cofins,0) = 0 then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod(rec_1900.codst_id_cofins) || '|';
      end if;
      --
      if nvl(rec_1900.cfop_id,0) = 0 then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || pk_csf.fkg_cfop_cd(rec_1900.cfop_id) || '|';
      end if;
      --
      gl_conteudo := gl_conteudo || rec_1900.inf_compl || '|';
      --
      if nvl(rec_1900.planoconta_id,0) = 0 then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(rec_1900.planoconta_id) || '|';
      end if;
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1900'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_1900 := nvl(gn_qtde_reg_1900,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1900 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1900;
----------------------------------------------------------
--| Monta o REGISTRO 1800: INCORPORAÇÃO IMOBILIÁRIA - RET
----------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1800 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1800 is
   select ii.id
        , ii.inc_imob
        , ii.rec_receb_ret
        , ii.rec_fin_ret
        , ii.bc_ret
        , ii.aliq_ret
        , ii.vl_rec_uni
        , ii.dt_rec_uni
        , ii.cod_rec
     from incorp_imob_ret ii
    where ii.empresa_id    = gt_row_abertura_efd_pc.empresa_id
      and ii.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and ii.dm_st_proc    = 1 -- validada
    order by ii.id;
   --
   cursor c_1809 (en_incorpimobret_id in incorp_imob_ret.id%type) is
   select ii.num_proc
        , ii.dm_ind_proc
     from incorp_imob_proc_ref ii
    where ii.incorpimobret_id = en_incorpimobret_id;
   --
BEGIN
   --
   vn_fase := 1;
   --| Monta REGISTRO 1800: INCORPORAÇÃO IMOBILIÁRIA - RET
   for rec_1800 in c_1800 loop
      exit when c_1800%notfound or (c_1800%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1800' || '|';
      gl_conteudo := gl_conteudo || rec_1800.inc_imob || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1800.rec_receb_ret, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1800.rec_fin_ret, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1800.bc_ret, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1800.aliq_ret, '9990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1800.vl_rec_uni, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || to_char(rec_1800.dt_rec_uni,'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || rec_1800.cod_rec || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1800'
                                , el_conteudo => gl_conteudo );
      --
      vn_fase := 4;
      --
      gn_qtde_reg_1800 := nvl(gn_qtde_reg_1800,0) + 1;
      --
      vn_fase := 5;
      --| Monta REGISTRO 1809: PROCESSO REFERENCIADO
      for rec_1809 in c_1809 (en_incorpimobret_id => rec_1800.id) loop
         exit when c_1809%notfound or (c_1809%notfound) is null;
         --
         vn_fase := 6;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '1809' || '|';
         gl_conteudo := gl_conteudo || rec_1809.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_1809.dm_ind_proc || '|';
         --
         vn_fase := 7;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1809'
                                   , el_conteudo => gl_conteudo );
         --
         vn_fase := 8;
         --
         gn_qtde_reg_1809 := nvl(gn_qtde_reg_1809,0) + 1;
         --
      end loop;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1800 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1800;
--------------------------------------------------------------------------
--| Monta o REGISTRO 1700: CONTROLE DOS VALORES RETIDOS NA FONTE - COFINS
--------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1700 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1700 is
   select cvrf.id
        , cvrf.empresa_id
        , cvrf.ano
        , cvrf.mes
        , cvrf.dm_situacao
        , cvrf.dm_ind_nat_ret
        , cvrf.per_rec_ret
        , cvrf.vl_ret_apu
        , cvrf.vl_ret_ded
        , cvrf.vl_ret_per
        , cvrf.vl_ret_dcomp
        , cvrf.vl_sld_ret
     from contr_vlr_ret_fonte_cofins cvrf
    where cvrf.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cvrf.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cvrf.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cvrf.dm_situacao = 3 -- processada
    order by cvrf.empresa_id, cvrf.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_1700 in c_1700 loop
      exit when c_1700%notfound or (c_1700%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1700' || '|';
      gl_conteudo := gl_conteudo || rec_1700.dm_ind_nat_ret || '|';
      gl_conteudo := gl_conteudo || lpad(rec_1700.per_rec_ret,6,'0') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1700.vl_ret_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1700.vl_ret_ded, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1700.vl_ret_per, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1700.vl_ret_dcomp, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1700.vl_sld_ret, '9999999999990D99') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1700'
                                , el_conteudo => gl_conteudo );
      --
      vn_fase := 4;
      --
      gn_qtde_reg_1700 := nvl(gn_qtde_reg_1700,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1700 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1700;
---------------------------------------------------------------------
--| Monta o REGISTRO 1600: CONTRIBUIÇÃO SOCIAL EXTEMPORÂNEA - COFINS
---------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1600 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1600 is
   select cse.id
        , cse.empresa_id
        , cse.ano
        , cse.mes
        , cse.dm_situacao
        , cse.per_apur_ant
        , cse.contrsocapurpc_id
        , csa.cd nat_cont_rec
        , cse.vl_cont_apur
        , cse.vl_cred_cofins_desc
        , cse.vl_cont_dev
        , cse.vl_out_ded
        , cse.vl_cont_ext
        , cse.vl_mul
        , cse.vl_jur
        , cse.dt_recol
     from contr_soc_ext_cofins cse
        , contr_soc_apur_pc csa
    where cse.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cse.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cse.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cse.dm_situacao = 3 -- processada
      and csa.id          = cse.contrsocapurpc_id
    order by cse.empresa_id, cse.id;
   --
   cursor c_1610 ( en_contrsocextcofins_id contr_soc_ext_cofins.id%type ) is
   select d.id
        , d.contrsocextcofins_id
        , d.empresa_id
        , ( lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') || lpad(j.dig_cnpj, 2, '0') ) cnpj
        , d.codst_id
        , cst.cod_st
        , d.pessoa_id
        , p.cod_part
        , d.dt_oper
        , d.vl_oper
        , d.vl_bc_cofins
        , d.aliq_cofins
        , d.vl_cofins
        , d.planoconta_id
        , pc.cod_cta
        , d.desc_compl
     from det_contr_soc_ext_cofins d
        , empresa e
        , juridica j
        , cod_st cst
        , pessoa p
        , plano_conta pc
    where d.contrsocextcofins_id = en_contrsocextcofins_id
      and e.id                   = d.empresa_id
      and j.pessoa_id            = e.pessoa_id
      and cst.id                 = d.codst_id
      and p.id(+)                = d.pessoa_id
      and pc.id(+)               = d.planoconta_id
    order by d.id;
   --
   cursor c_1620 ( en_contrsocextcofins_id contr_soc_ext_cofins.id%type ) is
   select d.id
        , d.contrsocextcofins_id
        , d.per_apu_cred
        , d.dm_orig_cred
        , d.tipocredpc_id
        , tc.cd cod_cred
        , d.vl_cred
     from dem_cred_desc_contr_ext_cofins d
        , tipo_cred_pc tc
    where d.contrsocextcofins_id = en_contrsocextcofins_id
      and tc.id                  = d.tipocredpc_id
    order by d.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   if gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr') then
      --
      for rec_1600 in c_1600 loop
         exit when c_1600%notfound or (c_1600%notfound) is null;
         --
         vn_fase := 2;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '1600' || '|';
         gl_conteudo := gl_conteudo || lpad(rec_1600.per_apur_ant,6,'0') || '|';
         gl_conteudo := gl_conteudo || rec_1600.nat_cont_rec || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1600.vl_cont_apur, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1600.vl_cred_cofins_desc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1600.vl_cont_dev, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1600.vl_out_ded, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1600.vl_cont_ext, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1600.vl_mul, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1600.vl_jur, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || to_char(rec_1600.dt_recol, 'ddmmrrrr') || '|';
         --
         vn_fase := 3;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1600'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_1600 := nvl(gn_qtde_reg_1600,0) + 1;
         --
         vn_fase := 4;
         -- monta o REGISTRO 1610: DETALHAMENTO DA CONTRIBUIÇÃO SOCIAL EXTEMPORÂNEA - COFINS
         for rec_1610 in c_1610(rec_1600.id) loop
            exit when c_1610%notfound or (c_1610%notfound) is null;
            --
            vn_fase := 5;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || '1610' || '|';
            gl_conteudo := gl_conteudo || rec_1610.cnpj || '|';
            gl_conteudo := gl_conteudo || rec_1610.cod_st || '|';
            gl_conteudo := gl_conteudo || rec_1610.cod_part || '|';
            gl_conteudo := gl_conteudo || to_char(rec_1610.dt_oper, 'ddmmrrrr') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1610.vl_oper, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1610.vl_bc_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1610.aliq_cofins, '9990D9999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1610.vl_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_1610.cod_cta || '|';
            gl_conteudo := gl_conteudo || rec_1610.desc_compl || '|';
            --
            vn_fase := 6;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1610'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_1610 := nvl(gn_qtde_reg_1610,0) + 1;
            --
         end loop;
         --
         vn_fase := 7;
         -- monta o REGISTRO 1620: DEMONSTRAÇÃO DO CRÉDITO A DESCONTAR DA CONTRIBUIÇÃO EXTEMPORÂNEA - COFINS
         for rec_1620 in c_1620(rec_1600.id) loop
            exit when c_1620%notfound or (c_1620%notfound) is null;
            --
            vn_fase := 8;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || '1620' || '|';
            gl_conteudo := gl_conteudo || lpad(rec_1620.per_apu_cred,6,'0') || '|';
            gl_conteudo := gl_conteudo || rec_1620.dm_orig_cred || '|';
            gl_conteudo := gl_conteudo || rec_1620.cod_cred || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1620.vl_cred, '9999999999990D99') || '|';
            --
            vn_fase := 9;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1620'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_1620 := nvl(gn_qtde_reg_1620,0) + 1;
            --
         end loop;
         --
      end loop;
      --
   end if; -- gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr')
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1600 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1600;
-----------------------------------------------------------------
--| Monta o REGISTRO 1500: CONTROLE DE CRÉDITOS FISCAIS - COFINS
-----------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1500 IS
   --
   vn_fase  number := 0;
   --
   vv_cod_part pessoa.cod_part%type;
   vv_cod_mod  mod_fiscal.cod_mod%type;
   vv_ser      nota_fiscal.serie%type;
   vn_sub_ser  nota_fiscal.sub_serie%type;
   vn_num_doc  nota_fiscal.nro_nf%type;
   vv_chv_nfe  nota_fiscal.nro_chave_nfe%type;
   vv_cod_item item.cod_item%type;
   --
   cursor c_1500 is
-- sdo>0 em períodos anteriores
   select ccf.id
        , ccf.empresa_id
        , ( lpad(ccf.mes, 2, '0') || lpad(ccf.ano, 4, '0') ) per_apu_cred
        , ccf.dm_situacao
        , ccf.dm_orig_cred
        , ccf.cnpj_suc
        , ccf.tipocredpc_id
        , tc.cd cod_cred
        , ccf.vl_cred_apu
        , ccf.vl_cred_ext_apu
        , ccf.vl_tot_cred_apu
        , ccf.vl_cred_desc_pa_ant
        , ccf.vl_cred_per_pa_ant
        , ccf.vl_cred_dcomp_pa_ant
        , ccf.vl_sd_cred_disp_efd
        , ccf.vl_cred_desc_efd
        , ccf.vl_cred_per_efd
        , ccf.vl_cred_dcomp_efd
        , ccf.vl_cred_trans
        , ccf.vl_cred_out
        , ccf.vl_sld_cred_fim
     from contr_cred_fiscal_cofins ccf
        , tipo_cred_pc             tc
    where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
      and ccf.dm_situacao            = 3 -- processada
      and nvl(ccf.vl_sld_cred_fim,0) > 0
      and tc.id = ccf.tipocredpc_id
   union
-- sdo=0 no período em questão
   select ccf.id
        , ccf.empresa_id
        , ( lpad(ccf.mes, 2, '0') || lpad(ccf.ano, 4, '0') ) per_apu_cred
        , ccf.dm_situacao
        , ccf.dm_orig_cred
        , ccf.cnpj_suc
        , ccf.tipocredpc_id
        , tc.cd cod_cred
        , ccf.vl_cred_apu
        , ccf.vl_cred_ext_apu
        , ccf.vl_tot_cred_apu
        , ra.para_vl_cred_desc_pa_ant
        , ccf.vl_cred_per_pa_ant
        , ccf.vl_cred_dcomp_pa_ant
        , ra.para_vl_sd_cred_disp_efd
        , ra.para_vl_cred_desc_efd
        , ccf.vl_cred_per_efd
        , ccf.vl_cred_dcomp_efd
        , ccf.vl_cred_trans
        , ccf.vl_cred_out
        , ra.para_vl_sld_cred_fim
     from contr_cred_fiscal_cofins ccf
        , tipo_cred_pc             tc
        , relac_apur_contr_cofins  ra
    where ccf.empresa_id              = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao             = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
      and nvl(ccf.vl_sld_cred_fim,0)  = 0
      and tc.id                       = ccf.tipocredpc_id
      and ra.contrcredfiscalcofins_id = ccf.id
      and to_date((ra.mes||'/'||ra.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
   union
 -- sdo=0 em períodos posteriores
   select ccf.id
        , ccf.empresa_id
        , ( lpad(ccf.mes, 2, '0') || lpad(ccf.ano, 4, '0') ) per_apu_cred
        , ccf.dm_situacao
        , ccf.dm_orig_cred
        , ccf.cnpj_suc
        , ccf.tipocredpc_id
        , tc.cd cod_cred
        , ccf.vl_cred_apu
        , ccf.vl_cred_ext_apu
        , ccf.vl_tot_cred_apu
        , ra.para_vl_cred_desc_pa_ant
        , ccf.vl_cred_per_pa_ant
        , ccf.vl_cred_dcomp_pa_ant
        , ra.de_vl_sd_cred_disp_efd
        , ra.de_vl_cred_desc_efd
        , ccf.vl_cred_per_efd
        , ccf.vl_cred_dcomp_efd
        , ccf.vl_cred_trans
        , ccf.vl_cred_out
        , ra.de_vl_sld_cred_fim
     from contr_cred_fiscal_cofins ccf
        , tipo_cred_pc             tc
        , relac_apur_contr_cofins  ra
    where ccf.empresa_id              = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao             = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
      and nvl(ccf.vl_sld_cred_fim,0)  = 0
      and tc.id                       = ccf.tipocredpc_id
      and ra.contrcredfiscalcofins_id = ccf.id
      and to_date((ra.mes||'/'||ra.ano),'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini

      and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                        from relac_apur_contr_cofins rc
                       where rc.contrcredfiscalcofins_id = ccf.id
                         and to_date((rc.mes||'/'||rc.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
    order by 2 -- ccf.empresa_id
        , 3 desc; -- to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') desc;
   --
   cursor c_1501 ( en_contrcredfiscalcofins_id contr_cred_fiscal_cofins.id%type ) is
   select ace.id
        , ace.contrcredfiscalcofins_id
        , ace.notafiscal_id
        , ace.itemnf_id
        , ace.dt_oper
        , ace.vl_oper
        , ace.cfop_id
        , c.cd cfop
        , ace.basecalccredpc_id
        , bcc.cd nat_bc_cred
        , ace.dm_ind_orig_cred
        , ace.codst_id
        , cst.cod_st
        , ace.vl_bc_cofins
        , ace.aliq_cofins
        , ace.vl_cofins
        , ace.planoconta_id
        , pc.cod_cta
        , ace.centrocusto_id
        , cc.cod_ccus
        , ace.desc_compl
        , ace.per_escrit
        , ace.cnpj
        , ace.vl_cred_cofins_trib_mi
        , ace.vl_cred_cofins_nt_mi
        , ace.vl_cred_cofins_exp
     from apur_cred_ext_cofins ace
        , cfop c
        , base_calc_cred_pc bcc
        , cod_st cst
        , plano_conta pc
        , centro_custo cc
    where ace.contrcredfiscalcofins_id = en_contrcredfiscalcofins_id
      and c.id                         = ace.cfop_id
      and bcc.id                       = ace.basecalccredpc_id
      and cst.id                       = ace.codst_id
      and pc.id(+)                     = ace.planoconta_id
      and cc.id(+)                     = ace.centrocusto_id
    order by ace.id;
   --
BEGIN
   --
   vn_fase := 1;
   gl_conteudo := null;
   --
   for rec_1500 in c_1500 loop
      exit when c_1500%notfound or (c_1500%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1500' || '|';
      gl_conteudo := gl_conteudo || lpad(rec_1500.per_apu_cred,6,'0') || '|';
      gl_conteudo := gl_conteudo || rec_1500.dm_orig_cred || '|';
      gl_conteudo := gl_conteudo || rec_1500.cnpj_suc || '|';
      gl_conteudo := gl_conteudo || rec_1500.cod_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_ext_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_tot_cred_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_desc_pa_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_per_pa_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_dcomp_pa_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_sd_cred_disp_efd, '9999999999990D99') || '|';
      --
      if nvl(rec_1500.vl_cred_desc_efd,0) = 0 then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_desc_efd, '9999999999990D99') || '|';
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_per_efd, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_dcomp_efd, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_trans, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_cred_out, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1500.vl_sld_cred_fim, '9999999999990D99') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1500'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_1500 := nvl(gn_qtde_reg_1500,0) + 1;
      --
      vn_fase := 4;
      --
      if gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr') and
         nvl(rec_1500.vl_cred_ext_apu,0) > 0 then
         --
         vn_fase := 5;
         -- monta o REGISTRO 1501: APURAÇÃO DE CRÉDITO EXTEMPORÂNEO - DOCUMENTOS E OPERAÇÕES DE PERÍODOS ANTERIORES - COFINS
         for rec_1501 in c_1501(rec_1500.id) loop
            exit when c_1501%notfound or (c_1501%notfound) is null;
            --
            vn_fase := 6;
            -- busca nota fiscal
            begin
               --
               select p.cod_part
                    , mf.cod_mod
                    , nf.serie
                    , nf.sub_serie
                    , nf.nro_nf
                    , nf.nro_chave_nfe
                 into vv_cod_part
                    , vv_cod_mod
                    , vv_ser
                    , vn_sub_ser
                    , vn_num_doc
                    , vv_chv_nfe
                 from tmp_nota_fiscal nf
                    , pessoa p
                    , mod_fiscal mf
                where nf.id   = rec_1501.notafiscal_id
                  and p.id(+) = nf.pessoa_id
                  and mf.id   = nf.modfiscal_id;
               --
            exception
               when others then
                  vv_cod_part := null;
                  vv_cod_mod  := null;
                  vv_ser      := null;
                  vn_sub_ser  := null;
                  vn_num_doc  := null;
                  vv_chv_nfe  := null;
            end;
            --
            vn_fase := 7;
            -- busca item da nota fiscal
            begin
               --
               select inf.cod_item
                 into vv_cod_item
                 from tmp_item_nota_fiscal inf
                where inf.id = rec_1501.itemnf_id;
               --
            exception
               when others then
                  vv_cod_item := null;
            end;
            --
            vn_fase := 8;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || '1501' || '|';
            gl_conteudo := gl_conteudo || vv_cod_part || '|';
            gl_conteudo := gl_conteudo || vv_cod_item || '|';
            gl_conteudo := gl_conteudo || vv_cod_mod || '|';
            gl_conteudo := gl_conteudo || vv_ser || '|';
            gl_conteudo := gl_conteudo || vn_sub_ser || '|';
            gl_conteudo := gl_conteudo || vn_num_doc || '|';
            gl_conteudo := gl_conteudo || to_char(rec_1501.dt_oper, 'ddmmrrrr') || '|';
            gl_conteudo := gl_conteudo || vv_chv_nfe || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1501.vl_oper, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_1501.cfop || '|';
            gl_conteudo := gl_conteudo || rec_1501.nat_bc_cred || '|';
            gl_conteudo := gl_conteudo || rec_1501.dm_ind_orig_cred || '|';
            gl_conteudo := gl_conteudo || rec_1501.cod_st || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1501.vl_bc_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1501.aliq_cofins, '9990D9999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1501.vl_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_1501.cod_cta || '|';
            gl_conteudo := gl_conteudo || rec_1501.cod_ccus || '|';
            gl_conteudo := gl_conteudo || rec_1501.desc_compl || '|';
            --
            if rec_1501.per_escrit is null then
               gl_conteudo := gl_conteudo || '|';
            else
               gl_conteudo := gl_conteudo || lpad(rec_1501.per_escrit,6,'0') || '|';
            end if;
            --
            gl_conteudo := gl_conteudo || rec_1501.cnpj || '|';
            --
            vn_fase := 9;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1501'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_1501 := nvl(gn_qtde_reg_1501,0) + 1;
            --
            vn_fase := 10;
            --
            if rec_1501.cod_st in ('53', '54', '55', '56', '63', '64', '65', '66') then
               --
               vn_fase := 11;
               -- monta o REGISTRO 1502: DETALHAMENTO DO CRÉDITO EXTEMPORANEO VINCULADO A MAIS DE UM TIPO DE RECEITA - COFINS
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || '1502' || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_1501.vl_cred_cofins_trib_mi, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_1501.vl_cred_cofins_nt_mi, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_1501.vl_cred_cofins_exp, '9999999999990D99') || '|';
               --
               vn_fase := 12;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1502'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_1502 := nvl(gn_qtde_reg_1502,0) + 1;
               --
            end if;
            --
         end loop;
         --
      end if; -- gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr') e nvl(rec_1500.vl_cred_ext_apu,0) > 0
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1500 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1500;
-----------------------------------------------------------------------------
--| Monta o REGISTRO 1300: CONTROLE DOS VALORES RETIDOS NA FONTE - PIS/PASEP
-----------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1300 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1300 is
   select cvrf.id
        , cvrf.empresa_id
        , cvrf.ano
        , cvrf.mes
        , cvrf.dm_situacao
        , cvrf.dm_ind_nat_ret
        , cvrf.per_rec_ret
        , cvrf.vl_ret_apu
        , cvrf.vl_ret_ded
        , cvrf.vl_ret_per
        , cvrf.vl_ret_dcomp
        , cvrf.vl_sld_ret
     from contr_vlr_ret_fonte_pis cvrf
    where cvrf.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cvrf.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cvrf.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cvrf.dm_situacao = 3 -- processada
    order by cvrf.empresa_id, cvrf.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_1300 in c_1300 loop
      exit when c_1300%notfound or (c_1300%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1300' || '|';
      gl_conteudo := gl_conteudo || rec_1300.dm_ind_nat_ret || '|';
      gl_conteudo := gl_conteudo || lpad(rec_1300.per_rec_ret,6,'0') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1300.vl_ret_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1300.vl_ret_ded, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1300.vl_ret_per, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1300.vl_ret_dcomp, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1300.vl_sld_ret, '9999999999990D99') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1300'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_1300 := nvl(gn_qtde_reg_1300,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1300 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1300;
------------------------------------------------------------------------
--| Monta o REGISTRO 1200: CONTRIBUIÇÃO SOCIAL EXTEMPORÂNEA - PIS/PASEP
------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1200 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1200 is
   select cse.id
        , cse.empresa_id
        , cse.ano
        , cse.mes
        , cse.dm_situacao
        , cse.per_apur_ant
        , cse.contrsocapurpc_id
        , csa.cd nat_cont_rec
        , cse.vl_cont_apur
        , cse.vl_cred_pis_desc
        , cse.vl_cont_dev
        , cse.vl_out_ded
        , cse.vl_cont_ext
        , cse.vl_mul
        , cse.vl_jur
        , cse.dt_recol
     from contr_soc_ext_pis cse
        , contr_soc_apur_pc csa
    where cse.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cse.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cse.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cse.dm_situacao = 3 -- processada
      and csa.id          = cse.contrsocapurpc_id
    order by cse.empresa_id, cse.id;
   --
   cursor c_1210 ( en_contrsocextpis_id contr_soc_ext_pis.id%type ) is
   select d.id
        , d.contrsocextpis_id
        , d.empresa_id
        , ( lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') || lpad(j.dig_cnpj, 2, '0') ) cnpj
        , d.codst_id
        , cst.cod_st
        , d.pessoa_id
        , p.cod_part
        , d.dt_oper
        , d.vl_oper
        , d.vl_bc_pis
        , d.aliq_pis
        , d.vl_pis
        , d.planoconta_id
        , pc.cod_cta
        , d.desc_compl
     from det_contr_soc_ext_pis  d
        , cod_st                 cst
        , pessoa                 p
        , plano_conta            pc
        , empresa                e
        , juridica               j
    where d.contrsocextpis_id = en_contrsocextpis_id
      and cst.id              = d.codst_id
      and p.id(+)             = d.pessoa_id
      and pc.id(+)            = d.planoconta_id
      and e.id                = d.empresa_id
      and j.pessoa_id         = e.pessoa_id
    order by d.id;
   --
   cursor c_1220 ( en_contrsocextpis_id contr_soc_ext_pis.id%type ) is
   select d.id
        , d.contrsocextpis_id
        , d.per_apu_cred
        , d.dm_orig_cred
        , d.tipocredpc_id
        , tc.cd cod_cred
        , d.vl_cred
     from dem_cred_desc_contr_ext_pis d
        , tipo_cred_pc tc
    where d.contrsocextpis_id = en_contrsocextpis_id
      and tc.id               = d.tipocredpc_id
    order by d.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   if gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr') then
      --
      for rec_1200 in c_1200 loop
         exit when c_1200%notfound or (c_1200%notfound) is null;
         --
         vn_fase := 2;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '1200' || '|';
         gl_conteudo := gl_conteudo || lpad(rec_1200.per_apur_ant,6,'0') || '|';
         gl_conteudo := gl_conteudo || rec_1200.nat_cont_rec || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1200.vl_cont_apur, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1200.vl_cred_pis_desc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1200.vl_cont_dev, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1200.vl_out_ded, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1200.vl_cont_ext, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1200.vl_mul, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1200.vl_jur, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || to_char(rec_1200.dt_recol, 'ddmmrrrr') || '|';
         --
         vn_fase := 3;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1200'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_1200 := nvl(gn_qtde_reg_1200,0) + 1;
         --
         vn_fase := 4;
         -- monta o REGISTRO 1210: DETALHAMENTO DA CONTRIBUIÇÃO SOCIAL EXTEMPORÂNEA - PIS/PASEP
         for rec_1210 in c_1210(rec_1200.id) loop
            exit when c_1210%notfound or (c_1210%notfound) is null;
            --
            vn_fase := 5;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || '1210' || '|';
            gl_conteudo := gl_conteudo || rec_1210.cnpj || '|';
            gl_conteudo := gl_conteudo || rec_1210.cod_st || '|';
            gl_conteudo := gl_conteudo || rec_1210.cod_part || '|';
            gl_conteudo := gl_conteudo || to_char(rec_1210.dt_oper, 'ddmmrrrr') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1210.vl_oper, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1210.vl_bc_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1210.aliq_pis, '9990D9999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1210.vl_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_1210.cod_cta || '|';
            gl_conteudo := gl_conteudo || rec_1210.desc_compl || '|';
            --
            vn_fase := 6;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1210'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_1210 := nvl(gn_qtde_reg_1210,0) + 1;
            --
         end loop;
         --
         vn_fase := 7;
         -- monta o REGISTRO 1220: DEMONSTRAÇÃO DO CRÉDITO A DESCONTAR DA CONTRIBUIÇÃO EXTEMPORÂNEA - PIS/PASEP
         for rec_1220 in c_1220(rec_1200.id) loop
            exit when c_1220%notfound or (c_1220%notfound) is null;
            --
            vn_fase := 8;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || '1220' || '|';
            gl_conteudo := gl_conteudo || lpad(rec_1220.per_apu_cred,6,'0') || '|';
            gl_conteudo := gl_conteudo || rec_1220.dm_orig_cred || '|';
            gl_conteudo := gl_conteudo || rec_1220.cod_cred || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1220.vl_cred, '9999999999990D99') || '|';
            --
            vn_fase := 9;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1220'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_1220 := nvl(gn_qtde_reg_1220,0) + 1;
            --
         end loop;
         --
      end loop;
      --
   end if; -- gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr')
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1200 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1200;
--------------------------------------------------------------------
--| Monta o REGISTRO 1100: CONTROLE DE CRÉDITOS FISCAIS - PIS/PASEP
--------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1100 IS
   --
   vn_fase     number := 0;
   --
   --vv_cod_part pessoa.cod_part%type;
   vv_cod_mod  mod_fiscal.cod_mod%type;
   vv_ser      nota_fiscal.serie%type;
   vn_sub_ser  nota_fiscal.sub_serie%type;
   vn_num_doc  nota_fiscal.nro_nf%type;
   vv_chv_nfe  nota_fiscal.nro_chave_nfe%type;
   vv_cod_item item.cod_item%type;
   vn_pessoa_id pessoa.id%type;
   --
   cursor c_1100 is
-- sdo>0 em períodos anteriores
   select ccf.id
        , ccf.empresa_id
        , ( lpad(ccf.mes, 2, '0') || lpad(ccf.ano, 4, '0') ) per_apu_cred
        , ccf.dm_situacao
        , ccf.dm_orig_cred
        , ccf.cnpj_suc
        , ccf.tipocredpc_id
        , tc.cd cod_cred
        , ccf.vl_cred_apu
        , ccf.vl_cred_ext_apu
        , ccf.vl_tot_cred_apu
        , ccf.vl_cred_desc_pa_ant
        , ccf.vl_cred_per_pa_ant
        , ccf.vl_cred_dcomp_pa_ant
        , ccf.vl_sd_cred_disp_efd
        , ccf.vl_cred_desc_efd
        , ccf.vl_cred_per_efd
        , ccf.vl_cred_dcomp_efd
        , ccf.vl_cred_trans
        , ccf.vl_cred_out
        , ccf.vl_sld_cred_fim
     from contr_cred_fiscal_pis ccf
        , tipo_cred_pc          tc
    where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
      and ccf.dm_situacao            = 3 -- processada
      and nvl(ccf.vl_sld_cred_fim,0) > 0
      and tc.id = ccf.tipocredpc_id
   union
-- sdo=0 no período em questão
   select ccf.id
        , ccf.empresa_id
        , ( lpad(ccf.mes, 2, '0') || lpad(ccf.ano, 4, '0') ) per_apu_cred
        , ccf.dm_situacao
        , ccf.dm_orig_cred
        , ccf.cnpj_suc
        , ccf.tipocredpc_id
        , tc.cd cod_cred
        , ccf.vl_cred_apu
        , ccf.vl_cred_ext_apu
        , ccf.vl_tot_cred_apu
        , ra.para_vl_cred_desc_pa_ant
        , ccf.vl_cred_per_pa_ant
        , ccf.vl_cred_dcomp_pa_ant
        , ra.para_vl_sd_cred_disp_efd
        , ra.para_vl_cred_desc_efd
        , ccf.vl_cred_per_efd
        , ccf.vl_cred_dcomp_efd
        , ccf.vl_cred_trans
        , ccf.vl_cred_out
        , ra.para_vl_sld_cred_fim
     from contr_cred_fiscal_pis ccf
        , tipo_cred_pc          tc
        , relac_apur_contr_pis  ra
    where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao            = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
      and nvl(ccf.vl_sld_cred_fim,0) = 0
      and tc.id                      = ccf.tipocredpc_id
      and ra.contrcredfiscalpis_id   = ccf.id
      and to_date((ra.mes||'/'||ra.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
   union
-- sdo=0 em períodos posteriores
   select ccf.id
        , ccf.empresa_id
        , ( lpad(ccf.mes, 2, '0') || lpad(ccf.ano, 4, '0') ) per_apu_cred
        , ccf.dm_situacao
        , ccf.dm_orig_cred
        , ccf.cnpj_suc
        , ccf.tipocredpc_id
        , tc.cd cod_cred
        , ccf.vl_cred_apu
        , ccf.vl_cred_ext_apu
        , ccf.vl_tot_cred_apu
        , ra.para_vl_cred_desc_pa_ant
        , ccf.vl_cred_per_pa_ant
        , ccf.vl_cred_dcomp_pa_ant
        , ra.de_vl_sd_cred_disp_efd
        , ra.de_vl_cred_desc_efd
        , ccf.vl_cred_per_efd
        , ccf.vl_cred_dcomp_efd
        , ccf.vl_cred_trans
        , ccf.vl_cred_out
        , ra.de_vl_sld_cred_fim
     from contr_cred_fiscal_pis ccf
        , tipo_cred_pc          tc
        , relac_apur_contr_pis  ra
    where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao            = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
      and nvl(ccf.vl_sld_cred_fim,0) = 0
      and tc.id                      = ccf.tipocredpc_id
      and ra.contrcredfiscalpis_id   = ccf.id
      and to_date((ra.mes||'/'||ra.ano),'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
      and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                        from relac_apur_contr_pis rc
                       where rc.contrcredfiscalpis_id = ccf.id
                         and to_date((rc.mes||'/'||rc.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
    order by 2 -- ccf.empresa_id
        , 3 desc; -- to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') desc;
   --
   cursor c_1101 ( en_contrcredfiscalpis_id contr_cred_fiscal_pis.id%type ) is
   select ace.id
        , ace.contrcredfiscalpis_id
        , ace.notafiscal_id
        , ace.itemnf_id
        , ace.dt_oper
        , ace.vl_oper
        , ace.cfop_id
        , c.cd cfop
        , ace.basecalccredpc_id
        , bcc.cd nat_bc_cred
        , ace.dm_ind_orig_cred
        , ace.codst_id
        , cst.cod_st
        , ace.vl_bc_pis
        , ace.aliq_pis
        , ace.vl_pis
        , ace.planoconta_id
        , pc.cod_cta
        , ace.centrocusto_id
        , cc.cod_ccus
        , ace.desc_compl
        , ace.per_escrit
        , ace.cnpj
        , ace.vl_cred_pis_trib_mi
        , ace.vl_cred_pis_nt_mi
        , ace.vl_cred_pis_exp
     from apur_cred_ext_pis ace
        , cfop c
        , base_calc_cred_pc bcc
        , cod_st cst
        , plano_conta pc
        , centro_custo cc
    where ace.contrcredfiscalpis_id = en_contrcredfiscalpis_id
      and c.id                      = ace.cfop_id
      and bcc.id                    = ace.basecalccredpc_id
      and cst.id                    = ace.codst_id
      and pc.id(+)                  = ace.planoconta_id
      and cc.id(+)                  = ace.centrocusto_id
    order by ace.id;
   --
BEGIN
   --
   vn_fase := 1;
   gl_conteudo := null;
   --
   for rec_1100 in c_1100 loop
      exit when c_1100%notfound or (c_1100%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1100' || '|';
      gl_conteudo := gl_conteudo || lpad(rec_1100.per_apu_cred,6,'0') || '|';
      gl_conteudo := gl_conteudo || rec_1100.dm_orig_cred || '|';
      gl_conteudo := gl_conteudo || rec_1100.cnpj_suc || '|';
      gl_conteudo := gl_conteudo || rec_1100.cod_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_ext_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_tot_cred_apu, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_desc_pa_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_per_pa_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_dcomp_pa_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_sd_cred_disp_efd, '9999999999990D99') || '|';
      --
      if nvl(rec_1100.vl_cred_desc_efd,0) = 0 then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_desc_efd, '9999999999990D99') || '|';
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_per_efd, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_dcomp_efd, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_trans, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_cred_out, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_1100.vl_sld_cred_fim, '9999999999990D99') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1100'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_1100 := nvl(gn_qtde_reg_1100,0) + 1;
      --
      vn_fase := 4;
      --
      if gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr') and
         nvl(rec_1100.vl_cred_ext_apu,0) > 0 then
         --
         vn_fase := 5;
         -- monta o REGISTRO 1101: APURAÇÃO DE CRÉDITO EXTEMPORÂNEO - DOCUMENTOS E OPERAÇÕES DE PERÍODOS ANTERIORES - PIS/PASEP
         for rec_1101 in c_1101(rec_1100.id) loop
            exit when c_1101%notfound or (c_1101%notfound) is null;
            --
            vn_fase := 6;
            -- busca nota fiscal
            begin
               --
               select --p.cod_part
                      mf.cod_mod
                    , nf.serie
                    , nf.sub_serie
                    , nf.nro_nf
                    , nf.nro_chave_nfe
                    , nf.pessoa_id					
                 --into vv_cod_part 
                 into vv_cod_mod
                    , vv_ser
                    , vn_sub_ser
                    , vn_num_doc
                    , vv_chv_nfe
                    , vn_pessoa_id					
                 from tmp_nota_fiscal nf
                    --, pessoa p
                    , mod_fiscal mf
                where nf.id   = rec_1101.notafiscal_id
                  --and p.id(+) = nf.pessoa_id
                  and mf.id   = nf.modfiscal_id;
               --
            exception
               when others then
                  --vv_cod_part  := null;
                  vv_cod_mod   := null;
                  vv_ser       := null;
                  vn_sub_ser   := null;
                  vn_num_doc   := null;
                  vv_chv_nfe   := null;
                  vn_pessoa_id := null;				  
            end;
            --
            vn_fase := 7;
            -- busca item da nota fiscal
            begin
               --
               select inf.cod_item
                 into vv_cod_item
                 from tmp_item_nota_fiscal inf
                where inf.id = rec_1101.itemnf_id;
               --
            exception
               when others then
                  vv_cod_item := null;
            end;
            --
            vn_fase := 8;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || '1101' || '|';
            --gl_conteudo := gl_conteudo || vv_cod_part || '|';
            gl_conteudo := gl_conteudo || trim( pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part ( en_pessoa_id         => vn_pessoa_id
                                                                                             , en_tipo_retorna       => 1  -- 0-Pessoa_id / 1-Cod_Part    
                                                                                             , en_origem_dado_pessoa => gn_origem_dado_pessoa																						 
                                                                                             , en_notafiscal_id      => rec_1101.notafiscal_id ) ) || '|';
            gl_conteudo := gl_conteudo || vv_cod_item || '|';
            gl_conteudo := gl_conteudo || vv_cod_mod || '|';
            gl_conteudo := gl_conteudo || vv_ser || '|';
            gl_conteudo := gl_conteudo || vn_sub_ser || '|';
            gl_conteudo := gl_conteudo || vn_num_doc || '|';
            gl_conteudo := gl_conteudo || to_char(rec_1101.dt_oper, 'ddmmrrrr') || '|';
            gl_conteudo := gl_conteudo || vv_chv_nfe || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1101.vl_oper, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_1101.cfop || '|';
            gl_conteudo := gl_conteudo || rec_1101.nat_bc_cred || '|';
            gl_conteudo := gl_conteudo || rec_1101.dm_ind_orig_cred || '|';
            gl_conteudo := gl_conteudo || rec_1101.cod_st || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1101.vl_bc_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1101.aliq_pis, '9990D9999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_1101.vl_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_1101.cod_cta || '|';
            gl_conteudo := gl_conteudo || rec_1101.cod_ccus || '|';
            gl_conteudo := gl_conteudo || rec_1101.desc_compl || '|';
            --
            if rec_1101.per_escrit is null then
               gl_conteudo := gl_conteudo || '|';
            else
               gl_conteudo := gl_conteudo || lpad(rec_1101.per_escrit,6,'0') || '|';
            end if;
            --
            gl_conteudo := gl_conteudo || rec_1101.cnpj || '|';
            --
            vn_fase := 9;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1101'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_1101 := nvl(gn_qtde_reg_1101,0) + 1;
            --
            vn_fase := 10;
            --
            if rec_1101.cod_st in ('53', '54', '55', '56', '63', '64', '65', '66') then
               --
               vn_fase := 11;
               -- monta o REGISTRO 1102: DETALHAMENTO DO CRÉDITO EXTEMPORANEO VINCULADO A MAIS DE UM TIPO DE RECEITA - PIS/PASEP
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || '1102' || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_1101.vl_cred_pis_trib_mi, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_1101.vl_cred_pis_nt_mi, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_1101.vl_cred_pis_exp, '9999999999990D99') || '|';
               --
               vn_fase := 12;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1102'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_1102 := nvl(gn_qtde_reg_1102,0) + 1;
               --
            end if;
            --
         end loop;
         --
      end if; -- gt_row_abertura_efd_pc.dt_ini <= to_date('31/07/2013','dd/mm/rrrr') e nvl(rec_1100.vl_cred_ext_apu,0) > 0
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1100 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1100;
---------------------------------------------------------------------------
--| Monta o REGISTRO 1020: PROCESSO REFERENCIADO - PROCESSO ADMINISTRATIVO
---------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1020 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1020 is
   select pa.id
        , pa.empresa_id
        , pa.dt_ini
        , pa.dt_fin
        , pa.dm_situacao
        , pa.num_proc
        , pa.dm_ind_nat_acao
        , pa.dt_dec_adm
     from proc_adm_pc pa
    where pa.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and pa.dt_ini     >= gt_row_abertura_efd_pc.dt_ini
      and pa.dt_fin     <= gt_row_abertura_efd_pc.dt_fin
      and pa.dm_situacao = 3 -- processada
    order by pa.empresa_id, pa.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_1020 in c_1020 loop
      exit when c_1020%notfound or (c_1020%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1020' || '|';
      gl_conteudo := gl_conteudo || rec_1020.num_proc || '|';
      gl_conteudo := gl_conteudo || rec_1020.dm_ind_nat_acao || '|';
      gl_conteudo := gl_conteudo || to_char(rec_1020.dt_dec_adm, 'ddmmrrrr') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1020'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_1020 := nvl(gn_qtde_reg_1020,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1020 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1020;
----------------------------------------------------------------------------------------------------
--| Monta o REGISTRO 1050: Detalhamento de Ajustes de Base de Cálculo - Valores Extra Apuração
----------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1050 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1050 is
   select da.dt_ref
        , da.codajbccontr_id
        , da.cnpj
        , da.vl_aj_tot
        , da.vl_aj_cst01
        , da.vl_aj_cst02
        , da.vl_aj_cst03
        , da.vl_aj_cst04
        , da.vl_aj_cst05
        , da.vl_aj_cst06
        , da.vl_aj_cst07
        , da.vl_aj_cst08
        , da.vl_aj_cst09
        , da.vl_aj_cst49
        , da.vl_aj_cst99
        , da.dm_ind_aprop
        , da.num_rec
        , da.info_compl
     from det_ajus_bc_extra_apur da
    where da.empresa_id = gt_row_abertura_efd_pc.empresa_id
      and da.dt_ref     between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_1050 in c_1050 loop
      exit when c_1050%notfound or (c_1050%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1050'                   || '|';
      gl_conteudo := gl_conteudo || to_char(rec_1050.dt_ref, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || fkg_ret_cod_ajuste(rec_1050.codajbccontr_id) || '|';
      gl_conteudo := gl_conteudo || rec_1050.cnpj            || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_tot       || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst01     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst02     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst03     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst04     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst05     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst06     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst07     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst08     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst09     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst49     || '|';
      gl_conteudo := gl_conteudo || rec_1050.vl_aj_cst99     || '|';
      gl_conteudo := gl_conteudo || rec_1050.dm_ind_aprop    || '|';
      gl_conteudo := gl_conteudo || rec_1050.num_rec         || '|';
      gl_conteudo := gl_conteudo || rec_1050.info_compl      || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1050'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_1050 := nvl(gn_qtde_reg_1050,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1050 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1050;

-----------------------------------------------------------------
--| Monta o REGISTRO 1010: PROCESSO REFERENCIADO - AÇÃO JUDICIAL
-----------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1010 IS
   --
   vn_fase  number := 0;
   --
   cursor c_1010 is
   select aj.id
        , aj.empresa_id
        , aj.dt_ini
        , aj.dt_fin
        , aj.dm_situacao
        , aj.num_proc
        , aj.id_sec_jud
        , aj.id_vara
        , aj.dm_ind_nat_acao
        , aj.desc_dec_jud
        , aj.dt_sent_jud
     from acao_judic_pc aj
    where aj.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and aj.dt_ini     >= gt_row_abertura_efd_pc.dt_ini
      and aj.dt_fin     <= gt_row_abertura_efd_pc.dt_fin
      and aj.dm_situacao = 3 -- processada
    order by aj.empresa_id, aj.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_1010 in c_1010 loop
      exit when c_1010%notfound or (c_1010%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '1010' || '|';
      gl_conteudo := gl_conteudo || rec_1010.num_proc || '|';
      gl_conteudo := gl_conteudo || rec_1010.id_sec_jud || '|';
      gl_conteudo := gl_conteudo || rec_1010.id_vara || '|';
      gl_conteudo := gl_conteudo || rec_1010.dm_ind_nat_acao || '|';
      gl_conteudo := gl_conteudo || rec_1010.desc_dec_jud || '|';
      gl_conteudo := gl_conteudo || to_char(rec_1010.dt_sent_jud, 'ddmmrrrr') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1010'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_1010 := nvl(gn_qtde_reg_1010,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1010 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1010;
-----------------------------------------------
--| Monta o REGISTRO 1001: ABERTURA DO BLOCO 1
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_1001 IS
   --
   vn_qtde_1010 number := 0;
   vn_qtde_1020 number := 0;
   vn_qtde_1100 number := 0;
   vn_qtde_1200 number := 0;
   vn_qtde_1300 number := 0;
   vn_qtde_1500 number := 0;
   vn_qtde_1600 number := 0;
   vn_qtde_1700 number := 0;
   vn_qtde_1800 number := 0;
   vn_qtde_1900 number := 0;
   --
BEGIN
   --
   begin
      --
   select count(1)
     into vn_qtde_1010
     from acao_judic_pc aj
    where aj.empresa_id     = gt_row_abertura_efd_pc.empresa_id
      and aj.dt_ini     >= gt_row_abertura_efd_pc.dt_ini
      and aj.dt_fin     <= gt_row_abertura_efd_pc.dt_fin
      and aj.dm_situacao    = 3; -- processada
      --
   exception
      when others then
         vn_qtde_1010 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_1020
     from proc_adm_pc pa
    where pa.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and pa.dt_ini     >= gt_row_abertura_efd_pc.dt_ini
      and pa.dt_fin     <= gt_row_abertura_efd_pc.dt_fin
      and pa.dm_situacao = 3; -- processada
      --
   exception
      when others then
         vn_qtde_1020 := 0;
   end;
   --
   begin
      --
   select (qtde_a.qtde + qtde_b.qtde + qtde_c.qtde)
     into vn_qtde_1100
     from (select count(*) qtde -- sdo>0 em períodos anteriores
             from contr_cred_fiscal_pis ccf
            where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
              and ccf.dm_situacao            = 3 -- processada
              and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
              and nvl(ccf.vl_sld_cred_fim,0) > 0) qtde_a
        , (select count(*) qtde -- sdo=0 no período em questão
             from contr_cred_fiscal_pis ccf
                , relac_apur_contr_pis  ra
            where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
              and ccf.dm_situacao            = 3 -- processada
              and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
              and nvl(ccf.vl_sld_cred_fim,0) = 0
              and ra.contrcredfiscalpis_id   = ccf.id
              and to_date((ra.mes||'/'||ra.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini) qtde_b
        , (select count(*) qtde -- sdo=0 em períodos posteriores
             from contr_cred_fiscal_pis ccf
                , relac_apur_contr_pis  ra
            where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
              and ccf.dm_situacao            = 3 -- processada
              and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
              and nvl(ccf.vl_sld_cred_fim,0) = 0
              and ra.contrcredfiscalpis_id   = ccf.id
              and to_date((ra.mes||'/'||ra.ano),'mm/rrrr')    > gt_row_abertura_efd_pc.dt_ini
              and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                                from relac_apur_contr_pis rc
                               where rc.contrcredfiscalpis_id = ccf.id
                                 and to_date((rc.mes||'/'||rc.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)) qtde_c;
      --
   exception
      when others then
         vn_qtde_1100 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_1200
     from contr_soc_ext_pis cse
        , contr_soc_apur_pc csa
    where cse.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cse.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cse.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cse.dm_situacao = 3; -- processada
      --
   exception
      when others then
         vn_qtde_1200 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_1300
     from contr_vlr_ret_fonte_pis cvrf
    where cvrf.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cvrf.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cvrf.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cvrf.dm_situacao = 3; -- processada
      --
   exception
      when others then
         vn_qtde_1300 := 0;
   end;
   --
   begin
      --
   select (qtde_a.qtde + qtde_b.qtde + qtde_c.qtde)
     into vn_qtde_1500
     from (select count(*) qtde -- sdo>0 em períodos anteriores
             from contr_cred_fiscal_cofins ccf
            where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
              and ccf.dm_situacao            = 3 -- processada
              and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
              and nvl(ccf.vl_sld_cred_fim,0) > 0) qtde_a
        , (select count(*) qtde -- sdo=0 no período em questão
             from contr_cred_fiscal_cofins ccf
                , relac_apur_contr_cofins  ra
            where ccf.empresa_id              = gt_row_abertura_efd_pc.empresa_id
              and ccf.dm_situacao             = 3 -- processada
              and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
              and nvl(ccf.vl_sld_cred_fim,0)  = 0
              and ra.contrcredfiscalcofins_id = ccf.id
              and to_date((ra.mes||'/'||ra.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini) qtde_b
        , (select count(*) qtde -- sdo=0 em períodos posteriores
             from contr_cred_fiscal_cofins ccf
                , relac_apur_contr_cofins  ra
            where ccf.empresa_id              = gt_row_abertura_efd_pc.empresa_id
              and ccf.dm_situacao             = 3 -- processada
              and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
              and nvl(ccf.vl_sld_cred_fim,0)  = 0
              and ra.contrcredfiscalcofins_id = ccf.id
              and to_date((ra.mes||'/'||ra.ano),'mm/rrrr')    > gt_row_abertura_efd_pc.dt_ini
              and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                                from relac_apur_contr_cofins rc
                               where rc.contrcredfiscalcofins_id = ccf.id
                                 and to_date((rc.mes||'/'||rc.ano),'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)) qtde_c;
      --
   exception
      when others then
         vn_qtde_1500 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_1600
     from contr_soc_ext_cofins cse
    where cse.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cse.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cse.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cse.dm_situacao = 3; -- processada
      --
   exception
      when others then
         vn_qtde_1600 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_1700
     from contr_vlr_ret_fonte_cofins cvrf
    where cvrf.empresa_id  = gt_row_abertura_efd_pc.empresa_id
      and cvrf.mes         = to_char(gt_row_abertura_efd_pc.dt_ini, 'mm')
      and cvrf.ano         = to_char(gt_row_abertura_efd_pc.dt_ini, 'rrrr')
      and cvrf.dm_situacao = 3; -- processada
      --
   exception
      when others then
         vn_qtde_1700 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_1800
     from incorp_imob_ret ii
    where ii.empresa_id    = gt_row_abertura_efd_pc.empresa_id
      and ii.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and ii.dm_st_proc    = 1; -- validada
      --
   exception
      when others then
         vn_qtde_1800 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_1900
     from cons_docto_emit_per CD
    where cd.empresa_id    = gt_row_abertura_efd_pc.empresa_id
      and cd.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and cd.dm_st_proc    = 1; -- validada
      --
   exception
      when others then
         vn_qtde_1900 := 0;
   end;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || '1001' || '|';
   --
   if nvl(vn_qtde_1010,0) > 0
      or nvl(vn_qtde_1020,0) > 0
      or nvl(vn_qtde_1100,0) > 0
      or nvl(vn_qtde_1200,0) > 0
      or nvl(vn_qtde_1300,0) > 0
      or nvl(vn_qtde_1500,0) > 0
      or nvl(vn_qtde_1600,0) > 0
      or nvl(vn_qtde_1700,0) > 0
      or nvl(vn_qtde_1800,0) > 0
      or nvl(vn_qtde_1900,0) > 0
      then
      gl_conteudo := gl_conteudo || 0 || '|';
   else
      gl_conteudo := gl_conteudo || 1 || '|';
   end if;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '1001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_1001 := nvl(gn_qtde_reg_1001,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_1001: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_1001;

-------------------------------------------------------------------------------------
--| Monta o REGISTRO 1011: DETALHAMENTO DAS CONTRIBUIÇÕES COM EXIGIBILIDADE SUSPENSA
-------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_1011 IS
  --
  vn_fase number := 0;
  --
BEGIN
  -- 
  vn_fase := 1;
  --
  for rec_1011 in c_1011(gt_row_abertura_efd_pc.empresa_id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_1011%notfound or(c_1011%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || '1011' || '|';
    gl_conteudo := gl_conteudo || rec_1011.reg_ref || '|';
    gl_conteudo := gl_conteudo || rec_1011.chave_doc || '|';
    gl_conteudo := gl_conteudo || rec_1011.cod_part || '|';
    gl_conteudo := gl_conteudo || rec_1011.cod_item || '|';
    gl_conteudo := gl_conteudo || rec_1011.dt_oper || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_oper || '|';
    gl_conteudo := gl_conteudo || rec_1011.cst_pis || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_bc_pis || '|';
    gl_conteudo := gl_conteudo || rec_1011.aliq_pis || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_pis || '|';
    gl_conteudo := gl_conteudo || rec_1011.cst_cofins || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_bc_cofins || '|';
    gl_conteudo := gl_conteudo || rec_1011.aliq_cofins || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_cofins || '|'; 
    gl_conteudo := gl_conteudo || rec_1011.cst_pis_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_bc_pis_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.aliq_pis_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_pis_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.cst_cofins_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_bc_cofins_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.aliq_cofins_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.vl_cofins_susp || '|';
    gl_conteudo := gl_conteudo || rec_1011.cod_cta || '|';
    gl_conteudo := gl_conteudo || rec_1011.cod_ccus || '|';
    gl_conteudo := gl_conteudo || rec_1011.desc_doc_oper || '|';
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '1011',
                              el_conteudo => gl_conteudo);
    --
  
    gn_qtde_reg_1011 := nvl(gn_qtde_reg_1011, 0) + 1;
    --
  end loop; -- rec_1011
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_1011 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_1011;

-----------------------------------------
--| BLOCO 1: COMPLEMENTO DA ESCRITURAÇÃO
-----------------------------------------
PROCEDURE PKB_MONTA_BLOCO_1 IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   --
   -- Monta Registro 1001: Abertura do Bloco 1
   pkb_monta_reg_1001;
   --
   vn_fase := 2;
   --
   -- Monta Registro 1010: Processo Referenciado - Ação Judicial
   pkb_monta_reg_1010;
   --
   vn_fase := 3;
   --
   if gt_row_versao_layout_efd_pc.cd >= '006' then
     --
     -- Monta Registro 1011: Detalhamento das Contribuições com Exigibilidade Suspensa
     pkb_monta_reg_1011;
     --
   end if;
   --
   vn_fase := 4;
   --
   -- Monta Registro 1020: Processo Referenciado - Processo Administrativo
   pkb_monta_reg_1020;
   --
   vn_fase := 5;
   --
   -- O registro 1050 deverá funcionar à partir de 2019
   if gt_row_versao_layout_efd_pc.cd >= '005' then
      --
      vn_fase := 6;
      --
      -- Monta Registro 1050: Detalhamento de Ajustes de Base de Cálculo - Valores Extra Apuração
      pkb_monta_reg_1050;
      --
   end if;
   --
   vn_fase := 7;
   --
   -- Monta Registro 1100: Controle de Créditos Fiscais - PIS/Pasep
   pkb_monta_reg_1100;
   --
   vn_fase := 8;
   --
   -- Monta Registro 1200: Contribuição Social Extemporânea - PIS/Pasep
   pkb_monta_reg_1200;
   --
   vn_fase := 9;
   --
   -- Monta Registro 1300: Controle dos Valores Retidos na Fonte - PIS/Pasep
   pkb_monta_reg_1300;
   --
   vn_fase := 10;
   --
   -- Monta Registro 1500: Controle de Créditos Fiscais - Cofins
   pkb_monta_reg_1500;
   --
   vn_fase := 11;
   --
   -- Monta Registro 1600: Contribuição Social Extemporânea - Cofins
   pkb_monta_reg_1600;
   --
   vn_fase := 12;
   --
   -- Monta Registro 1700: Controle dos Valores Retidos na Fonte - Cofins
   pkb_monta_reg_1700;
   --
   vn_fase := 13;
   --
   -- Monta Registro 1800: Incorporação Imobiliária - RET
   pkb_monta_reg_1800;
   --
   vn_fase := 13;
   --
   if nvl(gt_row_abertura_efd_pc_regime.dm_ind_reg_cum,0) in (1,2) then -- 1-Regime de Caixa Escrituração consolidada (Registro F500) ou 2-Regime de Competência - Escrituração consolidada (Registro F550)
      --
      vn_fase := 14;
      --
      -- Monta Registro 1900: Consolidação dos Documentos Emitidos no Período por Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro PresumidoRegime de Caixa ou de Competência
      pkb_monta_reg_1900;
      --
   end if;
   --
   vn_fase := 15;
   --
   -- Monta Registro 1990: Encerramento do Bloco 1
   pkb_monta_reg_1990;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_1 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_1;
---------------------------------------------------
--| Monta o REGISTRO P990: ENCERRAMENTO DO BLOCO M
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_P990 IS
BEGIN
   --
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gn_qtde_reg_p990 := 1;
   --
   gl_conteudo := gl_conteudo || 'P990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_p001 +
                                   gn_qtde_reg_p010 +
                                   gn_qtde_reg_p100 +
                                   gn_qtde_reg_p110 +
                                   gn_qtde_reg_p199 +
                                   gn_qtde_reg_p200 +
                                   gn_qtde_reg_p210 +
                                   gn_qtde_reg_p990
                                  )
                              || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_p990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_P990;
---------------------------------------------------------------------------------------------
--| Monta o REGISTRO P200: CONSOLIDAÇÃO DA CONTRIBUIÇÃO PREVIDENCIÁRIA SOBRE A RECEITA BRUTA
---------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_P200 IS
   --
   vn_fase number := 0;
   --
   cursor c_apur is
      select ac.id apuracaocprb_id
           , trunc(ac.dt_ini) dt_ini
           , ac.vl_tot_cont_apu
           , ac.vl_tot_aj_reduc
           , ac.vl_tot_aj_acres
           , ac.vl_tot_cont_dev
           , ac.tiporetimpreceita_id
        from apuracao_cprb ac
       where ac.empresa_id  = gt_row_abertura_efd_pc.empresa_id
         and ac.dt_ini     >= gt_row_abertura_efd_pc.dt_ini
         and ac.dt_fin     <= gt_row_abertura_efd_pc.dt_fin
         and ac.dm_situacao = 3; -- processada
   --
   cursor c_ajust_apur( en_apuracaocprb_id in apuracao_cprb.id%type ) is
      select aa.dm_ind_aj
           , aa.vl_aj
           , aa.ajustcontrpc_id
           , aa.num_doc
           , aa.descr_aj
           , aa.dt_ref
        from ajust_apur_cprb aa
       where aa.apuracaocprb_id = en_apuracaocprb_id;
   --
BEGIN
   --
   vn_fase := 1;
   -- Montagem do registro P200
   for r_apur in c_apur
   loop
      --
      exit when c_apur%notfound or (c_apur%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      gl_conteudo := gl_conteudo || 'P200' || '|';
      gl_conteudo := gl_conteudo || to_char(r_apur.dt_ini,'mmrrrr') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_apur.vl_tot_cont_apu,0),'9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_apur.vl_tot_aj_reduc,0),'9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_apur.vl_tot_aj_acres,0),'9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_apur.vl_tot_cont_dev,0),'9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || lpad(pk_csf_dctf.fkg_retorna_codrec_tpretimprec(en_tiporetimpreceita_id => r_apur.tiporetimpreceita_id),6,'0') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P200'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_p200 := nvl(gn_qtde_reg_p200,0) + 1;
      --
      vn_fase := 4;
      -- Montagem do registro P210
      for r_ajust_apur in c_ajust_apur( en_apuracaocprb_id => r_apur.apuracaocprb_id)
      loop
         --
         exit when c_ajust_apur%notfound or (c_ajust_apur%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         gl_conteudo := gl_conteudo || 'P210' || '|';
         gl_conteudo := gl_conteudo || r_ajust_apur.dm_ind_aj || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_ajust_apur.vl_aj,0),'9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || pk_csf_efd_pc.fkg_cd_ajustcontrpc(en_ajustcontrpc_id => r_ajust_apur.ajustcontrpc_id) || '|';
         gl_conteudo := gl_conteudo || r_ajust_apur.num_doc || '|';
         gl_conteudo := gl_conteudo || trim(r_ajust_apur.descr_aj) || '|';
         gl_conteudo := gl_conteudo || to_char(r_ajust_apur.dt_ref,'ddmmrrrr') || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P210'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_p210 := nvl(gn_qtde_reg_p210,0) + 1;
         --
      end loop;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_p200 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_P200;
---------------------------------------------------------------------
--| Monta o REGISTRO REGISTRO P010: IDENTIFICAÇÃO DO ESTABELECIMENTO
---------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_P010 IS
   --
   vn_fase number := 0;
   --
   cursor c_apur is
      select distinct ac.id apuracaocprb_id
           , trunc(ac.dt_ini) dt_ini
           , trunc(ac.dt_fin) dt_fin
           , ae.empresa_id
        from apuracao_cprb   ac
           , apur_cprb_estab ae
       where ac.empresa_id      = gt_row_abertura_efd_pc.empresa_id
         and ac.dt_ini         >= gt_row_abertura_efd_pc.dt_ini
         and ac.dt_fin         <= gt_row_abertura_efd_pc.dt_fin
         and ac.dm_situacao     = 3 -- processada
         and ae.apuracaocprb_id = ac.id;
   --
   cursor c_vlr_apur( en_apuracaocprb_id in apuracao_cprb.id%type
                    , en_empresa_id      in empresa.id%type ) is
      select ac.codativcprb_id
           , ac.aliq_cont
           , ac.planoconta_id
           , ac.info_compl
           , nvl(sum(nvl(ac.vl_rec_tot_est,0)),0) vl_rec_tot_est
           , nvl(sum(nvl(ac.vl_rec_ativ_estab,0)),0) vl_rec_ativ_estab
           , nvl(sum(nvl(ac.vl_exc,0)),0) vl_exc
           , nvl(sum(nvl(ac.vl_bc_cont,0)),0) vl_bc_cont
           , nvl(sum(nvl(ac.vl_cont_apu,0)),0) vl_cont_apu
        from apur_cprb_estab ac
       where ac.apuracaocprb_id = en_apuracaocprb_id
         and ac.empresa_id      = en_empresa_id
       group by ac.codativcprb_id
           , ac.aliq_cont
           , ac.planoconta_id
           , ac.info_compl;
   --
   cursor c_compl_apur( en_apuracaocprb_id in apuracao_cprb.id%type
                      , en_empresa_id      in empresa.id%type
                      , en_codativcprb_id  in cod_ativ_cprb.id%type
                      , en_aliq_cont       in apur_cprb_estab.aliq_cont%type
                      , en_planoconta_id   in apur_cprb_estab.planoconta_id%type
                      , ev_info_compl      in apur_cprb_estab.info_compl%type ) is
      select ae.dm_num_campo
           , ae.coddetcprb_id
           , ae.vl_det
           , ae.inf_compl
        from apur_cprb_estab     ac
           , apur_cprb_estab_det ae
       where ac.apuracaocprb_id      = en_apuracaocprb_id
         and ac.empresa_id           = en_empresa_id
         and ac.codativcprb_id       = en_codativcprb_id
         and ac.aliq_cont            = en_aliq_cont
         and nvl(ac.planoconta_id,0) = nvl(en_planoconta_id,0)
         and nvl(ac.info_compl,'A')  = nvl(ev_info_compl,'A')
         and ae.apurcprbestab_id     = ac.id
       order by ae.dm_num_campo;
   --
   cursor c_proc_refer( en_apuracaocprb_id in apuracao_cprb.id%type
                      , en_empresa_id      in empresa.id%type
                      , en_codativcprb_id  in cod_ativ_cprb.id%type
                      , en_aliq_cont       in apur_cprb_estab.aliq_cont%type
                      , en_planoconta_id   in apur_cprb_estab.planoconta_id%type
                      , ev_info_compl      in apur_cprb_estab.info_compl%type ) is
      select ae.num_proc
           , ae.origproc_id
        from apur_cprb_estab          ac
           , apur_cprb_estab_proc_ref ae
       where ac.apuracaocprb_id      = en_apuracaocprb_id
         and ac.empresa_id           = en_empresa_id
         and ac.codativcprb_id       = en_codativcprb_id
         and ac.aliq_cont            = en_aliq_cont
         and nvl(ac.planoconta_id,0) = nvl(en_planoconta_id,0)
         and nvl(ac.info_compl,'A')  = nvl(ev_info_compl,'A')
         and ae.apurcprbestab_id     = ac.id;
   --
BEGIN
   --
   vn_fase := 1;
   -- Montagem do registro P010
   for r_apur in c_apur
   loop
      --
      exit when c_apur%notfound or (c_apur%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      gl_conteudo := gl_conteudo || 'P010' || '|';
      gl_conteudo := gl_conteudo || trim(pk_csf.fkg_cnpj_ou_cpf_empresa(en_empresa_id => r_apur.empresa_id)) || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P010'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_p010 := nvl(gn_qtde_reg_p010,0) + 1;
      --
      vn_fase := 4;
      -- Montagem do registro P100
      for r_vlr_apur in c_vlr_apur( en_apuracaocprb_id => r_apur.apuracaocprb_id
                                  , en_empresa_id      => r_apur.empresa_id )
      loop
         --
         exit when c_vlr_apur%notfound or (c_vlr_apur%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         gl_conteudo := gl_conteudo || 'P100' || '|';
         gl_conteudo := gl_conteudo || to_char(r_apur.dt_ini,'ddmmrrrr') || '|';
         gl_conteudo := gl_conteudo || to_char(r_apur.dt_fin,'ddmmrrrr') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_vlr_apur.vl_rec_tot_est,0),'9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || pk_csf_efd_pc.fkg_cd_codativcprb(en_codativcprb_id => r_vlr_apur.codativcprb_id) || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_vlr_apur.vl_rec_ativ_estab,0),'9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_vlr_apur.vl_exc,0),'9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_vlr_apur.vl_bc_cont,0),'9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_vlr_apur.aliq_cont,0),'9990D9999') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_vlr_apur.vl_cont_apu,0),'9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(en_planoconta_id => r_vlr_apur.planoconta_id) || '|';
         gl_conteudo := gl_conteudo || trim(r_vlr_apur.info_compl) || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P100'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_p100 := nvl(gn_qtde_reg_p100,0) + 1;
         --
         vn_fase := 7;
         -- Montagem do registro P110
         for r_compl_apur in c_compl_apur( en_apuracaocprb_id => r_apur.apuracaocprb_id
                                         , en_empresa_id      => r_apur.empresa_id
                                         , en_codativcprb_id  => r_vlr_apur.codativcprb_id
                                         , en_aliq_cont       => r_vlr_apur.aliq_cont
                                         , en_planoconta_id   => r_vlr_apur.planoconta_id
                                         , ev_info_compl      => r_vlr_apur.info_compl )
         loop
            --
            exit when c_compl_apur%notfound or (c_compl_apur%notfound) is null;
            --
            vn_fase := 8;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            gl_conteudo := gl_conteudo || 'P110' || '|';
            gl_conteudo := gl_conteudo || r_compl_apur.dm_num_campo || '|';
            gl_conteudo := gl_conteudo || pk_csf_efd_pc.fkg_cd_coddetcprb(en_coddetcprb_id => r_compl_apur.coddetcprb_id) || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_compl_apur.vl_det,0),'9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || trim(r_compl_apur.inf_compl) || '|';
            --
            vn_fase := 9;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P110'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_p110 := nvl(gn_qtde_reg_p110,0) + 1;
            --
         end loop;
         --
         vn_fase := 10;
         -- Montagem do registro P199
         for r_proc_refer in c_proc_refer( en_apuracaocprb_id => r_apur.apuracaocprb_id
                                         , en_empresa_id      => r_apur.empresa_id
                                         , en_codativcprb_id  => r_vlr_apur.codativcprb_id
                                         , en_aliq_cont       => r_vlr_apur.aliq_cont
                                         , en_planoconta_id   => r_vlr_apur.planoconta_id
                                         , ev_info_compl      => r_vlr_apur.info_compl )
         loop
            --
            exit when c_proc_refer%notfound or (c_proc_refer%notfound) is null;
            --
            vn_fase := 11;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            gl_conteudo := gl_conteudo || 'P199' || '|';
            gl_conteudo := gl_conteudo || r_proc_refer.num_proc || '|';
            gl_conteudo := gl_conteudo || pk_csf_efd_pc.fkg_cd_orig_proc(en_origproc_id => r_proc_refer.origproc_id) || '|';
            --
            vn_fase := 12;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P199'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_p199 := nvl(gn_qtde_reg_p199,0) + 1;
            --
         end loop;
         --
      end loop;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_p010 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_P010;
-----------------------------------------------
--| Monta o REGISTRO P001: ABERTURA DO BLOCO P
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_P001 IS
   --
   vn_fase number := 0;
   vn_qtde number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   --
   begin
      select count(1)
        into vn_qtde
        from apuracao_cprb ac
       where ac.empresa_id  = gt_row_abertura_efd_pc.empresa_id
         and ac.dt_ini     >= gt_row_abertura_efd_pc.dt_ini
         and ac.dt_fin     <= gt_row_abertura_efd_pc.dt_fin
         and ac.dm_situacao = 3; -- processada
   exception
      when others then
         vn_qtde := 0;
   end;
   --
   vn_fase := 2;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'P001' || '|';
   --
   if nvl(vn_qtde,0) > 0 then
      gl_conteudo := gl_conteudo || 0 || '|';
   else
      gl_conteudo := gl_conteudo || 1 || '|';
   end if;
   --
   vn_fase := 3;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'P001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_p001 := nvl(gn_qtde_reg_p001,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_p001 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_P001;
-----------------------------------------------------------------------------------
--| BLOCO P - APURAÇÃO DA CONTRIBUIÇÃO PREVIDENCIÁRIA SOBRE A RECEITA BRUTA (CPRB)
-----------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_P IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- monta o REGISTRO P001: ABERTURA DO BLOCO P
   pkb_monta_reg_p001;
   --
   vn_fase := 2;
   -- monta o REGISTRO P010: IDENTIFICAÇÃO DO ESTABELECIMENTO
   -- monta o REGISTRO P100: CONTRIBUIÇÃO PREVIDENCIÁRIA SOBRE A RECEITA BRUTA
   -- monta o REGISTRO P110: COMPLEMENTO DA ESCRITURAÇÃO - DETALHAMENTO DA APURAÇÃO DA CONTRIBUIÇÃO
   -- monta o REGISTRO P199: PROCESSO REFERENCIADO
   pkb_monta_reg_p010;
   --
   vn_fase := 3;
   -- monta o REGISTRO P200: CONSOLIDAÇÃO DA CONTRIBUIÇÃO PREVIDENCIÁRIA SOBRE A RECEITA BRUTA
   -- monta o REGISTRO P210: AJUSTE DA CONTRIBUIÇÃO PREVIDENCIÁRIA APURADA SOBRE A RECEITA BRUTA
   pkb_monta_reg_p200;
   --
   vn_fase := 4;
   -- monta o REGISTRO P990: ENCERRAMENTO DO BLOCO P
   pkb_monta_reg_p990;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_p fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_P;
---------------------------------------------------
--| Monta o REGISTRO M990: ENCERRAMENTO DO BLOCO M
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_M990 IS
BEGIN
   --
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gn_qtde_reg_m990 := 1;
   --
   gl_conteudo := gl_conteudo || 'M990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_m001 +
                                   gn_qtde_reg_m100 +
                                   gn_qtde_reg_m105 +
                                   gn_qtde_reg_m110 +
                                   gn_qtde_reg_m115 +
                                   gn_qtde_reg_m200 +
                                   gn_qtde_reg_m205 +
                                   gn_qtde_reg_m210 +
                                   gn_qtde_reg_m211 +
                                   gn_qtde_reg_m215 +
                                   gn_qtde_reg_m220 +
                                   gn_qtde_reg_m225 +
                                   gn_qtde_reg_m230 +
                                   gn_qtde_reg_m300 +
                                   gn_qtde_reg_m350 +
                                   gn_qtde_reg_m400 +
                                   gn_qtde_reg_m410 +
                                   gn_qtde_reg_m500 +
                                   gn_qtde_reg_m505 +
                                   gn_qtde_reg_m510 +
                                   gn_qtde_reg_m515 +
                                   gn_qtde_reg_m600 +
                                   gn_qtde_reg_m605 +
                                   gn_qtde_reg_m610 +
                                   gn_qtde_reg_m611 +
                                   gn_qtde_reg_m615 +
                                   gn_qtde_reg_m620 +
                                   gn_qtde_reg_m625 +
                                   gn_qtde_reg_m630 +
                                   gn_qtde_reg_m700 +
                                   gn_qtde_reg_m800 +
                                   gn_qtde_reg_m810 +
                                   gn_qtde_reg_m990
                                  )
                              || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'M990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_m990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_M990;

--------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO M800: RECEITAS ISENTAS, NÃO ALCANÇADAS PELA INCIDÊNCIA DA CONTRIBUIÇÃO, SUJEITAS A
--| ALÍQUOTA ZERO OU DE VENDAS COM SUSPENSÃO - COFINS
--------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M800 IS
  --
  vn_fase number := 0;
  --
  cursor c_m810(en_perrecisentacofins_id rec_isenta_cofins.perrecisentacofins_id%type,
                en_codst_id              rec_isenta_cofins.codst_id%type,
                en_cod_cta               plano_conta.cod_cta%type) is
    select nr.cod nat_rec,
           pc.cod_cta,
           d.desc_compl,
           nvl(sum(nvl(d.vl_rec, 0)), 0) vl_rec
      from rec_isenta_cofins     ri,
           det_rec_isenta_cofins d,
           nat_rec_pc            nr,
           plano_conta           pc
     where ri.perrecisentacofins_id = en_perrecisentacofins_id
       and ri.codst_id              = en_codst_id
       and pc.cod_cta               = en_cod_cta
       and d.recisentacofins_id     = ri.id
       and nr.id                    = d.natrecpc_id
       and pc.id(+)                 = d.planoconta_id
     group by nr.cod,
              pc.cod_cta,
              d.desc_compl
     order by nr.cod;
  --
BEGIN
  --
  vn_fase := 1;
  --
  for rec_m800 in c_m800(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m800%notfound or(c_m800%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'M800' || '|';
    gl_conteudo := gl_conteudo || lpad(rec_m800.cod_st, 2, '0') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_m800.vl_tot_rec, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || rec_m800.cod_cta || '|';
    gl_conteudo := gl_conteudo || rec_m800.desc_compl || '|';
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M800',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_m800 := nvl(gn_qtde_reg_m800, 0) + 1;
    --
    vn_fase := 4;
    --
    -- REGISTRO M810: DETALHAMENTO DAS RECEITAS ISENTAS
    for rec_m810 in c_m810(rec_m800.id,
                           rec_m800.codst_id,
                           rec_m800.cod_cta) loop
      exit when c_m810%notfound or(c_m810%notfound) is null;
      --
      vn_fase := 5;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M810' || '|';
      gl_conteudo := gl_conteudo || lpad(rec_m810.nat_rec, 3, '0') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m810.vl_rec, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_m810.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_m810.desc_compl || '|';
      --
      vn_fase := 6;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M810',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_m810 := nvl(gn_qtde_reg_m810, 0) + 1;
      --
    end loop;
    --
  end loop;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_m800 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_M800;
-----------------------------------------------------------------------------------------------
--| Monta o REGISTRO M700: COFINS DIFERIDA EM PERÍODOS ANTERIORES - VALORES A PAGAR NO PERÍODO
-----------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M700 IS
   --
   vn_fase  number := 0;
   --
   cursor c_m700 is
   select cc.id
        , cc.empresa_id
        , cc.dt_ini
        , cc.dt_fin
        , cc.dm_situacao
        , cc.contrsocapurpc_id
        , cs.cd cod_cont
        , cc.vl_cont_apur_difer
        , cc.dm_nat_cred_desc
        , cc.vl_cred_desc_difer
        , cc.vl_cont_difer_ant
        , cc.per_apur
        , cc.dt_receb
     from r_empresa_abertura_efd_pc re
        , contr_cofins_dif_per_ant  cc
        , contr_soc_apur_pc         cs
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and cc.empresa_id       = re.empresa_id
      and cc.dt_ini          >= gt_row_abertura_efd_pc.dt_ini
      and cc.dt_fin          <= gt_row_abertura_efd_pc.dt_fin
      and cc.dm_situacao      = 3 -- processada
      and cs.id               = cc.contrsocapurpc_id
    order by cc.empresa_id, cc.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_m700 in c_m700 loop
      exit when c_m700%notfound or (c_m700%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M700' || '|';
      gl_conteudo := gl_conteudo || rec_m700.cod_cont || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m700.vl_cont_apur_difer, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_m700.dm_nat_cred_desc || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m700.vl_cred_desc_difer, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m700.vl_cont_difer_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || lpad(rec_m700.per_apur,6,'0') || '|';
      gl_conteudo := gl_conteudo || to_char(rec_m700.dt_receb, 'ddmmrrrr') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'M700'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_m700 := nvl(gn_qtde_reg_m700,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_m700 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_M700;
-----------------------------------------------------------------------------------------------------
--| Monta o REGISTRO M600: CONSOLIDAÇÃO DA CONTRIBUIÇÃO PARA A SEGURIDADE SOCIAL - COFINS DO PERÍODO
-----------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M600 IS
  --
  vn_fase number := 0;
  --
  cursor c_m605(en_conscontrcofins_id cons_contr_cofins.id%type) is
    select cc.dm_num_campo,
           (lpad(tr.cd, 4, '0') || lpad(ti.cod_receita, 2, '0')) cod_receita,
           cc.vl_rec
      from cons_contr_cofins_or cc,
           tipo_ret_imp         tr,
           tipo_ret_imp_receita ti
     where cc.conscontrcofins_id = en_conscontrcofins_id
       and tr.id                 = cc.tiporetimp_id
       and ti.id                 = cc.tiporetimpreceita_id
     order by cc.dm_num_campo,
              (lpad(tr.cd, 4, '0') || lpad(ti.cod_receita, 2, '0'));
  --
  cursor c_m611(en_conscontrcofins_id cons_contr_cofins.id%type,
                en_contrsocapurpc_id  contr_soc_apur_pc.id%type) is
    select sc.dm_ind_tip_coop,
           nvl(sum(nvl(sc.vl_bc_cont_ant_exc_coop, 0)), 0) vl_bc_cont_ant_exc_coop,
           nvl(sum(nvl(sc.vl_exc_coop_ger, 0)), 0) vl_exc_coop_ger,
           nvl(sum(nvl(sc.vl_exc_esp_coop, 0)), 0) vl_exc_esp_coop,
           nvl(sum(nvl(sc.vl_bc_cont, 0)), 0) vl_bc_cont
      from cons_contr_cofins            cc,
           det_cons_contr_cofins        dc,
           soc_coop_comp_bc_calc_cofins sc
     where cc.id                    = en_conscontrcofins_id
       and dc.conscontrcofins_id    = cc.id
       and dc.contrsocapurpc_id     = en_contrsocapurpc_id
       and sc.detconscontrcofins_id = dc.id
     group by sc.dm_ind_tip_coop;
  --
  cursor c_m630(en_conscontrcofins_id cons_contr_cofins.id%type,
                en_contrsocapurpc_id  contr_soc_apur_pc.id%type) is
    select ia.id,
           ia.cnpj,
           ia.vl_vend,
           ia.vl_nao_receb,
           ia.vl_cont_dif,
           ia.vl_cred_dif,
           ia.tipocredpc_id,
           tc.cd cod_cred
      from cons_contr_cofins     cc,
           det_cons_contr_cofins dc,
           inf_adic_dif_cofins   ia,
           tipo_cred_pc          tc
     where cc.id                    = en_conscontrcofins_id
       and dc.conscontrcofins_id    = cc.id
       and dc.contrsocapurpc_id     = en_contrsocapurpc_id
       and ia.detconscontrcofins_id = dc.id
       and tc.id(+)                 = ia.tipocredpc_id
     order by ia.id;
  --
BEGIN
  --
  vn_fase := 1;
  --
  -- Registro M600: Consolidação da Contribuição para a Seguridade Social - Cofins do Período
  for rec_m600 in c_m600(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m600%notfound or(c_m600%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'M600' || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_tot_cont_nc_per, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_tot_cred_desc, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_tot_cred_desc_ant, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_tot_cont_nc_dev, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_ret_nc, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_out_ded_nc, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_cont_nc_rec, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_tot_cont_cum_per, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_ret_cum, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_out_ded_cum, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_cont_cum_rec, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m600.vl_tot_cont_rec, 0), '9999999999990D99') || '|';
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M600',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_m600 := nvl(gn_qtde_reg_m600, 0) + 1;
    --
    vn_fase := 4;
    --
    if gt_row_abertura_efd_pc.dt_ini >= to_date('01/03/2014', 'dd/mm/rrrr') then
      --
      -- A partir de Março/2014 versão 2.07
      -- Registro M605: Cofins a Recolher - Detalhamento por Código de Receita
      for rec_m605 in c_m605(rec_m600.conscontrcofins_id) loop
        exit when c_m605%notfound or(c_m605%notfound) is null;
        --
        vn_fase := 5;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M605' || '|';
        --
        gl_conteudo := gl_conteudo || lpad(rec_m605.dm_num_campo, 2, '0') || '|';
        gl_conteudo := gl_conteudo || lpad(rec_m605.cod_receita, 6, '0') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m605.vl_rec, '9999999999990D99') || '|';
        --
        vn_fase := 6;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M605',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m605 := nvl(gn_qtde_reg_m605, 0) + 1;
        --
      end loop; -- c_m605
      --
    end if;
    --
    vn_fase := 7;
    --
    -- Registro M610: Detalhamento da Contribuição para a Seguridade Social - Cofins do Período
    for rec_m610 in c_m610(rec_m600.conscontrcofins_id) loop
      exit when c_m610%notfound or(c_m610%notfound) is null;
      --
      vn_fase := 8;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M610' || '|';
      gl_conteudo := gl_conteudo || rec_m610.cod_cont || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_rec_brt, 0), '9999999999990D99') || '|';
      --
      if nvl(rec_m610.quant_bc_cofins, 0) <> 0 then
        --
        -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || fkg_formata_num(0, '999999999990D99') || '|'; -- Base de cálculo em valor
        --
        -- Campos Layout 1.28 - Vigorando à partir de 01/2019
        if gt_row_versao_layout_efd_pc.cd >= '005' then
          --
          vn_fase := 8.1;
          --
          gl_conteudo := gl_conteudo || rec_m610.vl_ajus_acres_bc_cofins || '|';
          gl_conteudo := gl_conteudo || rec_m610.vl_ajus_reduc_bc_cofins || '|';
          gl_conteudo := gl_conteudo || rec_m610.vl_bc_cont_ajus || '|';
          --
        end if;
        --
        gl_conteudo := gl_conteudo || '|'; -- Alíquota em percentual
        gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.quant_bc_cofins, 0), '999999999990D999') || '|'; -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_aliq_cofins_quant, 0), '99990D9999') || '|'; -- Alíquota da cofins em quantidade
        --
      else
        --
        -- Base de cálculo em valor
        gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_bc_cont, 0), '9999999999990D99') || '|'; -- Base de cálculo em valor
        --
        -- Campos Layout 1.28 - Vigorando à partir de 01/2019
        if gt_row_versao_layout_efd_pc.cd >= '005' then
          --
          vn_fase := 8.2;
          --
          gl_conteudo := gl_conteudo || rec_m610.vl_ajus_acres_bc_cofins || '|';
          gl_conteudo := gl_conteudo || rec_m610.vl_ajus_reduc_bc_cofins || '|';
          gl_conteudo := gl_conteudo || rec_m610.vl_bc_cont_ajus || '|';
          --
        end if;
        --
        gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.aliq_cofins, 0), '9990D9999') || '|'; -- Alíquota em percentual
        gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || '|'; -- Alíquota da cofins em quantidade
        --
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_cont_apur, 0), '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_ajust_acrec, 0), '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_ajust_reduc, 0), '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_cont_difer, 0), '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_cont_difer_ant, 0), '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m610.vl_cont_per, 0), '9999999999990D99') || '|';
      --
      vn_fase := 9;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M610',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_m610 := nvl(gn_qtde_reg_m610, 0) + 1;
      --
      vn_fase := 10;
      --
      -- Registro M611: Sociedades Cooperativas - Composição da Base de Cálculo - Cofins
      for rec_m611 in c_m611(rec_m600.conscontrcofins_id,
                             rec_m610.contrsocapurpc_id) loop
        exit when c_m611%notfound or(c_m611%notfound) is null;
        --
        vn_fase := 11;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M611' || '|';
        gl_conteudo := gl_conteudo || rec_m611.dm_ind_tip_coop || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m611.vl_bc_cont_ant_exc_coop, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m611.vl_exc_coop_ger, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m611.vl_exc_esp_coop, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m611.vl_bc_cont, '9999999999990D99') || '|';
        --
        vn_fase := 12;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M611',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m611 := nvl(gn_qtde_reg_m611, 0) + 1;
        --
      end loop; -- c_m611
      --
      vn_fase := 13;
      --
      -- O registro M615 deverá funcionar à partir de 2019
      if gt_row_versao_layout_efd_pc.cd >= '005' then
        --
        -- Registro M615: Ajustes da Base de Cálculo da COFINS Apurada
        for rec_m615 in c_m615(rec_m610.detconscontrcofins_id) loop
          exit when c_m615%notfound or(c_m615%notfound) is null;
          --
          vn_fase := 14;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'M615' || '|';
          gl_conteudo := gl_conteudo || rec_m615.dm_ind_aj_bc || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m615.vl_aj_bc, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || fkg_ret_cod_ajuste(rec_m615.codajbccontr_id) || '|';
          gl_conteudo := gl_conteudo || rec_m615.num_doc || '|';
          gl_conteudo := gl_conteudo || rec_m615.descr_aj_bc || '|';
          gl_conteudo := gl_conteudo || rec_m615.dt_ref || '|';
          gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(rec_m615.planoconta_id) || '|';
          gl_conteudo := gl_conteudo || rec_m615.cnpj || '|';
          gl_conteudo := gl_conteudo || rec_m615.info_compl || '|';
          --
          vn_fase := 15;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M615',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_m615 := nvl(gn_qtde_reg_m615, 0) + 1;
          --
        end loop; -- c_m615
        --
      end if;
      --
      vn_fase := 16;
      --
      -- Registro M620: Ajustes da Cofins Apurada
      for rec_m620 in c_m620(rec_m600.conscontrcofins_id,
                             rec_m610.contrsocapurpc_id) loop
        exit when c_m620%notfound or(c_m620%notfound) is null;
        --
        vn_fase := 17;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M620' || '|';
        gl_conteudo := gl_conteudo || rec_m620.dm_ind_aj || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m620.vl_aj, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_m620.cod_aj || '|';
        gl_conteudo := gl_conteudo || rec_m620.num_doc || '|';
        gl_conteudo := gl_conteudo || rec_m620.descr_aj || '|';
        gl_conteudo := gl_conteudo || to_char(rec_m620.dt_ref, 'ddmmrrrr') || '|';
        --
        vn_fase := 18;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M620',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m620 := nvl(gn_qtde_reg_m620, 0) + 1;
        --
        vn_fase := 19;
        --
        --| Registro M625: Detalhamento dos Ajustes da Cofins Apurada
        for rec_m625 in c_m625(rec_m620.id) loop
          exit when c_m625%notfound or(c_m625%notfound) is null;
          --
          vn_fase := 20;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'M625' || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m625.det_valor_aj, '9999999999990D99') || '|';
          --
          if nvl(rec_m625.codst_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod(rec_m625.codst_id) || '|';
            --
          end if;
          --
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m625.det_bc_cred, '9999999999990D999') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m625.det_aliq, '9990D9999') || '|';
          gl_conteudo := gl_conteudo || to_char(rec_m625.dt_oper_aj, 'ddmmrrrr') || '|';
          gl_conteudo := gl_conteudo || rec_m625.descr_aj || '|';
          --
          if nvl(rec_m625.planoconta_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(rec_m625.planoconta_id) || '|';
            --
          end if;
          --
          gl_conteudo := gl_conteudo || rec_m625.info_compl || '|';
          --
          vn_fase := 21;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M625',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_m625 := nvl(gn_qtde_reg_m625, 0) + 1;
          --
        end loop; -- c_m625
      --
      end loop; -- c_m620
      --
      vn_fase := 22;
      --
      -- Registro M630: Informações Adicionais de Diferimento
      for rec_m630 in c_m630(rec_m600.conscontrcofins_id,
                             rec_m610.contrsocapurpc_id) loop
        exit when c_m630%notfound or(c_m630%notfound) is null;
        --
        vn_fase := 23;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M630' || '|';
        gl_conteudo := gl_conteudo || rec_m630.cnpj || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m630.vl_vend, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m630.vl_nao_receb, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m630.vl_cont_dif, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m630.vl_cred_dif, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_m630.cod_cred || '|';
        --
        vn_fase := 24;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M630',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m630 := nvl(gn_qtde_reg_m630, 0) + 1;
        --
      end loop; -- c_m630
    --
    end loop; -- c_m610
  --
  end loop; -- c_m600
  --
exception
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_m600 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_M600;
-----------------------------------------------------------------
--| Monta o REGISTRO M500: CRÉDITO DE COFINS RELATIVO AO PERÍODO
-----------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M500 IS
  --
  vn_fase number := 0;
  --
  /*cursor c_m500 is
  select ac.id,
         pa.empresa_id,
         pa.dt_ini,
         pa.dt_fin,
         ac.dm_situacao,
         ac.tipocredpc_id,
         tc.cd cod_cred,
         ac.dm_ind_cred_ori,
         ac.vl_bc_cofins,
         ac.aliq_cofins,
         ac.quant_bc_cofins,
         ac.vl_aliq_cofins_quant,
         ac.vl_cred,
         ac.vl_ajus_acres,
         ac.vl_ajus_reduc,
         ac.vl_cred_difer,
         ac.vl_cred_disp,
         ac.dm_ind_desc_cred,
         ac.vl_cred_desc,
         ac.vl_sld_cred
    from r_empresa_abertura_efd_pc r,
         per_apur_cred_cofins      pa,
         apur_cred_cofins          ac,
         tipo_cred_pc              tc
   where r.aberturaefdpc_id      = gt_row_abertura_efd_pc.id
     and pa.empresa_id           = r.empresa_id
     and pa.dt_ini              >= gt_row_abertura_efd_pc.dt_ini
     and pa.dt_fin              <= gt_row_abertura_efd_pc.dt_fin
     and ac.perapurcredcofins_id = pa.id
     and ac.dm_situacao          = 3 -- Processada
     and tc.id                   = ac.tipocredpc_id
   order by pa.empresa_id;*/
  --
  cursor c_m505(en_apurcredcofins_id apur_cred_cofins.id%type) is
    select d.id,
           d.apurcredcofins_id,
           d.basecalccredpc_id,
           bcc.cd nat_bc_cred,
           d.codst_id,
           cst.cod_st,
           d.vl_bc_cofins_tot,
           d.vl_bc_cofins_cum,
           d.vl_bc_cofins_nc,
           d.vl_bc_cofins,
           d.quant_bc_cofins_tot,
           d.quant_bc_cofins,
           d.desc_cred
      from det_apur_cred_cofins d, 
           base_calc_cred_pc bcc, 
           cod_st cst
     where d.apurcredcofins_id = en_apurcredcofins_id
       and bcc.id              = d.basecalccredpc_id
       and cst.id              = d.codst_id
     order by d.id;
  --
  /*cursor c_m510(en_apurcredcofins_id apur_cred_cofins.id%type) is
  select a.id,
         a.apurcredcofins_id,
         a.dm_ind_aj,
         a.vl_aj,
         a.ajustcontrpc_id,
         ac.cd cod_aj,
         a.num_doc,
         a.descr_aj,
         a.dt_ref
    from ajust_apur_cred_cofins a, 
         ajust_contr_pc ac
   where a.apurcredcofins_id = en_apurcredcofins_id
     and ac.id               = a.ajustcontrpc_id
   order by a.id;*/
  --
  /*cursor c_m515(en_ajustapurcredcofins_id in ajust_apur_cred_cofins.id%type) is
  select da.det_valor_aj,
         da.codst_id,
         da.det_bc_cred,
         da.det_aliq,
         da.dt_oper_aj,
         da.descr_aj,
         da.planoconta_id,
         da.info_compl
    from det_ajust_apur_cred_cofins da
   where da.ajustapurcredcofins_id = en_ajustapurcredcofins_id;*/
  --
BEGIN
  --
  vn_fase := 1;
  --  
  if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 3 -- 3 - Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
     and gt_row_abertura_efd_pc_regime.dm_ind_apro_cred = 2) -- 2 - Método de Rateio Proporcional (Receita Bruta)
     or (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 -- 2 - Escrituração de operações com incidência exclusivamente no regime cumulativo
     and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9) -- 9 - Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
     or (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 1)) --1 - Escrituração de operações com incidência exclusivamente no regime não-cumulativo
   then
    --   
    for rec_m500 in c_m500(gt_row_abertura_efd_pc.id,
                           gt_row_abertura_efd_pc.dt_ini,
                           gt_row_abertura_efd_pc.dt_fin) loop
      exit when c_m500%notfound or(c_m500%notfound) is null;
      --
      vn_fase := 2;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M500' || '|';
      gl_conteudo := gl_conteudo || rec_m500.cod_cred || '|';
      gl_conteudo := gl_conteudo || rec_m500.dm_ind_cred_ori || '|';
      --
      -- Indicador de Credito Oriundo de: 0 - Operações próprias; 1 - Evento de incorporação, cisão ou fusão
      if rec_m500.dm_ind_cred_ori = 0 then
        --
        if nvl(rec_m500.quant_bc_cofins, 0) <> 0 then
          --
          vn_fase := 3;
          --
          -- Base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em valor
          gl_conteudo := gl_conteudo || '|'; -- Alíquota em percentual
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.quant_bc_cofins, '999999999990D999') || '|'; -- Base de cálculo em quantidade
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_aliq_cofins_quant, '99990D9999') || '|'; -- Alíquota da cofins em quantidade
          -- 
        else
          --
          vn_fase := 4;
          --
          -- Base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_bc_cofins, '9999999999990D99') || '|'; -- Base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.aliq_cofins, '9990D9999') || '|'; -- Alíquota em percentual
          gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- Alíquota da cofins em quantidade
          --
        end if;
        --
      else
        --
        gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em valor
        gl_conteudo := gl_conteudo || '|'; -- Alíquota em percentual
        gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || '|'; -- Alíquota da cofins em quantidade
        --
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_cred, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_ajus_acres, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_ajus_reduc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_cred_difer, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_cred_disp, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_m500.dm_ind_desc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_cred_desc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m500.vl_sld_cred, '9999999999990D99') || '|';
      --
      vn_fase := 5;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M500',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_m500 := nvl(gn_qtde_reg_m500, 0) + 1;
      --
      vn_fase := 6;
      --
      --| REGISTRO M505: DETALHAMENTO DA BASE DE CALCULO DO CRÉDITO APURADO NO PERÍODO - COFINS
      for rec_m505 in c_m505(rec_m500.id) loop
        exit when c_m505%notfound or(c_m505%notfound) is null;
        --
        vn_fase := 7;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M505' || '|';
        gl_conteudo := gl_conteudo || rec_m505.nat_bc_cred || '|';
        gl_conteudo := gl_conteudo || rec_m505.cod_st || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m505.vl_bc_cofins_tot, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m505.vl_bc_cofins_cum, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m505.vl_bc_cofins_nc, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m505.vl_bc_cofins, '9999999999990D99') || '|';
        --
        if rec_m500.cod_cred in (103, 203, 303, 105, 205, 305, 108, 208, 308) then
          --
          if nvl(rec_m505.quant_bc_cofins_tot, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_m505.quant_bc_cofins_tot, '999999999990D999') || '|';
            --
          end if;
          --
        else
          -- 
          gl_conteudo := gl_conteudo || '|';
          --
        end if;
        --
        vn_fase := 8;
        --
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m505.quant_bc_cofins, '999999999990D999') || '|';
        gl_conteudo := gl_conteudo || rec_m505.desc_cred || '|';
        --
        vn_fase := 9;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M505',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m505 := nvl(gn_qtde_reg_m505, 0) + 1;
        --
      end loop; -- c_m505
      --
      vn_fase := 10;
      --
      --| REGISTRO M510: AJUSTES DO CRÉDITO DE PIS/PASEP APURADO
      for rec_m510 in c_m510(rec_m500.id) loop
        exit when c_m510%notfound or(c_m510%notfound) is null;
        --
        vn_fase := 11;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M510' || '|';
        gl_conteudo := gl_conteudo || rec_m510.dm_ind_aj || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m510.vl_aj, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_m510.cod_aj || '|';
        gl_conteudo := gl_conteudo || rec_m510.num_doc || '|';
        gl_conteudo := gl_conteudo || rec_m510.descr_aj || '|';
        gl_conteudo := gl_conteudo || to_char(rec_m510.dt_ref, 'ddmmrrrr') || '|';
        --
        vn_fase := 12;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M510',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m510 := nvl(gn_qtde_reg_m510, 0) + 1;
        --
        vn_fase := 13;
        --
        --| REGISTRO M515: DETALHAMENTO DOS AJUSTES DO CRÉDITO DE COFINS APURADO
        for rec_m515 in c_m515(rec_m510.id) loop
          exit when c_m515%notfound or(c_m515%notfound) is null;
          --
          vn_fase := 14;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'M515' || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m515.det_valor_aj, '9999999999990D99') || '|';
          --
          if nvl(rec_m515.codst_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod(rec_m515.codst_id) || '|';
            --
          end if;
          --
          vn_fase := 15;
          --
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m515.det_bc_cred, '9999999999990D999') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m515.det_aliq, '9990D9999') || '|';
          gl_conteudo := gl_conteudo || to_char(rec_m515.dt_oper_aj, 'ddmmrrrr') || '|';
          gl_conteudo := gl_conteudo || rec_m515.descr_aj || '|';
          --
          if nvl(rec_m515.planoconta_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(rec_m515.planoconta_id) || '|';
            --
          end if;
          --
          gl_conteudo := gl_conteudo || rec_m515.info_compl || '|';
          --
          vn_fase := 16;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M515',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_m515 := nvl(gn_qtde_reg_m515, 0) + 1;
          --
        end loop; -- c_m515
      --
      end loop; -- c_m510
    --
    end loop; -- c_m500
    --
  end if;
  --   
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_m500 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_M500;

--------------------------------------------
--| Monta o REGISTRO M400: RECEITAS ISENTAS
--------------------------------------------
PROCEDURE PKB_MONTA_REG_M400 IS
  --
  vn_fase number := 0;
  --
  cursor c_m410(en_perrecisentapis_id rec_isenta_pis.perrecisentapis_id%type,
                en_codst_id           rec_isenta_pis.codst_id%type,
                en_cod_cta            plano_conta.cod_cta%type) is
    select nr.cod nat_rec,
           pc.cod_cta,
           d.desc_compl,
           nvl(sum(nvl(d.vl_rec, 0)), 0) vl_rec
      from rec_isenta_pis ri,
           det_rec_isenta_pis d,
           nat_rec_pc nr,
           plano_conta pc
     where ri.perrecisentapis_id = en_perrecisentapis_id
       and ri.codst_id           = en_codst_id
       and pc.cod_cta            = en_cod_cta
       and d.recisentapis_id     = ri.id
       and nr.id                 = d.natrecpc_id
       and pc.id(+)              = d.planoconta_id
     group by nr.cod,
              pc.cod_cta,
              d.desc_compl
     order by nr.cod;
  --
  /*cursor c_m400 is
  select ri.id
       , pr.empresa_id
       , pr.dt_ini
       , pr.dt_fin
       , ri.dm_situacao
       , ri.codst_id
       , cs.cod_st
       , ri.vl_tot_rec
       , ri.planoconta_id
       , pc.cod_cta
       , ri.desc_compl
    from r_empresa_abertura_efd_pc ra
       , per_rec_isenta_pis        pr
       , rec_isenta_pis            ri
       , cod_st                    cs
       , plano_conta               pc
   where ra.aberturaefdpc_id   = gt_row_abertura_efd_pc.id
     and pr.empresa_id         = ra.empresa_id
     and pr.dt_ini            >= gt_row_abertura_efd_pc.dt_ini
     and pr.dt_fin            <= gt_row_abertura_efd_pc.dt_fin
     and ri.perrecisentapis_id = pr.id
     and ri.dm_situacao        = 3 -- processada
     and cs.id                 = ri.codst_id
     and pc.id(+)              = ri.planoconta_id
   order by pr.empresa_id, ri.id;*/
  --
  /*cursor c_m410 ( en_recisentapis_id rec_isenta_pis.id%type ) is
  select nr.cod nat_rec
       , pc.cod_cta
       , d.desc_compl
       , nvl(sum(nvl(d.vl_rec,0)),0) vl_rec
    from det_rec_isenta_pis  d
       , nat_rec_pc          nr
       , plano_conta         pc
   where d.recisentapis_id = en_recisentapis_id
     and nr.id             = d.natrecpc_id
     and pc.id(+)          = d.planoconta_id
   group by nr.cod
       , pc.cod_cta
       , d.desc_compl
   order by nr.cod;*/
  --
BEGIN
  --
  vn_fase := 1;
  --
  for rec_m400 in c_m400(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m400%notfound or(c_m400%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'M400' || '|';
    gl_conteudo := gl_conteudo || lpad(rec_m400.cod_st, 2, '0') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_m400.vl_tot_rec, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || rec_m400.cod_cta || '|';
    gl_conteudo := gl_conteudo || rec_m400.desc_compl || '|';
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M400',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_m400 := nvl(gn_qtde_reg_m400, 0) + 1;
    --
    vn_fase := 4;
    --
    -- REGISTRO M410: DETALHAMENTO DAS RECEITAS ISENTAS
    for rec_m410 in c_m410(rec_m400.id,
                           rec_m400.codst_id,
                           rec_m400.cod_cta) loop
      exit when c_m410%notfound or(c_m410%notfound) is null;
      --
      vn_fase := 5;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M410' || '|';
      gl_conteudo := gl_conteudo || lpad(rec_m410.nat_rec, 3, '0') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m410.vl_rec, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_m410.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_m410.desc_compl || '|';
      --
      vn_fase := 6;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M410',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_m410 := nvl(gn_qtde_reg_m410, 0) + 1;
      --
    end loop;
    --
  end loop;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_m400 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_M400;
---------------------------------------------------------
--| Monta o REGISTRO M350: PIS/PASEP - FOLHA DE SALÁRIOS
---------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M350 IS
   --
   vn_fase  number := 0;
   --
   cursor c_m350 is
   select i.id
        , i.empresa_id
        , i.dt_ini
        , i.dt_fin
        , i.dm_situacao
        , i.vl_tot_fol
        , i.vl_exc_bc
        , i.vl_tot_bc
        , i.aliq_pis_fol
        , i.vl_tot_cont_fol
     from inf_pis_folha i
        , r_empresa_abertura_efd_pc  r
    where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and i.empresa_id       = r.empresa_id
      and i.dt_ini          >= gt_row_abertura_efd_pc.dt_ini
      and i.dt_fin          <= gt_row_abertura_efd_pc.dt_fin
      and i.dm_situacao      = 3 -- processada
    order by i.empresa_id, i.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_m350 in c_m350 loop
      exit when c_m350%notfound or (c_m350%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M350' || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m350.vl_tot_fol, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m350.vl_exc_bc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m350.vl_tot_bc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m350.aliq_pis_fol, '9990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m350.vl_tot_cont_fol, '9999999999990D99') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'M350'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_m350 := nvl(gn_qtde_reg_m350,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_m350 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_M350;
------------------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO M300: CONTRIBUIÇÃO DE PIS/PASEP DIFERIDA EM PERÍODOS ANTERIORES - VALORES A PAGAR NO PERÍODO
------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M300 IS
   --
   vn_fase  number := 0;
   --
   cursor c_m300 is
   select cp.id
        , cp.empresa_id
        , cp.dt_ini
        , cp.dt_fin
        , cp.dm_situacao
        , cp.contrsocapurpc_id
        , cs.cd cod_cont
        , cp.vl_cont_apur_difer
        , cp.dm_nat_cred_desc
        , cp.vl_cred_desc_difer
        , cp.vl_cont_difer_ant
        , cp.per_apur
        , cp.dt_receb
     from r_empresa_abertura_efd_pc re
        , contr_pis_dif_per_ant     cp
        , contr_soc_apur_pc         cs
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and cp.empresa_id       = re.empresa_id
      and cp.dt_ini          >= gt_row_abertura_efd_pc.dt_ini
      and cp.dt_fin          <= gt_row_abertura_efd_pc.dt_fin
      and cp.dm_situacao      = 3 -- processada
      and cs.id               = cp.contrsocapurpc_id
    order by cp.empresa_id, cp.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_m300 in c_m300 loop
      exit when c_m300%notfound or (c_m300%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M300' || '|';
      gl_conteudo := gl_conteudo || rec_m300.cod_cont || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m300.vl_cont_apur_difer, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_m300.dm_nat_cred_desc || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m300.vl_cred_desc_difer, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m300.vl_cont_difer_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || lpad(rec_m300.per_apur,6,'0') || '|';
      gl_conteudo := gl_conteudo || to_char(rec_m300.dt_receb, 'ddmmrrrr') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'M300'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_m300 := nvl(gn_qtde_reg_m300,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_m300 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_M300;
------------------------------------------------------------------------------------
--| Monta o REGISTRO M200: CONSOLIDAÇÃO DA CONTRIBUIÇÃO PARA O PIS/PASEP DO PERÍODO
------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M200 IS
  --
  vn_fase number := 0;
  --
  cursor c_m205(en_conscontrpis_id cons_contr_pis.id%type) is
    select cc.dm_num_campo,
           (lpad(tr.cd, 4, '0') || lpad(ti.cod_receita, 2, '0')) cod_receita,
           cc.vl_rec
      from cons_contr_pis_or cc, 
           tipo_ret_imp tr, 
           tipo_ret_imp_receita ti
     where cc.conscontrpis_id = en_conscontrpis_id
       and tr.id              = cc.tiporetimp_id
       and ti.id              = cc.tiporetimpreceita_id
     order by cc.dm_num_campo,
              (lpad(tr.cd, 4, '0') || lpad(ti.cod_receita, 2, '0'));
  --
  cursor c_m211(en_conscontrpis_id   cons_contr_pis.id%type,
                en_contrsocapurpc_id contr_soc_apur_pc.id%type) is
    select sc.dm_ind_tip_coop,
           nvl(sum(nvl(sc.vl_bc_cont_ant_exc_coop, 0)), 0) vl_bc_cont_ant_exc_coop,
           nvl(sum(nvl(sc.vl_exc_coop_ger, 0)), 0) vl_exc_coop_ger,
           nvl(sum(nvl(sc.vl_exc_esp_coop, 0)), 0) vl_exc_esp_coop,
           nvl(sum(nvl(sc.vl_bc_cont, 0)), 0) vl_bc_cont
      from cons_contr_pis            cc,
           det_cons_contr_pis        dc,
           soc_coop_comp_bc_calc_pis sc
     where cc.id                 = en_conscontrpis_id
       and dc.conscontrpis_id    = cc.id
       and dc.contrsocapurpc_id  = en_contrsocapurpc_id
       and sc.detconscontrpis_id = dc.id
     group by sc.dm_ind_tip_coop;
  --
  cursor c_m230(en_conscontrpis_id   cons_contr_pis.id%type,
                en_contrsocapurpc_id contr_soc_apur_pc.id%type) is
    select ia.id,
           ia.cnpj,
           ia.vl_vend,
           ia.vl_nao_receb,
           ia.vl_cont_dif,
           ia.vl_cred_dif,
           ia.tipocredpc_id,
           tc.cd cod_cred
      from cons_contr_pis     cc,
           det_cons_contr_pis dc,
           inf_adic_dif_pis   ia,
           tipo_cred_pc       tc
     where cc.id                 = en_conscontrpis_id
       and dc.conscontrpis_id    = cc.id
       and dc.contrsocapurpc_id  = en_contrsocapurpc_id
       and ia.detconscontrpis_id = dc.id
       and tc.id(+)              = ia.tipocredpc_id
     order by ia.id;
  --
BEGIN
  --
  vn_fase := 1;
  --
  -- Registro M200: Consolidação da Contribuição para o PIS/Pasep do Período
  for rec_m200 in c_m200(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m200%notfound or(c_m200%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'M200' || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_tot_cont_nc_per, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_tot_cred_desc, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_tot_cred_desc_ant, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_tot_cont_nc_dev, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_ret_nc, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_out_ded_nc, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_cont_nc_rec, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_tot_cont_cum_per, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_ret_cum, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_out_ded_cum, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_cont_cum_rec, 0), '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_m200.vl_tot_cont_rec, 0), '9999999999990D99') || '|';
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M200',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_m200 := nvl(gn_qtde_reg_m200, 0) + 1;
    --
    vn_fase := 4;
    --
    if gt_row_abertura_efd_pc.dt_ini >= to_date('01/03/2014', 'dd/mm/rrrr') then
      --
      -- A partir de Março/2014 versão 2.07
      -- Registro M205: Contribuição para o PIS/Pasep a Recolher - Detalhamento por Código de Receita
      for rec_m205 in c_m205(rec_m200.conscontrpis_id) loop
        exit when c_m205%notfound or(c_m205%notfound) is null;
        --
        vn_fase := 5;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M205' || '|';
        --
        gl_conteudo := gl_conteudo || lpad(rec_m205.dm_num_campo, 2, '0') || '|';
        gl_conteudo := gl_conteudo || lpad(rec_m205.cod_receita, 6, '0') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m205.vl_rec, '9999999999990D99') || '|';
        --
        vn_fase := 6;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M205',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m205 := nvl(gn_qtde_reg_m205, 0) + 1;
        --
      end loop; -- c_m205
      --
    end if;
    --
    vn_fase := 7;
    --
    -- Registro M210: Detalhamento da Contribuição para o PIS/Pasep do Período
    for rec_m210 in c_m210(rec_m200.conscontrpis_id) loop
      exit when c_m210%notfound or(c_m210%notfound) is null;
      --
      vn_fase := 8;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M210' || '|';
      gl_conteudo := gl_conteudo || rec_m210.cod_cont || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_rec_brt, '9999999999990D99') || '|';
      --
      if nvl(rec_m210.quant_bc_pis, 0) <> 0 then
        --
        -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || fkg_formata_num(0, '999999999990D99') || '|'; -- Base de cálculo em valor
        --
        -- Campos Layout 1.28 - Vigorando à partir de 01/2019
        if gt_row_versao_layout_efd_pc.cd >= '005' then
          --
          vn_fase := 8.1;
          --
          gl_conteudo := gl_conteudo || rec_m210.vl_ajus_acres_bc_pis || '|';
          gl_conteudo := gl_conteudo || rec_m210.vl_ajus_reduc_bc_pis || '|';
          gl_conteudo := gl_conteudo || rec_m210.vl_bc_cont_ajus || '|';
          --
        end if;
        --
        gl_conteudo := gl_conteudo || '|'; -- Alíquota em percentual
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.quant_bc_pis, '999999999990D999') || '|'; -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_aliq_pis_quant, '99990D9999') || '|'; -- Alíquota do pis em quantidade
        --
      else
        -- Base de cálculo em valor
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_bc_cont, '9999999999990D99') || '|'; -- Base de cálculo em valor
        --
        -- Campos Layout 1.28 - Vigorando à partir de 01/2019
        if gt_row_versao_layout_efd_pc.cd >= '005' then
          --
          vn_fase := 8.2;
          --
          gl_conteudo := gl_conteudo || rec_m210.vl_ajus_acres_bc_pis || '|';
          gl_conteudo := gl_conteudo || rec_m210.vl_ajus_reduc_bc_pis || '|';
          gl_conteudo := gl_conteudo || rec_m210.vl_bc_cont_ajus || '|';
          --
        end if;
        --
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.aliq_pis, '9990D9999') || '|'; -- Alíquota em percentual
        gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || '|'; -- Alíquota do pis em quantidade
        --
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_cont_apur, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_ajust_acrec, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_ajust_reduc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_cont_difer, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_cont_difer_ant, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m210.vl_cont_per, '9999999999990D99') || '|';
      --
      vn_fase := 9;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M210',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_m210 := nvl(gn_qtde_reg_m210, 0) + 1;
      --
      vn_fase := 10;
      --
      -- Registro M211: Sociedades Cooperativas - Composição da Base de Calculo - PIS/Pasep
      for rec_m211 in c_m211(rec_m200.conscontrpis_id,
                             rec_m210.contrsocapurpc_id) loop
        exit when c_m211%notfound or(c_m211%notfound) is null;
        --
        vn_fase := 11;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M211' || '|';
        gl_conteudo := gl_conteudo || rec_m211.dm_ind_tip_coop || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m211.vl_bc_cont_ant_exc_coop, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m211.vl_exc_coop_ger, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m211.vl_exc_esp_coop,'9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m211.vl_bc_cont, '9999999999990D99') || '|';
        --
        vn_fase := 12;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M211',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m211 := nvl(gn_qtde_reg_m211, 0) + 1;
        --
      end loop; -- c_m211
      --
      vn_fase := 13;
      --
      -- O registro M215 deverá funcionar à partir de 2019
      if gt_row_versao_layout_efd_pc.cd >= '005' then
        --
        -- Registro M215: Ajustes da Base de Cálculo da Contribuição para o PIS/Pasep Apurada
        for rec_m215 in c_m215(rec_m210.detconscontrpis_id) loop
          exit when c_m215%notfound or(c_m215%notfound) is null;
          --
          vn_fase := 14;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'M215' || '|';
          gl_conteudo := gl_conteudo || rec_m215.dm_ind_aj_bc || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m215.vl_aj_bc, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || fkg_ret_cod_ajuste(rec_m215.codajbccontr_id) || '|';
          gl_conteudo := gl_conteudo || rec_m215.num_doc || '|';
          gl_conteudo := gl_conteudo || rec_m215.descr_aj_bc || '|';
          gl_conteudo := gl_conteudo || rec_m215.dt_ref || '|';
          gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(rec_m215.planoconta_id) || '|';
          gl_conteudo := gl_conteudo || rec_m215.cnpj || '|';
          gl_conteudo := gl_conteudo || rec_m215.info_compl || '|';
        
          --
          vn_fase := 15;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M215',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_m215 := nvl(gn_qtde_reg_m215, 0) + 1;
          --
        end loop; -- c_m215
        --
      end if;
      --
      vn_fase := 16;
      --
      -- Registro M220: Ajustes da Contribuição para o PIS/Pasep Apurada
      for rec_m220 in c_m220(rec_m200.conscontrpis_id,
                             rec_m210.contrsocapurpc_id) loop
        exit when c_m220%notfound or(c_m220%notfound) is null;
        --
        vn_fase := 17;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M220' || '|';
        gl_conteudo := gl_conteudo || rec_m220.dm_ind_aj || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m220.vl_aj, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_m220.cod_aj || '|';
        gl_conteudo := gl_conteudo || rec_m220.num_doc || '|';
        gl_conteudo := gl_conteudo || rec_m220.descr_aj || '|';
        gl_conteudo := gl_conteudo || to_char(rec_m220.dt_ref, 'ddmmrrrr') || '|';
        --
        vn_fase := 18;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M220',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m220 := nvl(gn_qtde_reg_m220, 0) + 1;
        --
        vn_fase := 19;
        --
        --| Registro M225: Detalhamento dos Ajustes da Contribuição Para o Pis/Pasep Apurada
        for rec_m225 in c_m225(rec_m220.id) loop
          exit when c_m225%notfound or(c_m225%notfound) is null;
          --
          vn_fase := 20;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'M225' || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m225.det_valor_aj, '9999999999990D99') || '|';
          --
          if nvl(rec_m225.codst_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod(rec_m225.codst_id) || '|';
            --
          end if;
          --
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m225.det_bc_cred, '9999999999990D999') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m225.det_aliq, '9990D9999') || '|';
          gl_conteudo := gl_conteudo || to_char(rec_m225.dt_oper_aj, 'ddmmrrrr') || '|';
          gl_conteudo := gl_conteudo || rec_m225.descr_aj || '|';
          --
          if nvl(rec_m225.planoconta_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(rec_m225.planoconta_id) || '|';
            --
          end if;
          --
          gl_conteudo := gl_conteudo || rec_m225.info_compl || '|';
          --
          vn_fase := 21;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M225',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_m225 := nvl(gn_qtde_reg_m225, 0) + 1;
          --
        end loop; -- c_m225
      --
      end loop; -- c_m220
      --
      vn_fase := 22;
      --
      -- Registro M230: Informações Adicionais de Diferimento
      for rec_m230 in c_m230(rec_m200.conscontrpis_id,
                             rec_m210.contrsocapurpc_id) loop
        exit when c_m230%notfound or(c_m230%notfound) is null;
        --
        vn_fase := 23;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M230' || '|';
        gl_conteudo := gl_conteudo || rec_m230.cnpj || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m230.vl_vend, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m230.vl_nao_receb, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m230.vl_cont_dif, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m230.vl_cred_dif, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_m230.cod_cred || '|';
        --
        vn_fase := 24;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M230',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m230 := nvl(gn_qtde_reg_m230, 0) + 1;
        --
      end loop; -- c_m230
    --
    end loop; -- c_m210
  --
  end loop; -- c_m200
  --
EXCEPTION
  WHEN OTHERS THEN
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_m200 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_M200;
--------------------------------------------------------------------
--| Monta o REGISTRO M100: CRÉDITO DE PIS/PASEP RELATIVO AO PERÍODO
--------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_M100 IS
  --
  vn_fase number := 0;
  --
  cursor c_m105(en_apurcredpis_id in apur_cred_pis.id%type) is
    select d.id,
           d.apurcredpis_id,
           d.basecalccredpc_id,
           bcc.cd nat_bc_cred,
           d.codst_id,
           cst.cod_st,
           d.vl_bc_pis_tot,
           d.vl_bc_pis_cum,
           d.vl_bc_pis_nc,
           d.vl_bc_pis,
           d.quant_bc_pis_tot,
           d.quant_bc_pis,
           d.desc_cred
      from det_apur_cred_pis d, 
           base_calc_cred_pc bcc, 
           cod_st cst
     where d.apurcredpis_id = en_apurcredpis_id
       and bcc.id           = d.basecalccredpc_id
       and cst.id           = d.codst_id
     order by d.id;
  --
BEGIN
  --
  vn_fase := 1;
  --
  if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 3 -- 3 - Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
     and gt_row_abertura_efd_pc_regime.dm_ind_apro_cred = 2) -- 2 - Método de Rateio Proporcional (Receita Bruta)
     or (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 -- 2 - Escrituração de operações com incidência exclusivamente no regime cumulativo
     and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9) -- 9 - Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
     or (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 1)) --1 - Escrituração de operações com incidência exclusivamente no regime não-cumulativo
   then
    -- 
    for rec_m100 in c_m100(gt_row_abertura_efd_pc.id,
                           gt_row_abertura_efd_pc.dt_ini,
                           gt_row_abertura_efd_pc.dt_fin) loop
      exit when c_m100%notfound or(c_m100%notfound) is null;
      --
      vn_fase := 2;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'M100' || '|';
      gl_conteudo := gl_conteudo || rec_m100.cod_cred || '|';
      gl_conteudo := gl_conteudo || rec_m100.dm_ind_cred_ori || '|';
      --
      -- Indicador de Credito Oriundo de: 0-Operações próprias; 1-Evento de incorporação, cisão ou fusão
      if rec_m100.dm_ind_cred_ori = 0 then
        --
        if nvl(rec_m100.quant_bc_pis, 0) <> 0 then
          --
          vn_fase := 3;
          --
          -- Base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em valor
          gl_conteudo := gl_conteudo || '|'; -- Alíquota em percentual
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.quant_bc_pis, '999999999990D999') || '|'; -- Base de cálculo em quantidade
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_aliq_pis_quant, '99990D9999') || '|'; -- Alíquota do pis em quantidade
          --
        else
          --
          vn_fase := 4;
          --
          -- Base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_bc_pis, '9999999999990D99') || '|'; -- Base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.aliq_pis, '9990D9999') || '|'; -- Alíquota em percentual
          gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- Alíquota do pis em quantidade
        end if;
        --
      else
        --
        vn_fase := 5;
        --
        gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em valor
        gl_conteudo := gl_conteudo || '|'; -- Alíquota em percentual
        gl_conteudo := gl_conteudo || '|'; -- Base de cálculo em quantidade
        gl_conteudo := gl_conteudo || '|'; -- Alíquota do pis em quantidade
        --
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_cred, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_ajus_acres, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_ajus_reduc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_cred_dif, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_cred_disp, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_m100.dm_ind_desc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_cred_desc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_m100.vl_sld_cred, '9999999999990D99') || '|';
      --
      vn_fase := 6;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M100',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_m100 := nvl(gn_qtde_reg_m100, 0) + 1;
      --
      vn_fase := 7;
      --
      --| Monta REGISTRO M105: DETALHAMENTO DA BASE DE CALCULO DO CRÉDITO APURADO NO PERÍODO - PIS/PASEP
      for rec_m105 in c_m105(rec_m100.id) loop
        exit when c_m105%notfound or(c_m105%notfound) is null;
        --
        vn_fase := 8;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M105' || '|';
        gl_conteudo := gl_conteudo || rec_m105.nat_bc_cred || '|';
        gl_conteudo := gl_conteudo || rec_m105.cod_st || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m105.vl_bc_pis_tot, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m105.vl_bc_pis_cum, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m105.vl_bc_pis_nc, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m105.vl_bc_pis, '9999999999990D99') || '|';
        --
        if rec_m100.cod_cred in (103, 203, 303, 105, 205, 305, 108, 208, 308) then
          --
          if nvl(rec_m105.quant_bc_pis_tot, 0) = 0 then
            --
            vn_fase := 9;
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            vn_fase := 10;
            --
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_m105.quant_bc_pis_tot, '999999999990D999') || '|';
            --
          end if;
          --
        else
          --
          gl_conteudo := gl_conteudo || '|';
          --
        end if;
        --
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m105.quant_bc_pis, '999999999990D999') || '|';
        gl_conteudo := gl_conteudo || rec_m105.desc_cred || '|';
        --
        vn_fase := 11;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M105',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m105 := nvl(gn_qtde_reg_m105, 0) + 1;
        --
      end loop; -- c_m105
      --
      vn_fase := 12;
      --
      --| Monta REGISTRO M110: AJUSTES DO CRÉDITO DE PIS/PASEP APURADO
      for rec_m110 in c_m110(rec_m100.id) loop
        exit when c_m110%notfound or(c_m110%notfound) is null;
        --
        vn_fase := 13;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'M110' || '|';
        gl_conteudo := gl_conteudo || rec_m110.dm_ind_aj || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_m110.vl_aj, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_m110.cod_aj || '|';
        gl_conteudo := gl_conteudo || rec_m110.num_doc || '|';
        gl_conteudo := gl_conteudo || rec_m110.descr_aj || '|';
        gl_conteudo := gl_conteudo || to_char(rec_m110.dt_ref, 'ddmmrrrr') || '|';
        --
        vn_fase := 14;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M110',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_m110 := nvl(gn_qtde_reg_m110, 0) + 1;
        --
        vn_fase := 15;
        --
        --| Monta REGISTRO M115: DETALHAMENTO DOS AJUSTES DO CRÉDITO DE PIS/PASEP APURADO
        for rec_m115 in c_m115(rec_m110.id) loop
          exit when c_m115%notfound or(c_m115%notfound) is null;
          --
          vn_fase := 16;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'M115' || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m115.det_valor_aj, '9999999999990D99') || '|';
          --
          if nvl(rec_m115.codst_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod(rec_m115.codst_id) || '|';
            --
          end if;
          --
          vn_fase := 17;
          --
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m115.det_bc_cred, '9999999999990D999') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_m115.det_aliq, '9990D9999') || '|';
          gl_conteudo := gl_conteudo || to_char(rec_m115.dt_oper_aj, 'ddmmrrrr') || '|';
          gl_conteudo := gl_conteudo || rec_m115.descr_aj || '|';
          --
          vn_fase := 18;
          --
          if nvl(rec_m115.planoconta_id, 0) = 0 then
            --
            gl_conteudo := gl_conteudo || '|';
            --
          else
            --
            gl_conteudo := gl_conteudo || pk_csf.fkg_cd_plano_conta(rec_m115.planoconta_id) || '|';
            --
          end if;
          --
          vn_fase := 19;
          --
          gl_conteudo := gl_conteudo || rec_m115.info_compl || '|';
          --
          vn_fase := 20;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'M115',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_m115 := nvl(gn_qtde_reg_m115, 0) + 1;
          --
        end loop; -- c_m115
      --
      end loop; -- c_m110
    --
    end loop; -- c_m100
    --
  end if;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_m100 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_M100;

-----------------------------------------------
--| Monta o REGISTRO M001: ABERTURA DO BLOCO M
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_M001 IS
   --
   vn_qtde_m100 number := 0;
   vn_qtde_m200 number := 0;
   vn_qtde_m300 number := 0;
   vn_qtde_m350 number := 0;
   vn_qtde_m400 number := 0;
   vn_qtde_m500 number := 0;
   vn_qtde_m600 number := 0;
   vn_qtde_m700 number := 0;
   vn_qtde_m800 number := 0;
   --
BEGIN
   --
   begin
      --
   select count(1)
     into vn_qtde_m100
     from r_empresa_abertura_efd_pc r
        , per_apur_cred_pis         pa
        , apur_cred_pis             ac
    where r.aberturaefdpc_id   = gt_row_abertura_efd_pc.id
      and pa.empresa_id        = r.empresa_id
      and pa.dt_ini           >= gt_row_abertura_efd_pc.dt_ini
      and pa.dt_fin           <= gt_row_abertura_efd_pc.dt_fin
      and ac.perapurcredpis_id = pa.id
      and ac.dm_situacao       = 3; -- Processada
      --
   exception
      when others then
         vn_qtde_m100 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m200
     from r_empresa_abertura_efd_pc re
        , per_cons_contr_pis        pc
        , cons_contr_pis            cc
    where re.aberturaefdpc_id   = gt_row_abertura_efd_pc.id
      and pc.empresa_id         = re.empresa_id
      and pc.dt_ini            >= gt_row_abertura_efd_pc.dt_ini
      and pc.dt_fin            <= gt_row_abertura_efd_pc.dt_fin
      and cc.perconscontrpis_id = pc.id
      and cc.dm_situacao        = 3; -- processada
      --
   exception
      when others then
         vn_qtde_m200 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m300
     from r_empresa_abertura_efd_pc re
        , contr_pis_dif_per_ant     cp
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and cp.empresa_id       = re.empresa_id
      and cp.dt_ini          >= gt_row_abertura_efd_pc.dt_ini
      and cp.dt_fin          <= gt_row_abertura_efd_pc.dt_fin
      and cp.dm_situacao      = 3; -- processada
      --
   exception
      when others then
         vn_qtde_m300 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m350
     from inf_pis_folha i
        , r_empresa_abertura_efd_pc  r
    where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and i.empresa_id       = r.empresa_id
      and i.dt_ini          >= gt_row_abertura_efd_pc.dt_ini
      and i.dt_fin          <= gt_row_abertura_efd_pc.dt_fin
      and i.dm_situacao      = 3; -- processada
      --
   exception
      when others then
         vn_qtde_m350 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m400
     from r_empresa_abertura_efd_pc ra
        , per_rec_isenta_pis        pr
        , rec_isenta_pis            ri
    where ra.aberturaefdpc_id   = gt_row_abertura_efd_pc.id
      and pr.empresa_id         = ra.empresa_id
      and pr.dt_ini            >= gt_row_abertura_efd_pc.dt_ini
      and pr.dt_fin            <= gt_row_abertura_efd_pc.dt_fin
      and ri.perrecisentapis_id = pr.id
      and ri.dm_situacao        = 3; -- processada
      --
   exception
      when others then
         vn_qtde_m400 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m500
     from r_empresa_abertura_efd_pc r
        , per_apur_cred_cofins pa
        , apur_cred_cofins ac
    where r.aberturaefdpc_id      = gt_row_abertura_efd_pc.id
      and pa.empresa_id           = r.empresa_id
      and pa.dt_ini              >= gt_row_abertura_efd_pc.dt_ini
      and pa.dt_fin              <= gt_row_abertura_efd_pc.dt_fin
      and ac.perapurcredcofins_id = pa.id
      and ac.dm_situacao          = 3; -- Processada
      --
   exception
      when others then
         vn_qtde_m500 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m600
     from r_empresa_abertura_efd_pc re
        , per_cons_contr_cofins     pc
        , cons_contr_cofins         cc
    where re.aberturaefdpc_id      = gt_row_abertura_efd_pc.id
      and pc.empresa_id            = re.empresa_id
      and pc.dt_ini               >= gt_row_abertura_efd_pc.dt_ini
      and pc.dt_fin               <= gt_row_abertura_efd_pc.dt_fin
      and cc.perconscontrcofins_id = pc.id
      and cc.dm_situacao           = 3; -- processada
      --
   exception
      when others then
         vn_qtde_m600 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m700
     from r_empresa_abertura_efd_pc re
        , contr_cofins_dif_per_ant  cc
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and cc.empresa_id       = re.empresa_id
      and cc.dt_ini          >= gt_row_abertura_efd_pc.dt_ini
      and cc.dt_fin          <= gt_row_abertura_efd_pc.dt_fin
      and cc.dm_situacao      = 3; -- processada
      --
   exception
      when others then
         vn_qtde_m700 := 0;
   end;
   --
   begin
      --
   select count(1)
     into vn_qtde_m800
     from r_empresa_abertura_efd_pc re
        , per_rec_isenta_cofins     pr
        , rec_isenta_cofins         ri
    where re.aberturaefdpc_id      = gt_row_abertura_efd_pc.id
      and pr.empresa_id            = re.empresa_id
      and pr.dt_ini               >= gt_row_abertura_efd_pc.dt_ini
      and pr.dt_fin               <= gt_row_abertura_efd_pc.dt_fin
      and ri.perrecisentacofins_id = pr.id
      and ri.dm_situacao           = 3; -- processada
      --
   exception
      when others then
         vn_qtde_m800 := 0;
   end;
   --
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'M001' || '|';
   --
   if nvl(vn_qtde_m100,0) > 0
      or nvl(vn_qtde_m200,0) > 0
      or nvl(vn_qtde_m300,0) > 0
      or nvl(vn_qtde_m350,0) > 0
      or nvl(vn_qtde_m400,0) > 0
      or nvl(vn_qtde_m500,0) > 0
      or nvl(vn_qtde_m600,0) > 0
      or nvl(vn_qtde_m700,0) > 0
      or nvl(vn_qtde_m800,0) > 0
      then
      gl_conteudo := gl_conteudo || 0 || '|';
   else
      gl_conteudo := gl_conteudo || 1 || '|';
   end if;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'M001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_m001 := 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_m001: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_M001;
--------------------------------------------------------------------------
--| BLOCO M - APURAÇÃO DA CONTRIBUIÇÃO E CRÉDITO DO PIS/PASEP E DA COFINS
--------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_M IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   --
   -- monta o REGISTRO M001: ABERTURA DO BLOCO M
   pkb_monta_reg_m001;
   --
   vn_fase := 2;
   --
   -- monta o REGISTRO M100: CRÉDITO DE PIS/PASEP RELATIVO AO PERÍODO
   pkb_monta_reg_m100;
   --
   vn_fase := 3;
   --
   -- monta o REGISTRO M200: CONSOLIDAÇÃO DA CONTRIBUIÇÃO PARA O PIS/PASEP DO PERÍODO
   pkb_monta_reg_m200;
   --
   vn_fase := 4;
   --
   -- monta o REGISTRO M300: CONTRIBUIÇÃO DE PIS/PASEP DIFERIDA EM PERÍODOS ANTERIORES - VALORES A PAGAR NO PERÍODO
   pkb_monta_reg_m300;
   --
   vn_fase := 5;
   --
   -- monta o REGISTRO M350: PIS/PASEP - FOLHA DE SALÁRIOS
   pkb_monta_reg_m350;
   --
   vn_fase := 6;
   --
   -- monta o REGISTRO M400: RECEITAS ISENTAS
   pkb_monta_reg_m400;
   --
   vn_fase := 7;
   -- monta o REGISTRO M500: CRÉDITO DE COFINS RELATIVO AO PERÍODO
   pkb_monta_reg_m500;
   --
   vn_fase := 8;
   -- monta o REGISTRO M600: CONSOLIDAÇÃO DA CONTRIBUIÇÃO PARA A SEGURIDADE SOCIAL - COFINS DO PERÍODO
   pkb_monta_reg_m600;
   --
   vn_fase := 9;
   -- monta o REGISTRO M700: COFINS DIFERIDA EM PERÍODOS ANTERIORES - VALORES A PAGAR NO PERÍODO
   pkb_monta_reg_m700;
   --
   vn_fase := 10;
   -- monta o REGISTRO M800: RECEITAS ISENTAS, NÃO ALCANÇADAS PELA INCIDÊNCIA DA CONTRIBUIÇÃO, SUJEITAS A ALÍQUOTA ZERO OU DE VENDAS COM SUSPENSÃO - COFINS
   pkb_monta_reg_m800;
   --
   vn_fase := 11;
   --
   -- monta o REGISTRO M990: ENCERRAMENTO DO BLOCO M
   pkb_monta_reg_m990;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_m fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_M;
---------------------------------------------------
--| Monta o REGISTRO I990: ENCERRAMENTO DO BLOCO I
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_I990 IS
BEGIN
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gn_qtde_reg_i990 := 1;
   --
   gl_conteudo := gl_conteudo || 'I990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_i001 +
                                   gn_qtde_reg_i010 +
                                   gn_qtde_reg_i100 +
                                   gn_qtde_reg_i199 +
                                   gn_qtde_reg_i200 +
                                   gn_qtde_reg_i299 +
                                   gn_qtde_reg_i300 +
                                   gn_qtde_reg_i399 +
                                   gn_qtde_reg_i990
                                  )
                              || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_i990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_I990;
----------------------------------------------------------------------------
--| Monta o REGISTRO I010: IDENTIFICAÇÃO DA PESSOA JURIDICA/ESTABELECIMENTO
----------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_I010 IS
   --
   vn_fase number := 0;
   --
   cursor c_i010 is
      select ap.id abertefdpcoifdestab_id
           , ap.empresa_id
           , ap.dm_ind_ativ
           , ap.info_compl
        from r_empresa_abertura_efd_pc r
           , abertura_efd_pc_oifd      ae
           , abert_efd_pc_oifd_estab   ap
       where r.aberturaefdpc_id      = gt_row_abertura_efd_pc.id
         and ae.empresa_id           = r.empresa_id
         and ae.dt_inicial          >= gt_row_abertura_efd_pc.dt_ini
         and ae.dt_final            <= gt_row_abertura_efd_pc.dt_fin
         and ap.aberturaefdpcoifd_id = ae.id
         and ap.dm_st_proc           = 3; -- Validado
   --
   cursor c_i100(en_abertefdpcoifdestab_id in abert_efd_pc_oifd_estab.id%type) is
      select co.codst_id_pis_cofins
           , cs.cod_st cst_pis_cofins
           , co.aliq_pis
           , co.aliq_cofins
           , co.info_compl
           , nvl(sum(nvl(co.vl_rec,0)),0) vl_rec
           , nvl(sum(nvl(co.vl_tot_ded_ger,0)),0) vl_tot_ded_ger
           , nvl(sum(nvl(co.vl_tot_ded_esp,0)),0) vl_tot_ded_esp
           , nvl(sum(nvl(co.vl_bc_pis,0)),0) vl_bc_pis
           , nvl(sum(nvl(co.vl_pis,0)),0) vl_pis
           , nvl(sum(nvl(co.vl_bc_cofins,0)),0) vl_bc_cofins
           , nvl(sum(nvl(co.vl_cofins,0)),0) vl_cofins
        from consol_oper_per_oifd co
           , cod_st               cs
       where co.abertefdpcoifdestab_id = en_abertefdpcoifdestab_id
         and cs.id                     = co.codst_id_pis_cofins
       group by co.codst_id_pis_cofins
           , cs.cod_st
           , co.aliq_pis
           , co.aliq_cofins
           , co.info_compl;
   --
   cursor c_i199( en_codst_id_pis_cofins in consol_oper_per_oifd.codst_id_pis_cofins%type
                , en_aliq_pis            in consol_oper_per_oifd.aliq_pis%type
                , en_aliq_cofins         in consol_oper_per_oifd.aliq_cofins%type
                , ev_info_compl          in consol_oper_per_oifd.info_compl%type ) is
      select cp.num_proc
           , cp.dm_ind_proc
        from consol_oper_per_oifd co
           , consol_proc_ref      cp
       where co.codst_id_pis_cofins  = en_codst_id_pis_cofins
         and co.aliq_pis             = en_aliq_pis
         and co.aliq_cofins          = en_aliq_cofins
         and nvl(co.info_compl,'')   = nvl(ev_info_compl,'')
         and cp.consoloperperoifd_id = co.id;
   --
   cursor c_i200( en_codst_id_pis_cofins in consol_oper_per_oifd.codst_id_pis_cofins%type
                , en_aliq_pis            in consol_oper_per_oifd.aliq_pis%type
                , en_aliq_cofins         in consol_oper_per_oifd.aliq_cofins%type
                , ev_info_compl          in consol_oper_per_oifd.info_compl%type ) is
      select cr.num_campo
           , cr.codcomposdetoifd_id
           , cc.cod_det
           , cr.planoconta_id
           , pc.cod_cta
           , cr.info_compl
           , nvl(sum(nvl(cr.det_valor,0)),0) det_valor
        from consol_oper_per_oifd   co
           , compos_recdedexcl_oifd cr
           , cod_compos_det_oifd    cc
           , plano_conta            pc
       where co.codst_id_pis_cofins  = en_codst_id_pis_cofins
         and co.aliq_pis             = en_aliq_pis
         and co.aliq_cofins          = en_aliq_cofins
         and nvl(co.info_compl,'')   = nvl(ev_info_compl,'')
         and cr.consoloperperoifd_id = co.id
         and cc.id(+)                = cr.codcomposdetoifd_id
         and pc.id(+)                = cr.planoconta_id
       group by cr.num_campo
           , cr.codcomposdetoifd_id
           , cc.cod_det
           , cr.planoconta_id
           , pc.cod_cta
           , cr.info_compl
       order by cr.num_campo
           , cr.codcomposdetoifd_id
           , cc.cod_det
           , cr.planoconta_id
           , pc.cod_cta
           , cr.info_compl;
   --
   cursor c_i299( en_num_campo           in compos_recdedexcl_oifd.num_campo%type
                , en_codcomposdetoifd_id in compos_recdedexcl_oifd.codcomposdetoifd_id%type
                , en_planoconta_id       in compos_recdedexcl_oifd.planoconta_id%type
                , ev_info_compl          in compos_recdedexcl_oifd.info_compl%type ) is
      select cp.num_proc
           , cp.dm_ind_proc
        from compos_recdedexcl_oifd cr
           , compos_proc_ref        cp
       where cr.num_campo                  = en_num_campo
         and nvl(cr.codcomposdetoifd_id,0) = nvl(en_codcomposdetoifd_id,0)
         and nvl(cr.planoconta_id,0)       = nvl(en_planoconta_id,0)
         and nvl(cr.info_compl,'')         = nvl(ev_info_compl,'')
         and cp.composrecdedexcloifd_id    = cr.id;
   --
   cursor c_i300( en_num_campo           in compos_recdedexcl_oifd.num_campo%type
                , en_codcomposdetoifd_id in compos_recdedexcl_oifd.codcomposdetoifd_id%type
                , en_planoconta_id       in compos_recdedexcl_oifd.planoconta_id%type
                , ev_info_compl          in compos_recdedexcl_oifd.info_compl%type ) is
      select cd.codcomploperoifd_id
           , cc.cod_comp
           , cd.planoconta_id
           , pc.cod_cta
           , cd.info_compl
           , nvl(sum(nvl(cd.det_valor,0)),0) det_valor
        from compos_recdedexcl_oifd cr
           , compl_detal_oper_oifd  cd
           , cod_compl_oper_oifd    cc
           , plano_conta            pc
       where cr.num_campo                  = en_num_campo
         and nvl(cr.codcomposdetoifd_id,0) = nvl(en_codcomposdetoifd_id,0)
         and nvl(cr.planoconta_id,0)       = nvl(en_planoconta_id,0)
         and nvl(cr.info_compl,'')         = nvl(ev_info_compl,'')
         and cd.composrecdedexcloifd_id    = cr.id
         and cc.id(+)                      = cd.codcomploperoifd_id
         and pc.id(+)                      = cd.planoconta_id
       group by cd.codcomploperoifd_id
           , cc.cod_comp
           , cd.planoconta_id
           , pc.cod_cta
           , cd.info_compl;
   --
   cursor c_i399( en_codcomploperoifd_id in compl_detal_oper_oifd.codcomploperoifd_id%type
                , en_planoconta_id       in compl_detal_oper_oifd.planoconta_id%type
                , ev_info_compl          in compl_detal_oper_oifd.info_compl%type ) is
      select cp.num_proc
           , cp.dm_ind_proc
        from compl_detal_oper_oifd cd
           , compl_proc_ref        cp
       where nvl(cd.codcomploperoifd_id,0) = nvl(en_codcomploperoifd_id,0)
         and nvl(cd.planoconta_id,0)       = nvl(en_planoconta_id,0)
         and nvl(cd.info_compl,'')         = nvl(ev_info_compl,'')
         and cp.compldetaloperoifd_id      = cd.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for r_i010 in c_i010
   loop
      --
      exit when c_i010%notfound or (c_i010%notfound is null);
      --
      vn_fase := 2;
      --
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'I010' || '|';
      gl_conteudo := gl_conteudo || trim(pk_csf.fkg_cnpj_ou_cpf_empresa(en_empresa_id => r_i010.empresa_id)) || '|';
      gl_conteudo := gl_conteudo || lpad(r_i010.dm_ind_ativ,2,'0') || '|';
      gl_conteudo := gl_conteudo || trim(r_i010.info_compl) || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I010'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_i010 := gn_qtde_reg_i010 + 1;
      --
      vn_fase := 4;
      -- Registro obrigatório: se no registro 0110 o Campo ¿IND_ATIV¿ igual a ¿3-Atividade financeira"
      if gt_row_abertura_efd_pc.dm_ind_ativ = 3 then
         --
         vn_fase := 5;
         -- Montar o registro I100-Consolidação das operações do período
         for r_i100 in c_i100(en_abertefdpcoifdestab_id => r_i010.abertefdpcoifdestab_id)
         loop
            --
            exit when c_i100%notfound or (c_i100%notfound is null);
            --
            vn_fase := 6;
            --
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'I100' || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.vl_rec, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || r_i100.cst_pis_cofins || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.vl_tot_ded_ger, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.vl_tot_ded_esp, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.vl_bc_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.aliq_pis, '999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.vl_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.vl_bc_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.aliq_cofins, '999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(r_i100.vl_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || r_i100.info_compl || '|';
            --
            vn_fase := 7;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I100'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_i100 := gn_qtde_reg_i100 + 1;
            --
            vn_fase := 8;
            -- Montar o registro I200-Composição das receitas, deduções e/ou exclusões do período
            for r_i200 in c_i200( en_codst_id_pis_cofins => r_i100.codst_id_pis_cofins
                                , en_aliq_pis            => r_i100.aliq_pis
                                , en_aliq_cofins         => r_i100.aliq_cofins
                                , ev_info_compl          => r_i100.info_compl )
            loop
               --
               exit when c_i200%notfound or (c_i200%notfound is null);
               --
               vn_fase := 9;
               --
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'I200' || '|';
               gl_conteudo := gl_conteudo || r_i200.num_campo || '|';
               gl_conteudo := gl_conteudo || r_i200.cod_det || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(r_i200.det_valor, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || r_i200.cod_cta || '|';
               gl_conteudo := gl_conteudo || r_i200.info_compl || '|';
               --
               vn_fase := 10;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I200'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_i200 := gn_qtde_reg_i200 + 1;
               --
               vn_fase := 11;
               -- Montar o registro I300-Complemento das operações - detalhamento das receitas, deduções e/ou exclusões do período
               for r_i300 in c_i300( en_num_campo           => r_i200.num_campo
                                   , en_codcomposdetoifd_id => r_i200.codcomposdetoifd_id
                                   , en_planoconta_id       => r_i200.planoconta_id
                                   , ev_info_compl          => r_i200.info_compl )
               loop
                  --
                  exit when c_i300%notfound or (c_i300%notfound is null);
                  --
                  vn_fase := 12;
                  --
                  gl_conteudo := '|';
                  --
                  gl_conteudo := gl_conteudo || 'I300' || '|';
                  gl_conteudo := gl_conteudo || r_i300.cod_comp || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(r_i300.det_valor, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || r_i300.cod_cta || '|';
                  gl_conteudo := gl_conteudo || r_i300.info_compl || '|';
                  --
                  vn_fase := 13;
                  --
                  pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I300'
                                            , el_conteudo => gl_conteudo );
                  --
                  gn_qtde_reg_i300 := gn_qtde_reg_i300 + 1;
                  --
                  vn_fase := 14;
                  -- Montar o registro I399-Processo Referenciado do Complemento das Operações - Receitas, Deduções e/ou Exclusões do período
                  for r_i399 in c_i399( en_codcomploperoifd_id => r_i300.codcomploperoifd_id
                                      , en_planoconta_id       => r_i300.planoconta_id
                                      , ev_info_compl          => r_i300.info_compl )
                  loop
                     --
                     exit when c_i399%notfound or (c_i399%notfound is null);
                     --
                     vn_fase := 15;
                     --
                     gl_conteudo := '|';
                     --
                     gl_conteudo := gl_conteudo || 'I399' || '|';
                     gl_conteudo := gl_conteudo || r_i399.num_proc || '|';
                     gl_conteudo := gl_conteudo || r_i399.dm_ind_proc || '|';
                     --
                     vn_fase := 16;
                     --
                     pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I399'
                                               , el_conteudo => gl_conteudo );
                     --
                     gn_qtde_reg_i399 := gn_qtde_reg_i399 + 1;
                     --
                  end loop; -- registro I399
                  --
               end loop; -- registro I300
               --
               vn_fase := 17;
               -- Montar o registro I299-Processo Referenciado da Composição das receitas, deduções e/ou exclusões do período
               for r_i299 in c_i299( en_num_campo           => r_i200.num_campo
                                   , en_codcomposdetoifd_id => r_i200.codcomposdetoifd_id
                                   , en_planoconta_id       => r_i200.planoconta_id
                                   , ev_info_compl          => r_i200.info_compl )
               loop
                  --
                  exit when c_i299%notfound or (c_i299%notfound is null);
                  --
                  vn_fase := 18;
                  --
                  gl_conteudo := '|';
                  --
                  gl_conteudo := gl_conteudo || 'I299' || '|';
                  gl_conteudo := gl_conteudo || r_i299.num_proc || '|';
                  gl_conteudo := gl_conteudo || r_i299.dm_ind_proc || '|';
                  --
                  vn_fase := 19;
                  --
                  pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I299'
                                            , el_conteudo => gl_conteudo );
                  --
                  gn_qtde_reg_i299 := gn_qtde_reg_i299 + 1;
                  --
               end loop; -- registro I299
               --
            end loop; -- registro I200
            --
            vn_fase := 20;
            -- Montar o registro I199-Processo Referenciado da Consolidação das operações do período
            for r_i199 in c_i199( en_codst_id_pis_cofins => r_i100.codst_id_pis_cofins
                                , en_aliq_pis            => r_i100.aliq_pis
                                , en_aliq_cofins         => r_i100.aliq_cofins
                                , ev_info_compl          => r_i100.info_compl )
            loop
               --
               exit when c_i199%notfound or (c_i199%notfound is null);
               --
               vn_fase := 21;
               --
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'I199' || '|';
               gl_conteudo := gl_conteudo || r_i199.num_proc || '|';
               gl_conteudo := gl_conteudo || r_i199.dm_ind_proc || '|';
               --
               vn_fase := 22;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I199'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_i199 := gn_qtde_reg_i199 + 1;
               --
            end loop; -- registro I199
            --
         end loop; -- registro I100
         --
      end if; -- indicador de atividade <> 3-Atividade Financeira
      --
   end loop; -- registro I010
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_i010 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_I010;
-----------------------------------------------
--| Monta o REGISTRO I001: ABERTURA DO BLOCO I
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_I001 IS
   --
   vn_qtde_i010 number := 0;
   --
BEGIN
   --
   begin
      select count(1)
        into vn_qtde_i010
        from r_empresa_abertura_efd_pc r
           , abertura_efd_pc_oifd      ae
           , abert_efd_pc_oifd_estab   ap
       where r.aberturaefdpc_id      = gt_row_abertura_efd_pc.id
         and ae.empresa_id           = r.empresa_id
         and ae.dt_inicial          >= gt_row_abertura_efd_pc.dt_ini
         and ae.dt_final            <= gt_row_abertura_efd_pc.dt_fin
         and ap.aberturaefdpcoifd_id = ae.id
         and ap.dm_st_proc           = 3; -- Validado
   exception
      when others then
         vn_qtde_i010 := 0;
   end;
   --
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'I001' || '|';
   --
   if nvl(vn_qtde_i010,0) > 0 then
      gl_conteudo := gl_conteudo || 0 || '|';
   else
      gl_conteudo := gl_conteudo || 1 || '|';
   end if;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'I001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_i001 := 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_i001: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_I001;
-------------------------------------------------------------------------------------------------------------------------------------------
--| BLOCO I - OPERAÇÕES DAS INSTITUIÇÕES FINANCEIRAS, SEGURADORAS, ENTIDADES DE PREVIDENCIA PRIVADA, OPERADORAS DE PLANOS DE ASSISTÊNCIA À
--| SAÚDE E DEMAIS PESSOAS JURÍDICAS REFERIDAS NOS §§ 6º, 8º E 9º DO ART. 3º DA LEI nº 9.718/98.
-------------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_I IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- monta o REGISTRO I001: ABERTURA DO BLOCO I
   pkb_monta_reg_i001;
   --
   vn_fase := 2;
   -- monta o REGISTRO I010: IDENTIFICAÇÃO DA PESSOA JURIDICA/ESTABELECIMENTO
   -- monta o REGISTRO I100: CONSOLIDAÇÃO DAS OPERAÇÕES DO PERÍODO
   -- monta o REGISTRO I199: PROCESSO REFERENCIADO
   -- monta o REGISTRO I200: COMPOSIÇÃO DAS RECEITAS, DEDUÇÕES E/OU EXCLUSÕES DO PERÍODO
   -- monta o REGISTRO I299: PROCESSO REFERENCIADO
   -- monta o REGISTRO I300: COMPLEMENTO DAS OPERAÇÕES - DETALHAMENTO DAS RECEITAS, DEDUÇÕES E/OU EXCLUSÕES DO PERÍODO
   -- monta o REGISTRO I399: PROCESSO REFERENCIADO
   pkb_monta_reg_i010;
   --
   vn_fase := 3;
   -- monta o REGISTRO I990: ENCERRAMENTO DO BLOCO I
   pkb_monta_reg_i990;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_i fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_I;
--------------------------------------------------------------------------------------------------------------
--| Monta os REGISTROS A, C e D: somente os valores iniciais devido ao tipo de indicador de regime cumulativo
--------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_ACD IS
   --
   vn_fase number;
   --
BEGIN
   --
   vn_fase := 1;
   -- cria a estrutura do registro separado por PIPE "|"
   -- montar o registro A
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'A001' || '|';
   gl_conteudo := gl_conteudo || '1' || '|'; -- Bloco sem dados informados
   --
   vn_fase := 2;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_a001 := 1;
   --
   vn_fase := 3;
   --
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'A990' || '|';
   gl_conteudo := gl_conteudo || '2' || '|';
   --
   vn_fase := 4;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A990'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_a990 := 1;
   --
   vn_fase := 5;
   -- montar o registro C
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'C001' || '|';
   gl_conteudo := gl_conteudo || '1' || '|'; -- Bloco sem dados informados
   --
   vn_fase := 6;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_c001 := 1;
   --
   vn_fase := 7;
   --
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'C990' || '|';
   gl_conteudo := gl_conteudo || '2' || '|';
   --
   vn_fase := 8;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C990'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_c990 := 1;
   --
   vn_fase := 9;
   -- montar o registro D
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'D001' || '|';
   gl_conteudo := gl_conteudo || '1' || '|'; -- Bloco sem dados informados
   --
   vn_fase := 10;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_d001 := 1;
   --
   vn_fase := 11;
   --
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'D990' || '|';
   gl_conteudo := gl_conteudo || '2' || '|';
   --
   vn_fase := 12;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D990'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_d990 := 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_acd fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_ACD;
---------------------------------------------------
--| Monta o REGISTRO F990: ENCERRAMENTO DO BLOCO F
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_F990 IS
BEGIN
   --
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gn_qtde_reg_f990 := 1;
   --
   gl_conteudo := gl_conteudo || 'F990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_f001 +
                                   gn_qtde_reg_f010 +
                                   gn_qtde_reg_f100 +
                                   gn_qtde_reg_f111 +
                                   gn_qtde_reg_f120 +
                                   gn_qtde_reg_f129 +
                                   gn_qtde_reg_f130 +
                                   gn_qtde_reg_f139 +
                                   gn_qtde_reg_f150 +
                                   gn_qtde_reg_f200 +
                                   gn_qtde_reg_f205 +
                                   gn_qtde_reg_f210 +
                                   gn_qtde_reg_f211 +
                                   gn_qtde_reg_f500 +
                                   gn_qtde_reg_f509 +
                                   gn_qtde_reg_f510 +
                                   gn_qtde_reg_f519 +
                                   gn_qtde_reg_f525 +
                                   gn_qtde_reg_f550 +
                                   gn_qtde_reg_f559 +
                                   gn_qtde_reg_f560 +
                                   gn_qtde_reg_f569 +
                                   gn_qtde_reg_f600 +
                                   gn_qtde_reg_f700 +
                                   gn_qtde_reg_f800 +
                                   gn_qtde_reg_f990
                                 )
                              || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F990;
------------------------------------------------------------------------------------------
--| Monta o REGISTRO F800: CRÉDITOS DECORRENTES DE EVENTOS DE INCORPORAÇÃO, FUSÃO E CISÃO
------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F800 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f800 is
   select cde.id
        , cde.empresa_id
        , cde.dm_ind_nat_even
        , cde.dt_evento
        , cde.cnpj_suced
        , cde.pa_cont_cred
        , cde.tipocredpc_id
        , tc.cd cod_cred
        , cde.vl_cred_pis
        , cde.vl_cred_cofins
        , cde.per_cred_cisao
        , cde.dm_st_proc
        , cde.dm_st_integra
     from cred_decor_evento_pc cde
        , tipo_cred_pc tc
    where cde.empresa_id      = en_empresa_id
      and cde.dt_evento between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and cde.dm_st_proc      = 1 -- validado
      and tc.id               = cde.tipocredpc_id
    order by cde.empresa_id, cde.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f800 in c_f800 loop
      exit when c_f800%notfound or (c_f800%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F800' || '|';
      gl_conteudo := gl_conteudo || rec_f800.dm_ind_nat_even || '|';
      gl_conteudo := gl_conteudo || to_char(rec_f800.dt_evento, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || rec_f800.cnpj_suced || '|';
      gl_conteudo := gl_conteudo || lpad(rec_f800.pa_cont_cred,6,'0') || '|';
      gl_conteudo := gl_conteudo || rec_f800.cod_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f800.vl_cred_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f800.vl_cred_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f800.per_cred_cisao, '9990D99') || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F800'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f800 := nvl(gn_qtde_reg_f800,0) + 1;
      --
   end loop; -- c_f800
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f800 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F800;
---------------------------------------------
--| Monta o REGISTRO F700: DEDUÇÕES DIVERSAS
---------------------------------------------
PROCEDURE PKB_MONTA_REG_F700 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f700 is
   select dd.id
        , dd.empresa_id
        , dd.ano_ref
        , dd.mes_ref
        , dd.dm_ind_ori_ded
        , dd.dm_ind_nat_ded
        , dd.vl_ded_pis
        , dd.vl_ded_cofins
        , dd.vl_bc_oper
        , dd.cnpj
        , dd.inf_comp
        , dd.dm_st_proc
        , dd.dm_st_integra
     from deducao_diversa_pc dd
    where dd.empresa_id      = en_empresa_id
      and dd.ano_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and dd.mes_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and dd.dm_st_proc      = 1 -- validado
     order by dd.empresa_id, dd.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f700 in c_f700 loop
      exit when c_f700%notfound or (c_f700%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F700' || '|';
      gl_conteudo := gl_conteudo || rec_f700.dm_ind_ori_ded || '|';
      gl_conteudo := gl_conteudo || rec_f700.dm_ind_nat_ded || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f700.vl_ded_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f700.vl_ded_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f700.vl_bc_oper, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f700.cnpj || '|';
      gl_conteudo := gl_conteudo || rec_f700.inf_comp || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F700'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f700 := nvl(gn_qtde_reg_f700,0) + 1;
      --
   end loop; -- c_f700
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f700 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F700;
--------------------------------------------------------
--| Monta o REGISTRO F600: CONTRIBUIÇÃO RETIDA NA FONTE
--------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F600 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f600 is
   select crf.empresa_id,
          crf.dm_ind_nat_ret,
          crf.dt_ret,
          sum(crf.vl_bc_ret) vl_bc_ret,
          sum(crf.vl_rec) vl_rec,
          crf.cod_rec,
          crf.dm_ind_nat_rec,
          crf.cnpj,
          sum(crf.vl_ret_pis) vl_ret_pis,
          sum(crf.vl_ret_cofins) vl_ret_cofins,
          crf.dm_ind_dec,
          crf.dm_st_proc,
          crf.dm_st_integra
     from contr_ret_fonte_pc crf
    where crf.empresa_id = en_empresa_id
      and crf.dt_ret between gt_row_abertura_efd_pc.dt_ini and
          gt_row_abertura_efd_pc.dt_fin
      and crf.dm_st_proc = 1 -- validado
    group by empresa_id,
             dm_ind_nat_ret,
             dt_ret,
             cod_rec,
             dm_ind_nat_rec,
             cnpj,
             dm_ind_dec,
             dm_st_proc,
             dm_st_integra
    order by crf.empresa_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f600 in c_f600 loop
      exit when c_f600%notfound or (c_f600%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F600' || '|';
      gl_conteudo := gl_conteudo || rec_f600.dm_ind_nat_ret || '|';
      gl_conteudo := gl_conteudo || to_char(rec_f600.dt_ret, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f600.vl_bc_ret, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f600.vl_rec, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f600.cod_rec || '|';
      gl_conteudo := gl_conteudo || rec_f600.dm_ind_nat_rec || '|';
      gl_conteudo := gl_conteudo || rec_f600.cnpj || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f600.vl_ret_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f600.vl_ret_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f600.dm_ind_dec || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F600'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f600 := nvl(gn_qtde_reg_f600,0) + 1;
      --
   end loop; -- c_f600
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f600 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F600;
--------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO 560: Incid. do PIS/COFINS pelo reg. de comp. (Apur. da contr. por unid. de med. de prod., alíq. em reais
--------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F560 (EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f560 is
   select co.id
        , co.vl_rec_comp
        , cst_pis.cod_st  cst_pis
        , co.vl_desc_pis
        , co.quant_bc_pis
        , co.vl_aliq_pis
        , co.vl_pis
        , cst_cofins.cod_st cst_cofins
        , co.vl_desc_cofins
        , co.quant_bc_cofins
        , co.vl_aliq_cofins
        , co.vl_cofins
        , mf.cod_mod
        , pc.cod_cta
        , co.info_compl
     from CONS_OP_INS_PCRCOMP_AUM co
        , cod_st          cst_pis
        , cod_st          cst_cofins
        , mod_fiscal      mf
        , plano_conta     pc
    where co.empresa_id       = en_empresa_id
      and co.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc       = 1 -- validado
      and co.codst_id_pis     = cst_pis.id
      and co.codst_id_cofins  = cst_cofins.id
      and pc.id (+)           = co.planoconta_id
      and mf.id (+)           = co.modfiscal_id;
   --
   cursor c_f569 (en_consopinspcrcompaum_id in pr_cons_op_ins_pcrcoaum.consopinspcrcompaum_id%type )is
   select pc.num_proc
        , op.cd
     from pr_cons_op_ins_pcrcoaum pc
        , orig_proc op
    where pc.consopinspcrcompaum_id = en_consopinspcrcompaum_id
      and pc.origproc_id            = op.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f560 in c_f560 loop
      exit when c_f560%notfound or (c_f560%notfound) is null;
      --
      vn_fase := 2;
      --
      gl_conteudo := '|';
      -- criar estrura de registro separado por pipe "|"
      gl_conteudo := gl_conteudo || 'F560' || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.vl_rec_comp, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f560.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.vl_desc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.quant_bc_pis, '999999999990D999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.vl_aliq_pis, '99999999990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f560.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.vl_desc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.quant_bc_cofins, '999999999990D999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.vl_aliq_cofins, '99999999990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f560.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f560.cod_mod || '|';
      gl_conteudo := gl_conteudo || '|'; --CFOP
      gl_conteudo := gl_conteudo || rec_f560.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_f560.info_compl || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F560'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f560 := nvl(gn_qtde_reg_f560,0) + 1;
      --
      vn_fase := 4;
      -- monta o REGISTRO F569: PROCESSO REFERENCIADO
      for rec_f569 in c_f569(rec_f560.id) loop
         exit when c_f569%notfound or (c_f569%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por pipe "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F569' || '|';
         gl_conteudo := gl_conteudo || rec_f569.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f569.cd || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F569'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f569 := nvl(gn_qtde_reg_f569,0) + 1;
         --
      end loop;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f560 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F560;
--------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO F550: Cons. das Oper. da Pessoa Jur. Sub. ao Reg. de Trib. com Base no Lucro Presumido
--------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F550 (EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number :=0;
   --
   cursor c_f550 is
   select co.id
        , co.vl_rec_comp
        , cst_pis.cod_st cst_pis
        , co.vl_desc_pis
        , co.vl_bc_pis
        , co.aliq_pis
        , co.vl_pis
        , cst_cofins.cod_st cst_cofins
        , co.vl_desc_cofins
        , co.vl_bc_cofins
        , co.aliq_cofins
        , co.vl_cofins
        , co.info_compl
        , mf.cod_mod
        , pc.cod_cta
     from cons_oper_ins_pc_rcomp co
        , cod_st          cst_pis
        , cod_st          cst_cofins
        , mod_fiscal      mf
        , plano_conta     pc
    where co.empresa_id       = en_empresa_id
      and co.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc       = 1 -- validado
      and co.codst_id_pis     = cst_pis.id
      and co.codst_id_cofins  = cst_cofins.id
      and pc.id (+)           = co.planoconta_id
      and mf.id (+)           = co.modfiscal_id;
   --
   cursor c_f559 (en_consoperinspcrcomp_id in pr_cons_op_ins_pc_rcomp.consoperinspcrcomp_id%type )is
   select pc.num_proc
        , op.cd
     from pr_cons_op_ins_pc_rcomp pc
        , orig_proc op
    where pc.consoperinspcrcomp_id = en_consoperinspcrcomp_id
      and pc.origproc_id        = op.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f550 in c_f550 loop
      exit when c_f550%notfound or (c_f550%notfound) is null;
      --
      vn_fase := 2;
      --
      gl_conteudo := '|';
      -- criar estrura de registro separado por pipe "|"
      gl_conteudo := gl_conteudo || 'F550' || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.vl_rec_comp, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f550.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.vl_desc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f550.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.vl_desc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f550.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f550.cod_mod || '|';
      gl_conteudo := gl_conteudo || '|'; -- CFOP
      gl_conteudo := gl_conteudo || rec_f550.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_f550.info_compl || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F550'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f550 := nvl(gn_qtde_reg_f550,0) + 1;
      --
      vn_fase := 4;
      -- monta o REGISTRO F139: PROCESSO REFERENCIADO
      for rec_f559 in c_f559(rec_f550.id) loop
         exit when c_f559%notfound or (c_f559%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F559' || '|';
         gl_conteudo := gl_conteudo || rec_f559.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f559.cd || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F559'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f559 := nvl(gn_qtde_reg_f559,0) + 1;
         --
      end loop;
      --
   end loop; -- f550
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f550 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F550;
--------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO F525: Comp. da Rec. Escriturada no período - Det. da Receita Rec. pelo Regime de Caixa
--------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F525 (EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f525 is
   select cr.empresa_id
        , cr.vl_rec
        , cr.dm_ind_rec
        , cr.pessoa_id -- cpf/cnpj
        , cr.num_doc
        , cr.item_id
        , cr.vl_rec_det
        , cst_pis.cod_st  cst_pis
        , cst_cofins.cod_st  cst_cofins
        , cr.info_compl
        , pc.cod_cta
     from comp_rec_det_rc cr
        , cod_st          cst_pis
        , cod_st          cst_cofins
        , plano_conta     pc
    where cr.empresa_id       = en_empresa_id
      and cr.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and cr.dm_st_proc       = 1 -- validado
      and cst_pis.id (+)      = cr.codst_id_pis
      and cst_cofins.id (+)   = cr.codst_id_cofins
      and pc.id  (+)          = cr.planoconta_id;
   --
   vv_cpf_cnpj_part      varchar2(14) := null;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f525 in c_f525 loop
      exit when c_f525%notfound or (c_f525%notfound) is null;
      --
      vn_fase := 2;
      --
      vv_cpf_cnpj_part := null;
      --
      -- Buscar o CPF/CNPJ do participante.
      --
      vv_cpf_cnpj_part := pk_csf.fkg_cnpjcpf_pessoa_id ( en_pessoa_id => rec_f525.pessoa_id );
      --
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F525' || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f525.vl_rec, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || lpad(rec_f525.dm_ind_rec,2,'0') || '|';
      gl_conteudo := gl_conteudo || trim(vv_cpf_cnpj_part) || '|';
      gl_conteudo := gl_conteudo || rec_f525.num_doc || '|';
      gl_conteudo := gl_conteudo || pk_csf.fkg_Item_cod ( en_item_id => rec_f525.item_id ) || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f525.vl_rec_det, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f525.cst_pis || '|';
      gl_conteudo := gl_conteudo || rec_f525.cst_cofins || '|';
      gl_conteudo := gl_conteudo || rec_f525.info_compl || '|';
      gl_conteudo := gl_conteudo || rec_f525.cod_cta || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F525'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f525 := nvl(gn_qtde_reg_f525,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f525 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F525;
--------------------------------------------------------------------------------------------------------
--| Montar o REGISTRO F510: Incid. do PIS/COFINS pelo reg. de caixa (Apur. da contr. por unid. de med. de produto, alíquota em reais)
--------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F510 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase   number := 0;
   --
   cursor c_f510 is
   select c.id
        , c.vl_rec_caixa
        , cst_pis.cod_st  cst_pis
        , c.vl_desc_pis
        , c.quant_bc_pis
        , c.vl_aliq_pis
        , c.vl_pis
        , cst_cofins.cod_st  cst_cofins
        , c.vl_desc_cofins
        , c.quant_bc_cofins
        , c.vl_aliq_cofins
        , c.vl_cofins
        , mf.cod_mod
        , pc.cod_cta
        , c.info_compl
     from CONS_OPER_INS_PC_RC_AUM c
        , cod_st  cst_pis
        , cod_st  cst_cofins
        , mod_fiscal mf
        , plano_conta pc
    where c.empresa_id       = en_empresa_id
      and c.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and c.dm_st_proc       = 1 -- validado
      and c.codst_id_pis     = cst_pis.id
      and c.codst_id_cofins  = cst_cofins.id
      and mf.id (+)          = c.modfiscal_id
      and pc.id (+)          = c.planoconta_id;
   --
   cursor c_f519 ( en_consoperinspcrcaum_id in pr_cons_op_ins_pcrc_aum.consoperinspcrcaum_id%type ) is
   select pc.num_proc
        , op.cd
     from pr_cons_op_ins_pcrc_aum pc
        , orig_proc op
    where pc.consoperinspcrcaum_id = en_consoperinspcrcaum_id
      and pc.origproc_id           = op.id;
  --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f510 in c_f510 loop
      exit when c_f510%notfound or (c_f510%notfound) is null;
      --
      vn_fase := 2;
      --
      -- criar a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F510' || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.vl_rec_caixa, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f510.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.vl_desc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.quant_bc_pis, '999999999990D999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.vl_aliq_pis, '99999999990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f510.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.vl_desc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.quant_bc_cofins, '999999999990D999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.vl_aliq_cofins, '99999999990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num( rec_f510.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f510.cod_mod || '|';
      gl_conteudo := gl_conteudo || '|'; -- CFOP
      gl_conteudo := gl_conteudo || rec_f510.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_f510.info_compl || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F510'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f510 := nvl(gn_qtde_reg_f510,0) + 1;
      --
      vn_fase := 4;
      -- montar o REGISTRO F510: PROCESSO REFERENCIADO
      for rec_f519 in c_f519( rec_f510.id ) loop
         exit when c_f519%notfound or (c_f519%notfound) is null;
         --
         vn_fase := 5;
         -- criar estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F519' || '|';
         gl_conteudo := gl_conteudo || rec_f519.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f519.cd || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F519'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f519 := nvl(gn_qtde_reg_f519,0) + 1;
         --
      end loop;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f510 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F510;
--------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO F500: Cons. das Oper. da Pessoa Jur. Subm. ao Reg. de Trib; com Base no Lucro Pres.
--------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F500 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f500 is
   select co.id
        , co.empresa_id
        , co.dt_ref
        , co.vl_rec_caixa
        , cst_pis.cod_st  cst_pis
        , co.vl_desc_pis
        , co.vl_bc_pis
        , co.aliq_pis
        , co.vl_pis
        , cst_cofins.cod_st  cst_cofins
        , co.vl_desc_cofins
        , co.vl_bc_cofins
        , co.aliq_cofins
        , co.vl_cofins
        , mf.cod_mod
        , pc.cod_cta
        , co.info_compl
     from CONS_OPER_INS_PC_RC co
        , cod_st      cst_pis
        , cod_st      cst_cofins
        , mod_fiscal  mf
        , plano_conta pc
    where co.empresa_id       = en_empresa_id
      and co.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc       = 1 -- validado
      and co.codst_id_pis     = cst_pis.id
      and co.codst_id_cofins  = cst_cofins.id
      and mf.id (+)           = co.modfiscal_id
      and pc.id (+)           = co.planoconta_id;
   --
   cursor c_f509 ( en_consoperinspcrc_id in pr_cons_oper_ins_pc_rc.consoperinspcrc_id%type ) is
   select pc.num_proc
        , op.cd
     from pr_cons_oper_ins_pc_rc pc
        , orig_proc op
    where pc.consoperinspcrc_id = en_consoperinspcrc_id
      and pc.origproc_id        = op.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f500 in c_f500 loop
      exit when c_f500%notfound or (c_f500%notfound) is null;
      --
      vn_fase := 2;
      -- criar estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F500' || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.vl_rec_caixa, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f500.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.vl_desc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f500.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.vl_desc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f500.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f500.cod_mod || '|';
      gl_conteudo := gl_conteudo || '|'; -- CFOP
      gl_conteudo := gl_conteudo || rec_f500.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_f500.info_compl || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F500'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f500 := nvl(gn_qtde_reg_f500,0) + 1;
      --
      vn_fase := 4;
      -- montar o REGISTRO F500: PROCESSO REFERENCIADO
      for rec_f509 in c_f509( rec_f500.id ) loop
         exit when c_f509%notfound or (c_f509%notfound) is null;
         --
         vn_fase := 5;
         -- criar estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F509' || '|';
         gl_conteudo := gl_conteudo || rec_f509.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f509.cd || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F509'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f509 := nvl(gn_qtde_reg_f509,0) + 1;
         --
      end loop;
      --
   end loop; -- F500
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f500 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F500;
--------------------------------------------------------------------------------------------
--| Monta o REGISTRO F200: OPERAÇÕES DA ATIVIDADE IMOBILIÁRIA - UNIDADE IMOBILIÁRIA VENDIDA
--------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F200 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f200 is
   select oa.id
        , oa.dm_ind_oper
        , oa.dm_unid_imob
        , oa.ident_emp
        , oa.desc_unid_imob
        , oa.num_cont
        , oa.cpf_cnpj_adqu
        , oa.dt_oper
        , oa.vl_tot_vend
        , oa.vl_rec_acum
        , oa.vl_tot_rec
        , oa.vl_bc_pis
        , oa.aliq_pis
        , oa.vl_pis
        , oa.vl_bc_cofins
        , oa.aliq_cofins
        , oa.vl_cofins
        , oa.perc_rec_receb
        , oa.dm_ind_nat_emp
        , oa.inf_comp
        , cs.cod_st cod_st_pis
        , ct.cod_st cod_st_cofins
     from oper_ativ_imob_vend oa
        , cod_st              cs
        , cod_st              ct
    where oa.empresa_id    = en_empresa_id
      and oa.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and oa.dm_st_proc    = 1 -- validado
      and cs.id            = oa.codst_id_pis
      and ct.id            = oa.codst_id_cofins;
   --
   cursor c_f205 ( en_operativimobvend_id in oper_ativ_imob_vend.id%type ) is
   select oa.vl_cus_inc_acum_ant
        , oa.vl_cus_inc_per_esc
        , oa.vl_cus_inc_acum
        , oa.vl_exc_bc_cus_inc_acum
        , oa.vl_bc_cus_inc
        , oa.aliq_pis
        , oa.vl_cred_pis_acum
        , oa.vl_cred_pis_desc_ant
        , oa.vl_cred_pis_desc
        , oa.vl_cred_pis_desc_fut
        , oa.aliq_cofins
        , oa.vl_cred_cofins_acum
        , oa.vl_cred_cofins_desc_ant
        , oa.vl_cred_cofins_desc
        , oa.vl_cred_cofins_desc_fut
        , cs.cod_st cod_st_pis
        , ct.cod_st cod_st_cofins
     from oper_ativ_imob_cus_inc oa
        , cod_st                 cs
        , cod_st                 ct
    where oa.operativimobvend_id = en_operativimobvend_id
      and cs.id                  = oa.codst_id_pis
      and ct.id                  = oa.codst_id_cofins;
   --
   cursor c_f210 ( en_operativimobvend_id in oper_ativ_imob_vend.id%type ) is
   select oa.vl_cus_orc
        , oa.vl_exc
        , oa.vl_cus_orc_aju
        , oa.vl_bc_cred
        , oa.aliq_pis
        , oa.vl_cred_pis_util
        , oa.aliq_cofins
        , oa.vl_cred_cofins_util
        , cs.cod_st cod_st_pis
        , ct.cod_st cod_st_cofins
     from oper_ativ_imob_cus_orc oa
        , cod_st                 cs
        , cod_st                 ct
    where oa.operativimobvend_id = en_operativimobvend_id
      and cs.id                  = oa.codst_id_pis
      and ct.id                  = oa.codst_id_cofins;
   --
   cursor c_f211 ( en_operativimobvend_id in oper_ativ_imob_vend.id%type ) is
   select oa.num_proc
        , oa.dm_ind_proc
     from oper_ativ_imob_proc_ref oa
    where oa.operativimobvend_id = en_operativimobvend_id;
   --
BEGIN
   --
   vn_fase := 1;
   --| Montar REGISTRO F200: OPERAÇÕES DA ATIVIDADE IMOBILIÁRIA - UNIDADE IMOBILIÁRIA VENDIDA
   for rec_f200 in c_f200 loop
      exit when c_f200%notfound or (c_f200%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F200' || '|';
      gl_conteudo := gl_conteudo || lpad(rec_f200.dm_ind_oper,2,'0') || '|';
      gl_conteudo := gl_conteudo || lpad(rec_f200.dm_unid_imob,2,'0') || '|';
      gl_conteudo := gl_conteudo || rec_f200.ident_emp || '|';
      gl_conteudo := gl_conteudo || rec_f200.desc_unid_imob || '|';
      gl_conteudo := gl_conteudo || rec_f200.num_cont || '|';
      gl_conteudo := gl_conteudo || rec_f200.cpf_cnpj_adqu || '|';
      gl_conteudo := gl_conteudo || to_char(rec_f200.dt_oper,'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.vl_tot_vend, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(nvl(rec_f200.vl_rec_acum,0), '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.vl_tot_rec, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f200.cod_st_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f200.cod_st_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f200.perc_rec_receb, '999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f200.dm_ind_nat_emp || '|';
      gl_conteudo := gl_conteudo || rec_f200.inf_comp || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F200'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f200 := nvl(gn_qtde_reg_f200,0) + 1;
      --
      vn_fase := 4;
      --| Montar REGISTRO F205: OPERAÇÕES DA ATIVIDADE IMOBILIÁRIA - CUSTO INCORRIDO DA UNIDADE IMOBILIÁRIA
      for rec_f205 in c_f205( en_operativimobvend_id => rec_f200.id ) loop
         exit when c_f205%notfound or (c_f205%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F205' || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cus_inc_acum_ant, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cus_inc_per_esc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cus_inc_acum, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_exc_bc_cus_inc_acum, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_bc_cus_inc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_f205.cod_st_pis || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.aliq_pis, '9990D9999') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_pis_acum, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_pis_desc_ant, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_pis_desc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_pis_desc_fut, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_f205.cod_st_cofins || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.aliq_cofins, '9990D9999') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_cofins_acum, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_cofins_desc_ant, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_cofins_desc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f205.vl_cred_cofins_desc_fut, '9999999999990D99') || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F205'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f205 := nvl(gn_qtde_reg_f205,0) + 1;
         --
      end loop;
      --
      vn_fase := 7;
      --| Montar REGISTRO F210: OPERAÇÕES DA ATIVIDADE IMOBILIÁRIA - CUSTO ORÇADO DA UNIDADE IMOBILIÁRIA VENDIDA
      for rec_f210 in c_f210( en_operativimobvend_id => rec_f200.id ) loop
         exit when c_f210%notfound or (c_f210%notfound) is null;
         --
         vn_fase := 8;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F210' || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.vl_cus_orc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.vl_exc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.vl_cus_orc_aju, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.vl_bc_cred, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_f210.cod_st_pis || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.aliq_pis, '9990D9999') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.vl_cred_pis_util, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_f210.cod_st_cofins || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.aliq_cofins, '9990D9999') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f210.vl_cred_cofins_util, '9999999999990D99') || '|';
         --
         vn_fase := 9;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F210'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f210 := nvl(gn_qtde_reg_f210,0) + 1;
         --
      end loop;
      --
      vn_fase := 10;
      --| Montar REGISTRO F211: PROCESSO REFERENCIADO
      for rec_f211 in c_f211( en_operativimobvend_id => rec_f200.id ) loop
         exit when c_f211%notfound or (c_f211%notfound) is null;
         --
         vn_fase := 11;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F211' || '|';
         gl_conteudo := gl_conteudo || rec_f211.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f211.dm_ind_proc || '|';
         --
         vn_fase := 12;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F211'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f211 := nvl(gn_qtde_reg_f211,0) + 1;
         --
      end loop;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f200 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F200;
-----------------------------------------------------------------------
--| Monta o REGISTRO F150: CRÉDITO PRESUMIDO SOBRE ESTOQUE DE ABERTURA
-----------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F150 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f150 is
   select cp.id
        , cp.empresa_id
        , cp.ano_ref
        , cp.mes_ref
        , cp.basecalccredpc_id
        , bcc.cd nat_bc_cred
        , cp.vl_tot_est
        , cp.vl_est_imp
        , cp.vl_bc_est
        , cp.vl_bc_men_est
        , cp.codst_id_pis
        , cst_pis.cod_st cst_pis
        , cp.aliq_pis
        , cp.vl_pis
        , cp.codst_id_cofins
        , cst_cofins.cod_st cst_cofins
        , cp.aliq_cofins
        , cp.vl_cofins
        , cp.desc_est
        , cp.planoconta_id
        , pc.cod_cta
        , cp.dm_st_proc
        , cp.dm_st_integra
     from cred_pres_est_abert_pc cp
        , cod_st                 cst_pis
        , cod_st                 cst_cofins
        , base_calc_cred_pc      bcc
        , plano_conta            pc
    where cp.empresa_id      = en_empresa_id
      and cp.ano_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and cp.mes_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and cp.dm_st_proc      = 1 -- validado
      and cst_pis.id(+)      = cp.codst_id_pis
      and cst_cofins.id(+)   = cp.codst_id_cofins
      and bcc.id(+)          = cp.basecalccredpc_id
      and pc.id(+)           = cp.planoconta_id
    order by cp.empresa_id, cp.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f150 in c_f150 loop
      exit when c_f150%notfound or (c_f150%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F150' || '|';
      gl_conteudo := gl_conteudo || rec_f150.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.vl_tot_est, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.vl_est_imp, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.vl_bc_est, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.vl_bc_men_est, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f150.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f150.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f150.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f150.desc_est || '|';
      gl_conteudo := gl_conteudo || rec_f150.cod_cta || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F150'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f150 := nvl(gn_qtde_reg_f150,0) + 1;
      --
   end loop; -- c_f150
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f150 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F150;
------------------------------------------------------------------
--| Monta o REGISTRO F130: BENS INCORPORADOS AO ATIVO IMOBILIZADO
------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F130 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f130 is
   select b.id
        , b.empresa_id
        , b.ano_ref
        , b.mes_ref
        , b.dm_tipo_oper
        , b.basecalccredpc_id
        , bcc.cd nat_bc_cred
        , b.dm_ident_bem_imob
        , b.dm_ind_orig_cred
        , b.dm_ind_util_bem_imob
        , b.mes_ano_oper_aquis
        , b.vl_oper_aquis
        , b.vl_oper_dep
        , b.parc_oper_nao_bc_cred
        , b.vl_bc_cred
        , b.dm_ind_nr_parc
        , b.codst_id_pis
        , cst_pis.cod_st cst_pis
        , b.vl_bc_pis
        , b.aliq_pis
        , b.vl_pis
        , b.codst_id_cofins
        , cst_cofins.cod_st cst_cofins
        , b.vl_bc_cofins
        , b.aliq_cofins
        , b.vl_cofins
        , b.planoconta_id
        , pc.cod_cta
        , b.centrocusto_id
        , cc.cod_ccus
        , b.desc_bem_imob
        , b.dm_st_proc
        , b.dm_st_integra
     from bem_ativ_imob_oper_cred_pc b
        , cod_st                     cst_pis
        , cod_st                     cst_cofins
        , base_calc_cred_pc          bcc
        , plano_conta                pc
        , centro_custo               cc
    where b.empresa_id       = en_empresa_id
      and b.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and b.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and b.dm_st_proc       = 1 -- validado
      and b.dm_tipo_oper     = 1 -- Aquisição/Contribuição
      and cst_pis.id(+)      = b.codst_id_pis
      and cst_cofins.id(+)   = b.codst_id_cofins
      and bcc.id(+)          = b.basecalccredpc_id
      and pc.id(+)           = b.planoconta_id
      and cc.id(+)           = b.centrocusto_id
    order by b.empresa_id, b.id;
   --
   cursor c_f139 ( en_bemativimobopercredpc_id in pr_bai_oper_cred_pc.bemativimobopercredpc_id%type ) is
   select p.id
        , p.num_proc
        , op.cd ind_proc
     from pr_bai_oper_cred_pc p
        , orig_proc op
    where p.bemativimobopercredpc_id = en_bemativimobopercredpc_id
      and op.id                      = p.origproc_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f130 in c_f130 loop
      exit when c_f130%notfound or (c_f130%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F130' || '|';
      --
      if gt_row_versao_layout_efd_pc.cd >= '002' then -- versões 1.01, 1.07 e 2.00
         gl_conteudo := gl_conteudo || '10' || '|';
      else
         gl_conteudo := gl_conteudo || rec_f130.nat_bc_cred || '|';
      end if;
      --
      gl_conteudo := gl_conteudo || rec_f130.dm_ident_bem_imob || '|';
      gl_conteudo := gl_conteudo || rec_f130.dm_ind_orig_cred || '|';
      gl_conteudo := gl_conteudo || rec_f130.dm_ind_util_bem_imob || '|';
      gl_conteudo := gl_conteudo || lpad(rec_f130.mes_ano_oper_aquis,6,'0') || '|';
      --
      if rec_f130.vl_oper_aquis is null then
         gl_conteudo := gl_conteudo || '|';
      else
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.vl_oper_aquis, '9999999999990D99') || '|';
      end if;
      --
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.parc_oper_nao_bc_cred, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.vl_bc_cred, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f130.dm_ind_nr_parc || '|';
      gl_conteudo := gl_conteudo || rec_f130.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f130.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f130.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f130.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_f130.cod_ccus || '|';
      gl_conteudo := gl_conteudo || rec_f130.desc_bem_imob || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F130'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f130 := nvl(gn_qtde_reg_f130,0) + 1;
      --
      vn_fase := 4;
      -- monta o REGISTRO F139: PROCESSO REFERENCIADO
      for rec_f139 in c_f139(rec_f130.id) loop
         exit when c_f139%notfound or (c_f139%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F139' || '|';
         gl_conteudo := gl_conteudo || rec_f139.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f139.ind_proc || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F139'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f139 := nvl(gn_qtde_reg_f139,0) + 1;
         --
      end loop;
      --
   end loop; -- c_f130
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f130 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F130;
------------------------------------------------------------------
--| Monta o REGISTRO F120: BENS INCORPORADOS AO ATIVO IMOBILIZADO
------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F120 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f120 is
   select b.id
        , b.empresa_id
        , b.ano_ref
        , b.mes_ref
        , b.dm_tipo_oper
        , b.basecalccredpc_id
        , bcc.cd nat_bc_cred
        , b.dm_ident_bem_imob
        , b.dm_ind_orig_cred
        , b.dm_ind_util_bem_imob
        , b.mes_ano_oper_aquis
        , b.vl_oper_aquis
        , b.vl_oper_dep
        , b.parc_oper_nao_bc_cred
        , b.vl_bc_cred
        , b.dm_ind_nr_parc
        , b.codst_id_pis
        , cst_pis.cod_st cst_pis
        , b.vl_bc_pis
        , b.aliq_pis
        , b.vl_pis
        , b.codst_id_cofins
        , cst_cofins.cod_st cst_cofins
        , b.vl_bc_cofins
        , b.aliq_cofins
        , b.vl_cofins
        , b.planoconta_id
        , pc.cod_cta
        , b.centrocusto_id
        , cc.cod_ccus
        , b.desc_bem_imob
        , b.dm_st_proc
        , b.dm_st_integra
     from bem_ativ_imob_oper_cred_pc b
        , cod_st                     cst_pis
        , cod_st                     cst_cofins
        , base_calc_cred_pc          bcc
        , plano_conta                pc
        , centro_custo               cc
    where b.empresa_id       = en_empresa_id
      and b.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and b.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and b.dm_st_proc       = 1 -- validado
      and b.dm_tipo_oper     = 0 -- Depreciação/Amortização
      and cst_pis.id(+)      = b.codst_id_pis
      and cst_cofins.id(+)   = b.codst_id_cofins
      and bcc.id(+)          = b.basecalccredpc_id
      and pc.id(+)           = b.planoconta_id
      and cc.id(+)           = b.centrocusto_id
    order by b.empresa_id, b.id;
   --
   cursor c_f129 ( en_bemativimobopercredpc_id in pr_bai_oper_cred_pc.bemativimobopercredpc_id%type ) is
   select p.id
        , p.num_proc
        , op.cd ind_proc
     from pr_bai_oper_cred_pc p
        , orig_proc op
    where p.bemativimobopercredpc_id = en_bemativimobopercredpc_id
      and op.id                      = p.origproc_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f120 in c_f120 loop
      exit when c_f120%notfound or (c_f120%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F120' || '|';
      gl_conteudo := gl_conteudo || rec_f120.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || rec_f120.dm_ident_bem_imob || '|';
      gl_conteudo := gl_conteudo || rec_f120.dm_ind_orig_cred || '|';
      gl_conteudo := gl_conteudo || rec_f120.dm_ind_util_bem_imob || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.vl_oper_dep, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.parc_oper_nao_bc_cred, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f120.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f120.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f120.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f120.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_f120.cod_ccus || '|';
      gl_conteudo := gl_conteudo || rec_f120.desc_bem_imob || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F120'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f120 := nvl(gn_qtde_reg_f120,0) + 1;
      --
      vn_fase := 4;
      -- monta o REGISTRO F129: PROCESSO REFERENCIADO
      for rec_f129 in c_f129(rec_f120.id) loop
         exit when c_f129%notfound or (c_f129%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F129' || '|';
         gl_conteudo := gl_conteudo || rec_f129.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f129.ind_proc || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F129'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f129 := nvl(gn_qtde_reg_f129,0) + 1;
         --
      end loop;
      --
   end loop; -- c_f120
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f120 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F120;
---------------------------------------------------------------------------------------------
-- Monta o REGISTRO F100: DEMAIS DOCUMENTOS E OPERAÇÕES GERADORAS DE CONTRIBUIÇÃO E CRÉDITOS
---------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F100 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
   cursor c_f100 is
   select d.id
        , d.empresa_id
        , d.dm_ind_oper
        , d.pessoa_id
        , p.cod_part
        , d.item_id
        , it.cod_item
        , d.dt_oper
        , d.vl_oper
        , d.codst_id_pis
        , cst_pis.cod_st cst_pis
        , d.vl_bc_pis
        , d.aliq_pis
        , d.vl_pis
        , d.codst_id_cofins
        , cst_cofins.cod_st cst_cofins
        , d.vl_bc_cofins
        , d.aliq_cofins
        , d.vl_cofins
        , d.basecalccredpc_id
        , bcc.cd nat_bc_cred
        , d.dm_ind_orig_cred
        , d.planoconta_id
        , pc.cod_cta
        , d.centrocusto_id
        , cc.cod_ccus
        , d.dm_st_proc
        , d.dm_st_integra
        , d.desc_doc_oper
     from dem_doc_oper_ger_cc        d
        , pessoa                     p
        , item                       it
        , cod_st                     cst_pis
        , cod_st                     cst_cofins
        , base_calc_cred_pc          bcc
        , plano_conta                pc
        , centro_custo               cc
    where d.empresa_id     = en_empresa_id
      and d.dt_oper  between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and d.dm_st_proc     = 1 -- validado
      and p.id(+)          = d.pessoa_id
      and it.id(+)         = d.item_id
      and cst_pis.id(+)    = d.codst_id_pis
      and cst_cofins.id(+) = d.codst_id_cofins
      and bcc.id(+)        = d.basecalccredpc_id
      and pc.id(+)         = d.planoconta_id
      and cc.id(+)         = d.centrocusto_id
    order by d.empresa_id, d.id;
   --
   cursor c_f111 ( en_demdocopergercc_id in pr_dem_doc_oper_ger_cc.demdocopergercc_id%type ) is
   select p.id
        , p.num_proc
        , op.cd ind_proc
     from pr_dem_doc_oper_ger_cc p
        , orig_proc op
    where p.demdocopergercc_id = en_demdocopergercc_id
      and op.id                = p.origproc_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_f100 in c_f100 loop
      exit when c_f100%notfound or (c_f100%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'F100' || '|';
      gl_conteudo := gl_conteudo || rec_f100.dm_ind_oper || '|';
      gl_conteudo := gl_conteudo || rec_f100.cod_part || '|';
      gl_conteudo := gl_conteudo || rec_f100.cod_item || '|';
      gl_conteudo := gl_conteudo || to_char(rec_f100.dt_oper, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f100.vl_oper, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f100.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f100.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f100.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f100.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f100.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f100.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f100.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_f100.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_f100.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || rec_f100.dm_ind_orig_cred || '|';
      gl_conteudo := gl_conteudo || rec_f100.cod_cta || '|';
      gl_conteudo := gl_conteudo || rec_f100.cod_ccus || '|';
      gl_conteudo := gl_conteudo || rec_f100.desc_doc_oper || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F100'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_f100 := nvl(gn_qtde_reg_f100,0) + 1;
      --
      vn_fase := 4;
      -- monta o REGISTRO F111: PROCESSO REFERENCIADO
      for rec_f111 in c_f111(rec_f100.id) loop
         exit when c_f111%notfound or (c_f111%notfound) is null;
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'F111' || '|';
         gl_conteudo := gl_conteudo || rec_f111.num_proc || '|';
         gl_conteudo := gl_conteudo || rec_f111.ind_proc || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F111'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_f111 := nvl(gn_qtde_reg_f111,0) + 1;
         --
      end loop; -- c_f111
      --
   end loop; -- c_f100
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f100 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F100;
------------------------------------------------------------
--| Monta o REGISTRO F010: IDENTIFICAÇÃO DO ESTABELECIMENTO
------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_F010 ( EN_EMPRESA_ID  IN  EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'F010' || '|';
   gl_conteudo := gl_conteudo || trim( pk_csf.fkg_cnpj_ou_cpf_empresa( en_empresa_id => en_empresa_id ) ) || '|';
   --
   vn_fase := 2;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F010'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_f010 := nvl(gn_qtde_reg_f010,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f010 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F010;
-----------------------------------------------
--| Monta o REGISTRO F001: ABERTURA DO BLOCO F
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_F001 IS
   --
   vn_fase      number := 0;
   vn_qtde_f100 number := 0;
   vn_qtde_f120 number := 0;
   vn_qtde_f130 number := 0;
   vn_qtde_f150 number := 0;
   vn_qtde_f200 number := 0;
   vn_qtde_f500 number := 0;
   vn_qtde_f510 number := 0;
   vn_qtde_f525 number := 0;
   vn_qtde_f550 number := 0;
   vn_qtde_f560 number := 0;
   vn_qtde_f600 number := 0;
   vn_qtde_f700 number := 0;
   vn_qtde_f800 number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   --
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 2;
      --
      begin
         select count(1)
           into vn_qtde_f100
           from r_empresa_abertura_efd_pc  r
              , dem_doc_oper_ger_cc        d
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and d.empresa_id       = r.empresa_id
            and d.dt_oper    between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
            and d.dm_st_proc       = 1;  -- validado
      exception
         when others then
            vn_qtde_f100 := 0;
      end;
      --
      vn_fase := 3;
      --
      begin
         select count(1)
           into vn_qtde_f120
           from r_empresa_abertura_efd_pc  r
              , bem_ativ_imob_oper_cred_pc b
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and b.empresa_id       = r.empresa_id
            and b.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
            and b.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
            and b.dm_st_proc       = 1 -- validado
            and b.dm_tipo_oper     = 0; -- Depreciação/Amortização
      exception
         when others then
            vn_qtde_f120 := 0;
      end;
      --
      vn_fase := 4;
      --
      begin
         select count(1)
           into vn_qtde_f130
           from r_empresa_abertura_efd_pc  r
              , bem_ativ_imob_oper_cred_pc b
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and b.empresa_id       = r.empresa_id
            and b.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
            and b.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
            and b.dm_st_proc       = 1 -- validado
            and b.dm_tipo_oper     = 1; -- Aquisição/Contribuição
      exception
         when others then
            vn_qtde_f130 := 0;
      end;
      --
      vn_fase := 5;
      --
      begin
         select count(1)
           into vn_qtde_f150
           from r_empresa_abertura_efd_pc r
              , cred_pres_est_abert_pc    cp
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and cp.empresa_id      = r.empresa_id
            and cp.ano_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
            and cp.mes_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
            and cp.dm_st_proc      = 1; -- validado
      exception
         when others then
            vn_qtde_f150 := 0;
      end;
      --
   end if;
   --
   vn_fase := 6;
   --
   begin
      select count(1)
        into vn_qtde_f200
        from r_empresa_abertura_efd_pc r
           , oper_ativ_imob_vend       oa
       where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
         and oa.empresa_id      = r.empresa_id
         and oa.dt_oper   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and oa.dm_st_proc      = 1; -- validado
   exception
      when others then
         vn_qtde_f200 := 0;
   end;
   --
   vn_fase := 7;
   --
   if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
      gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 1 then -- Regime de Caixa Escrituração consolidada (Registro F500)
      --
      vn_fase := 8;
      --
      begin
         select count(1)
           into vn_qtde_f500
           from cons_oper_ins_pc_rc co
              , r_empresa_abertura_efd_pc r
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and co.empresa_id      = r.empresa_id
            and co.dt_ref    between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
            and co.dm_st_proc      = 1;
      exception
         when others then
            vn_qtde_f500 := 0;
      end;
      --
      vn_fase := 9;
      --
      begin
         select count(1)
           into vn_qtde_f510
           from cons_oper_ins_pc_rc_aum c
              , r_empresa_abertura_efd_pc r
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and c.empresa_id       = r.empresa_id
            and c.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
            and c.dm_st_proc       = 1;
      exception
         when others then
            vn_qtde_f510 := 0;
      end;
      --
   end if;
   --
   vn_fase := 10;
   --
   begin
      select count(1)
        into vn_qtde_f525
        from comp_rec_det_rc cr
           , r_empresa_abertura_efd_pc r
       where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
         and cr.empresa_id      = r.empresa_id
         and cr.dt_ref          between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and cr.dm_st_proc      = 1;
   exception
      when others then
         vn_qtde_f525 := 0;
   end;
   --
   vn_fase := 11;
   --
   if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
      gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 2 then -- Regime de Competência - Escrituração consolidada (Registro F550)
      --
      vn_fase := 12;
      --
      begin
         select count(1)
           into vn_qtde_f550
           from cons_oper_ins_pc_rcomp co
              , r_empresa_abertura_efd_pc r
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and co.empresa_id      = r.empresa_id
            and co.dt_ref          between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
            and co.dm_st_proc      = 1;
      exception
         when others then
            vn_qtde_f550 := 0;
      end;
      --
      vn_fase := 13;
      --
      begin
         select count(1)
           into vn_qtde_f560
           from cons_op_ins_pcrcomp_aum co
              , r_empresa_abertura_efd_pc r
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and co.empresa_id      = r.empresa_id
            and co.dt_ref          between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
            and co.dm_st_proc      = 1;
      exception
         when others then
            vn_qtde_f560 := 0;
      end;
      --
   end if;
   --
   vn_fase := 14;
   --
   begin
      select count(1)
        into vn_qtde_f600
        from r_empresa_abertura_efd_pc r
           , contr_ret_fonte_pc        crf
       where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
         and crf.empresa_id     = r.empresa_id
         and crf.dt_ret   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and crf.dm_st_proc     = 1; -- validado
   exception
      when others then
         vn_qtde_f600 := 0;
   end;
   --
   vn_fase := 15;
   --
   begin
      select count(1)
        into vn_qtde_f700
        from r_empresa_abertura_efd_pc r
           , deducao_diversa_pc        dd
       where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
         and dd.empresa_id      = r.empresa_id
         and dd.ano_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
         and dd.mes_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
         and dd.dm_st_proc      = 1; -- validado
   exception
      when others then
         vn_qtde_f700 := 0;
   end;
   --
   vn_fase := 16;
   --
   begin
      select count(1)
        into vn_qtde_f800
        from r_empresa_abertura_efd_pc r
           , cred_decor_evento_pc      cde
       where r.aberturaefdpc_id  = gt_row_abertura_efd_pc.id
         and cde.empresa_id      = r.empresa_id
         and cde.dt_evento between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and cde.dm_st_proc      = 1; -- validado
   exception
      when others then
         vn_qtde_f800 := 0;
   end;
   --
   vn_fase := 17;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'F001' || '|';
   --
   if nvl(vn_qtde_f100,0) > 0
      or nvl(vn_qtde_f120,0) > 0
      or nvl(vn_qtde_f130,0) > 0
      or nvl(vn_qtde_f150,0) > 0
      or nvl(vn_qtde_f200,0) > 0
      or nvl(vn_qtde_f500,0) > 0
      or nvl(vn_qtde_f510,0) > 0
      or nvl(vn_qtde_f525,0) > 0
      or nvl(vn_qtde_f550,0) > 0
      or nvl(vn_qtde_f560,0) > 0
      or nvl(vn_qtde_f600,0) > 0
      or nvl(vn_qtde_f700,0) > 0
      or nvl(vn_qtde_f800,0) > 0
      then
      gl_conteudo := gl_conteudo || 0 || '|';
   else
      gl_conteudo := gl_conteudo || 1 || '|';
   end if;
   --
   vn_fase := 18;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'F001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_f001 := nvl(gn_qtde_reg_f001,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_f001 (vn_fase = '||vn_fase||'). Erro: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_F001;
---------------------------------------------------------------------------
--| Procedimento monta registros do BLOCO F: DEMAIS DOCUMENTOS E OPERAÇÕES
---------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_F IS
   --
   vn_fase           number := 0;
   vn_empresa_id_old empresa.id%type;
   vn_empresa_id_new empresa.id%type;
   vn_qtde_f100      number := 0;
   vn_qtde_f120      number := 0;
   vn_qtde_f130      number := 0;
   vn_qtde_f150      number := 0;
   vn_qtde_f200      number := 0;
   vn_qtde_f500      number := 0;
   vn_qtde_f510      number := 0;
   vn_qtde_f525      number := 0;
   vn_qtde_f550      number := 0;
   vn_qtde_f560      number := 0;
   vn_qtde_f600      number := 0;
   vn_qtde_f700      number := 0;
   vn_qtde_f800      number := 0;
   --
   cursor c_emp is
   select r.empresa_id
     from r_empresa_abertura_efd_pc r
    where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
    order by 1;
   --
   cursor c_qtde_f100(en_empresa_id in number) is
   select count(1) qtde
     from dem_doc_oper_ger_cc d
        , pessoa              p
        , item                it
        , cod_st              cst_pis
        , cod_st              cst_cofins
        , base_calc_cred_pc   bcc
        , plano_conta         pc
        , centro_custo        cc
    where d.empresa_id     = en_empresa_id
      and d.dt_oper  between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and d.dm_st_proc     = 1 -- validado
      and p.id(+)          = d.pessoa_id
      and it.id(+)         = d.item_id
      and cst_pis.id(+)    = d.codst_id_pis
      and cst_cofins.id(+) = d.codst_id_cofins
      and bcc.id(+)        = d.basecalccredpc_id
      and pc.id(+)         = d.planoconta_id
      and cc.id(+)         = d.centrocusto_id;
   --
   cursor c_qtde_f120(en_empresa_id in number) is
   select count(1) qtde
     from bem_ativ_imob_oper_cred_pc b
        , cod_st                     cst_pis
        , cod_st                     cst_cofins
        , base_calc_cred_pc          bcc
        , plano_conta                pc
        , centro_custo               cc
    where b.empresa_id     = en_empresa_id
      and b.ano_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and b.mes_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and b.dm_st_proc     = 1 -- validado
      and b.dm_tipo_oper   = 0 -- Depreciação/Amortização
      and cst_pis.id(+)    = b.codst_id_pis
      and cst_cofins.id(+) = b.codst_id_cofins
      and bcc.id(+)        = b.basecalccredpc_id
      and pc.id(+)         = b.planoconta_id
      and cc.id(+)         = b.centrocusto_id;
   --
   cursor c_qtde_f130(en_empresa_id in number) is
   select count(1) qtde
     from bem_ativ_imob_oper_cred_pc b
        , cod_st                     cst_pis
        , cod_st                     cst_cofins
        , base_calc_cred_pc          bcc
        , plano_conta                pc
        , centro_custo               cc
    where b.empresa_id     = en_empresa_id
      and b.ano_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and b.mes_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and b.dm_st_proc     = 1 -- validado
      and b.dm_tipo_oper   = 1 -- Aquisição/Contribuição
      and cst_pis.id(+)    = b.codst_id_pis
      and cst_cofins.id(+) = b.codst_id_cofins
      and bcc.id(+)        = b.basecalccredpc_id
      and pc.id(+)         = b.planoconta_id
      and cc.id(+)         = b.centrocusto_id;
   --
   cursor c_qtde_f150(en_empresa_id in number) is
   select count(1) qtde
     from cred_pres_est_abert_pc cp
        , cod_st                 cst_pis
        , cod_st                 cst_cofins
        , base_calc_cred_pc      bcc
        , plano_conta            pc
    where cp.empresa_id    = en_empresa_id
      and cp.ano_ref       = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and cp.mes_ref       = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and cp.dm_st_proc    = 1 -- validado
      and cst_pis.id(+)    = cp.codst_id_pis
      and cst_cofins.id(+) = cp.codst_id_cofins
      and bcc.id(+)        = cp.basecalccredpc_id
      and pc.id(+)         = cp.planoconta_id;
   --
   cursor c_qtde_f200(en_empresa_id in number) is
   select count(1) qtde
     from oper_ativ_imob_vend oa
    where oa.empresa_id    = en_empresa_id
      and oa.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and oa.dm_st_proc    = 1; -- validado
   --
   cursor c_qtde_f500(en_empresa_id in number) is
   select count(1) qtde
     from cons_oper_ins_pc_rc co
        , cod_st      cst_pis
        , cod_st      cst_cofins
        , mod_fiscal  mf
        , plano_conta pc
    where co.empresa_id      = en_empresa_id
      and co.dt_ref    between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc      = 1 -- validado
      and co.codst_id_pis    = cst_pis.id
      and co.codst_id_cofins = cst_cofins.id
      and mf.id (+)          = co.modfiscal_id
      and pc.id (+)          = co.planoconta_id;
   --
   cursor c_qtde_f510(en_empresa_id in number) is
   select count(1) qtde
     from cons_oper_ins_pc_rc_aum c
        , cod_st  cst_pis
        , cod_st  cst_cofins
        , mod_fiscal mf
        , plano_conta pc
    where c.empresa_id       = en_empresa_id
      and c.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and c.dm_st_proc       = 1 -- validado
      and c.codst_id_pis     = cst_pis.id
      and c.codst_id_cofins  = cst_cofins.id
      and mf.id (+)          = c.modfiscal_id
      and pc.id (+)          = c.planoconta_id;
   --
   cursor c_qtde_f525(en_empresa_id in number) is
   select count(1) qtde
     from comp_rec_det_rc cr
        , cod_st          cst_pis
        , cod_st          cst_cofins
        , plano_conta     pc
    where cr.empresa_id       = en_empresa_id
      and cr.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and cr.dm_st_proc       = 1 -- validado
      and cst_pis.id (+)      = cr.codst_id_pis
      and cst_cofins.id (+)   = cr.codst_id_cofins
      and pc.id (+)           = cr.planoconta_id;
   --
   cursor c_qtde_f550(en_empresa_id in number) is
   select count(1) qtde
     from cons_oper_ins_pc_rcomp co
        , cod_st          cst_pis
        , cod_st          cst_cofins
        , mod_fiscal      mf
        , plano_conta     pc
   where co.empresa_id       = en_empresa_id
     and co.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
     and co.dm_st_proc       = 1 -- validado
     and co.codst_id_pis     = cst_pis.id
     and co.codst_id_cofins  = cst_cofins.id
     and pc.id (+)           = co.planoconta_id
     and mf.id (+)           = co.modfiscal_id;
   --
   cursor c_qtde_f560(en_empresa_id in number) is
   select count(1) qtde
     from cons_op_ins_pcrcomp_aum co
        , cod_st          cst_pis
        , cod_st          cst_cofins
        , mod_fiscal      mf
        , plano_conta     pc
    where co.empresa_id       = en_empresa_id
      and co.dt_ref           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc       = 1 -- validado
      and co.codst_id_pis     = cst_pis.id
      and co.codst_id_cofins  = cst_cofins.id
      and pc.id  (+)          = co.planoconta_id
      and mf.id  (+)          = co.modfiscal_id;
   --
   cursor c_qtde_f600(en_empresa_id in number) is
   select count(1) qtde
     from contr_ret_fonte_pc crf
    where crf.empresa_id   = en_empresa_id
      and crf.dt_ret between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and crf.dm_st_proc   = 1; -- validado
   --
   cursor c_qtde_f700(en_empresa_id in number) is
   select count(1) qtde
     from deducao_diversa_pc dd
    where dd.empresa_id = en_empresa_id
      and dd.ano_ref    = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and dd.mes_ref    = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and dd.dm_st_proc = 1; -- validado
   --
   cursor c_qtde_f800(en_empresa_id in number) is
   select count(1) qtde
     from cred_decor_evento_pc cde
        , tipo_cred_pc tc
    where cde.empresa_id      = en_empresa_id
      and cde.dt_evento between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and cde.dm_st_proc      = 1 -- validado
      and tc.id               = cde.tipocredpc_id;
   --
BEGIN
   --
   vn_fase := 1;
   -- Monta o REGISTRO F001: ABERTURA DO BLOCO F
   pkb_monta_reg_f001;
   --
   vn_empresa_id_old := 0;
   --
   vn_fase := 2;
   -- Monta o REGISTRO F010: IDENTIFICAÇÃO DO ESTABELECIMENTO
   for rec in c_emp loop
      exit when c_emp%notfound or (c_emp%notfound) is null;
      --
      vn_fase := 3;
      vn_empresa_id_new := rec.empresa_id;
      vn_qtde_f100      := 0;
      vn_qtde_f120      := 0;
      vn_qtde_f130      := 0;
      vn_qtde_f150      := 0;
      vn_qtde_f200      := 0;
      vn_qtde_f500      := 0;
      vn_qtde_f510      := 0;
      vn_qtde_f525      := 0;
      vn_qtde_f550      := 0;
      vn_qtde_f560      := 0;
      vn_qtde_f600      := 0;
      vn_qtde_f700      := 0;
      vn_qtde_f800      := 0;
      --
      if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
          (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
         --
         vn_fase := 4;
         open c_qtde_f100(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f100 into vn_qtde_f100;
         close c_qtde_f100;
         --
         vn_fase := 5;
         open c_qtde_f120(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f120 into vn_qtde_f120;
         close c_qtde_f120;
         --
         vn_fase := 6;
         open c_qtde_f130(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f130 into vn_qtde_f130;
         close c_qtde_f130;
         --
         vn_fase := 7;
         open c_qtde_f150(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f150 into vn_qtde_f150;
         close c_qtde_f150;
         --
      end if;
      --
      vn_fase := 8;
      open c_qtde_f200(en_empresa_id => rec.empresa_id);
      fetch c_qtde_f200 into vn_qtde_f200;
      close c_qtde_f200;
      --
      if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
         gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 1 then -- Regime de Caixa Escrituração consolidada (Registro F500)
         --
         vn_fase := 9;
         open c_qtde_f500(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f500 into vn_qtde_f500;
         close c_qtde_f500;
         --
         vn_fase := 10;
         open c_qtde_f510(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f510 into vn_qtde_f510;
         close c_qtde_f510;
         --
         vn_fase := 11;
         open c_qtde_f525(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f525 into vn_qtde_f525;
         close c_qtde_f525;
         --
      end if;
      --
      vn_fase := 12;
      --
      if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
         gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 2 then -- Regime de Competência - Escrituração consolidada (Registro F550)
         --
         vn_fase := 13;
         open c_qtde_f550(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f550 into vn_qtde_f550;
         close c_qtde_f550;
         --
         vn_fase := 14;
         open c_qtde_f560(en_empresa_id => rec.empresa_id);
         fetch c_qtde_f560 into vn_qtde_f560;
         close c_qtde_f560;
         --
      end if;
      --
      vn_fase := 15;
      open c_qtde_f600(en_empresa_id => rec.empresa_id);
      fetch c_qtde_f600 into vn_qtde_f600;
      close c_qtde_f600;
      --
      vn_fase := 16;
      open c_qtde_f700(en_empresa_id => rec.empresa_id);
      fetch c_qtde_f700 into vn_qtde_f700;
      close c_qtde_f700;
      --
      vn_fase := 17;
      open c_qtde_f800(en_empresa_id => rec.empresa_id);
      fetch c_qtde_f800 into vn_qtde_f800;
      close c_qtde_f800;
      --
      vn_fase := 18;
      --
      if nvl(vn_qtde_f100,0) > 0 or
         nvl(vn_qtde_f120,0) > 0 or
         nvl(vn_qtde_f130,0) > 0 or
         nvl(vn_qtde_f150,0) > 0 or
         nvl(vn_qtde_f200,0) > 0 or
         nvl(vn_qtde_f500,0) > 0 or
         nvl(vn_qtde_f510,0) > 0 or
         nvl(vn_qtde_f525,0) > 0 or
         nvl(vn_qtde_f550,0) > 0 or
         nvl(vn_qtde_f560,0) > 0 or
         nvl(vn_qtde_f600,0) > 0 or
         nvl(vn_qtde_f700,0) > 0 or
         nvl(vn_qtde_f800,0) > 0 then
         --
         vn_fase := 19;
         -- se a empresa new é deferente de empresa old
         if vn_empresa_id_new <> vn_empresa_id_old then
            --
            vn_fase := 20;
            -- registra empresa no f010
            pkb_monta_reg_f010 ( en_empresa_id => rec.empresa_id );
            --
            vn_empresa_id_old := vn_empresa_id_new;
            --
         end if;
         --
         vn_fase := 21;
         --
         if nvl(vn_qtde_f100,0) > 0 then
            -- Monta o REGISTRO F100: DEMAIS DOCUMENTOS E OPERAÇÕES GERADORAS DE CONTRIBUIÇÃO E CRÉDITOS
            vn_fase := 22;
            pkb_monta_reg_f100(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 23;
         --
         if nvl(vn_qtde_f120,0) > 0 then
            -- monta o REGISTRO F120: BENS INCORPORADOS AO ATIVO IMOBILIZADO
            vn_fase := 24;
            pkb_monta_reg_f120(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 25;
         --
         if nvl(vn_qtde_f130,0) > 0 then
            -- monta o REGISTRO F130: BENS INCORPORADOS AO ATIVO IMOBILIZADO
            vn_fase := 26;
            pkb_monta_reg_f130(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 27;
         --
         if nvl(vn_qtde_f150,0) > 0 then
            -- monta o REGISTRO F150: CRÉDITO PRESUMIDO SOBRE ESTOQUE DE ABERTURA
            vn_fase := 28;
            pkb_monta_reg_f150(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 29;
         --
         if nvl(vn_qtde_f200,0) > 0 then
            -- monta o REGISTRO F200: OPERAÇÕES DA ATIVIDADE IMOBILIÁRIA - UNIDADE IMOBILIÁRIA VENDIDA
            vn_fase := 30;
            pkb_monta_reg_f200(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 31;
         --
         if nvl(vn_qtde_f500,0) > 0 then
            -- monta o REGISTRO F500: CONS. DAS OPER. DA PESSOA JURID. SUBM. AO REG. DE TRIB. COM BASE NO LUCRO PRES. - INCIDÊNCIA DO PIS/COFINS PELO REG. DE CAIXA.
            vn_fase := 32;
            pkb_monta_reg_f500(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 33;
         --
         if nvl(vn_qtde_f510,0) > 0 then
            -- monta o REGISTRO F510: Incid. do PIS/COFINS pelo reg. de caixa (Apur. da contr. por unid. de med. de produto, alíquota em reais)
            vn_fase := 34;
            pkb_monta_reg_f510(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 35;
         --
         if nvl(vn_qtde_f525,0) > 0 then
            -- monta o REGISTRO F525: Comp. da Rec. Escriturada no período - Det. da Receita Rec. pelo Regime de Caixa
            vn_fase := 36;
            pkb_monta_reg_f525(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 37;
         --
         if nvl(vn_qtde_f550,0) > 0 then
            -- monta o REGISTRO F550: Cons. das Oper. da Pessoa Jur. Sub. ao Reg. de Trib. com Base no Lucro Presumido
            vn_fase := 38;
            pkb_monta_reg_f550(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 39;
         --
         if nvl(vn_qtde_f560,0) > 0 then
            -- monta o REGISTRO F560: Incid. do PIS/COFINS pelo reg. de comp. (Apur. da contr. por unid. de med. de prod., alíq. em reais
            vn_fase := 40;
            pkb_monta_reg_f560(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 41;
         --
         if nvl(vn_qtde_f600,0) > 0 then
            -- monta o REGISTRO F600: CONTRIBUIÇÃO RETIDA NA FONTE
            vn_fase := 42;
            pkb_monta_reg_f600(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 43;
         --
         if nvl(vn_qtde_f700,0) > 0 then
            -- monta o REGISTRO F700: DEDUÇÕES DIVERSAS
            vn_fase := 44;
            pkb_monta_reg_f700(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
         vn_fase := 45;
         --
         if nvl(vn_qtde_f800,0) > 0 then
            -- monta o REGISTRO F800: CRÉDITOS DECORRENTES DE EVENTOS DE INCORPORAÇÃO, FUSÃO E CISÃO
            vn_fase := 46;
            pkb_monta_reg_f800(en_empresa_id => rec.empresa_id);
            --
         end if;
         --
      end if; -- vn_qtde de registros dos blocos F
      --
   end loop;
   --
   vn_fase := 47;
   -- Monta o REGISTRO F990: ENCERRAMENTO DO BLOCO F
   pkb_monta_reg_f990;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_f fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_F;
---------------------------------------------------
--| Monta o REGISTRO D990: ENCERRAMENTO DO BLOCO D
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_D990 IS
BEGIN
   --
   gn_qtde_reg_d990 := nvl(gn_qtde_reg_d990,0) + 1;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'D990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_d001 +
                                   gn_qtde_reg_d010 +
                                   gn_qtde_reg_d100 +
                                   gn_qtde_reg_d101 +
                                   gn_qtde_reg_d105 +
                                   gn_qtde_reg_d111 +
                                   gn_qtde_reg_d200 +
                                   gn_qtde_reg_d201 +
                                   gn_qtde_reg_d205 +
                                   gn_qtde_reg_d209 +
                                   gn_qtde_reg_d500 +
                                   gn_qtde_reg_d501 +
                                   gn_qtde_reg_d505 +
                                   gn_qtde_reg_d509 +
                                   gn_qtde_reg_d600 +
                                   gn_qtde_reg_d601 +
                                   gn_qtde_reg_d605 +
                                   gn_qtde_reg_d609 +
                                   gn_qtde_reg_d990
                                 )
                              || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_D990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_D990;
---------------------------------------------------------------------------------------------------------------------------------------------------
--| REGISTRO D600: Consolidação da Prestação de Serviços - Notas de Serviço de Comunicação (Código 21) e de Serviço de Telecomunicação (Código 22)
---------------------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_D600 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase        number := 0;
   vv_cidade_ibge cidade.ibge_cidade%type;
   --
   cursor c_d600( en_empresa_id in empresa.id%type ) is
   select mf.id                 modfiscal_id
        , mf.cod_mod            cod_mod
        , nf.serie              serie
        , nf.sub_serie          sub_serie
        , count(nf.id)          qtd_cons
        , min(decode(nf.dm_ind_emit, 1, nvl(nf.dt_sai_ent,nf.dt_emiss), nf.dt_emiss)) dt_doc_ini
        , max(decode(nf.dm_ind_emit, 1, nvl(nf.dt_sai_ent,nf.dt_emiss), nf.dt_emiss)) dt_doc_fin
        , sum(nvl(t.vl_total_nf,0))         vl_doc
        , sum(nvl(t.vl_desconto,0))         vl_desc
        , sum(nvl(t.vl_servico,0))          vl_serv
        , sum(nvl(t.vl_serv_nao_trib,0))    vl_serv_nt
        , sum(nvl(t.vl_terc,0))             vl_terc
        , sum(nvl(t.vl_outra_despesas,0))   vl_da
        , sum(nvl(t.vl_base_calc_icms,0))   vl_bc_icms
        , sum(nvl(t.vl_imp_trib_icms,0))    vl_icms
        , sum(nvl(t.vl_imp_trib_pis,0) + nvl(t.vl_pis_iss,0))       vl_pis
        , sum(nvl(t.vl_imp_trib_cofins,0) + nvl(t.vl_cofins_iss,0)) vl_cofins
     from tmp_nota_fiscal         nf
        , mod_fiscal          mf
        , tmp_nota_fiscal_total   t
        , tmp_item_nota_fiscal    inf
        , TMP_imp_itemnf          imp
        , tipo_imposto        ti
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc      = 4 -- 4-Autorizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and nf.dm_ind_oper     = 1 -- 0-entrada, 1-saída
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('21', '22')
      and t.notafiscal_id    = nf.id
      and inf.notafiscal_id  = nf.id
      and imp.itemnf_id      = inf.id
      and ti.id              = imp.tipoimp_id
      and ti.cd              = 4 -- considerar somente o imposto pis
      and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
      and exists ( select 1
                     from tmp_item_nota_fiscal it
                        , TMP_imp_itemnf       ii
                        , tipo_imposto     ti
                        , cod_st           cst
                    where it.notafiscal_id = nf.id
                      and ii.itemnf_id     = it.id
                      and ii.dm_tipo       = 0 -- 0-imposto, 1-retenção
                      and ti.id            = ii.tipoimp_id
                      and ti.cd            = 4 -- pis
                      and cst.id           = ii.codst_id
                      and cst.cod_st  not in ('70','71','72','73','74','75') -- valores isentos de créditos
                      and nvl(it.classconsitemcont_id,0) > 0 )
    group by mf.id
        , mf.cod_mod
        , nf.serie
        , nf.sub_serie;
   --
   cursor c_d601( en_empresa_id   in empresa.id%type
                , en_modfiscal_id in mod_fiscal.id%type
                , ev_serie        in nota_fiscal.serie%type
                , ev_sub_serie    in nota_fiscal.sub_serie%type
                , ed_dt_doc_ini   in nota_fiscal.dt_emiss%type
                , ed_dt_doc_fin   in nota_fiscal.dt_emiss%type ) is
   select cc.cod_class                 cod_class
        , cs.cod_st                    cst_pis
        , ii.aliq_apli                 aliq_pis
        , it.cod_cta                   cod_cta
        , sum(nvl(it.vl_item_bruto,0)) vl_item
        , sum(nvl(it.vl_desc,0))       vl_desc
        , sum(nvl(ii.vl_base_calc,0))  vl_bc_pis
        , sum(nvl(ii.vl_imp_trib,0))   vl_pis
     from tmp_nota_fiscal          nf
        , tmp_item_nota_fiscal     it
        , TMP_imp_itemnf           ii
        , tipo_imposto         ti
        , cod_st               cs
        , class_cons_item_cont cc
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc      = 4 -- 4-Autorizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and nf.dm_ind_oper     = 1 -- 0-entrada, 1-saída
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and nf.modfiscal_id    = en_modfiscal_id
      and nf.serie           = ev_serie
      and nvl(nf.sub_serie,'0') = nvl(ev_sub_serie,'0')
      and nf.dt_emiss  between ed_dt_doc_ini and ed_dt_doc_fin
      and it.notafiscal_id   = nf.id
      and ii.itemnf_id       = it.id
      and ii.dm_tipo         = 0 -- 0-imposto, 1-retenção
      and ti.id              = ii.tipoimp_id
      and ti.cd              = 4 -- pis
      and cs.id              = ii.codst_id
      and cs.cod_st     not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and cc.id              = it.classconsitemcont_id
    group by cc.cod_class
        , cs.cod_st
        , ii.aliq_apli
        , it.cod_cta;
   --
   cursor c_d605( en_empresa_id   in empresa.id%type
                , en_modfiscal_id in mod_fiscal.id%type
                , ev_serie        in nota_fiscal.serie%type
                , ev_sub_serie    in nota_fiscal.sub_serie%type
                , ed_dt_doc_ini   in nota_fiscal.dt_emiss%type
                , ed_dt_doc_fin   in nota_fiscal.dt_emiss%type ) is
   select cc.cod_class                 cod_class
        , cs.cod_st                    cst_pis
        , ii.aliq_apli                 aliq_pis
        , it.cod_cta                   cod_cta
        , sum(nvl(it.vl_item_bruto,0)) vl_item
        , sum(nvl(it.vl_desc,0))       vl_desc
        , sum(nvl(ii.vl_base_calc,0))  vl_bc_pis
        , sum(nvl(ii.vl_imp_trib,0))   vl_pis
     from tmp_nota_fiscal          nf
        , tmp_item_nota_fiscal     it
        , TMP_imp_itemnf           ii
        , tipo_imposto         ti
        , cod_st               cs
        , class_cons_item_cont cc
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc      = 4 -- 4-Autorizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and nf.dm_ind_oper     = 1 -- 0-entrada, 1-saída
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and nf.modfiscal_id    = en_modfiscal_id
      and nf.serie           = ev_serie
      and nvl(nf.sub_serie,'0') = nvl(ev_sub_serie,'0')
      and nf.dt_emiss  between ed_dt_doc_ini and ed_dt_doc_fin
      and it.notafiscal_id   = nf.id
      and ii.itemnf_id       = it.id
      and ii.dm_tipo         = 0 -- 0-imposto, 1-retenção
      and ti.id              = ii.tipoimp_id
      and ti.cd              = 5 -- cofins
      and cs.id              = ii.codst_id
      and cs.cod_st     not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and cc.id              = it.classconsitemcont_id
    group by cc.cod_class
        , cs.cod_st
        , ii.aliq_apli
        , it.cod_cta;
   --
   cursor c_d609( en_empresa_id   in empresa.id%type
                , en_modfiscal_id in mod_fiscal.id%type
                , ev_serie        in nota_fiscal.serie%type
                , ev_sub_serie    in nota_fiscal.sub_serie%type
                , ed_dt_doc_ini   in nota_fiscal.dt_emiss%type
                , ed_dt_doc_fin   in nota_fiscal.dt_emiss%type ) is
   select distinct ad.conteudo
        , op.cd  ind_proc
     from tmp_nota_fiscal  nf
        , nfinfor_adic ad
        , orig_proc    op
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc      = 4 -- 4-Autorizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and nf.dm_ind_oper     = 1 -- 0-entrada, 1-saída
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and nf.modfiscal_id       = en_modfiscal_id
      and nf.serie              = ev_serie
      and nvl(nf.sub_serie,'0') = nvl(ev_sub_serie,'0')
      and nf.dt_emiss     between ed_dt_doc_ini and ed_dt_doc_fin
      and exists ( select 1
                     from tmp_item_nota_fiscal it
                        , TMP_imp_itemnf       ii
                        , tipo_imposto     ti
                        , cod_st          cst
                    where it.notafiscal_id = nf.id
                      and ii.itemnf_id     = it.id
                      and ii.dm_tipo       = 0 -- 0-imposto, 1-retenção
                      and ti.id            = ii.tipoimp_id
                      and ti.cd            = 4 -- pis
                      and cst.id           = ii.codst_id
                      and cst.cod_st  not in ('70','71','72','73','74','75') ) -- valores isentos de créditos
      and ad.notafiscal_id = nf.id
      and ad.dm_tipo       = 2  -- Processo
      and op.id            = ad.origproc_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   vv_cidade_ibge := pk_csf.fkg_ibge_cidade_empresa(en_empresa_id => en_empresa_id);
   --
   vn_fase := 2;
   --
   for rec_d600 in c_d600( en_empresa_id => en_empresa_id )
   loop
      --
      exit when c_d600%notfound or (c_d600%notfound) is null;
      --
      vn_fase := 3;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'D600' || '|';
      gl_conteudo := gl_conteudo || rec_d600.cod_mod || '|';
      gl_conteudo := gl_conteudo || vv_cidade_ibge || '|';
      gl_conteudo := gl_conteudo || rec_d600.serie || '|';
      gl_conteudo := gl_conteudo || rec_d600.sub_serie || '|';
      gl_conteudo := gl_conteudo || '0' || '|'; -- ind_rec = 0-Receita própria - serviços prestados
      gl_conteudo := gl_conteudo || rec_d600.qtd_cons || '|';
      gl_conteudo := gl_conteudo || to_char(rec_d600.dt_doc_ini, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || to_char(rec_d600.dt_doc_fin, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_doc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_desc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_serv, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_serv_nt, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_terc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_da, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_bc_icms, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_icms, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d600.vl_cofins, '9999999999990D99') || '|';
      --
      vn_fase := 4;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D600'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_d600 := nvl(gn_qtde_reg_d600,0) + 1;
      --
      vn_fase := 5;
      -- REGISTRO D601: COMPLEMENTO DA CONSOLIDAÇÃO DA PRESTAÇÃO DE SERVIÇOS (CÓDIGOS 21 E 22) - PIS/PASEP
      for rec_d601 in c_d601( en_empresa_id   => en_empresa_id
                            , en_modfiscal_id => rec_d600.modfiscal_id
                            , ev_serie        => rec_d600.serie
                            , ev_sub_serie    => rec_d600.sub_serie
                            , ed_dt_doc_ini   => rec_d600.dt_doc_ini
                            , ed_dt_doc_fin   => rec_d600.dt_doc_fin )
      loop
         --
         exit when c_d601%notfound or (c_d601%notfound) is null;
         --
         vn_fase := 6;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'D601' || '|';
         gl_conteudo := gl_conteudo || rec_d601.cod_class || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d601.vl_item, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d601.vl_desc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_d601.cst_pis || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d601.vl_bc_pis, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d601.aliq_pis, '9990D9999') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d601.vl_pis, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_d601.cod_cta || '|';
         --
         vn_fase := 7;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D601'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_d601 := nvl(gn_qtde_reg_d601,0) + 1;
         --
      end loop; -- c_d601
      --
      vn_fase := 8;
      -- REGISTRO D605: COMPLEMENTO DA CONSOLIDAÇÃO DA PRESTAÇÃO DE SERVIÇOS (CÓDIGOS 21 E 22) - COFINS
      for rec_d605 in c_d605( en_empresa_id   => en_empresa_id
                            , en_modfiscal_id => rec_d600.modfiscal_id
                            , ev_serie        => rec_d600.serie
                            , ev_sub_serie    => rec_d600.sub_serie
                            , ed_dt_doc_ini   => rec_d600.dt_doc_ini
                            , ed_dt_doc_fin   => rec_d600.dt_doc_fin )
      loop
         --
         exit when c_d605%notfound or (c_d605%notfound) is null;
         --
         vn_fase := 9;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'D605' || '|';
         gl_conteudo := gl_conteudo || rec_d605.cod_class || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d605.vl_item, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d605.vl_desc, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_d605.cst_pis || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d605.vl_bc_pis, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d605.aliq_pis, '9990D9999') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_d605.vl_pis, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || rec_d605.cod_cta || '|';
         --
         vn_fase := 10;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D605'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_d605 := nvl(gn_qtde_reg_d605,0) + 1;
         --
      end loop; -- c_d605
      --
      vn_fase := 11;
      -- REGISTRO D609: PROCESSO REFERENCIADO
      for rec_d609 in c_d609( en_empresa_id   => en_empresa_id
                            , en_modfiscal_id => rec_d600.modfiscal_id
                            , ev_serie        => rec_d600.serie
                            , ev_sub_serie    => rec_d600.sub_serie
                            , ed_dt_doc_ini   => rec_d600.dt_doc_ini
                            , ed_dt_doc_fin   => rec_d600.dt_doc_fin )
      loop
         --
         exit when c_d609%notfound or (c_d609%notfound) is null;
         --
         vn_fase := 12;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'D609' || '|';
         gl_conteudo := gl_conteudo || pk_csf.fkg_converte(rec_d609.conteudo) || '|';
         gl_conteudo := gl_conteudo || rec_d609.ind_proc || '|';
         --
         vn_fase := 13;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D609'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_d609 := nvl(gn_qtde_reg_d609,0) + 1;
         --
      end loop; -- c_d609
      --
   end loop; -- c_d600
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_D600 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_D600;
-----------------------------------------------------------------------------------------------------------------------------
--| REGISTRO D500: NOTA FISCAL DE SERVIÇO DE COMUNICAÇÃO (CÓDIGO 21) E NOTA FISCAL DE SERVIÇO DE TELECOMUNICAÇÃO (CÓDIGO 22)
-----------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_D500(EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
  --
  vn_fase number := 0;
  --
  cursor c_nf is
    select distinct nf.id notafiscal_id,
                    nf.empresa_id,
                    nf.dm_ind_oper ind_oper,
                    nf.dm_ind_emit ind_emit,
                    mf.cod_mod cod_mod,
                    sd.cd cod_sit,
                    nf.serie ser,
                    nf.sub_serie sub,
                    nf.nro_nf num_doc,
                    nf.dt_emiss dt_doc,
                    nf.dt_sai_ent dt_a_p,
                    t.vl_total_nf vl_doc,
                    t.vl_desconto vl_desc,
                    t.vl_servico vl_serv,
                    t.vl_serv_nao_trib vl_serv_nt,
                    t.vl_terc vl_terc,
                    t.vl_outra_despesas vl_da,
                    t.vl_base_calc_icms vl_bc_icms,
                    t.vl_imp_trib_icms vl_icms,
                    (nvl(t.vl_imp_trib_pis, 0) + nvl(t.vl_pis_iss, 0)) vl_pis,
                    (nvl(t.vl_imp_trib_cofins, 0) + nvl(t.vl_cofins_iss, 0)) vl_cofins,
                    nf.inforcompdctofiscal_id,
                    inf.cod_infor,
                    nf.pessoa_id
      from tmp_nota_fiscal        nf,
           mod_fiscal             mf,
           sit_docto              sd,
           tmp_nota_fiscal_total  t,
           infor_comp_dcto_fiscal inf,
           tmp_item_nota_fiscal   it,
           tmp_imp_itemnf         imp,
           tipo_imposto           ti
     where nf.empresa_id       = en_empresa_id
       and nf.dm_st_proc       in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc  = 0 -- 0 - Não, 1 - Sim
       and nf.dm_ind_oper      = 0 -- 0 - Entrada, 1 - Saída
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id               = nf.modfiscal_id
       and mf.cod_mod          in ('21', '22')
       and sd.id               = nf.sitdocto_id
       and t.notafiscal_id     = nf.id
       and it.notafiscal_id(+) = nf.id
       and imp.itemnf_id(+)    = it.id
       and ti.id(+)           = imp.tipoimp_id
       and ti.cd(+)            = 4 -- considerar somente o imposto pis
       -- and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, it.cfop_id, imp.codst_id, null) = 1 -- verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
       and inf.id(+)           = nf.inforcompdctofiscal_id
       and exists (select 1
                     from nf_compl_oper_pis pis, 
                          cod_st cst
                    where pis.notafiscal_id = nf.id  
                      and cst.id            = pis.codst_id
                      and cst.cod_st       not in ('70', '71', '72', '73', '74', '75')) -- valores isentos de créditos
     order by nf.empresa_id,
              nf.dm_ind_oper,
              nf.dm_ind_emit,
              mf.cod_mod,
              nf.serie,
              nf.nro_nf;
  --
  cursor c_d501(en_notafiscal_id nota_fiscal.id%type) is
    select co.id,
           co.notafiscal_id,
           cst.cod_st       cst_pis,
           co.vl_item,
           bcc.cd           nat_bc_cred,
           co.vl_bc_pis,
           co.aliq_pis,
           co.vl_pis,
           co.planoconta_id,
           pc.cod_cta
      from nf_compl_oper_pis co,
           cod_st            cst,
           base_calc_cred_pc bcc,
           plano_conta       pc
     where co.notafiscal_id = en_notafiscal_id
       and cst.id           = co.codst_id
       and bcc.id(+)        = co.basecalccredpc_id
       and pc.id(+)         = co.planoconta_id;
  --
  cursor c_d505(en_notafiscal_id nota_fiscal.id%type) is
    select co.id,
           co.notafiscal_id,
           cst.cod_st       cst_cofins,
           co.vl_item,
           bcc.cd           nat_bc_cred,
           co.vl_bc_cofins,
           co.aliq_cofins,
           co.vl_cofins,
           co.planoconta_id,
           pc.cod_cta
      from nf_compl_oper_cofins co,
           cod_st               cst,
           base_calc_cred_pc    bcc,
           plano_conta          pc
     where co.notafiscal_id = en_notafiscal_id
       and cst.id           = co.codst_id
       and bcc.id(+)        = co.basecalccredpc_id
       and pc.id(+)         = co.planoconta_id;
  --
  cursor c_d509(en_notafiscal_id nota_fiscal.id%type) is
    select ad.id, 
           ad.conteudo, 
           op.cd ind_proc
      from nfinfor_adic ad, 
           orig_proc op
     where ad.notafiscal_id = en_notafiscal_id
       and ad.dm_tipo       = 2 -- Processo
       and op.id            = ad.origproc_id;
  --
BEGIN
  --
  vn_fase := 1;
  --
  for rec_d500 in c_nf loop
    exit when c_nf%notfound or(c_nf%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'D500' || '|';
    gl_conteudo := gl_conteudo || rec_d500.ind_oper || '|';
    gl_conteudo := gl_conteudo || rec_d500.ind_emit || '|';
    --gl_conteudo := gl_conteudo || pk_csf.fkg_pessoa_cod_part (rec_d500.pessoa_id) || '|';
    gl_conteudo := gl_conteudo || trim(pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part(en_pessoa_id          => rec_d500.pessoa_id,
                                                                                    en_tipo_retorna       => 1, -- 0-Pessoa_id / 1-Cod_Part    
                                                                                    en_origem_dado_pessoa => gn_origem_dado_pessoa,
                                                                                    en_notafiscal_id      => rec_d500.notafiscal_id)) || '|';
    gl_conteudo := gl_conteudo || rec_d500.cod_mod || '|';
    gl_conteudo := gl_conteudo || rec_d500.cod_sit || '|';
    gl_conteudo := gl_conteudo || rec_d500.ser || '|';
    gl_conteudo := gl_conteudo || rec_d500.sub || '|';
    gl_conteudo := gl_conteudo || rec_d500.num_doc || '|';
    gl_conteudo := gl_conteudo || to_char(rec_d500.dt_doc, 'ddmmrrrr') || '|';
    gl_conteudo := gl_conteudo || to_char(rec_d500.dt_a_p, 'ddmmrrrr') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_doc, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_desc, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_serv, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_serv_nt, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_terc, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_da, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_bc_icms, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_icms, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || rec_d500.cod_infor || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_pis, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d500.vl_cofins, '9999999999990D99') || '|';
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D500',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_d500 := nvl(gn_qtde_reg_d500, 0) + 1;
    --
    vn_fase := 4;
    --
    -- REGISTRO D501: COMPLEMENTO DA OPERAÇÃO (CÓDIGOS 21 e 22) - PIS/PASEP
    for rec_d_501 in c_d501(rec_d500.notafiscal_id) loop
      exit when c_d501%notfound or(c_d501%notfound) is null;
      --
      vn_fase := 5;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'D501' || '|';
      gl_conteudo := gl_conteudo || rec_d_501.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_501.vl_item, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d_501.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_501.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_501.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_501.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d_501.cod_cta || '|';
      --
      vn_fase := 6;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D501',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_d501 := nvl(gn_qtde_reg_d501, 0) + 1;
      --
    end loop; -- c_d501
    --
    vn_fase := 7;
    --
    -- REGISTRO D505: COMPLEMENTO DA OPERAÇÃO (CÓDIGOS 21 e 22) - COFINS
    for rec_d_505 in c_d505(rec_d500.notafiscal_id) loop
      exit when c_d505%notfound or(c_d505%notfound) is null;
      --
      vn_fase := 8;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'D505' || '|';
      gl_conteudo := gl_conteudo || rec_d_505.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_505.vl_item, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d_505.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_505.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_505.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d_505.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d_505.cod_cta || '|';
      --
      vn_fase := 9;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D505',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_d505 := nvl(gn_qtde_reg_d505, 0) + 1;
      --
    end loop; -- c_d505
    --
    vn_fase := 10;
    --
    -- REGISTRO D509: PROCESSO REFERENCIADO
    for rec_d_509 in c_d509(rec_d500.notafiscal_id) loop
      exit when c_d509%notfound or(c_d509%notfound) is null;
      --
      vn_fase := 11;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'D509' || '|';
      gl_conteudo := gl_conteudo || pk_csf.fkg_converte(rec_d_509.conteudo) || '|';
      gl_conteudo := gl_conteudo || rec_d_509.ind_proc || '|';
      --
      vn_fase := 12;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D509',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_d509 := nvl(gn_qtde_reg_d509, 0) + 1;
      --
    end loop; -- c_d509
  --
  end loop;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_D500 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_D500;

---------------------------------------------------------------------------------------------------------------------------------------------------------------
--| ****** ATENÇÃO ******
--| Devido as alterações que foram necessárias realizar no registro D200, foi criada uma nova procedure PKB_MONTA_REG_D200 
--| com as novas alterações e comentado essa que encontrava-se funcionando, para caso seja necessário voltar o código. 
--| Por gentileza, não retirar essa procedure comentada da package, até que seja validado o registro D200.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/*PROCEDURE PKB_MONTA_REG_D200(EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
  --
  i               number := 0;
  j               number := 0;
  k               number := 0;
  --
  vn_fase         number := 0;
  vn_cfop         cfop.cd%type;
  --
  vd_dt_ini       date;
  vn_prim_dia     number;
  vn_ult_dia      number;
  vn_nro_ct_first number(9) := 0;
  vn_qtde_d200    number := 0;
  --
  type tab_d200 is record(
    cod_mod    varchar2(2),
    cod_sit    varchar2(2),
    serie      varchar2(3),
    subserie   varchar2(2),
    cfop       number(4),
    dt_emiss   date,
    nro_ct_ini number(9),
    nro_ct_fim number(9),
    vl_doc     number(15, 2),
    vl_desc    number(15, 2));
  --
  type t_tab_d200 is table of tab_d200 index by binary_integer;
  type t_bi_tab_d200 is table of t_tab_d200 index by binary_integer;
  type t_tri_tab_d200 is table of t_bi_tab_d200 index by binary_integer;
  vt_tri_tab_d200 t_tri_tab_d200;
  --
  cursor c_d200 is
    select level,
           z.*
       from (--t
             select t.*
                  , lag(t.nro_ct, 1, null) over (order by t.nro_ct) nro_ct_ant
                  , decode(nvl(t.nro_ct - lag(t.nro_ct, 1, null) over (order by t.nro_ct), 2), 0, -1, 1, 0, 1) ind_quebra_1
                  , case when (   decode(nvl(t.nro_ct - lag(t.nro_ct, 1, null) over (order by t.nro_ct), 2), 0, -1, 1, 0, 1) = 1
                               or decode(lag(t.cfop, 1, t.cfop) over (order by t.nro_ct),t.cfop,0,1) = 1
                               or decode(lag(t.cod_mod, 1, t.cod_mod) over (order by t.nro_ct),t.cod_mod,0,1) = 1
                               or decode(lag(t.cod_sit, 1, t.cod_sit) over (order by t.nro_ct),t.cod_sit,0,1) = 1
                               or decode(lag(t.serie, 1, t.serie) over (order by t.nro_ct),t.serie,0,1) = 1
                               or decode(lag(t.subserie, 1, t.subserie) over (order by t.nro_ct),t.subserie,0,1) = 1
                               or decode(lag(t.dt_emiss, 1, t.dt_emiss) over (order by t.nro_ct),t.dt_emiss,0,1) = 1
                                      ) then
                                     1
                                 else
                                     0
                                 end
                                   ind_quebra
                         , lag(t.cfop, 1, t.cfop) over (order by t.nro_ct) cfop_ant
                         , decode(lag(t.cfop, 1, t.cfop) over (order by t.nro_ct),t.cfop,0,1) cfop_quebra
                  from   (
                          select mf.cod_mod,
                                 sd.cd cod_sit,
                                 ct.serie,
                                 ct.subserie,
                                 c.cd cfop,
                                 --ct.cfop,
                                 ct.dt_hr_emissao dt_emiss,
                                 ct.nro_ct nro_ct,
                                 nvl(cv.vl_docto_fiscal, 0) vl_doc,
                                 nvl(cv.vl_desc, 0) vl_desc
                            from conhec_transp         ct,
                                 ct_reg_anal           ra,
                                 mod_fiscal            mf,
                                 sit_docto             sd,
                                 conhec_transp_vlprest cv,
                                 cfop                  c
                           where ct.empresa_id      = en_empresa_id
                             and ct.dm_st_proc      = 4 -- Autorizado
                             and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
                             and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
                             and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
                             and c.cd               = vn_cfop
                             --and ct.cfop            = vn_cfop
                             and to_date(ct.dt_hr_emissao,'dd/mm/rrrr') = to_date(vd_dt_ini,'dd/mm/rrrr')
                             --
                             and ra.conhectransp_id = ct.id
                             and mf.id              = ct.modfiscal_id
                             and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
                             and sd.id              = ct.sitdocto_id
                             and cv.conhectransp_id = ct.id
                             and ra.cfop_id         = c.id
                             and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
                             and exists (select 1
                                           from ct_comp_doc_pis pis,
                                                cod_st cst
                                          where pis.conhectransp_id = ct.id
                                            and cst.id              = pis.codst_id
                                            and cst.cod_st          not in ('70', '71', '72', '73', '74', '75')) -- valores isentos de créditos
                      order by ct.nro_ct) t
                ) z
             where ind_quebra != -1
                connect by nocycle prior z.nro_ct = z.nro_ct_ant and z.ind_quebra = 0
                start with z.ind_quebra = 1;
  --
  cursor c_d201(en_empresa_id empresa.id%type,
                en_nro_ct_ini conhec_transp.nro_ct%type,
                en_nro_ct_fim conhec_transp.nro_ct%type,
                ed_dt_emiss   conhec_transp.dt_hr_emissao%type) is
    select cs.cod_st,
           nvl(cc.aliq_pis, 0) aliq_pis,
           pc.cod_cta,
           nvl(sum(nvl(cc.vl_item, 0)), 0) vl_item,
           nvl(sum(nvl(cc.vl_bc_pis, 0)), 0) vl_bc_pis,
           nvl(sum(nvl(cc.vl_pis, 0)), 0) vl_pis
      from tmp_conhec_transp ct,
           mod_fiscal        mf,
           ct_comp_doc_pis   cc,
           cod_st            cs,
           plano_conta       pc
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
       and ct.nro_ct between en_nro_ct_ini and en_nro_ct_fim
       and ct.dt_hr_emissao   = ed_dt_emiss
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and cc.conhectransp_id = ct.id
       and cs.id              = cc.codst_id
       and pc.id(+)           = cc.planoconta_id
     group by cs.cod_st,
              cc.aliq_pis,
              pc.cod_cta;
  --
  cursor c_d205(en_empresa_id empresa.id%type,
                en_nro_ct_ini conhec_transp.nro_ct%type,
                en_nro_ct_fim conhec_transp.nro_ct%type,
                ed_dt_emiss   conhec_transp.dt_hr_emissao%type) is
    select cs.cod_st,
           nvl(cc.aliq_cofins, 0) aliq_cofins,
           pc.cod_cta,
           nvl(sum(nvl(cc.vl_item, 0)), 0) vl_item,
           nvl(sum(nvl(cc.vl_bc_cofins, 0)), 0) vl_bc_cofins,
           nvl(sum(nvl(cc.vl_cofins, 0)), 0) vl_cofins
      from tmp_conhec_transp  ct,
           mod_fiscal         mf,
           ct_comp_doc_cofins cc,
           cod_st             cs,
           plano_conta        pc
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
       and ct.nro_ct between en_nro_ct_ini and en_nro_ct_fim
       and ct.dt_hr_emissao   = ed_dt_emiss
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and cc.conhectransp_id = ct.id
       and cs.id              = cc.codst_id
       and pc.id(+)           = cc.planoconta_id
     group by cs.cod_st,
              cc.aliq_cofins,
              pc.cod_cta;
  --
  cursor c_d209(en_empresa_id empresa.id%type,
                en_nro_ct_ini conhec_transp.nro_ct%type,
                en_nro_ct_fim conhec_transp.nro_ct%type,
                ed_dt_emiss   conhec_transp.dt_hr_emissao%type) is
    select cp.num_proc, op.cd ind_proc
      from tmp_conhec_transp ct,
           mod_fiscal        mf,
           ct_proc_ref       cp,
           orig_proc         op
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
       and ct.nro_ct between en_nro_ct_ini and en_nro_ct_fim
       and ct.dt_hr_emissao   = ed_dt_emiss
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and cp.conhectransp_id = ct.id
       and op.id              = cp.origproc_id;
  --
BEGIN
  --
  vn_fase := 1;
  --
  vd_dt_ini   := gt_row_abertura_efd_pc.dt_ini;
  vn_prim_dia := to_number(to_char(gt_row_abertura_efd_pc.dt_ini, 'dd'));
  vn_ult_dia  := to_number(to_char(gt_row_abertura_efd_pc.dt_fin, 'dd'));
  --
  -- Loop da data
  for y in vn_prim_dia .. vn_ult_dia loop
    --
    -- Inicio loop cfop/empresa
    for x in (select distinct c.cd cfop
                from conhec_transp         ct,
                     ct_reg_anal           ra,
                     mod_fiscal            mf,
                     sit_docto             sd,
                     conhec_transp_vlprest cv,
                     cfop                  c
               where ct.empresa_id      = en_empresa_id
                 and ct.dm_st_proc      = 4 -- Autorizado
                 and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
                 and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
                 and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
                 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') = to_date(vd_dt_ini, 'dd/mm/rrrr')
                 and ra.conhectransp_id = ct.id
                 and mf.id              = ct.modfiscal_id
                 and mf.cod_mod in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
                 and sd.id              = ct.sitdocto_id
                 and cv.conhectransp_id = ct.id
                 and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
                 and ra.cfop_id         = c.id
                 and exists (select 1
                               from ct_comp_doc_pis pis,
                                    cod_st cst
                              where pis.conhectransp_id = ct.id
                                and cst.id              = pis.codst_id
                                and cst.cod_st not in ('70', '71', '72', '73', '74', '75')) -- valores isentos de créditos
              ) loop
      --
      vn_cfop := x.cfop;
      --
      vn_fase := 2;
      --
      -- Monta Registro D200: Resumo da Escrituração Diária - Prestação de Serviços de Transporte
      for rec_d200 in c_d200 loop
        exit when c_d200%notfound is null or(c_d200%notfound) is null;
        --
        if rec_d200.level = 1 then
          --
          vn_nro_ct_first := rec_d200.nro_ct;
          --
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).cod_mod    := rec_d200.cod_mod;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).cod_sit    := rec_d200.cod_sit;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).serie      := rec_d200.serie;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).subserie   := rec_d200.subserie;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).cfop       := rec_d200.cfop;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).dt_emiss   := rec_d200.dt_emiss;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).nro_ct_ini := rec_d200.nro_ct;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).nro_ct_fim := rec_d200.nro_ct;
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).vl_doc     := nvl(rec_d200.vl_doc, 0);
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).vl_desc    := nvl(rec_d200.vl_desc, 0);
          --
        else
          --
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).vl_doc     := vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).vl_doc + nvl(rec_d200.vl_doc, 0);
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).vl_desc    := vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).vl_desc + nvl(rec_d200.vl_desc, 0);
          vt_tri_tab_d200(1)(vn_nro_ct_first)(rec_d200.cfop).nro_ct_fim := rec_d200.nro_ct;
          --
        end if;
        --
      end loop; -- c_d200
    --
    end loop; -- fim loop por cfop/empresa
    --
    vn_fase := 3;
    --
    vd_dt_ini := to_date(vd_dt_ini + 1);
    --
  end loop; --fim do loop da data
  --
  vn_fase := 4;
  --
  i := nvl(vt_tri_tab_d200.first, 0);
  --
  loop
    --
    vn_fase := 5;
    --
    if nvl(i, 0) = 0 then
      exit;
    end if;
    --
    j := vt_tri_tab_d200(i).first;
    --
    begin
      vn_qtde_d200 := vt_tri_tab_d200(i)(j).count;
    exception
      when others then
        vn_qtde_d200 := 0;
    end;
    --
    loop
      --
      vn_fase := 6;
      --
      if nvl(j, 0) = 0 then
        exit;
      end if;
      --
      if nvl(vn_qtde_d200, 0) > 0 then
        --
        k := vt_tri_tab_d200(i)(j).first;
        --
        loop
          --
          vn_fase := 7;
          --
          if nvl(k, 0) = 0 then
            exit;
          end if;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'D200' || '|';
          gl_conteudo := gl_conteudo || vt_tri_tab_d200(i)(j)(k).cod_mod || '|';
          gl_conteudo := gl_conteudo || vt_tri_tab_d200(i)(j)(k).cod_sit || '|';
          gl_conteudo := gl_conteudo || vt_tri_tab_d200(i)(j)(k).serie || '|';
          gl_conteudo := gl_conteudo || vt_tri_tab_d200(i)(j)(k).subserie || '|';
          gl_conteudo := gl_conteudo || vt_tri_tab_d200(i)(j)(k).nro_ct_ini || '|';
          gl_conteudo := gl_conteudo || vt_tri_tab_d200(i)(j)(k).nro_ct_fim || '|';
          gl_conteudo := gl_conteudo || vt_tri_tab_d200(i)(j)(k).cfop || '|';
          gl_conteudo := gl_conteudo || to_char(vt_tri_tab_d200(i)(j)(k).dt_emiss, 'ddmmrrrr') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(vt_tri_tab_d200(i)(j)(k).vl_doc, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(vt_tri_tab_d200(i)(j)(k).vl_desc, '9999999999990D99') || '|';
          --
          vn_fase := 8;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D200',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_d200 := nvl(gn_qtde_reg_d200, 0) + 1;
          --
          -- Monta Registro D201: Totalização do Resumo Diário - PIS/Pasep
          for rec_d201 in c_d201(en_empresa_id => en_empresa_id,
                                 en_nro_ct_ini => vt_tri_tab_d200(i)(j)(k).nro_ct_ini,
                                 en_nro_ct_fim => vt_tri_tab_d200(i)(j)(k).nro_ct_fim,
                                 ed_dt_emiss   => vt_tri_tab_d200(i)(j)(k).dt_emiss) loop
            exit when c_d201%notfound or(c_d201%notfound) is null;
            --
            vn_fase := 9;
            --
            -- Cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'D201' || '|';
            gl_conteudo := gl_conteudo || rec_d201.cod_st || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.vl_item, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.vl_bc_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.aliq_pis, '9990D9999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.vl_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_d201.cod_cta || '|';
            --
            vn_fase := 9;
            --
            pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D201',
                                      el_conteudo => gl_conteudo);
            --
            gn_qtde_reg_d201 := nvl(gn_qtde_reg_d201, 0) + 1;
            --
          end loop; -- c_d201
          --
          vn_fase := 10;
          --
          -- Monta Registro D205: Totalização do Resumo Diário - Cofins
          for rec_d205 in c_d205(en_empresa_id => en_empresa_id,
                                 en_nro_ct_ini => vt_tri_tab_d200(i)(j)(k).nro_ct_ini,
                                 en_nro_ct_fim => vt_tri_tab_d200(i)(j)(k).nro_ct_fim,
                                 ed_dt_emiss   => vt_tri_tab_d200(i)(j)(k).dt_emiss) loop
            exit when c_d205%notfound or(c_d205%notfound) is null;
            --
            vn_fase := 11;
            --
            -- Cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'D205' || '|';
            gl_conteudo := gl_conteudo || rec_d205.cod_st || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.vl_item, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.vl_bc_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.aliq_cofins, '9990D9999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.vl_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_d205.cod_cta || '|';
            --
            vn_fase := 12;
            --
            pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D205',
                                      el_conteudo => gl_conteudo);
            --
            gn_qtde_reg_d205 := nvl(gn_qtde_reg_d205, 0) + 1;
            --
          end loop; -- c_d205
          --
          vn_fase := 13;
          --
          -- Monta Registro D209: Processo Referenciado
          for rec_d209 in c_d209(en_empresa_id => en_empresa_id,
                                 en_nro_ct_ini => vt_tri_tab_d200(i)(j)(k).nro_ct_ini,
                                 en_nro_ct_fim => vt_tri_tab_d200(i)(j)(k).nro_ct_fim,
                                 ed_dt_emiss   => vt_tri_tab_d200(i)(j)(k).dt_emiss) loop
            exit when c_d209%notfound or(c_d209%notfound) is null;
            --
            vn_fase := 14;
            --
            -- Cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'D209' || '|';
            gl_conteudo := gl_conteudo || rec_d209.num_proc || '|';
            gl_conteudo := gl_conteudo || rec_d209.ind_proc || '|';
            --
            vn_fase := 15;
            --
            pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D209',
                                      el_conteudo => gl_conteudo);
            --
            gn_qtde_reg_d209 := nvl(gn_qtde_reg_d209, 0) + 1;
            --
          end loop; -- c_d209
          --
          if k = vt_tri_tab_d200(i)(j).last then
            exit;
          else
            k := vt_tri_tab_d200(i)(j).next(k);
          end if;
          --
          vn_fase := 16;
          --
        end loop; -- fim K
        --
      end if;
      --
      if j = vt_tri_tab_d200(i).last then
        exit;
      else
        j := vt_tri_tab_d200(i).next(j);
      end if;
      --
      vn_fase := 17;
      --
    end loop; -- fim J
    --
    if i = vt_tri_tab_d200.last then
      exit;
    else
      i := vt_tri_tab_d200.next(i);
    end if;
    --
    vn_fase := 18;
    --
  end loop; -- fim I
  --
  vn_fase := 19;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_D200 fase(' || vn_fase || ', EMPRESA: ' || en_empresa_id || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null; 
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_D200;*/

---------------------------------------------------------------------------------------------------------------------------------------------------------------
--| Monta o Registro D200 - Resumo da Escrituração Diária - Prestação de Serviços de Transporte: Nota Fiscal de Serviço de Transporte (Código 07), Conhecimento
--| de Transporte Rodoviário de Cargas (Código 08), Conhecimento de Transporte de Cargas Avulso (Código 8B), Conhecimento de Transporte Aquaviário de Cargas
--| (Código 09), Conhecimento de Transporte Aéreo (Código 10), Conhecimento de Transporte Ferroviário de Cargas (Código 11), Conhecimento de Transporte
--| Multimodal de Cargas (Código 26), Nota Fiscal de Transporte Ferroviário de Carga (Código 27), Conhecimento de Transporte Eletrônico - CT-E (Código 57),
--| Bilhete de Passagem Eletrônico - BP-e (Código 63) e Conhecimento de Transporte Eletrônico para Outros Serviços - CT-e OS, modelo 67.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_D200(EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
  --
  i number := 0;
  j number := 0;
  k number := 0;
  --
  vn_fase number := 0;
  vn_cfop cfop.cd%type;
  --
  vd_dt_ini       date;
  vn_prim_dia     number;
  vn_ult_dia      number;
  vn_nro_ct_first number(9) := 0;
  vn_qtde_d200    number := 0;
  --
  cursor c_d200 is
    select mf.cod_mod,
           sd.cd cod_sit,
           ct.serie,
           ct.subserie,
           c.cd cfop,
           ct.dt_hr_emissao dt_emiss,
           min(ct.nro_ct) nro_ct_ini,
           max(ct.nro_ct) nro_ct_fim,
           sum(nvl(cv.vl_docto_fiscal, 0)) vl_doc,
           sum(nvl(cv.vl_desc, 0)) vl_desc
      from tmp_conhec_transp     ct,
           ct_reg_anal           ra,
           mod_fiscal            mf,
           sit_docto             sd,
           conhec_transp_vlprest cv,
           cfop                  c
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
       and c.cd               = vn_cfop
       and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') = to_date(vd_dt_ini, 'dd/mm/rrrr')
       and ra.conhectransp_id = ct.id
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and sd.id              = ct.sitdocto_id
       and cv.conhectransp_id = ct.id
       and ra.cfop_id         = c.id
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- Verifica se a CFOP faz parte da receita: 0-Não, 1-Sim
       and exists (select 1
                     from ct_comp_doc_pis pis, 
                          cod_st cst
                    where pis.conhectransp_id = ct.id
                      and cst.id              = pis.codst_id
                     and cst.cod_st           not in ('70', '71', '72', '73', '74', '75')) -- Valores isentos de créditos
     group by mf.cod_mod,
              sd.cd,
              ct.serie,
              ct.subserie,
              c.cd,
              ct.dt_hr_emissao
     order by 6, 5, 7, 2;
  --
  cursor c_d201(en_empresa_id empresa.id%type,
                en_nro_ct_ini conhec_transp.nro_ct%type,
                en_nro_ct_fim conhec_transp.nro_ct%type,
                ed_dt_emiss   conhec_transp.dt_hr_emissao%type) is
    select cs.cod_st,
           nvl(cc.aliq_pis, 0) aliq_pis,
           pc.cod_cta,
           nvl(sum(nvl(cc.vl_item, 0)), 0) vl_item,
           nvl(sum(nvl(cc.vl_bc_pis, 0)), 0) vl_bc_pis,
           nvl(sum(nvl(cc.vl_pis, 0)), 0) vl_pis
      from tmp_conhec_transp ct,
           mod_fiscal        mf,
           ct_comp_doc_pis   cc,
           cod_st            cs,
           plano_conta       pc
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
       and ct.nro_ct between en_nro_ct_ini and en_nro_ct_fim
       and ct.dt_hr_emissao   = ed_dt_emiss
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and cc.conhectransp_id = ct.id
       and cs.id              = cc.codst_id
       and pc.id(+)           = cc.planoconta_id
     group by cs.cod_st, 
              cc.aliq_pis, 
              pc.cod_cta;
  --
  cursor c_d205(en_empresa_id empresa.id%type,
                en_nro_ct_ini conhec_transp.nro_ct%type,
                en_nro_ct_fim conhec_transp.nro_ct%type,
                ed_dt_emiss   conhec_transp.dt_hr_emissao%type) is
    select cs.cod_st,
           nvl(cc.aliq_cofins, 0) aliq_cofins,
           pc.cod_cta,
           nvl(sum(nvl(cc.vl_item, 0)), 0) vl_item,
           nvl(sum(nvl(cc.vl_bc_cofins, 0)), 0) vl_bc_cofins,
           nvl(sum(nvl(cc.vl_cofins, 0)), 0) vl_cofins
      from tmp_conhec_transp  ct,
           mod_fiscal         mf,
           ct_comp_doc_cofins cc,
           cod_st             cs,
           plano_conta        pc
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
       and ct.nro_ct between en_nro_ct_ini and en_nro_ct_fim
       and ct.dt_hr_emissao   = ed_dt_emiss
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and cc.conhectransp_id = ct.id
       and cs.id              = cc.codst_id
       and pc.id(+)           = cc.planoconta_id
     group by cs.cod_st, 
              cc.aliq_cofins, 
              pc.cod_cta;
  --
  cursor c_d209(en_empresa_id empresa.id%type,
                en_nro_ct_ini conhec_transp.nro_ct%type,
                en_nro_ct_fim conhec_transp.nro_ct%type,
                ed_dt_emiss   conhec_transp.dt_hr_emissao%type) is
    select cp.num_proc, op.cd ind_proc
      from tmp_conhec_transp ct,
           mod_fiscal        mf,
           ct_proc_ref       cp,
           orig_proc         op
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
       and ct.nro_ct between en_nro_ct_ini and en_nro_ct_fim
       and ct.dt_hr_emissao   = ed_dt_emiss
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and cp.conhectransp_id = ct.id
       and op.id              = cp.origproc_id;
  --
BEGIN
  --
  vn_fase := 1;
  --
  vd_dt_ini   := gt_row_abertura_efd_pc.dt_ini;
  vn_prim_dia := to_number(to_char(gt_row_abertura_efd_pc.dt_ini, 'dd'));
  vn_ult_dia  := to_number(to_char(gt_row_abertura_efd_pc.dt_fin, 'dd'));
  --
  -- Loop da data
  for y in vn_prim_dia .. vn_ult_dia loop
    --
    -- Inicio loop cfop/empresa
    for x in (select distinct c.cd cfop
                from tmp_conhec_transp     ct,
                     ct_reg_anal           ra,
                     mod_fiscal            mf,
                     sit_docto             sd,
                     conhec_transp_vlprest cv,
                     cfop                  c
               where ct.empresa_id      = en_empresa_id
                 and ct.dm_st_proc      = 4 -- Autorizado
                 and ct.dm_arm_cte_terc = 0 -- 0-Não, 1-Sim
                 and ct.dm_ind_emit     = 0 -- 0-Emissão Própria, 1-Terceiro
                 and ct.dm_ind_oper     = 1 -- 0-Entrada, 1-Saída
                 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') = to_date(vd_dt_ini, 'dd/mm/rrrr')
                 and ra.conhectransp_id = ct.id
                 and mf.id              = ct.modfiscal_id
                 and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
                 and sd.id              = ct.sitdocto_id
                 and cv.conhectransp_id = ct.id
                 and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
                 and ra.cfop_id         = c.id
                 and exists (select 1
                               from ct_comp_doc_pis pis, 
                                    cod_st cst
                              where pis.conhectransp_id = ct.id
                                and cst.id              = pis.codst_id
                                and cst.cod_st          not in ('70', '71', '72', '73', '74', '75')) -- Valores isentos de créditos
              ) loop
      --
      vn_cfop := x.cfop;
      --
      vn_fase := 2;
      --
      -- Monta Registro D200: Resumo da Escrituração Diária - Prestação de Serviços de Transporte
      for rec_d200 in c_d200 loop
        exit when c_d200%notfound is null or(c_d200%notfound) is null;
        --
        vn_fase := 3;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'D200' || '|';
        gl_conteudo := gl_conteudo || rec_d200.cod_mod || '|';
        gl_conteudo := gl_conteudo || rec_d200.cod_sit || '|';
        gl_conteudo := gl_conteudo || rec_d200.serie || '|';
        gl_conteudo := gl_conteudo || rec_d200.subserie || '|';
        gl_conteudo := gl_conteudo || rec_d200.nro_ct_ini || '|';
        gl_conteudo := gl_conteudo || rec_d200.nro_ct_fim || '|';
        gl_conteudo := gl_conteudo || rec_d200.cfop || '|';
        gl_conteudo := gl_conteudo || to_char(rec_d200.dt_emiss, 'ddmmrrrr') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_d200.vl_doc, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_d200.vl_desc, '9999999999990D99') || '|';
        --
        vn_fase := 4;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D200',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_d200 := nvl(gn_qtde_reg_d200, 0) + 1;
        --
        vn_fase := 5;
        --
        -- Monta Registro D201: Totalização do Resumo Diário - PIS/Pasep
        for rec_d201 in c_d201(en_empresa_id => en_empresa_id,
                               en_nro_ct_ini => rec_d200.nro_ct_ini,
                               en_nro_ct_fim => rec_d200.nro_ct_fim,
                               ed_dt_emiss   => rec_d200.dt_emiss) loop
          exit when c_d201%notfound or(c_d201%notfound) is null;
          --
          vn_fase := 6;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'D201' || '|';
          gl_conteudo := gl_conteudo || rec_d201.cod_st || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.vl_item, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.vl_bc_pis, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.aliq_pis, '9990D9999') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d201.vl_pis, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || rec_d201.cod_cta || '|';
          --
          vn_fase := 7;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D201',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_d201 := nvl(gn_qtde_reg_d201, 0) + 1;
          --
        end loop; -- c_d201
        --
        vn_fase := 8;
        --
        -- Monta Registro D205: Totalização do Resumo Diário - Cofins
        for rec_d205 in c_d205(en_empresa_id => en_empresa_id,
                               en_nro_ct_ini => rec_d200.nro_ct_ini,
                               en_nro_ct_fim => rec_d200.nro_ct_fim,
                               ed_dt_emiss   => rec_d200.dt_emiss) loop
          exit when c_d205%notfound or(c_d205%notfound) is null;
          --
          vn_fase := 9;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'D205' || '|';
          gl_conteudo := gl_conteudo || rec_d205.cod_st || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.vl_item, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.vl_bc_cofins, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.aliq_cofins, '9990D9999') || '|';
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_d205.vl_cofins, '9999999999990D99') || '|';
          gl_conteudo := gl_conteudo || rec_d205.cod_cta || '|';
          --
          vn_fase := 10;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D205',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_d205 := nvl(gn_qtde_reg_d205, 0) + 1;
          --
        end loop; -- c_d205
        --
        vn_fase := 11;
        --
        -- Monta Registro D209: Processo Referenciado
        for rec_d209 in c_d209(en_empresa_id => en_empresa_id,
                               en_nro_ct_ini => rec_d200.nro_ct_ini,
                               en_nro_ct_fim => rec_d200.nro_ct_fim,
                               ed_dt_emiss   => rec_d200.dt_emiss) loop
          exit when c_d209%notfound or(c_d209%notfound) is null;
          --
          vn_fase := 12;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'D209' || '|';
          gl_conteudo := gl_conteudo || rec_d209.num_proc || '|';
          gl_conteudo := gl_conteudo || rec_d209.ind_proc || '|';
          --
          vn_fase := 13;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D209',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_d209 := nvl(gn_qtde_reg_d209, 0) + 1;
          --
        end loop; -- c_d209
      --
      end loop; -- c_d200
    --
    end loop; -- fim loop por cfop/empresa
    --
    vn_fase := 14;
    --
    vd_dt_ini := to_date(vd_dt_ini + 1);
    --
  end loop; --fim do loop da data
  --
  vn_fase := 15;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_D200 fase(' || vn_fase || ', EMPRESA: ' || en_empresa_id || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_D200;

---------------------------------------------------------------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO D100: NOTA FISCAL DE SERVIÇO DE TRANSPORTE (CÓDIGO 07) E CONHECIMENTOS DE TRANSPORTE RODOVIÁRIO DE CARGAS (CÓDIGO 08),
--| CONHECIMENTOS DE TRANSPORTE DE CARGAS AVULSO (CÓDIGO 8B), AQUAVIÁRIO DE CARGAS (CÓDIGO 09), AÉREO (CÓDIGO 10), FERROVIÁRIO DE CARGAS (CÓDIGO 11)
--| E MULTIMODAL DE CARGAS (CÓDIGO 26), NOTA FISCAL DE TRANSPORTE FERROVIÁRIO DE CARGA ( CÓDIGO 27) E CONHECIMENTO DE TRANSPORTE ELETRÔNICO - CT-e (CÓDIGO 57)
---------------------------------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_D100(EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
  --
  vn_fase number := 0;
  --
  vb_achou      boolean := false;
  vv_indice     varchar2(20);
  vn_nro_ini    inutiliza_conhec_transp.nro_ini%type;
  vtv_nro_ini   dbms_sql.varchar2_table;
  vtv_serie     dbms_sql.varchar2_table;
  vtv_modfiscal dbms_sql.varchar2_table;
  --
  cursor c_ct_inut is
    select mf.cod_mod, 
           ic.serie, 
           ic.nro_ini, 
           ic.nro_fim
      from inutiliza_conhec_transp ic, 
           mod_fiscal mf
     where ic.empresa_id  = en_empresa_id
       and ic.dm_situacao = 2 -- Concluído (Envio e Retorno a SEFAZ com sucesso)
       and ic.dt_inut between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and mf.id          = ic.modfiscal_id
       and not exists (select ct.id
                         from tmp_conhec_transp ct
                        where ct.inutilizaconhectransp_id = ic.id)
     order by ic.nro_ini;
  --
  cursor c_d101(en_conhectransp_id conhec_transp.id%type) is
    select pis.conhectransp_id,
           pis.dm_ind_nat_frt,
           pis.codst_id,
           cst.cod_st,
           pis.basecalccredpc_id,
           bcc.cd nat_bc_cred,
           pis.aliq_pis,
           pis.planoconta_id,
           pc.cod_cta,
           nvl(sum(nvl(pis.vl_item, 0)), 0) vl_item,
           nvl(sum(nvl(pis.vl_bc_pis, 0)), 0) vl_bc_pis,
           nvl(sum(nvl(pis.vl_pis, 0)), 0) vl_pis
      from ct_comp_doc_pis   pis,
           cod_st            cst,
           base_calc_cred_pc bcc,
           plano_conta       pc
     where pis.conhectransp_id = en_conhectransp_id
       and cst.id              = pis.codst_id
       and bcc.id(+)           = pis.basecalccredpc_id
       and pc.id(+)            = pis.planoconta_id
     group by pis.conhectransp_id,
              pis.dm_ind_nat_frt,
              pis.codst_id,
              cst.cod_st,
              pis.basecalccredpc_id,
              bcc.cd,
              pis.aliq_pis,
              pis.planoconta_id,
              pc.cod_cta;
  --
  cursor c_d105(en_conhectransp_id conhec_transp.id%type) is
    select cof.conhectransp_id,
           cof.dm_ind_nat_frt,
           cof.codst_id,
           cst.cod_st,
           cof.basecalccredpc_id,
           bcc.cd nat_bc_cred,
           cof.aliq_cofins,
           cof.planoconta_id,
           pc.cod_cta,
           nvl(sum(nvl(cof.vl_item, 0)), 0) vl_item,
           nvl(sum(nvl(cof.vl_bc_cofins, 0)), 0) vl_bc_cofins,
           nvl(sum(nvl(cof.vl_cofins, 0)), 0) vl_cofins
      from ct_comp_doc_cofins cof,
           cod_st             cst,
           base_calc_cred_pc  bcc,
           plano_conta        pc
     where cof.conhectransp_id = en_conhectransp_id
       and cst.id              = cof.codst_id
       and bcc.id(+)           = cof.basecalccredpc_id
       and pc.id(+)            = cof.planoconta_id
     group by cof.conhectransp_id,
              cof.dm_ind_nat_frt,
              cof.codst_id,
              cst.cod_st,
              cof.basecalccredpc_id,
              bcc.cd,
              cof.aliq_cofins,
              cof.planoconta_id,
              pc.cod_cta;
  --
  cursor c_d111(en_conhectransp_id conhec_transp.id%type) is
    select p.id, 
           p.num_proc, 
           op.cd ind_proc
      from ct_proc_ref p, 
           orig_proc op
     where p.conhectransp_id = en_conhectransp_id
       and op.id = p.origproc_id;
  --
BEGIN
  --
  vn_fase := 1;
  --
  vtv_nro_ini.delete;
  vtv_serie.delete;
  vtv_modfiscal.delete;
  --
  for rec_d100_inut in c_ct_inut loop
    --
    exit when c_ct_inut%notfound or(c_ct_inut%notfound) is null;
    --
    vn_fase := 1.1;
    --
    vn_nro_ini := rec_d100_inut.nro_ini;
    --
    loop
      --
      vn_fase := 1.2;
      --
      vv_indice := vn_nro_ini || trim(rec_d100_inut.serie) || trim(rec_d100_inut.cod_mod);
      --
      begin
        vb_achou := vtv_nro_ini.exists(vv_indice);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 1.3;
      --
      if not vb_achou then
        --
        vn_fase := 1.4;
        --
        vtv_nro_ini(vv_indice)   := vn_nro_ini;
        vtv_serie(vv_indice)     := rec_d100_inut.serie;
        vtv_modfiscal(vv_indice) := rec_d100_inut.cod_mod;
        --
      end if;
      --
      vn_fase := 1.5;
      --
      if vn_nro_ini = rec_d100_inut.nro_fim then
        exit;
      else
        vn_nro_ini := vn_nro_ini + 1;
      end if;
      --
    end loop; -- vn_nro_ini .. rec_d100_inut.nro_fim
  --
  end loop; -- c_nf_inut
  --
  vn_fase := 1.6;
  --
  vv_indice := vtv_nro_ini.first;
  --
  while vv_indice is not null loop
    --
    vn_fase := 1.7;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'D100' || '|';
    gl_conteudo := gl_conteudo || '1' || '|'; -- dm_ind_oper -- saída
    gl_conteudo := gl_conteudo || '0' || '|'; -- dm_ind_emit -- emissão própria
    gl_conteudo := gl_conteudo || '|'; -- cod_part
    gl_conteudo := gl_conteudo || vtv_modfiscal(vv_indice) || '|'; -- cod_mod
    gl_conteudo := gl_conteudo || '05' || '|'; -- cod_sit
    gl_conteudo := gl_conteudo || vtv_serie(vv_indice) || '|'; -- ser
    gl_conteudo := gl_conteudo || '|'; -- sub
    gl_conteudo := gl_conteudo || vtv_nro_ini(vv_indice) || '|'; -- num_doc
    gl_conteudo := gl_conteudo || '|'; -- chv_cte
    gl_conteudo := gl_conteudo || '|'; -- dt_doc
    gl_conteudo := gl_conteudo || '|'; -- dt_a_p
    gl_conteudo := gl_conteudo || '|'; -- tp_cte
    gl_conteudo := gl_conteudo || '|'; -- chv_cte_ref
    gl_conteudo := gl_conteudo || '|'; -- vl_doc
    gl_conteudo := gl_conteudo || '|'; -- vl_desc
    gl_conteudo := gl_conteudo || '|'; -- ind_frt
    gl_conteudo := gl_conteudo || '|'; -- vl_serv
    gl_conteudo := gl_conteudo || '|'; -- vl_bc_icms
    gl_conteudo := gl_conteudo || '|'; -- vl_icms
    gl_conteudo := gl_conteudo || '|'; -- vl_nt
    gl_conteudo := gl_conteudo || '|'; -- inforcompdctofiscal_id
    gl_conteudo := gl_conteudo || '|'; -- cod_cta
    --
    vn_fase := 1.8;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D100',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_d100 := nvl(gn_qtde_reg_d100, 0) + 1;
    --
    vv_indice := vtv_nro_ini.next(vv_indice);
    --
  end loop;
  --
  vn_fase := 2;
  --
  for rec_d100 in c_d100(en_empresa_id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin,
                         gn_dm_dt_escr_dfepoe) loop
    exit when c_d100%notfound or(c_d100%notfound) is null;
    --
    vn_fase := 2.1;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'D100' || '|';
    gl_conteudo := gl_conteudo || rec_d100.ind_oper || '|';
    gl_conteudo := gl_conteudo || rec_d100.ind_emit || '|';
    --gl_conteudo := gl_conteudo || trim( pk_csf.fkg_pessoa_cod_part (rec_d100.pessoa_id) ) || '|';
    gl_conteudo := gl_conteudo || trim(pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part(en_pessoa_id          => rec_d100.pessoa_id,
                                                                                    en_tipo_retorna       => 1, -- 0-Pessoa_id / 1-Cod_Part
                                                                                    en_origem_dado_pessoa => 0)) || '|';
    gl_conteudo := gl_conteudo || rec_d100.cod_mod || '|';
    gl_conteudo := gl_conteudo || rec_d100.cod_sit || '|';
    gl_conteudo := gl_conteudo || rec_d100.ser || '|';
    gl_conteudo := gl_conteudo || rec_d100.sub || '|';
    gl_conteudo := gl_conteudo || rec_d100.num_doc || '|';
    gl_conteudo := gl_conteudo || rec_d100.chv_cte || '|';
    gl_conteudo := gl_conteudo || to_char(rec_d100.dt_doc, 'ddmmrrrr') || '|';
    gl_conteudo := gl_conteudo || to_char(rec_d100.dt_a_p, 'ddmmrrrr') || '|';
    gl_conteudo := gl_conteudo || rec_d100.tp_cte || '|';
    gl_conteudo := gl_conteudo || rec_d100.chv_cte_ref || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d100.vl_doc, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d100.vl_desc, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || nvl(rec_d100.ind_frt, 9) || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d100.vl_serv, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d100.vl_bc_icms, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d100.vl_icms, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_d100.vl_nt, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || pk_csf.fkg_infor_comp_dcto_fiscal_cod(rec_d100.inforcompdctofiscal_id) || '|';
    gl_conteudo := gl_conteudo || rec_d100.cod_cta || '|';
    --
    vn_fase := 2.2;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D100',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_d100 := nvl(gn_qtde_reg_d100, 0) + 1;
    --
    vn_fase := 2.3;
    --
    -- Monta REGISTRO D101: COMPLEMENTO DO DOCUMENTO DE TRANSPORTE
    for rec_d101 in c_d101(rec_d100.conhectransp_id) loop
      exit when c_d101%notfound or(c_d101%notfound) is null;
      --
      vn_fase := 2.4;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'D101' || '|';
      gl_conteudo := gl_conteudo || rec_d101.dm_ind_nat_frt || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d101.vl_item, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d101.cod_st || '|';
      gl_conteudo := gl_conteudo || rec_d101.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d101.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d101.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d101.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d101.cod_cta || '|';
      --
      vn_fase := 2.5;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D101',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_d101 := nvl(gn_qtde_reg_d101, 0) + 1;
      --
    end loop; -- c_d101
    --
    vn_fase := 2.6;
    --
    -- Monta REGISTRO D105: COMPLEMENTO DO DOCUMENTO DE TRANSPORTE Cofins
    for rec_d105 in c_d105(rec_d100.conhectransp_id) loop
      exit when c_d105%notfound or(c_d105%notfound) is null;
      --
      vn_fase := 2.7;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'D105' || '|';
      gl_conteudo := gl_conteudo || rec_d105.dm_ind_nat_frt || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d105.vl_item, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d105.cod_st || '|';
      gl_conteudo := gl_conteudo || rec_d105.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d105.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d105.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_d105.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_d105.cod_cta || '|';
      --
      vn_fase := 2.8;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D105',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_d105 := nvl(gn_qtde_reg_d105, 0) + 1;
      --
    end loop; -- c_d105
    --
    vn_fase := 2.9;
    --
    -- Monta REGISTRO D111: PROCESSO REFERENCIADO
    for rec_d111 in c_d111(rec_d100.conhectransp_id) loop
      exit when c_d111%notfound or(c_d111%notfound) is null;
      --
      vn_fase := 2.10;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'D111' || '|';
      gl_conteudo := gl_conteudo || rec_d111.num_proc || '|';
      gl_conteudo := gl_conteudo || rec_d111.ind_proc || '|';
      --
      vn_fase := 2.11;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D111',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_d111 := nvl(gn_qtde_reg_d111, 0) + 1;
      --
    end loop; -- c_d111
  --
  end loop; -- c_d100
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_D100 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_D100;
------------------------------------------------------------
--| Monta o REGISTRO D010: IDENTIFICAÇÃO DO ESTABELECIMENTO
------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_D010 ( EN_EMPRESA_ID  IN  EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'D010' || '|';
   gl_conteudo := gl_conteudo || trim( pk_csf.fkg_cnpj_ou_cpf_empresa( en_empresa_id => en_empresa_id ) ) || '|';
   --
   vn_fase := 2;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'D010'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_d010 := nvl(gn_qtde_reg_d010,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_d010 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_D010;
-----------------------------------------------
--| Monta o REGISTRO D001: ABERTURA DO BLOCO D
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_D001 IS
  --
  vn_qtde_d100_inut number := 0;
  vn_qtde_d100      number := 0;
  vn_qtde_d200      number := 0;
  vn_qtde_d500      number := 0;
  vn_qtde_d600      number := 0;
  --
BEGIN
  --
  begin
    select count(1)
      into vn_qtde_d100_inut
      from r_empresa_abertura_efd_pc r, 
           inutiliza_conhec_transp ic
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ic.empresa_id      = r.empresa_id
       and ic.dm_situacao     = 2 -- Concluído (Envio e Retorno a SEFAZ com sucesso)
       and ic.dt_inut between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and not exists (select ct.id
                         from tmp_conhec_transp ct
                        where ct.inutilizaconhectransp_id = ic.id);
  exception
    when others then
      vn_qtde_d100_inut := 0;
  end;
  --
  begin
    select count(1)
      into vn_qtde_d100
      from r_empresa_abertura_efd_pc r,
           tmp_conhec_transp         ct,
           tmp_ct_reg_anal           ra,
           mod_fiscal                mf
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ct.empresa_id      = r.empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0
       and ct.dm_ind_oper     = 0 -- 0 - Entrada, 1 - Saída
       and ((ct.dm_ind_emit = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id = ct.modfiscal_id
       and ra.conhectransp_id = ct.id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- Verifica se a CFOP faz parte da receita: 0 - Não, 1 - Sim         
       and exists (select 1
                     from ct_comp_doc_pis pis, 
                          cod_st cst
                    where pis.conhectransp_id = ct.id
                      and cst.id              = pis.codst_id
                      and cst.cod_st not in ('70', '71', '72', '73', '74', '75')); -- Valores isentos de créditos
  exception
    when others then
      vn_qtde_d100 := 0;
  end;
  --
  begin
    select count(1)
      into vn_qtde_d200
      from r_empresa_abertura_efd_pc r,
           tmp_conhec_transp         ct,
           tmp_ct_reg_anal           ra,
           mod_fiscal                mf
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ct.empresa_id      = r.empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0 - Não, 1 - Sim
       and ct.dm_ind_emit     = 0 -- 0 - Emissão Própria, 1 - Terceiro
       and ct.dm_ind_oper     = 1 -- 0 - Entrada, 1 - Saída
       and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and ra.conhectransp_id = ct.id
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- Verifica se a CFOP faz parte da receita: 0 - Não, 1 - Sim         
       and exists (select 1
                     from ct_comp_doc_pis pis, 
                          cod_st cst
                    where pis.conhectransp_id = ct.id
                      and cst.id              = pis.codst_id
                      and cst.cod_st not in ('70', '71', '72', '73', '74', '75')); -- Valores isentos de créditos
  exception
    when others then
      vn_qtde_d200 := 0;
  end;
  --
  begin
    select count(1)
      into vn_qtde_d500
      from r_empresa_abertura_efd_pc r,
           empresa                   em,
           tmp_nota_fiscal           nf,
           mod_fiscal                mf,
           tmp_item_nota_fiscal      inf,
           tmp_imp_itemnf            imp,
           tipo_imposto              ti
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and em.id              = r.empresa_id
       and nf.empresa_id      = em.id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id                = nf.modfiscal_id
       and mf.cod_mod           in ('21', '22')
       and inf.notafiscal_id(+) = nf.id
       and imp.itemnf_id(+)     = inf.id
       and ti.id(+)             = imp.tipoimp_id
       and ti.cd(+)             = 4 -- Considerar somente o imposto PIS
       -- and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
       and exists (select 1
                     from nf_compl_oper_pis pis, 
                          cod_st cst
                    where pis.notafiscal_id = nf.id
                     and cst.id             = pis.codst_id
                     and cst.cod_st not in ('70', '71', '72', '73', '74', '75')); -- Valores isentos de créditos
  exception
    when others then
      vn_qtde_d500 := 0;
  end;
  --
  begin
    select count(1)
      into vn_qtde_d600
      from r_empresa_abertura_efd_pc r,
           empresa                   em,
           tmp_nota_fiscal           nf,
           mod_fiscal                mf,
           tmp_nota_fiscal_total     t,
           tmp_item_nota_fiscal      inf,
           tmp_imp_itemnf            imp,
           tipo_imposto              ti
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and em.id              = r.empresa_id
       and nf.empresa_id      = em.id
       and nf.dm_st_proc      = 4 -- 4 - Autorizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and nf.dm_ind_oper     = 1 -- 0 - Entrada, 1 - Saída
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id             = nf.modfiscal_id
       and mf.cod_mod        in ('21', '22')
       and t.notafiscal_id   = nf.id
       and inf.notafiscal_id = nf.id
       and imp.itemnf_id     = inf.id
       and ti.id             = imp.tipoimp_id
       and ti.cd             = 4 -- Considerar somente o imposto PIS
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
       and exists (select 1
                     from tmp_item_nota_fiscal it,
                          tmp_imp_itemnf       ii,
                          tipo_imposto         ti,
                          cod_st               cst
                    where it.notafiscal_id = nf.id
                      and ii.itemnf_id     = it.id
                      and ii.dm_tipo       = 0 -- 0 - Imposto, 1 - Retenção
                      and ti.id            = ii.tipoimp_id
                      and ti.cd            = 4 -- PIS
                      and cst.id           = ii.codst_id
                      and cst.cod_st not in ('70', '71', '72', '73', '74', '75') -- Valores isentos de créditos
                      and nvl(it.classconsitemcont_id, 0) > 0);
  exception
    when others then
      vn_qtde_d600 := 0;
  end;
  --
  -- Cria a estrutura do registro separado por PIPE "|"
  gl_conteudo := '|';
  --
  gl_conteudo := gl_conteudo || 'D001' || '|';
  --
  if nvl(vn_qtde_d100_inut, 0) > 0 or nvl(vn_qtde_d100, 0) > 0 or
     nvl(vn_qtde_d200, 0) > 0 or nvl(vn_qtde_d500, 0) > 0 or
     nvl(vn_qtde_d600, 0) > 0 then
    gl_conteudo := gl_conteudo || 0 || '|';
  else
    gl_conteudo := gl_conteudo || 1 || '|';
  end if;
  --
  pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'D001',
                            el_conteudo => gl_conteudo);
  --
  gn_qtde_reg_d001 := 1;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_D001: ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_D001;
-------------------------------------------------------------------------------------
--| Procedimento monta registros do BLOCO D: DOCUMENTOS FISCAIS II - SERVIÇOS (ICMS)
-------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_D IS
  --
  vn_fase           number := 0;
  vn_empresa_id_old empresa.id%type;
  vn_empresa_id_new empresa.id%type;
  vn_qtde           number := 0;
  --
  cursor c_emp is
    select r.empresa_id
      from r_empresa_abertura_efd_pc r
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
     order by 1;
  --
  cursor c_qtde_d100_inut(en_empresa_id in number) is
    select count(1)
      from inutiliza_conhec_transp ic
     where ic.empresa_id  = en_empresa_id
       and ic.dm_situacao = 2 -- Concluído (Envio e Retorno a SEFAZ com sucesso)
       and ic.dt_inut between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and not exists (select ct.id
                         from tmp_conhec_transp ct
                        where ct.inutilizaconhectransp_id = ic.id);
  --
  cursor c_qtde_d100(en_empresa_id in number) is
    select count(1)
      from tmp_conhec_transp ct,
           ct_reg_anal ra,
           mod_fiscal mf,
           sit_docto sd,
           tmp_conhec_transp_vlprest v,
           (select i.conhectransp_id,
                   i.vl_base_calc,
                   i.vl_imp_trib,
                   st.cod_st
              from conhec_transp_imp i,  
                   cod_st st, 
                   tipo_imposto ti
             where st.id = i.codst_id
               and ti.id = i.tipoimp_id
               and ti.cd = 1) imp -- ICMS
     where ct.empresa_id          = en_empresa_id
       and ct.dm_st_proc          = 4 -- Autorizado
       and ct.dm_arm_cte_terc     = 0
       and ct.dm_ind_oper         = 0 -- 0 - Entrada, 1 - Saída
       and ((ct.dm_ind_emit = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and ra.conhectransp_id     = ct.id
       and mf.id                  = ct.modfiscal_id
       and mf.cod_mod in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and sd.id                  = ct.sitdocto_id
       and v.conhectransp_id      = ct.id
       and imp.conhectransp_id(+) = ct.id
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- Verifica se a CFOP escritura: 0 - Não, 1 - Sim    
       and exists (select 1
                     from ct_comp_doc_pis pis, cod_st cst
                    where pis.conhectransp_id = ct.id
                      and cst.id              = pis.codst_id
                      and cst.cod_st not in ('70', '71', '72', '73', '74', '75')); -- Valores isentos de créditos
  --
  cursor c_qtde_d200(en_empresa_id in number) is
    select count(1)
      from tmp_conhec_transp         ct,
           ct_reg_anal               ra,
           mod_fiscal                mf,
           sit_docto                 sd,
           tmp_conhec_transp_vlprest cv
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0 -- 0 - Não, 1 - Sim
       and ct.dm_ind_emit     = 0 -- 0 - Emissão Própria, 1 - Terceiro
       and ct.dm_ind_oper     = 1 -- 0 - Entrada, 1 - Saída
       and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and ra.conhectransp_id = ct.id
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and sd.id              = ct.sitdocto_id
       and cv.conhectransp_id = ct.id
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(ct.empresa_id, ra.cfop_id, ra.codst_id, null) = 1 -- Verifica se a CFOP escritura: 0 - Não, 1 - Sim   
       and exists (select 1
                     from ct_comp_doc_pis pis, 
                          cod_st cst
                    where pis.conhectransp_id = ct.id
                      and cst.id              = pis.codst_id
                      and cst.cod_st not in ('70', '71', '72', '73', '74', '75')); -- Valores isentos de créditos
  --
  cursor c_qtde_d500(en_empresa_id in number) is
    select count(1)
      from tmp_nota_fiscal        nf,
           item_nota_fiscal       it,
           imp_itemnf             imp,
           mod_fiscal             mf,
           sit_docto              sd,
           tmp_nota_fiscal_total  t,
           infor_comp_dcto_fiscal inf
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and nf.dm_ind_oper     = 0 -- 0 - Entrada, 1 - Saída  
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and it.notafiscal_id(+) = nf.id
       and imp.itemnf_id(+)    = it.id
       and mf.id               = nf.modfiscal_id
       and mf.cod_mod          in ('21', '22')
       and sd.id               = nf.sitdocto_id
       and t.notafiscal_id     = nf.id
       and inf.id(+)           = nf.inforcompdctofiscal_id
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, it.cfop_id, imp.codst_id, null) = 1 -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim    
       and exists (select 1
                     from nf_compl_oper_pis pis, 
                          cod_st cst
                    where pis.notafiscal_id = nf.id
                      and cst.id            = pis.codst_id
                      and cst.cod_st not in ('70', '71', '72', '73', '74', '75')); -- valores isentos de créditos
  --
  cursor c_qtde_d600(en_empresa_id in number) is
    select count(1)
      from tmp_nota_fiscal       nf,
           item_nota_fiscal      it,
           imp_itemnf            imp,
           mod_fiscal            mf,
           tmp_nota_fiscal_total t
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      = 4 -- 4 - Autorizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and nf.dm_ind_oper     = 1 -- 0 - Entrada, 1 - Saída
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and it.notafiscal_id   = nf.id
       and imp.itemnf_id      = it.id
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('21', '22')
       and t.notafiscal_id    = nf.id
       and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, it.cfop_id, imp.codst_id, null) = 1 -- Verifica se a CFOP faz parte da escrituração: 0-Não, 1-Sim        
       and exists (select 1
                     from tmp_item_nota_fiscal it,
                          TMP_imp_itemnf       ii,
                          tipo_imposto         ti,
                          cod_st               cst
                    where it.notafiscal_id = nf.id
                      and ii.itemnf_id     = it.id
                      and ii.dm_tipo       = 0 -- 0 - Imposto, 1 - Retenção
                      and ti.id            = ii.tipoimp_id
                      and ti.cd            = 4 -- PIS
                      and cst.id           = ii.codst_id
                      and cst.cod_st not in ('70', '71', '72', '73', '74', '75')); -- Valores isentos de créditos
  --
BEGIN
  --
  vn_fase := 1;
  --
  -- monta o REGISTRO D001: ABERTURA DO BLOCO D
  pkb_monta_reg_D001;
  --
  vn_fase := 2;
  --
  -- REGISTRO D010: IDENTIFICAÇÃO DO ESTABELECIMENTO - Informado se existir movimento para a empresa
  vn_empresa_id_old := 0;
  --
  for rec in c_emp loop
    exit when c_emp%notfound or(c_emp%notfound) is null;
    --
    vn_fase := 3;
    --
    -- Armazena registro de empresa
    vn_empresa_id_new := rec.empresa_id;
    --
    gn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa(en_empresa_id => rec.empresa_id);
    --
    vn_fase := 4;
    --
    open c_qtde_d100_inut(en_empresa_id => rec.empresa_id);
    fetch c_qtde_d100_inut
      into vn_qtde;
    close c_qtde_d100_inut;
    --
    if nvl(vn_qtde, 0) = 0 then
      --
      vn_fase := 5;
      open c_qtde_d100(en_empresa_id => rec.empresa_id);
      fetch c_qtde_d100
        into vn_qtde;
      close c_qtde_d100;
      --
      if nvl(vn_qtde, 0) = 0 then
        --
        vn_fase := 6;
        open c_qtde_d200(en_empresa_id => rec.empresa_id);
        fetch c_qtde_d200
          into vn_qtde;
        close c_qtde_d200;
        --
        if nvl(vn_qtde, 0) = 0 then
          --
          vn_fase := 7;
          open c_qtde_d500(en_empresa_id => rec.empresa_id);
          fetch c_qtde_d500
            into vn_qtde;
          close c_qtde_d500;
          --
          if nvl(vn_qtde, 0) = 0 then
            --
            vn_fase := 8;
            open c_qtde_d600(en_empresa_id => rec.empresa_id);
            fetch c_qtde_d600
              into vn_qtde;
            close c_qtde_d600;
            --
          end if;
          --
        end if;
        --
      end if;
      --
    end if;
    --
    vn_fase := 9;
    --
    if nvl(vn_qtde, 0) > 0 then
      --
      vn_fase := 10;
      --
      -- Se a empresa new é deferente de empresa old
      if vn_empresa_id_new <> vn_empresa_id_old then
        --
        vn_fase := 11;
        --
        -- Registra empresa no D010
        pkb_monta_reg_d010(en_empresa_id => rec.empresa_id);
        --
        vn_empresa_id_old := vn_empresa_id_new;
        --
      end if;
      --
      vn_fase := 12;
      --
      -- Monta o REGISTRO D100: NOTA FISCAL DE SERVIÇO DE TRANSPORTE (CÓDIGO
      -- 07) E CONHECIMENTOS DE TRANSPORTE RODOVIÁRIO DE CARGAS (CÓDIGO 08), CONHECIMENTOS DE TRANSPORTE DE CARGAS AVULSO
      -- (CÓDIGO 8B), AQUAVIÁRIO DE CARGAS (CÓDIGO 09), AÉREO (CÓDIGO 10), FERROVIÁRIO DE CARGAS (CÓDIGO 11) E MULTIMODAL DE
      -- CARGAS (CÓDIGO 26), NOTA FISCAL DE TRANSPORTE FERROVIÁRIO DE CARGA ( CÓDIGO 27) E CONHECIMENTO DE TRANSPORTE ELETRÔNICO - CT-e (CÓDIGO 57).
      pkb_monta_reg_D100(en_empresa_id => rec.empresa_id);
      --
      vn_fase := 13;
      --
      -- monta o REGISTRO D200: RESUMO DA ESCRITURAÇÃO DIÁRIA - PRESTAÇÃO DE SERVIÇOS DE TRANSPORTE: Nota Fiscal de Serviço de Transporte (Código 07),
      -- Conhecimento de Transporte Rodoviário de Cargas (Código 08), Conhecimento de Transporte de Cargas Avulso (Código 8B), Conhecimento de Transporte
      -- Aquaviário de Cargas (Código 09), Conhecimento de Transporte Aéreo (Código 10), Conhecimento de Transporte Ferroviário de Cargas (Código 11),
      -- Conhecimento de Transporte Multimodal de Cargas (Código 26), Nota Fiscal de Transporte Ferroviário de Carga (Código 27), Conhecimento de Transporte
      -- Eletrônico - CT-E (Código 57), Bilhete de Passagem Eletrônico - BP-e (Código 63) e Conhecimento de Transporte Eletrônico para Outros Serviços ¿
      -- CT-e OS, modelo 67.
      pkb_monta_reg_D200(en_empresa_id => rec.empresa_id);
      --
      vn_fase := 14;
      --
      -- monta o REGISTRO D300: REGISTRO ANALÍTICO DOS BILHETES CONSOLIDADOS DE PASSAGEM RODOVIÁRIO (CÓDIGO 13),
      -- DE PASSAGEM AQUAVIÁRIO (CÓDIGO 14), DE PASSAGEM E NOTA DE BAGAGEM (CÓDIGO 15) E DE PASSAGEM FERROVIÁRIO (CÓDIGO 16).
      -- não será feito o resumo
      --
      vn_fase := 15;
      --
      -- monta o REGISTRO D350 EQUIPAMENTO ECF (CÓDIGOS 2E, 13, 14, 15 e 16).
      -- não será feito o resumo
      --
      vn_fase := 16;
      --
      -- REGISTRO D500: NOTA FISCAL DE SERVIÇO DE COMUNICAÇÃO (CÓDIGO 21) E NOTA FISCAL DE SERVIÇO DE TELECOMUNICAÇÃO (CÓDIGO 22)
      pkb_monta_reg_D500(en_empresa_id => rec.empresa_id);
      --
      vn_fase := 17;
      --
      -- REGISTRO D600: CONSOLIDAÇÃO DA PRESTAÇÃO DE SERVIÇOS - NOTAS DE SERVIÇO DE COMUNICAÇÃO (CÓDIGO 21) E DE SERVIÇO DE TELECOMUNICAÇÃO (CÓDIGO 22)
      pkb_monta_reg_D600(en_empresa_id => rec.empresa_id);
      --
    end if;
    --
  end loop;
  --
  vn_fase := 18;
  --
  -- Monta o REGISTRO D990: ENCERRAMENTO DO BLOCO D.
  pkb_monta_reg_D990;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_bloco_d fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_BLOCO_D; 

---------------------------------------------------
--| Monta o REGISTRO C990: ENCERRAMENTO DO BLOCO C
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_C990 IS
BEGIN
   --
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gn_qtde_reg_c990 := 1;
   --
   gl_conteudo := gl_conteudo || 'C990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_c001 +
                                   gn_qtde_reg_c010 +
                                   gn_qtde_reg_c100 +
                                   gn_qtde_reg_c110 +
                                   gn_qtde_reg_c111 +
                                   gn_qtde_reg_c120 +
                                   gn_qtde_reg_c170 +
                                   gn_qtde_reg_c175 +
                                   gn_qtde_reg_c380 +
                                   gn_qtde_reg_c381 +
                                   gn_qtde_reg_c385 +
                                   gn_qtde_reg_c400 +
                                   gn_qtde_reg_c405 +
                                   gn_qtde_reg_c481 +
                                   gn_qtde_reg_c485 +
                                   gn_qtde_reg_c489 +
                                   gn_qtde_reg_c490 +
                                   gn_qtde_reg_c491 +
                                   gn_qtde_reg_c495 +
                                   gn_qtde_reg_c500 +
                                   gn_qtde_reg_c501 +
                                   gn_qtde_reg_c505 +
                                   gn_qtde_reg_c509 +
                                   gn_qtde_reg_c860 +
                                   gn_qtde_reg_c870 +
                                   gn_qtde_reg_c880 +
                                   gn_qtde_reg_c990
                                   )
                              || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_C990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_C990;
-----------------------------------------------------------------
--| Monta o REGISTRO C860: IDENTIFICAÇÃO DO EQUIPAMENTO SAT-CF-E
-----------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_C860(EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
  --  
  vn_fase   number := 0;
  vv_existe varchar2(1) := null;
  --
  -- Para registro C860
  cursor c_cfe(en_empresa_id in cupom_fiscal.empresa_id%type) is
    select mf.cod_mod cod_mod,
           cf.nro_serie_sat nr_sat,
           cf.dt_emissao dt_doc,
           min(cf.nro_cfe) doc_ini,
           max(cf.nro_cfe) doc_fim
      from tmp_cupom_fiscal cf, 
           mod_fiscal mf
     where cf.empresa_id = en_empresa_id
       and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and cf.dm_st_proc in (4) -- 4-Autorizado
       and mf.id         = cf.modfiscal_id
       and mf.cod_mod    = '59' -- Cupom Fiscal Eletrônico
     group by mf.cod_mod, 
              cf.nro_serie_sat, 
              cf.dt_emissao
     order by mf.cod_mod, 
              cf.nro_serie_sat, 
              cf.dt_emissao;
  --
  -- Para registro C870
  cursor c_item_cfe(en_empresa_id in cupom_fiscal.empresa_id%type,
                    en_nr_sat     in cupom_fiscal.nro_serie_sat%type,
                    ed_dt_doc     in cupom_fiscal.dt_emissao%type,
                    en_doc_ini    in cupom_fiscal.nro_cfe%type,
                    en_doc_fim    in cupom_fiscal.nro_cfe%type,
                    ev_cod_mod    in mod_fiscal.cod_mod%type) is
    select ic.item_id,
           ic.cod_item,
           ic.cfop_id,
           co.cd cfop,
           nvl(sum(nvl(ic.vl_item_liq, 0) + nvl(ic.vl_rateio_descto, 0)), 0) vl_prod,
           nvl(sum(nvl(ic.vl_desc, 0)), 0) vl_desc,
           ii.codst_id cst_id_pis,
           cs.cod_st cst_pis,
           nvl(sum(nvl(ii.vl_base_calc, 0)), 0) vl_bc_pis,
           ii.aliq_apli aliq_pis,
           nvl(sum(nvl(ii.vl_imp_trib, 0)), 0) vl_pis,
           it.codst_id cst_id_cof,
           ct.cod_st cst_cof,
           nvl(sum(nvl(it.vl_base_calc, 0)), 0) vl_bc_cof,
           it.aliq_apli aliq_cof,
           nvl(sum(nvl(it.vl_imp_trib, 0)), 0) vl_cof,
           ic.cod_cta
      from tmp_cupom_fiscal      cf,
           mod_fiscal            mf,
           tmp_item_cupom_fiscal ic,
           cfop                  co,
           tmp_imp_itemcf        ii,
           tipo_imposto          ti,
           cod_st                cs,
           tmp_imp_itemcf        it,
           tipo_imposto          tm,
           cod_st                ct
     where cf.empresa_id         = en_empresa_id
       and cf.nro_serie_sat      = en_nr_sat
       and cf.dt_emissao         = ed_dt_doc
       and cf.nro_cfe between en_doc_ini and en_doc_fim
       and cf.dm_st_proc         = 4 -- 4-Autorizado
       and mf.id                 = cf.modfiscal_id
       and mf.cod_mod            = ev_cod_mod
       and ic.cupomfiscal_id     = cf.id
       and co.id                 = ic.cfop_id
       and ii.itemcupomfiscal_id = ic.id
       -- and nvl(ii.aliq_apli,0)   > 0
       and ti.id                 = ii.tipoimp_id
       and ti.cd                 = 4 -- PIS
       and cs.id                 = ii.codst_id
       and it.itemcupomfiscal_id = ic.id
       -- and nvl(it.aliq_apli,0)   > 0
       and tm.id                 = it.tipoimp_id
       and tm.cd                 = 5 -- COFINS
       and ct.id                 = it.codst_id
     group by ic.item_id,
              ic.cod_item,
              ic.cfop_id,
              co.cd,
              ii.codst_id,
              cs.cod_st,
              ii.aliq_apli,
              it.codst_id,
              ct.cod_st,
              it.aliq_apli,
              ic.cod_cta
     order by ic.item_id,
              ic.cod_item,
              co.cd,
              cs.cod_st,
              ii.aliq_apli,
              ct.cod_st,
              it.aliq_apli;
  --
  -- Para registro C880
  cursor c_item_cfe_prod(en_empresa_id in cupom_fiscal.empresa_id%type,
                         en_nr_sat     in cupom_fiscal.nro_serie_sat%type,
                         ed_dt_doc     in cupom_fiscal.dt_emissao%type,
                         en_doc_ini    in cupom_fiscal.nro_cfe%type,
                         en_doc_fim    in cupom_fiscal.nro_cfe%type,
                         ev_cod_mod    in mod_fiscal.cod_mod%type) is
    select ic.item_id,
           ic.cod_item,
           ic.cfop_id,
           co.cd cfop,
           nvl(sum(nvl(ic.vl_item_liq, 0) + nvl(ic.vl_rateio_descto, 0)), 0) vl_prod,
           nvl(sum(nvl(ic.vl_desc, 0)), 0) vl_desc,
           ii.codst_id cst_id_pis,
           cs.cod_st cst_pis,
           nvl(sum(nvl(ii.qtde_base_calc_prod, 0)), 0) vl_bc_prod_pis,
           ii.vl_aliq_prod aliq_prod_pis,
           nvl(sum(nvl(ii.vl_imp_trib, 0)), 0) vl_pis,
           it.codst_id cst_id_cof,
           ct.cod_st cst_cof,
           nvl(sum(nvl(it.qtde_base_calc_prod, 0)), 0) vl_bc_prod_cof,
           it.vl_aliq_prod aliq_prod_cof,
           nvl(sum(nvl(it.vl_imp_trib, 0)), 0) vl_cof,
           ic.cod_cta
      from tmp_cupom_fiscal      cf,
           mod_fiscal            mf,
           tmp_item_cupom_fiscal ic,
           cfop                  co,
           tmp_imp_itemcf        ii,
           tipo_imposto          ti,
           cod_st                cs,
           tmp_imp_itemcf        it,
           tipo_imposto          tm,
           cod_st                ct
     where cf.empresa_id         = en_empresa_id
       and cf.nro_serie_sat      = en_nr_sat
       and cf.dt_emissao         = ed_dt_doc
       and cf.nro_cfe between en_doc_ini and en_doc_fim
       and cf.dm_st_proc         = 4 -- 4 - Autorizado
       and mf.id                 = cf.modfiscal_id
       and mf.cod_mod            = ev_cod_mod
       and ic.cupomfiscal_id     = cf.id
       and co.id                 = ic.cfop_id
       and ii.itemcupomfiscal_id = ic.id
       and nvl(ii.vl_aliq_prod, 0) > 0
       and ti.id                 = ii.tipoimp_id
       and ti.cd                 = 4 -- PIS
       and cs.id                 = ii.codst_id
       and it.itemcupomfiscal_id = ic.id
       and nvl(it.vl_aliq_prod, 0) > 0
       and tm.id                = it.tipoimp_id
       and tm.cd                = 5 -- COFINS
       and ct.id                = it.codst_id
     group by ic.item_id,
              ic.cod_item,
              ic.cfop_id,
              co.cd,
              ii.codst_id,
              cs.cod_st,
              ii.vl_aliq_prod,
              it.codst_id,
              ct.cod_st,
              it.vl_aliq_prod,
              ic.cod_cta
     order by ic.item_id,
              ic.cod_item,
              co.cd,
              cs.cod_st,
              ii.vl_aliq_prod,
              ct.cod_st,
              it.vl_aliq_prod;
  --
begin
  --
  vn_fase := 1;
  --
  for rec_c860 in c_cfe(en_empresa_id => en_empresa_id) loop
    exit when c_cfe%notfound or(c_cfe%notfound) is null;
    --
    vn_fase := 2;
    --
    vv_existe := 'N';
    --
    -- REGISTRO C870: RESUMO DIÁRIO DE DOCUMENTOS EMITIDOS POR EQUIPAMENTO SAT-CF-E (CÓDIGO 59) - PIS/PASEP E COFINS
    for rec_c870 in c_item_cfe(en_empresa_id => en_empresa_id,
                               en_nr_sat     => rec_c860.nr_sat,
                               ed_dt_doc     => rec_c860.dt_doc,
                               en_doc_ini    => rec_c860.doc_ini,
                               en_doc_fim    => rec_c860.doc_fim,
                               ev_cod_mod    => rec_c860.cod_mod) loop
      exit when c_item_cfe%notfound or(c_item_cfe%notfound) is null;
      --
      vn_fase := 3;
      --
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(en_empresa_id,
                                                     rec_c870.cfop_id,
                                                     rec_c870.cst_id_pis,
                                                     rec_c870.cst_id_cof) = 1 and -- 0-não, 1-sim
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(en_empresa_id,
                                                      rec_c870.cfop_id,
                                                      rec_c870.cst_id_pis,
                                                      rec_c870.cst_id_cof) = 0 then -- 0 - Não, 1 - Sim
        --
        vn_fase := 4;
        --
        if vv_existe = 'N' then -- Gerar um novo cabeçalho
          --
          vn_fase := 5;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'C860' || '|';
          gl_conteudo := gl_conteudo || rec_c860.cod_mod || '|';
          gl_conteudo := gl_conteudo || rec_c860.nr_sat || '|';
          gl_conteudo := gl_conteudo || to_char(rec_c860.dt_doc, 'ddmmrrrr') || '|';
          gl_conteudo := gl_conteudo || rec_c860.doc_ini || '|';
          gl_conteudo := gl_conteudo || rec_c860.doc_fim || '|';
          --
          vn_fase := 6;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C860',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_c860 := nvl(gn_qtde_reg_c860, 0) + 1;
          --
          vv_existe := 'S'; -- Para não gerar o cabeçalho novamente
          --
        end if;
        --
        vn_fase := 7;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'C870' || '|';
        gl_conteudo := gl_conteudo || rec_c870.cod_item || '|';
        gl_conteudo := gl_conteudo || rec_c870.cfop || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.vl_prod, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.vl_desc, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c870.cst_pis || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.vl_bc_pis, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.aliq_pis, '9990D9999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.vl_pis, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c870.cst_cof || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.vl_bc_cof, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.aliq_cof, '9990D9999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c870.vl_cof, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c870.cod_cta || '|';
        --
        vn_fase := 8;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C870',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_c870 := nvl(gn_qtde_reg_c870, 0) + 1;
        --
      end if; -- pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(en_empresa_id, rec_c870.cfop_id, rec_c870.cst_id_pis, rec_c870.cst_id_cof)  = 1 - 0-não, 1-sim
              -- pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(en_empresa_id, rec_c870.cfop_id, rec_c870.cst_id_pis, rec_c870.cst_id_cof) = 0 -- 0-não, 1-sim
    --
    end loop; -- cursor c_item_cfe - registro c870
    --
    vn_fase := 9;
    --
    -- REGISTRO C880: RESUMO DIÁRIO DE DOCUMENTOS EMITIDOS POR EQUIPAMENTO SAT-CF-E (CÓDIGO 59) - PIS/PASEP E COFINS APURADO POR UNIDADE DE MEDIDA DE PRODUTO
    for rec_c880 in c_item_cfe_prod(en_empresa_id => en_empresa_id,
                                    en_nr_sat     => rec_c860.nr_sat,
                                    ed_dt_doc     => rec_c860.dt_doc,
                                    en_doc_ini    => rec_c860.doc_ini,
                                    en_doc_fim    => rec_c860.doc_fim,
                                    ev_cod_mod    => rec_c860.cod_mod) loop
      --
      exit when c_item_cfe_prod%notfound or(c_item_cfe_prod%notfound) is null;
      --
      vn_fase := 10;
      --
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(en_empresa_id,
                                                     rec_c880.cfop_id,
                                                     rec_c880.cst_id_pis,
                                                     rec_c880.cst_id_cof) = 1 and -- 0-não, 1-sim
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(en_empresa_id,
                                                      rec_c880.cfop_id,
                                                      rec_c880.cst_id_pis,
                                                      rec_c880.cst_id_cof) = 0 then -- 0 - Não, 1 - Sim
        --
        vn_fase := 11;
        --
        if vv_existe = 'N' then -- Gerar um novo cabeçalho
          --
          vn_fase := 12;
          --
          -- Cria a estrutura do registro separado por PIPE "|"
          gl_conteudo := '|';
          --
          gl_conteudo := gl_conteudo || 'C860' || '|';
          gl_conteudo := gl_conteudo || rec_c860.cod_mod || '|';
          gl_conteudo := gl_conteudo || rec_c860.nr_sat || '|';
          gl_conteudo := gl_conteudo || to_char(rec_c860.dt_doc, 'ddmmrrrr') || '|';
          gl_conteudo := gl_conteudo || rec_c860.doc_ini || '|';
          gl_conteudo := gl_conteudo || rec_c860.doc_fim || '|';
          --
          vn_fase := 13;
          --
          pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C860',
                                    el_conteudo => gl_conteudo);
          --
          gn_qtde_reg_c860 := nvl(gn_qtde_reg_c860, 0) + 1;
          --
          vv_existe := 'S'; -- para não gerar o cabeçalho novamente
          --
        end if;
        --
        vn_fase := 14;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'C880' || '|';
        gl_conteudo := gl_conteudo || rec_c880.cod_item || '|';
        gl_conteudo := gl_conteudo || rec_c880.cfop || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.vl_prod, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.vl_desc, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c880.cst_pis || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.vl_bc_prod_pis, '9999999999990D999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.aliq_prod_pis, '9990D9999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.vl_pis, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c880.cst_cof || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.vl_bc_prod_cof, '9999999999990D999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.aliq_prod_cof, '9990D9999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c880.vl_cof, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c880.cod_cta || '|';
        --
        vn_fase := 15;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C880',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_c880 := nvl(gn_qtde_reg_c880, 0) + 1;
        --
      end if; -- pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(en_empresa_id, rec_c870.cfop_id, rec_c870.cst_id_pis, rec_c870.cst_id_cof)  = 1 - 0-não, 1-sim
              -- pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(en_empresa_id, rec_c870.cfop_id, rec_c870.cst_id_pis, rec_c870.cst_id_cof) = 0 -- 0-não, 1-sim
    --
    end loop; -- cursor c_item_cfe_proc - registro c880
  --
  -- Não será montado o REGISTRO C890: PROCESSO REFERENCIADO
  --
  end loop; -- cursor c_cfe - registro c860 
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_C860 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_C860;
-------------------------------------------------------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO C500: NOTA FISCAL/CONTA DE ENERGIA ELÉTRICA (CÓDIGO 06) E NOTA FISCAL CONSUMO FORNECIMENTO DE GÁS (CÓDIGO 28)
--| Monta o REGISTRO C500: NOTA FISCAL/CONTA DE ENERGIA ELÉTRICA (CÓDIGO 55 COM CFOP VINCULADA AO TIPO DE OPERAÇÃO CD=4-ENERGIA ELÉTRICA E AUTORIZADA)
-------------------------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_C500(EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
  --
  vn_fase   number := 0;
  vv_existe varchar2(1) := null;
  vb_501    boolean;
  vb_505    boolean;
  vb_501_55 boolean;
  vb_505_55 boolean;
  --
  cursor c_nf is
    select nf.id notafiscal_id,
           mf.cod_mod cod_mod,
           sd.cd cod_sit,
           nf.serie ser,
           nf.sub_serie sub,
           nf.nro_nf num_doc,
           nf.dt_emiss dt_doc,
           nf.dt_sai_ent dt_e_s,
           t.vl_total_nf vl_doc,
           t.vl_imp_trib_icms vl_icms,
           (nvl(t.vl_imp_trib_pis, 0) + nvl(t.vl_pis_iss, 0)) vl_pis,
           (nvl(t.vl_imp_trib_cofins, 0) + nvl(t.vl_cofins_iss, 0)) vl_cofins,
           nf.pessoa_id,
           nf.inforcompdctofiscal_id,
           nf.empresa_id,
           nf.nro_chave_nfe
      from tmp_nota_fiscal       nf,
           mod_fiscal            mf,
           sit_docto             sd,
           tmp_nota_fiscal_total t
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('06', '28', '29', '66')
       and sd.id              = nf.sitdocto_id
       and t.notafiscal_id    = nf.id
       and exists (select 1
                     from nf_compl_oper_pis pis, cod_st cst
                    where pis.notafiscal_id = nf.id
                      and cst.id            = pis.codst_id
                      and cst.cod_st        not in ('70', '71', '72', '73', '74', '75')) -- Valores isentos de créditos
     order by nf.empresa_id,
              mf.cod_mod,
              nf.serie,
              nf.nro_nf;
  --
  cursor c_501(en_notafiscal_id nota_fiscal.id%type) is
    select co.id,
           co.notafiscal_id,
           cst.cod_st cst_pis,
           co.vl_item,
           bcc.cd nat_bc_cred,
           co.vl_bc_pis,
           co.aliq_pis,
           co.vl_pis,
           co.planoconta_id,
           decode(pc.cod_cta, null, nf.cod_cta, pc.cod_cta) cod_cta
      from nf_compl_oper_pis co,
           tmp_nota_fiscal   nf,
           cod_st            cst,
           base_calc_cred_pc bcc,
           plano_conta       pc
     where co.notafiscal_id = en_notafiscal_id
       and nf.id            = co.notafiscal_id
       and cst.id           = co.codst_id
       and cst.cod_st       not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
       and bcc.id(+)        = co.basecalccredpc_id
       and pc.id(+)         = co.planoconta_id;
  --
  cursor c_505(en_notafiscal_id nota_fiscal.id%type) is
    select co.id,
           co.notafiscal_id,
           cst.cod_st cst_cofins,
           co.vl_item,
           bcc.cd nat_bc_cred,
           co.vl_bc_cofins,
           co.aliq_cofins,
           co.vl_cofins,
           co.planoconta_id,
           decode(pc.cod_cta, null, nf.cod_cta, pc.cod_cta) cod_cta
      from nf_compl_oper_cofins co,
           tmp_nota_fiscal      nf,
           cod_st               cst,
           base_calc_cred_pc    bcc,
           plano_conta          pc
     where co.notafiscal_id = en_notafiscal_id
       and nf.id            = co.notafiscal_id
       and cst.id           = co.codst_id
       and cst.cod_st       not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
       and bcc.id(+)        = co.basecalccredpc_id
       and pc.id(+)         = co.planoconta_id;
  --
  -- Utilizado para os modelos 06, 28 e 29, e para o modelo 55 com CFOP vinculado ao tipo de operação de Energia Elétrica
  cursor c_509(en_notafiscal_id nota_fiscal.id%type) is
    select ad.id,
           ad.conteudo,
           op.cd ind_proc
      from nfinfor_adic ad,
           orig_proc op
     where ad.notafiscal_id = en_notafiscal_id
       and ad.dm_tipo       = 2 -- Processo
       and op.id            = ad.origproc_id;
  --
  cursor c_nf_55 is
    select nf.empresa_id,
           nf.id notafiscal_id,
           nf.pessoa_id,
           mf.cod_mod,
           sd.cd cod_sit,
           nf.serie ser,
           nf.sub_serie sub,
           nf.nro_nf num_doc,
           nf.dt_emiss dt_doc,
           nf.dt_sai_ent dt_e_s,
           t.vl_total_nf vl_doc,
           t.vl_imp_trib_icms vl_icms,
           nf.inforcompdctofiscal_id,
           (nvl(t.vl_imp_trib_pis, 0) + nvl(t.vl_pis_iss, 0)) vl_pis,
           (nvl(t.vl_imp_trib_cofins, 0) + nvl(t.vl_cofins_iss, 0)) vl_cofins,
           nf.nro_chave_nfe
      from tmp_nota_fiscal       nf,
           mod_fiscal            mf,
           sit_docto             sd,
           tmp_nota_fiscal_total t
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4) -- 4 - Autorizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         = '55'
       and sd.id              = nf.sitdocto_id
       and t.notafiscal_id    = nf.id
     order by nf.empresa_id,
              mf.cod_mod,
              nf.serie,
              nf.nro_nf;
  --
  cursor c_501_55(en_notafiscal_id nota_fiscal.id%type) is
    select it.nro_item,
           lpad(cs.cod_st, 2, '0') cst_pis,
           nvl(it.vl_item_bruto, 0) vl_item,
           bc.cd nat_bc_cred,
           ii.vl_base_calc vl_bc_pis,
           ii.aliq_apli aliq_pis,
           ii.vl_imp_trib vl_pis,
           it.cod_cta
      from tmp_item_nota_fiscal it,
           oper_ger_cred_pc     og,
           base_calc_cred_pc    bc,
           tmp_imp_itemnf       ii,
           tipo_imposto         ti,
           cod_st               cs
     where it.notafiscal_id = en_notafiscal_id
       and og.cfop_id       = it.cfop_id
       and og.empresa_id    = gt_row_abertura_efd_pc.empresa_id -- Considerar a empresa da abertura do arquivo, teoricamente a matriz -- en_empresa_id
       and bc.id            = og.basecalccredpc_id
       and ii.itemnf_id     = it.id
       and ii.dm_tipo       = 0 -- 0 - Imposto, 1 - Retenção
       and ti.id            = ii.tipoimp_id
       and ti.cd            = 4 -- Pis
       and cs.id            = ii.codst_id
     order by it.nro_item;
  --
  cursor c_505_55(en_notafiscal_id nota_fiscal.id%type) is
    select it.nro_item,
           lpad(cs.cod_st, 2, '0') cst_cofins,
           nvl(it.vl_item_bruto, 0) vl_item,
           bc.cd nat_bc_cred,
           ii.vl_base_calc vl_bc_cofins,
           ii.aliq_apli aliq_cofins,
           ii.vl_imp_trib vl_cofins,
           it.cod_cta
      from tmp_item_nota_fiscal it,
           oper_ger_cred_pc     og,
           base_calc_cred_pc    bc,
           tmp_imp_itemnf       ii,
           tipo_imposto         ti,
           cod_st               cs
     where it.notafiscal_id = en_notafiscal_id
       and og.cfop_id       = it.cfop_id
       and bc.id            = og.basecalccredpc_id
       and og.empresa_id    = gt_row_abertura_efd_pc.empresa_id -- Considerar a empresa da abertura do arquivo, teoricamente a matriz -- en_empresa_id
       and ii.itemnf_id     = it.id
       and ii.dm_tipo       = 0 -- 0 - Imposto, 1 - Retenção
       and ti.id            = ii.tipoimp_id
       and ti.cd            = 5 -- Cofins
       and cs.id            = ii.codst_id
     order by it.nro_item;
  --
BEGIN
  --
  vn_fase := 1;
  --
  -- Modelos 06, 08 e 29
  for rec_c500 in c_nf loop
    exit when c_nf%notfound or(c_nf%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || 'C500' || '|';
    gl_conteudo := gl_conteudo || trim(pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part(en_pessoa_id          => rec_c500.pessoa_id,
                                                                                    en_tipo_retorna       => 1, -- 0 - Pessoa_id / 1 - Cod_Part
                                                                                    en_origem_dado_pessoa => 0)) || '|';
    gl_conteudo := gl_conteudo || rec_c500.cod_mod || '|';
    gl_conteudo := gl_conteudo || rec_c500.cod_sit || '|';
    gl_conteudo := gl_conteudo || rec_c500.ser || '|';
    gl_conteudo := gl_conteudo || rec_c500.sub || '|';
    gl_conteudo := gl_conteudo || lpad(rec_c500.num_doc, 9, '0') || '|';
    gl_conteudo := gl_conteudo || to_char(rec_c500.dt_doc, 'ddmmrrrr') || '|';
    gl_conteudo := gl_conteudo || to_char(rec_c500.dt_e_s, 'ddmmrrrr') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500.vl_doc, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500.vl_icms, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || trim(pk_csf.fkg_Infor_Comp_Dcto_Fiscal_cod(rec_c500.inforcompdctofiscal_id)) || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500.vl_pis, '9999999999990D99') || '|';
    gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500.vl_cofins, '9999999999990D99') || '|';
    --
    if gt_row_versao_layout_efd_pc.cd >= '006' then
      --
      gl_conteudo := gl_conteudo || lpad(rec_c500.nro_chave_nfe, 44, '0') || '|';
      --
    end if;
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C500',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_c500 := nvl(gn_qtde_reg_c500, 0) + 1;
    --
    vn_fase := 4;
    --
    vb_501 := false;
    --
    -- REGISTRO C501: COMPLEMENTO DA OPERAÇÃO (CÓDIGOS 06, 28 e 29) - PIS/PASEP
    for rec_c_501 in c_501(rec_c500.notafiscal_id) loop
      exit when c_501%notfound or(c_501%notfound) is null;
      --
      vn_fase := 5;
      --
      vb_501 := true;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'C501' || '|';
      gl_conteudo := gl_conteudo || rec_c_501.cst_pis || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501.vl_item, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_c_501.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501.vl_bc_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501.aliq_pis, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_c_501.cod_cta || '|';
      --
      vn_fase := 6;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C501',
                                el_conteudo => gl_conteudo);
      --
      --pkb_monta_reg_0500(en_planoconta_id => rec_c_501.planoconta_id,
                         --vv_parametro     => 'c_501');
      --
      gn_qtde_reg_c501 := nvl(gn_qtde_reg_c501, 0) + 1;
      --
    end loop; -- c_501
    --
    vn_fase := 6.1;
    --
    if vb_501 = false then
      --
      gv_resumo_log := 'Nao foi gerado o registro C501 para nota ' || rec_c500.num_doc || '. Verificar se há item gerado para imposto PIS e/ou verificar se foi carregado a tabela o registro C501 (nf_compl_oper_pis).';
      --
      declare
        vn_loggenerico_id log_generico.id%type;
      begin
        pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                         ev_mensagem       => gv_mensagem_log,
                                         ev_resumo         => gv_resumo_log,
                                         en_tipo_log       => erro_de_sistema,
                                         en_referencia_id  => gt_row_abertura_efd_pc.id,
                                         ev_obj_referencia => gv_obj_referencia,
                                         en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
      exception
        when others then
          null;
      end;
      --
    end if;
    --
    vn_fase := 7;
    --
    vb_505 := false;
    --
    -- REGISTRO C505: COMPLEMENTO DA OPERAÇÃO (CÓDIGOS 06, 28 e 29) - COFINS
    for rec_c_505 in c_505(rec_c500.notafiscal_id) loop
      exit when c_505%notfound or(c_505%notfound) is null;
      --
      vn_fase := 8;
      --
      vb_505 := true;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'C505' || '|';
      gl_conteudo := gl_conteudo || rec_c_505.cst_cofins || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505.vl_item, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_c_505.nat_bc_cred || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505.vl_bc_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505.aliq_cofins, '9990D9999') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505.vl_cofins, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || rec_c_505.cod_cta || '|';
      --
      vn_fase := 9;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C505',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_c505 := nvl(gn_qtde_reg_c505, 0) + 1;
      --
    end loop; -- c_505
    --
    vn_fase := 9.1;
    --
    if vb_505 = false then
      --
      gv_resumo_log := 'Nao foi gerado o registro C505 para nota ' || rec_c500.num_doc || '. Verificar se há item gerado para imposto COFINS e/ou verificar se foi carregado a tabela o registro C505 (nf_compl_oper_cofins).';
      --
      declare
        vn_loggenerico_id log_generico.id%type;
      begin
        pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                         ev_mensagem       => gv_mensagem_log,
                                         ev_resumo         => gv_resumo_log,
                                         en_tipo_log       => erro_de_sistema,
                                         en_referencia_id  => gt_row_abertura_efd_pc.id,
                                         ev_obj_referencia => gv_obj_referencia,
                                         en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
      exception
        when others then
          null;
      end;
      --
    end if;
    --
    vn_fase := 10;
    --
    -- REGISTRO C509: PROCESSO REFERENCIADO
    for rec_c_509 in c_509(rec_c500.notafiscal_id) loop
      exit when c_509%notfound or(c_509%notfound) is null;
      --
      vn_fase := 11;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'C509' || '|';
      gl_conteudo := gl_conteudo || pk_csf.fkg_converte(rec_c_509.conteudo) || '|';
      gl_conteudo := gl_conteudo || rec_c_509.ind_proc || '|';
      --
      vn_fase := 12;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C509',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_c509 := nvl(gn_qtde_reg_c509, 0) + 1;
      --
    end loop; -- c_509
  --
  end loop; -- c_nf -- modelos 06, 08 e 29
  --
  vn_fase := 13;
  --
  -- Modelo 55 com CFOP vinculado ao tipo de operação de Energia Elétrica
  for rec_c500_55 in c_nf_55 loop
    exit when c_nf_55%notfound or(c_nf_55%notfound) is null;
    --
    vn_fase := 14;
    --
    begin
      select 'S'
        into vv_existe
        from tmp_item_nota_fiscal it,
             cfop cf,
             tipo_operacao tp
       where it.notafiscal_id = rec_c500_55.notafiscal_id
         and cf.id            = it.cfop_id
         and tp.id            = cf.tipooperacao_id
         and tp.cd            = 4 -- Energia Eletrica
         and rownum           = 1;
    exception
      when others then
        vv_existe := 'N';
    end;
    --
    vn_fase := 15;
    --
    -- S-Existe Item com CFOP de Energia Elétrica (gerar no C500), N-Não existe Item com CFOP de Energica Elétrica (gerar no C100)
    if vv_existe = 'S' then
      --
      vn_fase := 16;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'C500' || '|';
      gl_conteudo := gl_conteudo || trim(pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part(en_pessoa_id          => rec_c500_55.pessoa_id,
                                                                                      en_tipo_retorna       => 1, -- 0-Pessoa_id / 1-Cod_Part
                                                                                      en_origem_dado_pessoa => gn_origem_dado_pessoa,
                                                                                      en_notafiscal_id      => rec_c500_55.notafiscal_id)) || '|';
      gl_conteudo := gl_conteudo || rec_c500_55.cod_mod || '|';
      gl_conteudo := gl_conteudo || rec_c500_55.cod_sit || '|';
      gl_conteudo := gl_conteudo || rec_c500_55.ser || '|';
      gl_conteudo := gl_conteudo || rec_c500_55.sub || '|';
      gl_conteudo := gl_conteudo || lpad(rec_c500_55.num_doc, 9, '0') || '|';
      gl_conteudo := gl_conteudo || to_char(rec_c500_55.dt_doc, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || to_char(rec_c500_55.dt_e_s, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500_55.vl_doc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500_55.vl_icms, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || trim(pk_csf.fkg_infor_comp_dcto_fiscal_cod(rec_c500_55.inforcompdctofiscal_id)) || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500_55.vl_pis, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c500_55.vl_cofins, '9999999999990D99') || '|';
      --
      if gt_row_versao_layout_efd_pc.cd >= '006' then
        --
        gl_conteudo := gl_conteudo || lpad(rec_c500_55.nro_chave_nfe, 44, '0') || '|';
        --
      end if;
      --
      vn_fase := 17;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C500',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_c500 := nvl(gn_qtde_reg_c500, 0) + 1;
      --
      vn_fase := 18;
      --
      vb_501_55 := false;
      --
      -- REGISTRO C501: COMPLEMENTO DA OPERAÇÃO (CÓDIGO 55 com CFOP de Energia Elétrica) - PIS/PASEP
      for rec_c_501_55 in c_501_55(rec_c500_55.notafiscal_id) loop
        exit when c_501_55%notfound or(c_501_55%notfound) is null;
        --
        vn_fase := 19;
        --
        vb_501_55 := true;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'C501' || '|';
        gl_conteudo := gl_conteudo || rec_c_501_55.cst_pis || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501_55.vl_item, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c_501_55.nat_bc_cred || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501_55.vl_bc_pis, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501_55.aliq_pis, '9990D9999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_501_55.vl_pis, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c_501_55.cod_cta || '|';
        --
        vn_fase := 20;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C501',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_c501 := nvl(gn_qtde_reg_c501, 0) + 1;
        --
      end loop; -- c_501
      -- 
      vn_fase := 20.1;
      --        
      if vb_501_55 = false then
        --
        gv_resumo_log := 'Nao foi gerado o registro C501 para nota ' || rec_c500_55.num_doc || '. Verificar se há item gerado para imposto PIS e/ou verificar se há CFOP está parametrizado em Relacionamento entre base de cálculo de crédito e cfop(base_calc_cred_pc).';
        --
        declare
          vn_loggenerico_id log_generico.id%type;
        begin
          pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                           ev_mensagem       => gv_mensagem_log,
                                           ev_resumo         => gv_resumo_log,
                                           en_tipo_log       => erro_de_sistema,
                                           en_referencia_id  => gt_row_abertura_efd_pc.id,
                                           ev_obj_referencia => gv_obj_referencia,
                                           en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
        exception
          when others then
            null;
        end;
        ---
      end if;
      --
      vn_fase := 21;
      --
      vb_505_55 := false;
      --
      -- REGISTRO C505: COMPLEMENTO DA OPERAÇÃO (CÓDIGO 55 com CFOP de Energia Elétrica) - COFINS
      for rec_c_505_55 in c_505_55(rec_c500_55.notafiscal_id) loop
        exit when c_505_55%notfound or(c_505_55%notfound) is null;
        --
        vn_fase := 22;
        --
        vb_505_55 := true;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'C505' || '|';
        gl_conteudo := gl_conteudo || rec_c_505_55.cst_cofins || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505_55.vl_item, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c_505_55.nat_bc_cred || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505_55.vl_bc_cofins, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505_55.aliq_cofins, '9990D9999') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_505_55.vl_cofins, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c_505_55.cod_cta || '|';
        --
        vn_fase := 23;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C505',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_c505 := nvl(gn_qtde_reg_c505, 0) + 1;
        --
      end loop; -- c_505
      --
      vn_fase := 23.1;
      --        
      if vb_505_55 = false then
        --
        gv_resumo_log := 'Nao foi gerado o registro C505 para nota ' || rec_c500_55.num_doc || '. Verificar se há item gerado para imposto COFINS e/ou verificar se há CFOP está parametrizado em Relacionamento entre base de cálculo de crédito e cfop (base_calc_cred_pc).';
        --
        declare
          vn_loggenerico_id log_generico.id%type;
        begin
          pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                           ev_mensagem       => gv_mensagem_log,
                                           ev_resumo         => gv_resumo_log,
                                           en_tipo_log       => erro_de_sistema,
                                           en_referencia_id  => gt_row_abertura_efd_pc.id,
                                           ev_obj_referencia => gv_obj_referencia,
                                           en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
        exception
          when others then
            null;
        end;
        ---
      end if;
      vn_fase := 24;
      --
      -- REGISTRO C509: PROCESSO REFERENCIADO
      for rec_c_509 in c_509(rec_c500_55.notafiscal_id) loop
        exit when c_509%notfound or(c_509%notfound) is null;
        --
        vn_fase := 25;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'C509' || '|';
        gl_conteudo := gl_conteudo || pk_csf.fkg_converte(rec_c_509.conteudo) || '|';
        gl_conteudo := gl_conteudo || rec_c_509.ind_proc || '|';
        --
        vn_fase := 26;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C509',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_c509 := nvl(gn_qtde_reg_c509, 0) + 1;
        --
      end loop; -- c_509
      --
    end if; -- vv_existe = 'S' -- S-Existe Item com CFOP de Energia Elétrica (gerar no C500), N-Não existe Item com CFOP de Energica Elétrica (gerar no C100)
  --
  end loop; -- c_nf_55 -- modelo 55 com CFOP de Energia Elétrica
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_C500 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_C500;
------------------------------------------------------------------------------------------
--| Monta o REGISTRO C490: DOCUMENTOS EMITIDOS POR ECF CUPOM FISCAL ELETRÔNICO (CÓDIGO 60)
------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_C490 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase      number      := 0;
   vv_existe     varchar2(1) := null;
   vn_qtde       number      := 0;
   vv_existe_400 varchar2(1) := 'N';
   --
   cursor c_400 is
   select e.id equipecf_id
        , e.empresa_id
        , mf.cod_mod
        , e.ecf_mod
        , e.ecf_fab
        , e.ecf_cx
     from equip_ecf   e
        , mod_fiscal  mf
    where e.empresa_id = en_empresa_id
      and mf.id        = e.modfiscal_id
      and mf.cod_mod  in ('02', '2D')  -- Nota Fiscal de Venda a Consumidor e Cupom Fiscal
    order by e.empresa_id
        , mf.cod_mod
        , e.ecf_mod
        , e.ecf_fab
        , e.ecf_cx;
   --
   cursor c_param( en_equipecf_id equip_ecf.id%type ) is
   select distinct id.cfop_id
        , id.codst_id
     from TMP_reducao_z_ecf          rz
        , TMP_doc_fiscal_emit_ecf    df
        , TMP_it_doc_fiscal_emit_ecf id
        , res_dia_doc_ecf_pis    rd
    where rz.equipecf_id         = en_equipecf_id
      and rz.dt_doc        between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and rz.dm_st_proc          = 1 -- Validada
      and nvl(rz.vl_brt,0)       > 0
      and df.reducaozecf_id      = rz.id
      and id.docfiscalemitecf_id = df.id
      and rd.reducaozecf_id      = rz.id;
   -- Para registro C490
   cursor c_cfe( en_empresa_id in cupom_fiscal.empresa_id%type ) is
      select mf.cod_mod         cod_mod
           , min(cf.dt_emissao) dt_emis_ini
           , max(cf.dt_emissao) dt_emis_fim
        from TMP_cupom_fiscal cf
           , mod_fiscal   mf
       where cf.empresa_id       = en_empresa_id
         and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and cf.dm_st_proc      in (4) -- 4-Autorizado
         and mf.id               = cf.modfiscal_id
         and mf.cod_mod          = '60' -- Cupom Fiscal Eletrônico
       group by mf.cod_mod;
   -- Para registro C491 - PIS e C495 - COFINS
   cursor c_item_cfe( en_empresa_id in cupom_fiscal.empresa_id%type
                    , ev_cod_mod    in mod_fiscal.cod_mod%type ) is
      select ic.item_id
           , ic.cod_item
           , ic.cfop_id
           , co.cd cfop
           , nvl(sum(nvl(ic.vl_item_liq,0)+nvl(ic.vl_rateio_descto,0)),0) vl_prod
           , nvl(sum(nvl(ic.vl_desc,0)),0) vl_desc
           , ii.codst_id cst_id_pis
           , cs.cod_st cst_pis
           , nvl(sum(nvl(ii.vl_base_calc,0)),0) vl_bc_pis
           , ii.aliq_apli aliq_pis
           , nvl(sum(nvl(ii.vl_imp_trib,0)),0) vl_pis
           , nvl(sum(nvl(ii.qtde_base_calc_prod,0)),0) vl_bc_prod_pis
            , ii.vl_aliq_prod aliq_prod_pis
           , it.codst_id cst_id_cof
           , ct.cod_st cst_cof
           , nvl(sum(nvl(it.vl_base_calc,0)),0) vl_bc_cof
           , it.aliq_apli aliq_cof
           , nvl(sum(nvl(it.vl_imp_trib,0)),0) vl_cof
           , nvl(sum(nvl(it.qtde_base_calc_prod,0)),0) vl_bc_prod_cof
           , it.vl_aliq_prod aliq_prod_cof
           , ic.cod_cta
        from TMP_cupom_fiscal      cf
           , mod_fiscal        mf
           , TMP_item_cupom_fiscal ic
           , cfop              co
           , TMP_imp_itemcf        ii
           , tipo_imposto      ti
           , cod_st            cs
           , TMP_imp_itemcf        it
           , tipo_imposto      tm
           , cod_st            ct
       where cf.empresa_id         = en_empresa_id
         and cf.dt_emissao   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and cf.dm_st_proc         in (4) -- 4-Autorizado
         and mf.id                 = cf.modfiscal_id
         and mf.cod_mod            = ev_cod_mod
         and ic.cupomfiscal_id     = cf.id
         and co.id                 = ic.cfop_id
         and ii.itemcupomfiscal_id = ic.id
         and ti.id                 = ii.tipoimp_id
         and ti.cd                 = 4 -- PIS
         and cs.id                 = ii.codst_id
         and cs.cod_st            in ('01', '02', '03', '04', '05', '06', '07', '08', '09', '49', '99')
         and it.itemcupomfiscal_id = ic.id
         and tm.id                 = it.tipoimp_id
         and tm.cd                 = 5 -- COFINS
         and ct.id                 = it.codst_id
         and ct.cod_st            in ('01', '02', '03', '04', '05', '06', '07', '08', '09', '49', '99')
       group by ic.item_id
           , ic.cod_item
           , ic.cfop_id
           , co.cd
           , ii.codst_id
           , cs.cod_st
           , ii.aliq_apli
           , ii.vl_aliq_prod
           , it.codst_id
           , ct.cod_st
           , it.aliq_apli
           , it.vl_aliq_prod
		   , ic.cod_cta
       order by ic.item_id
           , ic.cod_item
           , co.cd
           , cs.cod_st
           , ii.aliq_apli
           , ct.cod_st
           , it.aliq_apli;
   --
begin
   --
   vn_fase := 1;
   --
   for rec_c490 in c_cfe(en_empresa_id => en_empresa_id)
   loop
      --
      exit when c_cfe%notfound or (c_cfe%notfound) is null;
      --
      vn_fase := 2;
      --
      if nvl(gn_gerou_reg_C400,0) = 0 then
         for rec_400 in c_400 loop
            exit when c_400%notfound or (c_400%notfound) is null;
            --
            vn_fase := 3;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'C400' || '|';
            gl_conteudo := gl_conteudo || rec_400.cod_mod || '|';
            gl_conteudo := gl_conteudo || rec_400.ecf_mod || '|';
            gl_conteudo := gl_conteudo || rec_400.ecf_fab || '|';
            gl_conteudo := gl_conteudo || rec_400.ecf_cx || '|';
            --
            vn_fase := 6;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C400'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_c400 := nvl(gn_qtde_reg_c400,0) + 1;
            --
         end loop;
         --
         gn_gerou_reg_C400 := 1;
         --
      end if;
      ---
      vv_existe := 'N';
      -- REGISTRO C491: RESUMO DIÁRIO DE DOCUMENTOS EMITIDOS POR EQUIPAMENTO CUPOM FISCAL ELETRONICO (CÓDIGO 60) - PIS/PASEP
      for rec_c491 in c_item_cfe( en_empresa_id => en_empresa_id
                                , ev_cod_mod    => rec_c490.cod_mod )
      loop
         --
         exit when c_item_cfe%notfound or (c_item_cfe%notfound) is null;
         --
         vn_fase := 4;
         --
         if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(en_empresa_id, rec_c491.cfop_id, rec_c491.cst_id_pis, rec_c491.cst_id_cof)  = 1 and -- 0-não, 1-sim
            pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(en_empresa_id, rec_c491.cfop_id, rec_c491.cst_id_pis, rec_c491.cst_id_cof) = 0 then -- 0-não, 1-sim
            --
            vn_fase := 5;
            --
            if vv_existe = 'N' then -- gerar um novo cabeçalho
               --
               vn_fase := 6;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'C490' || '|';
               gl_conteudo := gl_conteudo || to_char(rec_c490.dt_emis_ini,'ddmmrrrr') || '|';
               gl_conteudo := gl_conteudo || to_char(rec_c490.dt_emis_fim,'ddmmrrrr') || '|';
               gl_conteudo := gl_conteudo || rec_c490.cod_mod || '|';
               --
               vn_fase := 7;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C490'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_c490 := nvl(gn_qtde_reg_c490,0) + 1;
               --
               vv_existe := 'S'; -- para não gerar o cabeçalho novamente
               --
            end if;
            --
            vn_fase := 8;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'C491' || '|';
            gl_conteudo := gl_conteudo || rec_c491.cod_item || '|';
            gl_conteudo := gl_conteudo || rec_c491.cst_pis || '|';
            gl_conteudo := gl_conteudo || rec_c491.cfop || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c491.vl_prod, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c491.vl_bc_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c491.aliq_pis, '9990D9999') || '|';
            if rec_c491.vl_bc_prod_pis > 0 then
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_c491.vl_bc_prod_pis, '9999999999990D999') || '|';
            else
               gl_conteudo := gl_conteudo || '|';
            end if;
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c491.aliq_prod_pis, '9999999999990D999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c491.vl_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_c491.cod_cta || '|';

            --
            vn_fase := 9;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C491'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_c491 := nvl(gn_qtde_reg_c491,0) + 1;
            --
         end if;
         --
      end loop; -- cursor c_item_cfe - registro c491
      --
      vn_fase := 10;
      -- REGISTRO C495: RESUMO DIÁRIO DE DOCUMENTOS EMITIDOS POR EQUIPAMENTO CUPOM FISCAL ELETRONICO (CÓDIGO 60) - COFINS
      for rec_c495 in c_item_cfe( en_empresa_id => en_empresa_id
                                , ev_cod_mod    => rec_c490.cod_mod )
      loop
         --
         exit when c_item_cfe%notfound or (c_item_cfe%notfound) is null;
         --
         vn_fase := 11;
         --
         if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(en_empresa_id, rec_c495.cfop_id, rec_c495.cst_id_pis, rec_c495.cst_id_cof)  = 1 and -- 0-não, 1-sim
            pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(en_empresa_id, rec_c495.cfop_id, rec_c495.cst_id_pis, rec_c495.cst_id_cof) = 0 then -- 0-não, 1-sim
            --
            vn_fase := 12;
            --
            if vv_existe = 'N' then -- gerar um novo cabeçalho
               --
               vn_fase := 16;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'C490' || '|';
               gl_conteudo := gl_conteudo || to_char(rec_c490.dt_emis_ini,'ddmmrrrr') || '|';
               gl_conteudo := gl_conteudo || to_char(rec_c490.dt_emis_fim,'ddmmrrrr') || '|';
               gl_conteudo := gl_conteudo || rec_c490.cod_mod || '|';
               --
               vn_fase := 17;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C490'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_c490 := nvl(gn_qtde_reg_c490,0) + 1;
               --
               vv_existe := 'S'; -- para não gerar o cabeçalho novamente
               --
            end if;
            --
            vn_fase := 13;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'C495' || '|';
            gl_conteudo := gl_conteudo || rec_c495.cod_item || '|';
            gl_conteudo := gl_conteudo || rec_c495.cst_cof || '|';
            gl_conteudo := gl_conteudo || rec_c495.cfop || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c495.vl_prod, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c495.vl_bc_cof, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c495.aliq_cof, '9990D9999') || '|';
            if rec_c495.vl_bc_prod_cof > 0 then
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_c495.vl_bc_prod_cof, '9999999999990D999') || '|';
            else
               gl_conteudo := gl_conteudo || '|';
            end if;
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c495.aliq_prod_cof, '9999999999990D999') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_c495.vl_cof, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_c495.cod_cta || '|';
            --
            vn_fase := 14;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C495'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_c495 := nvl(gn_qtde_reg_c495,0) + 1;
            --
         end if;
         --
      end loop; -- cursor c_item_cfe_proc - registro c495
      --
   end loop; -- cursor c_cfe - registro c490
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_C490 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_C490;
-----------------------------------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO C400/C490 - EQUIPAMENTO ECF (CÓDIGO 02 e 2D) / DOCUMENTOS EMITIDOS POR ECF CUPOM FISCAL ELETRÔNICO (CÓDIGO 60)
-----------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_C400 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase   number := 0;
   vv_existe varchar2(1) := 'N';
   --
   cursor c_400 is
   select e.id equipecf_id
        , e.empresa_id
        , mf.cod_mod
        , e.ecf_mod
        , e.ecf_fab
        , e.ecf_cx
     from equip_ecf   e
        , mod_fiscal  mf
    where e.empresa_id = en_empresa_id
      and mf.id        = e.modfiscal_id
      and mf.cod_mod  in ('02', '2D')  -- Nota Fiscal de Venda a Consumidor e Cupom Fiscal
    order by e.empresa_id
        , mf.cod_mod
        , e.ecf_mod
        , e.ecf_fab
        , e.ecf_cx;
   --
   cursor c_param( en_equipecf_id equip_ecf.id%type ) is
   select distinct id.cfop_id
        , id.codst_id
     from TMP_reducao_z_ecf          rz
        , TMP_doc_fiscal_emit_ecf    df
        , TMP_it_doc_fiscal_emit_ecf id
        , res_dia_doc_ecf_pis    rd
    where rz.equipecf_id         = en_equipecf_id
      and rz.dt_doc        between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and rz.dm_st_proc          = 1 -- Validada
      and nvl(rz.vl_brt,0)       > 0
      and df.reducaozecf_id      = rz.id
      and id.docfiscalemitecf_id = df.id
      and rd.reducaozecf_id      = rz.id;
   --
   cursor c_405( en_equipecf_id equip_ecf.id%type ) is
   select r.id reducaozecf_id
        , r.dt_doc
        , r.cro
        , r.crz
        , r.num_coo_fin
        , r.vl_grande_total_fin
        , r.vl_brt
        , r.vl_pis
        , r.vl_cofins
     from TMP_reducao_z_ecf r
    where r.equipecf_id   = en_equipecf_id
      and r.dt_doc  between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and r.dm_st_proc    = 1 -- Validada
      and nvl(r.vl_brt,0) > 0
    order by r.dt_doc;
   --
   cursor c_c481( en_reducaozecf_id reducao_z_ecf.id%type ) is
   select r.id
        , r.reducaozecf_id
        , r.codst_id
        , cst.cod_st
        , r.vl_item
        , r.vl_bc_pis
        , r.aliq_pis
        , r.quant_bc_pis
        , r.vl_aliq_pis_quant
        , r.vl_pis
        , r.item_id
        , it.cod_item
        , r.planoconta_id
        , pc.cod_cta
     from res_dia_doc_ecf_pis  r
        , cod_st               cst
        , item                 it
        , plano_conta          pc
    where r.reducaozecf_id = en_reducaozecf_id
      and cst.id           = r.codst_id
      and it.id(+)         = r.item_id
      and pc.id(+)         = r.planoconta_id;
   --
   cursor c_c485( en_reducaozecf_id reducao_z_ecf.id%type ) is
   select r.id
        , r.reducaozecf_id
        , r.codst_id
        , cst.cod_st
        , r.vl_item
        , r.vl_bc_cofins
        , r.aliq_cofins
        , r.quant_bc_cofins
        , r.vl_aliq_cofins_quant
        , r.vl_cofins
        , r.item_id
        , it.cod_item
        , r.planoconta_id
        , pc.cod_cta
     from res_dia_doc_ecf_cofins  r
        , cod_st                  cst
        , item                    it
        , plano_conta             pc
    where r.reducaozecf_id = en_reducaozecf_id
      and cst.id           = r.codst_id
      and it.id(+)         = r.item_id
      and pc.id(+)         = r.planoconta_id;
   --
   cursor c_489( en_equipecf_id equip_ecf.id%type ) is
   select pr.id
        , pr.num_proc
        , op.cd ind_proc
     from equip_ecf_proc_ref pr
        , orig_proc op
    where pr.equipecf_id = en_equipecf_id
      and op.id          = pr.origproc_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   gn_gerou_reg_C400 := 0;
   --
   for rec_400 in c_400 loop
      exit when c_400%notfound or (c_400%notfound) is null;
      --
      vn_fase := 2;
      vv_existe := 'N';
      -- Verificar parâmetro de CFOP e CST de PIS para gerar o registro, não é necessário verificar a CST de COFINS
      for rec_param in c_param(rec_400.equipecf_id) loop
         exit when c_param%notfound or (c_param%notfound) is null;
         --
         vn_fase := 2.1;
         if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(en_empresa_id, rec_param.cfop_id, rec_param.codst_id, null)  = 1 and -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
            pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(en_empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 0 then -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            --
            vn_fase := 2.2;
            vv_existe := 'S';
            exit;
            --
         end if;
         --
      end loop;
      --
      vn_fase := 3;
      --
      if vv_existe = 'S' then
         --
         vn_fase := 4;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || 'C400' || '|';
         gl_conteudo := gl_conteudo || rec_400.cod_mod || '|';
         gl_conteudo := gl_conteudo || rec_400.ecf_mod || '|';
         gl_conteudo := gl_conteudo || rec_400.ecf_fab || '|';
         gl_conteudo := gl_conteudo || rec_400.ecf_cx || '|';
         --
         vn_fase := 5;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C400'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_c400 := nvl(gn_qtde_reg_c400,0) + 1;
         --
         gn_gerou_reg_C400 := 1;
         --
         for rec_405 in c_405(rec_400.equipecf_id) loop
            exit when c_405%notfound or (c_405%notfound) is null;
            --
            vn_fase := 6;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'C405' || '|';
            gl_conteudo := gl_conteudo || to_char(rec_405.dt_doc, 'ddmmrrrr') || '|';
            gl_conteudo := gl_conteudo || rec_405.cro || '|';
            gl_conteudo := gl_conteudo || rec_405.crz || '|';
            gl_conteudo := gl_conteudo || rec_405.num_coo_fin || '|';
            gl_conteudo := gl_conteudo || rec_405.vl_grande_total_fin || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num( rec_405.vl_brt, '9999999999990D99' ) || '|';
            --
            vn_fase := 7;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C405'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_c405 := nvl(gn_qtde_reg_c405,0) + 1;
            --
            -- REGISTRO C481: RESUMO DIÁRIO DE DOCUMENTOS EMITIDOS POR ECF - PIS/PASEP (CÓDIGOS 02 e 2D).
            for rec_c_c481 in c_c481(rec_405.reducaozecf_id) loop
               exit when c_c481%notfound or (c_c481%notfound) is null;
               --
               vn_fase := 8;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'C481' || '|';
               gl_conteudo := gl_conteudo || rec_c_c481.cod_st || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c481.vl_item, '9999999999990D99') || '|';
               if nvl(rec_c_c481.quant_bc_pis,0) <> 0 then -- base de cálculo em quantidade
                  gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
                  gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_c481.quant_bc_pis, '999999999990D999') || '|'; -- base de cálculo em quantidade
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_c481.vl_aliq_pis_quant, '99990D9999') || '|'; -- alíquota do pis em quantidade
               else -- base de cálculo em valor
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_c481.vl_bc_pis, '9999999999990D99') || '|'; -- base de cálculo em valor
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c_c481.aliq_pis, '9990D9999') || '|'; -- alíquota em percentual
                  gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
                  gl_conteudo := gl_conteudo || '|'; -- alíquota do pis em quantidade
               end if;
               gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c481.vl_pis, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || rec_c_c481.cod_item || '|';
               gl_conteudo := gl_conteudo || rec_c_c481.cod_cta || '|';
               --
               vn_fase := 9;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C481'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_c481 := nvl(gn_qtde_reg_c481,0) + 1;
               --
            end loop; -- c_c481
            --
            vn_fase := 10;
            -- REGISTRO C485: RESUMO DIÁRIO DE DOCUMENTOS EMITIDOS POR ECF - COFINS (CÓDIGOS 02 e 2D)
            for rec_c_c485 in c_c485(rec_405.reducaozecf_id) loop
               exit when c_c485%notfound or (c_c485%notfound) is null;
               --
               vn_fase := 11;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'C485' || '|';
               gl_conteudo := gl_conteudo || rec_c_c485.cod_st || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c485.vl_item, '9999999999990D99') || '|';
               if nvl(rec_c_c485.quant_bc_cofins,0) <> 0 then -- base de cálculo em quantidade
                  gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
                  gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
                  gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c485.quant_bc_cofins, '9999999999990D999') || '|'; -- base de cálculo em quantidade
                  gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c485.vl_aliq_cofins_quant, '99990D9999') || '|'; -- alíquota da cofins em quantidade
               else -- base de cálculo em valor
                  gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c485.vl_bc_cofins, '9999999999990D99') || '|'; -- base de cálculo em valor
                  gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c485.aliq_cofins, '9990D9999') || '|'; -- alíquota em percentual
                  gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
                  gl_conteudo := gl_conteudo || '|'; -- alíquota da cofins em quantidade
               end if;
               gl_conteudo := gl_conteudo || fkg_formata_num( rec_c_c485.vl_cofins, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || rec_c_c485.cod_item || '|';
               gl_conteudo := gl_conteudo || rec_c_c485.cod_cta || '|';
               --
               vn_fase := 12;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C485'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_c485 := nvl(gn_qtde_reg_c485,0) + 1;
               --
            end loop; -- c_c485
            --
         end loop; -- c_405
         --
         vn_fase := 13;
         -- REGISTRO C489: PROCESSO REFERENCIADO
         for rec_c_489 in c_489(rec_400.equipecf_id) loop
            exit when c_489%notfound or (c_489%notfound) is null;
            --
            vn_fase := 14;
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || 'C489' || '|';
            gl_conteudo := gl_conteudo || rec_c_489.num_proc || '|';
            gl_conteudo := gl_conteudo || rec_c_489.ind_proc || '|';
            --
            vn_fase := 15;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C489'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_c489 := nvl(gn_qtde_reg_c489,0) + 1;
            --
         end loop; -- c_489
         --
      end if; -- vv_existe = 'S'
      --
   end loop; -- c_400
   --
   vn_fase := 16;
   --
   -- REGISTRO C490: DOCUMENTOS EMITIDOS POR ECF CUPOM FISCAL ELETRÔNICO (CÓDIGO 60)
   --
   PKB_MONTA_REG_C490(en_empresa_id => en_empresa_id);
   ---
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_C400 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_C400;
---------------------------------------------------------------------------------------------
--| Monta o REGISTRO C380: RESUMO DIÁRIO DAS NOTAS FISCAIS DE VENDA A CONSUMIDOR (CÓDIGO 02)
---------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_C380(EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
  --
  vn_fase   number := 0;
  vv_existe varchar2(1) := 'N';
  --
  cursor c_c380 is
    select nf.id resdianfvendacons_id,
           nf.empresa_id,
           mf.cod_mod,
           nf.serie,
           nf.subserie,
           nf.num_doc_ini,
           nf.num_doc_fin,
           nf.dt_doc,
           nf.vl_doc,
           nf.cod_cta,
           sum(nvl(c.vl_doc_canc, 0)) vl_doc_canc
      from res_dia_nf_venda_cons      nf,
           mod_fiscal                 mf,
           res_dia_nf_venda_cons_canc c
     where nf.empresa_id             = en_empresa_id
       and nf.dt_doc between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and nf.dm_st_proc             = 1 -- Validada
       and mf.id                     = nf.modfiscal_id
       and mf.cod_mod                = '02' -- Nota Fiscal de Venda a Consumidor
       and c.resdianfvendacons_id(+) = nf.id
     group by nf.id,
              nf.empresa_id,
              mf.cod_mod,
              nf.serie,
              nf.subserie,
              nf.num_doc_ini,
              nf.num_doc_fin,
              nf.dt_doc,
              nf.vl_doc,
              nf.cod_cta
     order by nf.empresa_id,
              mf.cod_mod,
              nf.serie,
              nf.subserie,
              nf.num_doc_ini;
  --
  cursor c_param(en_resdianfvendacons_id res_dia_nf_venda_cons.id%type) is
    select distinct ra.cfop_id,  
           ir.codst_id_pis, 
           ir.codst_id_cofins
      from reg_an_res_dia_nf_venda_cons ra, 
           it_res_dia_nf_venda_cons ir
     where ra.resdianfvendacons_id      = en_resdianfvendacons_id
       and ir.reganresdianfvendacons_id = ra.id;
  --
  cursor c_c381(en_resdianfvendacons_id res_dia_nf_venda_cons.id%type) is
    select i.id,
           r.cfop_id,
           i.codst_id_pis,
           cst.cod_st cst_pis,
           it.cod_item,
           i.item_id,
           (nvl(i.vl_item_acm, 0) - nvl(i.vl_desc_acm, 0)) vl_item,
           i.vl_bc_pis,
           i.aliq_pis,
           i.quant_bc_pis,
           i.aliq_pis_quant,
           i.vl_pis_acm,
           i.codst_id_cofins
      from reg_an_res_dia_nf_venda_cons r,
           it_res_dia_nf_venda_cons     i,
           item                         it,
           cod_st                       cst
     where r.resdianfvendacons_id      = en_resdianfvendacons_id
       and i.reganresdianfvendacons_id = r.id
       and it.id                       = i.item_id
       and cst.id                      = i.codst_id_pis;
  --
  cursor c_c385(en_resdianfvendacons_id res_dia_nf_venda_cons.id%type) is
    select i.id,
           r.cfop_id,
           i.codst_id_cofins,
           cst.cod_st cst_cofins,
           it.cod_item,
           i.item_id,
           (nvl(i.vl_item_acm, 0) - nvl(i.vl_desc_acm, 0)) vl_item,
           i.vl_bc_cofins,
           i.aliq_cofins,
           i.quant_bc_cofins,
           i.aliq_cofins_quant,
           i.vl_cofins_acm,
           i.codst_id_pis
      from reg_an_res_dia_nf_venda_cons r,
           it_res_dia_nf_venda_cons     i,
           item                         it,
           cod_st                       cst
     where r.resdianfvendacons_id      = en_resdianfvendacons_id
       and i.reganresdianfvendacons_id = r.id
       and it.id                       = i.item_id
       and cst.id                      = i.codst_id_cofins;
  --
BEGIN
  --
  vn_fase := 1;
  --
  -- Monta Registro C380: Nota Fiscal de Venda a Consumidor (Código 02) - Consolidação de Documentos Emitidos.
  for rec_c380 in c_c380 loop
    exit when c_c380%notfound or(c_c380%notfound) is null;
    --
    vn_fase   := 2;
    vv_existe := 'N';
    --
    -- Verificar parâmetro de CFOP e CST de PIS para gerar o registro, não é necessário verificar a CST de COFINS
    for rec_param in c_param(rec_c380.resdianfvendacons_id) loop
      exit when c_param%notfound or(c_param%notfound) is null;
      --
      vn_fase := 2.1;
      --
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(rec_c380.empresa_id,
                                                     rec_param.cfop_id,
                                                     rec_param.codst_id_pis,
                                                     rec_param.codst_id_cofins) = 1 and -- Verifica se a CFOP faz parte da receita: 0-não, 1-sim
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(rec_c380.empresa_id,
                                                      rec_param.cfop_id,
                                                      rec_param.codst_id_pis,
                                                      rec_param.codst_id_cofins) = 0 then -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
        --
        vn_fase := 2.2;
        --
        vv_existe := 'S';
        --
        exit;
        --
      end if;
      --
    end loop;
    --
    vn_fase := 3;
    --
    if vv_existe = 'S' then
      --
      vn_fase := 4;
      --
      -- Cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'C380' || '|';
      gl_conteudo := gl_conteudo || rec_c380.cod_mod || '|';
      gl_conteudo := gl_conteudo || to_char(rec_c380.dt_doc, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || to_char(rec_c380.dt_doc, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || rec_c380.num_doc_ini || '|';
      gl_conteudo := gl_conteudo || rec_c380.num_doc_fin || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c380.vl_doc, '9999999999990D99') || '|';
      gl_conteudo := gl_conteudo || fkg_formata_num(rec_c380.vl_doc_canc, '9999999999990D99') || '|';
      --
      vn_fase := 5;
      --
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C380',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_c380 := nvl(gn_qtde_reg_c380, 0) + 1;
      --
      vn_fase := 6;
      --
      -- Monta Registro C381: Detalhamento da Consolidação - PIS/Pasep
      for rec_c381 in c_c381(rec_c380.resdianfvendacons_id) loop
        exit when c_c381%notfound or(c_c381%notfound) is null;
        --
        vn_fase := 7;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'C381' || '|';
        gl_conteudo := gl_conteudo || rec_c381.cst_pis || '|';
        gl_conteudo := gl_conteudo || rec_c381.cod_item || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c381.vl_item, '9999999999990D99') || '|';
        if nvl(rec_c381.quant_bc_pis, 0) <> 0 then -- base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
          gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c381.quant_bc_pis, '9999999999990D999') || '|'; -- base de cálculo em quantidade
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c381.aliq_pis_quant, '99990D9999') || '|'; -- alíquota do pis em quantidade
        else
          -- base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c381.vl_bc_pis, '9999999999990D99') || '|'; -- base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c381.aliq_pis, '9990D9999') || '|'; -- alíquota em percentual
          gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- alíquota do pis em quantidade
        end if;
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c381.vl_pis_acm, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c380.cod_cta || '|';
        --
        vn_fase := 8;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C381',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_c381 := nvl(gn_qtde_reg_c381, 0) + 1;
        --
      end loop;
      --
      vn_fase := 9;
      --
      -- Monta Registro C385: Detalhamento da Consolidação - Cofins 
      for rec_c385 in c_c385(rec_c380.resdianfvendacons_id) loop
        exit when c_c385%notfound or(c_c385%notfound) is null;
        --
        vn_fase := 10;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || 'C385' || '|';
        gl_conteudo := gl_conteudo || rec_c385.cst_cofins || '|';
        gl_conteudo := gl_conteudo || rec_c385.cod_item || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c385.vl_item, '9999999999990D99') || '|';
        if nvl(rec_c385.quant_bc_cofins, 0) <> 0 then
          -- base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
          gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c385.quant_bc_cofins, '9999999999990D999') || '|'; -- base de cálculo em quantidade
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c385.aliq_cofins_quant, '99990D9999') || '|'; -- alíquota da cofins em quantidade
        else
          -- base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c385.vl_bc_cofins, '9999999999990D99') || '|'; -- base de cálculo em valor
          gl_conteudo := gl_conteudo || fkg_formata_num(rec_c385.aliq_cofins, '9990D9999') || '|'; -- alíquota em percentual
          gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
          gl_conteudo := gl_conteudo || '|'; -- alíquota da cofins em quantidade
        end if;
        gl_conteudo := gl_conteudo || fkg_formata_num(rec_c385.vl_cofins_acm, '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || rec_c380.cod_cta || '|';
        --
        vn_fase := 11;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => 'C385',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_c385 := nvl(gn_qtde_reg_c385, 0) + 1;
        --
      end loop;
      --
    end if; -- vv_existe = 'S'
  --
  end loop;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_C380 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_C380;
---------------------------------------------------------------------------------
--| Monta o REGISTRO 0450: TABELA DE INFORMAÇÃO COMPLEMENTAR DO DOCUMENTO FISCAL
---------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0450 ( EN_EMPRESA_ID        IN  EMPRESA.ID%TYPE
                             , EN_NOTAFISCAL_ID     IN  NOTA_FISCAL.ID%TYPE            DEFAULT NULL
                             , EN_INFCOMPDCTOFIS_ID IN  INFOR_COMP_DCTO_FISCAL.ID%TYPE DEFAULT NULL ) IS
   --
   vn_fase       number := 0;
   vb_achou      boolean := false;
   vn_existe     number;
   --
   vn_tam_tot    number := 0;
   vn_tamanho    number := 0;
   vv_txt_compl  nfinfor_adic.conteudo%type := null;
   vv_descr      nfinfor_adic.conteudo%type := null;
   j             integer := 0;
   --
   cursor c_obs is
   select icdf.*
     from infor_comp_dcto_fiscal icdf
    where id = en_infcompdctofis_id;
   --
   cursor c_obs_c110 is
   select distinct 1
     from TMP_nota_fiscal  nf
        , mod_fiscal   mf
        , nfinfor_adic ad
    where nf.id            = en_notafiscal_id
      and mf.id            = nf.modfiscal_id
      and ad.notafiscal_id = nf.id
      and ad.dm_tipo       = 0 -- Contribuinte
      and ad.campo        is null
      and mf.cod_mod      in ('01', '1B', '04', '55')
   union
   select distinct 1
     from TMP_nota_fiscal  nf
        , mod_fiscal   mf
        , sit_docto    sd
    where nf.id          = en_notafiscal_id
      and nf.dm_st_proc in (4, 7, 8)
      and nf.dm_ind_emit = 0 -- emissão própria
      and mf.id          = nf.modfiscal_id
      and mf.cod_mod    in ('01', '1B', '04')
      and sd.id          = nf.sitdocto_id
      and sd.cd          = '08' -- Documento Fiscal emitido com base em Regime Especial ou Norma Específica
      and gt_row_versao_layout_efd_pc.cd >= '002'; -- versões 1.01, 1.07 e 2.00
   --
   cursor c_obs_c110_quebra (en_notafiscal_id in nota_fiscal.id%type) is
   select ad.id nfinforadic_id
        , ad.conteudo txt_compl
     from TMP_nota_fiscal  nf
        , mod_fiscal   mf
        , nfinfor_adic ad
    where nf.id            = en_notafiscal_id
      and mf.id            = nf.modfiscal_id
      and ad.notafiscal_id = nf.id
      and ad.dm_tipo       = 0 -- Contribuinte
      and ad.campo        is null
      and mf.cod_mod      in ('01', '1B', '04', '55');
   --
   cursor c_obs_c110_08 is
   select distinct 1
     from TMP_nota_fiscal  nf
        , mod_fiscal   mf
        , sit_docto    sd
    where nf.id          = en_notafiscal_id
      and nf.dm_st_proc in (4, 7, 8)
      and nf.dm_ind_emit = 0 -- emissão própria
      and mf.id          = nf.modfiscal_id
      and mf.cod_mod    in ('01', '1B', '04')
      and sd.id          = nf.sitdocto_id
      and sd.cd          = '08' -- Documento Fiscal emitido com base em Regime Especial ou Norma Específica
      and gt_row_versao_layout_efd_pc.cd >= '002'; -- versões 1.01, 1.07 e 2.00
   --
   cursor c_obs_a110 is
   select distinct 1
     from TMP_nota_fiscal  nf
        , mod_fiscal   mf
        , nfinfor_adic ad
    where nf.id            = en_notafiscal_id
      and mf.id            = nf.modfiscal_id
      and ad.notafiscal_id = nf.id
      and ad.dm_tipo       = 0 -- Contribuinte
      and ad.campo        is null
      and mf.cod_mod      in ('99');
   --
BEGIN
   --
   vn_fase := 1;
   --
   begin
      vb_achou := vt_bi_tab_reg_0450(en_empresa_id).exists(en_infcompdctofis_id);
   exception
      when others then
         vb_achou := false;
   end;
   --
   vn_fase := 2;
   -- Só vai entrar no cursor observação se parametro en_infcompdctofis_id foi fornecido
   if nvl(en_infcompdctofis_id, 0) > 0 then
      --
      vn_fase := 3;
      -- Só irá entrar no for do cursor se o select retornar registros
      for rec in c_obs loop
         exit when c_obs%notfound or (c_obs%notfound) is null;
         --
         vn_fase := 4;
         -- Só irá continuar a armazenar os registros no vetor caso o código ainda não exista.
         if not vb_achou then
            --
            vn_fase := 4.1;
            --
            vt_bi_tab_reg_0450(en_empresa_id)(en_infcompdctofis_id).cod_inf := trim(rec.cod_infor);
            --
            -- cria a estrutura do registro separado por PIPE "|"
            gl_conteudo := '|';
            --
            gl_conteudo := gl_conteudo || '0450' || '|';
            gl_conteudo := gl_conteudo || trim(rec.cod_infor) || '|';
            gl_conteudo := gl_conteudo || rec.txt || '|';
            --
            vn_fase := 4.2;
            --
            pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0450'
                                      , el_conteudo => gl_conteudo );
            --
            gn_qtde_reg_0450 := nvl(gn_qtde_reg_0450,0) + 1;
            --
         end if;
         --
      end loop;
      --
   end if;
   --
   vn_fase := 5;
   -- Só vai entrar no cursor observação se parametro do id da nota foi fornecido
   if nvl(en_notafiscal_id, 0) > 0 then
      --
      vn_fase := 6;
      --
      if gn_dm_quebra_infadic_spedc = 0 then -- 0-Não quebra informação adicional
         --
         vn_fase := 7;
         -- Monta informação complementar referente ao registro C110
         open c_obs_c110;
         fetch c_obs_c110 into vn_existe;
            --
            vn_fase := 8;
            --
            if c_obs_c110%found then
               --
               vn_fase := 8.1;
               --
               begin
                  vb_achou := vt_bi_tab_reg_0450(en_empresa_id).exists('C110');
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 8.2;
               -- Só irá continuar a armazenar os registros no vetor caso o código ainda não exista
               if not vb_achou then
                  --
                  vn_fase := 8.3;
                  --
                  vt_bi_tab_reg_0450(en_empresa_id)('C110').cod_inf := 'C110';
                  --
                  -- cria a estrutura do registro separado por PIPE "|"
                  gl_conteudo := '|';
                  --
                  gl_conteudo := gl_conteudo || '0450' || '|';
                  gl_conteudo := gl_conteudo || 'C110' || '|';
                  gl_conteudo := gl_conteudo || 'INFORMACAO COMPLEMENTAR' || '|';
                  --
                  vn_fase := 8.4;
                  --
                  pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0450'
                                            , el_conteudo => gl_conteudo );
                  --
                  vn_fase := 8.5;
                  --
                  gn_qtde_reg_0450 := nvl(gn_qtde_reg_0450,0) + 1;
                  --
               end if;
               --
            end if;
            --
         close c_obs_c110;
         --
      else -- gn_dm_quebra_infadic_spedc = 1 -- 1-Sim, quebra informação adicional
         --
         vn_fase := 9;
         --
         for r_obs_c110_quebra in c_obs_c110_quebra( en_notafiscal_id => en_notafiscal_id )
         loop
            --
            exit when c_obs_c110_quebra%notfound or (c_obs_c110_quebra%notfound) is null;
            --
            vn_fase := 9.1;
            --
            vn_tam_tot   := length(trim(pk_csf.fkg_converte(r_obs_c110_quebra.txt_compl)));
            vn_tamanho   := length(trim(pk_csf.fkg_converte(r_obs_c110_quebra.txt_compl)));
            vv_txt_compl := trim(pk_csf.fkg_converte(r_obs_c110_quebra.txt_compl));
            --
            vn_fase := 9.2;
            --
            loop
               --
               vn_fase := 9.3;
               --
               vn_tamanho   := vn_tamanho - 255;
               vv_descr     := substr(vv_txt_compl,1,255); -- recuperamos os primeiros 255 caracteres
               vv_txt_compl := substr(vv_txt_compl,256,nvl(vn_tam_tot,0)); -- eliminamos os primeiros 255 caracteres
               --
               gn_codinf := nvl(gn_codinf,0) + 1; -- código de informação adicional que irá relacionar o registro C110 com o 0450
               --
               vn_fase := 9.4;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || '0450' || '|';
               gl_conteudo := gl_conteudo || gn_codinf || '|';
               gl_conteudo := gl_conteudo || vv_descr || '|'; -- null
               --
               vn_fase := 9.5;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0450'
                                         , el_conteudo => gl_conteudo );
               --
               vn_fase := 9.6;
               --
               gn_qtde_reg_0450 := nvl(gn_qtde_reg_0450,0) + 1;
               --
               vn_fase := 9.7;
               --
               begin
                  vb_achou := vt_bi_tab_reg_0450(en_empresa_id).exists(gn_codinf);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 9.8;
               -- Só irá continuar a armazenar os registros no vetor caso o código ainda não exista
               if not vb_achou then
                  --
                  vn_fase := 9.9;
                  --
                  vt_bi_tab_reg_0450(en_empresa_id)(gn_codinf).cod_inf := gn_codinf;
                  --
               end if;
               --
               vn_fase := 9.10;
               --
               vtn_nfinforadic_id (gn_codinf) := r_obs_c110_quebra.nfinforadic_id;
               --
               if nvl(vn_tamanho,0) <= 0 then
                  exit;
               else
                  j := nvl(j,0) + 1;
               end if;
               --
            end loop; -- Quebra de informações adicionais
            --
         end loop; -- c_obs_c110_quebra
         --
         vn_fase := 11;
         -- Monta informação complementar referente ao registro C110 - Situação do Documento 08-Documento Fiscal emitido com base em Regime Especial ou Norma Específica
         open c_obs_c110_08;
         fetch c_obs_c110_08 into vn_existe;
            --
            vn_fase := 12;
            --
            if c_obs_c110_08%found then
               --
               vn_fase := 12.1;
               --
               begin
                  vb_achou := vt_bi_tab_reg_0450(en_empresa_id).exists('C110');
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 12.2;
               -- Só irá continuar a armazenar os registros no vetor caso o código ainda não exista
               if not vb_achou then
                  --
                  vn_fase := 12.3;
                  --
                  vt_bi_tab_reg_0450(en_empresa_id)('C110').cod_inf := 'C110';
                  --
                  -- cria a estrutura do registro separado por PIPE "|"
                  gl_conteudo := '|';
                  --
                  gl_conteudo := gl_conteudo || '0450' || '|';
                  gl_conteudo := gl_conteudo || 'C110' || '|';
                  gl_conteudo := gl_conteudo || 'INFORMACAO COMPLEMENTAR' || '|';
                  --
                  vn_fase := 12.4;
                  --
                  pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0450'
                                            , el_conteudo => gl_conteudo );
                  --
                  vn_fase := 12.5;
                  --
                  gn_qtde_reg_0450 := nvl(gn_qtde_reg_0450,0) + 1;
                  --
               end if;
               --
            end if;
            --
         close c_obs_c110_08;
         --
      end if; -- gn_dm_quebra_infadic_spedc = 0,1 -- 0-Não; 1-Sim - quebra informação adicional
      --
      vn_fase := 13;
      -- Monta informação complementar referente ao registro A110
      open c_obs_a110;
      fetch c_obs_a110 into vn_existe;
         --
         vn_fase := 14;
         --
         if c_obs_a110%found then
            --
            vn_fase := 14.1;
            --
            begin
               vb_achou := vt_bi_tab_reg_0450(en_empresa_id).exists('A110');
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 14.2;
            -- Só irá continuar a armazenar os registros no vetor caso o código ainda não exista
            if not vb_achou then
               --
               vn_fase := 14.3;
               --
               vt_bi_tab_reg_0450(en_empresa_id)('A110').cod_inf := 'A110';
               --
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || '0450' || '|';
               gl_conteudo := gl_conteudo || 'A110' || '|';
               gl_conteudo := gl_conteudo || 'INFORMACAO COMPLEMENTAR' || '|';
               --
               vn_fase := 14.4;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0450'
                                         , el_conteudo => gl_conteudo );
               --
               vn_fase := 14.5;
               --
               gn_qtde_reg_0450 := nvl(gn_qtde_reg_0450,0) + 1;
               --
            end if;
            --
         end if;
         --
      close c_obs_a110;
      --
   end if;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0450 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0450;
-----------------------------------------------------------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO C100: NOTA FISCAL (CÓDIGO 01), NOTA FISCAL AVULSA (CÓDIGO 1B), NOTA FISCAL DE PRODUTOR (CÓDIGO 04) E NFE (CÓDIGO 55)
--| Monta o REGISTRO C100: NOTA FISCAL/CONTA DE ENERGIA ELÉTRICA (CÓDIGO 55 COM CFOP VINCULADA AO TIPO DE OPERAÇÃO CD=4-ENERGIA ELÉTRICA E NÃO AUTORIZADA)
-----------------------------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_C100 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE ) IS
   --
   vn_fase         number := 0;
   vn_num_item     number(3) := null;
   vn_dm_mod_frete number(1) := null;
   vn_ind_frt      number(1) := null;
   vv_existe       varchar2(1) := null;
   vn_qtd          number;
   vv_cod_infor    infor_comp_dcto_fiscal.cod_infor%type := null;
   vn_indice       integer := 0;
   vn_codst_id_pis     cod_st.id%type := null;
   vn_codst_id_cofins  cod_st.id%type := null;
   --
   vb_achou      boolean := false;
   vv_indice     varchar2(20);
   vn_nro_ini    inutiliza_nota_fiscal.nro_ini%type;
   vtv_nro_ini   dbms_sql.varchar2_table;
   vtv_serie     dbms_sql.varchar2_table;
   vtv_modfiscal dbms_sql.varchar2_table;
   --
   vn_item_bruto   number;
   --
   cursor c_nf_inut is
   select mf.cod_mod
        , iu.serie
        , iu.nro_ini
        , iu.nro_fim
     from inutiliza_nota_fiscal iu
        , mod_fiscal            mf
    where iu.empresa_id    = en_empresa_id
      and iu.dm_situacao   = 2 -- Concluído (Envio e Retorno a SEFAZ com sucesso)
      and iu.dt_inut between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and mf.id            = iu.modfiscal_id
      and not exists (select nf.id from nota_fiscal nf where nf.inutilizanf_id = iu.id)
    order by iu.nro_ini;
   --
   cursor c_nf is
   select nf.id               notafiscal_id
        , nf.empresa_id
        , nf.dm_ind_oper
        , nf.dm_ind_emit
        , nf.dm_st_proc
        , mf.cod_mod
        , sd.cd               cod_sit
        , nf.serie
        , nf.nro_nf
        , nf.nro_chave_nfe
        , nf.dt_emiss
        , nf.dt_sai_ent
        , t.vl_total_nf      vl_doc
        , decode(nf.dm_ind_pag, 0, 0  -- À vista
                              , 1, 1  -- A prazo
                              , 2, 2  -- Sem pagamento/Outros
                              , 9, 2  -- Sem pagamento/Outros
                              ) dm_ind_pag
        , t.vl_desconto
        , t.vl_abat_nt
        , (nvl(t.vl_total_item,0) + nvl(t.vl_total_serv,0)+ nvl(t.vl_outra_despesas,0)) vl_total_item_serv
        , t.vl_frete
        , t.vl_seguro
        , t.vl_outra_despesas
        , t.vl_base_calc_icms
        , t.vl_imp_trib_icms
        , t.vl_base_calc_st
        , nvl(t.vl_imp_trib_st,0) + nvl(t.vl_fcp_st,0) vl_imp_trib_st  -- #53895
        , t.vl_imp_trib_ipi
        , (nvl(t.vl_imp_trib_pis,0) + nvl(t.vl_pis_iss,0))       vl_imp_trib_pis
        , (nvl(t.vl_imp_trib_cofins,0) + nvl(t.vl_cofins_iss,0)) vl_imp_trib_cofins
        , t.vl_ret_pis
        , t.vl_ret_cofins
        , nf.pessoa_id
        , nf.inforcompdctofiscal_id
        , t.vl_pis_st
        , t.vl_cofins_st
     from tmp_nota_fiscal    nf
        , mod_fiscal         mf
        , sit_docto          sd
        , nota_fiscal_total  t
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('01', '1B', '04', '55', '65')
      and sd.id              = nf.sitdocto_id
      and t.notafiscal_id    = nf.id
    order by nf.empresa_id
           , nf.dm_ind_emit
           , nf.dm_ind_oper
           , mf.cod_mod
           , nf.serie
           , nf.nro_nf;
   --
   cursor c_param ( en_notafiscal_id nota_fiscal.id%type ) is
   select distinct inf.cfop_id
        , imp.codst_id
     from tmp_item_nota_fiscal inf
        , tmp_imp_itemnf       imp
        , cod_st               cst
        , tipo_imposto         ti
    where inf.notafiscal_id = en_notafiscal_id
      and imp.itemnf_id     = inf.id
      and cst.id            = imp.codst_id
      and cst.cod_st   not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and ti.id             = imp.tipoimp_id
      and ti.cd             = 4; -- Utilizar somente o PIS
   --
   -- Utilizar a função pk_csf.fkg_converte( ev_string           in varchar2
   --                                      , en_espacamento      in number default 0
   --                                      , en_remove_spc_extra in number default 1
   --                                      , en_ret_carac_espec  in number default 1 ) para acertar o campo de texto
   --
   cursor c_c110 ( en_notafiscal_id nota_fiscal.id%type ) is
   select 'C110' cod_infor
        , ad.conteudo txt_compl
     from nfinfor_adic ad
    where ad.notafiscal_id = en_notafiscal_id
      and ad.dm_tipo       = 0 -- Contribuinte
      and ad.campo        is null
   union
   select 'C111' cod_infor
        , ''     txt_compl
     from nfinfor_adic ad
        , orig_proc    op
    where ad.notafiscal_id = en_notafiscal_id
      and ad.dm_tipo       = 2 -- processo
      and op.id            = ad.origproc_id
      and op.cd            in (1, 3, 9); --( 1-Justiça Federal / 3-Secex/RFB / 9-Outros )
   --
    cursor c_c110_quebra ( en_notafiscal_id nota_fiscal.id%type ) is
   select ad.id nfinforadic_id
        , nfi.cod_infor
        , ad.conteudo txt_compl
     from nfinfor_adic ad
        , INFOR_COMP_DCTO_FISCAl  nfi
    where ad.notafiscal_id = en_notafiscal_id
      and ad.infcompdctofis_id =  nfi.id
      and ad.dm_tipo       in (0,1) -- Contribuinte
      and ad.campo        is null
   union
   select ad.id nfinforadic_id
        , nfi.cod_infor
        , ''     txt_compl
     from nfinfor_adic ad
        , orig_proc    op
        , INFOR_COMP_DCTO_FISCAl  nfi
    where ad.notafiscal_id = en_notafiscal_id
      and ad.dm_tipo       = 2 -- processo
      and op.id            = ad.origproc_id
      and ad.infcompdctofis_id =  nfi.id
      and op.cd            in (1, 3, 9); --( 1-Justiça Federal / 3-Secex/RFB / 9-Outros )
   --
   --
   -- Utilizar a função pk_csf.fkg_converte( ev_string           in varchar2
   --                                      , en_espacamento      in number default 0
   --                                      , en_remove_spc_extra in number default 1
   --                                      , en_ret_carac_espec  in number default 1 ) para acertar o campo de texto
   --
   cursor c_c111 ( en_notafiscal_id nota_fiscal.id%type ) is
   select ad.conteudo num_proc
        , op.cd ind_proc
     from nfinfor_adic ad
        , orig_proc    op
    where ad.notafiscal_id = en_notafiscal_id
      and ad.dm_tipo       = 2 -- processo
      and op.id            = ad.origproc_id
      and op.cd            in (1, 3, 9); --( 1-Justiça Federal / 3-Secex/RFB / 9-Outros )
   --
   cursor c_c120 ( en_notafiscal_id nota_fiscal.id%type ) is
   select  nvl(di.dm_cod_doc_imp, 0) cod_doc_imp
        --, substr(di.nro_di,1,10) nro_di
        , di.nro_di nro_di
        , di.num_acdraw
        , nvl(sum(nvl(pis.pis_imp,0)),0) pis_imp
        , nvl(sum(nvl(cofins.cofins_imp,0)),0) cofins_imp
     from tmp_item_nota_fiscal inf
        , itemnf_dec_impor di
        , ( select i.itemnf_id
                 , i.vl_imp_trib pis_imp
              from tmp_imp_itemnf   i
                 , tipo_imposto ti
             where i.dm_tipo = 0 -- Imposto
               and ti.id     = i.tipoimp_id
               and ti.cd     = 15 ) pis -- Pis Importação
        , ( select i.itemnf_id
                 , i.vl_imp_trib cofins_imp
              from tmp_imp_itemnf   i
                 , tipo_imposto ti
             where i.dm_tipo = 0 -- Imposto
               and ti.id     = i.tipoimp_id
               and ti.cd     = 16 ) cofins -- Cofins Importação
    where inf.notafiscal_id   = en_notafiscal_id
      and di.itemnf_id        = inf.id
      and pis.itemnf_id(+)    = inf.id
      and cofins.itemnf_id(+) = inf.id
    group by  nvl(di.dm_cod_doc_imp, 0)
        , di.nro_di
        , di.num_acdraw;
   --
   cursor c_c170 ( en_notafiscal_id nota_fiscal.id%type ) is
   select
          itemnf_id
        , num_item
        , cod_item
        , item_id
        , descr_compl
        , qtd
        , unid
        , vl_item
        , vl_desc
        , ind_mov
        , cst_icms
        , cfop
        , cfop_id
        , vl_bc_icms
        , aliq_icms
        , vl_icms
        , vl_bc_icms_st
        , aliq_st
        , vl_icms_st
        , ind_apur
        , cst_ipi
        , cod_enq
        , vl_bc_ipi
        , aliq_ipi
        , vl_ipi
        , cst_pis
        , vl_bc_pis
        , aliq_pis
        , quant_bc_pis
        , vl_aliq_pis
        , vl_pis
        , codst_id_pis
        , cst_cofins
        , vl_bc_cofins
        , aliq_cofins
        , quant_bc_cofins
        , vl_aliq_cofins
        , vl_cofins
        , codst_id_cofins
        , cod_cta
        , natoper_id
     from TMP_GERA_ARQ_EFD_PC_REG_C170
     where notafiscal_id     = en_notafiscal_id
    order by num_item;
   --
   cursor c_c175 ( en_notafiscal_id nota_fiscal.id%type ) is
   select cfop
        , cfop_id
        , vl_item
        , vl_desc
        , cst_pis
        , codst_id_pis
        , vl_bc_pis
        , aliq_pis
        , quant_bc_pis
        , vl_aliq_pis
        , vl_pis
        , cst_cofins
        , codst_id_cofins
        , vl_bc_cofins
        , aliq_cofins
        , quant_bc_cofins
        , vl_aliq_cofins
        , vl_cofins
        , cod_cta
     from TMP_GERA_ARQ_EFD_PC_REG_C175
    where notafiscal_id = en_notafiscal_id
    order by cfop
        , cfop_id
        , cst_pis
        , codst_id_pis
        , aliq_pis
        , vl_aliq_pis
        , cst_cofins
        , codst_id_cofins
        , aliq_cofins
        , vl_aliq_cofins
        , cod_cta;
   --
BEGIN
   --
   vn_fase := 1;
   --
   vtv_nro_ini.delete;
   vtv_serie.delete;
   vtv_modfiscal.delete;
   --
   for rec_c100_inut in c_nf_inut
   loop
      --
      exit when c_nf_inut%notfound or (c_nf_inut%notfound) is null;
      --
      vn_fase := 1.1;
      --
      vn_nro_ini := rec_c100_inut.nro_ini;
      --
      loop
         --
         vn_fase := 1.2;
         --
         vv_indice := vn_nro_ini||trim(rec_c100_inut.serie)||trim(rec_c100_inut.cod_mod);
         --
         begin
            vb_achou := vtv_nro_ini.exists(vv_indice);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 1.3;
         --
         if not vb_achou then
            --
            vn_fase := 1.4;
            vtv_nro_ini(vv_indice)   := vn_nro_ini;
            vtv_serie(vv_indice)     := rec_c100_inut.serie;
            vtv_modfiscal(vv_indice) := rec_c100_inut.cod_mod;
            --
         end if;
         --
         vn_fase := 1.5;
         --
         if vn_nro_ini = rec_c100_inut.nro_fim then
            exit;
         else
            vn_nro_ini := vn_nro_ini + 1;
         end if;
         --
      end loop; -- vn_nro_ini .. rec_c100_inut.nro_fim
      --
   end loop; -- c_nf_inut
   --
   vn_fase := 1.6;
   vv_indice := vtv_nro_ini.first;
   --
   while vv_indice is not null
   loop
      --
      vn_fase := 1.7;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || 'C100' || '|';
      gl_conteudo := gl_conteudo || '1' || '|'; -- dm_ind_oper -- saída
      gl_conteudo := gl_conteudo || '0' || '|'; -- dm_ind_emit -- emissão própria
      gl_conteudo := gl_conteudo || '|'; -- cod_part
      gl_conteudo := gl_conteudo || vtv_modfiscal(vv_indice) || '|'; -- cod_mod
      gl_conteudo := gl_conteudo || '05' || '|'; -- cod_sit
      gl_conteudo := gl_conteudo || vtv_serie(vv_indice) || '|'; -- serie
      gl_conteudo := gl_conteudo || vtv_nro_ini(vv_indice) || '|'; -- nro_nf
      gl_conteudo := gl_conteudo || '|'; -- nro_chave_nfe
      gl_conteudo := gl_conteudo || '|'; -- dt_doc
      gl_conteudo := gl_conteudo || '|'; -- dt_e_s
      gl_conteudo := gl_conteudo || '|'; -- vl_doc
      gl_conteudo := gl_conteudo || '|'; -- ind_pgto
      gl_conteudo := gl_conteudo || '|'; -- vl_desc
      gl_conteudo := gl_conteudo || '|'; -- vl_abat_nt
      gl_conteudo := gl_conteudo || '|'; -- vl_merc
      gl_conteudo := gl_conteudo || '|'; -- ind_frt
      gl_conteudo := gl_conteudo || '|'; -- vl_frt
      gl_conteudo := gl_conteudo || '|'; -- vl_seg
      gl_conteudo := gl_conteudo || '|'; -- vl_out_da
      gl_conteudo := gl_conteudo || '|'; -- vl_bc_icms
      gl_conteudo := gl_conteudo || '|'; -- vl_icms
      gl_conteudo := gl_conteudo || '|'; -- vl_bc_icms_st
      gl_conteudo := gl_conteudo || '|'; -- vl_icms_st
      gl_conteudo := gl_conteudo || '|'; -- vl_ipi
      gl_conteudo := gl_conteudo || '|'; -- vl_pis
      gl_conteudo := gl_conteudo || '|'; -- vl_cofins
      gl_conteudo := gl_conteudo || '|'; -- vl_pis_st
      gl_conteudo := gl_conteudo || '|'; -- vl_cofins_st
      --
      vn_fase := 1.7;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C100'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_c100 := nvl(gn_qtde_reg_c100,0) + 1;
      --
      vv_indice := vtv_nro_ini.next(vv_indice);
      --
   end loop;
   --
   vn_fase := 1.8;
   --
   for rec_c100 in c_nf loop
      exit when c_nf%notfound or (c_nf%notfound) is null;
      --
      -- Pegar o valor total do item da nota para validação do campo vl_merc reg C100       
      begin
        select Sum(vl_item_bruto) as vl_item_total
          into vn_item_bruto
          from tmp_item_nota_fiscal
         where notafiscal_id = rec_c100.notafiscal_id;
      exception
        when others then
          null;
      end;
      --
      --
      vn_fase := 2;
      --
      if rec_c100.cod_mod = '55' and
         rec_c100.dm_st_proc = 4 then -- nota fiscal autorizada deve ser informada no registro C500
         --
         begin
            select 'S'
              into vv_existe
              from item_nota_fiscal it
                 , cfop             cf
                 , tipo_operacao    tp
             where it.notafiscal_id = rec_c100.notafiscal_id
               and cf.id            = it.cfop_id
               and tp.id            = cf.tipooperacao_id
               and tp.cd            = 4 -- Energia Eletrica
               and rownum           = 1;
         exception
            when others then
               vv_existe := 'N';
         end;
         --
      else
         --
         vv_existe := 'N'; -- S-Item com CFOP de Energia Elétrica (gerar no C500), N-Item sem CFOP de Energica Elétrica (gerar no C100)
         --
      end if;
      --
      vn_fase := 3;
      --
      if vv_existe = 'N' then -- S-Existe Item com CFOP de Energia Elétrica (gerar no C500), N-Não existe Item com CFOP de Energica Elétrica (gerar no C100)
         --
         vn_fase := 4;
         -- Verificar parâmetro de CFOP e CST de PIS para gerar o registro, não é necessário verificar a CST de COFINS
         for rec_param in c_param(rec_c100.notafiscal_id) loop
            exit when c_param%notfound or (c_param%notfound) is null;
         -- 
            vn_fase := 4.1;
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(rec_c100.empresa_id, rec_param.cfop_id, rec_param.codst_id, null)  = 1 and -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(rec_c100.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 0 then -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
               --
               vn_fase := 4.2;
               vv_existe := 'S';
               exit;
               --
            end if;
            --
         end loop;
         --
         vn_fase := 5;
         --
         if vv_existe = 'S' then
            --
            vn_fase := 6;
            --
            vn_dm_mod_frete := pk_csf.fkg_modfrete_nftransp (rec_c100.notafiscal_id);
            --
            vn_fase := 7;
            --
            if gt_row_abertura_efd_pc.dt_fin <= to_date('31/12/2011','dd/mm/rrrr') then
               --
               vn_fase := 7.1;
               --
               if vn_dm_mod_frete = 0 then
                  vn_ind_frt := 1; -- Por conta do emitente
               elsif vn_dm_mod_frete = 1 then
                     vn_ind_frt := 2; -- Por conta do destinatário
               elsif vn_dm_mod_frete = 2 then
                     vn_ind_frt := 0; -- Por conta de terceiros
               elsif vn_dm_mod_frete = 3 then
                     vn_ind_frt := 9; -- Sem frete
               elsif vn_dm_mod_frete = 9 then
                     vn_ind_frt := 9; -- Sem frete
               else
                  vn_ind_frt := 9;
               end if;
               --
            else
               --
               vn_fase := 7.2;
               --
               vn_ind_frt := vn_dm_mod_frete;
               --
            end if;
            --
            vn_fase := 8;
            --
            if rec_c100.dm_ind_oper = 0 and -- 0-entrada, 1-saída
               gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 then -- 1-Regime não-cumulativo, 2-Cumulativo, 3-Não-cumulativo e cumulativo
               --
               vn_fase := 9; -- Não deve ser gerado os registros C100 e filhos
               --
            else
               --
               vn_fase := 10;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               if rec_c100.cod_sit in ('02', '03', '04', '05') then
                  --
                  vn_fase := 11;
                  --
                  gl_conteudo := gl_conteudo || 'C100' || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_oper || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_emit || '|';
                  gl_conteudo := gl_conteudo || '|'; -- cod_part
                  gl_conteudo := gl_conteudo || rec_c100.cod_mod || '|';
                  gl_conteudo := gl_conteudo || rec_c100.cod_sit || '|';
                  gl_conteudo := gl_conteudo || rec_c100.serie || '|';
                  gl_conteudo := gl_conteudo || rec_c100.nro_nf || '|';
                  gl_conteudo := gl_conteudo || rec_c100.nro_chave_nfe || '|';
                  gl_conteudo := gl_conteudo || '|'; -- dt_doc
                  gl_conteudo := gl_conteudo || '|'; -- dt_e_s
                  gl_conteudo := gl_conteudo || '|'; -- vl_doc
                  gl_conteudo := gl_conteudo || '|'; -- ind_pgto
                  gl_conteudo := gl_conteudo || '|'; -- vl_desc
                  gl_conteudo := gl_conteudo || '|'; -- vl_abat_nt
                  gl_conteudo := gl_conteudo || '|'; -- vl_merc
                  gl_conteudo := gl_conteudo || '|'; -- ind_frt
                  gl_conteudo := gl_conteudo || '|'; -- vl_frt
                  gl_conteudo := gl_conteudo || '|'; -- vl_seg
                  gl_conteudo := gl_conteudo || '|'; -- vl_out_da
                  gl_conteudo := gl_conteudo || '|'; -- vl_bc_icms
                  gl_conteudo := gl_conteudo || '|'; -- vl_icms
                  gl_conteudo := gl_conteudo || '|'; -- vl_bc_icms_st
                  gl_conteudo := gl_conteudo || '|'; -- vl_icms_st
                  gl_conteudo := gl_conteudo || '|'; -- vl_ipi
                  gl_conteudo := gl_conteudo || '|'; -- vl_pis
                  gl_conteudo := gl_conteudo || '|'; -- vl_cofins
                  gl_conteudo := gl_conteudo || '|'; -- vl_pis_st
                  gl_conteudo := gl_conteudo || '|'; -- vl_cofins_st
                  --
               elsif rec_c100.cod_mod = '65' then
                  --
                  vn_fase := 12;
                  --
                  gl_conteudo := gl_conteudo || 'C100' || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_oper || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_emit || '|';
                  gl_conteudo := gl_conteudo || '|'; -- cod_part
                  gl_conteudo := gl_conteudo || rec_c100.cod_mod || '|';
                  gl_conteudo := gl_conteudo || rec_c100.cod_sit || '|';
                  gl_conteudo := gl_conteudo || rec_c100.serie || '|';
                  gl_conteudo := gl_conteudo || rec_c100.nro_nf || '|';
                  gl_conteudo := gl_conteudo || rec_c100.nro_chave_nfe || '|';
                  gl_conteudo := gl_conteudo || to_char(rec_c100.dt_emiss, 'ddmmrrrr') || '|';
                  --gl_conteudo := gl_conteudo || to_char(nvl(rec_c100.dt_sai_ent, rec_c100.dt_emiss), 'ddmmrrrr') || '|';
                  --
        if rec_c100.dm_ind_emit = 0 then -- Emissão própria
        --
        if rec_c100.dt_sai_ent is not null then
          --
          -- Se o mês de entrada/saída for maior que o mês da escrituração então atribui nulo.
          if to_char(rec_c100.dt_sai_ent, 'MM') > to_char(gt_row_abertura_efd_pc.dt_ini, 'MM') then
          --   
            gl_conteudo := gl_conteudo || '|';            
                           --
          else
                           --
            gl_conteudo := gl_conteudo || to_char(nvl(rec_c100.dt_sai_ent, rec_c100.dt_emiss), 'ddmmrrrr') || '|';
                           --
          end if;
          --
        elsif rec_c100.dm_ind_oper  = 1 then
          --        
            gl_conteudo := gl_conteudo || '|'; 
          --  
          else      
          --
          gl_conteudo := gl_conteudo || to_char(rec_c100.dt_sai_ent, 'ddmmrrrr') || '|'; 
          --
         end if;
        --
      else
        --    
        gl_conteudo := gl_conteudo || to_char(nvl(rec_c100.dt_sai_ent, rec_c100.dt_emiss), 'ddmmrrrr') || '|';
        --
      end if;                 
                 --
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_doc, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_pag || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_desconto, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_abat_nt, '9999999999990D99') || '|';
                 --
       if nvl(rec_c100.vl_total_item_serv,0) < vn_item_bruto then
         gl_conteudo := gl_conteudo || fkg_formata_num(vn_item_bruto, '9999999999990D99') || '|';
         else  
         gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_total_item_serv, '9999999999990D99') || '|';         
       end if;           
                 --
                  gl_conteudo := gl_conteudo || nvl(vn_ind_frt,9) || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_frete, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_seguro, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_outra_despesas, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_base_calc_icms, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_icms, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || '|'; -- vl_bc_icms_st
                  gl_conteudo := gl_conteudo || '|'; -- vl_icms_st
                  gl_conteudo := gl_conteudo || '|'; -- vl_ipi
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_pis, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_cofins, '9999999999990D99') || '|';
                 gl_conteudo := gl_conteudo || '|'; -- vl_pis_st
                 gl_conteudo := gl_conteudo || '|'; -- vl_cofins_st
                  --
               else
                  --
                  vn_fase := 13;
                  --
                  gl_conteudo := gl_conteudo || 'C100' || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_oper || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_emit || '|';
                  --gl_conteudo := gl_conteudo || trim( pk_csf.fkg_pessoa_cod_part (rec_c100.pessoa_id) ) || '|';
                  gl_conteudo := gl_conteudo || trim( pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part ( en_pessoa_id         => rec_c100.pessoa_id
                                                                                                   , en_tipo_retorna       => 1  -- 0-Pessoa_id / 1-Cod_Part    
                                                                                                   , en_origem_dado_pessoa => gn_origem_dado_pessoa                                            
                                                                                                   , en_notafiscal_id      => rec_c100.notafiscal_id ) ) || '|';
                  gl_conteudo := gl_conteudo || rec_c100.cod_mod || '|';
                  gl_conteudo := gl_conteudo || rec_c100.cod_sit || '|';
                  gl_conteudo := gl_conteudo || rec_c100.serie || '|';
                  gl_conteudo := gl_conteudo || rec_c100.nro_nf || '|';
                  gl_conteudo := gl_conteudo || rec_c100.nro_chave_nfe || '|';
                  gl_conteudo := gl_conteudo || to_char(rec_c100.dt_emiss, 'ddmmrrrr') || '|';                
                --gl_conteudo := gl_conteudo || to_char(nvl(rec_c100.dt_sai_ent, rec_c100.dt_emiss), 'ddmmrrrr') || '|';
                 --
        if rec_c100.dm_ind_emit = 0 then -- Emissão própria
        --
        if rec_c100.dt_sai_ent is not null then
          --
          -- Se o mês de entrada/saída for maior que o mês da escrituração então atribui nulo.
          if to_char(rec_c100.dt_sai_ent, 'MM') > to_char(gt_row_abertura_efd_pc.dt_ini, 'MM') then
          --   
            gl_conteudo := gl_conteudo  || '|';            
          else
                          --
            gl_conteudo := gl_conteudo || to_char(nvl(rec_c100.dt_sai_ent, rec_c100.dt_emiss), 'ddmmrrrr') || '|';
          end if;
          --
        elsif rec_c100.dm_ind_oper  = 1 then
          --        
            gl_conteudo := gl_conteudo  || '|'; 
          --  
          else      
          --
          gl_conteudo := gl_conteudo || to_char(rec_c100.dt_sai_ent, 'ddmmrrrr') || '|'; 
          --
         end if;
        --
      else
        --    
        gl_conteudo := gl_conteudo || to_char(nvl(rec_c100.dt_sai_ent, rec_c100.dt_emiss), 'ddmmrrrr') || '|';
        --
      end if;     
                 --
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_doc, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || rec_c100.dm_ind_pag || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_desconto, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_abat_nt, '9999999999990D99') || '|';
                 --
     if nvl(rec_c100.vl_total_item_serv, 0) < vn_item_bruto then
       gl_conteudo := gl_conteudo || fkg_formata_num(vn_item_bruto, '9999999999990D99') || '|';
     else
       gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_total_item_serv, '9999999999990D99') || '|';
     end if;                  
                 --
                  gl_conteudo := gl_conteudo || nvl(vn_ind_frt,9) || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_frete, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_seguro, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_outra_despesas, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_base_calc_icms, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_icms, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_base_calc_st, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_st, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_ipi, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_pis, '9999999999990D99') || '|';
                  gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_imp_trib_cofins, '9999999999990D99') || '|';
                 gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_pis_st, '9999999999990D99') || '|';
                 gl_conteudo := gl_conteudo || fkg_formata_num(rec_c100.vl_cofins_st, '9999999999990D99') || '|';
                  --
               end if; -- fim rec_c100.cod_mod in ('02', '03', '04', '05')
               --
               vn_fase := 14;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C100'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_c100 := nvl(gn_qtde_reg_c100,0) + 1;
               --
               vn_fase := 15;
               -- conforme "Exceção 1"
               if rec_c100.cod_sit not in ('02', '03', '04', '05') then
                  --
                  vn_fase := 16;
                  --
                  if rec_c100.cod_mod <> '65' then -- Nota de Consumidor Final: gerar o registro C175
                     --
                     vn_fase := 17;
                    --
                     if gn_dm_quebra_infadic_spedc = 0 then -- 0-Não quebra informação adicional
                        -- monta o REGISTRO C110: INFORMAÇÃO COMPLEMENTAR DA NOTA FISCAL (CÓDIGO 01, 1B, 04 e 55)
                        for rec_c110 in c_c110( rec_c100.notafiscal_id ) loop
                           exit when c_c110%notfound or (c_c110%notfound) is null;
                           --
                           vn_fase := 18;
                           -- cria a estrutura do registro separado por PIPE "|"
                           gl_conteudo := '|';
                           --
                           gl_conteudo := gl_conteudo || 'C110' || '|';
                           gl_conteudo := gl_conteudo || rec_c110.cod_infor || '|';
                           gl_conteudo := gl_conteudo || substr(pk_csf.fkg_converte(rec_c110.txt_compl), 1, 255) || '|';
                           --
                           vn_fase := 18.1;
                           --
                           pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C110'
                                                     , el_conteudo => gl_conteudo );
                           --
                           gn_qtde_reg_c110 := nvl(gn_qtde_reg_c110,0) + 1;
                           --
                        end loop;
                        --
                     else -- gn_dm_quebra_infadic_spedc = 1 -- 1-Sim, quebra informação adicional
                        --
                        vn_fase := 19;
                        --
                        for rec_c110_quebra in c_c110_quebra( rec_c100.notafiscal_id )
                        loop
                           --
                           exit when c_c110_quebra%notfound or (c_c110_quebra%notfound) is null;
                           --
                           vn_fase := 19.1;
                          /* vn_indice := nvl(vtn_nfinforadic_id.first,0);
                           --
                           loop
                              --
                              if nvl(vn_indice,0) = 0 then
                                 exit;
                              end if;*/
                              --
                              vn_fase := 19.2;
                              --
                             -- if vtn_nfinforadic_id (vn_indice) = rec_c110_quebra.nfinforadic_id then
                                 --
                                 vn_fase := 19.3;
                                 -- cria a estrutura do registro separado por PIPE "|"
                                 gl_conteudo := '|';
                                 --
                                 gl_conteudo := gl_conteudo || 'C110' || '|';
                                 gl_conteudo := gl_conteudo ||rec_c110_quebra.cod_infor  || '|';
                                 gl_conteudo := gl_conteudo ||  substr(pk_csf.fkg_converte(rec_c110_quebra.txt_compl), 1, 255) || '|';
                                 --
                                 vn_fase := 19.4;
                                 --
                                 pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C110'
                                                           , el_conteudo => gl_conteudo );
                                 --
                                 gn_qtde_reg_c110 := nvl(gn_qtde_reg_c110,0) + 1;
                                 --
                              --end if;
                              --
                              vn_fase := 19.5;
                              --
                              /*if vn_indice = vtn_nfinforadic_id.last then
                                 exit;
                              else
                                 vn_indice := vtn_nfinforadic_id.next(vn_indice);
                              end if;
                              --
                           end loop;*/
                           --
                        end loop;
                        --
                     end if; -- gn_dm_quebra_infadic_spedc = 0,1 -- 0-Não; 1-Sim - quebra informação adicional
                     --
                     vn_fase := 20;
                     --
                     if rec_c100.dm_ind_emit = 1 and -- Terceiros
                        nvl(rec_c100.inforcompdctofiscal_id,0) > 0 then -- nota possui informação complementar: gerar registro C110
                        --
                        vn_fase := 21;
                        vv_cod_infor := trim(pk_csf.fkg_infor_comp_dcto_fiscal_cod( en_inforcompdctofiscal_id => nvl(rec_c100.inforcompdctofiscal_id,0) ));
                        --
                        if vv_cod_infor is not null then
                           --
                           vn_fase := 22;
                           -- cria a estrutura do registro separado por PIPE "|"
                           gl_conteudo := '|';
                           --
                           gl_conteudo := gl_conteudo || 'C110' || '|';
                           gl_conteudo := gl_conteudo || vv_cod_infor || '|';
                           gl_conteudo := gl_conteudo ||  '|'; -- null -- texto
                           --
                           vn_fase := 23;
                           --
                           pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C110'
                                                     , el_conteudo => gl_conteudo );
                           --
                           gn_qtde_reg_c110 := nvl(gn_qtde_reg_c110,0) + 1;
                           --
                        end if;
                        --
                     end if;
                     --
                     vn_fase := 24;
                     -- monta o REGISTRO C111: PROCESSO REFERENCIADO
                     for rec_c111 in c_c111( rec_c100.notafiscal_id ) loop
                        exit when c_c111%notfound or (c_c111%notfound) is null;
                        --
                        vn_fase := 25;
                        -- cria a estrutura do registro separado por PIPE "|"
                        gl_conteudo := '|';
                        --
                        gl_conteudo := gl_conteudo || 'C111' || '|';
                        gl_conteudo := gl_conteudo || substr(pk_csf.fkg_converte(rec_c111.num_proc),1,20) || '|';
                        gl_conteudo := gl_conteudo || rec_c111.ind_proc || '|';
                        --
                        vn_fase := 26;
                        --
                        pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C111'
                                                  , el_conteudo => gl_conteudo );
                        --
                        gn_qtde_reg_c111 := nvl(gn_qtde_reg_c111,0) + 1;
                        --
                     end loop;
                     --
                     vn_fase := 27;
                     -- Monta o REGISTRO C120: OPERAÇÕES DE IMPORTAÇÃO (CÓDIGO 01)
                     if rec_c100.dm_ind_oper = 0 and rec_c100.cod_mod in ('01', '55') then -- Somente NF de Entrada
                        --
                        vn_fase := 28;
                        --
                        for rec_c120 in c_c120( rec_c100.notafiscal_id ) loop
                           exit when c_c120%notfound or (c_c120%notfound) is null;
                           --
                           vn_fase := 29;
                           -- cria a estrutura do registro separado por PIPE "|"
                           gl_conteudo := '|';
                           --
                           gl_conteudo := gl_conteudo || 'C120' || '|';
                           gl_conteudo := gl_conteudo || rec_c120.cod_doc_imp || '|';
                           gl_conteudo := gl_conteudo || rec_c120.nro_di || '|';
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c120.pis_imp, '9999999999990D99' ) || '|';
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c120.cofins_imp, '9999999999990D99' ) || '|';
                           gl_conteudo := gl_conteudo || rec_c120.num_acdraw || '|';
                           --
                           vn_fase := 30;
                           --
                           pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C120'
                                                     , el_conteudo => gl_conteudo );
                           --
                           gn_qtde_reg_c120 := nvl(gn_qtde_reg_c120,0) + 1;
                           --
                        end loop;
                        --
                     end if;
                     --
                     vn_fase := 31;
                     --
                     vn_num_item := 0;
                     -- Monta o REGISTRO C170: ITENS DO DOCUMENTO (CÓDIGO 01, 1B, 04 e 55)
                     for rec_c170 in c_c170( rec_c100.notafiscal_id ) loop
                        exit when c_c170%notfound or (c_c170%notfound) is null;
                        --
                        vn_fase := 32;
                        --
                        vn_num_item := nvl(vn_num_item,0) + 1; -- Sequencia continua até 3 casas
                        --
                        -- cria a estrutura do registro separado por PIPE "|"
                        gl_conteudo := '|';
                        --
                        gl_conteudo := gl_conteudo || 'C170' || '|';
                        gl_conteudo := gl_conteudo || vn_num_item || '|';
                        --
                        if nvl(rec_c170.item_id,0) <> 0 then
                           gl_conteudo := gl_conteudo || trim( pk_csf.fkg_Item_cod ( en_item_id => rec_c170.item_id ) ) || '|';
                        else
                           gl_conteudo := gl_conteudo || trim( pk_csf.fkg_Item_id_conf_empr ( en_empresa_id => en_empresa_id
                                                                                            , ev_cod_item   => rec_c170.cod_item ) ) || '|';
                        end if;
                        --
                        gl_conteudo := gl_conteudo || trim( rec_c170.descr_compl ) || '|';
                        --
                        vn_qtd := round(rec_c170.qtd,5);
                        --
                        if nvl(vn_qtd,0) <= 0 then
                           vn_qtd := 1;
                        end if;
                        --
                        gl_conteudo := gl_conteudo || fkg_formata_num( vn_qtd, '9999999999990D99999') || '|';
                        gl_conteudo := gl_conteudo || rec_c170.unid || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( round(rec_c170.vl_item,2), '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_desc, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || rec_c170.ind_mov || '|';
                        gl_conteudo := gl_conteudo || rec_c170.cst_icms || '|';
                        gl_conteudo := gl_conteudo || rec_c170.cfop || '|';
                        gl_conteudo := gl_conteudo || pk_csf.fkg_cod_nat_id( en_natoper_id => rec_c170.natoper_id ) || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_bc_icms, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.aliq_icms, '9990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_icms, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_bc_icms_st, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.aliq_st, '9990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_icms_st, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || rec_c170.ind_apur || '|';
                        gl_conteudo := gl_conteudo || rec_c170.cst_ipi || '|';
                        gl_conteudo := gl_conteudo || '|'; -- cod_enq
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_bc_ipi, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.aliq_ipi, '9990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_ipi, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || rec_c170.cst_pis || '|';
                        --
                        if nvl(rec_c170.quant_bc_pis,0) <> 0 then -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.quant_bc_pis, '9999999999990D999') || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_aliq_pis, '9999999999990D9999') || '|'; -- alíquota do pis em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_pis, '9999999999990D99') || '|'; -- valor do pis
                        else -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_bc_pis, '9999999999990D99') || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.aliq_pis, '9990D9999') || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- alíquota do pis em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_pis, '9999999999990D99') || '|'; -- valor do pis
                        end if;
                        --
                        gl_conteudo := gl_conteudo || rec_c170.cst_cofins || '|';
                        --
                        if nvl(rec_c170.quant_bc_cofins,0) <> 0 then -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.quant_bc_cofins, '9999999999990D999') || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_aliq_cofins, '9999999999990D9999') || '|'; -- alíquota do cofins em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_cofins, '9999999999990D99') || '|'; -- valor do cofins
                        else -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_bc_cofins, '9999999999990D99') || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.aliq_cofins, '9990D9999') || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- alíquota do cofins em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c170.vl_cofins, '9999999999990D99') || '|'; -- valor do cofins
                        end if;
                        --
                        gl_conteudo := gl_conteudo || rec_c170.cod_cta || '|';
                        --
                        vn_fase := 33;
                        --
                        pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C170'
                                                  , el_conteudo => gl_conteudo );
                        --
                        gn_qtde_reg_c170 := nvl(gn_qtde_reg_c170,0) + 1;
                        --
                     end loop; -- c_c170
                     --
                  else -- A partir de 01/09/2014 -- REGISTRO C175: REGISTRO ANALÍTICO DO DOCUMENTO (CÓDIGO 65)
                     --
                     vn_fase := 34;
                     --
                     for rec_c175 in c_c175( rec_c100.notafiscal_id ) loop
                        exit when c_c175%notfound or (c_c175%notfound) is null;
                        --
                        vn_fase := 35;
                        -- cria a estrutura do registro separado por PIPE "|"
                        gl_conteudo := '|';
                        --
                        gl_conteudo := gl_conteudo || 'C175' || '|';
                        gl_conteudo := gl_conteudo || rec_c175.cfop || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( round(rec_c175.vl_item,2), '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_desc, '9999999999990D99') || '|';
                        gl_conteudo := gl_conteudo || rec_c175.cst_pis || '|';
                        --
                        if nvl(rec_c175.quant_bc_pis,0) <> 0 then -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.quant_bc_pis, '9999999999990D999') || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_aliq_pis, '9999999999990D9999') || '|'; -- alíquota do pis em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_pis, '9999999999990D99') || '|'; -- valor do pis
                        else -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_bc_pis, '9999999999990D99') || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.aliq_pis, '9990D9999') || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- alíquota do pis em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_pis, '9999999999990D99') || '|'; -- valor do pis
                        end if;
                        --
                        gl_conteudo := gl_conteudo || rec_c175.cst_cofins || '|';
                        --
                        if nvl(rec_c175.quant_bc_cofins,0) <> 0 then -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.quant_bc_cofins, '9999999999990D999') || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_aliq_cofins, '9999999999990D9999') || '|'; -- alíquota do cofins em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_cofins, '9999999999990D99') || '|'; -- valor do cofins
                        else -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_bc_cofins, '9999999999990D99') || '|'; -- base de cálculo em valor
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.aliq_cofins, '9990D9999') || '|'; -- alíquota em percentual
                           gl_conteudo := gl_conteudo || '|'; -- base de cálculo em quantidade
                           gl_conteudo := gl_conteudo || '|'; -- alíquota do cofins em quantidade
                           gl_conteudo := gl_conteudo || fkg_formata_num( rec_c175.vl_cofins, '9999999999990D99') || '|'; -- valor do cofins
                        end if;
                        --
                        gl_conteudo := gl_conteudo || rec_c175.cod_cta || '|';
                        gl_conteudo := gl_conteudo || '|'; -- info_compl
                        --
                        vn_fase := 36;
                        --
                        pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C175'
                                                  , el_conteudo => gl_conteudo );
                        --
                        gn_qtde_reg_c175 := nvl(gn_qtde_reg_c175,0) + 1;
                        --
                     end loop; -- c_c175
                     --
                  end if; -- rec_c100.cod_mod not in ('65')
                  --
               end if; -- rec_c100.cod_sit not in ('02', '03', '04', '05')
               --
            end if; -- rec_c100.dm_ind_oper = 0 and dm_cod_inc_trib = 2
            --
         end if; -- vv_existe = 'N' -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim; e se a CFOP gera ajuste na consolidação m210: 0-não, 1-sim
         --
      end if; -- vv_existe = 'N' -- S-Existe Item com CFOP de Energia Elétrica (gerar no C500), N-Não existe Item com CFOP de Energica Elétrica (gerar no C100)
      --
   end loop; -- rec_c100
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_C100 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_C100;
------------------------------------------------------------
--| Monta o REGISTRO C010: IDENTIFICAÇÃO DO ESTABELECIMENTO
------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_C010 ( EN_EMPRESA_ID  IN  EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'C010' || '|';
   --
   vn_fase := 2;
   --
   gl_conteudo := gl_conteudo || pk_csf.fkg_cnpj_ou_cpf_empresa( en_empresa_id => en_empresa_id ) || '|';
   gl_conteudo := gl_conteudo || 2 || '|';
   --
   vn_fase := 3;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C010'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_c010 := nvl(gn_qtde_reg_c010,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_c010 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_C010;
-----------------------------------------------
--| Monta o REGISTRO C001: ABERTURA DO BLOCO C
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_C001 IS
   --
   vn_fase           number := 0;
   vn_qtde_c100_inut number := 0;
   vn_qtde_c100      number := 0;
   vn_qtde_c380      number := 0;
   vn_qtde_c400      number := 0;
   vn_qtde_c500      number := 0;
   vn_qtde_c500_55   number := 0;
   vn_qtde_c860      number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   --
   begin
      select count(1)
        into vn_qtde_c100_inut
        from r_empresa_abertura_efd_pc r
           , inutiliza_conhec_transp   ic
       where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
         and ic.empresa_id      = r.empresa_id
         and ic.dm_situacao     = 2 -- Concluído (Envio e Retorno a SEFAZ com sucesso)
         and ic.dt_inut   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and not exists   (select ct.id from TMP_conhec_transp ct where ct.inutilizaconhectransp_id = ic.id)
         and rownum             = 1; -- basta ter um registro para conferência dos dados
   exception
      when others then
         vn_qtde_c100_inut := 0;
   end;
   --
   vn_fase := 2;
   --
   if nvl(vn_qtde_c100_inut,0) = 0 then
      --
      vn_fase := 3;
      --
      begin
         select count(1)
           into vn_qtde_c100
           from r_empresa_abertura_efd_pc r
              , empresa                   em
              , TMP_nota_fiscal               nf
              , mod_fiscal                mf
              , TMP_item_nota_fiscal          inf
              , TMP_imp_itemnf                imp
              , cod_st                    cst
              , tipo_imposto              ti
              , cfop                      cf
              , tipo_operacao             tp
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and em.id              = r.empresa_id
            and nf.empresa_id      = em.id
            and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
            and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
            and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                  or
                 (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                  or
                 (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                  or
                 (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
            and mf.id              = nf.modfiscal_id
            and mf.cod_mod        in ('01', '1B', '04', '55', '65')
            and inf.notafiscal_id  = nf.id
            and imp.itemnf_id      = inf.id
            and cst.id             = imp.codst_id
            and ti.id              = imp.tipoimp_id
            and cst.cod_st    not in ('70','71','72','73','74','75') -- valores isentos de créditos
            and ti.cd              = 4 -- considerar somente o imposto pis
            and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
            and pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 0 -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            and cf.id              = inf.cfop_id
            and tp.id              = cf.tipooperacao_id
            and tp.cd             <> 4 -- Energia Elétrica
            and rownum             = 1; -- basta ter um registro para conferência dos dados
      exception
         when others then
            vn_qtde_c100 := 0;
      end;
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(vn_qtde_c100,0) = 0 then
      --
      vn_fase := 5;
      --
      begin
         select count(1)
           into vn_qtde_c380
           from r_empresa_abertura_efd_pc r
              , res_dia_nf_venda_cons     nf
              , mod_fiscal                mf
          where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
            and nf.empresa_id      = r.empresa_id
            and nf.dt_doc    between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
            and nf.dm_st_proc      = 1 -- Validada
            and mf.id              = nf.modfiscal_id
            and mf.cod_mod         = '02' -- Nota Fiscal de Venda a Consumidor
            and rownum             = 1; -- basta ter um registro para conferência dos dados
      exception
         when others then
            vn_qtde_c380 := 0;
      end;
      --
      vn_fase := 6;
      --
      if nvl(vn_qtde_c380,0) = 0 then
         --
         vn_fase := 7;
         --
         begin
            select count(1)
              into vn_qtde_c400
              from r_empresa_abertura_efd_pc r
                 , equip_ecf                 e
                 , mod_fiscal                mf
                 , TMP_reducao_z_ecf             rz
                 , TMP_doc_fiscal_emit_ecf       df
                 , TMP_it_doc_fiscal_emit_ecf    id
                 , res_dia_doc_ecf_pis       rd -- somente imposto PIS para conferência
             where r.aberturaefdpc_id     = gt_row_abertura_efd_pc.id
               and e.empresa_id           = r.empresa_id
               and mf.id                  = e.modfiscal_id
               and mf.cod_mod            in ('02', '2D')  -- Nota Fiscal de Venda a Consumidor e Cupom Fiscal
               and rz.equipecf_id         = e.id
               and rz.dt_doc        between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
               and rz.dm_st_proc          = 1 -- Validada
               and nvl(rz.vl_brt,0)       > 0
               and df.reducaozecf_id      = rz.id
               and id.docfiscalemitecf_id = df.id
               and rd.reducaozecf_id      = rz.id
               and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(e.empresa_id, id.cfop_id, rd.codst_id, null)  = 1 -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
               and pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(e.empresa_id, id.cfop_id, rd.codst_id, null) = 0 -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
               and rownum                 = 1; -- basta ter um registro para conferência dos dados
         exception
            when others then
               vn_qtde_c400 := 0;
         end;
         --
         vn_fase := 8;
         --
         if nvl(vn_qtde_c400,0) = 0 then
            --
            vn_fase := 9;
            --
            begin
               select sum(qtde)
                 into vn_qtde_c500
                 from ( select count(1) qtde
                         from r_empresa_abertura_efd_pc r
                            , empresa                   em
                            , TMP_nota_fiscal               nf
                            , mod_fiscal                mf
                            , nf_compl_oper_pis         pis
                            , cod_st                    cst
                        where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
                          and em.id              = r.empresa_id
                          and nf.empresa_id      = em.id
                          and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
                          and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
                          and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                                or
                               (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                                or
                               (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                                or
                               (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
                          and mf.id              = nf.modfiscal_id
                          and mf.cod_mod        in ('06', '28', '29')
                          and pis.notafiscal_id = nf.id
                          and cst.id            = pis.codst_id
                          and cst.cod_st   not in ('70','71','72','73','74','75') -- valores isentos de créditos
                          and rownum            = 1 -- basta ter um registro para conferência dos dados
                          union
                          select count(1)
                            from r_empresa_abertura_efd_pc re
                               , TMP_cupom_fiscal              cf
                               , mod_fiscal                mf
                           where re.aberturaefdpc_id  = gt_row_abertura_efd_pc.id
                             and cf.empresa_id        = re.empresa_id
                             and cf.dm_st_proc        = 4 -- 4-Autorizado
                             and cf.dt_emissao  between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
                             and mf.id                = cf.modfiscal_id
                             and mf.cod_mod           = '60' -- Cupom Fiscal Eletrônico
                             and rownum               = 1 -- basta ter um registro para conferência dos dados
                     );
            exception
               when others then
                  vn_qtde_c500 := 0;
            end;
            --
            vn_fase := 11;
            --
            if nvl(vn_qtde_c500,0) = 0 then
               --
               vn_fase := 11;
               --
               begin
                  select count(1)
                    into vn_qtde_c500_55
                    from r_empresa_abertura_efd_pc r
                       , empresa                   em
                       , TMP_nota_fiscal               nf
                       , mod_fiscal                mf
                       , TMP_item_nota_fiscal          it
                       , cfop                      cf
                       , tipo_operacao             tp
                   where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
                     and em.id              = r.empresa_id
                     and nf.empresa_id      = em.id
                     and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
                     and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
                     and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                           or
                          (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                           or
                          (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
                           or
                          (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
                     and mf.id              = nf.modfiscal_id
                     and mf.cod_mod         = '55'
                     and it.notafiscal_id   = nf.id
                     and cf.id              = it.cfop_id
                     and tp.id              = cf.tipooperacao_id
                     and tp.cd              = 4 -- Energia Elétrica
                     and rownum             = 1; -- basta ter um registro para conferência dos dados
               exception
                  when others then
                     vn_qtde_c500_55 := 0;
               end;
               --
               vn_fase := 12;
               --
               if nvl(vn_qtde_c500_55,0) = 0 then
                  --
                  vn_fase := 13;
                  --
                  begin
                     select count(1)
                       into vn_qtde_c860
                       from r_empresa_abertura_efd_pc re
                          , TMP_cupom_fiscal              cf
                          , mod_fiscal                mf
                      where re.aberturaefdpc_id  = gt_row_abertura_efd_pc.id
                        and cf.empresa_id        = re.empresa_id
                        and cf.dm_st_proc        = 4 -- 4-Autorizado
                        and cf.dt_emissao  between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
                        and mf.id                = cf.modfiscal_id
                        and mf.cod_mod           = '59' -- Cupom Fiscal Eletrônico
                        and rownum               = 1; -- basta ter um registro para conferência dos dados
                  exception
                     when others then
                        vn_qtde_c860 := 0;
                  end;
                  --
               end if; -- teste qtde de registro C500_55/C860
               --
            end if; -- teste qtde de registro C500
            --
         end if; -- teste qtde de registro C400
         --
      end if; -- teste qtde de registro C380
      --
   end if; -- teste qtde de registro C100
   --
   vn_fase := 14;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'C001' || '|';
   --
   if nvl(vn_qtde_c100_inut,0) > 0 or
      nvl(vn_qtde_c100,0) > 0 or
      nvl(vn_qtde_c380,0) > 0 or
      nvl(vn_qtde_c400,0) > 0 or
      nvl(vn_qtde_c500,0) > 0 or
      nvl(vn_qtde_c500_55,0) > 0 or
      nvl(vn_qtde_c860,0) > 0 then
      gl_conteudo := gl_conteudo || 0 || '|';
   else
      gl_conteudo := gl_conteudo || 1 || '|';
   end if;
   --
   vn_fase := 15;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'C001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_c001 := 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_C001 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_C001;
-------------------------------------------------------------------------------------------
--| Procedimento monta registros do BLOCO C: DOCUMENTOS FISCAIS I - MERCADORIAS (ICMS/IPI)
-------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_C IS
   --
   vn_fase           number := 0;
   vn_empresa_id_old empresa.id%type;
   vn_empresa_id_new empresa.id%type;
   vn_qtde           number := 0;
   --
   cursor c_emp is
   select r.empresa_id
     from r_empresa_abertura_efd_pc r
    where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
    order by 1;
   --
   cursor c_qtde_c100_inut(en_empresa_id in number) is
      select count(1)
        from inutiliza_conhec_transp ic
       where ic.empresa_id    = en_empresa_id
         and ic.dm_situacao   = 2 -- Concluído (Envio e Retorno a SEFAZ com sucesso)
         and ic.dt_inut between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
         and not exists (select ct.id from TMP_conhec_transp ct where ct.inutilizaconhectransp_id = ic.id)
         and rownum             = 1; -- basta ter um registro para conferência dos dados
   --
   cursor c_qtde_c100(en_empresa_id in number) is
   select count(1)
     from TMP_nota_fiscal       nf
        , mod_fiscal        mf
        , sit_docto         sd
        , TMP_nota_fiscal_total t
        , TMP_item_nota_fiscal  inf
        , TMP_imp_itemnf        imp
        , cod_st            cst
        , tipo_imposto      ti
        , cfop              cf
        , tipo_operacao     tp
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('01', '1B', '04', '55', '65')
      and sd.id              = nf.sitdocto_id
      and t.notafiscal_id    = nf.id
      and inf.notafiscal_id = nf.id
      and imp.itemnf_id     = inf.id
      and cst.id            = imp.codst_id
      and cst.cod_st   not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and ti.id             = imp.tipoimp_id
      and ti.cd             = 4 -- somente o imposto PIS para conferência
      and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
      and pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 0 -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
      and cf.id             = inf.cfop_id
      and tp.id             = cf.tipooperacao_id
      and tp.cd            <> 4 -- Energia Elétrica
      and rownum            = 1; -- basta ter um registro para conferência dos dados
   --
   cursor c_qtde_c380(en_empresa_id in number) is
   select count(1)
     from res_dia_nf_venda_cons      nf
        , mod_fiscal                 mf
        , res_dia_nf_venda_cons_canc c
    where nf.empresa_id             = en_empresa_id
      and nf.dt_doc           between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and nf.dm_st_proc             = 1 -- Validada
      and mf.id                     = nf.modfiscal_id
      and mf.cod_mod                = '02' -- Nota Fiscal de Venda a Consumidor
      and c.resdianfvendacons_id(+) = nf.id
      and rownum                    = 1; -- basta ter um registro para conferência dos dados
   --
   cursor c_qtde_c400(en_empresa_id in number) is
   select sum(qtde)
     from ( select count(1) qtde
              from equip_ecf              e
                 , mod_fiscal             mf
                 , TMP_reducao_z_ecf          rz
                 , TMP_doc_fiscal_emit_ecf    df
                 , TMP_it_doc_fiscal_emit_ecf id
                 , res_dia_doc_ecf_pis    rd -- somente imposto PIS para conferência
             where e.empresa_id           = en_empresa_id
               and mf.id                  = e.modfiscal_id
               and mf.cod_mod            in ('02', '2D')  -- Nota Fiscal de Venda a Consumidor e Cupom Fiscal
               and rz.equipecf_id         = e.id
               and rz.dt_doc        between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
               and rz.dm_st_proc          = 1 -- Validada
               and nvl(rz.vl_brt,0)       > 0
               and df.reducaozecf_id      = rz.id
               and id.docfiscalemitecf_id = df.id
               and rd.reducaozecf_id      = rz.id
               and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(e.empresa_id, id.cfop_id, rd.codst_id, null)  = 1 -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
               and pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(e.empresa_id, id.cfop_id, rd.codst_id, null) = 0 -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
               and rownum                 = 1 -- basta ter um registro para conferência dos dados
             union
            select count(1)
              from TMP_cupom_fiscal cf
                 , mod_fiscal   mf
             where cf.empresa_id       = en_empresa_id
               and cf.dm_st_proc       = 4 -- 4-Autorizado
               and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
               and mf.id               = cf.modfiscal_id
               and mf.cod_mod          = '60' -- Cupom Fiscal Eletrônico
               and rownum              = 1 -- basta ter um registro para conferência dos dados
          );
   --
   cursor c_qtde_c500(en_empresa_id in number) is
   select count(1)
     from TMP_nota_fiscal       nf
        , mod_fiscal        mf
        , sit_docto         sd
        , TMP_nota_fiscal_total t
        , nf_compl_oper_pis pis
        , cod_st            cst
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('06', '28', '29', '66')
      and sd.id              = nf.sitdocto_id
      and t.notafiscal_id    = nf.id
      and pis.notafiscal_id  = nf.id
      and cst.id             = pis.codst_id
      and cst.cod_st    not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and rownum            = 1; -- basta ter um registro para conferência dos dados
   --
   cursor c_qtde_c500_55(en_empresa_id in number) is
   select count(1)
     from TMP_nota_fiscal       nf
        , mod_fiscal        mf
        , sit_docto         sd
        , TMP_nota_fiscal_total t
        , TMP_item_nota_fiscal  it
        , cfop              cf
        , tipo_operacao     tp
    where nf.empresa_id      = en_empresa_id
      and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod         = '55'
      and sd.id              = nf.sitdocto_id
      and t.notafiscal_id    = nf.id
      and it.notafiscal_id   = nf.id
      and cf.id              = it.cfop_id
      and tp.id              = cf.tipooperacao_id
      and tp.cd              = 4 -- Energia Elétrica
      and rownum             = 1; -- basta ter um registro para conferência dos dados
   --
   cursor c_qtde_c860(en_empresa_id in number) is
   select count(1)
     from TMP_cupom_fiscal cf
        , mod_fiscal   mf
    where cf.empresa_id       = en_empresa_id
      and cf.dm_st_proc       = 4 -- 4-Autorizado
      and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and mf.id               = cf.modfiscal_id
      and mf.cod_mod          = '59' -- Cupom Fiscal Eletrônico
      and rownum              = 1; -- basta ter um registro para conferência dos dados
   --
BEGIN
   --
   vn_fase := 1;
   -- monta o REGISTRO C001: ABERTURA DO BLOCO C
   pkb_monta_reg_C001;
   --
   vn_fase := 2;
   --
   vn_empresa_id_old := 0;
   --
   for rec in c_emp loop
      exit when c_emp%notfound or (c_emp%notfound) is null;
      --
      vn_fase := 3;
      --
      vn_empresa_id_new := rec.empresa_id;
      --
      gn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa( en_empresa_id => rec.empresa_id );
      --
      vn_fase := 4;
      open c_qtde_c100_inut(en_empresa_id => rec.empresa_id);
      fetch c_qtde_c100_inut into vn_qtde;
      close c_qtde_c100_inut;
      --
      if nvl(vn_qtde,0) = 0 then
         --
         vn_fase := 5;
         open c_qtde_c100(en_empresa_id => rec.empresa_id);
         fetch c_qtde_c100 into vn_qtde;
         close c_qtde_c100;
         --
         if nvl(vn_qtde,0) = 0 then
            --
            vn_fase := 6;
            open c_qtde_c380(en_empresa_id => rec.empresa_id);
            fetch c_qtde_c380 into vn_qtde;
            close c_qtde_c380;
            --
            if nvl(vn_qtde,0) = 0 then
               --
               vn_fase := 7;
               open c_qtde_c400(en_empresa_id => rec.empresa_id);
               fetch c_qtde_c400 into vn_qtde;
               close c_qtde_c400;
               --
               if nvl(vn_qtde,0) = 0 then
                 --
                 vn_fase := 8;
                 open c_qtde_c500(en_empresa_id => rec.empresa_id);
                 fetch c_qtde_c500 into vn_qtde;
                 close c_qtde_c500;
                 --
                 if nvl(vn_qtde,0) = 0 then
                    --
                    vn_fase := 9;
                    open c_qtde_c500_55(en_empresa_id => rec.empresa_id);
                    fetch c_qtde_c500_55 into vn_qtde;
                    close c_qtde_c500_55;
                    --
                    if nvl(vn_qtde,0) = 0 then
                       --
                       vn_fase := 10;
                       open c_qtde_c860(en_empresa_id => rec.empresa_id);
                       fetch c_qtde_c860 into vn_qtde;
                       close c_qtde_c860;
                       --
                    end if;
                    --
                  end if;
                  --
               end if;
               --
            end if;
            --
         end if;
         ---
      end if;
      --
      vn_fase := 11;
      --
      if nvl(vn_qtde,0) > 0 then
         --
         vn_fase := 11;
         -- se a empresa new é diferente de empresa old
         if vn_empresa_id_new <> vn_empresa_id_old then
            --
            vn_fase := 12;
            -- registra empresa no C010
            pkb_monta_reg_c010 ( en_empresa_id => rec.empresa_id );
            --
            vn_empresa_id_old := vn_empresa_id_new;
            --
         end if;
         --
         vn_fase := 13;
         -- Monta o REGISTRO C010: IDENTIFICAÇÃO DO ESTABELECIMENTO (Feito de maneira dinâmica)
         -- monta o REGISTRO C100: NOTA FISCAL (CÓDIGO 01), NOTA FISCAL AVULSA (CÓDIGO 1B), NOTA FISCAL DE PRODUTOR (CÓDIGO 04) E NFE (CÓDIGO 55)
         pkb_monta_reg_C100(en_empresa_id => rec.empresa_id);
         -- REGISTRO C180: CONSOLIDAÇÃO DE NOTAS FISCAIS ELETRÔNICAS EMITIDAS PELA PESSOA JURÍDICA (CÓDIGO 55) - OPERAÇÕES DE VENDAS - *** Não será montado
         -- REGISTRO C190: CONSOLIDAÇÃO DE NOTAS FISCAIS ELETRÔNICAS (CÓDIGO 55) - OPERAÇÕES DE AQUISIÇÃO COM DIREITO A CRÉDITO, E OPERAÇÕES DE DEVOLUÇÃO DE COMPRAS E VENDAS.
         -- *** Não será montado
         --
         vn_fase := 14;
         -- REGISTRO C380: NOTA FISCAL DE VENDA A CONSUMIDOR (CÓDIGO 02) - CONSOLIDAÇÃO DE DOCUMENTOS EMITIDOS.
         pkb_monta_reg_C380(en_empresa_id => rec.empresa_id);
         -- REGISTRO C395: NOTAS FISCAIS DE VENDA A CONSUMIDOR (CÓDIGOS 02, 2D, 2E e 59) - AQUISIÇÕES/ENTRADAS COM CRÉDITO - *** Não será montado
         --
         vn_fase := 15;
         -- monta o REGISTRO C400 - EQUIPAMENTO ECF (CÓDIGO 02 e 2D) e REGISTRO C490 CUPOM FISCAL (CODIGO 60)
         pkb_monta_reg_C400(en_empresa_id => rec.empresa_id);
         --
         vn_fase := 16;
         -- Monta o REGISTRO C500: NOTA FISCAL/CONTA DE ENERGIA ELÉTRICA (CÓDIGO 06), NOTA FISCAL/CONTA DE FORNECIMENTO D'ÁGUA CANALIZADA (CÓDIGO 29) E NOTA FISCAL CONSUMO FORNECIMENTO DE GÁS (CÓDIGO 28) - DOCUMENTOS DE ENTRADA/AQUISIÇÃO COM CRÉDITO
         pkb_monta_reg_C500(en_empresa_id => rec.empresa_id);
         --
         vn_fase := 17;
         -- Monta o REGISTRO C600: CONSOLIDAÇÃO DIÁRIA NF modelos 06, 28, 29 - (EMPRESAS NÃO OBRIGADAS AO CONVÊNIO ICMS 115/03)
         -- *** Não será montado
         --
         -- Monta o REGISTRO C860: IDENTIFICAÇÃO DO EQUIPAMENTO SAT-CF-E
         pkb_monta_reg_C860(en_empresa_id => rec.empresa_id);
         --
      end if;
      --
   end loop;
   --
   vn_fase := 18;
   -- Monta o REGISTRO C990: ENCERRAMENTO DO BLOCO C
   pkb_monta_reg_C990;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_c fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_C;
---------------------------------------------------
--| Monta o REGISTRO A990: ENCERRAMENTO DO BLOCO A
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_A990 IS
BEGIN
   --
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gn_qtde_reg_a990 := 1;
   --
   gl_conteudo := gl_conteudo || 'A990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_a001
                                   + gn_qtde_reg_a010
                                   + gn_qtde_reg_a100
                                   + gn_qtde_reg_a110
                                   + gn_qtde_reg_a111
                                   + gn_qtde_reg_a120
                                   + gn_qtde_reg_a170
                                   + gn_qtde_reg_a990 ) || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A990'
                             , el_conteudo => gl_conteudo );

   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_a990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_A990;
--------------------------------------------------------------
--| Monta o REGISTRO A100: DOCUMENTO - NOTA FISCAL DE SERVIÇO
--------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_A100 (EN_EMPRESA_ID IN EMPRESA.ID%TYPE) IS
   --
   vn_fase           number := 0;
   vn_vl_bc_pis      imp_itemnf.vl_base_calc%type;
   vn_vl_pis         imp_itemnf.vl_imp_trib%type;
   vn_vl_bc_cofins   imp_itemnf.vl_base_calc%type;
   vn_vl_cofins      imp_itemnf.vl_imp_trib%type;
   vv_existe         varchar2(1) := null;
   vv_cod_infor      infor_comp_dcto_fiscal.cod_infor%type := null;
   --
   cursor c_nfs is
     select nf.empresa_id,
            nf.dm_ind_emit,
            nf.dm_ind_oper,
            p.cod_part,
            sd.cd sit_docto,
            nf.serie,
            nf.sub_serie,
            nvl(nfcs.nro_aut_nfs, nf.nro_nf) nro_nf,
            /*decode(nvl(nf.dm_ind_emit, 0),
                   0,
                   decode(nvl(nfcs.nro_aut_nfs, '0'),
                          '0',
                          decode(nvl(nf.nro_nf, 0), '0', 'SN', nf.nro_nf),
                          nvl(nfcs.nro_aut_nfs, '0')),
                   decode(nvl(nf.nro_nf, '0'), '0', 'SN', nf.nro_nf)) nro_nf,*/
            nf.pessoa_id,
            nfcs.chv_nfse,
            nf.dt_emiss,
            nf.dt_sai_ent,
            nvl(nfcs.dt_exe_serv, nf.dt_emiss) dt_exe_serv,
            nft.vl_total_item vl_doc,
            decode(nf.dm_ind_pag,
                   0, 0, -- À vista
                   1, 1, -- A prazo
                   2, 9, -- Sem pagamento/Outros
                   9,9 -- Sem pagamento/Outros
                   ) dm_ind_pag,
            nft.vl_desconto,
            nft.vl_ret_pis,
            nft.vl_ret_cofins,
            nft.vl_imp_trib_iss,
            nf.id notafiscal_id,
            nf.inforcompdctofiscal_id
       from TMP_nota_fiscal       nf,
            mod_fiscal        mf,
            pessoa            p,
            sit_docto         sd,
            nf_compl_serv     nfcs,
            TMP_nota_fiscal_total nft
      where nf.empresa_id      = en_empresa_id
        and nf.dm_st_proc      in (4, 7, 8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
        and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
        and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
        and mf.id                 = nf.modfiscal_id
        and mf.cod_mod            = '99' -- Somente serviços
        and p.id(+)               = nf.pessoa_id
        and sd.id                 = nf.sitdocto_id
        and nfcs.notafiscal_id(+) = nf.id
        and nft.notafiscal_id     = nf.id
      order by nf.empresa_id,
               nf.dm_ind_emit,
               nf.dm_ind_oper,
               p.cod_part,
               sd.cd,
               nf.serie,
               nf.sub_serie,
               /*decode(nvl(nf.dm_ind_emit, 0),
                      0,
                      decode(nvl(nfcs.nro_aut_nfs, '0'),
                             '0',
                             decode(nvl(nf.nro_nf, 0), '0', 'SN', nf.nro_nf),
                             nvl(nfcs.nro_aut_nfs, '0')),
                      decode(nvl(nf.nro_nf, '0'), '0', 'SN', nf.nro_nf))*/
               nvl(nfcs.nro_aut_nfs, nf.nro_nf);
   --
   cursor c_param ( en_notafiscal_id nota_fiscal.id%type ) is
     select distinct inf.cfop_id,
            imp.codst_id
       from TMP_item_nota_fiscal inf,
            TMP_imp_itemnf imp,
            cod_st cst,
            tipo_imposto ti
      where inf.notafiscal_id = en_notafiscal_id
        and imp.itemnf_id     = inf.id
        and cst.id            = imp.codst_id
        and cst.cod_st        not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
        and ti.id             = imp.tipoimp_id
        and ti.cd             = 4; -- somente o imposto PIS para conferência
   --
   cursor c_a110 ( en_notafiscal_id nota_fiscal.id%type ) is
     select 'A110' cod_infor,
            ad.conteudo txt_compl
       from nfinfor_adic ad
      where ad.notafiscal_id = en_notafiscal_id
        and ad.dm_tipo       = 0 -- Contribuinte
        and ad.campo         is null
    union
     select 'A111' cod_infor, '' txt_compl
       from nfinfor_adic ad,
            orig_proc op
      where ad.notafiscal_id = en_notafiscal_id
        and ad.dm_tipo       = 2 -- Processo
        and op.id            = ad.origproc_id;
   --
   cursor c_proc (en_notafiscal_id nota_fiscal.id%type) is
     select p.id,
            p.conteudo,
            op.cd ind_proc
       from nfinfor_adic p,
            orig_proc op
      where p.notafiscal_id = en_notafiscal_id
        and p.dm_tipo       = 2 -- Processo
        and op.id           = p.origproc_id
      order by p.id;
   --
   cursor c_imp (en_notafiscal_id nota_fiscal.id%type) is
     select inf.cfop_id,
            itcs.dt_pag_pis,
            itcs.dt_pag_cofins,
            itcs.dm_loc_exe_serv,
            nvl(sum(nvl(inf.vl_item_bruto, 0) - nvl(inf.vl_desc, 0)), 0) vl_tot_serv,
            ip.codst_id_pis,
            nvl(sum(nvl(ip.vl_bc_pis, 0)), 0) vl_bc_pis,
            nvl(sum(nvl(ip.vl_pis_imp, 0)), 0) vl_pis_imp,
            ic.codst_id_cofins,
            nvl(sum(nvl(ic.vl_bc_cofins, 0)), 0) vl_bc_cofins,
            nvl(sum(nvl(ic.vl_cofins_imp, 0)), 0) vl_cofins_imp
       from TMP_item_nota_fiscal inf,
            itemnf_compl_serv itcs,
            (select imp_pis.itemnf_id,
                    imp_pis.codst_id codst_id_pis,
                    nvl(sum(nvl(imp_pis.vl_base_calc, 0)), 0) vl_bc_pis,
                    nvl(sum(nvl(imp_pis.vl_imp_trib, 0)), 0) vl_pis_imp
               from TMP_imp_itemnf imp_pis, tipo_imposto ti_pis
              where imp_pis.dm_tipo = 0 -- IMPOSTO
                and ti_pis.id       = imp_pis.tipoimp_id
                and ti_pis.cd       = '4' -- Pis
            group by imp_pis.itemnf_id,
                     imp_pis.codst_id) ip,
            (select imp_cofins.itemnf_id,
                    imp_cofins.codst_id codst_id_cofins,
                    nvl(sum(nvl(imp_cofins.vl_base_calc, 0)), 0) vl_bc_cofins,
                    nvl(sum(nvl(imp_cofins.vl_imp_trib, 0)), 0) vl_cofins_imp
               from TMP_imp_itemnf imp_cofins, tipo_imposto ti_cofins
              where imp_cofins.dm_tipo = 0 -- IMPOSTO
                and ti_cofins.id       = imp_cofins.tipoimp_id
                and ti_cofins.cd       = '5' -- Cofins
              group by imp_cofins.itemnf_id,
                       imp_cofins.codst_id) ic
       where inf.notafiscal_id     = en_notafiscal_id
         and itcs.itemnf_id(+)     = inf.id
         and itcs.dm_ind_orig_cred = 1 -- Importação
         and ip.itemnf_id(+)       = inf.id
         and ic.itemnf_id(+)       = inf.id
       group by inf.cfop_id,
                itcs.dt_pag_pis,
                itcs.dt_pag_cofins,
                itcs.dm_loc_exe_serv,
                ip.codst_id_pis,
                ic.codst_id_cofins;
   --
   cursor c_item (en_notafiscal_id nota_fiscal.id%type) is
     select inf.id,
            inf.item_id,
            inf.nro_item,
            inf.cod_item,
            inf.descr_item,
            inf.vl_item_bruto,
            inf.vl_desc,
            bccpc.cd              nat_bc_cred,
            itcs.dm_ind_orig_cred,
            ip.codst_id_pis       codst_id_pis,
            ip.vl_bc_pis          vl_bc_pis,
            ip.aliq_apli_pis      aliq_pis,
            ip.vl_pis_imp         vl_pis,
            ic.codst_id_cofins    codst_id_cofins,
            ic.vl_bc_cofins       vl_bc_cofins,
            ic.aliq_apli_cofins   aliq_cofins,
            ic.vl_cofins_imp      vl_cofins,
            inf.cod_cta,
            cc.cod_ccus,
            inf.cfop_id
       from TMP_item_nota_fiscal inf,
            itemnf_compl_serv itcs,
            (select imp_pis.itemnf_id,
                    imp_pis.codst_id codst_id_pis,
                    nvl(imp_pis.vl_base_calc, 0) vl_bc_pis,
                    nvl(imp_pis.aliq_apli, 0) aliq_apli_pis,
                    nvl(imp_pis.vl_imp_trib, 0) vl_pis_imp
               from TMP_imp_itemnf imp_pis, tipo_imposto ti_pis
              where imp_pis.dm_tipo = 0 -- IMPOSTO
                and ti_pis.id = imp_pis.tipoimp_id
                and ti_pis.cd = '4') ip, -- Pis
            (select imp_cofins.itemnf_id,
                    imp_cofins.codst_id codst_id_cofins,
                    nvl(imp_cofins.vl_base_calc, 0) vl_bc_cofins,
                    nvl(imp_cofins.aliq_apli, 0) aliq_apli_cofins,
                    nvl(imp_cofins.vl_imp_trib, 0) vl_cofins_imp
               from TMP_imp_itemnf imp_cofins, tipo_imposto ti_cofins
              where imp_cofins.dm_tipo = 0 -- IMPOSTO
                and ti_cofins.id = imp_cofins.tipoimp_id
                and ti_cofins.cd = '5') ic, -- Cofins
             base_calc_cred_pc bccpc,
             centro_custo cc
       where inf.notafiscal_id = en_notafiscal_id
         and itcs.itemnf_id(+) = inf.id
         and ip.itemnf_id(+)   = inf.id
         and ic.itemnf_id(+)   = inf.id
         and bccpc.id(+)       = itcs.basecalccredpc_id
         and cc.id(+)          = itcs.centrocusto_id
       order by inf.nro_item;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec_a100 in c_nfs loop
      exit when c_nfs%notfound or (c_nfs%notfound) is null;
      --
      vn_fase := 1.1;
      --
      vv_existe := 'N';
      --
      -- Verificar parâmetro de CFOP e CST de PIS para gerar o registro, não é necessário verificar a CST de COFINS
      for rec_param in c_param(rec_a100.notafiscal_id) loop
         exit when c_param%notfound or (c_param%notfound) is null;
         --
         vn_fase := 1.2;
         if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(rec_a100.empresa_id, rec_param.cfop_id, rec_param.codst_id, null)  = 1 and -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
            pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(rec_a100.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 0 then -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            --
            vn_fase := 1.3;
            vv_existe := 'S';
            exit;
            --
         end if;
         --
      end loop;
      --
      vn_fase := 1.4;
      --
      if vv_existe = 'S' then
         --
         vn_fase := 2;
         -- Soma os impostos de PIS
         begin
            select nvl(sum(nvl(imp.vl_base_calc,0)),0)
                 , nvl(sum(nvl(imp.vl_imp_trib,0)),0)
              into vn_vl_bc_pis
                 , vn_vl_pis
              from TMP_item_nota_fiscal inf
                 , TMP_imp_itemnf imp
                 , tipo_imposto ti
             where inf.notafiscal_id = rec_a100.notafiscal_id
               and imp.itemnf_id     = inf.id
               and imp.dm_tipo       = 0 -- 0-Imposto, 1-Retido
               and ti.id             = imp.tipoimp_id
               and ti.cd             = '4'; -- PIS
         exception
            when others then
               vn_vl_bc_pis := 0;
               vn_vl_pis    := 0;
         end;
         --
         vn_fase := 3;
         -- Soma os impostos de COFINS
         begin
            select nvl(sum(nvl(imp.vl_base_calc,0)),0)
                 , nvl(sum(nvl(imp.vl_imp_trib,0)),0)
              into vn_vl_bc_cofins
                 , vn_vl_cofins
              from TMP_item_nota_fiscal inf
                 , TMP_imp_itemnf imp
                 , tipo_imposto ti
             where inf.notafiscal_id = rec_a100.notafiscal_id
               and imp.itemnf_id     = inf.id
               and imp.dm_tipo       = 0 -- 0-Imposto, 1-Retido
               and ti.id             = imp.tipoimp_id
               and ti.cd             = '5'; -- COFINS
         exception
            when others then
               vn_vl_bc_cofins := 0;
               vn_vl_cofins    := 0;
         end;
         --
         vn_fase := 4;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         if rec_a100.sit_docto in ('02', '03', '04', '05') then -- notas fiscais canceladas
            --
            gl_conteudo := gl_conteudo || 'A100' || '|';
            gl_conteudo := gl_conteudo || rec_a100.dm_ind_oper || '|';
            gl_conteudo := gl_conteudo || rec_a100.dm_ind_emit || '|';
            --
            if rec_a100.dm_ind_emit = 1 then -- terceiros - contratação de serviço
               gl_conteudo := gl_conteudo || trim(rec_a100.cod_part) || '|';   
            else
               gl_conteudo := gl_conteudo || '|';
            end if;
            --
            gl_conteudo := gl_conteudo || rec_a100.sit_docto || '|';
            gl_conteudo := gl_conteudo || rec_a100.serie || '|';
            gl_conteudo := gl_conteudo || '|'; -- sub_serie
            gl_conteudo := gl_conteudo || rec_a100.nro_nf || '|';
            gl_conteudo := gl_conteudo || '|'; -- chv_nfse
            gl_conteudo := gl_conteudo || '|'; -- dt_doc
            gl_conteudo := gl_conteudo || '|'; -- dt_exe_serv
            gl_conteudo := gl_conteudo || '|'; -- vl_doc
            gl_conteudo := gl_conteudo || '|'; -- dm_ind_pag
            gl_conteudo := gl_conteudo || '|'; -- vl_desconto
            gl_conteudo := gl_conteudo || '|'; -- vl_bc_pis
            gl_conteudo := gl_conteudo || '|'; -- vl_pis
            gl_conteudo := gl_conteudo || '|'; -- vl_bc_cofins
            gl_conteudo := gl_conteudo || '|'; -- vl_cofins
            gl_conteudo := gl_conteudo || '|'; -- vl_ret_pis
            gl_conteudo := gl_conteudo || '|'; -- vl_ret_cofins
            gl_conteudo := gl_conteudo || '|'; -- vl_imp_trib_iss
            --
         else
            --
            gl_conteudo := gl_conteudo || 'A100' || '|';
            gl_conteudo := gl_conteudo || rec_a100.dm_ind_oper || '|';
            gl_conteudo := gl_conteudo || rec_a100.dm_ind_emit || '|';
            --gl_conteudo := gl_conteudo || trim(rec_a100.cod_part) || '|';
            --
            if rec_a100.dm_ind_emit = 0 then -- emissão própria
               --
               if trim( pk_csf.fkg_cnpjcpf_pessoa_id ( rec_a100.pessoa_id ) ) = '99999999999' then -- en_pessoa_id = CPF
                  gl_conteudo := gl_conteudo || '|'; -- não preencher o código do participante
               else
                  --gl_conteudo := gl_conteudo || trim(rec_a100.cod_part) || '|';
                  gl_conteudo := gl_conteudo || trim( pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part ( en_pessoa_id          => rec_a100.pessoa_id
                                                                                                   , en_tipo_retorna       => 1  -- 0-Pessoa_id / 1-Cod_Part    
                                                                                                   , en_origem_dado_pessoa => gn_origem_dado_pessoa																						 
                                                                                                   , en_notafiscal_id      => rec_a100.notafiscal_id ) ) || '|';
               end if;
               --
            else -- rec_a100.dm_ind_emit = 1 then -- terceiro
               --
               gl_conteudo := gl_conteudo || trim(rec_a100.cod_part) || '|';
               --
            end if;
            --
            gl_conteudo := gl_conteudo || rec_a100.sit_docto || '|';
            gl_conteudo := gl_conteudo || rec_a100.serie || '|';
            gl_conteudo := gl_conteudo || rec_a100.sub_serie || '|';
            gl_conteudo := gl_conteudo || rec_a100.nro_nf || '|';
            gl_conteudo := gl_conteudo || pk_csf.fkg_converte(rec_a100.chv_nfse) || '|';
            --
            --gl_conteudo := gl_conteudo || to_char(rec_a100.dt_doc, 'ddmmrrrr') || '|'; -- dt_doc
            if rec_a100.dm_ind_emit = 1 then -- terceiro
               gl_conteudo := gl_conteudo || to_char(nvl(rec_a100.dt_sai_ent,rec_a100.dt_emiss), 'ddmmrrrr') || '|';
            elsif rec_a100.dm_ind_emit = 0 and rec_a100.dm_ind_oper = 1 then -- emissão própria e saída
                  gl_conteudo := gl_conteudo || to_char(rec_a100.dt_emiss, 'ddmmrrrr') || '|';
            elsif rec_a100.dm_ind_emit = 0 and rec_a100.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 then -- emissão própria, entrada e escritura por entrada
                  gl_conteudo := gl_conteudo || to_char(rec_a100.dt_emiss, 'ddmmrrrr') || '|';
            elsif rec_a100.dm_ind_emit = 0 and rec_a100.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 then -- emissão própria, entrada e escritura por saída
                  gl_conteudo := gl_conteudo || to_char(nvl(rec_a100.dt_sai_ent,rec_a100.dt_emiss), 'ddmmrrrr') || '|';
            else -- valor default
               gl_conteudo := gl_conteudo || to_char(rec_a100.dt_emiss, 'ddmmrrrr') || '|';
            end if;
            --
            --gl_conteudo := gl_conteudo || to_char(rec_a100.dt_exe_serv, 'ddmmrrrr') || '|';
            gl_conteudo := gl_conteudo || to_char(nvl(rec_a100.dt_exe_serv,rec_a100.dt_emiss), 'ddmmrrrr') || '|'; -- dt_exe_serv
            --
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_a100.vl_doc, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || rec_a100.dm_ind_pag || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_a100.vl_desconto, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(vn_vl_bc_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(vn_vl_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(vn_vl_bc_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(vn_vl_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_a100.vl_ret_pis, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_a100.vl_ret_cofins, '9999999999990D99') || '|';
            gl_conteudo := gl_conteudo || fkg_formata_num(rec_a100.vl_imp_trib_iss, '9999999999990D99') || '|';
            --
         end if; -- rec_a100.sit_docto in ('02', '03', '04', '05')
         --
         vn_fase := 5;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A100'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_a100 := nvl(gn_qtde_reg_a100,0) + 1;
         --
         vn_fase := 6;
         --
         if rec_a100.sit_docto not in ('02', '03', '04', '05') then -- notas fiscais não canceladas
            -- Detalhes da nota Fiscal de seviços EFD
            --
            vn_fase := 7;
            -- monta o REGISTRO A110: INFORMAÇÃO COMPLEMENTAR DA NOTA FISCAL
            for rec_a110 in c_a110( rec_a100.notafiscal_id ) loop
               exit when c_a110%notfound or (c_a110%notfound) is null;
               --
               vn_fase := 8;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'A110' || '|';
               gl_conteudo := gl_conteudo || rec_a110.cod_infor || '|';
               gl_conteudo := gl_conteudo || substr(pk_csf.fkg_converte(rec_a110.txt_compl), 1, 255) || '|';
               --
               vn_fase := 9;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A110'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_a110 := nvl(gn_qtde_reg_a110,0) + 1;
               --
            end loop;
            --
            vn_fase := 10;
            --
            if rec_a100.dm_ind_emit = 1 and -- Terceiros
               nvl(rec_a100.inforcompdctofiscal_id,0) > 0 then -- nota possui informação complementar: gerar registro A110
               --
               vn_fase := 11;
               vv_cod_infor := trim(pk_csf.fkg_infor_comp_dcto_fiscal_cod( en_inforcompdctofiscal_id => nvl(rec_a100.inforcompdctofiscal_id,0) ));
               --
               if vv_cod_infor is not null then
                  --
                  vn_fase := 12;
                  -- cria a estrutura do registro separado por PIPE "|"
                  gl_conteudo := '|';
                  --
                  gl_conteudo := gl_conteudo || 'A110' || '|';
                  gl_conteudo := gl_conteudo || vv_cod_infor || '|';
                  gl_conteudo := gl_conteudo ||  '|'; -- null -- texto
                  --
                  vn_fase := 13;
                  --
                  pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A110'
                                            , el_conteudo => gl_conteudo );
                  --
                  gn_qtde_reg_a110 := nvl(gn_qtde_reg_a110,0) + 1;
                  --
               end if;
               --
            end if;
            --
            vn_fase := 14;
            -- REGISTRO A111: PROCESSO REFERENCIADO
            for rec_a111 in c_proc(rec_a100.notafiscal_id) loop
               exit when c_proc%notfound or (c_proc%notfound) is null;
               --
               vn_fase := 15;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'A111' || '|';
               gl_conteudo := gl_conteudo || pk_csf.fkg_converte(rec_a111.conteudo) || '|';
               gl_conteudo := gl_conteudo || rec_a111.ind_proc || '|';
               --
               vn_fase := 16;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A111'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_a111 := nvl(gn_qtde_reg_a111,0) + 1;
               --
            end loop;
            --
            vn_fase := 17;
            -- REGISTRO A120: INFORMAÇÃO COMPLEMENTAR - OPERAÇÕES DE IMPORTAÇÃO
            for rec_a120 in c_imp(rec_a100.notafiscal_id) loop
               exit when c_imp%notfound or (c_imp%notfound) is null;
               --
               vn_fase := 18;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'A120' || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a120.vl_tot_serv, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a120.vl_bc_pis, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a120.vl_pis_imp, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || to_char(rec_a120.dt_pag_pis, 'ddmmrrrr') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a120.vl_bc_cofins, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a120.vl_cofins_imp, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || to_char(rec_a120.dt_pag_cofins, 'ddmmrrrr') || '|';
               gl_conteudo := gl_conteudo || rec_a120.dm_loc_exe_serv || '|';
               --
               vn_fase := 19;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A120'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_a120 := nvl(gn_qtde_reg_a120,0) + 1;
               --
            end loop;
            --
            vn_fase := 20;
            -- REGISTRO A170: COMPLEMENTO DO DOCUMENTO - ITENS DO DOCUMENTO
            for rec_a170 in c_item(rec_a100.notafiscal_id) loop
               exit when c_item%notfound or (c_item%notfound) is null;
               --
               vn_fase := 21;
               -- cria a estrutura do registro separado por PIPE "|"
               gl_conteudo := '|';
               --
               gl_conteudo := gl_conteudo || 'A170' || '|';
               gl_conteudo := gl_conteudo || rec_a170.nro_item || '|';
               gl_conteudo := gl_conteudo || trim(rec_a170.cod_item) || '|';
               gl_conteudo := gl_conteudo || substr(trim(pk_csf.fkg_converte(rec_a170.descr_item)),1,255) || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.vl_item_bruto, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.vl_desc, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || rec_a170.nat_bc_cred || '|';
               --
               if gt_row_versao_layout_efd_pc.cd >= '004' then
                  --
                  if rec_a100.dm_ind_oper = 1 then -- 0-entrada, 1-saída
                     gl_conteudo := gl_conteudo || '' || '|';
                  else -- if rec_a100.dm_ind_oper = 0 -- 0-entrada, 1-saída
                     gl_conteudo := gl_conteudo || rec_a170.dm_ind_orig_cred || '|';
                  end if;
                  --
               else
                  --
                  gl_conteudo := gl_conteudo || rec_a170.dm_ind_orig_cred || '|';
                  --
               end if;
               --
               gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod( rec_a170.codst_id_pis ) || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.vl_bc_pis, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.aliq_pis, '999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.vl_pis, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || pk_csf.fkg_cod_st_cod( rec_a170.codst_id_cofins ) || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.vl_bc_cofins, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.aliq_cofins, '999990D99') || '|';
               gl_conteudo := gl_conteudo || fkg_formata_num(rec_a170.vl_cofins, '9999999999990D99') || '|';
               gl_conteudo := gl_conteudo || trim(rec_a170.cod_cta) || '|';
               gl_conteudo := gl_conteudo || trim(rec_a170.cod_ccus) || '|';
               --
               vn_fase := 22;
               --
               pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A170'
                                         , el_conteudo => gl_conteudo );
               --
               gn_qtde_reg_a170 := nvl(gn_qtde_reg_a170,0) + 1;
               --
            end loop;
            --
         end if; -- rec_a100.sit_docto not in ('02', '03', '04', '05')
         --
      end if; -- vv_existe = 'N'
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_a100 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_A100;
------------------------------------------------------------
--| Monta o REGISTRO A010: IDENTIFICAÇÃO DO ESTABELECIMENTO
------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_A010 ( EN_EMPRESA_ID  IN  EMPRESA.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || 'A010' || '|';
   --
   vn_fase := 2;
   --
   gl_conteudo := gl_conteudo || pk_csf.fkg_cnpj_ou_cpf_empresa( en_empresa_id => en_empresa_id ) || '|';
   --
   vn_fase := 3;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A010'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_a010 := nvl(gn_qtde_reg_a010,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_a010 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_A010;
------------------------------------------------------------
--| Procedimento Monta o REGISTRO A001: ABERTURA DO BLOCO A
------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_A001 IS
   --
   vn_fase      number := 0;
   vn_qtde_a100 number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   --
   begin
      select count(1)
        into vn_qtde_a100
        from r_empresa_abertura_efd_pc r
           , empresa                   em
           , TMP_nota_fiscal               nf
           , mod_fiscal                mf
           , TMP_item_nota_fiscal          inf
           , TMP_imp_itemnf                imp
           , cod_st                    cst
           , tipo_imposto              ti
       where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
         and em.id              = r.empresa_id
         and nf.empresa_id      = em.id
         and nf.dm_st_proc     in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
         and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod         = '99' -- somente serviços
         and inf.notafiscal_id  = nf.id
         and imp.itemnf_id      = inf.id
         and cst.id             = imp.codst_id
         and cst.cod_st    not in ('70','71','72','73','74','75') -- valores isentos de créditos
         and ti.id              = imp.tipoimp_id
         and ti.cd              = 4 -- somente o imposto PIS para conferência
         and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
         and pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 0 -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
         and rownum             = 1; -- basta ter um registro para conferência dos dados
   exception
      when others then
         vn_qtde_a100 := 0;
   end;
   --
   vn_fase := 2;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   gl_conteudo := gl_conteudo || 'A001' || '|';
   --
   vn_fase := 3;
   --
   if nvl(vn_qtde_a100,0) > 0 then
      gl_conteudo := gl_conteudo || '0' || '|'; -- Bloco com dados informados
   else
      gl_conteudo := gl_conteudo || '1' || '|'; -- Bloco sem dados informados
   end if;
   --
   vn_fase := 4;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => 'A001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_a001 := 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_a001 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_A001;
--------------------------------------------------------------------------------------------------
--| Procedimento monta registros do BLOCO A: DOCUMENTOS FISCAIS - SERVIÇOS (NÃO SUJEITOS AO ICMS)
--------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_A IS
   --
   vn_fase           number := 0;
   vn_empresa_id_old empresa.id%type;
   vn_empresa_id_new empresa.id%type;
   vn_qtde           number := 0 ;
   --
   cursor c_emp is
   select r.empresa_id
     from r_empresa_abertura_efd_pc r
    where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
    order by 1;
   --
   cursor c_qtde_nfs(en_empresa_id in number) is
   select count(1) qtde
     from TMP_nota_fiscal       nf
        , mod_fiscal        mf
        , pessoa            p
        , sit_docto         sd
        , nf_compl_serv     nfcs
        , TMP_nota_fiscal_total nft
        , TMP_item_nota_fiscal  inf
        , TMP_imp_itemnf        imp
        , cod_st            cst
        , tipo_imposto ti
    where nf.empresa_id         = en_empresa_id
      and nf.dm_st_proc        in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc    = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id                 = nf.modfiscal_id
      and mf.cod_mod            = '99' -- somente serviços
      and p.id(+)               = nf.pessoa_id
      and sd.id                 = nf.sitdocto_id
      and nfcs.notafiscal_id(+) = nf.id
      and nft.notafiscal_id     = nf.id
      and inf.notafiscal_id     = nf.id
      and imp.itemnf_id         = inf.id
      and cst.id                = imp.codst_id
      and cst.cod_st       not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and ti.id                 = imp.tipoimp_id
      and ti.cd                 = 4
      and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
      and pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(nf.empresa_id, inf.cfop_id, imp.codst_id, null) = 0 -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
      and rownum                = 1; -- basta ter um registro para conferência dos dados
   --
BEGIN
   --
   vn_fase := 1;
   -- Monta o REGISTRO A010: IDENTIFICAÇÃO DO ESTABELECIMENTO (montado se existir movimento)
   vn_empresa_id_old := 0;
   --
   vn_fase := 2;
   -- Monta o REGISTRO A001: ABERTURA DO BLOCO A
   pkb_monta_reg_a001;
   --
   vn_fase := 3;
   --
   for rec in c_emp loop
      exit when c_emp%notfound or (c_emp%notfound) is null;
      --
      vn_fase := 4;
      vn_empresa_id_new := rec.empresa_id;
      --
      gn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa( en_empresa_id => rec.empresa_id );
      --
      open c_qtde_nfs(en_empresa_id => rec.empresa_id);
      fetch c_qtde_nfs into vn_qtde;
      close c_qtde_nfs;
      --
      vn_fase := 5;
      --
      if nvl(vn_qtde,0) > 0 then
         --
         vn_fase := 6;
         -- se a empresa new é deferente de empresa old
         if vn_empresa_id_new <> vn_empresa_id_old then
            --
            vn_fase := 7;
            -- registra empresa no A010
            pkb_monta_reg_a010 ( en_empresa_id => rec.empresa_id );
            --
            vn_fase := 8;
            vn_empresa_id_old := vn_empresa_id_new;
            --
         end if;
         --
         vn_fase := 9;
         -- Monta o REGISTRO A100: DOCUMENTO - NOTA FISCAL DE SERVIÇO
         pkb_monta_reg_a100(en_empresa_id => rec.empresa_id);
         --
      end if;
      --
   end loop;
   --
   vn_fase := 10;
   -- Monta o REGISTRO A990: ENCERRAMENTO DO BLOCO A
   pkb_monta_reg_a990;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_bloco_a fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_BLOCO_A;
---------------------------------------------------
--| Monta o REGISTRO 0990: ENCERRAMENTO DO BLOCO 0
---------------------------------------------------
PROCEDURE PKB_MONTA_REG_0990 IS
BEGIN
   --
   gn_qtde_reg_0990 := 1;
   --
   -- Cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || '0990' || '|';
   gl_conteudo := gl_conteudo || ( gn_qtde_reg_0000 +
                                   gn_qtde_reg_0001 +
                                   gn_qtde_reg_0035 +
                                   gn_qtde_reg_0100 +
                                   gn_qtde_reg_0110 +
                                   gn_qtde_reg_0111 +
                                   gn_qtde_reg_0120 +
                                   gn_qtde_reg_0140 +
                                   gn_qtde_reg_0145 +
                                   gn_qtde_reg_0150 +
                                   gn_qtde_reg_0190 +
                                   gn_qtde_reg_0200 +
                                   gn_qtde_reg_0205 +
                                   gn_qtde_reg_0206 +
                                   gn_qtde_reg_0208 +
                                   gn_qtde_reg_0400 +
                                   gn_qtde_reg_0450 +
                                   gn_qtde_reg_0500 +
                                   gn_qtde_reg_0600 +
                                   gn_qtde_reg_0900 +
                                   gn_qtde_reg_0990
                                  )
                              || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0990'
                             , el_conteudo => gl_conteudo );
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0990: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0990;
--------------------------------------------
--| Monta o REGISTRO 0600: CENTRO DE CUSTOS
--------------------------------------------
--
-- A rotina foi alterada para utilizar um indexador sequencial devido as situações:
-- Se a rotina utilizava o ID do centro de custo como indexador, ocorriam repetições por possuírem COD_CCUS iguais em empresas diferentes.
-- Se a rotina utilizava o ID do centro de custo como indexador, ocorriam erros devido a qtde de carateres numéricos, pois a variável aceita até 9 caracteres.
-- Se a rotina utilizava o COD_CCUS como indexador, ocorriam erros pois podem existir caracteres letras ou passar do tamanho de 9 caracteres.
-- Para verificar esses processos, as versões anteriores estão no repositório.
--
PROCEDURE PKB_MONTA_REG_0600 ( EN_CENTROCUSTO_ID IN CENTRO_CUSTO.ID%type ) IS
   --
   vn_fase       number := 0;
   i             pls_integer;
   vd_dt_inc_alt centro_custo.dt_inc_alt%type;
   vv_cod_ccus   centro_custo.cod_ccus%type;
   vv_descr_ccus centro_custo.descr_ccus%type;
   --
   cursor c_ccus is
   select cc.cod_ccus
     from centro_custo cc
    where cc.id = en_centrocusto_id;
   --
   cursor c_0600 is
   select cc.dt_inc_alt
        , cc.cod_ccus
        , cc.descr_ccus
     from centro_custo cc
    where cc.id = en_centrocusto_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   vd_dt_inc_alt := null;
   vv_cod_ccus   := null;
   vv_descr_ccus := null;
   --
   open c_ccus;
   fetch c_ccus into vv_cod_ccus;
   close c_ccus;
   --
   vn_fase := 2;
   --
   i := nvl(vt_tab_reg_0600.first,0);
   --
   vn_fase := 3;
   --
   loop
      --
      vn_fase := 4;
      --
      if nvl(i,0) = 0 then
         --
         vn_fase := 5;
         --
         i := i + 1;
         --
         open c_0600;
         fetch c_0600 into vd_dt_inc_alt
                         , vv_cod_ccus
                         , vv_descr_ccus;
         close c_0600;
         --
         vn_fase := 6;
         --
         exit;
      end if;
      --
      vn_fase := 7;
      --
      if vt_tab_reg_0600(i).cod_ccus = vv_cod_ccus then
         --
         vn_fase := 8;
         --
         exit;
         --
      end if;
      --
      vn_fase := 9;
      --
      if i = vt_tab_reg_0600.last then
         --
         vn_fase := 10;
         --
         i := i + 1;
         --
         open c_0600;
         fetch c_0600 into vd_dt_inc_alt
                         , vv_cod_ccus
                         , vv_descr_ccus;
         close c_0600;
         --
         vn_fase := 11;
         --
         exit;
         --
      else
         --
         vn_fase := 12;
         --
         i := vt_tab_reg_0600.next(i);
         --
      end if;
      --
   end loop;
   --
   vn_fase := 13;
   --
   if vd_dt_inc_alt is not null then
      --
      vn_fase := 14;
      --
      vt_tab_reg_0600(i).cod_ccus := vv_cod_ccus;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '0600' || '|';
      gl_conteudo := gl_conteudo || to_char(vd_dt_inc_alt, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || vv_cod_ccus || '|';
      gl_conteudo := gl_conteudo || vv_descr_ccus || '|';
      --
      vn_fase := 15;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0600'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_0600 := nvl(gn_qtde_reg_0600,0) + 1;
      --
   end if;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0600 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0600;

------------------------------------------------------------------------------------------------
--| Monta o REGISTRO 0900: COMPOSIÇÃO DAS RECEITAS DO PERÍODO - RECEITA BRUTA E DEMAIS RECEITAS
------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0900 IS
  --
  vn_fase number := 0;
  --
  cursor c_0900 is
    select *
      from abertura_efd_comp_rec_per a
     where a.aberturaefdpc_id = gt_row_abertura_efd_pc.id;
  --
BEGIN 
  -- 
  vn_fase := 1;
  --
  for rec_0900 in c_0900 loop
    exit when c_0900%notfound or(c_0900%notfound) is null;
    --
    vn_fase := 2;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || '0900' || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_bloco_a || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_nrb_bloco_a || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_bloco_c || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_nrb_bloco_c || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_bloco_d || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_nrb_bloco_d || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_bloco_f || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_nrb_bloco_f || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_bloco_i || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_nrb_bloco_i || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_bloco_1 || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_nrb_bloco_1 || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_periodo || '|';
    gl_conteudo := gl_conteudo || rec_0900.rec_total_nrb_periodo || '|';
    --
    vn_fase := 3;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '0900',
                              el_conteudo => gl_conteudo);
    --
  
    gn_qtde_reg_0900 := nvl(gn_qtde_reg_0900, 0) + 1;
    --
  end loop; -- rec_0900
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_0900 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_0900;

--------------------------------------------------------------------
--| Monta o REGISTRO 0400: TABELA DE NATUREZA DA OPERAÇÃO/PRESTAÇÃO
--------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0400 ( EN_EMPRESA_ID IN EMPRESA.ID%TYPE
                             , EN_NATOPER_ID IN NAT_OPER.ID%TYPE ) IS
   --
   vn_fase  number := 0;
   vb_achou boolean := false;
   --
   cursor c_natoper is
   select nop.*
     from nat_oper nop
    where nop.id = en_natoper_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   begin
      vb_achou := vt_bi_tab_reg_0400(en_empresa_id).exists(en_natoper_id);
   exception
      when others then
         vb_achou := false;
   end;
   --
   vn_fase := 2;
   --
   if not vb_achou then
      --
      vn_fase := 3;
      --
      for rec in c_natoper loop
         exit when c_natoper%notfound or (c_natoper%notfound) is null;
         --
         vn_fase := 4;
         --
         vt_bi_tab_reg_0400(en_empresa_id)(en_natoper_id).cod_nat := rec.cod_nat;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '0400' || '|';
         gl_conteudo := gl_conteudo || rec.cod_nat || '|';
         gl_conteudo := gl_conteudo || rec.descr_nat || '|';
         --
         vn_fase := 5;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0400'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_0400 := nvl(gn_qtde_reg_0400,0) + 1;
         --
      end loop;
      --
   end if;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0400 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0400;
----------------------------------------------------------------
--| Monta o REGISTRO 0190: IDENTIFICAÇÃO DAS UNIDADES DE MEDIDA
----------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0190 ( EN_EMPRESA_ID  IN  EMPRESA.ID%TYPE
                             , EN_UNIDADE_ID  IN  UNIDADE.ID%type ) IS
   --
   vn_fase         number := 0;
   vb_achou        boolean := false;
   vn_multorg_id   mult_org.id%type;
   --
   cursor c_unid is
   select distinct u.sigla_unid, u.descr
     from unidade u
    where u.id         = en_unidade_id
	  and u.multorg_id = vn_multorg_id;
   --
BEGIN
   --
   vn_fase := 1;
   --   
   vn_multorg_id := pk_csf.fkg_multorg_id_empresa(en_empresa_id => EN_EMPRESA_ID);
   --
   for rec in c_unid loop
      exit when c_unid%notfound or (c_unid%notfound) is null;
      --
      vn_fase := 2;
      --
      begin
         vb_achou := vt_bi_tab_reg_0190(en_empresa_id).exists(upper(rec.sigla_unid));
      exception
         when others then
            vb_achou := false;
      end;
      --
      vn_fase := 3;
      --
      if not vb_achou then
         --
         vn_fase := 4;
         --
         vt_bi_tab_reg_0190(en_empresa_id)(upper(rec.sigla_unid)).unid := upper(rec.sigla_unid);
         --
         vn_fase := 5;
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '0190' || '|';
         gl_conteudo := gl_conteudo || upper(rec.sigla_unid) || '|';
         gl_conteudo := gl_conteudo || rec.descr || '|';
         --
         vn_fase := 6;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0190'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_0190 := NVL(gn_qtde_reg_0190,0) + 1;
         --
      end if;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0190 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0190;
--------------------------------------------------------------------------------
--| Monta o REGISTRO 0200: TABELA DE IDENTIFICAÇÃO DO ITEM (PRODUTO E SERVIÇOS)
--------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0200(EN_EMPRESA_ID IN EMPRESA.ID%TYPE,
                             EN_ITEM_ID    IN ITEM.ID%TYPE) IS
  --
  vn_fase     number := 0;
  vb_achou    boolean := false;
  vv_cod_item item.cod_item%type;
  --
  procedure pkb_cria_0200(en_empresa_id in empresa.id%type,
                          en_item_id    in item.id%TYPE) is
    --
    cursor c_item is
      select i.id           item_id,
             i.cod_item,
             i.descr_item,
             i.cod_barra,
             i.cod_ant_item,
             ti.cd          tipo_item,
             n.cod_ncm,
             ex.cod_ex_tipi ex_ipi,
             g.cod_gen,
             ts.cod_lst,
             i.aliq_icms,
             i.unidade_id,
             i.empresa_id
        from item         i,
             tipo_item    ti,
             ncm          n,
             genero       g,
             ex_tipi      ex,
             tipo_servico ts
       where i.id = en_item_id
         and ti.id(+) = i.tipoitem_id
         and n.id(+) = i.ncm_id
         and g.id(+) = n.genero_id
         and ex.id(+) = i.extipi_id
         and ts.id(+) = i.tpservico_id
       order by i.cod_item;
    --
    cursor c_alter(en_item_id item.id%type) is
      select ai.descr_ant_item, ai.dt_ini, ai.dt_fim, ai.cod_ant_item
        from alter_item ai
       where ai.item_id = en_item_id
         and ai.dt_ini >= gt_row_abertura_efd_pc.dt_ini
         and ai.dt_fim <= gt_row_abertura_efd_pc.dt_fin;
    --
    cursor c_anp(en_item_id item.id%type) is
      select cod_prod_anp from item_anp where item_id = en_item_id;
    --
    cursor c_marca(en_item_id item.id%type) is
      select dm_cod_tab, cod_gru, marca_com
        from item_marca_comerc
       where item_id = en_item_id;
    --
  begin
    --  
    vn_fase := 2;
    --
    for rec_it in c_item loop
      exit when c_item%notfound or(c_item%notfound) is null;
      --
/*      pkb_monta_reg_0190(en_empresa_id => rec_it.empresa_id,
                         en_unidade_id => rec_it.unidade_id);*/
      --
      vn_fase := 3;
      --
      vt_bi_tab_reg_0200(en_empresa_id)(trim(rec_it.cod_item)).cod_item := rec_it.cod_item;
      --
      vn_fase := 4;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '0200' || '|';
      gl_conteudo := gl_conteudo || rec_it.cod_item || '|';
      gl_conteudo := gl_conteudo || substr(trim(pk_csf.fkg_converte(rec_it.descr_item)),
                                           1,
                                           255) || '|';
      gl_conteudo := gl_conteudo || rec_it.cod_barra || '|';
      gl_conteudo := gl_conteudo || rec_it.cod_ant_item || '|';
      gl_conteudo := gl_conteudo ||
                     pk_csf.fkg_Unidade_sigla(rec_it.unidade_id) || '|';
      gl_conteudo := gl_conteudo || rec_it.tipo_item || '|';
      gl_conteudo := gl_conteudo || rec_it.cod_ncm || '|';
      gl_conteudo := gl_conteudo || rec_it.ex_ipi || '|';
      gl_conteudo := gl_conteudo || rec_it.cod_gen || '|';
      --
      if gt_row_abertura_efd_pc.dt_ini >=
         to_date('01/03/2015', 'dd/mm/rrrr') then
        -- versão sped 1.18 - Março/2015
        gl_conteudo := gl_conteudo || rec_it.cod_lst || '|'; -- formato XX.XX ou sem o ponto XXXX
      else
        gl_conteudo := gl_conteudo || replace(rec_it.cod_lst, '.', '') || '|';
      end if;
      --
      gl_conteudo := gl_conteudo ||
                     fkg_formata_num(rec_it.aliq_icms, '990D99') || '|';
      --
      vn_fase := 5;
      --  
      pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '0200',
                                el_conteudo => gl_conteudo);
      --
      gn_qtde_reg_0200 := nvl(gn_qtde_reg_0200, 0) + 1;
      --
      vn_fase := 6;
      -- monta o REGISTRO 0205: ALTERAÇÃO DO ITEM
      for rec_al in c_alter(rec_it.item_id) loop
        exit when c_alter%notfound or(c_alter%notfound) is null;
        --
        vn_fase := 7;
        -- cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || '0205' || '|';
        gl_conteudo := gl_conteudo || rec_al.descr_ant_item || '|';
        gl_conteudo := gl_conteudo || to_char(rec_al.dt_ini, 'ddmmrrrr') || '|';
        gl_conteudo := gl_conteudo || to_char(rec_al.dt_fim, 'ddmmrrrr') || '|';
        gl_conteudo := gl_conteudo || rec_al.cod_ant_item || '|';
        --
        vn_fase := 8;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '0205',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_0205 := nvl(gn_qtde_reg_0205, 0) + 1;
        --
      end loop;
      --
      vn_fase := 9;
      -- monta o REGISTRO 0206: CÓDIGO DE PRODUTO CONFORME TABELA PUBLICADA PELA ANP (COMBUSTÍVEIS)
      for rec_anp in c_anp(rec_it.item_id) loop
        exit when c_anp%notfound or(c_anp%notfound) is null;
        --
        vn_fase := 10;
        -- cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || '0206' || '|';
        gl_conteudo := gl_conteudo || rec_anp.cod_prod_anp || '|';
        --
        vn_fase := 11;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '0206',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_0206 := nvl(gn_qtde_reg_0206, 0) + 1;
        --
      end loop;
      --
      vn_fase := 12;
      -- REGISTRO 0208: CÓDIGO DE GRUPOS POR MARCA COMERCIAL - REFRI (BEBIDAS FRIAS)
      for rec_m in c_marca(rec_it.item_id) loop
        exit when c_marca%notfound or(c_marca%notfound) is null;
        --
        vn_fase := 13;
        -- cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || '0208' || '|';
        gl_conteudo := gl_conteudo || rec_m.dm_cod_tab || '|';
        gl_conteudo := gl_conteudo || rec_m.cod_gru || '|';
        gl_conteudo := gl_conteudo || rec_m.marca_com || '|';
        --
        vn_fase := 14;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '0208',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_0208 := nvl(gn_qtde_reg_0208, 0) + 1;
        --
      end loop;
      --
    end loop;
    --
  end pkb_cria_0200;
  --
BEGIN
  --
  vn_fase := 1;
  --
  if nvl(en_item_id, 0) > 0 then
    --
    vn_fase := 1.1;
    --
    vv_cod_item := trim(pk_csf.fkg_Item_cod(en_item_id => en_item_id));
    --
    vn_fase := 1.2;
    --
    vb_achou := false;
    --
    begin
      vb_achou := vt_bi_tab_reg_0200(en_empresa_id).exists(vv_cod_item);
    exception
      when others then
        vb_achou := false;
    end;
    --
    vn_fase := 1.3;
    --
    if not vb_achou then
      --
      vn_fase := 1.4;
      --
      pkb_cria_0200(en_empresa_id => en_empresa_id,
                    en_item_id    => en_item_id);
      --
    end if;
    --
  end if;
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_0200 fase(' || vn_fase || '): ' ||
                     sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_0200;
--------------------------------------------------------------
--| Monta o REGISTRO 0150: TABELA DE CADASTRO DO PARTICIPANTE
--------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0150 ( EN_EMPRESA_ID       IN  EMPRESA.ID%TYPE
                             , EN_PESSOA_ID        IN  PESSOA.ID%TYPE 
                             , EN_NOTAFISCAL_ID    IN  NOTA_FISCAL.ID%TYPE  DEFAULT NULL 
                             , EN_CONHECTRANSP_ID  IN  CONHEC_TRANSP.ID%TYPE  DEFAULT NULL ) IS
   --
   i                 pls_integer; 
   v                 pls_integer;   
   --   
   vn_fase           number := 0;
   vb_achou          boolean := false;
   vn_cpf            number := null;
   vn_cnpj           number := null;
   vv_ie             juridica.ie%type := null;
   vv_suframa        juridica.suframa%type := null;  
   vv_cod_part_docto pessoa.cod_part%TYPE;     
   --
   cursor c_part is
--1
   select 0                             as origem_dado_pessoa
        , p.id                          as pessoa_id
        , p.cod_part
        , pk_csf.fkg_converte(p.nome)   as nome
        , pa.cod_siscomex
        , c.ibge_cidade
        , pk_csf.fkg_converte(p.lograd) as lograd
        , pk_csf.fkg_converte(p.nro)    as nro
        , pk_csf.fkg_converte(p.compl)  as compl
        , pk_csf.fkg_converte(p.bairro) as bairro
        , null                          as cpf
        , null                          as ie
        , null                          as suframa    
     from pessoa  p
        , cidade  c
        , pais    pa
    where p.id                   = en_pessoa_id
      and c.id                   = p.cidade_id
      and pa.id(+)               = p.pais_id
      and gn_origem_dado_pessoa  = 0 -- Padrão    
    union  
--2
   select 1                                               origem_dado_pessoa
        , n.pessoa_id                                     pessoa_id
        , trim(d.cnpj)                                    cod_part
        , trim(substr(d.nome,1,100))                      nome
        , p.cod_siscomex
        , to_char(d.cidade_ibge)                          ibge_cidade
        , pk_csf.fkg_converte(substr(d.lograd,1,60))      lograd
        , pk_csf.fkg_converte(substr(trim(d.nro), 1, 10)) nro
        , pk_csf.fkg_converte(d.compl)                    compl
        , pk_csf.fkg_converte(d.bairro)                   bairro
        , d.cpf                                           cpf
        , d.ie                                            ie
        , d.suframa                                       suframa
     from tmp_nota_fiscal  n
        , mod_fiscal       m   
        , nota_fiscal_dest d
        , pais             p 
        , cidade           c
    where gn_origem_dado_pessoa  = 1 -- Documento Fiscal   
      and n.id                   = en_notafiscal_id
      and n.dm_ind_emit          = 0 -- Emissão Propria
      and m.id                   = n.modfiscal_id
      and m.cod_mod              not in ('21', '22')  -- Telecomunicação   
      and d.notafiscal_id        = n.id
      and p.cod_siscomex         = d.cod_pais
      and c.ibge_cidade          = d.cidade_ibge 
      and n.pessoa_id is not null  -- inicio, nf emissao própria sem pessoa id        
    union     
--3
   select 1                                               origem_dado_pessoa
        , n.pessoa_id                                     pessoa_id
        , trim(d.cnpj)||trim(d.cpf)||trim(d.cidade_ibge)  cod_part
        , trim(substr(d.nome,1,100))                      nome
        , p.cod_siscomex
        , to_char(d.cidade_ibge)                          ibge_cidade
        , pk_csf.fkg_converte(substr(d.lograd,1,60))      lograd
        , pk_csf.fkg_converte(substr(trim(d.nro), 1, 10)) nro
        , pk_csf.fkg_converte(d.compl)                    compl
        , pk_csf.fkg_converte(d.bairro)                   bairro
        , d.cpf                                           cpf
        , d.ie                                            ie
        , d.suframa                                       suframa
     from tmp_nota_fiscal  n
        , mod_fiscal       m   
        , nota_fiscal_dest d
        , pais             p 
        , cidade           c
    where gn_origem_dado_pessoa  = 1 -- Documento Fiscal   
      and n.id                   = en_notafiscal_id
      and n.dm_ind_emit          = 0 -- Emissão Propria
      and m.id                   = n.modfiscal_id
      and m.cod_mod              not in ('21', '22')  -- Telecomunicação   
      and n.pessoa_id            is null
      and d.notafiscal_id        = n.id
      and p.cod_siscomex         = d.cod_pais
      and c.ibge_cidade          = d.cidade_ibge 
    union --fim   nf emissao própria sem pessoa id   

--4
   select 1                                               origem_dado_pessoa
        , n.pessoa_id                                     pessoa_id
        , nvl(trim(e.cnpj),pe.cod_part)                   cod_part		
        , trim(substr(e.nome,1,100))                      nome
        , p.cod_siscomex
        , to_char(e.cidade_ibge)                          ibge_cidade
        , pk_csf.fkg_converte(substr(e.lograd,1,60))      lograd
        , pk_csf.fkg_converte(substr(trim(e.nro), 1, 10)) nro
        , pk_csf.fkg_converte(e.compl)                    compl
        , pk_csf.fkg_converte(e.bairro)                   bairro
        , e.cpf                                           cpf
        , e.ie                                            ie
        , e.suframa                                       suframa
     from tmp_nota_fiscal  n
        , mod_fiscal       m   
        , nota_fiscal_emit e
        , pais             p 
        , cidade           c
        , pessoa           pe		
    where gn_origem_dado_pessoa  = 1 -- Documento Fiscal   
      and n.id                   = en_notafiscal_id
      and n.dm_ind_emit          = 1 -- Emissão Terceiro
      and m.id                   = n.modfiscal_id
      and m.cod_mod              not in ('21', '22')  -- Telecomunicação   
      and e.notafiscal_id        = n.id
      and p.cod_siscomex         = e.cod_pais
      and c.ibge_cidade          = e.cidade_ibge 
      and n.pessoa_id is not null  -- inicio, nf emissao própria sem pessoa id 
      and pe.id                  = n.pessoa_id	  
    union     
--5
   select 1                                               origem_dado_pessoa
        , n.pessoa_id                                     pessoa_id
        , trim(e.cnpj)||trim(e.cpf)||trim(e.cidade_ibge)  cod_part
        , trim(substr(e.nome,1,100))                      nome
        , p.cod_siscomex
        , to_char(e.cidade_ibge)                          ibge_cidade
        , pk_csf.fkg_converte(substr(e.lograd,1,60))      lograd
        , pk_csf.fkg_converte(substr(trim(e.nro), 1, 10)) nro
        , pk_csf.fkg_converte(e.compl)                    compl
        , pk_csf.fkg_converte(e.bairro)                   bairro
        , e.cpf                                           cpf
        , e.ie                                            ie
        , e.suframa                                       suframa
     from tmp_nota_fiscal  n
        , mod_fiscal       m   
        , nota_fiscal_emit e
        , pais             p 
        , cidade           c
    where gn_origem_dado_pessoa  = 1 -- Documento Fiscal   
      and n.id                   = en_notafiscal_id
      and n.dm_ind_emit          = 1 -- Emissão Terceiro
      and m.id                   = n.modfiscal_id
      and m.cod_mod              not in ('21', '22')  -- Telecomunicação   
      and n.pessoa_id            is null
      and e.notafiscal_id        = n.id
      and p.cod_siscomex         = e.cod_pais
      and c.ibge_cidade          = e.cidade_ibge 
    union --fim   nf emissao própria sem pessoa id          
--6
   select 1                                               origem_dado_pessoa
        , n.pessoa_id                                     pessoa_id
        , trim(e.cnpj)                                    cod_part
        , trim(e.nome)                                    nome
        , p.cod_siscomex
        , to_char(e.cidade_ibge)                          ibge_cidade
        , pk_csf.fkg_converte(e.lograd)                   lograd
        , pk_csf.fkg_converte(substr(trim(e.nro), 1, 10)) nro
        , pk_csf.fkg_converte(e.compl)                    compl
        , pk_csf.fkg_converte(e.bairro)                   bairro 
        , e.cpf                                           cpf
        , e.ie                                            ie
        , e.suframa                                       suframa       
     from tmp_nota_fiscal  n
        , mod_fiscal       m   
        , nota_fiscal_emit e
        , pais             p 
        , cidade           c
    where gn_origem_dado_pessoa  = 1 -- Documento Fiscal   
      and n.id                   = en_notafiscal_id
      and n.dm_ind_emit          = 1 -- Emissão Terceiro
      and m.id                   = n.modfiscal_id
      and m.cod_mod              not in ('21', '22', '99')  -- Telecomunicação / serviços   
      and e.notafiscal_id        = n.id
      and p.cod_siscomex         = e.cod_pais 
      and c.ibge_cidade          = e.cidade_ibge 
    union
--7    
   select 1                             as origem_dado_pessoa
        , p.id                          as pessoa_id
        , p.cod_part
        , pk_csf.fkg_converte(p.nome)   as nome
        , pa.cod_siscomex
        , c.ibge_cidade
        , pk_csf.fkg_converte(p.lograd) as lograd
        , pk_csf.fkg_converte(p.nro)    as nro
        , pk_csf.fkg_converte(p.compl)  as compl
        , pk_csf.fkg_converte(p.bairro) as bairro
        , null                          as cpf
        , null                          as ie
        , null                          as suframa  
     from tmp_nota_fiscal  n
        , mod_fiscal       m   
        , pessoa           p
        , cidade           c
        , pais             pa   
    where gn_origem_dado_pessoa  = 1 -- Documento Fiscal   
      and n.id                   = en_notafiscal_id
      and n.dm_ind_emit          = 1 --  Emissão Terceiro
      and m.id                   = n.modfiscal_id
      and m.cod_mod              in ('21', '22', '99')  -- Telecomunicação / serviços
      and p.id                   = n.pessoa_id
      and c.id                   = p.cidade_id
      and pa.id(+)               = p.pais_id
    union 
--8
   select 1                                               origem_dado_pessoa
        , t.pessoa_id                                     pessoa_id
        , trim(d.cnpj)                                    cod_part
        , trim(d.nome)                                    nome
        , p.cod_siscomex
        , to_char(d.ibge_cidade)                          ibge_cidade
        , pk_csf.fkg_converte(d.lograd)                   lograd
        , pk_csf.fkg_converte(substr(trim(d.nro), 1, 10)) nro
        , pk_csf.fkg_converte(d.compl)                    compl
        , pk_csf.fkg_converte(d.bairro)                   bairro 
        , d.cpf                                           cpf
        , d.ie                                            ie
        , to_char(d.suframa)                              suframa 
     from tmp_conhec_transp  t
        , conhec_transp_dest d
        , pais               p 
        , cidade             c
    where gn_origem_dado_pessoa = 1 -- Documento Fiscal  
      and t.id                  = en_conhectransp_id
      and t.dm_ind_emit         = 0 -- Emissão Propria
      and d.conhectransp_id     = t.id
      and p.cod_siscomex        = d.cod_pais
      and c.ibge_cidade         = d.ibge_cidade   
    union   
--9    
   select 1                                               origem_dado_pessoa
        , t.pessoa_id                                     pessoa_id
        , trim(e.cnpj)                                    cod_part
        , trim(e.nome)                                    nome
        , p.cod_siscomex
        , to_char(e.ibge_cidade)                          ibge_cidade
        , pk_csf.fkg_converte(e.lograd)                   lograd
        , pk_csf.fkg_converte(substr(trim(e.nro), 1, 10)) nro
        , pk_csf.fkg_converte(e.compl)                    compl
        , pk_csf.fkg_converte(e.bairro)                   bairro 
        , null                                            cpf
        , e.ie                                            ie
        , null                                            suframa           
     from tmp_conhec_transp  t
        , conhec_transp_emit e
        , pais               p 
        , cidade             c
    where gn_origem_dado_pessoa = 1 -- Documento Fiscal   
      and t.id                  = en_conhectransp_id
      and t.dm_ind_emit         = 1 -- Emissão Terceiro
      and e.conhectransp_id     = t.id
      and p.cod_siscomex        = e.cod_pais 
      and c.ibge_cidade         = e.ibge_cidade 
  /* union
--10   
   select 0                                               origem_dado_pessoa
        , n.id                                            pessoa_id
        , trim(d.cnpj)||trim(d.cpf)||trim(d.cidade_ibge)  cod_part
        , trim(d.nome)                                    nome
        , p.cod_siscomex
        , to_char(d.cidade_ibge)                          ibge_cidade
        , pk_csf.fkg_converte(d.lograd)                   lograd
        , pk_csf.fkg_converte(substr(trim(d.nro), 1, 10)) nro
        , pk_csf.fkg_converte(d.compl)                    compl
        , pk_csf.fkg_converte(d.bairro)                   bairro
        , d.cpf                                           cpf
        , d.ie                                            ie
        , d.suframa                                       suframa
     from nota_fiscal  n
        , mod_fiscal       m   
        , nota_fiscal_dest d
        , pais             p 
        , cidade           c
    where  gn_origem_dado_pessoa = 0 -- Documento Fiscal   
      and n.id                   = en_notafiscal_id
      and n.dm_ind_emit          = 0 -- Emissão Propria
      and m.id                   = n.modfiscal_id
      and m.cod_mod              not in ('21', '22')  -- Telecomunicação   
      and n.pessoa_id            is null
      and d.notafiscal_id        = n.id
      and p.cod_siscomex         = d.cod_pais
      and c.ibge_cidade          = d.cidade_ibge   */ 
    order by 3;		
   --
BEGIN
   --
   vn_fase := 1;
   --
   -- Retornar sempre o COD_PART para verificação no type 'vt_tab_reg_0150'  
   vv_cod_part_docto :=  pk_csf_api_efd.fkb_ret_cnpjcpj_ibge_cod_part ( en_pessoa_id          => en_pessoa_id
                                                                      , en_tipo_retorna       => 1  -- 0-Pessoa_id / 1-Cod_Part    
                                                                      , en_origem_dado_pessoa => gn_origem_dado_pessoa                                    
                                                                      , en_notafiscal_id      => en_notafiscal_id
                                                                      , en_conhectransp_id    => en_conhectransp_id );   
   -- 
   i := 0;
   v := 0;
   vb_achou := false;   
   --  
   vn_fase := 1.1;
   --   
   if nvl(vt_tab_reg_0150.count,0) > 0 then
      -- 
      for v in vt_tab_reg_0150.first..vt_tab_reg_0150.last loop
         -- 
         if trim(vt_tab_reg_0150(v).cod_part) = trim(vv_cod_part_docto) then
            vb_achou := true; 
            exit;  
         end if;
         --    
      end loop;
      --   
   end if;    
   --
   vn_fase := 2;
   --
   if not vb_achou then
      --
      vn_fase := 3;
      --
      v := 0;
      --  
      i := nvl(vt_tab_reg_0150.count,0);
      --    
      for rec_part in c_part loop
         exit when c_part%notfound or (c_part%notfound) is null;
         --
         vn_fase := 4;
         --
         i := nvl(i,0) + 1;
         --
         vn_fase := 4.1;     
         -- 
         if rec_part.origem_dado_pessoa = 0 and rec_part.pessoa_id is not null then
            --
            begin
               select ( lpad(f.num_cpf,9,'0')||lpad(f.dig_cpf,2,'0') )
                 into vn_cpf
                 from fisica f
                where f.pessoa_id = rec_part.pessoa_id;
            exception
               when others then
                  vn_cpf := null;
            end;
            --
            vn_fase := 5;
            --
            begin
               select ( lpad(j.num_cnpj,8,'0')||lpad(j.num_filial,4,'0')||lpad(j.dig_cnpj,2,'0') )
                    , j.ie
                    , lpad(j.suframa, 9, '0')
                 into vn_cnpj
                    , vv_ie
                    , vv_suframa
                 from juridica j
                where j.pessoa_id = rec_part.pessoa_id;
            exception
               when others then
                  vn_cnpj    := null;
                  vv_ie      := null;
                  vv_suframa := null;
            end;
            --
         else
            --
            if rec_part.pessoa_id is not null then
               --
               begin
                  select ( lpad(f.num_cpf,9,'0')||lpad(f.dig_cpf,2,'0') )
                    into vn_cpf
                    from fisica f
                   where f.pessoa_id = rec_part.pessoa_id;
               exception
                  when others then
                     vn_cpf := null;
               end;
               --
               vn_fase := 5.1;
               --
               begin
                  select ( lpad(j.num_cnpj,8,'0')||lpad(j.num_filial,4,'0')||lpad(j.dig_cnpj,2,'0') )
                       , j.ie
                       , lpad(j.suframa, 9, '0')
                    into vn_cnpj
                       , vv_ie
                       , vv_suframa
                    from juridica j
                   where j.pessoa_id = rec_part.pessoa_id;
               exception
                  when others then
                     vn_cnpj    := null;
                     vv_ie      := null;
                     vv_suframa := null;
               end;
               --                  
            else                                
               --                  
               vn_cnpj    := rec_part.cod_part;
               vv_ie      := rec_part.ie;
               vv_suframa := rec_part.suframa;
               vn_cpf     := rec_part.cpf;
               --
            end if;
            --                                
         end if;
         --
         vn_fase := 6;
         --
         if rec_part.origem_dado_pessoa = 0 then
            vt_tab_reg_0150(i).cod_part := rec_part.cod_part;
         else
            vt_tab_reg_0150(i).cod_part := vv_cod_part_docto;  
         end if;     
         --
         vn_fase := 7;
         --
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '0150' || '|';
         if rec_part.origem_dado_pessoa = 0 then     
            gl_conteudo := gl_conteudo || rec_part.cod_part || '|';
         else
            gl_conteudo := gl_conteudo || vv_cod_part_docto || '|';
         end if;     
         gl_conteudo := gl_conteudo || rec_part.nome || '|';
         gl_conteudo := gl_conteudo || rec_part.cod_siscomex || '|';
         gl_conteudo := gl_conteudo || lpad(vn_cnpj,14,'0') || '|';
         gl_conteudo := gl_conteudo || lpad(vn_cpf,11,'0') || '|';
         --
         if trim(vv_ie) like 'ISENT%' then
            gl_conteudo := gl_conteudo || '|';
         else
            gl_conteudo := gl_conteudo || vv_ie || '|';
         end if;
         --
         gl_conteudo := gl_conteudo || rec_part.ibge_cidade || '|';
         gl_conteudo := gl_conteudo || lpad(vv_suframa, 9, '0') || '|';
         gl_conteudo := gl_conteudo || rec_part.lograd || '|';
         gl_conteudo := gl_conteudo || rec_part.nro || '|';
         gl_conteudo := gl_conteudo || rec_part.compl || '|';
         gl_conteudo := gl_conteudo || rec_part.bairro || '|';
         --
         vn_fase := 8;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0150'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_0150 := nvl(gn_qtde_reg_0150,0) + 1;
         --
      end loop;
      --
   end if;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0150 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0150;

-----------------------------------------------
--| Procedimento que inicia as variáveis
-----------------------------------------------
PROCEDURE PKB_LIMPA_VETOR IS
BEGIN
  --
  vt_tab_reg_0150.DELETE;
  vt_bi_tab_reg_0190.DELETE;
  vt_bi_tab_reg_0200.DELETE;
  vt_bi_tab_reg_0400.DELETE;
  vt_bi_tab_reg_0450.DELETE;
  vt_tab_reg_0500.DELETE;
  vt_tab_reg_0600.DELETE;
  --
END PKB_LIMPA_VETOR;
-----------------------------------------------------------------
--| Monta o REGISTRO 0140: TABELA DE CADASTRO DE ESTABELECIMENTO
-----------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0140 IS
  --
  vn_fase            number := 0;
  vv_reg             varchar2(4) := null;
  vv_cod_est         pessoa.cod_part%type := null;
  vv_nome            pessoa.nome%type := null;
  vv_cnpj            varchar2(14) := null;
  vv_uf              estado.sigla_estado%type := null;
  vv_ie              juridica.ie%type := null;
  vv_cod_mun         cidade.ibge_cidade%type := null;
  vv_im              juridica.im%type := null;
  vv_suframa         juridica.suframa%type := null;
  vn_planoconta_id   number := 0;
  vn_item_id         item.id%type := 0;
  vv_existe          varchar2(1) := 'N';
  --
  vn_natrecpc_id     nat_rec_pc.id%type := 0;
  vn_planoconta_id_f plano_conta.id%type := 0;
  --
  cursor c_emp is
    select r.empresa_id
      from r_empresa_abertura_efd_pc r
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
     order by 1;
  --
  cursor c_estab is
    select r.empresa_id -- Recuperar as empresas do Registro de Abertura 0000
      from r_empresa_abertura_efd_pc r
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
    union
    select ap.empresa_id -- Recuperar as empresas do Registro/Bloco I010
      from r_empresa_abertura_efd_pc r,
           abertura_efd_pc_oifd      ae,
           abert_efd_pc_oifd_estab   ap
     where r.aberturaefdpc_id      = gt_row_abertura_efd_pc.id
       and ae.empresa_id           = r.empresa_id
       and ae.dt_inicial          >= gt_row_abertura_efd_pc.dt_ini
       and ae.dt_final            <= gt_row_abertura_efd_pc.dt_fin
       and ap.aberturaefdpcoifd_id = ae.id
       and ap.dm_st_proc           = 3 -- Validado
    union
    select ccf.empresa_id -- Recuperar as empresas do Registro/Bloco 1100-1101 -- sdo>0 em períodos anteriores
      from r_empresa_abertura_efd_pc r,
           contr_cred_fiscal_pis     ccf,
           apur_cred_ext_pis         ac,
           juridica                  ju
     where r.aberturaefdpc_id       = gt_row_abertura_efd_pc.id
       and ccf.empresa_id           = r.empresa_id
       and ccf.dm_situacao          = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalpis_id = ccf.id
       and (lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') || lpad(ju.dig_cnpj, 2, '0')) = ac.cnpj
    union
    select ccf.empresa_id -- Recuperar as empresas do Registro/Bloco 1100-1101 -- sdo=0 no período em questão
      from r_empresa_abertura_efd_pc r,
           contr_cred_fiscal_pis     ccf,
           relac_apur_contr_pis      ra,
           apur_cred_ext_pis         ac,
           juridica                  ju
     where r.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id             = r.empresa_id
       and ccf.dm_situacao            = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalpis_id    = ccf.id
       and (lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') || lpad(ju.dig_cnpj, 2, '0')) = ac.cnpj
    union
    select ccf.empresa_id -- Recuperar as empresas do Registro/Bloco 1100-1101 -- sdo=0 em períodos posteriores
      from r_empresa_abertura_efd_pc r,
           contr_cred_fiscal_pis     ccf,
           relac_apur_contr_pis      ra,
           apur_cred_ext_pis         ac,
           juridica                  ju
     where r.aberturaefdpc_id          = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = r.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_pis rc
                        where rc.contrcredfiscalpis_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalpis_id    = ccf.id
       and (lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') || lpad(ju.dig_cnpj, 2, '0')) = ac.cnpj
    union
    select ccf.empresa_id -- Recuperar as empresas do Registro/Bloco 1500-1501 -- sdo>0 em períodos anteriores
      from r_empresa_abertura_efd_pc r,
           contr_cred_fiscal_cofins  ccf,
           apur_cred_ext_cofins      ac,
           juridica                  ju
     where r.aberturaefdpc_id          = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = r.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalcofins_id = ccf.id
       and (lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') || lpad(ju.dig_cnpj, 2, '0')) = ac.cnpj
    union
    select ccf.empresa_id -- Recuperar as empresas do Registro/Bloco 1500-1501 -- sdo=0 no período em questão
      from r_empresa_abertura_efd_pc r,
           contr_cred_fiscal_cofins  ccf,
           relac_apur_contr_cofins   ra,
           apur_cred_ext_cofins      ac,
           juridica                  ju
     where r.aberturaefdpc_id          = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = r.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalcofins_id = ccf.id
       and (lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') || lpad(ju.dig_cnpj, 2, '0')) = ac.cnpj
    union
    select ccf.empresa_id -- Recuperar as empresas do Registro/Bloco 1500-1501 -- sdo=0 em períodos posteriores
      from r_empresa_abertura_efd_pc r,
           contr_cred_fiscal_cofins  ccf,
           relac_apur_contr_cofins   ra,
           apur_cred_ext_cofins      ac,
           juridica                  ju
     where r.aberturaefdpc_id          = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = r.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_cofins rc
                        where rc.contrcredfiscalcofins_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalcofins_id = ccf.id
       and (lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') || lpad(ju.dig_cnpj, 2, '0')) = ac.cnpj
    union
    select distinct em.id empresa_id -- Recuperar as empresas do Registro/Bloco 1900
      from r_empresa_abertura_efd_pc r,
           cons_docto_emit_per       cd,
           juridica                  ju,
           empresa                   em
     where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and cd.empresa_id      = r.empresa_id
       and cd.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and cd.dm_st_proc      = 1 -- validada
       and ju.num_cnpj        = substr(lpad(cd.cnpj, 14, '0'), 1, 8)
       and ju.num_filial      = substr(lpad(cd.cnpj, 14, '0'), 9, 4)
       and ju.dig_cnpj        = substr(lpad(cd.cnpj, 14, '0'), 13, 2)
       and em.pessoa_id       = ju.pessoa_id
     order by 1;
  --
  cursor c_nf(en_empresa_id empresa.id%type) is
    select nf.id notafiscal_id,
           nf.empresa_id,
           nf.dm_ind_oper,
           nf.dm_ind_emit,
           nf.dm_st_proc,
           mf.cod_mod,
           sd.cd cod_sit,
           nf.serie,
           nf.nro_nf,
           nf.nro_chave_nfe,
           nf.dt_emiss,
           nf.dt_sai_ent,
           t.vl_total_nf vl_doc,
           decode(nf.dm_ind_pag,
                  0, 0, -- À vista
                  1, 1, -- A prazo
                  2, 2, -- Sem pagamento/Outros
                  9, 2 -- Sem pagamento/Outros
                  ) dm_ind_pag,
           t.vl_desconto,
           t.vl_abat_nt,
           (nvl(t.vl_total_item, 0) + nvl(t.vl_total_serv, 0) +
           nvl(t.vl_outra_despesas, 0)) vl_total_item_serv,
           t.vl_frete,
           t.vl_seguro,
           t.vl_outra_despesas,
           t.vl_base_calc_icms,
           t.vl_imp_trib_icms,
           t.vl_base_calc_st,
           nvl(t.vl_imp_trib_st, 0) + nvl(t.vl_fcp_st, 0) vl_imp_trib_st, -- #53895
           t.vl_imp_trib_ipi,
           (nvl(t.vl_imp_trib_pis, 0) + nvl(t.vl_pis_iss, 0)) vl_imp_trib_pis,
           (nvl(t.vl_imp_trib_cofins, 0) + nvl(t.vl_cofins_iss, 0)) vl_imp_trib_cofins,
           t.vl_ret_pis,
           t.vl_ret_cofins,
           nf.pessoa_id,
           nf.inforcompdctofiscal_id
      from tmp_nota_fiscal   nf,
           mod_fiscal        mf,
           sit_docto         sd,
           nota_fiscal_total t
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65', '99')
       and sd.id              = nf.sitdocto_id
       and t.notafiscal_id    = nf.id
     order by nf.empresa_id,
              nf.dm_ind_emit,
              nf.dm_ind_oper,
              mf.cod_mod,
              nf.serie,
              nf.nro_nf;
  --
  -- Regime de Apuração da Contribuição Previdenciária Sobre a Receita Bruta - CPRB
  --
  cursor c_cprb is
    select ae.dm_cod_inc_trib,
           ae.vl_rec_tot,
           ae.vl_rec_ativ,
           ae.vl_rec_demais_ativ,
           ae.info_compl
      from abertura_efd_pc_cprb ae
     where ae.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and 0 < (select count(1)
                  from apuracao_cprb ac
                 where ac.empresa_id  = gt_row_abertura_efd_pc.empresa_id
                   and ac.dt_ini     >= gt_row_abertura_efd_pc.dt_ini
                   and ac.dt_fin     <= gt_row_abertura_efd_pc.dt_fin
                   and ac.dm_situacao = 3); -- processada
  --
  -- Pessoas
  --
  cursor c_f100_pessoa(en_empresa_id in empresa.id%type) is
    select distinct dd.pessoa_id
      from dem_doc_oper_ger_cc dd,
           pessoa pe
     where dd.empresa_id = en_empresa_id
       and dd.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and dd.dm_st_proc = 1 -- validado
       and pe.id         = dd.pessoa_id -- para garantir que a coluna não seja nula e melhora na performance
     order by 1;
  --
  cursor c_d500_ac100_pessoa(en_empresa_id in empresa.id%type) is
    select nf.id notafiscal_id,
           nf.pessoa_id,
           mf.cod_mod,
           nf.dm_ind_emit
      from tmp_nota_fiscal nf,
           mod_fiscal mf,
           pessoa pe
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id            = nf.modfiscal_id
       and mf.cod_mod       in ('01', '1B', '04', '55', '99', '21', '22' )
       and pe.id            = nf.pessoa_id -- Para garantir que a coluna não seja nula e melhora na performance
     order by 1;
  --
  -- Só para registros C500   
  cursor c_c500_pessoa(en_empresa_id in empresa.id%type) is
    select nf.id notafiscal_id,
           nf.pessoa_id,
           mf.cod_mod,
           nf.dm_ind_emit
      from tmp_nota_fiscal nf,
           mod_fiscal mf,
           pessoa pe
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id            = nf.modfiscal_id
       and mf.cod_mod       in ('06', '28', '29', '66')
       and pe.id            = nf.pessoa_id -- Para garantir que a coluna não seja nula e melhora na performance
       and exists (select 1
                     from nf_compl_oper_pis pis, cod_st cst
                    where pis.notafiscal_id = nf.id
                      and cst.id            = pis.codst_id
                      and cst.cod_st        not in ('70', '71', '72', '73', '74', '75')) -- Valores isentos de créditos
     order by 1;  
  --  
  cursor c_cd500_pessoa(en_notafiscal_id in nota_fiscal.id%type) is
    select inf.cfop_id,
           ti.cd tipoimposto_cd,
           cst.id codst_id
      from tmp_item_nota_fiscal inf,
           tmp_imp_itemnf       imp,
           cod_st               cst,
           tipo_imposto         ti
     where inf.notafiscal_id = en_notafiscal_id
       and imp.itemnf_id     = inf.id
       and cst.id            = imp.codst_id
       and ti.id             = imp.tipoimp_id
       and ti.cd             = 4; -- Somente o imposto PIS para conferência
  --
  cursor c_d100_pessoa(en_empresa_id in empresa.id%type) is
    select distinct ct.pessoa_id,
           ct.id conhectransp_id
      from tmp_conhec_transp ct,
           mod_fiscal mf,
           pessoa pe
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0
       and ct.dm_ind_oper     = 0 -- 0 - Entrada, 1 - Saída
       and ((ct.dm_ind_emit = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 0 and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and pe.id              = ct.pessoa_id -- Para garantir que a coluna não seja nula e melhora na performance
       and exists (select 1
                     from ct_comp_doc_pis pis,
                          cod_st cst
                    where pis.conhectransp_id = ct.id
                      and cst.id              = pis.codst_id
                      and cst.cod_st          not in ('70', '71', '72', '73', '74', '75')) -- Valores isentos de créditos
     order by 1;
  --
  cursor c_1101_pessoa(en_empresa_id in empresa.id%type) is
    select distinct pe.id pessoa_id, -- sdo>0 em períodos anteriores
                    nf.id notafiscal_id
      from contr_cred_fiscal_pis ccf,
           apur_cred_ext_pis     ac,
           tmp_nota_fiscal       nf,
           pessoa                pe
     where ccf.empresa_id           = en_empresa_id
       and ccf.dm_situacao          = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalpis_id = ccf.id
       and nf.id                    = ac.notafiscal_id
       and pe.id                    = nf.pessoa_id
    union
    select distinct pe.id pessoa_id, -- sdo=0 no período em questão
                    nf.id notafiscal_id
      from contr_cred_fiscal_pis ccf,
           relac_apur_contr_pis  ra,
           apur_cred_ext_pis     ac,
           tmp_nota_fiscal       nf,
           pessoa                pe
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalpis_id    = ccf.id
       and nf.id                       = ac.notafiscal_id
       and pe.id                       = nf.pessoa_id
    union
    select distinct pe.id pessoa_id, -- sdo=0 em períodos posteriores
                    nf.id notafiscal_id
      from contr_cred_fiscal_pis ccf,
           relac_apur_contr_pis  ra,
           apur_cred_ext_pis     ac,
           tmp_nota_fiscal       nf,
           pessoa                pe
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- Não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_pis rc
                        where rc.contrcredfiscalpis_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalpis_id = ccf.id
       and nf.id                    = ac.notafiscal_id
       and pe.id                    = nf.pessoa_id
    union
    select distinct pe.id pessoa_id, -- sdo>0 em períodos anteriores
                    nf.id notafiscal_id
      from contr_cred_fiscal_cofins ccf,
           apur_cred_ext_cofins     ac,
           tmp_nota_fiscal          nf,
           pessoa                   pe
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalcofins_id = ccf.id
       and nf.id                       = ac.notafiscal_id
       and pe.id                       = nf.pessoa_id
    union
    select distinct pe.id pessoa_id, -- sdo=0 no período em questão
                    nf.id notafiscal_id
      from contr_cred_fiscal_cofins ccf,
           relac_apur_contr_cofins  ra,
           apur_cred_ext_cofins     ac,
           tmp_nota_fiscal          nf,
           pessoa                   pe
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalcofins_id = ccf.id
       and nf.id                       = ac.notafiscal_id
       and pe.id                       = nf.pessoa_id
    union
    select distinct pe.id pessoa_id, -- sdo=0 em períodos posteriores
                    nf.id notafiscal_id
      from contr_cred_fiscal_cofins ccf,
           relac_apur_contr_cofins  ra,
           apur_cred_ext_cofins     ac,
           tmp_nota_fiscal          nf,
           pessoa                   pe
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- Não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_cofins rc
                        where rc.contrcredfiscalcofins_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalcofins_id = ccf.id
       and nf.id = ac.notafiscal_id
       and pe.id = nf.pessoa_id;
  --
  -- Unidades
  --
  cursor c_f100_unid(en_empresa_id in empresa.id%type) is
    select distinct it.unidade_id
      from dem_doc_oper_ger_cc dd,
           item it
     where dd.empresa_id = en_empresa_id
       and dd.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and dd.dm_st_proc = 1 -- Validado
       and it.id         = dd.item_id
     order by 1;
  --
  /*cursor c_c170_unid(en_empresa_id in empresa.id%type) is
  select distinct inf.unid_trib,
                  it.unidade_id,
                  inf.cfop_id,
                  cst.id codst_id
    from tmp_nota_fiscal      nf,
         mod_fiscal           mf,
         tmp_item_nota_fiscal inf,
         item                 it,
         tmp_imp_itemnf       imp,
         cod_st               cst,
         tipo_imposto         ti
   where nf.empresa_id = en_empresa_id
     and nf.dm_st_proc in (4, 7, 8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
     and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
     and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
           or
          (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
           or
          (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
           or
          (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
     and mf.id             = nf.modfiscal_id
     and mf.cod_mod        in ('01', '1B', '04', '55', '99')
     and inf.notafiscal_id = nf.id
     and it.id(+)          = inf.item_id
     and imp.itemnf_id     = inf.id
     and cst.id            = imp.codst_id
     and ti.id             = imp.tipoimp_id
     and ti.cd             = 4 -- Somente o imposto PIS para conferência
   order by 1;*/
  --
  cursor c_c170_unid(en_notafiscal_id in nota_fiscal.id%type) is
    select distinct inf.unid_trib,
                    it.unidade_id,
                    inf.cfop_id,
                    cst.id codst_id
      from tmp_item_nota_fiscal inf,
           item                 it,
           tmp_imp_itemnf       imp,
           cod_st               cst,
           tipo_imposto         ti
     where inf.notafiscal_id = en_notafiscal_id
       and it.id(+)          = inf.item_id
       and imp.itemnf_id     = inf.id
       and cst.id            = imp.codst_id
       and ti.id             = imp.tipoimp_id
       and ti.cd             = 4 -- Somente o imposto PIS para conferência
     order by 1;
  --
  cursor c_481_485(en_empresa_id in empresa.id%type) is
    select distinct r.id reducaozecf_id, ra.cfop_id
      from equip_ecf            e,
           mod_fiscal           mf,
           tmp_reducao_z_ecf    r,
           reg_anal_mov_dia_ecf ra
     where e.empresa_id      = en_empresa_id
       and mf.id             = e.modfiscal_id
       and mf.cod_mod        in ('02', '2D') -- Nota Fiscal de Venda a Consumidor e Cupom Fiscal
       and r.equipecf_id     = e.id
       and r.dt_doc between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and r.dm_st_proc      = 1 -- Validada
       and nvl(r.vl_brt, 0)  > 0
       and ra.reducaozecf_id = r.id
     order by 1;
  --
  cursor c_481_unid(en_reducaozecf_id in reducao_z_ecf.id%type) is
    select distinct it.unidade_id, res.codst_id
      from res_dia_doc_ecf_pis res,
           item it
     where res.reducaozecf_id = en_reducaozecf_id
       and it.id              = res.item_id
     order by 1;
  --
  cursor c_c490_unid(en_empresa_id in empresa.id%type) is
    select distinct it.unidade_id, inf.cfop_id, cst.id codst_id
      from tmp_cupom_fiscal      cf,
           mod_fiscal            mf,
           tmp_item_cupom_fiscal inf,
           item                  it,
           tmp_imp_itemcf        imp,
           cod_st                cst,
           tipo_imposto          ti
     where cf.empresa_id          = en_empresa_id
       and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and cf.dm_st_proc          = 4 -- 4-Autorizado
       and mf.id                  = cf.modfiscal_id
       and mf.cod_mod             = '60' -- Cupom fiscal eletrônico
       and inf.cupomfiscal_id     = cf.id
       and it.empresa_id          = cf.empresa_id
       and it.cod_item            = inf.cod_item
       and imp.itemcupomfiscal_id = inf.id
       and cst.id                 = imp.codst_id
       and ti.id                  = imp.tipoimp_id
       and ti.cd                  in (4, 5) -- PIS/COFINS
     order by 1;
  --
  cursor c_c860_unid(en_empresa_id in empresa.id%type) is
    select distinct it.unidade_id, ic.cfop_id, ii.codst_id
      from tmp_cupom_fiscal      cf,
           mod_fiscal            mf,
           tmp_item_cupom_fiscal ic,
           tmp_imp_itemcf        ii,
           tipo_imposto          ti,
           item                  it
     where cf.empresa_id         = en_empresa_id
       and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and cf.dm_st_proc         = 4 -- 4-Autorizado
       and mf.id                 = cf.modfiscal_id
       and mf.cod_mod            = '59' -- Cupom fiscal eletrônico
       and ic.cupomfiscal_id     = cf.id
       and it.empresa_id         = cf.empresa_id
       and it.cod_item           = ic.cod_item
       and ii.itemcupomfiscal_id = ic.id
       and ti.id                 = ii.tipoimp_id
       and ti.cd                 = 4 -- PIS
     order by it.unidade_id,
              ic.cfop_id;
  -- c490 unidade
  --
  -- Itens / Produtos
  --
  -- Todos os cursores para informar os dados dos itens/produtos foram UNIDOS em um só.
  -- Algumas bases possuem processos que recuperam o mesmo item/produto gerando o registro 0200 com os mesmos dados mais de uma vez.
  -- O validador do processo não aceita a duplicidade do mesmo código para a mesma empresa.
  cursor c_f100_item(en_empresa_id in empresa.id%type) is
    select distinct d.item_id
      from dem_doc_oper_ger_cc d,
           item ie
     where d.empresa_id = en_empresa_id
       and d.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and d.dm_st_proc = 1 -- validado
       and ie.id        = d.item_id
     order by 1;
  --
  cursor c_ac170_nf_item(en_empresa_id in empresa.id%type) is
    select distinct nf.id notafiscal_id
      from tmp_nota_fiscal      nf,
           mod_fiscal           mf,
           tmp_item_nota_fiscal inf,
           item                 ie,
           tmp_imp_itemnf       imp,
           tipo_imposto         ti
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Ssim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65', '99')
       and inf.notafiscal_id  = nf.id
       and ie.id              = inf.item_id
       and imp.itemnf_id      = inf.id
       and ti.id              = imp.tipoimp_id
       and ti.cd              = 4 -- Somente o imposto PIS
     order by 1;
  --
  cursor c_ac490_cf_item(en_empresa_id in empresa.id%type) is
    select distinct cf.id cupomfiscal_id
      from tmp_cupom_fiscal      cf,
           mod_fiscal            mf,
           tmp_item_cupom_fiscal inf,
           item                  ie,
           tmp_imp_itemcf        imp,
           tipo_imposto          ti
     where cf.empresa_id          = en_empresa_id
       and cf.dm_st_proc          in (4) -- 4-Autorizado
       and mf.id                  = cf.modfiscal_id
       and mf.cod_mod             in ('60') -- Cupom Fiscal Eletrônico
       and inf.cupomfiscal_id     = cf.id
       and ie.id                  = inf.item_id
       and imp.itemcupomfiscal_id = inf.id
       and ti.id                  = imp.tipoimp_id
       and ti.cd                  in (4, 5) -- PIS/COFINS
     order by 1;
  --
  cursor c_param(en_notafiscal_id nota_fiscal.id%type) is
    select distinct inf.cfop_id, imp.codst_id
      from tmp_item_nota_fiscal inf,
           tmp_imp_itemnf       imp,
           cod_st               cst,
           tipo_imposto         ti
     where inf.notafiscal_id = en_notafiscal_id
       and imp.itemnf_id     = inf.id
       and cst.id            = imp.codst_id
       and cst.cod_st        not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
       and ti.id             = imp.tipoimp_id
       and ti.cd             = 4; -- Utilizar somente o PIS
  --
  cursor c_param_cf(en_cupomfiscal_id cupom_fiscal.id%type) is
    select distinct ic.cfop_id, ii.codst_id
      from tmp_cupom_fiscal      cf,
           tmp_item_cupom_fiscal ic,
           tmp_imp_itemcf        ii,
           mod_fiscal            mf
     where cf.id                 = en_cupomfiscal_id
       and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and cf.dm_st_proc         = 4 -- 4-Autorizado
       and mf.id                 = cf.modfiscal_id
       and mf.cod_mod            = '60' -- Cupom Fiscal Eletrônico
       and ii.itemcupomfiscal_id = ic.id;
  --
  cursor c_ac170_item(en_notafiscal_id in nota_fiscal.id%type) is
    select distinct inf.item_id,
           inf.unid_trib
      from tmp_item_nota_fiscal inf
     where inf.notafiscal_id = en_notafiscal_id
     order by 1;
  --
  cursor c_c380_item(en_empresa_id in empresa.id%type) is
    select distinct ir.item_id,
                    ra.cfop_id,
                    ir.codst_id_pis,
                    ir.codst_id_cofins
      from res_dia_nf_venda_cons        rd,
           mod_fiscal                   mf,
           reg_an_res_dia_nf_venda_cons ra,
           it_res_dia_nf_venda_cons     ir
     where rd.empresa_id                = en_empresa_id
       and rd.dt_doc between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and rd.dm_st_proc                = 1 -- Validada
       and mf.id                        = rd.modfiscal_id
       and mf.cod_mod                   = '02' -- Nota Fiscal de Venda a Consumidor
       and ra.resdianfvendacons_id      = rd.id
       and ir.reganresdianfvendacons_id = ra.id;
  --
  cursor c_ac490_item(en_cupomfiscal_id in cupom_fiscal.id%type) is
    select distinct inf.item_id
      from tmp_item_cupom_fiscal inf
     where inf.cupomfiscal_id = en_cupomfiscal_id
     order by 1;
  --
  cursor c_1101_item(en_empresa_id in empresa.id%type) is
    select distinct ie.id item_id, -- sdo>0 em períodos anteriores
                    ac.cfop_id,
                    ac.codst_id,
                    4 tipoimposto_cd -- PIS
      from contr_cred_fiscal_pis ccf,
           apur_cred_ext_pis     ac,
           tmp_item_nota_fiscal  it,
           item                  ie
     where ccf.empresa_id           = en_empresa_id
       and ccf.dm_situacao          = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalpis_id = ccf.id
       and it.id                    = ac.itemnf_id
       and ie.id                    = it.item_id
    union
    select distinct ie.id item_id, -- sdo=0 no período em questão
                    ac.cfop_id,
                    ac.codst_id,
                    4 tipoimposto_cd -- PIS
      from contr_cred_fiscal_pis ccf,
           relac_apur_contr_pis  ra,
           apur_cred_ext_pis     ac,
           tmp_item_nota_fiscal  it,
           item                  ie
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalpis_id    = ccf.id
       and it.id                       = ac.itemnf_id
       and ie.id                       = it.item_id
    union
    select distinct ie.id item_id, -- sdo=0 em períodos posteriores
                    ac.cfop_id,
                    ac.codst_id,
                    4 tipoimposto_cd -- pis
      from contr_cred_fiscal_pis ccf,
           relac_apur_contr_pis  ra,
           apur_cred_ext_pis     ac,
           tmp_item_nota_fiscal  it,
           item                  ie
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- Não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_pis rc
                        where rc.contrcredfiscalpis_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalpis_id = ccf.id
       and it.id = ac.itemnf_id
       and ie.id = it.item_id
    union
    select distinct ie.id item_id, -- sdo>0 em períodos anteriores
                    ac.cfop_id,
                    ac.codst_id,
                    5 tipoimposto_cd
      from contr_cred_fiscal_cofins ccf,
           apur_cred_ext_cofins     ac,
           tmp_item_nota_fiscal     it,
           item                     ie
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalcofins_id = ccf.id
       and it.id                       = ac.itemnf_id
       and ie.id                       = it.item_id
    union
    select distinct ie.id item_id, -- sdo=0 no período em questão
                    ac.cfop_id,
                    ac.codst_id,
                    5 tipoimposto_cd
      from contr_cred_fiscal_cofins ccf,
           relac_apur_contr_cofins  ra,
           apur_cred_ext_cofins     ac,
           tmp_item_nota_fiscal     it,
           item                     ie
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalcofins_id = ccf.id
       and it.id                       = ac.itemnf_id
       and ie.id                       = it.item_id
    union
    select distinct ie.id item_id, -- sdo=0 em períodos posteriores
                    ac.cfop_id,
                    ac.codst_id,
                    5 tipoimposto_cd
      from contr_cred_fiscal_cofins ccf,
           relac_apur_contr_cofins  ra,
           apur_cred_ext_cofins     ac,
           tmp_item_nota_fiscal     it,
           item                     ie
     where ccf.empresa_id              = en_empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_cofins rc
                        where rc.contrcredfiscalcofins_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalcofins_id = ccf.id
       and it.id                       = ac.itemnf_id
       and ie.id                       = it.item_id;
  --
  cursor c_c481_item(en_reducaozecf_id in reducao_z_ecf.id%type) is
    select distinct res.item_id,
           res.codst_id
      from res_dia_doc_ecf_pis res
     where res.reducaozecf_id = en_reducaozecf_id
     order by 1;
  --
  cursor c_c860_item(en_empresa_id in empresa.id%type) is
    select distinct ic.item_id,
                    ic.cod_item,
                    ic.cfop_id,
                    ii.codst_id codst_id_pis
      from tmp_cupom_fiscal      cf,
           mod_fiscal            mf,
           tmp_item_cupom_fiscal ic,
           tmp_imp_itemcf        ii,
           tipo_imposto          ti
     where cf.empresa_id         = en_empresa_id
       and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and cf.dm_st_proc         = 4 -- 4-Autorizado
       and mf.id                 = cf.modfiscal_id
       and mf.cod_mod            = '59' -- Cupom fiscal eletrônico
       and ic.cupomfiscal_id     = cf.id
       and ii.itemcupomfiscal_id = ic.id
       and ti.id                 = ii.tipoimp_id
       and ti.cd                 = 4 -- PIS
     order by ic.item_id,
              ic.cfop_id;
  --
  -- Natureza de Operação
  --
  cursor c_c170_natoper(en_empresa_id in empresa.id%type) is
    select distinct inf.natoper_id, inf.cfop_id, imp.codst_id
      from tmp_nota_fiscal      nf,
           mod_fiscal           mf,
           tmp_item_nota_fiscal inf,
           nat_oper             np,
           tmp_imp_itemnf       imp,
           cod_st               cst,
           tipo_imposto         ti
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55')
       and inf.notafiscal_id  = nf.id
       and np.id              = inf.natoper_id
       and imp.itemnf_id      = inf.id
       and cst.id             = imp.codst_id
       and ti.id              = imp.tipoimp_id
       and ti.cd              = 4 -- Somente o imposto PIS
     order by 1;
  --
  -- Informações complementares de documentos fiscais
  --
  cursor c_cd500_ac100_infcompl(en_empresa_id in empresa.id%type) is
    select nf.id notafiscal_id,
           nf.inforcompdctofiscal_id,
           mf.cod_mod
      from tmp_nota_fiscal nf,
           mod_fiscal mf
     where nf.empresa_id      = en_empresa_id
       and nf.dm_st_proc      in (4, 7, 8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0-não, 1-sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '21', '22', '06', '28', '29', '99');
  --
  cursor c_cd500_infcompl(en_notafiscal_id in nota_fiscal.id%type) is
    select distinct inf.cfop_id,
           imp.codst_id codst_id
      from tmp_item_nota_fiscal inf,
           tmp_imp_itemnf       imp,
           cod_st               cst,
           tipo_imposto         ti
     where inf.notafiscal_id = en_notafiscal_id
       and imp.itemnf_id     = inf.id
       and cst.id            = imp.codst_id
       and ti.id             = imp.tipoimp_id
       and ti.cd             = 4; -- Somente o imposto PIS
  --
  cursor c_d100_infcompl(en_empresa_id in empresa.id%type) is
    select distinct ct.inforcompdctofiscal_id
      from tmp_conhec_transp ct,
           mod_fiscal mf,
           infor_comp_dcto_fiscal ic
     where ct.empresa_id      = en_empresa_id
       and ct.dm_st_proc      = 4 -- Autorizado
       and ct.dm_arm_cte_terc = 0
       and ct.dm_ind_oper     = 0 -- 0 - Entrada, 1 - Saída
       and ((ct.dm_ind_emit = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 0 and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = ct.modfiscal_id
       and mf.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and ic.id              = ct.inforcompdctofiscal_id
       and exists (select 1
                     from ct_comp_doc_pis pis,
                          cod_st cst
                     where pis.conhectransp_id = ct.id
                       and cst.id              = pis.codst_id
                       and cst.cod_st          not in ('70', '71', '72', '73', '74', '75')) -- valores isentos de créditos
     order by 1;
  --
  -- Planos de contas
  --
  cursor c_cd501_cd505_plano is
    select nf.id notafiscal_id
      from r_empresa_abertura_efd_pc re,
           empresa                   em,
           tmp_nota_fiscal           nf,
           mod_fiscal                mf
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and em.id               = re.empresa_id
       and nf.empresa_id       = em.id
       and nf.dm_st_proc       in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc  = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id               = nf.modfiscal_id
       and mf.cod_mod          in ('06', '28', '29', '21', '22');
  --
  cursor c_c170_plano is
    select distinct nf.empresa_id,
                    itnf.cfop_id,
                    itnf.cfop,
                    imp.codst_id,
                    nf.id nf_id,
                    nf.nro_nf,
                    nf.serie,
                    itnf.nro_item,
                    itnf.cod_cta,
                    (case
                      when (select nvl(pce.dm_gera_escr_efd_pc, 0)
                              from param_cfop_empresa pce, cfop cf
                             where 1 = 1
                               and pce.cfop_id = cf.id
                               and pce.empresa_id = nf.empresa_id
                               and cf.cd = itnf.cfop) = 0 then
                       0
                      else
                       1
                    end) paramcfop,
                    (select pc.id
                       from plano_conta pc
                      where pc.cod_cta = itnf.cod_cta
                        and rownum = 1
                        and pc.empresa_id in
                            (select empresa_id
                               from r_empresa_abertura_efd_pc
                              where aberturaefdpc_id = re.aberturaefdpc_id)) planoconta_id
      from r_empresa_abertura_efd_pc re,
           empresa                   em,
           tmp_nota_fiscal           nf,
           mod_fiscal                mf,
           tmp_item_nota_fiscal      itnf,
           tmp_imp_itemnf            imp,
           cod_st                    cst,
           tipo_imposto              ti,
           param_efd_contr           par
     where re.empresa_id       = em.id
       and em.id               = nf.empresa_id
       and nf.modfiscal_id     = mf.id
       and nf.id               = itnf.notafiscal_id
       and itnf.id             = imp.itemnf_id
       and imp.codst_id        = cst.id
       and imp.tipoimp_id      = ti.id
       and em.id               = par.empresa_id(+)
       and re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and nf.dm_st_proc       in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc  = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.cod_mod          in ('01', '1B', '04', '55', '65')
       -- and cst.cod_st not in ('70','71','72','73','74','75') -- valores isentos de créditos  -- Armando
       and ti.cd               = 4;

  --
  cursor c_a170_plano is
    select distinct nf.empresa_id,
                    itnf.cfop_id,
                    imp.codst_id,
                    itnf.cfop,
                    nf.id nf_id,
                    nf.nro_nf,
                    nf.serie,
                    itnf.nro_item,
                    itnf.cod_cta,
                    (case
                      when (select nvl(pce.dm_gera_escr_efd_pc, 0)
                              from param_cfop_empresa pce, cfop cf
                             where 1 = 1
                               and pce.cfop_id = cf.id
                               and pce.empresa_id = nf.empresa_id
                               and cf.cd = itnf.cfop) = 0 then
                       0
                      else
                       1
                    end) paramcfop,
                    (select pc.id
                       from plano_conta pc
                      where pc.cod_cta = itnf.cod_cta
                        and rownum = 1
                        and pc.empresa_id in
                            (select empresa_id
                               from r_empresa_abertura_efd_pc
                              where aberturaefdpc_id = re.aberturaefdpc_id)) planoconta_id
      from r_empresa_abertura_efd_pc re,
           empresa                   em,
           tmp_nota_fiscal           nf,
           mod_fiscal                mf,
           tmp_item_nota_fiscal      itnf,
           itemnf_compl_serv         itcs,
           tmp_imp_itemnf            imp,
           cod_st                    cst,
           tipo_imposto              ti
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and em.id               = re.empresa_id
       and nf.empresa_id       = em.id
       and nf.dm_st_proc       in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc  = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id               = nf.modfiscal_id
       and mf.cod_mod          = '99' -- somente serviços
       and itnf.notafiscal_id  = nf.id
       and itcs.itemnf_id      = itnf.id
       and imp.itemnf_id       = itnf.id
       and cst.id              = imp.codst_id
       and ti.id               = imp.tipoimp_id
       and cst.cod_st          not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
       and ti.cd               = 4 -- Somente imposto PIS
     order by 1;
  --
  cursor c_c380_plano is
    select distinct re.empresa_id,
                    pc.id planoconta_id,
                    ra.cfop_id,
                    ir.codst_id_pis,
                    ir.codst_id_cofins
      from r_empresa_abertura_efd_pc    re,
           res_dia_nf_venda_cons        rd,
           mod_fiscal                   mf,
           reg_an_res_dia_nf_venda_cons ra,
           plano_conta                  pc,
           it_res_dia_nf_venda_cons     ir
     where re.aberturaefdpc_id          = gt_row_abertura_efd_pc.id
       and rd.empresa_id                = re.empresa_id
       and rd.dt_doc between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and rd.dm_st_proc                = 1 -- Validada
       and mf.id                        = rd.modfiscal_id
       and mf.cod_mod                   = '02' -- Nota Fiscal de Venda a Consumidor
       and ra.resdianfvendacons_id      = rd.id
       and pc.cod_cta                   = rd.cod_cta
       and ir.reganresdianfvendacons_id = ra.id;
  --
  cursor c_c481_c485_plano is
    select distinct ee.empresa_id,
           rz.id reducaozecf_id,
           id.cfop_id
      from r_empresa_abertura_efd_pc  re,
           equip_ecf                  ee,
           mod_fiscal                 mf,
           tmp_reducao_z_ecf          rz,
           tmp_doc_fiscal_emit_ecf    df,
           tmp_it_doc_fiscal_emit_ecf id
     where re.aberturaefdpc_id   = gt_row_abertura_efd_pc.id
       and ee.empresa_id          = re.empresa_id
       and mf.id                  = ee.modfiscal_id
       and mf.cod_mod             in ('02', '2D') -- Nota Fiscal de Venda a Consumidor e Cupom Fiscal
       and rz.equipecf_id         = ee.id
       and rz.dt_doc between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and rz.dm_st_proc          = 1 -- Validada
       and nvl(rz.vl_brt, 0)      > 0
       and df.reducaozecf_id      = rz.id
       and id.docfiscalemitecf_id = df.id;
  --
  cursor c_c481_plano(en_reducaozecf_id in res_dia_doc_ecf_pis.id%type) is
    select distinct res.planoconta_id,
           res.codst_id
      from res_dia_doc_ecf_pis res,
           plano_conta pc
     where res.reducaozecf_id = en_reducaozecf_id
       and pc.id              = res.planoconta_id;
  --
  cursor c_c485_plano(en_reducaozecf_id in res_dia_doc_ecf_cofins.id%type) is
    select distinct res.planoconta_id,
           res.codst_id
      from res_dia_doc_ecf_cofins res,
           plano_conta pc
     where res.reducaozecf_id = en_reducaozecf_id
       and pc.id              = res.planoconta_id;
  --
  cursor c_c490_plano is
    select distinct cf.empresa_id,
                    itcf.cfop_id,
                    imp.codst_id,
                    cf.nro_cfe,
                    cf.nro_serie_sat,
                    cf.id as cf_id,
                    itcf.nro_item,
                    itcf.cod_cta,
                    (select c.cd from cfop c where c.id = itcf.cfop_id) cfop,
                    (case
                      when (select nvl(pce.dm_gera_escr_efd_pc, 0)
                              from param_cfop_empresa pce, cfop cf
                             where 1 = 1
                               and pce.cfop_id = cf.id
                               and pce.empresa_id = cf.empresa_id
                               and cf.cd = itcf.cfop_id) = 0 then
                       0
                      else
                       1
                    end) paramcfop,
                    (select pc.id
                       from plano_conta pc
                      where pc.cod_cta = itcf.cod_cta
                        and rownum = 1
                        and pc.empresa_id in
                            (select empresa_id
                               from r_empresa_abertura_efd_pc
                              where aberturaefdpc_id = re.aberturaefdpc_id)) planoconta_id
      from r_empresa_abertura_efd_pc re,
           tmp_cupom_fiscal          cf,
           mod_fiscal                mf,
           tmp_item_cupom_fiscal     itcf,
           tmp_imp_itemcf            imp,
           cod_st                    cst,
           tipo_imposto              ti
     where re.aberturaefdpc_id    = gt_row_abertura_efd_pc.id
       and cf.empresa_id          = re.empresa_id
       and cf.dm_st_proc          = 4 -- 4-Autorizado
       and mf.id                  = cf.modfiscal_id
       and mf.cod_mod             = '60' -- Cupom fiscal eletrônico
       and itcf.cupomfiscal_id    = cf.id
       and imp.itemcupomfiscal_id = itcf.id
       and cst.id                 = imp.codst_id
       and ti.id                  = imp.tipoimp_id
       and ti.cd                  in (4, 5) -- PIS/COFINS
       and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin;
  --
  cursor c_c860_plano is
    select distinct cf.empresa_id,
                    itcf.cfop_id,
                    imp.codst_id,
                    cf.nro_cfe,
                    cf.nro_serie_sat,
                    cf.id as cf_id,
                    itcf.nro_item,
                    itcf.cod_cta,
                    (select c.cd from cfop c where c.id = itcf.cfop_id) cfop,
                    (case
                      when (select nvl(pce.dm_gera_escr_efd_pc, 0)
                              from param_cfop_empresa pce, cfop cf
                             where 1 = 1
                               and pce.cfop_id = cf.id
                               and pce.empresa_id = cf.empresa_id
                               and cf.cd = itcf.cfop_id) = 0 then
                       0
                      else
                       1
                    end) paramcfop,
                    (select pc.id
                       from plano_conta pc
                      where pc.cod_cta = itcf.cod_cta
                        and rownum = 1
                        and pc.empresa_id in
                            (select empresa_id
                               from r_empresa_abertura_efd_pc
                              where aberturaefdpc_id = re.aberturaefdpc_id)) planoconta_id
      from r_empresa_abertura_efd_pc re,
           tmp_cupom_fiscal          cf,
           mod_fiscal                mf,
           tmp_item_cupom_fiscal     itcf,
           tmp_imp_itemcf            imp,
           cod_st                    cst,
           tipo_imposto              ti
     where re.aberturaefdpc_id    = gt_row_abertura_efd_pc.id
       and cf.empresa_id          =  re.empresa_id
       and cf.dm_st_proc          = 4 -- 4 - Autorizado
       and mf.id                  = cf.modfiscal_id
       and mf.cod_mod             = '59' -- Cupom fiscal eletrônico
       and itcf.cupomfiscal_id    = cf.id
       and imp.itemcupomfiscal_id = itcf.id
       and cst.id                 = imp.codst_id
       and ti.id                  = imp.tipoimp_id
       and ti.cd                  = 4 -- PIS
       and cf.dt_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin;
  --
  cursor c_d100_plano is
    select ct.id conhectransp_id,
           ct.empresa_id,
           ct.cod_cta
      from r_empresa_abertura_efd_pc re,
           tmp_conhec_transp         ct,
           mod_fiscal                mf
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ct.empresa_id       = re.empresa_id
       and ct.dm_st_proc       = 4 -- Autorizado
       and ct.dm_arm_cte_terc  = 0
       and ct.dm_ind_oper      = 0 -- 0 - Entrada, 1 - Saída
       and ((ct.dm_ind_emit = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 0 and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(ct.dt_sai_ent, ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id               = ct.modfiscal_id
       and mf.cod_mod          in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and exists (select 1
                     from ct_comp_doc_pis cc,
                          cod_st cs
                     where cc.conhectransp_id = ct.id
                       and cs.id              = cc.codst_id
                       and cs.cod_st          not in ('70', '71', '72', '73', '74', '75')) -- valores isentos de créditos
     order by 1;
  --
  cursor c_d200_plano is
    select ct.id conhectransp_id,
           ct.empresa_id,
           ct.cod_cta
      from r_empresa_abertura_efd_pc re,
           tmp_conhec_transp         ct,
           mod_fiscal                mf
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ct.empresa_id       = re.empresa_id
       and ct.dm_st_proc       = 4 -- autorizado
       and ct.dm_arm_cte_terc  = 0 -- 0-Não, 1-Sim
       and ct.dm_ind_emit      = 0 -- 0-Emissão Própria, 1-Terceiro
       and ct.dm_ind_oper      = 1 -- 0-Entrada, 1-Saída
       and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and mf.id               = ct.modfiscal_id
       and mf.cod_mod          in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
       and exists (select 1
                     from ct_comp_doc_pis cc,
                          cod_st cs
                    where cc.conhectransp_id = ct.id
                      and cs.id              = cc.codst_id
                      and cs.cod_st          not in ('70', '71', '72', '73', '74', '75')) -- valores isentos de créditos
     order by 1;
  --
  cursor c_i200_i300_plano is
    select pc.id planoconta_id
      from r_empresa_abertura_efd_pc re,
           abertura_efd_pc_oifd      ae,
           abert_efd_pc_oifd_estab   ap,
           consol_oper_per_oifd      co,
           compos_recdedexcl_oifd    cr,
           plano_conta               pc
     where re.aberturaefdpc_id       = gt_row_abertura_efd_pc.id
       and ae.empresa_id             = re.empresa_id
       and ae.dt_inicial            >= gt_row_abertura_efd_pc.dt_ini
       and ae.dt_final              <= gt_row_abertura_efd_pc.dt_fin
       and ap.aberturaefdpcoifd_id   = ae.id
       and ap.dm_st_proc             = 3 -- Validado
       and co.abertefdpcoifdestab_id = ap.id
       and cr.consoloperperoifd_id   = co.id
       and pc.id                     = cr.planoconta_id
    union
    select pc.id planoconta_id
      from r_empresa_abertura_efd_pc re,
           abertura_efd_pc_oifd      ae,
           abert_efd_pc_oifd_estab   ap,
           consol_oper_per_oifd      co,
           compos_recdedexcl_oifd    cr,
           compl_detal_oper_oifd     cd,
           plano_conta               pc
     where re.aberturaefdpc_id        = gt_row_abertura_efd_pc.id
       and ae.empresa_id              = re.empresa_id
       and ae.dt_inicial             >= gt_row_abertura_efd_pc.dt_ini
       and ae.dt_final               <= gt_row_abertura_efd_pc.dt_fin
       and ap.aberturaefdpcoifd_id    = ae.id
       and ap.dm_st_proc              = 3 -- Validado
       and co.abertefdpcoifdestab_id  = ap.id
       and cr.consoloperperoifd_id    = co.id
       and cd.composrecdedexcloifd_id = cr.id
       and pc.id                      = cd.planoconta_id;
  --
  cursor c_1101_plano is
    select distinct ac.planoconta_id -- sdo>0 em períodos anteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_pis     ccf,
           apur_cred_ext_pis         ac,
           plano_conta               pc
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3  -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalpis_id    = ccf.id
       and pc.id                       = ac.planoconta_id
    union
    select distinct ac.planoconta_id -- sdo=0 no período em questão
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_pis     ccf,
           relac_apur_contr_pis      ra,
           apur_cred_ext_pis         ac,
           plano_conta               pc
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalpis_id    = ccf.id
       and pc.id                       = ac.planoconta_id
    union
    select distinct ac.planoconta_id -- sdo=0 em períodos posteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_pis     ccf,
           relac_apur_contr_pis      ra,
           apur_cred_ext_pis         ac,
           plano_conta               pc
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_pis rc
                        where rc.contrcredfiscalpis_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalpis_id    = ccf.id
       and pc.id                       = ac.planoconta_id
    union
    select distinct ac.planoconta_id -- sdo>0 em períodos anteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_cofins  ccf,
           apur_cred_ext_cofins      ac,
           plano_conta               pc
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalcofins_id = ccf.id
       and pc.id                       = ac.planoconta_id
    union
    select distinct ac.planoconta_id -- sdo=0 no período em questão
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_cofins  ccf,
           relac_apur_contr_cofins   ra,
           apur_cred_ext_cofins      ac,
           plano_conta               pc
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalcofins_id = ccf.id
       and pc.id = ac.planoconta_id
    union
    select distinct ac.planoconta_id -- sdo=0 em períodos posteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_cofins  ccf,
           relac_apur_contr_cofins   ra,
           apur_cred_ext_cofins      ac,
           plano_conta               pc
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_cofins rc
                        where rc.contrcredfiscalcofins_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalcofins_id = ccf.id
       and pc.id = ac.planoconta_id;
  --
  -- Bloco F100
  cursor c_f100_plano is
    select distinct dd.planoconta_id
      from r_empresa_abertura_efd_pc re,
           dem_doc_oper_ger_cc dd
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and dd.empresa_id       = re.empresa_id
       and dd.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and dd.dm_st_proc       = 1 -- validado
       and dd.planoconta_id    is not null
     order by dd.planoconta_id;
  --
  -- Bloco F120
  cursor c_f120_plano is
    select distinct ba.planoconta_id
      from r_empresa_abertura_efd_pc re,
           bem_ativ_imob_oper_cred_pc ba
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ba.empresa_id       = re.empresa_id
       and ba.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
       and ba.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
       and ba.dm_st_proc       = 1 -- validado
       and ba.dm_tipo_oper     = 0 -- Depreciação/Amortização
       and ba.planoconta_id    is not null
     order by ba.planoconta_id;
  --
  -- Bloco F130
  cursor c_f130_plano is
    select distinct ba.planoconta_id
      from r_empresa_abertura_efd_pc re,
           bem_ativ_imob_oper_cred_pc ba
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ba.empresa_id       = re.empresa_id
       and ba.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
       and ba.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
       and ba.dm_st_proc       = 1 -- Validado
       and ba.dm_tipo_oper     = 1 -- Aquisição/Contribuição
       and ba.planoconta_id    is not null
     order by ba.planoconta_id;
  --
  -- Bloco F150
  cursor c_f150_plano is
    select distinct cp.planoconta_id
      from r_empresa_abertura_efd_pc re,
           cred_pres_est_abert_pc cp
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and cp.empresa_id       = re.empresa_id
       and cp.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
       and cp.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
       and cp.dm_st_proc       = 1 -- validado
       and cp.planoconta_id    is not null
     order by cp.planoconta_id;
  --
  -- Bloco F500
  cursor c_f500_plano is
    select distinct co.planoconta_id
      from r_empresa_abertura_efd_pc re,
           cons_oper_ins_pc_rc co
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and co.empresa_id       = re.empresa_id
       and co.dt_ref between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and co.dm_st_proc       = 1 -- Validado
       and co.planoconta_id    is not null
     order by co.planoconta_id;
  --
  -- Bloco F510
  cursor c_f510_plano is
    select distinct co.planoconta_id
      from r_empresa_abertura_efd_pc re,
           cons_oper_ins_pc_rc_aum co
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and co.empresa_id       = re.empresa_id
       and co.dt_ref between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and co.dm_st_proc       = 1 -- validado
       and co.planoconta_id    is not null
     order by co.planoconta_id;
  --
  -- Bloco F525
  cursor c_f525_plano is
    select distinct cr.planoconta_id
      from r_empresa_abertura_efd_pc re,
           comp_rec_det_rc cr
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and cr.empresa_id       = re.empresa_id
       and cr.dt_ref between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and cr.dm_st_proc       = 1 -- validado
       and cr.planoconta_id    is not null
     order by cr.planoconta_id;
  --
  -- Bloco F550
  cursor c_f550_plano is
    select distinct co.planoconta_id
      from r_empresa_abertura_efd_pc re,
           cons_oper_ins_pc_rcomp co
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and co.empresa_id       = re.empresa_id
       and co.dt_ref between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and co.dm_st_proc       = 1 -- validado
       and co.planoconta_id   is not null
     order by co.planoconta_id;
  --
  -- Bloco F560
  cursor c_f560_plano is
    select distinct co.planoconta_id
      from r_empresa_abertura_efd_pc re,
           cons_op_ins_pcrcomp_aum co
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and co.empresa_id       = re.empresa_id
       and co.dt_ref between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and co.dm_st_proc       = 1 -- validado
       and co.planoconta_id    is not null
     order by co.planoconta_id;
  --
  -- Centro de Custo
  --
  cursor c_a170_custo is
    select distinct nf.empresa_id,
                    itcs.centrocusto_id,
                    itnf.cfop_id,
                    imp.codst_id
      from r_empresa_abertura_efd_pc re,
           empresa                   em,
           tmp_nota_fiscal           nf,
           mod_fiscal                mf,
           tmp_item_nota_fiscal      itnf,
           itemnf_compl_serv         itcs,
           tmp_imp_itemnf            imp,
           cod_st                    cst,
           tipo_imposto              ti,
           centro_custo              cc
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and em.id = re.empresa_id
       and nf.empresa_id      = em.id
       and nf.dm_st_proc      in (4, 7, 8) -- 4 - Autorizada, 7 - Cancelada, 8 - Inutilizada
       and nf.dm_arm_nfe_terc = 0 -- 0 - Não, 1 - Sim
       and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent, nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         = '99' -- Somente serviços
       and itnf.notafiscal_id = nf.id
       and itcs.itemnf_id     = itnf.id
       and imp.itemnf_id      = itnf.id
       and cst.id             = imp.codst_id
       and ti.id              = imp.tipoimp_id
       and ti.cd              = 4 -- Somente o imposto PIS
       and cc.id              = itcs.centrocusto_id
     order by 1;
  --
  cursor c_1101_custo is
    select distinct ac.centrocusto_id -- sdo>0 em períodos anteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_pis     ccf,
           apur_cred_ext_pis         ac,
           centro_custo              cs
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalpis_id    = ccf.id
       and cs.id                       = ac.centrocusto_id
    union
    select distinct ac.centrocusto_id -- sdo=0 no período em questão
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_pis     ccf,
           relac_apur_contr_pis      ra,
           apur_cred_ext_pis         ac,
           centro_custo              cs
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- Processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalpis_id    = ccf.id
       and cs.id                       = ac.centrocusto_id
    union
    select distinct ac.centrocusto_id -- sdo=0 em períodos posteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_pis     ccf,
           relac_apur_contr_pis      ra,
           apur_cred_ext_pis         ac,
           centro_custo              cs
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalpis_id    = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_pis rc
                        where rc.contrcredfiscalpis_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalpis_id = ccf.id
       and cs.id                    = ac.centrocusto_id
    union
    select distinct ac.centrocusto_id -- sdo>0 em períodos anteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_cofins  ccf,
           apur_cred_ext_cofins      ac,
           centro_custo              cs
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) > 0
       and ac.contrcredfiscalcofins_id = ccf.id
       and cs.id                       = ac.centrocusto_id
    union
    select distinct ac.centrocusto_id -- sdo=0 no período em questão
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_cofins  ccf,
           relac_apur_contr_cofins   ra,
           apur_cred_ext_cofins      ac,
           centro_custo              cs
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini
       and ac.contrcredfiscalcofins_id = ccf.id
       and cs.id                       = ac.centrocusto_id
    union
    select distinct ac.centrocusto_id -- sdo=0 em períodos posteriores
      from r_empresa_abertura_efd_pc re,
           contr_cred_fiscal_cofins  ccf,
           relac_apur_contr_cofins   ra,
           apur_cred_ext_cofins      ac,
           centro_custo              cs
     where re.aberturaefdpc_id         = gt_row_abertura_efd_pc.id
       and ccf.empresa_id              = re.empresa_id
       and ccf.dm_situacao             = 3 -- processada
       and to_date((ccf.mes || '/' || ccf.ano), 'mm/rrrr') <= gt_row_abertura_efd_pc.dt_ini
       and nvl(ccf.vl_sld_cred_fim, 0) = 0
       and ra.contrcredfiscalcofins_id = ccf.id
       and to_date((ra.mes || '/' || ra.ano), 'mm/rrrr') > gt_row_abertura_efd_pc.dt_ini
       and not exists (select rc.id -- não pode existir registro do mesmo mês no relacionamento, pq aparece no processo anterior
                         from relac_apur_contr_cofins rc
                        where rc.contrcredfiscalcofins_id = ccf.id
                          and to_date((rc.mes || '/' || rc.ano), 'mm/rrrr') = gt_row_abertura_efd_pc.dt_ini)
       and ac.contrcredfiscalcofins_id = ccf.id
       and cs.id                       = ac.centrocusto_id;
  --
  -- Bloco F100
  cursor c_f100_custo is
    select distinct dd.centrocusto_id
      from r_empresa_abertura_efd_pc re,
           dem_doc_oper_ger_cc dd
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and dd.empresa_id       = re.empresa_id
       and dd.dt_oper between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
       and dd.dm_st_proc       = 1 -- validado
       and dd.centrocusto_id  is not null
     order by dd.centrocusto_id;
  --
  -- Bloco F120
  cursor c_f120_custo is
    select distinct ba.centrocusto_id
      from r_empresa_abertura_efd_pc re,
           bem_ativ_imob_oper_cred_pc ba
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ba.empresa_id       = re.empresa_id
       and ba.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
       and ba.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
       and ba.dm_st_proc       = 1 -- Validado
       and ba.dm_tipo_oper     = 0 -- Depreciação/Amortização
       and ba.centrocusto_id   is not null
     order by ba.centrocusto_id;
  --
  -- Bloco F130
  cursor c_f130_custo is
    select distinct ba.centrocusto_id
      from r_empresa_abertura_efd_pc re,
           bem_ativ_imob_oper_cred_pc ba
     where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
       and ba.empresa_id       = re.empresa_id
       and ba.ano_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
       and ba.mes_ref          = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
       and ba.dm_st_proc       = 1 -- validado
       and ba.dm_tipo_oper     = 1 -- Aquisição/Contribuição
       and ba.centrocusto_id   is not null
     order by ba.centrocusto_id;
  --
  -- Bloco M410
  cursor c_m410(en_perrecisentapis_id rec_isenta_pis.perrecisentapis_id%type,
                en_codst_id           rec_isenta_pis.codst_id%type,
                en_cod_cta            plano_conta.cod_cta%type) is
    select pc.id planoconta_id
      from rec_isenta_pis ri,
           det_rec_isenta_pis d,
           nat_rec_pc nr,
           plano_conta pc
     where ri.perrecisentapis_id = en_perrecisentapis_id
       and ri.codst_id           = en_codst_id
       and pc.cod_cta            = en_cod_cta
       and d.recisentapis_id     = ri.id
       and nr.id                 = d.natrecpc_id
       and pc.id(+)              = d.planoconta_id;
  --
  -- Blocl M810
  cursor c_m810(en_perrecisentacofins_id rec_isenta_cofins.perrecisentacofins_id%type,
                en_codst_id              rec_isenta_cofins.codst_id%type,
                en_cod_cta               plano_conta.cod_cta%type) is
    select pc.id planoconta_id
      from rec_isenta_cofins     ri,
           det_rec_isenta_cofins d,
           nat_rec_pc            nr,
           plano_conta           pc
     where ri.perrecisentacofins_id = en_perrecisentacofins_id
       and ri.codst_id              = en_codst_id
       and pc.cod_cta               = en_cod_cta
       and d.recisentacofins_id     = ri.id
       and nr.id                    = d.natrecpc_id
       and pc.id(+)                 = d.planoconta_id;
  --
  vv_volta_origem_dado_pessoa varchar2(1) := 'N';
  --
BEGIN
  --
  vn_fase := 1;
  --
  pkb_limpa_vetor;
  --
  -- Matriz e filiais
  for r_empr in c_estab loop
    exit when c_estab%notfound or(c_estab%notfound) is null;
    --
    vn_fase := 2;
    --
    vt_tab_reg_0150.delete;
    --
    gn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa(en_empresa_id => r_empr.empresa_id);
    --
    begin
      select '0140' reg,
             pe.cod_part cod_est,
             pe.nome nome,
             (lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') ||
             lpad(ju.dig_cnpj, 2, '0')) cnpj,
             es.sigla_estado uf,
             ju.ie ie,
             ci.ibge_cidade cod_mun,
             ju.im im,
             ju.suframa suframa
        into vv_reg,
             vv_cod_est,
             vv_nome,
             vv_cnpj,
             vv_uf,
             vv_ie,
             vv_cod_mun,
             vv_im,
             vv_suframa
        from empresa em,
             pessoa pe,
             juridica ju,
             cidade ci,
             estado es
       where em.id = r_empr.empresa_id
         and pe.id = em.pessoa_id
         and pe.id = ju.pessoa_id
         and ci.id = pe.cidade_id
         and es.id = ci.estado_id;
    exception
      when others then
        vv_reg     := null;
        vv_cod_est := null;
        vv_nome    := null;
        vv_cnpj    := null;
        vv_uf      := null;
        vv_ie      := null;
        vv_cod_mun := null;
        vv_im      := null;
        vv_suframa := null;
    end;
    --
    vn_fase := 3;
    --
    -- Cria a estrutura do registro separado por PIPE "|"
    gl_conteudo := '|';
    --
    gl_conteudo := gl_conteudo || vv_reg || '|';
    gl_conteudo := gl_conteudo || vv_cod_est || '|';
    gl_conteudo := gl_conteudo || vv_nome || '|';
    gl_conteudo := gl_conteudo || vv_cnpj || '|';
    gl_conteudo := gl_conteudo || vv_uf || '|';
    gl_conteudo := gl_conteudo || vv_ie || '|';
    gl_conteudo := gl_conteudo || vv_cod_mun || '|';
    gl_conteudo := gl_conteudo || vv_im || '|';
    gl_conteudo := gl_conteudo || lpad(vv_suframa, 9, '0') || '|';
    --
    vn_fase := 4;
    --
    pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '0140',
                              el_conteudo => gl_conteudo);
    --
    gn_qtde_reg_0140 := nvl(gn_qtde_reg_0140, 0) + 1;
    --
    vn_fase := 5;
    --
    -- Monta Registro 0145: Regime de Apuração da Contribuição Previdenciária Sobre a Receita Bruta
    -- Informar somente para a empresa matriz da abertura do arquivo
    if pk_csf.fkg_empresa_id_matriz(en_empresa_id => r_empr.empresa_id) = r_empr.empresa_id then
      --
      vn_fase := 6;
      --
      for r_cprb in c_cprb loop
        exit when c_cprb%notfound or(c_cprb%notfound) is null;
        --
        vn_fase := 7;
        --
        -- Cria a estrutura do registro separado por PIPE "|"
        gl_conteudo := '|';
        --
        gl_conteudo := gl_conteudo || '0145' || '|';
        gl_conteudo := gl_conteudo || r_cprb.dm_cod_inc_trib || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_cprb.vl_rec_tot, 0), '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_cprb.vl_rec_ativ, 0), '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || fkg_formata_num(nvl(r_cprb.vl_rec_demais_ativ, 0), '9999999999990D99') || '|';
        gl_conteudo := gl_conteudo || trim(r_cprb.info_compl) || '|';
        --
        vn_fase := 8;
        --
        pkb_armaz_estr_arq_efd_pc(ev_reg_blc  => '0145',
                                  el_conteudo => gl_conteudo);
        --
        gn_qtde_reg_0145 := nvl(gn_qtde_reg_0145, 0) + 1;
        --
      end loop;
      --
    end if;
    --
    vn_fase := 9;
    --
    -- Monta Registro 0150: Tabela de Cadastro do Participante --
    -- Monta Registro F100: Demais Documentos e Operações Geradoras de Contribuição e Créditos (DEM_DOC_OPER_GER_CC)
    --
    vn_fase := 10;
    --
    if gn_origem_dado_pessoa = 1 and vv_volta_origem_dado_pessoa = 'N' then
      --
      vn_fase := 11;
      --
      gn_origem_dado_pessoa       := 0;
      vv_volta_origem_dado_pessoa := 'S';
      --
    end if;
    --
    for r_reg in c_f100_pessoa(en_empresa_id => r_empr.empresa_id) loop
      exit when c_f100_pessoa%notfound or(c_f100_pessoa%notfound) is null;
      --
      vn_fase := 12;
      --
      pkb_monta_reg_0150(en_empresa_id => r_empr.empresa_id,
                         en_pessoa_id  => r_reg.pessoa_id);
      --
      vn_fase := 13;
      --
    end loop; -- c_f100_pessoa
    --
    if vv_volta_origem_dado_pessoa = 'S' and gn_origem_dado_pessoa = 0 then
      --
      vn_fase := 14;
      --
      gn_origem_dado_pessoa       := 1;
      vv_volta_origem_dado_pessoa := 'N';
      --
    end if;
    --
    vn_fase := 15;
    --
    if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1 - Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and -- 2 - Escrituração de operações com incidência exclusivamente no regime cumulativo
       gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 9 - Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 16;
      --
      -- Monta Registro D500: Nota Fiscal de Serviço de Comunicação (Código 21) e Nota Fiscal de Serviço de Telecomunicação (Código 22) - Documentos de Aquisição com Direito a Crédito
      -- Monta Registro A100: Documento - Nota Fiscal de Serviço
      -- Monta Registro C100: Documento - Nota Fiscal (Código 01), Nota Fiscal Avulsa (Código 1B), Nota Fiscal de Produtor (Código 04), NF-e (Código 55) e NFC-e (Código 65)
      for r_reg in c_d500_ac100_pessoa(en_empresa_id => r_empr.empresa_id) loop
        exit when c_d500_ac100_pessoa%notfound or(c_d500_ac100_pessoa%notfound) is null;
        --
        vn_fase := 17;
        --
        vv_existe := 'N';
        --
        if r_reg.cod_mod = ('99') and -- Nota Fiscal de Serviço
           r_reg.dm_ind_emit = 0 and -- Emissão Própria
           trim(pk_csf.fkg_cnpjcpf_pessoa_id(r_reg.pessoa_id)) = '99999999999' then
          --
          vn_fase := 18;
          --
          vv_existe := 'N';
          --
        elsif r_reg.cod_mod in ('01', '1B', '04', '55', '65', '99') then
          --
          vn_fase := 19;
          --
          for rec_param in c_param(r_reg.notafiscal_id) loop
            exit when c_param%notfound or(c_param%notfound) is null;
            --
            vn_fase := 20;
            --
            -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
            -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 1 and
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 0 then
              --
              vv_existe := 'S';
              --
            end if;
            --
          end loop; -- c_param
          --
          /*for r_cd500 in c_cd500_pessoa(en_notafiscal_id => r_reg.notafiscal_id) loop
            exit when c_cd500_pessoa%notfound or(c_cd500_pessoa%notfound) is null;
            --
            vn_fase := 20;
            --
            -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
            -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_cd500.cfop_id, r_cd500.codst_id, null) = 1 and
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_cd500.cfop_id, r_cd500.codst_id, null) = 0 then
              --
              vv_existe := 'S';
              --
              exit;
              --
            end if;
            --
          end loop;*/
          --
        elsif r_reg.cod_mod in ('21', '22') then
          --
          vn_fase := 21;
          --
          begin
            select 'S'
              into vv_existe
              from nf_compl_oper_pis pis, cod_st cst
             where pis.notafiscal_id = r_reg.notafiscal_id
               and cst.id            = pis.codst_id
               and cst.cod_st not in ('70', '71', '72', '73', '74', '75'); -- valores isentos de créditos
          exception
            when others then
              vv_existe := 'N';
          end;
          --
        end if;
        --
        vn_fase := 22;
        --
        if vv_existe = 'S' then
          --
          vn_fase := 23;
          --
          pkb_monta_reg_0150(en_empresa_id      => r_empr.empresa_id,
                             en_pessoa_id       => r_reg.pessoa_id,
                             en_notafiscal_id   => r_reg.notafiscal_id,
                             en_conhectransp_id => null);
          --		  
        end if;
        --
      end loop; -- c_d500_ac100_pessoa
      -- 
      -- Monta Registro C500: NF/Conta de Energia Elétrica (Código 06), NF de Energia Elétrica Eletrônica (Código 66), NF/Conta de fornecimento D¿água Canalizada (Código 29), NF/Consumo Fornecimento de Gás (Código 28) e NF-e (Código 55) Documentos de Entrada / Aquisição com Crédito	  
      vn_fase := 23.1;
      --
      if gn_origem_dado_pessoa = 1 and vv_volta_origem_dado_pessoa = 'N' then
         --
         vn_fase := 23.2;
         --
         gn_origem_dado_pessoa       := 0;
         vv_volta_origem_dado_pessoa := 'S';
         --
      end if;
      --		  
      for r_reg in c_c500_pessoa(en_empresa_id => r_empr.empresa_id) loop
        exit when c_c500_pessoa%notfound or(c_c500_pessoa%notfound) is null;
        --
        pkb_monta_reg_0150(en_empresa_id      => r_empr.empresa_id,
                           en_pessoa_id       => r_reg.pessoa_id,
                           en_notafiscal_id   => r_reg.notafiscal_id);						   
        --
      end loop; -- c_c500_pessoa	  
      --
      vn_fase := 24;
      --
      -- Monta Registro D100: Aquisição de Serviços de Transporte (conhec_transp) modelos: 07, 08, 8B, 09, 10, 11, 26, 27, 57, 63, 67
      for r_reg in c_d100_pessoa(en_empresa_id => r_empr.empresa_id) loop
        exit when c_d100_pessoa%notfound or(c_d100_pessoa%notfound) is null;
        --
        vn_fase := 25;
        --
        pkb_monta_reg_0150(en_empresa_id      => r_empr.empresa_id,
                           en_pessoa_id       => r_reg.pessoa_id);
        --
      end loop; -- c_d100_pessoa
      --
      if vv_volta_origem_dado_pessoa = 'S' and gn_origem_dado_pessoa = 0 then
         --
         vn_fase := 25.2;
         --
         gn_origem_dado_pessoa       := 1;
         vv_volta_origem_dado_pessoa := 'N';
         --
      end if;
      --		  
    end if;
    --
    vn_fase := 26;
    --
    -- Monta Registro 1101: Apuração de Crédito Extemporâneo - Documentos e Operações de Períodos Anteriores - PIS/Pasep
    for r_reg in c_1101_pessoa(en_empresa_id => r_empr.empresa_id) loop
      exit when c_1101_pessoa%notfound or(c_1101_pessoa%notfound) is null;
      --
      vn_fase := 27;
      --
      pkb_monta_reg_0150(en_empresa_id    => r_empr.empresa_id,
                         en_pessoa_id     => r_reg.pessoa_id,
                         en_notafiscal_id => r_reg.notafiscal_id);
      --
    end loop; -- c_1101_pessoa
    --
    if gt_row_versao_layout_efd_pc.cd >= '006' then
      --
      -- Monta Registro 1011: Detalhamento das Contribuições com Exigibilidade Suspensa
      for r_reg in c_1011(gt_row_abertura_efd_pc.empresa_id,
                          gt_row_abertura_efd_pc.dt_ini,
                          gt_row_abertura_efd_pc.dt_fin) loop
        exit when c_1011%notfound or(c_1011%notfound) is null;
        --
        vn_fase := 28;
        --
        if (nvl(r_reg.pessoa_id, 0) > 0) then
          --
          gn_origem_dado_pessoa := 0;
          --
          vn_fase := 29;
          --
          pkb_monta_reg_0150(en_empresa_id => r_empr.empresa_id,
                             en_pessoa_id  => r_reg.pessoa_id);
          --
        end if;
        --
        vn_fase := 30;
        --
      end loop; -- c_1011
      --
    end if;
    --
    vn_fase := 31;
    --
    -- Monta registro 0190: Unidades --
    if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 17;
      --
      -- F100 - tabela: dem_doc_oper_ger_cc
      for r_reg in c_f100_unid(en_empresa_id => r_empr.empresa_id) loop
        exit when c_f100_unid%notfound or(c_f100_unid%notfound) is null;
        --
        vn_fase := 17.1;
        --
        pkb_monta_reg_0190(en_empresa_id => r_empr.empresa_id,
                           en_unidade_id => r_reg.unidade_id);
        --
      end loop; -- c_f100_unid
      --
    end if;
    --
    vn_fase := 18;
    --
    if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 19;
      --
      for r_nf in c_nf(en_empresa_id => r_empr.empresa_id) loop
        exit when c_nf%notfound or(c_nf%notfound) is null;
        --
        vv_existe := 'N';
        --
        for rec_param in c_param(r_nf.notafiscal_id) loop
          exit when c_param%notfound or(c_param%notfound) is null;
          --
          vn_fase := 20;
          --
          -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
          -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
          if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 1 and
             pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 0 then
            --
            vv_existe := 'S';
            --
          end if;
          --
        end loop; -- c_param
        --
        vn_fase := 21;
        --
        if vv_existe = 'S' then
          --
          vn_fase := 21.1;
          --
          -- C170 - tabela: item_nota_fiscal modelos: 01, 1B, 04, 55, 99
          for r_reg in c_c170_unid(en_notafiscal_id => r_nf.notafiscal_id) loop
            exit when c_c170_unid%notfound or(c_c170_unid%notfound) is null;
            --
            vn_fase := 21.2;
            --
            if r_reg.unid_trib is not null then
              --
              vn_fase := 21.3;
              --
              pkb_monta_reg_0190(en_empresa_id => r_empr.empresa_id,
                                 en_unidade_id => pk_csf.fkg_unidade_id(en_multorg_id => pk_csf.fkg_multorg_id_empresa(en_empresa_id => r_empr.empresa_id),
                                                                        ev_sigla_unid => r_reg.unid_trib));
            end if;
            --
            vn_fase := 21.4;
            --
            if nvl(r_reg.unidade_id, 0) <> 0 then
              --
              vn_fase := 21.5;
              --
              pkb_monta_reg_0190(en_empresa_id => r_empr.empresa_id,
                                 en_unidade_id => r_reg.unidade_id);
              --
            end if;
            --
          end loop; -- c_c170_unid
          --
        end if;
        --
      end loop; -- c_nf
      --
      vn_fase := 22;
      --
      -- C481 - tabela: res_dia_doc_ecf_pis e teoricamente já está sendo considerado o Cofins do C485
      for r_reg in c_481_485(en_empresa_id => r_empr.empresa_id) loop
        exit when c_481_485%notfound or(c_481_485%notfound) is null;
        --
        vn_fase := 22.1;
        --
        for r_481 in c_481_unid(en_reducaozecf_id => r_reg.reducaozecf_id) loop
          exit when c_481_unid%notfound or(c_481_unid%notfound) is null;
          --
          vn_fase := 22.2;
          --
          -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
          -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
          if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_481.codst_id, null) = 1 and
             pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_481.codst_id, null) = 0 then
            --
            vn_fase := 22.3;
            --
            pkb_monta_reg_0190(en_empresa_id => r_empr.empresa_id,
                               en_unidade_id => r_481.unidade_id);
            --
          end if;
          --
        end loop;
        --
      end loop;
      --
      vn_fase := 23;
      --
      -- C490 - tabela cupom_fiscal modelo 60
      for r_reg in c_c490_unid(en_empresa_id => r_empr.empresa_id) loop
        exit when c_c490_unid%notfound or(c_c490_unid%notfound) is null;
        --
        vn_fase := 23.1;
        --
        -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
        -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
        if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
           pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 then
          --
          vn_fase := 23.2;
          --
          if nvl(r_reg.unidade_id, 0) <> 0 then
            --
            vn_fase := 23.3;
            --
            pkb_monta_reg_0190(en_empresa_id => r_empr.empresa_id,
                               en_unidade_id => r_reg.unidade_id);
            --
          end if;
          --
        end if;
        --
      end loop; -- c_c490_unid
      --
      vn_fase := 24;
      --
      -- C860 - tabela: cupom_fiscal/mod_fiscal/cfop/imp_itemcf/tipo_imposto e cod_st
      for r_reg in c_c860_unid(en_empresa_id => r_empr.empresa_id) loop
        exit when c_c860_unid%notfound or(c_c860_unid%notfound) is null;
        --
        vn_fase := 24.1;
        --
        -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
        -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
        if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
           pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 then
          --
          vn_fase := 24.2;
          --
          pkb_monta_reg_0190(en_empresa_id => r_empr.empresa_id,
                             en_unidade_id => r_reg.unidade_id);
          --
        end if;
        --
      end loop; -- c_c860_unid
      --
    end if;
    --
    vn_fase := 25;
    --
    -- Monta Registro 0200: Tabela de Identificação do Item (Produtos e Serviços) --
    if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 26;
      --
      -- Monta Registro F100: Demais Documentos e Operações Geradoras de Contribuição e Créditos
      for r_reg in c_f100_item(en_empresa_id => r_empr.empresa_id) loop
        exit when c_f100_item%notfound or(c_f100_item%notfound) is null;
        --
        vn_fase := 26.1;
        --
        pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                           en_item_id    => r_reg.item_id);
        --
      end loop; -- c_f100_item
      --
      vn_fase := 27;
      --
      -- Monta Registro A170: Complemento do Documento - Itens do Documento
      -- Monta Registro C170: Complemento do Documento - Itens do Documento (Códigos 01, 1B, 04, 55 e 99)
      for r_reg in c_ac170_nf_item(en_empresa_id => r_empr.empresa_id) loop
        exit when c_ac170_nf_item%notfound or(c_ac170_nf_item%notfound) is null;
        --
        vv_existe := 'N';
        --
        for rec_param in c_param(r_reg.notafiscal_id) loop
          exit when c_param%notfound or(c_param%notfound) is null;
          --
          vn_fase := 27.1;
          --
          -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
          -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
          if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 1 and -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
             pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 0 then
            --
            vn_fase := 27.2;
            --
            vv_existe := 'S';
            --
            exit;
            --
          end if;
          --
        end loop; -- c_param
        --
        vn_fase := 28;
        --
        if vv_existe = 'S' then
          --
          for r_reg_item in c_ac170_item(en_notafiscal_id => r_reg.notafiscal_id) loop
            exit when c_ac170_item%notfound or(c_ac170_item%notfound) is null;
            --
            vn_fase := 28.1;
            --
            pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                               en_item_id    => r_reg_item.item_id);
            --
          end loop; -- c_ac170_item
          --
        end if;
        --
      end loop; -- c_ac170_nf_item
      --
      vn_fase := 29;
      --
      -- Monta Registro C380: Nota Fiscal de Venda a Consumidor (Código 02) - Consolidação de Documentos Emitidos.
      for r_reg in c_c380_item(en_empresa_id => r_empr.empresa_id) loop
        exit when c_c380_item%notfound or(c_c380_item%notfound) is null;
        --
        vn_fase := 29.1;
        --
        -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
        -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
        if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 1 and
           pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 0 then
          --
          vn_fase := 29.2;
          --
          pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                             en_item_id    => r_reg.item_id);
          --
        end if;
        --
      end loop; -- c_c380_item
      --
      vn_fase := 30;
      --
      -- Monta Registro C490: Consolidação de Documentos Emitidos por ECF (Códigos 02, 2D, 59 e 60)
      for r_reg in c_ac490_cf_item(en_empresa_id => r_empr.empresa_id) loop
        exit when c_ac490_cf_item%notfound or(c_ac490_cf_item%notfound) is null;
        --
        vn_fase := 30.1;
        --
        --vv_existe := 'N';
        --
        for rec_param in c_param_cf(r_reg.cupomfiscal_id) loop
          exit when c_param_cf%notfound or(c_param_cf%notfound) is null;
          --
          vn_fase := 30.2;
          --
          -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
          -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
          if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 1 and -- verifica se a CFOP faz parte da receita: 0-não, 1-sim
             pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, rec_param.cfop_id, rec_param.codst_id, null) = 0 then -- verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            --
            vn_fase := 30.3;
            --
            vv_existe := 'S';
            --
            exit;
            --
          end if;
          --
        end loop; -- c_param_cf
        --
        vn_fase := 31;
        --
        if vv_existe = 'S' then
          --
          for r_reg_item in c_ac490_item(en_cupomfiscal_id => r_reg.cupomfiscal_id) loop
            exit when c_ac490_item%notfound or(c_ac490_item%notfound) is null;
            --
            vn_fase := 31.1;
            --
            pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                               en_item_id    => r_reg_item.item_id);
            --
          end loop; -- c_ac490_item
          --
        end if;
        --
      end loop; -- c_ac490_cf_item
      --
    end if;
    --
    vn_fase := 32;
    --
    -- Monta Registro 1101: Apuração de Crédito Extemporâneo - Documentos e Operações de Períodos Anteriores - PIS/Pasep
    for r_reg in c_1101_item(en_empresa_id => r_empr.empresa_id) loop
      exit when c_1101_item%notfound or(c_1101_item%notfound) is null;
      --
      vn_fase := 32.1;
      --
      -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
      -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
      if ((r_reg.tipoimposto_cd = 4 and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0) or
         (r_reg.tipoimposto_cd = 5 and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, null, r_reg.codst_id) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, null, r_reg.codst_id) = 0)) then
        --
        vn_fase := 32.2;
        --
        pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                           en_item_id    => r_reg.item_id);
        --
      end if;
      --
    end loop; -- c_1101_item
    --
    vn_fase := 33;
    --
    if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 33.1;
      --
      -- Monta Registro C481: Resumo Diário de Documentos Emitidos por ECF¿PIS/Pasep (Código 02 e 2D)
      -- Monta Registro C485: Resumo Diário de Documentos Emitidos por ECF - Cofins (Códigos 02 e 2D)
      for r_reg in c_481_485(en_empresa_id => r_empr.empresa_id) loop
        exit when c_481_485%notfound or(c_481_485%notfound) is null;
        --
        vn_fase := 33.2;
        --
        for r_c481 in c_c481_item(en_reducaozecf_id => r_reg.reducaozecf_id) loop
          exit when c_c481_item%notfound or(c_c481_item%notfound) is null;
          --
          vn_fase := 33.3;
          --
          -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
          -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
          if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_c481.codst_id, null) = 1 and
             pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_c481.codst_id, null) = 0 then
            --
            vn_fase := 33.4;
            --
            pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                               en_item_id    => r_c481.item_id);
            --
          end if;
          --
        end loop; -- c_c481_item
      --
      end loop; -- c_481_485
      --
      vn_fase := 35;
      --
      -- Monta Registro C860: Identificação do Equipamento SAT-CF-e
      for r_reg in c_c860_item(en_empresa_id => r_empr.empresa_id) loop
        exit when c_c860_item%notfound or(c_c860_item%notfound) is null;
        --
        vn_fase := 35.1;
        --
        -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
        -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
        if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, null) = 1 and
           pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, null) = 0 then
          --
          vn_fase := 35.2;
          --
          if nvl(r_reg.item_id, 0) = 0 then
            --
            vn_fase := 35.3;
            --
            vn_item_id := pk_csf.fkg_item_id_conf_empr(en_empresa_id => r_empr.empresa_id,
                                                       ev_cod_item   => r_reg.cod_item);
            --
          else
            --
            vn_fase := 35.4;
            --
            vn_item_id := r_reg.item_id;
            --
          end if;
          --
          vn_fase := 35.5;
          --
          pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                             en_item_id    => vn_item_id);
          --
        end if;
        --
      end loop; -- c_c860_item
      --
      vn_fase := 36;
      --
      if gt_row_versao_layout_efd_pc.cd >= '006' then
        --
        -- Monta Registro 1011: Detalhamento das Contribuições com Exigibilidade Suspensa
        for r_reg in c_1011(gt_row_abertura_efd_pc.empresa_id,
                            gt_row_abertura_efd_pc.dt_ini,
                            gt_row_abertura_efd_pc.dt_fin) loop
          exit when c_1011%notfound or(c_1011%notfound) is null;
          --
          vn_fase := 36.1;
          --
          if nvl(r_reg.item_id, 0) > 0 then
            --
            vn_fase := 36.2;
            --
            pkb_monta_reg_0200(en_empresa_id => r_empr.empresa_id,
                               en_item_id    => r_reg.item_id);
            --
          end if;
          --
          vn_fase := 36.3;
          --
        end loop; -- c_1011
        --
      end if;
      --
    end if;
    --
    vn_fase := 37;
    --
    -- Monta Registro 0400: Tabela de Natureza da Operação/Prestação --
    if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 37.1;
      --
      -- Monta Registro C170: Complemento do Documento - Itens do Documento (Códigos 01, 1B, 04 e 55)
      for r_reg in c_c170_natoper(en_empresa_id => r_empr.empresa_id) loop
        exit when c_c170_natoper%notfound or(c_c170_natoper%notfound) is null;
        --
        vn_fase := 37.2;
        --
        -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
        -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
        if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
           pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 then
          --
          vn_fase := 37.3;
          --
          pkb_monta_reg_0400(en_empresa_id => r_empr.empresa_id,
                             en_natoper_id => r_reg.natoper_id);
          --
        end if;
        --
      end loop; -- c_c170_natoper
      --
    end if;
    --
    vn_fase := 38;
    --
    -- Monta Registro 0450: Tabela de Informação Complementar do Documento Fiscal
    if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 38.1;
      --
      -- Monta Registro C500: NF/Conta de Energia Elétrica (Código 06), NF de Energia Elétrica Eletrônica (Código 66), NF/Conta de fornecimento D¿água Canalizada (Código 29), NF/Consumo Fornecimento de Gás (Código 28) e NF-e (Código 55) Documentos de Entrada / Aquisição com Crédito
      -- Monta Registro D500: Nota Fiscal de Serviço de Comunicação (Código 21) e Nota Fiscal de Serviço de Telecomunicação (Código 22) - Documentos de Aquisição com Direito a Crédito
      -- Monta Registro A100: Documento - Nota Fiscal de Serviço
      -- Monta Registro C100: Documento - Nota Fiscal (Código 01), Nota Fiscal Avulsa (Código 1B), Nota Fiscal de Produtor (Código 04), NF-e (Código 55) e NFC-e (Código 65)
      for r_reg in c_cd500_ac100_infcompl(en_empresa_id => r_empr.empresa_id) loop
        exit when c_cd500_ac100_infcompl%notfound or(c_cd500_ac100_infcompl%notfound) is null;
        --
        vn_fase := 38.2;
        --
        vv_existe := 'N';
        --
        if r_reg.cod_mod in ('01', '1B', '04', '55') then
          --
          vn_fase := 38.3;
          --
          for r_cd500 in c_cd500_infcompl(en_notafiscal_id => r_reg.notafiscal_id) loop
            exit when c_cd500_infcompl%notfound or(c_cd500_infcompl%notfound) is null;
            --
            vn_fase := 38.4;
            --
            -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
            -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, r_cd500.cfop_id, r_cd500.codst_id, null) = 1 and
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, r_cd500.cfop_id, r_cd500.codst_id, null) = 0 then
              --
              vv_existe := 'S';
              --
              exit;
              --
            end if;
            --
          end loop;
          --
        elsif r_reg.cod_mod in ('21', '22', '06', '28', '29') then
          --
          vn_fase := 38.5;
          --
          begin
            select 'S'
              into vv_existe
              from dual
             where exists (select 1
                             from nf_compl_oper_pis pis,
                                  cod_st cst
                            where pis.notafiscal_id = r_reg.notafiscal_id
                              and cst.id            = pis.codst_id
                              and cst.cod_st        not in ('70', '71', '72', '73', '74', '75')); -- Valores isentos de créditos
          exception
            when others then
              vv_existe := 'N';
          end;
          --
        elsif r_reg.cod_mod in ('99') then
          --
          vn_fase := 38.6;
          --
          begin
            select 'S'
              into vv_existe
              from tmp_item_nota_fiscal inf,
                   tmp_imp_itemnf       imp,
                   cod_st               cst,
                   tipo_imposto         ti
             where inf.notafiscal_id = r_reg.notafiscal_id
               and imp.itemnf_id     = inf.id
               and cst.id            = imp.codst_id
               and cst.cod_st        not in ('70', '71', '72', '73', '74', '75') -- Valores isentos de créditos
               and ti.id             = imp.tipoimp_id
               and ti.cd             = 4 -- Somente o imposto de PIS
               and pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_empr.empresa_id, inf.cfop_id, imp.codst_id, null) = 1 -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
               and pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_empr.empresa_id, inf.cfop_id, imp.codst_id, null) = 0 -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
               and rownum            = 1; -- Basta ter um registro para conferência dos dados
          exception
            when others then
              vv_existe := 'N';
          end;
          --
        end if;
        --
        vn_fase := 38.7;
        --
        if vv_existe = 'S' then
          --
          vn_fase := 38.8;
          --
          pkb_monta_reg_0450(en_empresa_id        => r_empr.empresa_id,
                             en_notafiscal_id     => null,
                             en_infcompdctofis_id => r_reg.inforcompdctofiscal_id);
          --
          vn_fase := 38.9;
          --
          pkb_monta_reg_0450(en_empresa_id        => r_empr.empresa_id,
                             en_notafiscal_id     => r_reg.notafiscal_id,
                             en_infcompdctofis_id => null);
          --
        end if;
        --
      end loop; -- c_cd500_ac100_infcompl
      --
      vn_fase := 39;
      --
      -- Monta Registro D100: Aquisição de Serviços de Transporte (conhec_transp) modelos: 07, 08, 8B, 09, 10, 11, 26, 27, 57, 63, 67
      for r_reg in c_d100_infcompl(en_empresa_id => r_empr.empresa_id) loop
        exit when c_d100_infcompl%notfound or(c_d100_infcompl%notfound) is null;
        --
        vn_fase := 39.1;
        --
        pkb_monta_reg_0450(en_empresa_id        => r_empr.empresa_id,
                           en_notafiscal_id     => null,
                           en_infcompdctofis_id => r_reg.inforcompdctofiscal_id);
        --
      end loop; -- c_d100_infcompl
      --
    end if;
    --
  end loop; -- empresas e filiais
  --
  vn_fase := 40;
  --
  -- Monta Registro 0500: Plano de Contas Contábeis --
  if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
     (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
    --
    -- Monta Registro D100: Aquisição de Serviços de Transporte - Nota Fiscal de Serviço de Transporte (Código 07)
    -- Conhecimento de Transporte Rodoviário de Cargas (Código 08), Conhecimento de Transporte de Cargas Avulso (Código 8B),
    -- Conhecimento de Transporte Aquaviário de Cargas (Código 09), Conhecimento de Transporte Aéreo (Código 10), Conhecimento de
    -- Transporte Ferroviário de Cargas (Código 11), Conhecimento de Transporte Multimodal de Cargas (Código 26), Nota Fiscal de Transporte Ferroviário de Carga (Código 27),
    -- Conhecimento de Transporte Eletrônico ¿ CT-E (Código 57), Bilhete de Passagem Eletrônico - BP-e (Código 63) e Conhecimento de Transporte Eletrônico para Outros Serviços ¿ CT-e OS, modelo 67
    for rec in c_emp loop
      exit when c_emp%notfound or(c_emp%notfound) is null;
      --
      for r_reg in c_d100(rec.empresa_id,
                          gt_row_abertura_efd_pc.dt_ini,
                          gt_row_abertura_efd_pc.dt_fin,
                          gn_dm_dt_escr_dfepoe) loop
        exit when c_d100%notfound or(c_d100%notfound) is null;
        --
        vn_fase := 40.1;
        --
        begin
          select p.id
            into vn_planoconta_id
            from plano_conta p
           where p.empresa_id = rec.empresa_id
             and p.cod_cta    = r_reg.cod_cta;
        exception
          when others then
            vn_planoconta_id := 0;
        end;
        --
        if nvl(vn_planoconta_id, 0) > 0 then
          --
          pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                             vv_parametro     => 'c_d100');
          --
        end if;
        --
      end loop; -- c_d100
    --
    end loop; -- c_emp
    --
    vn_fase := 41;
    --
    -- Monta Registro C501: Complemento da Operação (Códigos 06, 28 e 29) - PIS/Pasep
    -- Monta Registro D501: Complemento da Operação (Códigos 21 e 22) - PIS/Pasep
    -- Monta Registro C505: Complemento da Operação (Códigos 06, 28 e 29) - Cofins
    -- Monta Registro D505: Complemento da Operação (Códigos 21 e 22) - Cofins
    for r_reg in c_cd501_cd505_plano loop
      exit when c_cd501_cd505_plano%notfound or(c_cd501_cd505_plano%notfound) is null;
      --
      vn_fase := 41.1;
      --
      begin
        select nc.planoconta_id
          into vn_planoconta_id
          from nf_compl_oper_pis nc,
               cod_st cst,
               plano_conta pc
         where nc.notafiscal_id = r_reg.notafiscal_id
           and cst.id           = nc.codst_id
           and cst.cod_st       not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
           and pc.id            = nc.planoconta_id;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 41.2;
      --
      if nvl(vn_planoconta_id, 0) = 0 then
        --
        vn_fase := 41.3;
        --
        begin
          select pc.id
            into vn_planoconta_id
            from tmp_nota_fiscal nf,
                 plano_conta pc
           where nf.id            = r_reg.notafiscal_id
             and nf.cod_cta       is not null
             and pc.empresa_id    = nf.empresa_id
             and trim(pc.cod_cta) = (nf.cod_cta);
        exception
          when others then
            vn_planoconta_id := 0;
        end;
        --
      end if;
      --
      vn_fase := 41.4;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 41.4;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_cd501_cd505_plano1');
        --
      end if;
      --
      vn_fase := 41.5;
      --
      begin
        select nc.planoconta_id
          into vn_planoconta_id
          from nf_compl_oper_cofins nc,
               cod_st cst,
               plano_conta pc
         where nc.notafiscal_id = r_reg.notafiscal_id
           and cst.id           = nc.codst_id
           and cst.cod_st       not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
           and pc.id            = nc.planoconta_id;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 41.6;
      --
      if nvl(vn_planoconta_id, 0) = 0 then
        --
        vn_fase := 41.7;
        --
        begin
          select pc.id
            into vn_planoconta_id
            from tmp_nota_fiscal nf,
                 plano_conta pc
           where nf.id            = r_reg.notafiscal_id
             and nf.cod_cta       is not null
             and pc.empresa_id    = nf.empresa_id
             and trim(pc.cod_cta) = (nf.cod_cta);
        exception
          when others then
            vn_planoconta_id := 0;
        end;
        --
      end if;
      --
      vn_fase := 41.8;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 41.9;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_cd501_cd505_plano2');
        --
      end if;
      --
      vn_fase := 41.10;
      --
      -- Para notas fiscais de modelo 21 e 22
      begin
        select pc.id planoconta_id
          into vn_planoconta_id
          from tmp_item_nota_fiscal it,
               plano_conta pc
         where it.notafiscal_id = r_reg.notafiscal_id
           and pc.cod_cta       = it.cod_cta
           and exists (select 1
                         from tmp_item_nota_fiscal ie,
                              tmp_imp_itemnf       imp,
                              cod_st               cst,
                              tipo_imposto         ti
                        where ie.notafiscal_id = it.notafiscal_id
                          and imp.itemnf_id    = ie.id
                          and cst.id           = imp.codst_id
                          and cst.cod_st       not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
                          and ti.id            = imp.tipoimp_id
                          and ti.cd            in (4, 5));
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 41.11;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 41.12;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_cd501_cd505_plano3');
        --
      end if;
      --
    end loop; -- c_cd501_cd505_plano
    --
    vn_fase := 42;
    --
    -- Monta Registro C170: Complemento do Documento - Itens do Documento (Códigos 01, 1B, 04 e 55)
    for r_reg in c_c170_plano loop
      exit when c_c170_plano%notfound or(c_c170_plano%notfound) is null;
      --
      vn_fase := 42.1;
      --
      -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
      -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 and
         r_reg.planoconta_id is not null and r_reg.paramcfop = 1 then
        --
        vn_fase := 42.2;
        --
        pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                           vv_parametro     => 'c_c170_plano');
        --
      else
        --
        if (r_reg.planoconta_id is null and r_reg.cod_cta is null and r_reg.paramcfop = 1) then
          --
          vn_fase := 42.3;
          --
          gv_resumo_log := 'Erro de validação na NF ' || r_reg.nro_nf || ' série ' || r_reg.serie || ' id ' || r_reg.nf_id || ' item ' || r_reg.nro_item || ' não foi informado o plano de conta (cod_cta). O CFOP ' || r_reg.cfop || ' da empresa ' || r_reg.empresa_id || ' pode ser retirado da escrituração em SPED/Parâmetro/ Parâmetros de CFOP';
          --
          declare
            vn_loggenerico_id log_generico.id%type;
          begin
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem_log,
                                             ev_resumo         => gv_resumo_log,
                                             en_tipo_log       => erro_de_informacao,
                                             en_referencia_id  => gt_row_abertura_efd_pc.id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
            gv_resumo_log := null;
          exception
            when others then
              null;
          end;
          --
        else
          --
          if (r_reg.planoconta_id is null and r_reg.cod_cta is not null and r_reg.paramcfop = 1) then
            --
            vn_fase := 42.4;
            --
            gv_resumo_log := 'Erro de validação na NF ' || r_reg.nro_nf || ' série ' || r_reg.serie || ' id ' || r_reg.nf_id || ' item ' || r_reg.nro_item || ' não existe o cadastro no plano de conta para este código CTA (' || r_reg.cod_cta || '). O CFOP ' || r_reg.cfop || ' da empresa ' || r_reg.empresa_id || ' pode ser retirado da escrituração em SPED/Parâmetro/ Parâmetros de CFOP';
            --
            declare
              vn_loggenerico_id log_generico.id%type;
            begin
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem_log,
                                               ev_resumo         => gv_resumo_log,
                                               en_tipo_log       => erro_de_informacao,
                                               en_referencia_id  => gt_row_abertura_efd_pc.id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
              gv_resumo_log := null;
            exception
              when others then
                null;
            end;
            --
          end if;
          --
        end if;
        --
      end if;
      --
    end loop; -- c_c170_plano
    --
    vn_fase := 43;
    --
    -- Monta Registro A170: Complemento do Documento - Itens do Documento
    for r_reg in c_a170_plano loop
      exit when c_a170_plano%notfound or(c_a170_plano%notfound) is null;
      --
      vn_fase := 43.1;
      --
      -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
      -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 and
         r_reg.planoconta_id is not null and r_reg.paramcfop = 1 then
        --
        vn_fase := 43.2;
        --
        pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                           vv_parametro     => 'c_a170_plano');
        --
      else
        --
        if (r_reg.planoconta_id is null and r_reg.cod_cta is null and r_reg.paramcfop = 1) then
          --
          vn_fase := 43.3;
          --
          gv_resumo_log := 'Erro de validação na NF modelo 99 ' || r_reg.nro_nf || ' série ' || r_reg.serie || ' id ' || r_reg.nf_id || ' item ' || r_reg.nro_item || ' não foi informado o plano de conta (cod_cta). O CFOP ' || r_reg.cfop || ' da empresa ' || r_reg.empresa_id || ' pode ser retirado da escrituração em SPED/Parâmetro/ Parâmetros de CFOP';
          --
          declare
            vn_loggenerico_id log_generico.id%type;
          begin
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem_log,
                                             ev_resumo         => gv_resumo_log,
                                             en_tipo_log       => erro_de_informacao,
                                             en_referencia_id  => gt_row_abertura_efd_pc.id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
            gv_resumo_log := null;
          exception
            when others then
              null;
          end;
          --
        else
          --
          if (r_reg.planoconta_id is null and r_reg.cod_cta is not null and r_reg.paramcfop = 1) then
            --
            vn_fase := 43.4;
            --
            gv_resumo_log := 'Erro de validação na NF modelo 99 ' || r_reg.nro_nf || ' série ' || r_reg.serie || ' id ' || r_reg.nf_id || ' item ' || r_reg.nro_item || ' não existe o cadastro no plano de conta para este código CTA (' || r_reg.cod_cta || '). O CFOP ' || r_reg.cfop || ' da empresa ' || r_reg.empresa_id || ' pode ser retirado da escrituração em SPED/Parâmetro/ Parâmetros de CFOP';
            --
            declare
              vn_loggenerico_id log_generico.id%type;
            begin
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem_log,
                                               ev_resumo         => gv_resumo_log,
                                               en_tipo_log       => erro_de_informacao,
                                               en_referencia_id  => gt_row_abertura_efd_pc.id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
              gv_resumo_log := null;
            exception
              when others then
                null;
            end;
            --
          end if;
          --
        end if;
        --
      end if;
      --
    end loop; -- c_a170_plano
    --
    vn_fase := 44;
    --
    -- Monta Registro C380: Nota Fiscal de Venda a Consumidor (Código 02) - Consolidação de Documentos Emitidos.
    for r_reg in c_c380_plano loop
      exit when c_c380_plano%notfound or(c_c380_plano%notfound) is null;
      --
      vn_fase := 44.1;
      --
      -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
      -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 0 then
        --
        vn_fase := 44.2;
        --
        pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                           vv_parametro     => 'c_c380_plano');
        --
      end if;
      --
    end loop; -- c_c380_plano
    --
    vn_fase := 45;
    --
    -- Monta Registro C481: Resumo Diário de Documentos Emitidos por ECF¿PIS/Pasep (Código 02 e 2D)
    -- Monta Registro C485: Resumo Diário de Documentos Emitidos por ECF - Cofins (Códigos 02 e 2D)
    for r_reg in c_c481_c485_plano loop
      exit when c_c481_c485_plano%notfound or(c_c481_c485_plano%notfound) is null;
      --
      vn_fase := 45.1;
      --
      for r_c481 in c_c481_plano(r_reg.reducaozecf_id) loop
        exit when c_c481_plano%notfound or(c_c481_plano%notfound) is null;
        --
        vn_fase := 45.2;
        --
        -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
        -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
        if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_c481.codst_id, null) = 1 and
           pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_c481.codst_id, null) = 0 then
          --
          vn_fase := 45.3;
          --
          pkb_monta_reg_0500(en_planoconta_id => r_c481.planoconta_id,
                             vv_parametro     => 'c_c481_plano');
          --
        end if;
        --
      end loop; -- c_c481_plano
      --
      vn_fase := 46;
      --
      for r_c485 in c_c485_plano(r_reg.reducaozecf_id) loop
        exit when c_c485_plano%notfound or(c_c485_plano%notfound) is null;
        --
        vn_fase := 46.1;
        --
        -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
        -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
        if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, null, r_c485.codst_id) = 1 and
           pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, null, r_c485.codst_id) = 0 then
          --
          vn_fase := 46.2;
          --
          pkb_monta_reg_0500(en_planoconta_id => r_c485.planoconta_id,
                             vv_parametro     => 'c_c485_plano');
          --
        end if;
        --
      end loop; -- c_c485_plano
    --
    end loop; -- c_c481_c485_plano
    --
    vn_fase := 47;
    --
    -- Monta Registro C490: Consolidação de Documentos Emitidos por ECF (Códigos 02, 2D, 59 e 60)
    for r_reg in c_c490_plano loop
      exit when c_c490_plano%notfound or(c_c490_plano%notfound) is null;
      --
      vn_fase := 47.1;
      --
      -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
      -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 and
         r_reg.planoconta_id is not null and r_reg.paramcfop = 1 then
        --
        vn_fase := 47.2;
        --
        pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                           vv_parametro     => 'c_c490_plano');
        --
      else
        --
        if (r_reg.planoconta_id is null and r_reg.paramcfop = 1) then
          --
          vn_fase := 47.3;
          --
          gv_resumo_log := 'Erro de validação na CF modelo 60 ' || r_reg.nro_cfe || ' série ' || r_reg.nro_serie_sat || ' id ' || r_reg.cf_id || ' item ' || r_reg.nro_item || ' não foi informado o plano de conta (cod_cta). O CFOP ' || r_reg.cfop || ' da empresa ' || r_reg.empresa_id || ' pode ser retirado da escrituração em SPED/Parâmetro/ Parâmetros de CFOP';
          --
          declare
            vn_loggenerico_id log_generico.id%type;
          begin
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem_log,
                                             ev_resumo         => gv_resumo_log,
                                             en_tipo_log       => erro_de_informacao,
                                             en_referencia_id  => gt_row_abertura_efd_pc.id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
            gv_resumo_log := null;
          exception
            when others then
              null;
          end;
          --
        end if;
        --
      end if;
      --
    end loop; -- c_c490_plano
    --
    vn_fase := 48;
    --
    -- Monta Registro C860: Identificação do Equipamento SAT-CF-e
    for r_reg in c_c860_plano loop
      exit when c_c860_plano%notfound or(c_c860_plano%notfound) is null;
      --
      vn_fase := 48.1;
      --
      -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
      -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 and
         r_reg.planoconta_id is not null and r_reg.paramcfop = 1 then
        --
        vn_fase := 48.2;
        --
        pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                           vv_parametro     => 'c_c860_plano');
        --
      else
        --
        if (r_reg.planoconta_id is null and r_reg.paramcfop = 1) then
          --
          vn_fase := 48.3;
          --
          gv_resumo_log := 'Erro de validação na CF modelo 59 ' || r_reg.nro_cfe || ' série ' || r_reg.nro_serie_sat || ' id ' || r_reg.cf_id || ' item ' || r_reg.nro_item || ' não foi informado o plano de conta (cod_cta). O CFOP ' || r_reg.cfop || ' da empresa ' || r_reg.empresa_id || ' pode ser retirado da escrituração em SPED/Parâmetro/ Parâmetros de CFOP';
          --
          declare
            vn_loggenerico_id log_generico.id%type;
          begin
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem_log,
                                             ev_resumo         => gv_resumo_log,
                                             en_tipo_log       => erro_de_informacao,
                                             en_referencia_id  => gt_row_abertura_efd_pc.id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
            gv_resumo_log := null;
          exception
            when others then
              null;
          end;
          --
        end if;
        --
      end if;
      --
    end loop; -- c_c860_plano
    --
    vn_fase := 49;
    --
    -- Monta Registro D100: Aquisição de Serviços de Transporte (conhec_transp) modelos: 07, 08, 8B, 09, 10, 11, 26, 27, 57, 63, 67
    for r_reg in c_d100_plano loop
      exit when c_d100_plano%notfound or(c_d100_plano%notfound) is null;
      --
      vn_fase := 49.1;
      --
      begin
        select cc.planoconta_id
          into vn_planoconta_id
          from ct_comp_doc_pis cc,
               cod_st cs,
               plano_conta pc
         where cc.conhectransp_id = r_reg.conhectransp_id
           and cs.id              = cc.codst_id
           and cs.cod_st          not in ('70', '71', '72', '73', '74', '75') -- Valores isentos de créditos
           and pc.id              = cc.planoconta_id;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 49.2;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 49.3;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_d100_plano1');
        --
      end if;
      --
      vn_fase := 50;
      --
      begin
        select cc.planoconta_id
          into vn_planoconta_id
          from ct_comp_doc_cofins cc,
               cod_st cs,
               plano_conta pc
         where cc.conhectransp_id = r_reg.conhectransp_id
           and cs.id              = cc.codst_id
           and cs.cod_st          not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
           and pc.id              = cc.planoconta_id;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 51;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 51.1;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_d100_plano2');
        --
      end if;
      --
      vn_fase := 52;
      --
      begin
        select pc.id
          into vn_planoconta_id
          from plano_conta pc
         where pc.empresa_id  = r_reg.empresa_id
           and pc.cod_cta     = r_reg.cod_cta
           and pc.dm_situacao = 1
           and pc.dm_st_proc  = 1;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 53;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 53.1;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_d100_plano3');
        --
      end if;
      --
    end loop; -- c_d100_plano
    --
    vn_fase := 54;
    --
    -- Monta Registro D200: Resumo da Escrituração Diária modelos: 07, 08, 8B, 09, 10, 11, 26, 27, 57, 63 e 67
    for r_reg in c_d200_plano loop
      exit when c_d200_plano%notfound or(c_d200_plano%notfound) is null;
      --
      vn_fase := 54.1;
      --
      begin
        select cc.planoconta_id
          into vn_planoconta_id
          from ct_comp_doc_pis cc,
               cod_st cs,
               plano_conta pc
         where cc.conhectransp_id = r_reg.conhectransp_id
           and cs.id              = cc.codst_id
           and cs.cod_st          not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
           and pc.id              = cc.planoconta_id;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 54.2;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 54.3;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_d200_plano1');
        --
      end if;
      --
      vn_fase := 55;
      --
      begin
        select cc.planoconta_id
          into vn_planoconta_id
          from ct_comp_doc_cofins cc,
               cod_st cs,
               plano_conta pc
         where cc.conhectransp_id = r_reg.conhectransp_id
           and cs.id              = cc.codst_id
           and cs.cod_st          not in ('70', '71', '72', '73', '74', '75') -- valores isentos de créditos
           and pc.id              = cc.planoconta_id;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 56;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 56.1;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_d200_plano2');
        --
      end if;
      --
      vn_fase := 57;
      --
      begin
        select pc.id
          into vn_planoconta_id
          from plano_conta pc
         where pc.empresa_id  = r_reg.empresa_id
           and pc.cod_cta     = r_reg.cod_cta
           and pc.dm_situacao = 1
           and pc.dm_st_proc  = 1;
      exception
        when others then
          vn_planoconta_id := 0;
      end;
      --
      vn_fase := 58;
      --
      if nvl(vn_planoconta_id, 0) <> 0 then
        --
        vn_fase := 58.1;
        --
        pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id,
                           vv_parametro     => 'c_d200_plano3');
        --
      end if;
      --
    end loop; -- c_d200_plano
    --
  end if;
  --
  vn_fase := 59;
  --
  -- Monta Bloco I: Operações das Instituições Financeiras, Seguradoras, Entidades de Previdencia Privada, Operadoras de Planos de Assistência à Saúde e Demais Pessoas Jurídicas Referidas
  -- Monta Registro I200: Composição das Receitas, Deduções e/ou Exclusões do Período
  -- Monta Registro I300: Complemento das Operações - Detalhamento das Receitas, Deduções e/ou Exclusões Do Período
  for r_reg in c_i200_i300_plano loop
    exit when c_i200_i300_plano%notfound or(c_i200_i300_plano%notfound) is null;
    --
    vn_fase := 59.1;
    --
    pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                       vv_parametro     => 'c_i200_i300_plano');
    --
  end loop;
  --
  vn_fase := 60;
  --
  -- Monta Registro 1101: Apuração de Crédito Extemporâneo - Documentos e Operações de Períodos Anteriores - PIS/Pasep
  for r_reg in c_1101_plano loop
    exit when c_1101_plano%notfound or(c_1101_plano%notfound) is null;
    --
    vn_fase := 60.1;
    --
    pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                       vv_parametro     => 'c_1101_plano');
    --
  end loop; -- c_1101_plano
  --
  vn_fase := 61;
  --
  if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
     (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
    --
    vn_fase := 61.1;
    --
    -- Monta Registro F100: Demais Documentos e Operações Geradoras de Contribuição e Créditos
    for r_reg in c_f100_plano loop
      exit when c_f100_plano%notfound or(c_f100_plano%notfound) is null;
      --
      vn_fase := 61.2;

      vn_natrecpc_id := pk_csf.fkg_ncmnatrecpc_npp_id(en_planoconta_id => r_reg.planoconta_id);
      --
      if nvl(vn_natrecpc_id, 0) > 0 then
        --
        vn_fase := 61.3;
        --
        vn_planoconta_id_f := pk_csf.fkg_natrecpc_plc_id(en_natrecpc_id => vn_natrecpc_id);
        --
        vn_fase := 61.4;
        --
        if nvl(vn_planoconta_id_f, 0) > 0 then
          --
          vn_fase := 61.5;
          --
          pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id_f /*r_reg.planoconta_id*/,
                             vv_parametro     => 'c_f100_plano');
          --
        end if;
        --
      end if;
      --
      vn_fase := 61.6;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f100_plano');
      --
    end loop; -- c_f100_plano
    --
    vn_fase := 62;
    --
    -- Monta Registro F120: Bens Incorporados ao Ativo Imobilizado - Operações Geradoras de Créditos com Base nos Encargos de Depreciação e Amortização
    for r_reg in c_f120_plano loop
      exit when c_f120_plano%notfound or(c_f120_plano%notfound) is null;
      --
      vn_fase := 62.1;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f120_plano');
      --
    end loop; -- c_f120_plano
    --
    vn_fase := 63;
    --
    -- Monta Registro F130: Bens Incorporados ao Ativo Imobilizado - Operações Geradoras de Créditos com Base no Valor de Aquisição/Contribuição
    for r_reg in c_f130_plano loop
      exit when c_f130_plano%notfound or(c_f130_plano%notfound) is null;
      --
      vn_fase := 63.1;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f130_plano');
      --
    end loop; -- c_f130_plano
    --
    vn_fase := 64;
    --
    -- Monta Registro F150: Crédito Presumido sobre Estoque de Abertura
    for r_reg in c_f150_plano loop
      exit when c_f150_plano%notfound or(c_f150_plano%notfound) is null;
      --
      vn_fase := 64.1;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f150_plano');
      --
    end loop; -- c_f150_plano
    --
  end if;
  --
  vn_fase := 65;
  --
  if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
     gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 1 then -- Regime de Caixa Escrituração consolidada (Registro F500)
    --
    vn_fase := 65.1;
    --
    -- Monta Registro F500: Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro Presumido - Incidência do PIS/Pasep e da Cofins pelo Regime de Caixa
    for r_reg in c_f500_plano loop
      exit when c_f500_plano%notfound or(c_f500_plano%notfound) is null;
      --
      vn_fase := 65.2;
      --
      /*pkb_monta_reg_0500 ( en_planoconta_id => r_reg.planoconta_id, vv_parametro => 'c_f500_plano' );*/
      --
      vn_natrecpc_id := pk_csf.fkg_ncmnatrecpc_npp_id(en_planoconta_id => r_reg.planoconta_id);
      --
      if nvl(vn_natrecpc_id, 0) > 0 then
        --
        vn_fase := 65.3;
        --
        vn_planoconta_id_f := pk_csf.fkg_natrecpc_plc_id(en_natrecpc_id => vn_natrecpc_id);
        --
        vn_fase := 65.4;
        --
        if nvl(vn_planoconta_id_f, 0) > 0 then
          --
          vn_fase := 65.5;
          --
          pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id_f /*r_reg.planoconta_id*/,
                             vv_parametro     => 'c_f500_plano');
          --
        end if;
        --
      end if;
      --
      vn_fase := 65.6;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f500_plano');
      --
    end loop; -- c_f500_plano
    --
    vn_fase := 66;
    --
    -- Monta Registro F510: Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação Com Base no Lucro Presumido
    for r_reg in c_f510_plano loop
      exit when c_f510_plano%notfound or(c_f510_plano%notfound) is null;
      --
      vn_fase := 66.1;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f510_plano');
      --
    end loop; -- c_f510_plano
    --
  end if; -- gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 1-Regime de Caixa Escrituração consolidada (Registro F500)
  --
  vn_fase := 67;
  --
  if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
     (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
    --
    vn_fase := 67.1;
    --
    -- Monta Registro F525: Composição da Receita Escriturada no Período - Detalhamento da Receita Recebida pelo Regime de Caixa
    for r_reg in c_f525_plano loop
      exit when c_f525_plano%notfound or(c_f525_plano%notfound) is null;
      --
      vn_fase := 67.2;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f525_plano');
      --
    end loop; -- c_f525_plano
    --
    vn_fase := 63;
    --
    -- Monta Registro M100: Crédito de PIS/Pasep Relativo ao Período
    for r_reg in c_m100(gt_row_abertura_efd_pc.id,
                        gt_row_abertura_efd_pc.dt_ini,
                        gt_row_abertura_efd_pc.dt_fin) loop
      exit when c_m100%notfound or(c_m100%notfound) is null;
      --
      -- Monta Registro M110: Ajustes do Crédito de PIS/Pasep Apurado
      for rec_m110 in c_m110(r_reg.id) loop
        exit when c_m110%notfound or(c_m110%notfound) is null;
        --
        -- Registro M115: Detalhamento dos Ajustes do Crédito de PIS/PASEP Apurado
        for rec_m115 in c_m115(rec_m110.id) loop
          exit when c_m115%notfound or(c_m115%notfound) is null;
          --
          vn_fase := 63.1;
          --
          if nvl(rec_m115.planoconta_id, 0) <> 0 then
            --
            vn_fase := 63.2;
            --
            pkb_monta_reg_0500(en_planoconta_id => rec_m115.planoconta_id,
                               vv_parametro     => 'c_m115');
            --
          end if;
          --
        end loop; -- c_m115
      --
      end loop; -- c_m105
    --
    end loop; -- c_m100
    --
    vn_fase := 64;
    --
    -- Monta Registro M500: Crédito de Cofins Relativo Ao Período
    for r_reg in c_m500(gt_row_abertura_efd_pc.id,
                        gt_row_abertura_efd_pc.dt_ini,
                        gt_row_abertura_efd_pc.dt_fin) loop
      exit when c_m500%notfound or(c_m500%notfound) is null;
      --
      -- Monta Registro M510: Ajustes do Crédito de Cofins Apurado
      for rec_m510 in c_m510(r_reg.id) loop
        exit when c_m510%notfound or(c_m510%notfound) is null;
        --
        -- Monta Registro M515: Detalhamento dos Ajustes do Crédito de Cofins Apurado
        for rec_m515 in c_m515(rec_m510.id) loop
          exit when c_m515%notfound or(c_m515%notfound) is null;
          --
          vn_fase := 64.1;
          --
          if nvl(rec_m515.planoconta_id, 0) <> 0 then
            --
            vn_fase := 64.2;
            --
            pkb_monta_reg_0500(en_planoconta_id => rec_m515.planoconta_id,
                               vv_parametro     => 'c_m515');
            --
          end if;
          --
        end loop; -- c_m515
      --
      end loop; -- c_m510
    --
    end loop; -- c_m500
    --
  end if;
  --
  vn_fase := 65;
  --
  if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
     gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 2 then -- Regime de Competência - Escrituração consolidada (Registro F550)
    --
    vn_fase := 65.1;
    --
    -- Monta Registro F550: Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro Presumido - Incidência do PIS/Pasep e da Cofins pelo Regime de Competência
    for r_reg in c_f550_plano loop
      exit when c_f550_plano%notfound or(c_f550_plano%notfound) is null;
      --
      vn_fase := 65.2;
      --
      /*pkb_monta_reg_0500 ( en_planoconta_id => r_reg.planoconta_id, vv_parametro => 'c_f550_plano' );*/
      --
      vn_natrecpc_id := pk_csf.fkg_ncmnatrecpc_npp_id(en_planoconta_id => r_reg.planoconta_id);
      --
      if nvl(vn_natrecpc_id, 0) > 0 then
        --
        vn_fase := 65.3;
        --
        vn_planoconta_id_f := pk_csf.fkg_natrecpc_plc_id(en_natrecpc_id => vn_natrecpc_id);
        --
        vn_fase := 65.4;
        --
        if nvl(vn_planoconta_id_f, 0) > 0 then
          --
          vn_fase := 65.5;
          --
          pkb_monta_reg_0500(en_planoconta_id => vn_planoconta_id_f /*r_reg.planoconta_id*/,
                             vv_parametro     => 'c_f550_plano');
          --
        end if;
        --
      end if;
      --
      vn_fase := 65.6;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f550_plano');
      --
    end loop; -- c_f550_plano
    --
    vn_fase := 66;
    --
    -- Monta Registro F560: Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro Presumido
    for r_reg in c_f560_plano loop
      exit when c_f560_plano%notfound or(c_f560_plano%notfound) is null;
      --
      vn_fase := 66.1;
      --
      pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                         vv_parametro     => 'c_f560_plano');
      --
    end loop; -- c_f560_plano
    --
    vn_fase := 67;
    --
    if gt_row_versao_layout_efd_pc.cd >= '006' then
      --
      -- Monta Registro 1011: Detalhamento das Contribuições com Exigibilidade Suspensa
      for r_reg in c_1011(gt_row_abertura_efd_pc.empresa_id,
                          gt_row_abertura_efd_pc.dt_ini,
                          gt_row_abertura_efd_pc.dt_fin) loop
        exit when c_1011%notfound or(c_1011%notfound) is null;
        --
        vn_fase := 67.1;
        --
        if nvl(r_reg.planoconta_id, 0) <> 0 then
          --
          vn_fase := 67.2;
          --
          pkb_monta_reg_0500(en_planoconta_id => r_reg.planoconta_id,
                             vv_parametro     => 'c_1011');
          --
        end if;
        --
      end loop; -- c_1011
      --
    end if;
    --
  end if; -- gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 1-Regime de Caixa Escrituração consolidada (Registro F500)
  --
  vn_fase := 68;
  --
  -- Monta Registro M200: Consolidação da Contribuição para o PIS/Pasep do Período
  for rec_m200 in c_m200(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m200%notfound or(c_m200%notfound) is null;
    --
    -- Monta Registro M210: Detalhamento da Contribuição para o PIS/Pasep do Período
    for rec_m210 in c_m210(rec_m200.conscontrpis_id) loop
      exit when c_m210%notfound or(c_m210%notfound) is null;
      --
      -- Monta Registro M220: Ajustes da Contribuição para o PIS/Pasep Apurada
      for rec_m220 in c_m220(rec_m200.conscontrpis_id,
                             rec_m210.contrsocapurpc_id) loop
        exit when c_m220%notfound or(c_m220%notfound) is null;
        --
        -- Monta Registro M225: Detalhamento dos Ajustes da Contribuição Para o Pis/Pasep Apurada
        for rec_m225 in c_m225(rec_m220.id) loop
          exit when c_m225%notfound or(c_m225%notfound) is null;
          --
          vn_fase := 68.1;
          --
          if nvl(rec_m225.planoconta_id, 0) <> 0 then
            --
            vn_fase := 68.2;
            --
            pkb_monta_reg_0500(en_planoconta_id => rec_m225.planoconta_id,
                               vv_parametro     => 'c_m225');
            --
          end if;
          --
        end loop; -- c_m225
      --
      end loop; -- c_m220
    --
    end loop; -- c_m210
    --
    vn_fase := 69;
    --
    -- Monta Registro M215: Ajustes da Base de Cálculo da Contribuição para o PIS/Pasep Apurada
    for rec_m215 in c_m215(rec_m200.conscontrpis_id) loop
      exit when c_m215%notfound or(c_m215%notfound) is null;
      --
      vn_fase := 69.1;
      --
      if nvl(rec_m215.planoconta_id, 0) <> 0 then
        --
        vn_fase := 69.2;
        --
        pkb_monta_reg_0500(en_planoconta_id => rec_m215.planoconta_id,
                           vv_parametro     => 'c_m215');
        --
      end if;
      --
    end loop; -- c_m215
  --
  end loop; -- c_m200
  --
  vn_fase := 70;
  --
  -- Monta Registro M600: Consolidação da Contribuição para a Seguridade Social - Cofins do Período
  for rec_m600 in c_m600(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m600%notfound or(c_m600%notfound) is null;
    --
    -- Monta Registro M610: Detalhamento da Contribuição para a Seguridade Social - Cofins do Período
    for rec_m610 in c_m610(rec_m600.conscontrcofins_id) loop
      exit when c_m610%notfound or(c_m610%notfound) is null;
      --
      -- Monta Registro M620: Ajustes da Cofins Apurada
      for rec_m620 in c_m620(rec_m600.conscontrcofins_id,
                             rec_m610.contrsocapurpc_id) loop
        exit when c_m620%notfound or(c_m620%notfound) is null;
        --
        -- Monta Registro M625: Detalhamento dos Ajustes da Cofins Apurada
        for rec_m625 in c_m625(rec_m620.id) loop
          exit when c_m625%notfound or(c_m625%notfound) is null;
          --
          vn_fase := 70.1;
          --
          if nvl(rec_m625.planoconta_id, 0) <> 0 then
            --
            vn_fase := 70.2;
            --
            pkb_monta_reg_0500(en_planoconta_id => rec_m625.planoconta_id,
                               vv_parametro     => 'c_m625');
            --
          end if;
          --
        end loop; -- c_m625
      --
      end loop; -- c_m620
    --
    end loop; -- c_m610
    --
    vn_fase := 71;
    --
    -- Monta Registro M615: Ajustes da Base de Cálculo da COFINS Apurada
    for rec_m615 in c_m615(rec_m600.conscontrcofins_id) loop
      exit when c_m615%notfound or(c_m615%notfound) is null;
      --
      vn_fase := 71.1;
      --
      if nvl(rec_m615.planoconta_id, 0) <> 0 then
        --
        vn_fase := 71.2;
        --
        pkb_monta_reg_0500(en_planoconta_id => rec_m615.planoconta_id,
                           vv_parametro     => 'c_m615');
        --
      end if;
      --
    end loop; -- c_m615
  --
  end loop; -- c_m600
  --
  vn_fase := 72;
  --
  -- Monta Registro M400: Receitas Isentas, não Alcançadas pela Incidência da Contribuição, Sujeitas a Alíquota Zero ou de Vendas com Suspensão  PIS/Pasep
  for rec_m400 in c_m400(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m400%notfound or(c_m400%notfound) is null;
    --
    vn_fase := 72.1;
    --
    -- Monta Registro M410: Detalhamento das Receitas Isentas, não Alcançadas pela Incidência da Contribuição, Sujeitas a Alíquota Zero ou de Vendas com Suspensão  PIS/Pasep
    for rec_m410 in c_m410(rec_m400.id,
                           rec_m400.codst_id,
                           rec_m400.cod_cta) loop
      exit when c_m410%notfound or(c_m410%notfound) is null;
      --
      vn_fase := 72.3;
      --
      if nvl(rec_m410.planoconta_id, 0) <> 0 then
        --
        vn_fase := 72.4;
        --
        pkb_monta_reg_0500(en_planoconta_id => rec_m410.planoconta_id,
                           vv_parametro     => 'c_m410');
        --
      end if;
      --
    end loop;
    --
  end loop;
  --
  vn_fase := 73;
  --
  -- Monta Registro M800: Receitas Isentas, Não Alcançadas pela Incidência da Contribuição, Sujeitas a Alíquota Zero ou de Vendas Com Suspensão  Cofins
  for rec_m800 in c_m800(gt_row_abertura_efd_pc.id,
                         gt_row_abertura_efd_pc.dt_ini,
                         gt_row_abertura_efd_pc.dt_fin) loop
    exit when c_m800%notfound or(c_m800%notfound) is null;
    --
    vn_fase := 73.1;
    --
    -- Monta Registro M810: Detalhamento das Receitas Isentas, Não Alcançadas pela Incidência da Contribuição, Sujeitas a Alíquota Zero ou de Vendas com Suspensão  Cofins
    for rec_m810 in c_m810(rec_m800.id,
                           rec_m800.codst_id,
                           rec_m800.cod_cta) loop
      exit when c_m810%notfound or(c_m810%notfound) is null;
      --
      vn_fase := 73.2;
      --
      if nvl(rec_m810.planoconta_id, 0) <> 0 then
        --
        vn_fase := 73.3;
        --
        pkb_monta_reg_0500(en_planoconta_id => rec_m810.planoconta_id,
                           vv_parametro     => 'c_m810');
        --
      end if;
      --
    end loop;
    --
  end loop;
  --
  vn_fase := 74;
  --
  -- Monta Registro 0600: Centro de Custos --
  if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
     (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
    --
    vn_fase := 74.1;
    --
    -- Monta Registro A170: Complemento do Documento - Itens do Documento
    for r_reg in c_a170_custo loop
      exit when c_a170_custo%notfound or(c_a170_custo%notfound) is null;
      --
      vn_fase := 74.2;
      --
      -- Verifica se a CFOP faz parte da escrituração: 0 - Não, 1 - Sim
      -- Verifica se a CFOP não gera ajuste na consolidação m210: 0 - Não, 1 - Sim
      if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
         pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 then
        --
        vn_fase := 74.3;
        --
        pkb_monta_reg_0600(en_centrocusto_id => r_reg.centrocusto_id);
        --
      end if;
      --
    end loop; -- c_a170_custo
    --
    vn_fase := 75;
    --
    if gt_row_versao_layout_efd_pc.cd >= '006' then
      --
      -- Monta Registro 1011: Detalhamento das Contribuições com Exigibilidade Suspensa
      for r_reg in c_1011(gt_row_abertura_efd_pc.empresa_id,
                          gt_row_abertura_efd_pc.dt_ini,
                          gt_row_abertura_efd_pc.dt_fin) loop
        exit when c_1011%notfound or(c_1011%notfound) is null;
        --
        vn_fase := 75.1;
        --
        if nvl(r_reg.centrocusto_id, 0) > 0 then
          --
          vn_fase := 75.2;
          --
          pkb_monta_reg_0600(en_centrocusto_id => r_reg.centrocusto_id);
          --
        end if;
        --
        vn_fase := 75.3;
        --
      end loop; -- c_1011
      --
    end if;
    --
  end if;
  --
  vn_fase := 76;
  --
  -- Monta Registro 1101: Apuração de Crédito Extemporâneo - Documentos e Operações de Períodos Anteriores - PIS/Pasep
  for r_reg in c_1101_custo loop
    exit when c_1101_custo%notfound or(c_1101_custo%notfound) is null;
    --
    vn_fase := 76.1;
    --
    pkb_monta_reg_0600(en_centrocusto_id => r_reg.centrocusto_id);
    --
  end loop; -- c_1101_custo
  --
  vn_fase := 77;
  --
  if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) in (1, 3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
     (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib, 0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
    --
    vn_fase := 77.1;
    --
    -- Monta Registro F100: Demais Documentos e Operações Geradoras de Contribuição e Créditos
    for r_reg in c_f100_custo loop
      exit when c_f100_custo%notfound or(c_f100_custo%notfound) is null;
      --
      vn_fase := 77.2;
      --
      pkb_monta_reg_0600(en_centrocusto_id => r_reg.centrocusto_id);
      --
    end loop; -- c_f100_custo
    --
    vn_fase := 78;
    --
    -- Monta Registro F120: Bens Incorporados ao Ativo Imobilizado - Operações Geradoras de Créditos com Base nos Encargos de Depreciação e Amortização
    for r_reg in c_f120_custo loop
      exit when c_f120_custo%notfound or(c_f120_custo%notfound) is null;
      --
      vn_fase := 78.1;
      --
      pkb_monta_reg_0600(en_centrocusto_id => r_reg.centrocusto_id);
      --
    end loop; -- c_f120_custo
    --
    vn_fase := 79;
    --
    -- Monta Registro F130: Bens Incorporados ao Ativo Imobilizado - Operações Geradoras de Créditos com Base no Valor de Aquisição/Contribuição
    for r_reg in c_f130_custo loop
      exit when c_f130_custo%notfound or(c_f130_custo%notfound) is null;
      --
      vn_fase := 79.1;
      --
      pkb_monta_reg_0600(en_centrocusto_id => r_reg.centrocusto_id);
      --
    end loop; -- c_f130_custo
    --
  end if;
  --
  vn_fase := 80;
  --
  -- Limpa os dados da memória do banco oracle
  pkb_limpa_vetor;
  --
EXCEPTION 
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_reg_0140 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_REG_0140;
--------------------------------------------------------------------------------------------------------------------------------------
--| Monta o REGISTRO 0120: IDENTIFICAÇÃO DE PERÍODOS DISPENSADOS DA ESCRITURAÇÃO FISCAL DIGITAL DAS CONTRIBUIÇÕES - EFD-CONTRIBUIÇÕES
--------------------------------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0120 IS
   --
   vn_fase  number := 0;
   --
   cursor c_mes is
   select ae.mes_dispensa
        , decode(ae.dm_cod_inf_comp,null,substr(ae.inf_comp,1,90),ae.dm_cod_inf_comp) inf_comp
     from abertura_efd_pc_per_disp ae
    where ae.aberturaefdpc_id = gt_row_abertura_efd_pc.id;
   --
BEGIN
   --
   vn_fase := 1;
   -- Gerar a linha do registro 0120
   for rec in c_mes
   loop
      --
      exit when c_mes%notfound or (c_mes%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '0120' || '|';
      gl_conteudo := gl_conteudo || lpad(rec.mes_dispensa,6,'0') || '|';
      gl_conteudo := gl_conteudo || rec.inf_comp || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0120'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_0120 := nvl(gn_qtde_reg_0120,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0120 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0120;
-------------------------------------------------------------------------------------------------
--| Monta o REGISTRO 0111: TABELA DE RECEITA BRUTA MENSAL PARA FINS DE RATEIO DE CRÉDITOS COMUNS
-------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0111 IS
   --
   vn_fase  number := 0;
   --
   cursor c_receita is
   select rec_bru_ncum_trib_mi
        , rec_bru_ncum_nt_mi
        , rec_bru_ncum_exp
        , rec_bru_cum
        , rec_bru_total
     from abertura_efd_pc_receita
    where aberturaefdpc_id = gt_row_abertura_efd_pc.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) and -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      gt_row_abertura_efd_pc_regime.dm_ind_apro_cred = 2 then -- 1-Método de Apropriação Direta, 2-Método de Rateio Proporcional (Receita Bruta)
      --
      vn_fase := 2;
      -- Gerar a linha do registro 0111
      for rec in c_receita
      loop
         exit when c_receita%notfound or (c_receita%notfound) is null;
         --
         vn_fase := 3;
         --
         -- cria a estrutura do registro separado por PIPE "|"
         gl_conteudo := '|';
         --
         gl_conteudo := gl_conteudo || '0111' || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec.rec_bru_ncum_trib_mi, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec.rec_bru_ncum_nt_mi, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec.rec_bru_ncum_exp, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec.rec_bru_cum, '9999999999990D99') || '|';
         gl_conteudo := gl_conteudo || fkg_formata_num(rec.rec_bru_total, '9999999999990D99') || '|';
         --
         vn_fase := 4;
         --
         pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0111'
                                   , el_conteudo => gl_conteudo );
         --
         gn_qtde_reg_0111 := nvl(gn_qtde_reg_0111,0) + 1;
         --
      end loop;
      --
   end if; -- não deve ser gerado a linha 0111
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0111 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0111;
--------------------------------------------------------------------------------------------------
--| Monta o REGISTRO 0110: REGIMES DE APURAÇÃO DA CONTRIBUIÇÃO SOCIAL E DE APROPRIAÇÃO DE CRÉDITO
--------------------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0110 IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   vn_fase := 1;
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || '0110' || '|';
   gl_conteudo := gl_conteudo || gt_row_abertura_efd_pc_regime.dm_cod_inc_trib || '|';
   gl_conteudo := gl_conteudo || gt_row_abertura_efd_pc_regime.dm_ind_apro_cred || '|';
   gl_conteudo := gl_conteudo || gt_row_abertura_efd_pc_regime.dm_cod_tipo_cont || '|';
   --
   vn_fase := 2;
   --
   if gt_row_versao_layout_efd_pc.cd >= '003' then -- versão do layout 2.01A - a partir de julho/2012
      if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 then -- regime cumulativo
         gl_conteudo := gl_conteudo || gt_row_abertura_efd_pc_regime.dm_ind_reg_cum || '|';
      else
         gl_conteudo := gl_conteudo || '|';
      end if;
   else
      gl_conteudo := gl_conteudo || '|';
   end if;
   --
   vn_fase := 3;
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0110'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_0110 := nvl(gn_qtde_reg_0110,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0110 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0110;
-------------------------------------------------
--| Monta o REGISTRO 0100: DADOS DO CONTABILISTA
-------------------------------------------------
PROCEDURE PKB_MONTA_REG_0100 IS
   --
   vn_fase  number := 0;
   --
   cursor c_contador is
   select '0100' reg
        , p.nome
        , ( lpad(f.num_cpf, 9, '0') || lpad(f.dig_cpf, 2, '0') ) cpf
        , c.crc
        , ( lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') || lpad(j.dig_cnpj, 2, '0') ) cnpj
        , lpad(p.cep, 8, '0') cep
        , p.lograd
        , p.nro
        , p.compl
        , p.bairro
        , trim(substr(p.fone, 1, 10)) fone
        , trim(substr(p.fax, 1, 10)) fax
        , p.email
        , ci.ibge_cidade cod_mun
     from r_contador_abertura_efd_pc  r
        , contador                    c
        , pessoa                      p
        , cidade                      ci
        , fisica                      f
        , juridica                    j
    where r.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and c.id               = r.contador_id
      and p.id               = c.pessoa_id
      and ci.id              = p.cidade_id
      and f.pessoa_id        = p.id
      and j.pessoa_id(+)     = p.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec in c_contador loop
      exit when c_contador%notfound or (c_contador%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || rec.reg || '|';
      gl_conteudo := gl_conteudo || rec.nome || '|';
      gl_conteudo := gl_conteudo || rec.cpf || '|';
      gl_conteudo := gl_conteudo || rec.crc || '|';
      gl_conteudo := gl_conteudo || rec.cnpj || '|';
      gl_conteudo := gl_conteudo || rec.cep || '|';
      gl_conteudo := gl_conteudo || rec.lograd || '|';
      gl_conteudo := gl_conteudo || rec.nro || '|';
      gl_conteudo := gl_conteudo || rec.compl || '|';
      gl_conteudo := gl_conteudo || rec.bairro || '|';
      gl_conteudo := gl_conteudo || rec.fone || '|';
      gl_conteudo := gl_conteudo || rec.fax || '|';
      gl_conteudo := gl_conteudo || rec.email || '|';
      gl_conteudo := gl_conteudo || rec.cod_mun || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0100'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_0100 := nvl(gn_qtde_reg_0100,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0100 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0100;
-------------------------------------------------------------------------------------
--| Monta o REGISTRO 0035: IDENTIFICAÇÃO DE SOCIEDADE EM CONTA DE PARTICIPAÇÃO - SCP
-------------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0035 IS
   --
   vn_fase  number := 0;
   --
   cursor c_scp is
      select (lpad(ju.num_cnpj,8,'0')||lpad(ju.num_filial,4,'0')||lpad(ju.dig_cnpj,2,'0')) cod_scp
           , rp.cod_rel desc_scp
           , rp.inf_compl inf_comp
        from abertura_efd_pc_scp ae
           , pessoa_relac        pr
           , pessoa              pe
           , juridica            ju
           , relac_part          rp
       where ae.aberturaefdpc_id = gt_row_abertura_efd_pc.id
         and pr.id               = ae.pessoarelac_id
         and pe.id               = pr.pessoa_id
         and ju.pessoa_id        = pe.id
         and rp.id               = pr.relacpart_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec in c_scp loop
      exit when c_scp%notfound or (c_scp%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '0035' || '|';
      gl_conteudo := gl_conteudo || rec.cod_scp || '|';
      gl_conteudo := gl_conteudo || rec.desc_scp || '|';
      gl_conteudo := gl_conteudo || rec.inf_comp || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0035'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_0035 := nvl(gn_qtde_reg_0035,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0035 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0035;
-----------------------------------------------
--| Monta o REGISTRO 0001: ABERTURA DO BLOCO 0
-----------------------------------------------
PROCEDURE PKB_MONTA_REG_0001 IS
BEGIN
   --
   -- cria a estrutura do registro separado por PIPE "|"
   gl_conteudo := '|';
   --
   gl_conteudo := gl_conteudo || '0001' || '|';
   gl_conteudo := gl_conteudo || 0 || '|';
   --
   pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0001'
                             , el_conteudo => gl_conteudo );
   --
   gn_qtde_reg_0001 := nvl(gn_qtde_reg_0001,0) + 1;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0001: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0001;
-----------------------------------------------------------------------------------
--| Monta o REGISTRO 0000: ABERTURA DO ARQUIVO DIGITAL E IDENTIFICAÇÃO DA ENTIDADE
-----------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_REG_0000 IS
   --
   vn_fase  number := 0;
   --
   cursor c_efd is
   select efd.id
        , efd.empresa_id
        , lpad(vl.cd, 3, '0') versao
        , efd.dm_tipo_escr
        , efd.dm_ind_sit_esp
        , efd.num_rec_anterior
        , efd.dt_ini
        , efd.dt_fin
        , pk_csf.fkg_converte(efd.nome) as nome
        , efd.cnpj
        , efd.uf
        , efd.cod_ibge_mun
        , efd.suframa
        , efd.dm_ind_nat_pj
        , efd.dm_ind_ativ
     from abertura_efd_pc       efd
        , versao_layout_efd_pc  vl
    where efd.id = gt_row_abertura_efd_pc.id
      and vl.id  = efd.versaolayoutefdpc_id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   for rec in c_efd loop
      exit when c_efd%notfound or (c_efd%notfound) is null;
      --
      vn_fase := 2;
      -- cria a estrutura do registro separado por PIPE "|"
      gl_conteudo := '|';
      --
      gl_conteudo := gl_conteudo || '0000' || '|';
      gl_conteudo := gl_conteudo || rec.versao || '|';
      gl_conteudo := gl_conteudo || rec.dm_tipo_escr || '|';
      gl_conteudo := gl_conteudo || rec.dm_ind_sit_esp || '|';
      gl_conteudo := gl_conteudo || rec.num_rec_anterior || '|';
      gl_conteudo := gl_conteudo || to_char(rec.dt_ini, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || to_char(rec.dt_fin, 'ddmmrrrr') || '|';
      gl_conteudo := gl_conteudo || rec.nome || '|';
      gl_conteudo := gl_conteudo || rec.cnpj || '|';
      gl_conteudo := gl_conteudo || rec.uf || '|';
      gl_conteudo := gl_conteudo || rec.cod_ibge_mun || '|';
      gl_conteudo := gl_conteudo || rec.suframa || '|';
      gl_conteudo := gl_conteudo || rec.dm_ind_nat_pj || '|';
      gl_conteudo := gl_conteudo || rec.dm_ind_ativ || '|';
      --
      vn_fase := 3;
      --
      pkb_armaz_estr_arq_efd_pc ( ev_reg_blc  => '0000'
                                , el_conteudo => gl_conteudo );
      --
      gn_qtde_reg_0000 := nvl(gn_qtde_reg_0000,0) + 1;
      --
   end loop;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_reg_0000 fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_REG_0000;
-----------------------------------------------------------------------------------
--| Procedimento monta registros do BLOCO 0: ABERTURA, IDENTIFICAÇÃO E REFERÊNCIAS
-----------------------------------------------------------------------------------
PROCEDURE PKB_MONTA_BLOCO_0 IS 
  --
  vn_fase number := 0;
  --
BEGIN
  --
  vn_fase := 1;
  --
  -- Monta o REGISTRO 0000: ABERTURA DO ARQUIVO DIGITAL E IDENTIFICAÇÃO DA ENTIDADE
  pkb_monta_reg_0000;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0000');
  --
  vn_fase := 2;
  --
  -- Monta o REGISTRO 0001: ABERTURA DO BLOCO 0
  pkb_monta_reg_0001;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0001');
  --
  vn_fase := 3;
  --
  -- Monta o REGISTRO 0035: IDENTIFICAÇÃO DE SOCIEDADE EM CONTA DE PARTICIPAÇÃO - SCP
  pkb_monta_reg_0035;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0035');
  --
  vn_fase := 4;
  --
  -- Monta o REGISTRO 0100: DADOS DO CONTABILISTA
  pkb_monta_reg_0100;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0100');
  --
  vn_fase := 5;
  --
  -- Monta o REGISTRO 0110: REGIMES DE APURAÇÃO DA CONTRIBUIÇÃO SOCIAL E DE APROPRIAÇÃO DE CRÉDITO
  pkb_monta_reg_0110;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0110');
  --
  vn_fase := 6;
  --
  -- Monta o REGISTRO 0111: TABELA DE RECEITA BRUTA MENSAL PARA FINS DE RATEIO DE CRÉDITOS COMUNS
  pkb_monta_reg_0111;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0111');
  --
  vn_fase := 7;
  --
  -- Monta o REGISTRO 0120: IDENTIFICAÇÃO DE PERÍODOS DISPENSADOS DA ESCRITURAÇÃO FISCAL DIGITAL DAS CONTRIBUIÇÕES
  pkb_monta_reg_0120;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0120');
  --
  vn_fase := 8;
  --
  -- Monta o REGISTRO 0140: TABELA DE CADASTRO DE ESTABELECIMENTO
  pkb_monta_reg_0140;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0140');
  --
  -- Os objetos comentados abaixo passam a ser chamados dentro da rotina acima pkb_monta_reg_0140.
  -- REGISTRO 0150: TABELA DE CADASTRO DO PARTICIPANTE
  -- REGISTRO 0190: IDENTIFICAÇÃO DAS UNIDADES DE MEDIDA
  -- REGISTRO 0200: TABELA DE IDENTIFICAÇÃO DO ITEM (PRODUTOS E SERVIÇOS)
  -- REGISTRO 0400: TABELA DE NATUREZA DA OPERAÇÃO/PRESTAÇÃO
  -- REGISTRO 0450: TABELA DE INFORMAÇÃO COMPLEMENTAR DO DOCUMENTO FISCAL
  -- REGISTRO 0500: TABELA DE PLANO DE CONTAS CONTÁBEIS
  -- REGISTRO 0600: TABELA DE CENTRO DE CUSTOS
  --
  if gt_row_abertura_efd_pc.dt_ini >= to_date('01/01/2014', 'dd/mm/rrrr') then
    --
    vn_fase := 9;
    --
    -- Monta o REGISTRO 0900: COMPOSIÇÃO DAS RECEITAS DO PERÍODO - RECEITA BRUTA E DEMAIS RECEITAS
    pkb_monta_reg_0900;
    --
    prc_gera_log_on_debug('Execução - pkb_monta_reg_0900');
    --
  end if;
  --
  vn_fase := 10;
  --
  -- Monta o REGISTRO 0990: ENCERRAMENTO DO BLOCO 0
  pkb_monta_reg_0990;
  --
  prc_gera_log_on_debug('Execução - pkb_monta_reg_0990');
  --
EXCEPTION
  when others then
    --
    gv_resumo_log := 'Erro na pkb_monta_bloco_0 fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_MONTA_BLOCO_0;

---------------------------------------------------
--| Procedimento alimenta os arrays do Sped Fiscal
---------------------------------------------------
PROCEDURE PKB_MONTA_ARRAY_EFD IS
   --
   vn_fase  number := 0;
   --
BEGIN
   --
   prc_gera_log_on_debug('Execução - pkb_monta_array_efd- ini');
   vn_fase := 1;
   --
   --#50147 alteracao do status do bloco
   begin  
      --  
      update abertura_efd_pc ae 
         set ae.dm_situacao = '9' --Em Geração - Bloco 0
       where ae.id = gt_row_abertura_efd_pc.id; 
      -- 
      commit; 
   end;
   -- procedimento monta registros do BLOCO 0: ABERTURA, IDENTIFICAÇÃO E REFERÊNCIAS.
   -- Passa a ser chamado por última para melhorar a performace
   pkb_monta_bloco_0;
   prc_gera_log_on_debug('Execução - pkb_monta_bloco_0');
   --
   vn_fase := 2;
   --
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 3;
      --
      --#50147 alteracao do status do bloco
      begin
        update abertura_efd_pc ae
           set ae.dm_situacao = 12 --Em Geração - Bloco A
         where ae.id = gt_row_abertura_efd_pc.id;
        commit;
      end;
      --
      -- procedimento monta registros do BLOCO A: DOCUMENTOS FISCAIS - SERVIÇOS (NÃO SUJEITOS AO ICMS)
      pkb_monta_bloco_a;
      prc_gera_log_on_debug('Execução - pkb_monta_bloco_a');
      --
      vn_fase := 4;
      --
      --#50147 alteracao do status do bloco
      begin
        update abertura_efd_pc ae
           set ae.dm_situacao = 14 --Em Geração - Bloco C
         where ae.id = gt_row_abertura_efd_pc.id;
        commit;
      end;
      --
      -- procedimento monta registros do BLOCO C: DOCUMENTOS FISCAIS I - MERCADORIAS (ICMS/IPI)
      pkb_monta_bloco_c;
      prc_gera_log_on_debug('Execução - pkb_monta_bloco_c');
      --
      vn_fase := 5;
      --
      --#50147 alteracao do status do bloco
      begin
        update abertura_efd_pc ae
           set ae.dm_situacao = 15 --Em Geração - Bloco D
         where ae.id = gt_row_abertura_efd_pc.id;
        commit;
      end;
      --
      -- procedimento monta registros do BLOCO D: DOCUMENTOS FISCAIS II - SERVIÇOS (ICMS)
      pkb_monta_bloco_d;
      prc_gera_log_on_debug('Execução - pkb_monta_bloco_d');
      --
   else -- gt_row_abertura_efd_pc_regime.dm_ind_reg_cum in (1,2) = Regime de Caixa Escrituração consolidada (Registro F500) ou Regime de Competência - Escrituração consolidada (Registro F550)
      --
      vn_fase := 6;
      -- BLOCO A: DOCUMENTOS FISCAIS - SERVIÇOS (NÃO SUJEITOS AO ICMS)
      -- BLOCO C: DOCUMENTOS FISCAIS I - MERCADORIAS (ICMS/IPI)
      -- BLOCO D: DOCUMENTOS FISCAIS II - SERVIÇOS (ICMS)
      --
      --#50147 alteracao do status do bloco
      begin
        update abertura_efd_pc ae
           set ae.dm_situacao = 13 --Em Geração - Bloco ACD
         where ae.id = gt_row_abertura_efd_pc.id;
        commit;
      end;
      --
      --
      pkb_monta_bloco_acd;
      prc_gera_log_on_debug('Execução - pkb_monta_bloco_acd');
      --
   end if;
   --
   vn_fase := 7;
   --
   --#50147 alteracao do status do bloco
   begin
     update abertura_efd_pc ae
        set ae.dm_situacao = 16 --Em Geração - Bloco F
      where ae.id = gt_row_abertura_efd_pc.id;
     commit;
   end;
   -- procedimento monta registros do BLOCO F: DEMAIS DOCUMENTOS E OPERAÇÕES
   pkb_monta_bloco_f;
   prc_gera_log_on_debug('Execução - pkb_monta_bloco_f');
   --
   vn_fase := 8;
   --
   if gt_row_abertura_efd_pc.dt_ini >= to_date('01/07/2013','dd/mm/rrrr') and
      gt_row_abertura_efd_pc.dm_ind_ativ = 3 then -- Abertura do arquivo é 3-Atividade financeira
      --
      vn_fase := 9;
      --
      --#50147 alteracao do status do bloco
      begin
        update abertura_efd_pc ae
           set ae.dm_situacao = 17 --Em Geração - Bloco I
         where ae.id = gt_row_abertura_efd_pc.id;
        commit;
      end;
      -- BLOCO I - OPERAÇÕES DAS INSTITUIÇÕES FINANCEIRAS, SEGURADORAS, ENTIDADES DE PREVIDENCIA PRIVADA, OPERADORAS DE PLANOS DE ASSISTÊNCIA À
      -- SAÚDE E DEMAIS PESSOAS JURÍDICAS REFERIDAS NOS §§ 6º, 8º E 9º DO ART. 3º DA LEI nº 9.718/98.
      pkb_monta_bloco_i;
      prc_gera_log_on_debug('Execução - pkb_monta_bloco_i');
      --
   end if;
   --
   vn_fase := 10;
   --
   --#50147 alteracao do status do bloco
   begin
     update abertura_efd_pc ae
        set ae.dm_situacao = 18 --Em Geração - Bloco M
      where ae.id = gt_row_abertura_efd_pc.id;
     commit;
   end;
   --
   pkb_monta_bloco_m;
   prc_gera_log_on_debug('Execução - pkb_monta_bloco_m');
   --
   vn_fase := 11;
   --
   --#50147 alteracao do status do bloco
   begin
     update abertura_efd_pc ae
        set ae.dm_situacao = 19 --Em Geração - Bloco P
      where ae.id = gt_row_abertura_efd_pc.id;
    commit;
   end;
   --
   -- BLOCO P - APURAÇÃO DA CONTRIBUIÇÃO PREVIDENCIÁRIA SOBRE A RECEITA BRUTA (CPRB)
   pkb_monta_bloco_p;
   prc_gera_log_on_debug('Execução - pkb_monta_bloco_p');
   --
   vn_fase := 12;
   --
   --#50147 alteracao do status do bloco
   begin  
     --  
     update abertura_efd_pc ae 
        set ae.dm_situacao = 10 -- Em Geração - Bloco 1 
      where ae.id = gt_row_abertura_efd_pc.id; 
     -- 
     commit; 
   end;
   --
   -- BLOCO 1: COMPLEMENTO DA ESCRITURAÇÃO
   pkb_monta_bloco_1;
   prc_gera_log_on_debug('Execução - pkb_monta_bloco_1');
   --
   vn_fase := 13;
   --
   --#50147 alteracao do status do bloco
   begin
     update abertura_efd_pc ae
        set ae.dm_situacao = 11 -- Em Geração - Bloco 9 - Encerramento do Arquivo Digital 
      where ae.id = gt_row_abertura_efd_pc.id;
     commit;
   end;
   --
   -- procedimento monta os registros do BLOCO 9: CONTROLE E ENCERRAMENTO DO ARQUIVO DIGITAL
   pkb_monta_bloco_9;
   prc_gera_log_on_debug('Execução - pkb_monta_bloco_9');
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_monta_array_efd fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_MONTA_ARRAY_EFD;
------------------------------------
--| Excluir os registros anteriores
------------------------------------
PROCEDURE PKB_EXCLUIR_ARQ_EFD_PC IS
BEGIN
   --
   delete from estr_arq_efd_pc ea
    where ea.aberturaefdpc_id = gt_row_abertura_efd_pc.id;
   --
   commit;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_excluir_arq_efd_pc: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_EXCLUIR_ARQ_EFD_PC;
---------------------------------------------------------------------------------------------------------------
--| Procedimento que valida os documentos fiscais com informações dos Planos de Contas e dos Centros de Custos
---------------------------------------------------------------------------------------------------------------
PROCEDURE PKB_VALIDA_PLCTA_CCUSTO IS
   --
   vn_fase number := 0;
   --
   -- Planos de contas
   --
   cursor c_c501_plano is
   select distinct
          decode(nvl(np.planoconta_id,0), 0, ('Nota Fiscal não possui Plano de Conta para o Imposto PIS vinculado no Complemento de PIS. Número Nota Fiscal: '||
                                              nf.nro_nf||', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||'.'),null) descr_pis
        , decode(nvl(nc.planoconta_id,0), 0, ('Nota Fiscal não possui Plano de Conta para o Imposto COFINS vinculado no Complemento de COFINS. Número Nota '||
                                              'Fiscal: '||nf.nro_nf||', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||'.'),null) descr_cof
     from r_empresa_abertura_efd_pc re
        , empresa                   em
        , TMP_nota_fiscal               nf
        , mod_fiscal                mf
        , nf_compl_oper_pis         np
        , cod_st                    cs
        , nf_compl_oper_cofins      nc
        , cod_st                    ct
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and em.id               = re.empresa_id
      and nf.empresa_id       = em.id
      and nf.dm_st_proc      in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc  = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id               = nf.modfiscal_id
      and mf.cod_mod         in ('06', '28', '29')
      and np.notafiscal_id(+) = nf.id
      and cs.id(+)            = np.codst_id
      and cs.cod_st(+)   not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and nc.notafiscal_id(+) = nf.id
      and ct.id(+)            = nc.codst_id
      and ct.cod_st(+)   not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and ((np.planoconta_id is null)
            or
           (nc.planoconta_id is null))
      order by 1;
   --
   cursor c_d501_plano is
   select distinct
          ('Nota Fiscal não possui Plano de Conta para o Imposto PIS e para COFINS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||'.') descr_pc
        , ('Nota Fiscal não possui Plano de Conta para o Imposto PIS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||'.') descr_pis
        , ('Nota Fiscal não possui Plano de Conta para o Imposto COFINS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||'.') descr_cof
     from r_empresa_abertura_efd_pc re
        , empresa                   em
        , TMP_nota_fiscal               nf
        , mod_fiscal                mf
        , TMP_item_nota_fiscal          it
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and em.id               = re.empresa_id
      and nf.empresa_id       = em.id
      and nf.dm_st_proc      in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc  = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id               = nf.modfiscal_id
      and mf.cod_mod         in ('21', '22')
      and it.notafiscal_id    = nf.id
      and it.cod_cta         is null
      and exists (select 1
                    from TMP_item_nota_fiscal ie
                       , TMP_imp_itemnf       imp
                       , cod_st           cst
                       , tipo_imposto     ti
                   where ie.notafiscal_id = nf.id
                     and imp.itemnf_id    = ie.id
                     and cst.id           = imp.codst_id
                     and cst.cod_st  not in ('70','71','72','73','74','75') -- valores isentos de créditos
                     and ti.id            = imp.tipoimp_id
                     and ti.cd           in (4,5))
    order by 1;
   --
   cursor c_c170_plano is
   select distinct
          nf.empresa_id
        , itnf.cfop_id
        , imp.codst_id
        , ('Nota Fiscal não possui Plano de Conta para o Imposto PIS e para COFINS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_pc
        , ('Nota Fiscal não possui Plano de Conta para o Imposto PIS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_pis
        , ('Nota Fiscal não possui Plano de Conta para o Imposto COFINS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_cof
     from r_empresa_abertura_efd_pc re
        , empresa                   em
        , TMP_nota_fiscal               nf
        , mod_fiscal                mf
        , TMP_item_nota_fiscal          itnf
        , TMP_imp_itemnf                imp
        , cod_st                    cst
        , tipo_imposto              ti
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and em.id               = re.empresa_id
      and nf.empresa_id       = em.id
      and nf.dm_st_proc      in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc  = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id               = nf.modfiscal_id
      and mf.cod_mod         in ('01', '1B', '04', '55')
      and itnf.notafiscal_id  = nf.id
      and itnf.cod_cta       is null
      and itnf.notafiscal_id  = nf.id
      and imp.itemnf_id       = itnf.id
      and cst.id              = imp.codst_id
      and cst.cod_st     not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and ti.id               = imp.tipoimp_id
      and ti.cd               = 4 -- somente imposto PIS
    order by 3;
   --
   cursor c_a170_plano is
   select distinct
          nf.empresa_id
        , itnf.cfop_id
        , imp.codst_id
        , ('Nota Fiscal não possui Plano de Conta para o Imposto PIS e para COFINS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_pc
        , ('Nota Fiscal não possui Plano de Conta para o Imposto PIS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_pis
        , ('Nota Fiscal não possui Plano de Conta para o Imposto COFINS vinculado ao Item da Nota Fiscal. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_cof
     from r_empresa_abertura_efd_pc re
        , empresa                   em
        , TMP_nota_fiscal               nf
        , mod_fiscal                mf
        , TMP_item_nota_fiscal          itnf
        , itemnf_compl_serv         itcs
        , TMP_imp_itemnf                imp
        , cod_st                    cst
        , tipo_imposto              ti
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and em.id               = re.empresa_id
      and nf.empresa_id       = em.id
      and nf.dm_st_proc      in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc  = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id               = nf.modfiscal_id
      and mf.cod_mod          = '99' -- somente serviços
      and itnf.notafiscal_id  = nf.id
      and itnf.cod_cta       is null
      and itcs.itemnf_id      = itnf.id
      and imp.itemnf_id       = itnf.id
      and imp.dm_tipo         = 0 -- 0-imposto, 1-retenção
      and cst.id              = imp.codst_id
      and ti.id               = imp.tipoimp_id
      and ti.cd               = 4 -- somente imposto PIS
   order by 3;
   --
   cursor c_c380_plano is
   select distinct
          re.empresa_id
        , ra.cfop_id
        , ir.codst_id_pis
        , ir.codst_id_cofins
        , ('Nota Fiscal de Venda à Consumidor não possui Plano de Conta para o Imposto PIS e para COFINS vinculado ao Resumo Diário. Número Inicial Nota '||
           'Fiscal: '||rd.num_doc_ini||', Número Final: '||rd.num_doc_fin||', série: '||rd.serie||', data de docto: '||rd.dt_doc||', modelo: '||mf.cod_mod||
           ', CFOP: '||cf.cd||'.') descr_pc
        , ('Nota Fiscal de Venda à Consumidor não possui Plano de Conta para o Imposto PIS vinculado ao Resumo Diário. Número Inicial Nota '||
           'Fiscal: '||rd.num_doc_ini||', Número Final: '||rd.num_doc_fin||', série: '||rd.serie||', data de docto: '||rd.dt_doc||', modelo: '||mf.cod_mod||
           ', CFOP: '||cf.cd||'.') descr_pis
        , ('Nota Fiscal de Venda à Consumidor não possui Plano de Conta para o Imposto COFINS vinculado ao Resumo Diário. Número Inicial Nota '||
           'Fiscal: '||rd.num_doc_ini||', Número Final: '||rd.num_doc_fin||', série: '||rd.serie||', data de docto: '||rd.dt_doc||', modelo: '||mf.cod_mod||
           ', CFOP: '||cf.cd||'.') descr_cof
     from r_empresa_abertura_efd_pc    re
        , res_dia_nf_venda_cons        rd
        , mod_fiscal                   mf
        , reg_an_res_dia_nf_venda_cons ra
        , cfop                         cf
        , it_res_dia_nf_venda_cons     ir
    where re.aberturaefdpc_id          = gt_row_abertura_efd_pc.id
      and rd.empresa_id                = re.empresa_id
      and rd.dt_doc              between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and rd.dm_st_proc                = 1 -- Validada
      and rd.cod_cta                  is null
      and mf.id                        = rd.modfiscal_id
      and mf.cod_mod                   = '02' -- Nota Fiscal de Venda a Consumidor
      and ra.resdianfvendacons_id      = rd.id
      and cf.id                        = ra.cfop_id
      and ir.reganresdianfvendacons_id = ra.id
    order by 3;
   --
   cursor c_c481_c485_plano is
   select distinct ee.empresa_id
        , id.cfop_id
        , rp.codst_id codst_id_pis
        , rc.codst_id codst_id_cofins
        , decode(nvl(rp.planoconta_id,0), 0, ('Equipamento/Redução Z não possui Plano de Conta para o Imposto PIS vinculado ao Resumo Diário. Equipamento - '||
                                              'Modelo: '||ee.ecf_mod||', fabricante: '||ee.ecf_fab||', caixa: '||ee.ecf_cx||', modelo fiscal: '||mf.cod_mod||
                                              ', data docto: '||rz.dt_doc||', CRO: '||rz.cro||', CRZ: '||rz.crz||', Nro Contador de ordem de Produção: '||
                                              rz.num_coo_fin||', CFOP: '||cf.cd||'.'), null) descr_pis
        , decode(nvl(rc.planoconta_id,0), 0, ('Equipamento/Redução Z não possui Plano de Conta para o Imposto COFINS vinculado ao Resumo Diário. Equipamento - '||
                                              'Modelo: '||ee.ecf_mod||', fabricante: '||ee.ecf_fab||', caixa: '||ee.ecf_cx||', modelo fiscal: '||mf.cod_mod||
                                              ', data docto: '||rz.dt_doc||', CRO: '||rz.cro||', CRZ: '||rz.crz||', Nro Contador de ordem de Produção: '||
                                              rz.num_coo_fin||', CFOP: '||cf.cd||'.'), null) descr_cof
     from r_empresa_abertura_efd_pc re
        , equip_ecf                 ee
        , mod_fiscal                mf
        , TMP_reducao_z_ecf             rz
        , TMP_doc_fiscal_emit_ecf       df
        , TMP_it_doc_fiscal_emit_ecf    id
        , cfop                      cf
        , res_dia_doc_ecf_pis       rp
        , res_dia_doc_ecf_cofins    rc
    where re.aberturaefdpc_id    = gt_row_abertura_efd_pc.id
      and ee.empresa_id          = re.empresa_id
      and mf.id                  = ee.modfiscal_id
      and mf.cod_mod            in ('02', '2D')  -- Nota Fiscal de Venda a Consumidor e Cupom Fiscal
      and rz.equipecf_id         = ee.id
      and rz.dt_doc        between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and rz.dm_st_proc          = 1 -- Validada
      and nvl(rz.vl_brt,0)       > 0
      and df.reducaozecf_id      = rz.id
      and id.docfiscalemitecf_id = df.id
      and cf.id                  = id.cfop_id
      and rp.reducaozecf_id(+)   = rz.id
      and rc.reducaozecf_id(+)   = rz.id
      and ((rp.planoconta_id is null)
            or
           (rc.planoconta_id is null))
    order by 3;
   --
   cursor c_d100_plano is
   select distinct
          decode(nvl(cp.planoconta_id,0), 0, ('Conhecimento de Transporte não possui Plano de Conta para o Imposto PIS vinculado ao Complemento de PIS. '||
                                              'Número do Conhecimento: '||ct.nro_ct||', série: '||ct.serie||', subserie: '||ct.subserie||', modelo fiscal: '||
                                              mf.cod_mod||', data emissão: '||ct.dt_hr_emissao||'.'), null) descr_pis
        , decode(nvl(cc.planoconta_id,0), 0, ('Conhecimento de Transporte não possui Plano de Conta para o Imposto COFINS vinculado ao Complemento de COFINS. '||
                                              'Número do Conhecimento: '||ct.nro_ct||', série: '||ct.serie||', subserie: '||ct.subserie||', modelo fiscal: '||
                                              mf.cod_mod||', data emissão: '||ct.dt_hr_emissao||'.'), null) descr_cof
     from r_empresa_abertura_efd_pc re
        , TMP_conhec_transp             ct
        , mod_fiscal                mf
        , ct_comp_doc_pis           cp
        , cod_st                    cs
        , ct_comp_doc_cofins        cc
        , cod_st                    co
    where re.aberturaefdpc_id = gt_row_abertura_efd_pc.id
      and ct.empresa_id       = re.empresa_id
      and ct.dm_st_proc       = 4 -- autorizado
      and ct.dm_arm_cte_terc  = 0
      and ct.dm_ind_oper = 0 -- 0-Entrada, 1-Saída
      and ((ct.dm_ind_emit = 1 and nvl(ct.dt_sai_ent,ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 0 and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (ct.dm_ind_emit = 0 and gn_dm_dt_escr_dfepoe = 1 and nvl(ct.dt_sai_ent,ct.dt_hr_emissao) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id                 = ct.modfiscal_id
      and mf.cod_mod           in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
      and cp.conhectransp_id(+) = ct.id
      and cs.id(+)              = cp.codst_id
      and cs.cod_st(+)     not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and cc.conhectransp_id(+) = ct.id
      and co.id(+)              = cc.codst_id
      and co.cod_st(+)     not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and ((cp.planoconta_id is null)
            or
           (cc.planoconta_id is null))
    order by 1;
   --
   cursor c_d200_plano is
   select distinct
          decode(nvl(cp.planoconta_id,0), 0, ('Conhecimento de Transporte não possui Plano de Conta para o Imposto PIS vinculado ao Complemento de PIS. '||
                                              'Número do Conhecimento: '||ct.nro_ct||', série: '||ct.serie||', subserie: '||ct.subserie||', modelo fiscal: '||
                                              mf.cod_mod||', data emissão: '||ct.dt_hr_emissao||'.'), null) descr_pis
        , decode(nvl(cc.planoconta_id,0), 0, ('Conhecimento de Transporte não possui Plano de Conta para o Imposto COFINS vinculado ao Complemento de COFINS. '||
                                              'Número do Conhecimento: '||ct.nro_ct||', série: '||ct.serie||', subserie: '||ct.subserie||', modelo fiscal: '||
                                              mf.cod_mod||', data emissão: '||ct.dt_hr_emissao||'.'), null) descr_cof
     from r_empresa_abertura_efd_pc re
        , TMP_conhec_transp             ct
        , mod_fiscal                mf
        , ct_comp_doc_pis           cp
        , cod_st                    cs
        , ct_comp_doc_cofins        cc
        , cod_st                    co
    where re.aberturaefdpc_id   = gt_row_abertura_efd_pc.id
      and ct.empresa_id         = re.empresa_id
      and ct.dm_st_proc         = 4 -- autorizado
      and ct.dm_arm_cte_terc    = 0 -- 0-Não, 1-Sim
      and ct.dm_ind_emit        = 0 -- 0-Emissão Própria, 1-Terceiro
      and ct.dm_ind_oper        = 1 -- 0-Entrada, 1-Saída
      and ct.dt_hr_emissao between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and mf.id                 = ct.modfiscal_id
      and mf.cod_mod           in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
      and cp.conhectransp_id(+) = ct.id
      and cs.id(+)              = cp.codst_id
      and cs.cod_st(+)     not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and cc.conhectransp_id(+) = ct.id
      and co.id(+)              = cc.codst_id
      and co.cod_st(+)     not in ('70','71','72','73','74','75') -- valores isentos de créditos
      and ((cp.planoconta_id is null)
            or
           (cc.planoconta_id is null))
    order by 1;
   --
   cursor c_i200_i300_plano is
   select distinct
          decode(nvl(cr.planoconta_id,0), 0, decode(nvl(cd.id,0), 0, ('Composição das receitas, deduções e/ou exclusões do período, não possuem Plano de Conta. Estabelecimento/Empresa: '||(pe.cod_part||'-'||pe.nome)||', Atividade: '||dm.descr||', Valor da Receita: '||trim(to_char(co.vl_rec,'999G999G999G99G990D00'))||', CST para PIS e COFINS: '||(ct.cod_st||'-'||ct.descr_st)||'.')
                                                                , decode(nvl(cd.planoconta_id,0), 0, ('Composição e Complemento das operações - Detalhamento, das receitas, deduções e/ou exclusões do período, não possuem Plano de Conta. Estabelecimento/Empresa: '||(pe.cod_part||'-'||pe.nome)||', Atividade: '||dm.descr||', Valor da Receita: '||trim(to_char(co.vl_rec,'999G999G999G99G990D00'))||', CST para PIS e COFINS: '||(ct.cod_st||'-'||ct.descr_st)||'.')
                                                                                                , ('Composição das receitas, deduções e/ou exclusões do período, não possuem Plano de Conta. Estabelecimento/Empresa: '||(pe.cod_part||'-'||pe.nome)||', Atividade: '||dm.descr||', Valor da Receita: '||trim(to_char(co.vl_rec,'999G999G999G99G990D00'))||', CST para PIS e COFINS: '||(ct.cod_st||'-'||ct.descr_st)||'.')))
                                        , decode(nvl(cd.id,0), 0, null
                                                             , decode(nvl(cd.planoconta_id,0), 0, ('Complemento das operações - Detalhamento das receitas, deduções e/ou exclusões do período, não possuem Plano de Conta. Estabelecimento/Empresa: '||(pe.cod_part||'-'||pe.nome)||', Atividade: '||dm.descr||', Valor da Receita: '||trim(to_char(co.vl_rec,'999G999G999G99G990D00'))||', CST para PIS e COFINS: '||(ct.cod_st||'-'||ct.descr_st)||'.')))) descr_pc
     from r_empresa_abertura_efd_pc re
        , abertura_efd_pc_oifd      ae
        , empresa                   em
        , pessoa                    pe
        , abert_efd_pc_oifd_estab   ap
        , dominio                   dm
        , consol_oper_per_oifd      co
        , cod_st                    ct
        , compos_recdedexcl_oifd    cr
        , compl_detal_oper_oifd     cd
    where re.aberturaefdpc_id           = gt_row_abertura_efd_pc.id
      and ae.empresa_id                 = re.empresa_id
      and ae.dt_inicial                >= gt_row_abertura_efd_pc.dt_ini
      and ae.dt_final                  <= gt_row_abertura_efd_pc.dt_fin
      and em.id                         = ae.empresa_id
      and pe.id                         = em.pessoa_id
      and ap.aberturaefdpcoifd_id       = ae.id
      and ap.dm_st_proc                 = 3 -- Validado
      and dm.dominio                    = 'ABERT_EFD_PC_OIFD_ESTAB.DM_IND_ATIV'
      and dm.vl                         = ap.dm_ind_ativ
      and co.abertefdpcoifdestab_id     = ap.id
      and ct.id                         = co.codst_id_pis_cofins
      and cr.consoloperperoifd_id       = co.id
      and cd.composrecdedexcloifd_id(+) = cr.id
      and ((cd.planoconta_id is null)
            or
           (cr.planoconta_id is null))
    order by 1;
   --
   cursor c_1101_plano is
   select distinct 0 tipo -- PIS
        , ('Controle de Créditos Fiscais de PIS não possuem Planos de Contas vinculado com Apuração de Crédito Extemporâneo. Mês/Ano: '||
          lpad(ccf.mes,2,'0')||'/'||lpad(ccf.ano,4,'0')||', Código do Tipo de Crédito: '||tc.cd||'-'||tc.descr||', Data da Operação: '||
          to_char(ac.dt_oper,'dd/mm/rrrr')||', CFOP: '||cf.cd||'-'||cf.descr||'.') descr_pc
     from contr_cred_fiscal_pis ccf
        , apur_cred_ext_pis     ac
        , tipo_cred_pc          tc
        , cfop                  cf
    where ccf.empresa_id             = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao            = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and ac.contrcredfiscalpis_id   = ccf.id
      and ac.planoconta_id          is null
      and tc.id                      = ccf.tipocredpc_id
      and cf.id                      = ac.cfop_id
   union
   select distinct 1 tipo -- COFINS
        , ('Controle de Créditos Fiscais de COFINS não possuem Plano de Contas vinculado com Apuração de Crédito Extemporâneo. Mês/Ano: '||
          lpad(ccf.mes,2,'0')||'/'||lpad(ccf.ano,4,'0')||', Código do Tipo de Crédito: '||tc.cd||'-'||tc.descr||', data da operação: '||
          to_char(ac.dt_oper,'dd/mm/rrrr')||', CFOP: '||cf.cd||'-'||cf.descr||'.') descr_pc
     from contr_cred_fiscal_cofins ccf
        , apur_cred_ext_cofins     ac
        , tipo_cred_pc          tc
        , cfop                  cf
    where ccf.empresa_id              = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao             = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and ac.contrcredfiscalcofins_id = ccf.id
      and ac.planoconta_id           is null
      and tc.id                       = ccf.tipocredpc_id
      and cf.id                       = ac.cfop_id
    order by 1, 2;
   -- Bloco F100, F120, F130 e F150
   cursor c_f100_f120_f130_f150_plano is
   select distinct
          ('Demais Documentos e Operações Geradoras de Contribuição e Créditos (F100), não possui Plano de Conta para o Imposto PIS e '||
           'para COFINS. Data da Operação: '||dd.dt_oper||', Valor da Operação: '||trim(to_char(dd.vl_oper,'999G999G999G990D00'))||'.') descr_pc
     from dem_doc_oper_ger_cc dd
    where dd.empresa_id       = gt_row_abertura_efd_pc.empresa_id
      and dd.dt_oper    between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and dd.dm_st_proc       = 1 -- validado
      and dd.planoconta_id    is null
   union
   select distinct
          ('Bens do Ativo Imobilizado operações gerados de crédito Pis/Cofins - Depreciação/Amortização (F120), não possui Plano de Conta para o Imposto PIS e '||
           'para COFINS. Mês/Ano de Referência: '||lpad(ba.mes_ref,2,'0')||'/'||lpad(ba.ano_ref,4,'0')||', Código da Base de Cálculo de Crédito: '||bc.cd||'-'||
           bc.descr||'.') descr_pc
     from bem_ativ_imob_oper_cred_pc ba
        , base_calc_cred_pc          bc
    where ba.empresa_id     = gt_row_abertura_efd_pc.empresa_id
      and ba.ano_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and ba.mes_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and ba.dm_st_proc     = 1 -- validado
      and ba.dm_tipo_oper   = 0 -- Depreciação/Amortização
      and ba.planoconta_id is null
      and bc.id             = ba.basecalccredpc_id
   union
   select distinct
          ('Bens do Ativo Imobilizado operações gerados de crédito Pis/Cofins - Aquisição/Contribuição (F130), não possui Plano de Conta para o Imposto PIS e '||
           'para COFINS. Mês/Ano de Referência: '||lpad(ba.mes_ref,2,'0')||'/'||lpad(ba.ano_ref,4,'0')||', Código da Base de Cálculo de Crédito: '||bc.cd||'-'||
           bc.descr||'.') descr_pc
     from bem_ativ_imob_oper_cred_pc ba
        , base_calc_cred_pc          bc
    where ba.empresa_id     = gt_row_abertura_efd_pc.empresa_id
      and ba.ano_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and ba.mes_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and ba.dm_st_proc     = 1 -- validado
      and ba.dm_tipo_oper   = 1 -- Aquisição/Contribuição
      and ba.planoconta_id is null
      and bc.id             = ba.basecalccredpc_id
   union
   select distinct
          ('Crédito Presumido sobre Estoque de Abertura (F150), não possui Plano de Conta para o Imposto PIS e para COFINS. Mês/Ano de Referência: '||
           lpad(cp.mes_ref,2,'0')||'/'||lpad(cp.ano_ref,4,'0')||', Código da Base de Cálculo de Crédito: '||bc.cd||'-'||bc.descr||'.') descr_pc
     from cred_pres_est_abert_pc cp
        , base_calc_cred_pc      bc
    where cp.empresa_id     = gt_row_abertura_efd_pc.empresa_id
      and cp.ano_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and cp.mes_ref        = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and cp.dm_st_proc     = 1 -- validado
      and cp.planoconta_id is null
      and bc.id             = cp.basecalccredpc_id
    order by 1;
   -- Bloco F500
   cursor c_f500_plano is
   select distinct
          ('Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro Presumido - Incidência do PIS/COFINS pelo regime '||
           'de caixa (F500), não possui Plano de Conta para o Imposto PIS e para COFINS. Data de Referência: '||to_char(co.dt_ref,'dd/mm/rrrr')||'.') descr_pc
     from cons_oper_ins_pc_rc co
    where co.empresa_id      = gt_row_abertura_efd_pc.empresa_id
      and co.dt_ref    between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc      = 1 -- validado
      and co.planoconta_id  is null
    order by 1;
   -- Bloco F510
   cursor c_f510_plano is
   select distinct
          ('Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro Presumido - Incidência do PIS/COFINS pelo '||
           'regime de caixa (Apuração da contribuição por unidade de medida de produto, alíquota em reais), (F510), não possui Plano de Conta para o Imposto '||
           'PIS e para COFINS. Data de Referência: '||to_char(co.dt_ref,'dd/mm/rrrr')||'.') descr_pc
     from cons_oper_ins_pc_rc_aum co
    where co.empresa_id      = gt_row_abertura_efd_pc.empresa_id
      and co.dt_ref    between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc      = 1 -- validado
      and co.planoconta_id  is null
    order by 1;
   -- Bloco F525
   cursor c_f525_plano is
   select distinct
          ('Composição da Receita Escriturada no período - Detalhamento da Receita Recebida pelo Regime de Caixa (F525), não possui Plano de Conta para o '||
           'Imposto PIS e para COFINS. Data de Referência: '||to_char(cr.dt_ref,'dd/mm/rrrr')||'.') descr_pc
     from comp_rec_det_rc cr
    where cr.empresa_id     = gt_row_abertura_efd_pc.empresa_id
      and cr.dt_ref   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and cr.dm_st_proc     = 1 -- validado
      and cr.planoconta_id is null
    order by 1;
   -- Bloco F550
   cursor c_f550_plano is
   select distinct
          ('Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro Presumido - Incidência do PIS/COFINS pelo '||
           'regime de Competência (F550), não possui Plano de Conta para o Imposto PIS e para COFINS. Data de Referência: '||
           to_char(co.dt_ref,'dd/mm/rrrr')||'.') descr_pc
     from cons_oper_ins_pc_rcomp co
    where co.empresa_id     = gt_row_abertura_efd_pc.empresa_id
      and co.dt_ref   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc     = 1 -- validado
      and co.planoconta_id is null
    order by 1;
   -- Bloco F560
   cursor c_f560_plano is
   select distinct
          ('Consolidação das Operações da Pessoa Jurídica Submetida ao Regime de Tributação com Base no Lucro Presumido - Incidência do PIS/COFINS pelo '||
           'regime de competência (Apuração da contribuição por unidade de medida de produto, alíquota em reais), (F560), não possui Plano de Conta para o '||
           'Imposto PIS e para COFINS. Data de Referência: '||to_char(co.dt_ref,'dd/mm/rrrr')||'.') descr_pc
     from cons_op_ins_pcrcomp_aum co
    where co.empresa_id     = gt_row_abertura_efd_pc.empresa_id
      and co.dt_ref   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and co.dm_st_proc     = 1 -- validado
      and co.planoconta_id is null
    order by 1;
   --
   -- Centro de Custo
   --
   cursor c_a170_custo is
   select distinct
          nf.empresa_id
        , itnf.cfop_id
        , imp.codst_id
        , ('Nota Fiscal não possui Centro de Custo para o Imposto PIS e para COFINS vinculado ao Item da Nota Fiscal - Complemento. Número Nota Fiscal: '||
           nf.nro_nf||', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_pc
        , ('Nota Fiscal não possui Centro de Custo para o Imposto PIS vinculado ao Item da Nota Fiscal - Complemento. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_pis
        , ('Nota Fiscal não possui Centro de Custo para o Imposto COFINS vinculado ao Item da Nota Fiscal - Complemento. Número Nota Fiscal: '||nf.nro_nf||
           ', série: '||nf.serie||', data de emissão: '||nf.dt_emiss||', modelo: '||mf.cod_mod||', CFOP: '||itnf.cfop||'.') descr_cof
     from r_empresa_abertura_efd_pc re
        , empresa                   em
        , TMP_nota_fiscal               nf
        , mod_fiscal                mf
        , TMP_item_nota_fiscal          itnf
        , itemnf_compl_serv         itcs
        , TMP_imp_itemnf                imp
        , cod_st                    cst
        , tipo_imposto              ti
    where re.aberturaefdpc_id  = gt_row_abertura_efd_pc.id
      and em.id                = re.empresa_id
      and nf.empresa_id        = em.id
      and nf.dm_st_proc       in (4,7,8) -- 4-Autorizada, 7-Cancelada, 8-Inutilizada
      and nf.dm_arm_nfe_terc   = 0 -- 0-não, 1-sim
      and ((nf.dm_ind_emit = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 0 and nf.dt_emiss between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and em.dm_dt_escr_dfepoe = 1 and nvl(nf.dt_sai_ent,nf.dt_emiss) between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin))
      and mf.id                = nf.modfiscal_id
      and mf.cod_mod           = '99' -- somente serviços
      and itnf.notafiscal_id   = nf.id
      and itcs.itemnf_id       = itnf.id
      and imp.itemnf_id        = itnf.id
      and imp.dm_tipo          = 0 -- 0-imposto, 1-retenção
      and cst.id               = imp.codst_id
      and ti.id                = imp.tipoimp_id
      and ti.cd                = 4 -- somente imposto PIS
      and itcs.centrocusto_id is null
   order by 3;
   --
   cursor c_1101_custo is
   select distinct 0 tipo -- PIS
        , ('Controle de Créditos Fiscais de PIS não possuem Centros de Custos vinculado com Apuração de Crédito Extemporâneo. Mês/Ano: '||
          lpad(ccf.mes,2,'0')||'/'||lpad(ccf.ano,4,'0')||', Código do Tipo de Crédito: '||tc.cd||'-'||tc.descr||', Data da Operação: '||
          to_char(ac.dt_oper,'dd/mm/rrrr')||', CFOP: '||cf.cd||'-'||cf.descr||'.') descr_pc
     from contr_cred_fiscal_pis ccf
        , apur_cred_ext_pis     ac
        , tipo_cred_pc          tc
        , cfop                  cf
    where ccf.empresa_id           = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao          = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and ac.contrcredfiscalpis_id = ccf.id
      and ac.centrocusto_id       is null
      and tc.id                    = ccf.tipocredpc_id
      and cf.id                    = ac.cfop_id
   union
   select distinct 1 tipo -- COFINS
        , ('Controle de Créditos Fiscais de COFINS não possuem Centros de Custos vinculado com Apuração de Crédito Extemporâneo. Mês/Ano: '||
          lpad(ccf.mes,2,'0')||'/'||lpad(ccf.ano,4,'0')||', Código do Tipo de Crédito: '||tc.cd||'-'||tc.descr||', data da operação: '||
          to_char(ac.dt_oper,'dd/mm/rrrr')||', CFOP: '||cf.cd||'-'||cf.descr||'.') descr_pc
     from contr_cred_fiscal_cofins ccf
        , apur_cred_ext_cofins     ac
        , tipo_cred_pc          tc
        , cfop                  cf
    where ccf.empresa_id              = gt_row_abertura_efd_pc.empresa_id
      and ccf.dm_situacao             = 3 -- processada
      and to_date((ccf.mes||'/'||ccf.ano),'mm/rrrr') between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and ac.contrcredfiscalcofins_id = ccf.id
      and ac.centrocusto_id          is null
      and tc.id                       = ccf.tipocredpc_id
      and cf.id                       = ac.cfop_id
    order by 1, 2;
   -- Bloco F100, F120 e F130
   cursor c_f100_f120_f130_custo is
   select distinct
          ('Demais Documentos e Operações Geradoras de Contribuição e Créditos (F100), não possui Centro de Custo para o Imposto PIS e '||
           'para COFINS. Data da Operação: '||dd.dt_oper||', Valor da Operação: '||trim(to_char(dd.vl_oper,'999G999G999G990D00'))||'.') descr_pc
     from dem_doc_oper_ger_cc dd
    where dd.empresa_id      = gt_row_abertura_efd_pc.empresa_id
      and dd.dt_oper   between gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
      and dd.dm_st_proc      = 1 -- validado
      and dd.centrocusto_id is null
   union
   select distinct
          ('Bens do Ativo Imobilizado operações gerados de crédito Pis/Cofins - Depreciação/Amortização (F120), não possui Centro de Custo para o Imposto PIS e '||
           'para COFINS. Mês/Ano de Referência: '||lpad(ba.mes_ref,2,'0')||'/'||lpad(ba.ano_ref,4,'0')||', Código da Base de Cálculo de Crédito: '||bc.cd||'-'||
           bc.descr||'.') descr_pc
     from bem_ativ_imob_oper_cred_pc ba
        , base_calc_cred_pc          bc
    where ba.empresa_id      = gt_row_abertura_efd_pc.empresa_id
      and ba.ano_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and ba.mes_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and ba.dm_st_proc      = 1 -- validado
      and ba.dm_tipo_oper    = 0 -- Depreciação/Amortização
      and ba.centrocusto_id is null
      and bc.id              = ba.basecalccredpc_id
   union
   select distinct
          ('Bens do Ativo Imobilizado operações gerados de crédito Pis/Cofins - Aquisição/Contribuição (F130), não possui Centro de Custo para o Imposto PIS e '||
           'para COFINS. Mês/Ano de Referência: '||lpad(ba.mes_ref,2,'0')||'/'||lpad(ba.ano_ref,4,'0')||', Código da Base de Cálculo de Crédito: '||bc.cd||'-'||
           bc.descr||'.') descr_pc
     from bem_ativ_imob_oper_cred_pc ba
        , base_calc_cred_pc          bc
    where ba.empresa_id      = gt_row_abertura_efd_pc.empresa_id
      and ba.ano_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'RRRR')
      and ba.mes_ref         = to_char(gt_row_abertura_efd_pc.dt_ini, 'MM')
      and ba.dm_st_proc      = 1 -- validado
      and ba.dm_tipo_oper    = 1 -- Aquisição/Contribuição
      and ba.centrocusto_id is null
      and bc.id              = ba.basecalccredpc_id
    order by 1;
   --
BEGIN
   --
   vn_fase := 1;
   gv_mensagem_log := 'Validação de Planos de Contas e Centros de Custos.';
   --
   -- Monta registro 0500: Planos de Contas
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 2;
      -- 0-Não, 1-Sim
      if nvl(gn_dm_val_pconta_pis,0) = 1 or
         nvl(gn_dm_val_pconta_cofins,0) = 1 then
         --
         vn_fase := 3;
         -- C501 - tabela: nota_fiscal modelos: 06, 28, 29
         for r_reg in c_c501_plano
         loop
            --
            exit when c_c501_plano%notfound or (c_c501_plano%notfound) is null;
            --
            vn_fase := 3.1;
            --
            if nvl(gn_dm_val_pconta_pis,0) = 1 and r_reg.descr_pis is not null then
               --
               vn_fase := 3.2;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_pis;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            end if;
            --
            vn_fase := 3.3;
            --
            if nvl(gn_dm_val_pconta_cofins,0) = 1 and r_reg.descr_cof is not null then
               --
               vn_fase := 3.4;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_cof;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            end if;
            --
         end loop; -- c_c501_plano
         --
         vn_fase := 4;
         -- D501 - tabela: nota_fiscal modelos: 21, 22
         for r_reg in c_d501_plano
         loop
            --
            exit when c_d501_plano%notfound or (c_d501_plano%notfound) is null;
            --
            vn_fase := 4.1;
            --
            if nvl(gn_dm_val_pconta_pis,0) = 1 and
               nvl(gn_dm_val_pconta_cofins,0) = 1 then
               --
               vn_fase := 4.2;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_pc;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            elsif nvl(gn_dm_val_pconta_pis,0) = 1 then
                  --
                  vn_fase := 4.3;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_pis;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
            elsif nvl(gn_dm_val_pconta_cofins,0) = 1 then
                  --
                  vn_fase := 4.4;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_cof;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
            end if;
            --
         end loop; -- c_d501_plano
         --
         vn_fase := 5;
         -- C170 - tabela: nota_fiscal modelos: '01', '1B', '04', '55'
         for r_reg in c_c170_plano
         loop
            --
            exit when c_c170_plano%notfound or (c_c170_plano%notfound) is null;
            --
            vn_fase := 5.1;
            -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
            -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 then
               --
               vn_fase := 5.2;
               --
               if nvl(gn_dm_val_pconta_pis,0) = 1 and
                  nvl(gn_dm_val_pconta_cofins,0) = 1 then
                  --
                  vn_fase := 5.3;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_pc;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
               elsif nvl(gn_dm_val_pconta_pis,0) = 1 then
                     --
                     vn_fase := 5.4;
                     --
                     declare
                        vn_loggenerico_id  log_generico.id%type;
                     begin
                        gv_resumo_log := r_reg.descr_pis;
                        pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                         , ev_mensagem       => gv_mensagem_log
                                                         , ev_resumo         => gv_resumo_log
                                                         , en_tipo_log       => erro_de_validacao
                                                         , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                         , ev_obj_referencia => gv_obj_referencia
                                                         , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                     exception
                        when others then
                           null;
                     end;
                     --
               elsif nvl(gn_dm_val_pconta_cofins,0) = 1 then
                     --
                     vn_fase := 5.5;
                     --
                     declare
                        vn_loggenerico_id  log_generico.id%type;
                     begin
                        gv_resumo_log := r_reg.descr_cof;
                        pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                         , ev_mensagem       => gv_mensagem_log
                                                         , ev_resumo         => gv_resumo_log
                                                         , en_tipo_log       => erro_de_validacao
                                                         , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                         , ev_obj_referencia => gv_obj_referencia
                                                         , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                     exception
                        when others then
                           null;
                     end;
                     --
               end if;
               --
            end if; -- fkg_gera_escr_efdpc_cfop_empr(empresa_id, cfop_id) = 1 and fkg_dmgeraajusm210_parcfopempr(empresa_id, cfop_id) = 0
            --
         end loop; -- c_c170_plano
         --
         vn_fase := 6;
         -- A170 - tabela: nota_fiscal modelo: 99
         for r_reg in c_a170_plano
         loop
            --
            exit when c_a170_plano%notfound or (c_a170_plano%notfound) is null;
            --
            vn_fase := 6.1;
            -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
            -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 then
               --
               vn_fase := 6.2;
               --
               if nvl(gn_dm_val_pconta_pis,0) = 1 and
                  nvl(gn_dm_val_pconta_cofins,0) = 1 then
                  --
                  vn_fase := 6.3;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_pc;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
               elsif nvl(gn_dm_val_pconta_pis,0) = 1 then
                     --
                     vn_fase := 6.4;
                     --
                     declare
                        vn_loggenerico_id  log_generico.id%type;
                     begin
                        gv_resumo_log := r_reg.descr_pis;
                        pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                         , ev_mensagem       => gv_mensagem_log
                                                         , ev_resumo         => gv_resumo_log
                                                         , en_tipo_log       => erro_de_validacao
                                                         , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                         , ev_obj_referencia => gv_obj_referencia
                                                         , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                     exception
                        when others then
                           null;
                     end;
                     --
               elsif nvl(gn_dm_val_pconta_cofins,0) = 1 then
                     --
                     vn_fase := 6.5;
                     --
                     declare
                        vn_loggenerico_id  log_generico.id%type;
                     begin
                        gv_resumo_log := r_reg.descr_cof;
                        pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                         , ev_mensagem       => gv_mensagem_log
                                                         , ev_resumo         => gv_resumo_log
                                                         , en_tipo_log       => erro_de_validacao
                                                         , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                         , ev_obj_referencia => gv_obj_referencia
                                                         , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                     exception
                        when others then
                           null;
                     end;
                     --
               end if;
               --
            end if; -- fkg_gera_escr_efdpc_cfop_empr(empresa_id, cfop_id) = 1 and fkg_dmgeraajusm210_parcfopempr(empresa_id, cfop_id) = 0
            --
         end loop;
         --
         vn_fase := 7;
         -- C380 - tabela: res_dia_nf_venda_cons modelo: 02
         for r_reg in c_c380_plano
         loop
            --
            exit when c_c380_plano%notfound or (c_c380_plano%notfound) is null;
            --
            vn_fase := 7.1;
            -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
            -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 1 and
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 0 then
               --
               vn_fase := 7.2;
               --
               if nvl(gn_dm_val_pconta_pis,0) = 1 and
                  nvl(gn_dm_val_pconta_cofins,0) = 1 then
                  --
                  vn_fase := 7.3;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_pc;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
               elsif nvl(gn_dm_val_pconta_pis,0) = 1 then
                     --
                     vn_fase := 7.4;
                     --
                     declare
                        vn_loggenerico_id  log_generico.id%type;
                     begin
                        gv_resumo_log := r_reg.descr_pis;
                        pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                         , ev_mensagem       => gv_mensagem_log
                                                         , ev_resumo         => gv_resumo_log
                                                         , en_tipo_log       => erro_de_validacao
                                                         , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                         , ev_obj_referencia => gv_obj_referencia
                                                         , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                     exception
                        when others then
                           null;
                     end;
                     --
               elsif nvl(gn_dm_val_pconta_cofins,0) = 1 then
                     --
                     vn_fase := 7.5;
                     --
                     declare
                        vn_loggenerico_id  log_generico.id%type;
                     begin
                        gv_resumo_log := r_reg.descr_cof;
                        pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                         , ev_mensagem       => gv_mensagem_log
                                                         , ev_resumo         => gv_resumo_log
                                                         , en_tipo_log       => erro_de_validacao
                                                         , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                         , ev_obj_referencia => gv_obj_referencia
                                                         , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                     exception
                        when others then
                           null;
                     end;
                     --
               end if;
               --
            end if; -- fkg_gera_escr_efdpc_cfop_empr(empresa_id, cfop_id) = 1 and fkg_dmgeraajusm210_parcfopempr(empresa_id, cfop_id) = 0
            --
         end loop; -- c_c380_plano
         --
         vn_fase := 8;
         -- C481 e C485 - tabela: reducao_z_ecf equipamentos de modelos: 02 e 2D
         for r_reg in c_c481_c485_plano
         loop
            --
            exit when c_c481_c485_plano%notfound or (c_c481_c485_plano%notfound) is null;
            --
            vn_fase := 8.1;
            -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
            -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
            if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 1 and
               pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id_pis, r_reg.codst_id_cofins) = 0 then
               --
               vn_fase := 8.2;
               --
               if nvl(gn_dm_val_pconta_pis,0) = 1 and r_reg.descr_pis is not null then
                  --
                  vn_fase := 8.3;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_pis;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
               end if;
               --
               vn_fase := 8.4;
               --
               if nvl(gn_dm_val_pconta_cofins,0) = 1 and r_reg.descr_cof is not null then
                  --
                  vn_fase := 8.5;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_cof;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
               end if;
               --
            end if; -- fkg_gera_escr_efdpc_cfop_empr(empresa_id, cfop_id) = 1 and fkg_dmgeraajusm210_parcfopempr(empresa_id, cfop_id) = 0
            --
         end loop; -- c_c481_c485_plano
         --
         vn_fase := 9;
         -- D100 - Conhecimento de Transporte
         for r_reg in c_d100_plano
         loop
            --
            exit when c_d100_plano%notfound or (c_d100_plano%notfound) is null;
            --
            vn_fase := 9.1;
            --
            if nvl(gn_dm_val_pconta_pis,0) = 1 and r_reg.descr_pis is not null then
               --
               vn_fase := 9.2;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_pis;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            end if;
            --
            vn_fase := 9.3;
            --
            if nvl(gn_dm_val_pconta_cofins,0) = 1 and r_reg.descr_cof is not null then
               --
               vn_fase := 9.4;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_cof;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            end if;
            --
         end loop; -- c_d100_plano
         --
         vn_fase := 10;
         -- D200 - Conhecimento de Transporte
         for r_reg in c_d200_plano
         loop
            --
            exit when c_d200_plano%notfound or (c_d200_plano%notfound) is null;
            --
            vn_fase := 10.1;
            --
            if nvl(gn_dm_val_pconta_pis,0) = 1 and r_reg.descr_pis is not null then
               --
               vn_fase := 10.2;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_pis;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            end if;
            --
            vn_fase := 10.3;
            --
            if nvl(gn_dm_val_pconta_cofins,0) = 1 and r_reg.descr_cof is not null then
               --
               vn_fase := 10.4;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_cof;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            end if;
            --
         end loop; -- c_d200_plano
         --
      end if; -- nvl(gn_dm_val_pconta_pis,0) = 1 or nvl(gn_dm_val_pconta_cofins,0) = 1
      --
   end if; -- ((abertura_efd_pc_regime.dm_cod_inc_trib in (1,3)) or (abertura_efd_pc_regime.dm_cod_inc_trib = 2 and abertura_efd_pc_regime.dm_ind_reg_cum = 9))
   --
   vn_fase := 11;
   -- Bloco I - Registros I200 e I300 - tabelas: compos_recdedexcl_oifd e compl_detal_oper_oifd.
   for r_reg in c_i200_i300_plano
   loop
      --
      exit when c_i200_i300_plano%notfound or (c_i200_i300_plano%notfound) is null;
      --
      vn_fase := 11.1;
      --
      if (nvl(gn_dm_val_pconta_pis,0) = 1 or nvl(gn_dm_val_pconta_cofins,0) = 1) and
         r_reg.descr_pc is not null then
         --
         vn_fase := 11.2;
         --
         declare
            vn_loggenerico_id  log_generico.id%type;
         begin
            gv_resumo_log := r_reg.descr_pc;
            pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                             , ev_mensagem       => gv_mensagem_log
                                             , ev_resumo         => gv_resumo_log
                                             , en_tipo_log       => erro_de_validacao
                                             , en_referencia_id  => gt_row_abertura_efd_pc.id
                                             , ev_obj_referencia => gv_obj_referencia
                                             , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
         exception
            when others then
               null;
         end;
         --
      end if;
      --
   end loop; -- c_i200_i300_plano
   --
   vn_fase := 12;
   -- 1101 - tabela: contr_cred_fiscal_pis/apur_cred_ext_pis e contr_cred_fiscal_cofins/apur_cred_ext_cofins
   for r_reg in c_1101_plano
   loop
      --
      exit when c_1101_plano%notfound or (c_1101_plano%notfound) is null;
      --
      vn_fase := 12.1;
      --
      if nvl(gn_dm_val_pconta_pis,0) = 1 and r_reg.tipo = 0 then -- processo do PIS
         --
         vn_fase := 12.2;
         --
         declare
            vn_loggenerico_id  log_generico.id%type;
         begin
            gv_resumo_log := r_reg.descr_pc;
            pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                             , ev_mensagem       => gv_mensagem_log
                                             , ev_resumo         => gv_resumo_log
                                             , en_tipo_log       => erro_de_validacao
                                             , en_referencia_id  => gt_row_abertura_efd_pc.id
                                             , ev_obj_referencia => gv_obj_referencia
                                             , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
         exception
            when others then
               null;
         end;
         --
      end if;
      --
      vn_fase := 12.3;
      --
      if nvl(gn_dm_val_pconta_cofins,0) = 1 and r_reg.tipo = 1 then -- processo da COFINS
         --
         vn_fase := 12.4;
         --
         declare
            vn_loggenerico_id  log_generico.id%type;
         begin
            gv_resumo_log := r_reg.descr_pc;
            pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                             , ev_mensagem       => gv_mensagem_log
                                             , ev_resumo         => gv_resumo_log
                                             , en_tipo_log       => erro_de_validacao
                                             , en_referencia_id  => gt_row_abertura_efd_pc.id
                                             , ev_obj_referencia => gv_obj_referencia
                                             , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
         exception
            when others then
               null;
         end;
         --
      end if;
      --
   end loop; -- c_1101_plano
   --
   vn_fase := 13;
   --
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 13.1;
      -- Bloco F100 -- tabela: dem_doc_oper_ger_cc
      -- Bloco F120 -- tabela: bem_ativ_imob_oper_cred_pc/depreciação
      -- Bloco F130 -- tabela: bem_ativ_imob_oper_cred_pc/amortização
      -- Bloco F150 -- tabela: cred_pres_est_abert_pc
      for r_reg in c_f100_f120_f130_f150_plano
      loop
         --
         exit when c_f100_f120_f130_f150_plano%notfound or (c_f100_f120_f130_f150_plano%notfound) is null;
         --
         vn_fase := 13.2;
         --
         if nvl(gn_dm_val_pconta_pis,0) = 1 or -- processo do PIS
            nvl(gn_dm_val_pconta_cofins,0) = 1 then -- processo da COFINS
            --
            vn_fase := 13.3;
            --
            declare
               vn_loggenerico_id  log_generico.id%type;
            begin
               gv_resumo_log := r_reg.descr_pc;
               pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                , ev_mensagem       => gv_mensagem_log
                                                , ev_resumo         => gv_resumo_log
                                                , en_tipo_log       => erro_de_validacao
                                                , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                , ev_obj_referencia => gv_obj_referencia
                                                , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
            exception
               when others then
                  null;
            end;
            --
         end if;
         --
      end loop; -- c_f100_f120_f130_f150_plano
      --
   end if; -- ((abertura_efd_pc_regime.dm_cod_inc_trib in (1,3)) or (abertura_efd_pc_regime.dm_cod_inc_trib = 2 and abertura_efd_pc_regime.dm_ind_reg_cum = 9))
   --
   vn_fase := 14;
   --
   if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
      gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 1 then -- Regime de Caixa Escrituração consolidada (Registro F500)
      --
      vn_fase := 14.1;
      -- Bloco F500 -- tabela: cons_oper_ins_pc_rc
      for r_reg in c_f500_plano
      loop
         --
         exit when c_f500_plano%notfound or (c_f500_plano%notfound) is null;
         --
         vn_fase := 14.2;
         --
         if nvl(gn_dm_val_pconta_pis,0) = 1 or -- processo do PIS
            nvl(gn_dm_val_pconta_cofins,0) = 1 then -- processo da COFINS
            --
            vn_fase := 14.3;
            --
            declare
               vn_loggenerico_id  log_generico.id%type;
            begin
               gv_resumo_log := r_reg.descr_pc;
               pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                , ev_mensagem       => gv_mensagem_log
                                                , ev_resumo         => gv_resumo_log
                                                , en_tipo_log       => erro_de_validacao
                                                , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                , ev_obj_referencia => gv_obj_referencia
                                                , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
            exception
               when others then
                  null;
            end;
            --
         end if;
         --
      end loop; -- c_f500_plano
      --
      vn_fase := 15;
      -- Bloco F510 -- tabela: cons_oper_ins_pc_rc_aum
      for r_reg in c_f510_plano
      loop
         --
         exit when c_f510_plano%notfound or (c_f510_plano%notfound) is null;
         --
         vn_fase := 15.1;
         --
         if nvl(gn_dm_val_pconta_pis,0) = 1 or -- processo do PIS
            nvl(gn_dm_val_pconta_cofins,0) = 1 then -- processo da COFINS
            --
            vn_fase := 15.2;
            --
            declare
               vn_loggenerico_id  log_generico.id%type;
            begin
               gv_resumo_log := r_reg.descr_pc;
               pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                , ev_mensagem       => gv_mensagem_log
                                                , ev_resumo         => gv_resumo_log
                                                , en_tipo_log       => erro_de_validacao
                                                , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                , ev_obj_referencia => gv_obj_referencia
                                                , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
            exception
               when others then
                  null;
            end;
            --
         end if;
         --
      end loop; -- c_f510_plano
      --
   end if; -- abertura_efd_pc_regime.dm_cod_inc_trib = 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, abertura_efd_pc_regime.dm_ind_reg_cum = 1-Regime de Caixa Escrituração consolidada (Registro F500)
   --
   vn_fase := 16;
   --
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 16.1;
      -- Bloco F525 -- tabela: comp_rec_det_rc
      for r_reg in c_f525_plano
      loop
         --
         exit when c_f525_plano%notfound or (c_f525_plano%notfound) is null;
         --
         vn_fase := 16.2;
         --
         if nvl(gn_dm_val_pconta_pis,0) = 1 or -- processo do PIS
            nvl(gn_dm_val_pconta_cofins,0) = 1 then -- processo da COFINS
            --
            vn_fase := 16.3;
            --
            declare
               vn_loggenerico_id  log_generico.id%type;
            begin
               gv_resumo_log := r_reg.descr_pc;
               pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                , ev_mensagem       => gv_mensagem_log
                                                , ev_resumo         => gv_resumo_log
                                                , en_tipo_log       => erro_de_validacao
                                                , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                , ev_obj_referencia => gv_obj_referencia
                                                , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
            exception
               when others then
                  null;
            end;
            --
         end if;
         --
      end loop; -- c_f525_plano
      --
   end if;
   --
   vn_fase := 17;
   --
   if gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2 and -- Escrituração de operações com incidência exclusivamente no regime cumulativo
      gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 2 then -- Regime de Competência - Escrituração consolidada (Registro F550)
      --
      vn_fase := 18;
      -- Bloco F550 -- tabela: cons_oper_ins_pc_rcomp
      for r_reg in c_f550_plano
      loop
         --
         exit when c_f550_plano%notfound or (c_f550_plano%notfound) is null;
         --
         vn_fase := 18.1;
         --
         if nvl(gn_dm_val_pconta_pis,0) = 1 or -- processo do PIS
            nvl(gn_dm_val_pconta_cofins,0) = 1 then -- processo da COFINS
            --
            vn_fase := 18.2;
            --
            declare
               vn_loggenerico_id  log_generico.id%type;
            begin
               gv_resumo_log := r_reg.descr_pc;
               pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                , ev_mensagem       => gv_mensagem_log
                                                , ev_resumo         => gv_resumo_log
                                                , en_tipo_log       => erro_de_validacao
                                                , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                , ev_obj_referencia => gv_obj_referencia
                                                , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
            exception
               when others then
                  null;
            end;
            --
         end if;
         --
      end loop; -- c_f550_plano
      --
      vn_fase := 19;
      -- Bloco F560 -- tabela: cons_op_ins_pcrcomp_aum
      for r_reg in c_f560_plano
      loop
         --
         exit when c_f560_plano%notfound or (c_f560_plano%notfound) is null;
         --
         vn_fase := 19.1;
         --
         if nvl(gn_dm_val_pconta_pis,0) = 1 or -- processo do PIS
            nvl(gn_dm_val_pconta_cofins,0) = 1 then -- processo da COFINS
            --
            vn_fase := 19.2;
            --
            declare
               vn_loggenerico_id  log_generico.id%type;
            begin
               gv_resumo_log := r_reg.descr_pc;
               pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                , ev_mensagem       => gv_mensagem_log
                                                , ev_resumo         => gv_resumo_log
                                                , en_tipo_log       => erro_de_validacao
                                                , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                , ev_obj_referencia => gv_obj_referencia
                                                , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
            exception
               when others then
                  null;
            end;
            --
         end if;
         --
      end loop; -- c_f560_plano
      --
   end if; -- gt_row_abertura_efd_pc_regime.dm_cod_inc_trib = 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 1-Regime de Caixa Escrituração consolidada (Registro F500)
   --
   vn_fase := 20;
   -- Monta registro 0600: Centro do Custo
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 21;
      -- A170 - tabela: nota_fiscal modelo: 99
      for r_reg in c_a170_custo
      loop
         --
         exit when c_a170_custo%notfound or (c_a170_custo%notfound) is null;
         --
         vn_fase := 21.1;
         -- Verifica se a CFOP faz parte da escrituração: 0-não, 1-sim
         -- Verifica se a CFOP não gera ajuste na consolidação m210: 0-não, 1-sim
         if pk_csf_efd_pc.fkg_gera_escr_efdpc_cfop_empr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 1 and
            pk_csf_efd_pc.fkg_dmgeraajusm210_parcfopempr(r_reg.empresa_id, r_reg.cfop_id, r_reg.codst_id, null) = 0 then
            --
            vn_fase := 21.2;
            --
            if nvl(gn_dm_val_ccusto_pis,0) = 1 and
               nvl(gn_dm_val_ccusto_cofins,0) = 1 then
               --
               vn_fase := 21.3;
               --
               declare
                  vn_loggenerico_id  log_generico.id%type;
               begin
                  gv_resumo_log := r_reg.descr_pc;
                  pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                   , ev_mensagem       => gv_mensagem_log
                                                   , ev_resumo         => gv_resumo_log
                                                   , en_tipo_log       => erro_de_validacao
                                                   , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                   , ev_obj_referencia => gv_obj_referencia
                                                   , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
               exception
                  when others then
                     null;
               end;
               --
            elsif nvl(gn_dm_val_ccusto_pis,0) = 1 then
                  --
                  vn_fase := 21.4;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_pis;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
            elsif nvl(gn_dm_val_ccusto_cofins,0) = 1 then
                  --
                  vn_fase := 21.5;
                  --
                  declare
                     vn_loggenerico_id  log_generico.id%type;
                  begin
                     gv_resumo_log := r_reg.descr_cof;
                     pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                      , ev_mensagem       => gv_mensagem_log
                                                      , ev_resumo         => gv_resumo_log
                                                      , en_tipo_log       => erro_de_validacao
                                                      , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                      , ev_obj_referencia => gv_obj_referencia
                                                      , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
                  exception
                     when others then
                        null;
                  end;
                  --
            end if;
            --
         end if;
         --
      end loop; -- c_a170_custo
      --
   end if; -- ((abertura_efd_pc_regime.dm_cod_inc_trib in (1,3)) or (1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo) (abertura_efd_pc_regime.dm_cod_inc_trib = 2 and abertura_efd_pc_regime.dm_ind_reg_cum = 9)) -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
   --
   vn_fase := 22;
   -- 1101 - tabela: contr_cred_fiscal_pis/apur_cred_ext_pis e contr_cred_fiscal_cofins/apur_cred_ext_cofins
   for r_reg in c_1101_custo
   loop
      --
      exit when c_1101_custo%notfound or (c_1101_custo%notfound) is null;
      --
      vn_fase := 22.1;
      --
      if nvl(gn_dm_val_ccusto_pis,0) = 1 and r_reg.tipo = 0 then -- processo do PIS
         --
         vn_fase := 22.2;
         --
         declare
            vn_loggenerico_id  log_generico.id%type;
         begin
            gv_resumo_log := r_reg.descr_pc;
            pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                             , ev_mensagem       => gv_mensagem_log
                                             , ev_resumo         => gv_resumo_log
                                             , en_tipo_log       => erro_de_validacao
                                             , en_referencia_id  => gt_row_abertura_efd_pc.id
                                             , ev_obj_referencia => gv_obj_referencia
                                             , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
         exception
            when others then
               null;
         end;
         --
      end if;
      --
      vn_fase := 22.3;
      --
      if nvl(gn_dm_val_ccusto_cofins,0) = 1 and r_reg.tipo = 1 then -- processo da COFINS
         --
         vn_fase := 22.4;
         --
         declare
            vn_loggenerico_id  log_generico.id%type;
         begin
            gv_resumo_log := r_reg.descr_pc;
            pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                             , ev_mensagem       => gv_mensagem_log
                                             , ev_resumo         => gv_resumo_log
                                             , en_tipo_log       => erro_de_validacao
                                             , en_referencia_id  => gt_row_abertura_efd_pc.id
                                             , ev_obj_referencia => gv_obj_referencia
                                             , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
         exception
            when others then
               null;
         end;
         --
      end if;
      --
   end loop; -- c_1101_custo
   --
   vn_fase := 23;
   --
   if ((nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo
       (nvl(gt_row_abertura_efd_pc_regime.dm_cod_inc_trib,0) = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) then -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
      --
      vn_fase := 24;
      -- Bloco F100 -- tabela: dem_doc_oper_ger_cc
      -- Bloco F120 -- tabela: bem_ativ_imob_oper_cred_pc/depreciação
      -- Bloco F130 -- tabela: bem_ativ_imob_oper_cred_pc/amortização
      for r_reg in c_f100_f120_f130_custo
      loop
         --
         exit when c_f100_f120_f130_custo%notfound or (c_f100_f120_f130_custo%notfound) is null;
         --
         vn_fase := 24.1;
         --
         if nvl(gn_dm_val_ccusto_pis,0) = 1 or -- processo do PIS
            nvl(gn_dm_val_ccusto_cofins,0) = 1 then -- processo da COFINS
            --
            vn_fase := 24.2;
            --
            declare
               vn_loggenerico_id  log_generico.id%type;
            begin
               gv_resumo_log := r_reg.descr_pc;
               pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                                , ev_mensagem       => gv_mensagem_log
                                                , ev_resumo         => gv_resumo_log
                                                , en_tipo_log       => erro_de_validacao
                                                , en_referencia_id  => gt_row_abertura_efd_pc.id
                                                , ev_obj_referencia => gv_obj_referencia
                                                , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
            exception
               when others then
                  null;
            end;
            --
         end if;
         --
      end loop; -- c_f100_f120_f130_custo
      --
   end if; -- ((abertura_efd_pc_regime.dm_cod_inc_trib in (1,3)) or -- 1-Escrituração de operações com incidência exclusivamente no regime não-cumulativo ou 3-Escrituração de operações com incidência nos regimes nãocumulativo e cumulativo (abertura_efd_pc_regime.dm_cod_inc_trib = 2 and gt_row_abertura_efd_pc_regime.dm_ind_reg_cum = 9)) -- 2-Escrituração de operações com incidência exclusivamente no regime cumulativo, 9-Regime de Competência - Escrituração detalhada, com base nos registros dos Blocos A, C, D e F
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_valida_plcta_ccusto fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_VALIDA_PLCTA_CCUSTO;
---------------------------------------------------------
--| Procedimento inicia os valores das váriaveis globais
---------------------------------------------------------
PROCEDURE PKB_INICIA_PARAM ( EN_ABERTURAEFDPC_ID IN ABERTURA_EFD_PC.ID%TYPE ) IS
BEGIN
   --
   gt_row_abertura_efd_pc        := null;
   gt_row_abertura_efd_pc_regime := null;
   gt_row_versao_layout_efd_pc   := null;
   --
   begin
      select efd.*
        into gt_row_abertura_efd_pc
        from abertura_efd_pc efd
       where efd.id = en_aberturaefdpc_id;
   exception
      when others then
         raise_application_error (-20101, 'Problemas ao recuperar registro de abertura. Erro = '||sqlerrm);
   end;
   --
   gn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa(en_empresa_id => gt_row_abertura_efd_pc.empresa_id);
   --
   -- Alterar os valores de datas inicial e final para considerar a hora.
   gt_row_abertura_efd_pc.dt_ini := trunc(gt_row_abertura_efd_pc.dt_ini);
   gt_row_abertura_efd_pc.dt_fin := to_date((trunc(gt_row_abertura_efd_pc.dt_fin)||' '||'23:59:59'),'dd/mm/rrrr hh24:mi:ss');
   gn_origem_dado_pessoa := pk_csf_api_efd.fkg_origem_dado_pessoa(en_empresa_id => gt_row_abertura_efd_pc.empresa_id);
   --   
   begin
      select ar.*
        into gt_row_abertura_efd_pc_regime
        from abertura_efd_pc_regime ar
       where ar.aberturaefdpc_id = gt_row_abertura_efd_pc.id;
   exception
      when others then
         raise_application_error (-20101, 'Problemas ao recuperar registro de regime de abertura. Erro = '||sqlerrm);
   end;
   --
   begin
      select vl.*
        into gt_row_versao_layout_efd_pc
        from versao_layout_efd_pc vl
       where vl.id = gt_row_abertura_efd_pc.versaolayoutefdpc_id;
   exception
      when others then
         raise_application_error (-20101, 'Problemas ao recuperar versão de layout do registro de abertura. Erro = '||sqlerrm);
   end;
   --
   begin
      select pe.dm_val_pconta_pis
           , pe.dm_val_pconta_cofins
           , pe.dm_val_ccusto_pis
           , pe.dm_val_ccusto_cofins
           , pe.dm_quebra_infadic_spedc
        into gn_dm_val_pconta_pis
           , gn_dm_val_pconta_cofins
           , gn_dm_val_ccusto_pis
           , gn_dm_val_ccusto_cofins
           , gn_dm_quebra_infadic_spedc
        from param_efd_contr pe
       where pe.empresa_id = gt_row_abertura_efd_pc.empresa_id;
   exception
      when no_data_found then
         -- 0-Não, 1-Sim
         gn_dm_val_pconta_pis       := 0;
         gn_dm_val_pconta_cofins    := 0;
         gn_dm_val_ccusto_pis       := 0;
         gn_dm_val_ccusto_cofins    := 0;
         gn_dm_quebra_infadic_spedc := 0;
      when others then
         raise_application_error (-20101, 'Problemas ao recuperar domínio de validação de plano de conta e centro de custo, e de quebra de informação '||
                                          'adicional nos registros 0450 e C110, do registro de abertura. Erro = '||sqlerrm);
   end;
   --
   if gt_row_abertura_efd_pc.dt_ini < to_date('01/11/2017','dd/mm/rrrr') then
      -- 0-Não, 1-Sim
      gn_dm_val_pconta_pis    := 0;
      gn_dm_val_pconta_cofins := 0;
      gn_dm_val_ccusto_pis    := 0;
      gn_dm_val_ccusto_cofins := 0;
      --
   end if;
   --
EXCEPTION
   when others then
      --
      gv_resumo_log := 'Erro na pkb_inicia_param. Erro = '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => en_aberturaefdpc_id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --
END PKB_INICIA_PARAM;
-----------------------------------------------
--| Procedimento que inicia as variáveis
-----------------------------------------------
PROCEDURE PKB_INICIA_DADOS IS
BEGIN
   --
   --| Variáveis de quantidade de linha de cada registro
   --
   -- BLOCO 0: ABERTURA, IDENTIFICAÇÃO E REFERÊNCIAS
   gn_qtde_reg_0000 := 0;
   gn_qtde_reg_0001 := 0;
   gn_qtde_reg_0035 := 0;
   gn_qtde_reg_0100 := 0;
   gn_qtde_reg_0110 := 0;
   gn_qtde_reg_0111 := 0;
   gn_qtde_reg_0120 := 0;
   gn_qtde_reg_0140 := 0;
   gn_qtde_reg_0145 := 0;
   gn_qtde_reg_0150 := 0;
   gn_qtde_reg_0190 := 0;
   gn_qtde_reg_0200 := 0;
   gn_qtde_reg_0205 := 0;
   gn_qtde_reg_0206 := 0;
   gn_qtde_reg_0208 := 0;
   gn_qtde_reg_0400 := 0;
   gn_qtde_reg_0450 := 0;
   gn_qtde_reg_0500 := 0;
   gn_qtde_reg_0600 := 0;
   gn_qtde_reg_0990 := 0;
   --
   -- BLOCO A: DOCUMENTOS FISCAIS - SERVIÇOS (NÃO SUJEITOS AO ICMS)
   gn_qtde_reg_a001 := 0;
   gn_qtde_reg_a010 := 0;
   gn_qtde_reg_a100 := 0;
   gn_qtde_reg_a110 := 0;
   gn_qtde_reg_a111 := 0;
   gn_qtde_reg_a120 := 0;
   gn_qtde_reg_a170 := 0;
   gn_qtde_reg_a990 := 0;
   --
   -- BLOCO C: DOCUMENTOS FISCAIS I - MERCADORIAS (ICMS/IPI)
   gn_qtde_reg_c001 := 0;
   gn_qtde_reg_c010 := 0;
   gn_qtde_reg_c100 := 0;
   gn_qtde_reg_c110 := 0;
   gn_qtde_reg_c111 := 0;
   gn_qtde_reg_c120 := 0;
   gn_qtde_reg_c170 := 0;
   gn_qtde_reg_c175 := 0;
   gn_qtde_reg_c380 := 0;
   gn_qtde_reg_c381 := 0;
   gn_qtde_reg_c385 := 0;
   gn_qtde_reg_c400 := 0;
   gn_qtde_reg_c405 := 0;
   gn_qtde_reg_c481 := 0;
   gn_qtde_reg_c485 := 0;
   gn_qtde_reg_c489 := 0;
   gn_qtde_reg_c490 := 0;
   gn_qtde_reg_c491 := 0;
   gn_qtde_reg_c495 := 0;
   gn_qtde_reg_c500 := 0;
   gn_qtde_reg_c501 := 0;
   gn_qtde_reg_c505 := 0;
   gn_qtde_reg_c509 := 0;
   gn_qtde_reg_c860 := 0;
   gn_qtde_reg_c870 := 0;
   gn_qtde_reg_c880 := 0;
   gn_qtde_reg_c990 := 0;
   --
   -- BLOCO D: DOCUMENTOS FISCAIS II - SERVIÇOS (ICMS).
   gn_qtde_reg_d001 := 0;
   gn_qtde_reg_d010 := 0;
   gn_qtde_reg_d100 := 0;
   gn_qtde_reg_d101 := 0;
   gn_qtde_reg_d105 := 0;
   gn_qtde_reg_d111 := 0;
   gn_qtde_reg_d200 := 0;
   gn_qtde_reg_d201 := 0;
   gn_qtde_reg_d205 := 0;
   gn_qtde_reg_d209 := 0;
   gn_qtde_reg_d500 := 0;
   gn_qtde_reg_d501 := 0;
   gn_qtde_reg_d505 := 0;
   gn_qtde_reg_d509 := 0;
   gn_qtde_reg_d600 := 0;
   gn_qtde_reg_d601 := 0;
   gn_qtde_reg_d605 := 0;
   gn_qtde_reg_d609 := 0;
   gn_qtde_reg_d990 := 0;
   --
   --| BLOCO F: DEMAIS DOCUMENTOS E OPERAÇÕES
   gn_qtde_reg_f001 := 0;
   gn_qtde_reg_f010 := 0;
   gn_qtde_reg_f100 := 0;
   gn_qtde_reg_f111 := 0;
   gn_qtde_reg_f120 := 0;
   gn_qtde_reg_f129 := 0;
   gn_qtde_reg_f130 := 0;
   gn_qtde_reg_f139 := 0;
   gn_qtde_reg_f150 := 0;
   gn_qtde_reg_f200 := 0;
   gn_qtde_reg_f205 := 0;
   gn_qtde_reg_f210 := 0;
   gn_qtde_reg_f211 := 0;
   gn_qtde_reg_f500 := 0;
   gn_qtde_reg_f509 := 0;
   gn_qtde_reg_f510 := 0;
   gn_qtde_reg_f519 := 0;
   gn_qtde_reg_f525 := 0;
   gn_qtde_reg_f550 := 0;
   gn_qtde_reg_f559 := 0;
   gn_qtde_reg_f560 := 0;
   gn_qtde_reg_f569 := 0;
   gn_qtde_reg_f600 := 0;
   gn_qtde_reg_f700 := 0;
   gn_qtde_reg_f800 := 0;
   gn_qtde_reg_f990 := 0;
   --
   -- BLOCO I - OPERAÇÕES DAS INSTITUIÇÕES FINANCEIRAS, SEGURADORAS, ENTIDADES DE PREVID. PRIVADA, OPERADORAS DE PLANOS DE ASSIST. À SAÚDE E PESSOAS JURÍDICAS
   gn_qtde_reg_i001 := 0;
   gn_qtde_reg_i010 := 0;
   gn_qtde_reg_i100 := 0;
   gn_qtde_reg_i199 := 0;
   gn_qtde_reg_i200 := 0;
   gn_qtde_reg_i299 := 0;
   gn_qtde_reg_i300 := 0;
   gn_qtde_reg_i399 := 0;
   gn_qtde_reg_i990 := 0;
   --
   -- BLOCO M - APURAÇÃO DA CONTRIBUIÇÃO E CRÉDITO DO PIS/PASEP E DA COFINS
   gn_qtde_reg_m001 := 0;
   gn_qtde_reg_m100 := 0;
   gn_qtde_reg_m105 := 0;
   gn_qtde_reg_m110 := 0;
   gn_qtde_reg_m115 := 0;
   gn_qtde_reg_m200 := 0;
   gn_qtde_reg_m205 := 0;
   gn_qtde_reg_m210 := 0;
   gn_qtde_reg_m211 := 0;
   gn_qtde_reg_m215 := 0;
   gn_qtde_reg_m220 := 0;
   gn_qtde_reg_m225 := 0;
   gn_qtde_reg_m230 := 0;
   gn_qtde_reg_m300 := 0;
   gn_qtde_reg_m350 := 0;
   gn_qtde_reg_m400 := 0;
   gn_qtde_reg_m410 := 0;
   gn_qtde_reg_m500 := 0;
   gn_qtde_reg_m505 := 0;
   gn_qtde_reg_m510 := 0;
   gn_qtde_reg_m515 := 0;
   gn_qtde_reg_m600 := 0;
   gn_qtde_reg_m605 := 0;
   gn_qtde_reg_m610 := 0;
   gn_qtde_reg_m611 := 0;
   gn_qtde_reg_m615 := 0;
   gn_qtde_reg_m620 := 0;
   gn_qtde_reg_m625 := 0;
   gn_qtde_reg_m630 := 0;
   gn_qtde_reg_m700 := 0;
   gn_qtde_reg_m800 := 0;
   gn_qtde_reg_m810 := 0;
   gn_qtde_reg_m990 := 0;
   --
   -- BLOCO P: APURAÇÃO DA CONTRIBUIÇÃO PREVIDENCIÁRIA SOBRE A RECEITA BRUTA (CPRB)
   gn_qtde_reg_p001 := 0;
   gn_qtde_reg_p010 := 0;
   gn_qtde_reg_p100 := 0;
   gn_qtde_reg_p110 := 0;
   gn_qtde_reg_p199 := 0;
   gn_qtde_reg_p200 := 0;
   gn_qtde_reg_p210 := 0;
   gn_qtde_reg_p990 := 0;
   --
   -- BLOCO 1: COMPLEMENTO DA ESCRITURAÇÃO - CONTROLE DE SALDOS DE CRÉDITOS E DE RETENÇÕES, OPERAÇÕES EXTEMPORÂNEAS E OUTRAS INFORMAÇÕES
   gn_qtde_reg_1001 := 0;
   gn_qtde_reg_1010 := 0;
   gn_qtde_reg_1011 := 0;
   gn_qtde_reg_1020 := 0;
   gn_qtde_reg_1050 := 0;
   gn_qtde_reg_1100 := 0;
   gn_qtde_reg_1101 := 0;
   gn_qtde_reg_1102 := 0;
   gn_qtde_reg_1200 := 0;
   gn_qtde_reg_1210 := 0;
   gn_qtde_reg_1220 := 0;
   gn_qtde_reg_1300 := 0;
   gn_qtde_reg_1500 := 0;
   gn_qtde_reg_1501 := 0;
   gn_qtde_reg_1502 := 0;
   gn_qtde_reg_1600 := 0;
   gn_qtde_reg_1610 := 0;
   gn_qtde_reg_1620 := 0;
   gn_qtde_reg_1700 := 0;
   gn_qtde_reg_1800 := 0;
   gn_qtde_reg_1809 := 0;
   gn_qtde_reg_1900 := 0;
   gn_qtde_reg_1990 := 0;
   --
   -- BLOCO 9: CONTROLE E ENCERRAMENTO DO ARQUIVO DIGITAL
   gn_qtde_reg_9001 := 0;
   gn_qtde_reg_9900 := 0;
   gn_qtde_reg_9990 := 0;
   gn_qtde_reg_9999 := 0;
   --
   gn_seq_arq := 0;
   --
END PKB_INICIA_DADOS;
--
---------------------------------------------------------------------
--| Procedimento para zerar as tabelas temporárias
---------------------------------------------------------------------
PROCEDURE PKB_TABS_TEMPS_DELETAR is
--INSERIR
--
begin
  --
  execute immediate('truncate table tmp_it_doc_fiscal_emit_ecf');
  execute immediate('truncate table tmp_doc_fiscal_emit_ecf');
  execute immediate('truncate table tmp_tot_parc_red_z_ecf');     -- Não está sendo utilizada no processo
  execute immediate('truncate table tmp_reducao_z_ecf');
  execute immediate('truncate table tmp_conhec_transp_vlprest');
  execute immediate('truncate table tmp_ct_reg_anal');
  execute immediate('truncate table tmp_conhec_transp');
  execute immediate('truncate table tmp_nfregist_analit');        -- Não está sendo utilizada no processo
  execute immediate('truncate table tmp_imp_itemnf');
  execute immediate('truncate table tmp_item_nota_fiscal');
  execute immediate('truncate table tmp_nota_fiscal_total');
  execute immediate('truncate table tmp_nota_fiscal');
  --
  execute immediate('truncate table tmp_gera_arq_efd_pc_reg_c170');
  execute immediate('truncate table tmp_gera_arq_efd_pc_reg_c175');
  --
end;
---------------------------------------------------------------------
--| Procedimento para popular as tabelas temporárias
---------------------------------------------------------------------
PROCEDURE PKB_TABS_TEMPS_POPULAR is
  -- PAREI AQUI
  cursor c_filiais is
    select repc.empresa_id empresa_id,
           repc.aberturaefdpc_id reg_abe_id,
           pk_csf.fkg_dmdtescrdfepoe_empresa(repc.empresa_id) par_gn_dm_dt_escr_dfepoe
      from r_empresa_abertura_efd_pc repc
     where repc.aberturaefdpc_id = gt_row_abertura_efd_pc.id
     order by 1;
  --
begin
  --
  for regf in c_filiais loop
    --
    -- Insert de notas fiscais por filiais
    insert into tmp_nota_fiscal
      (id,
       empresa_id,
       pessoa_id,
       sitdocto_id,
       natoper_id,
       lote_id,
       inutilizanf_id,
       versao,
       id_tag_nfe,
       pk_nitem,
       nat_oper,
       dm_ind_pag,
       modfiscal_id,
       dm_ind_emit,
       dm_ind_oper,
       dt_sai_ent,
       dt_emiss,
       nro_nf,
       serie,
       uf_embarq,
       local_embarq,
       nf_empenho,
       pedido_compra,
       contrato_compra,
       dm_st_proc,
       dt_st_proc,
       dm_forma_emiss,
       dm_impressa,
       dm_tp_impr,
       dm_tp_amb,
       dm_fin_nfe,
       dm_proc_emiss,
       vers_proc,
       dt_aut_sefaz,
       dm_aut_sefaz,
       cidade_ibge_emit,
       uf_ibge_emit,
       dt_hr_ent_sist,
       nro_chave_nfe,
       cnf_nfe,
       dig_verif_chave,
       vers_apl,
       dt_hr_recbto,
       nro_protocolo,
       digest_value,
       msgwebserv_id,
       cod_msg,
       motivo_resp,
       dm_st_email,
       id_usuario_erp,
       impressora_id,
       usuario_id,
       dm_st_integra,
       vias_danfe_custom,
       nro_chave_nfe_adic,
       nro_tentativas_impr,
       dt_ult_tenta_impr,
       sub_serie,
       codconsitemcont_id,
       inforcompdctofiscal_id,
       cod_cta,
       dm_tp_ligacao,
       dm_cod_grupo_tensao,
       dm_tp_assinante,
       sistorig_id,
       unidorg_id,
       serie_scan,
       nro_nf_scan,
       hora_sai_ent,
       nro_chave_cte_ref,
       dt_cont,
       just_cont,
       dm_ret_nf_erp,
       dm_st_wssinal_suframa,
       dm_arm_nfe_terc,
       dm_rec_xml,
       dm_danfe_rec,
       nro_email_env_forn,
       dm_fin_email_forn,
       seq_nro_ord_emb,
       dt_hr_reg_dpec,
       nro_reg_dpec,
       dt_email_env_forn,
       nro_ord_emb,
       dm_id_dest,
       dm_ind_final,
       dm_ind_pres,
       local_despacho,
       empresaintegrbanco_id,
       inf_cpl_imp,
       hash,
       qr_code,
       dm_legado,
       version,
       dm_ind_ativ_part,
       dm_mot_des_icms_part,
       dm_calc_icmsst_part,
       dm_download_xml_sic,
       url_chave,
       dm_envio_reinf,
       cod_mensagem,
       msg_sefaz)
      select nf.id,
             nf.empresa_id,
             nf.pessoa_id,
             nf.sitdocto_id,
             nf.natoper_id,
             nf.lote_id,
             nf.inutilizanf_id,
             nf.versao,
             nf.id_tag_nfe,
             nf.pk_nitem,
             nf.nat_oper,
             nf.dm_ind_pag,
             nf.modfiscal_id,
             nf.dm_ind_emit,
             nf.dm_ind_oper,
             trunc(nf.dt_sai_ent) dt_sai_ent,
             trunc(nf.dt_emiss) dt_emiss,
             nf.nro_nf,
             nf.serie,
             nf.uf_embarq,
             nf.local_embarq,
             nf.nf_empenho,
             nf.pedido_compra,
             nf.contrato_compra,
             nf.dm_st_proc,
             nf.dt_st_proc,
             nf.dm_forma_emiss,
             nf.dm_impressa,
             nf.dm_tp_impr,
             nf.dm_tp_amb,
             nf.dm_fin_nfe,
             nf.dm_proc_emiss,
             nf.vers_proc,
             nf.dt_aut_sefaz,
             nf.dm_aut_sefaz,
             nf.cidade_ibge_emit,
             nf.uf_ibge_emit,
             nf.dt_hr_ent_sist,
             nf.nro_chave_nfe,
             nf.cnf_nfe,
             nf.dig_verif_chave,
             nf.vers_apl,
             nf.dt_hr_recbto,
             nf.nro_protocolo,
             nf.digest_value,
             nf.msgwebserv_id,
             nf.cod_msg,
             nf.motivo_resp,
             nf.dm_st_email,
             nf.id_usuario_erp,
             nf.impressora_id,
             nf.usuario_id,
             nf.dm_st_integra,
             nf.vias_danfe_custom,
             nf.nro_chave_nfe_adic,
             nf.nro_tentativas_impr,
             nf.dt_ult_tenta_impr,
             nf.sub_serie,
             nf.codconsitemcont_id,
             nf.inforcompdctofiscal_id,
             nf.cod_cta,
             nf.dm_tp_ligacao,
             nf.dm_cod_grupo_tensao,
             nf.dm_tp_assinante,
             nf.sistorig_id,
             nf.unidorg_id,
             nf.serie_scan,
             nf.nro_nf_scan,
             nf.hora_sai_ent,
             nf.nro_chave_cte_ref,
             nf.dt_cont,
             nf.just_cont,
             nf.dm_ret_nf_erp,
             nf.dm_st_wssinal_suframa,
             nf.dm_arm_nfe_terc,
             nf.dm_rec_xml,
             nf.dm_danfe_rec,
             nf.nro_email_env_forn,
             nf.dm_fin_email_forn,
             nf.seq_nro_ord_emb,
             nf.dt_hr_reg_dpec,
             nf.nro_reg_dpec,
             nf.dt_email_env_forn,
             nf.nro_ord_emb,
             nf.dm_id_dest,
             nf.dm_ind_final,
             nf.dm_ind_pres,
             nf.local_despacho,
             nf.empresaintegrbanco_id,
             nf.inf_cpl_imp,
             nf.hash,
             nf.qr_code,
             nf.dm_legado,
             nf.version,
             nf.dm_ind_ativ_part,
             nf.dm_mot_des_icms_part,
             nf.dm_calc_icmsst_part,
             nf.dm_download_xml_sic,
             nf.url_chave,
             nf.dm_envio_reinf,
             nf.cod_mensagem,
             nf.msg_sefaz
        -- Menção da tabela nota fiscal somente no insert da temporária.
        from nota_fiscal nf
       where nf.dm_st_proc      in (4, 6, 7, 8) -- 4 - Autorizada, 6 - Denegada, 7 - Cancelada, 8 - Inutilizada
         and nf.empresa_id      = regf.empresa_id
         and nf.dm_arm_nfe_terc = 0
         and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss),'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr'))
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss,'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr'))
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and regf.par_gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss,'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr'))
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and regf.par_gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss),'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr')));
    /*  where nf.dm_st_proc in (4, 6, 7, 8) -- 4-autorizada, 6-denegada, 7-cancelada, 8-inutilizada
        and nf.empresa_id = regf.empresa_id
        and nf.dm_arm_nfe_terc = 0
        and nf.dm_ind_emit = 1 -- emiss terceiro
        and decode(regf.par_gn_dm_dt_escr_dfepoe,0,nvl(nf.dt_sai_ent, nf.dt_emiss),nf.dt_emiss) between
            gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin
     union all
     select * -- menção da tabela nota fiscal somente no insert da temporária.
       from nota_fiscal nf
      where nf.dm_st_proc in (4, 6, 7, 8) -- 4-autorizada, 6-denegada, 7-cancelada, 8-inutilizada
        and nf.empresa_id = regf.empresa_id
        and nf.dm_arm_nfe_terc = 0
        and nf.dm_ind_emit = 0 --emiss propria
        and to_date(nf.dt_emiss, 'dd/mm/rrrr') between
            gt_row_abertura_efd_pc.dt_ini and gt_row_abertura_efd_pc.dt_fin;
    */
    --
    --
    -- Insert de Conhecimentos de transporte  
    insert into tmp_conhec_transp
      (id,
       dt_hr_ent_sist,
       empresa_id,
       lotecte_id,
       inutilizaconhectransp_id,
       pessoa_id,
       sitdocto_id,
       versao,
       id_tag_cte,
       uf_ibge_emit,
       cct_cte,
       cfop,
       cfop_id,
       nat_oper,
       dm_for_pag,
       modfiscal_id,
       serie,
       subserie,
       nro_ct,
       dt_hr_emissao,
       dm_tp_imp,
       dm_forma_emiss,
       dig_verif_chave,
       nro_chave_cte,
       dm_tp_amb,
       dm_tp_cte,
       dm_proc_emiss,
       vers_apl_cte,
       chave_cte_ref,
       ibge_cidade_emit,
       descr_cidade_emit,
       sigla_uf_emit,
       dm_modal,
       dm_tp_serv,
       ibge_cidade_ini,
       descr_cidade_ini,
       sigla_uf_ini,
       ibge_cidade_fim,
       descr_cidade_fim,
       sigla_uf_fim,
       dm_retira,
       det_retira,
       dm_tomador,
       inf_adic_fisco,
       dm_st_proc,
       dt_st_proc,
       dm_impressa,
       dm_st_email,
       dm_st_integra,
       dm_aut_sefaz,
       dt_aut_sefaz,
       id_usuario_erp,
       usuario_id,
       impressora_id,
       vias_dacte_custom,
       nro_tentativas_impr,
       dt_ult_tenta_impr,
       vers_apl,
       dt_hr_recbto,
       nro_protocolo,
       digest_value,
       msgwebserv_id,
       cod_msg,
       motivo_resp,
       dm_ind_oper,
       dm_ind_emit,
       dm_ind_frt,
       inforcompdctofiscal_id,
       cod_cta,
       dt_sai_ent,
       sistorig_id,
       unidorg_id,
       dt_cont,
       just_cont,
       dm_arm_cte_terc,
       nro_chave_cte_adic,
       natoper_id,
       nro_carreg,
       dm_ret_ct_erp,
       empresaintegrbanco_id,
       dm_rec_xml,
       dm_dacte_rec,
       nro_email_env_forn,
       dm_fin_email_forn,
       id_erp,
       dm_legado,
       dm_global,
       dm_ind_ie_toma,
       vl_tot_trib,
       obs_global,
       descr_serv,
       qtde_carga_os,
       dm_envio_reinf)
      select cttp.id,
             cttp.dt_hr_ent_sist,
             cttp.empresa_id,
             cttp.lotecte_id,
             cttp.inutilizaconhectransp_id,
             cttp.pessoa_id,
             cttp.sitdocto_id,
             cttp.versao,
             cttp.id_tag_cte,
             cttp.uf_ibge_emit,
             cttp.cct_cte,
             cttp.cfop,
             cttp.cfop_id,
             cttp.nat_oper,
             cttp.dm_for_pag,
             cttp.modfiscal_id,
             cttp.serie,
             cttp.subserie,
             cttp.nro_ct,
             trunc(cttp.dt_hr_emissao) dt_hr_emissao,
             cttp.dm_tp_imp,
             cttp.dm_forma_emiss,
             cttp.dig_verif_chave,
             cttp.nro_chave_cte,
             cttp.dm_tp_amb,
             cttp.dm_tp_cte,
             cttp.dm_proc_emiss,
             cttp.vers_apl_cte,
             cttp.chave_cte_ref,
             cttp.ibge_cidade_emit,
             cttp.descr_cidade_emit,
             cttp.sigla_uf_emit,
             cttp.dm_modal,
             cttp.dm_tp_serv,
             cttp.ibge_cidade_ini,
             cttp.descr_cidade_ini,
             cttp.sigla_uf_ini,
             cttp.ibge_cidade_fim,
             cttp.descr_cidade_fim,
             cttp.sigla_uf_fim,
             cttp.dm_retira,
             cttp.det_retira,
             cttp.dm_tomador,
             cttp.inf_adic_fisco,
             cttp.dm_st_proc,
             cttp.dt_st_proc,
             cttp.dm_impressa,
             cttp.dm_st_email,
             cttp.dm_st_integra,
             cttp.dm_aut_sefaz,
             cttp.dt_aut_sefaz,
             cttp.id_usuario_erp,
             cttp.usuario_id,
             cttp.impressora_id,
             cttp.vias_dacte_custom,
             cttp.nro_tentativas_impr,
             cttp.dt_ult_tenta_impr,
             cttp.vers_apl,
             cttp.dt_hr_recbto,
             cttp.nro_protocolo,
             cttp.digest_value,
             cttp.msgwebserv_id,
             cttp.cod_msg,
             cttp.motivo_resp,
             cttp.dm_ind_oper,
             cttp.dm_ind_emit,
             cttp.dm_ind_frt,
             cttp.inforcompdctofiscal_id,
             cttp.cod_cta,
             trunc(cttp.dt_sai_ent) dt_sai_ent,
             cttp.sistorig_id,
             cttp.unidorg_id,
             cttp.dt_cont,
             cttp.just_cont,
             cttp.dm_arm_cte_terc,
             cttp.nro_chave_cte_adic,
             cttp.natoper_id,
             cttp.nro_carreg,
             cttp.dm_ret_ct_erp,
             cttp.empresaintegrbanco_id,
             cttp.dm_rec_xml,
             cttp.dm_dacte_rec,
             cttp.nro_email_env_forn,
             cttp.dm_fin_email_forn,
             cttp.id_erp,
             cttp.dm_legado,
             cttp.dm_global,
             cttp.dm_ind_ie_toma,
             cttp.vl_tot_trib,
             cttp.obs_global,
             cttp.descr_serv,
             cttp.qtde_carga_os,
             cttp.dm_envio_reinf
        from conhec_transp cttp, 
             mod_fiscal mfis
       where cttp.empresa_id      = regf.empresa_id
         and cttp.dm_st_proc      = 4 -- Autorizado
         and cttp.dm_arm_cte_terc = 0 -- 0 - Não, 1 - Sim
         and mfis.id              = cttp.modfiscal_id
         and mfis.cod_mod         in ('07', '08', '8B', '09', '10', '11', '26', '27', '57', '63', '67')
         and ((cttp.dm_ind_emit = 1 and to_date(nvl(cttp.dt_sai_ent, cttp.dt_hr_emissao),'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr'))
              or
             (cttp.dm_ind_emit = 0 and cttp.dm_ind_oper = 0 and regf.par_gn_dm_dt_escr_dfepoe = 0 and to_date(cttp.dt_hr_emissao,'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr'))
              or
             (cttp.dm_ind_emit = 0 and cttp.dm_ind_oper = 0 and regf.par_gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(cttp.dt_sai_ent, cttp.dt_hr_emissao),'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr'))
              or
             (cttp.dm_ind_emit = 0 and cttp.dm_ind_oper = 1 and to_date(cttp.dt_hr_emissao,'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr')));
    --
    -- Insert de Cupons Fiscais por Filiais
    insert into tmp_reducao_z_ecf
      select *
        from reducao_z_ecf rzcf
       where rzcf.equipecf_id in (select id
                                    from equip_ecf eecf
                                   where eecf.empresa_id = regf.empresa_id)
                                     and rzcf.dt_doc between trunc(gt_row_abertura_efd_pc.dt_ini) and trunc(gt_row_abertura_efd_pc.dt_fin);
    --
    -- Insert de Cupom Fiscal
    insert into tmp_cupom_fiscal
      (id,
       empresa_id,
       versao,
       versao_dados_ent,
       versao_sb,
       id_tag,
       estado_id,
       cod_nro_chv,
       modfiscal_id,
       nro_serie_sat,
       nro_cfe,
       dt_emissao,
       hr_emissao,
       cod_dig_verif,
       dm_tp_ambiente,
       cnpj,
       sign_ac,
       assinatura_qrcod,
       nro_caixa,
       dm_st_proc,
       dm_st_integra,
       nro_autoriz,
       dt_hr_autoriz,
       sitdocto_id)
      select cf.id,
             cf.empresa_id,
             cf.versao,
             cf.versao_dados_ent,
             cf.versao_sb,
             cf.id_tag,
             cf.estado_id,
             cf.cod_nro_chv,
             cf.modfiscal_id,
             cf.nro_serie_sat,
             cf.nro_cfe,
             cf.dt_emissao,
             cf.hr_emissao,
             cf.cod_dig_verif,
             cf.dm_tp_ambiente,
             cf.cnpj,
             cf.sign_ac,
             cf.assinatura_qrcod,
             cf.nro_caixa,
             cf.dm_st_proc,
             cf.dm_st_integra,
             cf.nro_autoriz,
             cf.dt_hr_autoriz,
             cf.sitdocto_id
        from cupom_fiscal cf
       where cf.empresa_id = regf.empresa_id
         and to_date(cf.dt_emissao,'dd/mm/rrrr') between to_date(gt_row_abertura_efd_pc.dt_ini,'dd/mm/rrrr') and to_date(gt_row_abertura_efd_pc.dt_fin,'dd/mm/rrrr')	   
         and cf.dm_st_proc in (4);
    --
  end loop;
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_NOTA_FISCAL', CASCADE => TRUE); END;
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_CUPOM_FISCAL', CASCADE => TRUE); END;
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_CONHEC_TRANSP', CASCADE => TRUE); END;
  -- Inserir aqui conhecimento de transporte.
  --
  insert into tmp_nota_fiscal_total
    select *
      from nota_fiscal_total nftt
     where nftt.notafiscal_id in (select id from tmp_nota_fiscal);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_NOTA_FISCAL_TOTAL', CASCADE => TRUE); END; 
  --
  insert into tmp_item_nota_fiscal
    select *
      from item_nota_fiscal itnf
     where itnf.notafiscal_id in (select id from tmp_nota_fiscal);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_ITEM_NOTA_FISCAL', CASCADE => TRUE); END;
  --
  insert into tmp_imp_itemnf
    select *
      from imp_itemnf iifn
     where iifn.itemnf_id in (select id from tmp_item_nota_fiscal);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_IMP_ITEMNF', CASCADE => TRUE); END;
  --
  /*
  -- Não está sendo utilizada no processo
  --
  INSERT INTO TMP_NFREGIST_ANALIT
  SELECT *
  FROM   NFREGIST_ANALIT             NFRA
  WHERE  NFRA.NOTAFISCAL_ID       IN (SELECT ID FROM TMP_NOTA_FISCAL);
  */
  --
  -- CONHECIMENTO DE TRANSPORTE - A tabela TMP_CONHEC_TRANSP foi inserida no cursor de filiais.
  --
  insert into tmp_ct_reg_anal
    select *
      from ct_reg_anal ctra
     where ctra.conhectransp_id in (select id from tmp_conhec_transp);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_CT_REG_ANAL', CASCADE => TRUE); END;
  --
  insert into tmp_conhec_transp_vlprest
    select *
      from conhec_transp_vlprest ctvl
     where ctvl.conhectransp_id in (select id from tmp_conhec_transp);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_CONHEC_TRANSP_VLPREST', CASCADE => TRUE); END;
  --
  -- CUPOM FISCAL - ECF - A tabela TMP_REDUCAO_Z_ECF foi inserida no cursor de filiais.
  --
  /*     -- Não está sendo utilizada no processo
  --
  INSERT INTO TMP_TOT_PARC_RED_Z_ECF
  SELECT *
  FROM   TOT_PARC_RED_Z_ECF          TPRZ
  WHERE  TPRZ.REDUCAOZECF_ID      IN (SELECT ID FROM TMP_REDUCAO_Z_ECF);
  */
  --
  insert into tmp_doc_fiscal_emit_ecf
    select *
      from doc_fiscal_emit_ecf dfee
     where dfee.reducaozecf_id in (select id from tmp_reducao_z_ecf);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_DOC_FISCAL_EMIT_ECF', CASCADE => TRUE); END;
  --
  insert into tmp_it_doc_fiscal_emit_ecf
    select *
      from it_doc_fiscal_emit_ecf idfe
     where idfe.docfiscalemitecf_id in (select id from tmp_doc_fiscal_emit_ecf);
  -- 
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_IT_DOC_FISCAL_EMIT_ECF', CASCADE => TRUE); END;
  -- 
  -- ITEM DO CUPOM FISCAL
  --
  insert into tmp_item_cupom_fiscal
    select *
      from item_cupom_fiscal
     where cupomfiscal_id in (select id from tmp_cupom_fiscal);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_ITEM_CUPOM_FISCAL', CASCADE => TRUE); END;
  --
  -- IMPOSTO DO ITEM DO CUPOM FISCAL
  --
  insert into tmp_imp_itemcf
    select *
      from imp_itemcf
     where itemcupomfiscal_id in (select id from tmp_item_cupom_fiscal);
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_IMP_ITEMCF', CASCADE => TRUE); END;
  --
  -- EFD_PC_REG_C170
  --
  INSERT INTO TMP_GERA_ARQ_EFD_PC_REG_C170
    select it.notafiscal_id notafiscal_id,
           it.id itemnf_id,
           it.nro_item num_item,
           it.cod_item cod_item,
           it.item_id item_id,
           it.descr_item descr_compl,
           it.qtde_comerc qtd,
           it.unid_trib unid,
           nvl(it.vl_item_bruto, 0) vl_item,
           it.vl_desc vl_desc,
           it.dm_ind_mov ind_mov,
           decode(icms.cst_icms,
                  null,
                  null,
                  (nvl(it.orig, 0) || icms.cst_icms)) cst_icms,
           it.cfop,
           it.cfop_id,
           icms.vl_bc_icms,
           icms.aliq_icms,
           icms.vl_icms,
           icms_st.vl_bc_icms_st,
           icms_st.aliq_st,
           icms_st.vl_icms_st,
           nvl(it.dm_ind_apur_ipi, 0) ind_apur,
           ipi.cst_ipi,
           decode(it.cod_enq_ipi, '999', null, it.cod_enq_ipi) cod_enq,
           ipi.vl_bc_ipi,
           ipi.aliq_ipi,
           ipi.vl_ipi,
           pis.cst_pis,
           pis.vl_bc_pis,
           pis.aliq_pis,
           pis.quant_bc_pis,
           pis.vl_aliq_pis,
           pis.vl_pis,
           pis.codst_id_pis,
           cofins.cst_cofins,
           cofins.vl_bc_cofins,
           cofins.aliq_cofins,
           cofins.quant_bc_cofins,
           cofins.vl_aliq_cofins,
           cofins.vl_cofins,
           cofins.codst_id_cofins,
           it.cod_cta,
           it.natoper_id
      from tmp_item_nota_fiscal it,
           (select imp.itemnf_id,
                   cst.cod_st       cst_icms,
                   imp.vl_base_calc vl_bc_icms,
                   imp.aliq_apli    aliq_icms,
                   imp.vl_imp_trib  vl_icms
              from tmp_imp_itemnf imp, 
                   tipo_imposto ti, 
                   cod_st cst
             where ti.id  = imp.tipoimp_id
               and ti.cd  = 1
               and cst.id = imp.codst_id) icms,
           (select imp.itemnf_id,
                   imp.vl_base_calc vl_bc_icms_st,
                   imp.aliq_apli aliq_st,
                   nvl(imp.vl_imp_trib, 0) + nvl(imp.vl_fcp, 0) vl_icms_st
              from tmp_imp_itemnf imp, 
                   tipo_imposto ti
             where ti.id = imp.tipoimp_id
               and ti.cd = 2) icms_st,
           (select imp.itemnf_id,
                   lpad(cst.cod_st, 2, '0') cst_ipi,
                   imp.vl_base_calc vl_bc_ipi,
                   imp.aliq_apli aliq_ipi,
                   imp.vl_imp_trib vl_ipi
              from tmp_imp_itemnf imp, 
                   tipo_imposto ti, 
                   cod_st cst
             where imp.dm_tipo = 0 -- 0-Imposto, 1-Retenção
               and ti.id       = imp.tipoimp_id
               and ti.cd       = 3
               and cst.id      = imp.codst_id) ipi,
           (select imp.itemnf_id,
                   lpad(cst.cod_st, 2, '0') cst_pis,
                   imp.vl_base_calc vl_bc_pis,
                   imp.aliq_apli aliq_pis,
                   imp.qtde_base_calc_prod quant_bc_pis,
                   imp.vl_aliq_prod vl_aliq_pis,
                   imp.vl_imp_trib vl_pis,
                   cst.id codst_id_pis
              from tmp_imp_itemnf imp, 
                   tipo_imposto ti, 
                   cod_st cst
             where imp.dm_tipo = 0 -- 0-Imposto, 1-Retenção
               and ti.id       = imp.tipoimp_id
               and ti.cd       = 4
               and cst.id      = imp.codst_id) pis,
           (select imp.itemnf_id,
                   lpad(cst.cod_st, 2, '0') cst_cofins,
                   imp.vl_base_calc vl_bc_cofins,
                   imp.aliq_apli aliq_cofins,
                   imp.qtde_base_calc_prod quant_bc_cofins,
                   imp.vl_aliq_prod vl_aliq_cofins,
                   imp.vl_imp_trib vl_cofins,
                   cst.id codst_id_cofins
              from tmp_imp_itemnf imp, 
                   tipo_imposto ti, 
                   cod_st cst
             where imp.dm_tipo = 0 -- 0-Imposto, 1-Retenção
               and ti.id       = imp.tipoimp_id
               and ti.cd       = 5
               and cst.id      = imp.codst_id) cofins
     where it.notafiscal_id in (select id from tmp_nota_fiscal)
       and icms.itemnf_id(+)    = it.id
       and icms_st.itemnf_id(+) = it.id
       and ipi.itemnf_id(+)     = it.id
       and pis.itemnf_id(+)     = it.id
       and cofins.itemnf_id(+)  = it.id;
  --
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_GERA_ARQ_EFD_PC_REG_C170', CASCADE => TRUE); END;
  -- 
  -- EFD_PC_REG_C175
  --
  insert into tmp_gera_arq_efd_pc_reg_c175
    select it.notafiscal_id notafiscal_id,
           it.cfop,
           it.cfop_id,
           nvl(sum(nvl(it.vl_item_bruto, 0)), 0) vl_item,
           nvl(sum(nvl(it.vl_desc, 0)), 0) vl_desc,
           pis.cst_pis,
           pis.codst_id_pis,
           nvl(sum(nvl(pis.vl_bc_pis, 0)), 0) vl_bc_pis,
           pis.aliq_pis,
           nvl(sum(nvl(pis.quant_bc_pis, 0)), 0) quant_bc_pis,
           pis.vl_aliq_pis,
           nvl(sum(nvl(pis.vl_pis, 0)), 0) vl_pis,
           co.cst_cofins,
           co.codst_id_cofins,
           nvl(sum(nvl(co.vl_bc_cofins, 0)), 0) vl_bc_cofins,
           co.aliq_cofins,
           nvl(sum(nvl(co.quant_bc_cofins, 0)), 0) quant_bc_cofins,
           co.vl_aliq_cofins,
           nvl(sum(nvl(co.vl_cofins, 0)), 0) vl_cofins,
           it.cod_cta
      from tmp_item_nota_fiscal it,
           (select ii.itemnf_id,
                   lpad(cs.cod_st, 2, '0') cst_pis,
                   cs.id codst_id_pis,
                   ii.vl_base_calc vl_bc_pis,
                   ii.aliq_apli aliq_pis,
                   ii.qtde_base_calc_prod quant_bc_pis,
                   ii.vl_aliq_prod vl_aliq_pis,
                   ii.vl_imp_trib vl_pis
              from tmp_imp_itemnf ii, 
                   tipo_imposto ti, 
                   cod_st cs
             where ii.dm_tipo = 0 -- 0-Imposto, 1-Retenção
               and ti.id      = ii.tipoimp_id
               and ti.cd      = 4 -- PIS
               and cs.id      = ii.codst_id) pis,
           (select ie.itemnf_id,
                   lpad(ct.cod_st, 2, '0') cst_cofins,
                   ct.id codst_id_cofins,
                   ie.vl_base_calc vl_bc_cofins,
                   ie.aliq_apli aliq_cofins,
                   ie.qtde_base_calc_prod quant_bc_cofins,
                   ie.vl_aliq_prod vl_aliq_cofins,
                   ie.vl_imp_trib vl_cofins
              from tmp_imp_itemnf ie, 
                   tipo_imposto tm, 
                   cod_st ct
             where ie.dm_tipo = 0 -- 0-Imposto, 1-Retenção
               and tm.id      = ie.tipoimp_id
               and tm.cd      = 5 -- COFINS
               and ct.id      = ie.codst_id) co
     where it.notafiscal_id in (select id from tmp_nota_fiscal)
       and pis.itemnf_id(+) = it.id
       and co.itemnf_id(+) = it.id
     group by it.notafiscal_id,
              it.cfop,
              it.cfop_id,
              pis.cst_pis,
              pis.codst_id_pis,
              pis.aliq_pis,
              pis.vl_aliq_pis,
              co.cst_cofins,
              co.codst_id_cofins,
              co.aliq_cofins,
              co.vl_aliq_cofins,
              it.cod_cta;
  --
  --     
  BEGIN SYS.DBMS_STATS.GATHER_TABLE_STATS( 'CSF_OWN', 'TMP_GERA_ARQ_EFD_PC_REG_C175', CASCADE => TRUE); END;
  --
END;
---------------------------------------------------------------------
--| Procedimento para excluir os registros de inconsistências - logs
---------------------------------------------------------------------
PROCEDURE PKB_EXCLUIR_LOG( EN_REFERENCIA_ID  IN LOG_GENERICO.REFERENCIA_ID%TYPE
                         , EV_OBJ_REFERENCIA IN LOG_GENERICO.OBJ_REFERENCIA%TYPE ) IS
BEGIN
   --
   delete from log_generico lg
    where lg.referencia_id  = en_referencia_id
      and lg.obj_referencia = ev_obj_referencia;
   --
   commit;
   --
EXCEPTION
   when others then
      raise_application_error (-20101, 'Problemas ao excluir log/inconsistência (referencia_id = '||en_referencia_id||' objeto = '||ev_obj_referencia||').');
END PKB_EXCLUIR_LOG;

-----------------------------------------------------------------------------------------
--| Procedimento inicia montagem da estrutura do arquivo texto do SPED Fiscal Pis/Cofins
-----------------------------------------------------------------------------------------
PROCEDURE PKB_GERA_ARQUIVO_EFD_PC(EN_ABERTURAEFDPC_ID IN ABERTURA_EFD_PC.ID%TYPE) IS
  --
  vn_fase           number := 0;
  vn_loggenerico_id log_generico.id%type;
  --#73431
  vv_param_value  varchar2(1) := '0';
  vn_multorg_id   mult_org.id%type;
  vn_empresa_id   empresa.id%type;
  vv_erro         varchar2(4000);
  MODULO_SISTEMA  constant number := pk_csf.fkg_ret_id_modulo_sistema(upper('EFD_ICMS_IPI'));
  GRUPO_SISTEMA   constant number := pk_csf.fkg_ret_id_grupo_sistema(MODULO_SISTEMA, upper('SESSION_OPTIMIZER_SPED'));
  --
BEGIN
  --
  --#73431
  begin
    -- Recupera empresa_id e multorg_id
   select e.id empresa_id
         ,e.multorg_id
     into vn_empresa_id
         ,vn_multorg_id
     from abertura_efd_pc aefdpc
         ,empresa e
    where 1=1
      and aefdpc.empresa_id = e.id
      and aefdpc.id         = en_aberturaefdpc_id; 
   exception
     when others then
       vn_empresa_id := null;
       vn_multorg_id := null;
   end;
   --
   -- #73431
   -- Busca o Parametro para checar se
   if not PK_CSF.fkg_ret_vl_param_geral_sistema (en_multorg_id => vn_multorg_id,
                                                 en_empresa_id => vn_empresa_id,
                                                 en_modulo_id  => MODULO_SISTEMA,
                                                 en_grupo_id   => GRUPO_SISTEMA,
                                                 ev_param_name => upper('SESSION_OPTIMIZER'),
                                                 sv_vlr_param  => vv_param_value,
                                                 sv_erro       => vv_erro) then
      --
      vv_param_value := '0';
      --
   end if;
   --
   -- #73431
   --
   if vv_param_value = '1' then
     --
     begin
        execute immediate 'ALTER SESSION SET OPTIMIZER_FEATURES_ENABLE=''11.2.0.3'' ';
     end;
     --
     begin
        execute immediate 'ALTER SESSION SET OPTIMIZER_INDEX_COST_ADJ=80';
     end;
     --
     begin
        execute immediate 'ALTER SESSION SET OPTIMIZER_INDEX_CACHING=20';
     end;
     -- adicionando nova condição de sessão
     begin
        execute immediate 'ALTER SESSION SET DB_FILE_MULTIBLOCK_READ_COUNT=8';
     END;
     --
   end if;
  --
  w_dat_sis_atu := sysdate;
  --
  prc_gera_log_on_debug('Execução - Início processo...');
  --
  vn_fase := 0;
  --
  pkb_excluir_log(en_referencia_id  => en_aberturaefdpc_id,
                  ev_obj_referencia => 'ABERTURA_EFD_PC');
  --
  prc_gera_log_on_debug('Execução - pkb_excluir_log');
  --
  vn_fase := 1;
  --
  pkb_tabs_temps_deletar; 
  prc_gera_log_on_debug('Execução - pkb_tabs_temps_deletar');
  --
  vn_fase := 2;
  --
  pkb_inicia_dados;
  --
  prc_gera_log_on_debug('Execução - pkb_inicia_dados');
  --
  vn_fase := 3;
  --
  pkb_inicia_param(en_aberturaefdpc_id => en_aberturaefdpc_id);
  prc_gera_log_on_debug('Execução - pkb_inicia_param');
  --
  vn_fase := 4;
  --
  pkb_tabs_temps_popular;
  prc_gera_log_on_debug('Execução - pkb_tabs_temps_popular');
  --
  vn_fase := 5;
  --
  if nvl(gt_row_abertura_efd_pc.id, 0) > 0 then
    --
    vn_fase := 6;
    --
    gn_referencia_id  := gt_row_abertura_efd_pc.id;
    gv_obj_referencia := 'ABERTURA_EFD_PC';
    gv_mensagem_log   := 'Abertura de geração de arquivo texto.';
    gv_resumo_log     := null;
    --
    if nvl(gt_row_abertura_efd_pc.dm_situacao, 0) <> 2 then
      --
      vn_fase := 7;
      --
      gv_resumo_log := 'Abertura da Geração (' || gt_row_abertura_efd_pc.id || ') não está com situação correta (2-validado), verifique.';
      --
      declare
        vn_loggenerico_id log_generico.id%type;
      begin
        pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                         ev_mensagem       => gv_mensagem_log,
                                         ev_resumo         => gv_resumo_log,
                                         en_tipo_log       => erro_de_sistema,
                                         en_referencia_id  => gt_row_abertura_efd_pc.id,
                                         ev_obj_referencia => gv_obj_referencia,
                                         en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
      exception
        when others then
          null;
      end;
      --
    end if;
    --
    vn_fase := 8;
    --
    if gv_resumo_log is null then
      --
      if nvl(gn_dm_val_pconta_pis, 0) = 1 or nvl(gn_dm_val_pconta_cofins, 0) = 1 then
        --
        vn_fase := 9;
        --
        -- Procedimento que valida os documentos fiscais com informações do Plano de Contas e do Centro de Custo
        pkb_valida_plcta_ccusto;
        prc_gera_log_on_debug('Execução - pkb_valida_plcta_ccusto');
        --
      end if;
      --
    end if;
    --
    vn_fase := 10;
    --
    if gv_resumo_log is null then
      --
      vn_fase := 11;
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => 'Início do processo de geração do arquivo',
                                       en_tipo_log       => 35, -- Informação
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
      --
      -- Indica para o registro que o arquivo está "Em Geração", assim NÃO sofre alteração ou interrupção
      update abertura_efd_pc ae
         set ae.dm_situacao = 7 -- Em Geração
       where ae.id          = gt_row_abertura_efd_pc.id;
      --
      vn_fase := 12;
      --
      commit;
      --
      vn_fase := 13;
      --
      -- Excluir os registros anteriores
      pkb_excluir_arq_efd_pc;
      prc_gera_log_on_debug('Execução - pkb_excluir_arq_efd_pc');
      --
      vn_fase := 14;
      --
      -- Procedimento alimenta os arrays do Sped Fiscal
      pkb_monta_array_efd;
      prc_gera_log_on_debug('Execução - pkb_monta_array_efd');
      --
      vn_fase := 15;
      --
      if gv_resumo_log is null then
        --
        vn_fase := 16;
        --
        begin
          update abertura_efd_pc ae
             set ae.dm_situacao = 3 -- Gerado arquivo
           where ae.id          = gt_row_abertura_efd_pc.id;
        exception
          when others then
            --
            gv_resumo_log := 'Problemas ao alterar a situação da abertura para 3(gerado arquivo). Erro = ' || sqlerrm;
            --
            declare
              vn_loggenerico_id log_generico.id%type;
            begin
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem_log,
                                               ev_resumo         => gv_resumo_log,
                                               en_tipo_log       => erro_de_sistema,
                                               en_referencia_id  => gt_row_abertura_efd_pc.id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
            exception
              when others then
                null;
            end;
        end;
        --
      else
        --
        vn_fase := 17;
        --
        begin
          update abertura_efd_pc ae
             set ae.dm_situacao = 4 -- Erro de geração do arquivo
           where ae.id          = gt_row_abertura_efd_pc.id;
        exception
          when others then
            --
            gv_resumo_log := 'Problemas ao alterar a situação da abertura para 4(erro de gerado do arquivo). Erro = ' || sqlerrm;
            --
            declare
              vn_loggenerico_id log_generico.id%type;
            begin
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem_log,
                                               ev_resumo         => gv_resumo_log,
                                               en_tipo_log       => erro_de_sistema,
                                               en_referencia_id  => gt_row_abertura_efd_pc.id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
            exception
              when others then
                null;
            end;
        end;
        --
      end if;
      --
      vn_fase := 18;
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => 'Término do processo de geração do arquivo',
                                       en_tipo_log       => 35, -- Informação
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
      --
    else
      --
      vn_fase := 19;
      --
      begin
        update abertura_efd_pc ae
           set ae.dm_situacao = 4 -- Erro de geração do arquivo
         where ae.id          = gt_row_abertura_efd_pc.id;
      exception
        when others then
          --
          gv_resumo_log := 'Problemas ao alterar a situação da abertura para 4(erro de geração do arquivo - validação de plano de conta e centro de ' || 'custo). Erro = ' || sqlerrm;
          --
          declare
            vn_loggenerico_id log_generico.id%type;
          begin
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem_log,
                                             ev_resumo         => gv_resumo_log,
                                             en_tipo_log       => erro_de_sistema,
                                             en_referencia_id  => gt_row_abertura_efd_pc.id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
          exception
            when others then
              null;
          end;
      end;
      --
    end if;
    --
  end if;
  --
  vn_fase := 20;
  --
  prc_gera_log_on_debug('Execução - Final Processo!!!');
  commit;
  --
EXCEPTION
  when others then
    --
    pkb_limpa_vetor;
    pkb_inicia_dados;
    --
    begin
      update abertura_efd_pc ae
         set ae.dm_situacao = 4 -- Erro de geração do arquivo
       where ae.id          = gt_row_abertura_efd_pc.id;
    end;
    --
    gv_resumo_log := 'Erro na pkb_gera_arquivo_efd_pc fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem_log,
                                       ev_resumo         => gv_resumo_log,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gt_row_abertura_efd_pc.id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_efd_pc.empresa_id);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo_log);
    --
END PKB_GERA_ARQUIVO_EFD_PC;

-------------------------------------------------------------------------------------------------------
PROCEDURE PRC_GERA_LOG_ON_DEBUG
        ( p_mensagem            in varchar2 ) is
--
w_message          varchar2(4000);
vn_loggenerico_id  log_generico.id%type;
--
begin
  --
  if w_ins_mensagens is not null then
    --
    w_qt_segs := to_char(sysdate,'sssss') - to_char(w_dat_sis_atu,'sssss');
    --
    w_message := rpad(p_mensagem,40,' ')|| ' - Tempo = '||lpad(to_char(w_qt_segs),5,'0')||'"';
    --
    pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                     , ev_mensagem       => w_message
                                     , ev_resumo         => 'TANNING EFD_PC'
                                     , en_tipo_log       => erro_de_sistema
                                     , en_referencia_id  => gt_row_abertura_efd_pc.id
                                     , ev_obj_referencia => 'ABERTURA_EFD_PC'
                                     , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
    --
    w_dat_sis_atu := sysdate;
    --
  end if;
  --
end PRC_GERA_LOG_ON_DEBUG;
--
-------------------------------------------------------------------------------------------------------
-- Procedure para Geração da Guia de Pagamento de Imposto
procedure pkg_gera_guia_pgto (en_aberturaefdpc_id  in abertura_efd_pc.id%type,
                              en_usuario_id        in neo_usuario.id%type)
is
   --       
   vn_fase              number := 0;       
   vt_csf_log_generico  dbms_sql.number_table;
   vn_guiapgtoimp_id    guia_pgto_imp.id%type;
   vv_dt_vencimento     varchar2(10);
   --
begin
   --
   vn_fase := 1;
   --
   -- Checa se a GT está populada -- 
   if gt_row_abertura_efd_pc.id is null then
      --
      vn_fase := 1.1;
      --
      pkb_inicia_param(en_aberturaefdpc_id);
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Geração das Guias do Imposto PIS ---
   for x in (
      select ccpo.id conscontrpisor_id
           , pcc.empresa_id
           , ccpo.tiporetimpreceita_id
           , ccpo.tiporetimp_id
           , e.pessoa_id
           , ccpo.dt_vencto
           , last_day(aep.dt_fin)      dt_ref
           , ccpo.vl_rec
           , pdgi.dm_tipo
           , pdgi.dm_origem
           , pdgi.pessoa_id_sefaz
           , pdgi.tipoimp_id
           , pdgi.obs
           , pdgi.planoconta_id
           , add_months(aep.dt_fin,1) dt_vcto
           , pdgi.dia_vcto
           --
         from CONS_CONTR_PIS_OR    ccpo,
              CONS_CONTR_PIS        ccp,
              PER_CONS_CONTR_PIS    pcc,
              ABERTURA_EFD_PC       aep,
              PARAM_GUIA_PGTO       pgp,
              PARAM_DET_GUIA_IMP   pdgi,
              EMPRESA                 e              
      where ccp.id                = ccpo.conscontrpis_id
        and pcc.id                = ccp.perconscontrpis_id
        and pcc.empresa_id        = aep.empresa_id
        and pcc.dt_ini           >= aep.dt_ini
        and pcc.dt_fin           <= aep.dt_fin
        and pgp.empresa_id        = aep.empresa_id
        and pdgi.paramguiapgto_id = pgp.id
        and pdgi.tipoimp_id       = pk_csf.fkg_Tipo_Imposto_id(4) -- PIS
        and e.id                  = pdgi.empresa_id_guia
        and aep.id                = en_aberturaefdpc_id
         )
   loop
      --
      vn_fase := 2.1;
      --
      vv_dt_vencimento := lpad(x.dia_vcto, 2, '0') || '/' || lpad(extract(month from x.dt_vcto),2, '0') || '/' || extract(year from x.dt_vcto);
      if not pk_csf.fkg_data_valida(vv_dt_vencimento, 'dd/mm/yyyy') then
         raise_application_error (-20101, 'O Parâmetro "PARAM_DET_GUIA_IMP.DIA_VCTO" informa um dia inválido para o mês de apuração - Revise o Parâmetro');
      end if;
      --
      vn_fase := 2.2;
      --
      -- Popula a Variável de Tabela -- 
      pk_csf_api_gpi.gt_row_guia_pgto_imp.id                       := null;                          
      pk_csf_api_gpi.gt_row_guia_pgto_imp.empresa_id               := x.empresa_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.usuario_id               := en_usuario_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_situacao              := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.tipoimposto_id           := x.tipoimp_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.tiporetimp_id            := x.tiporetimp_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.tiporetimpreceita_id     := x.tiporetimpreceita_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.pessoa_id                := x.pessoa_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_tipo                  := x.dm_tipo;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_origem                := x.dm_origem;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.nro_via_impressa         := 1;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dt_ref                   := x.dt_ref;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dt_vcto                  := to_date(vv_dt_vencimento, 'dd/mm/yyyy');
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_princ                 := x.vl_rec;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_multa                 := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_juro                  := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_outro                 := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_total                 := x.vl_rec;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.obs                      := x.obs;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.pessoa_id_sefaz          := x.pessoa_id_sefaz;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.nro_tit_financ           := null;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dt_alteracao             := sysdate;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_ret_erp               := case pk_csf.fkg_parametro_geral_sistema(pk_csf.fkg_multorg_id_empresa(x.empresa_id), x.empresa_id, 'GUIA_PGTO', 'RET_ERP', 'LIBERA_AUTOM_GUIA_ERP') when 1 then 0 when 0 then 6 end;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.id_erp                   := null;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.aberturaefdpc_id         := en_aberturaefdpc_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.planoconta_id            := x.planoconta_id;
      --
      vn_fase := 2.3;
      --
      -- Chama a procedure de integração e finalização da guia
      pk_csf_api_pgto_imp_ret.pkb_finaliza_pgto_imp_ret(est_log_generico  => vt_csf_log_generico,
                                                        en_empresa_id     => gt_row_abertura_efd_pc.empresa_id,
                                                        en_dt_ini         => gt_row_abertura_efd_pc.dt_ini,
                                                        en_dt_fim         => gt_row_abertura_efd_pc.dt_fin,
                                                        sn_guiapgtoimp_id => vn_guiapgtoimp_id);
      --
      vn_fase := 2.4;
      --
      -- Trata se houve Erro na geração da Guia --
      if nvl(vt_csf_log_generico.count,0) > 0 then
         --
         vn_fase := 2.5;
         --
         update ABERTURA_EFD_PC
            set dm_situacao_guia = 2 -- Erro
          where id = en_aberturaefdpc_id;
         --
         update GUIA_PGTO_IMP t set
           t.dm_situacao = 2 -- Erro de Validação
         where t.aberturaefdpc_id = en_aberturaefdpc_id;
         ---
      else
         --
         vn_fase := 2.6;
         --
         update ABERTURA_EFD_PC
            set dm_situacao_guia = 1 -- Guia Gerada
          where id = en_aberturaefdpc_id;
         --
         update GUIA_PGTO_IMP t set
           t.dm_situacao = 1 -- Validado
         where t.aberturaefdpc_id = en_aberturaefdpc_id;
         --         
         vn_fase := 2.7;
         --
         update CONS_CONTR_PIS_OR t
            set t.guiapgtoimp_id = vn_guiapgtoimp_id
         where t.id = x.conscontrpisor_id;
         --
      end if;                                                           
      --
   end loop;      
   --
   vn_fase := 3;
   --
   -- Geração das Guias do Imposto COFINS ---
   vn_guiapgtoimp_id := null;
   pk_csf_api_gpi.gt_row_guia_pgto_imp := null;
   --
   for x in (
      select ccpo.id conscontrcofinsor_id
           , pcc.empresa_id
           , ccpo.tiporetimpreceita_id
           , ccpo.tiporetimp_id
           , e.pessoa_id
           , ccpo.dt_vencto
           , last_day(aep.dt_fin) dt_ref
           , ccpo.vl_rec
           , pdgi.dm_tipo
           , pdgi.dm_origem
           , pdgi.pessoa_id_sefaz
           , pdgi.tipoimp_id
           , pdgi.obs
           , pdgi.planoconta_id
           , add_months(aep.dt_fin,1) dt_vcto
           , pdgi.dia_vcto
         from CONS_CONTR_COFINS_OR ccpo,
              CONS_CONTR_COFINS     ccp,
              PER_CONS_CONTR_COFINS pcc,
              ABERTURA_EFD_PC       aep,
              PARAM_GUIA_PGTO       pgp,
              PARAM_DET_GUIA_IMP   pdgi,
              EMPRESA                 e              
      where ccp.id                = ccpo.conscontrcofins_id
        and pcc.id                = ccp.perconscontrcofins_id
        and pcc.empresa_id        = aep.empresa_id
        and pcc.dt_ini           >= aep.dt_ini
        and pcc.dt_fin           <= aep.dt_fin
        and pgp.empresa_id        = aep.empresa_id
        and pdgi.paramguiapgto_id = pgp.id
        and pdgi.tipoimp_id       = pk_csf.fkg_Tipo_Imposto_id(5) -- COFINS
        and e.id                  = pdgi.empresa_id_guia
        and aep.id                = en_aberturaefdpc_id
         )
   loop
   --
      vn_fase := 3.1;
      --
      vv_dt_vencimento := lpad(x.dia_vcto, 2, '0') || '/' || lpad(extract(month from x.dt_vcto),2, '0') || '/' || extract(year from x.dt_vcto);
      if not pk_csf.fkg_data_valida(vv_dt_vencimento, 'dd/mm/yyyy') then
         raise_application_error (-20101, 'O Parâmetro "PARAM_DET_GUIA_IMP.DIA_VCTO" informa um dia inválido para o mês de apuração - Revise o Parâmetro');
      end if;
      --
      vn_fase := 3.2;
      --
      -- Popula a Variável de Tabela -- 
      pk_csf_api_gpi.gt_row_guia_pgto_imp.id                       := null;                          
      pk_csf_api_gpi.gt_row_guia_pgto_imp.empresa_id               := x.empresa_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.usuario_id               := en_usuario_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_situacao              := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.tipoimposto_id           := x.tipoimp_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.tiporetimp_id            := x.tiporetimp_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.tiporetimpreceita_id     := x.tiporetimpreceita_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.pessoa_id                := x.pessoa_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_tipo                  := x.dm_tipo;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_origem                := x.dm_origem;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.nro_via_impressa         := 1;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dt_ref                   := x.dt_ref;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dt_vcto                  := to_date(vv_dt_vencimento, 'dd/mm/yyyy');
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_princ                 := x.vl_rec;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_multa                 := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_juro                  := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_outro                 := 0;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.vl_total                 := x.vl_rec;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.obs                      := x.obs;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.pessoa_id_sefaz          := x.pessoa_id_sefaz;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.nro_tit_financ           := null;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dt_alteracao             := sysdate;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.dm_ret_erp               := case pk_csf.fkg_parametro_geral_sistema(pk_csf.fkg_multorg_id_empresa(x.empresa_id), x.empresa_id, 'GUIA_PGTO', 'RET_ERP', 'LIBERA_AUTOM_GUIA_ERP') when 1 then 0 when 0 then 6 end;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.id_erp                   := null;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.aberturaefdpc_id         := en_aberturaefdpc_id;
      pk_csf_api_gpi.gt_row_guia_pgto_imp.planoconta_id            := x.planoconta_id;
      --
      vn_fase := 3.3;
      --
      -- Chama a procedure de integração e finalização da guia
      pk_csf_api_pgto_imp_ret.pkb_finaliza_pgto_imp_ret(est_log_generico  => vt_csf_log_generico,
                                                        en_empresa_id     => gt_row_abertura_efd_pc.empresa_id,
                                                        en_dt_ini         => gt_row_abertura_efd_pc.dt_ini,
                                                        en_dt_fim         => gt_row_abertura_efd_pc.dt_fin,
                                                        sn_guiapgtoimp_id => vn_guiapgtoimp_id);
      --
      vn_fase := 3.4;
      --
      -- Trata se houve Erro na geração da Guia --
      if nvl(vt_csf_log_generico.count,0) > 0 then
         --
         vn_fase := 3.5;
         --
         update ABERTURA_EFD_PC
            set dm_situacao_guia = 2 -- Erro
         where id = en_aberturaefdpc_id;
         --
      else
         --
         vn_fase := 3.6;
         --
         update ABERTURA_EFD_PC
         set dm_situacao_guia = 1 -- Guia Gerada
       where id = en_aberturaefdpc_id;
      --
         vn_fase := 3.7;
         --
         update CONS_CONTR_COFINS_OR t
            set t.guiapgtoimp_id = vn_guiapgtoimp_id
         where t.id = x.conscontrcofinsor_id;
         --
   end if;                                                           
   --
   end loop;   
   --
   commit;
   --
exception
   when others then
      --
      gv_resumo_log := 'Erro na pk_gera_arq_efd_pc.pkg_gera_guia_pgto fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --     
end pkg_gera_guia_pgto; 
--
-------------------------------------------------------------------------------------------------------
-- Procedure para Estorno da Guia de Pagamento de Imposto
procedure pkg_estorna_guia_pgto (en_aberturaefdpc_id  in abertura_efd_pc.id%type)
is
   --
   vn_fase              number := 0;       
   vt_csf_log_generico  dbms_sql.number_table;
   --
begin
   --
   if gt_row_abertura_efd_pc.id is null then
      --
      pkb_inicia_param(en_aberturaefdpc_id);
      --
   end if;
   --
   pk_csf_api_pgto_imp_ret.pkb_estorna_pgto_imp_ret(est_log_generico => vt_csf_log_generico,
                                                    en_empresa_id    => gt_row_abertura_efd_pc.empresa_id,
                                                    en_dt_ini        => gt_row_abertura_efd_pc.dt_ini,
                                                    en_dt_fim        => gt_row_abertura_efd_pc.dt_fin,
                                                    en_pgtoimpret_id => null);
   --  
   if nvl(vt_csf_log_generico.count,0) > 0 then
      --
      vn_fase := 3.1;
      --
      update ABERTURA_EFD_PC
         set dm_situacao_guia = 2 -- Erro
       where id = en_aberturaefdpc_id;
      --
      update guia_pgto_imp t set
        t.dm_situacao = 2 -- Erro de Validação
      where t.aberturaefdpc_id = en_aberturaefdpc_id;  
      --
   else
      --
      vn_fase := 3.2;
      --
      update ABERTURA_EFD_PC
         set dm_situacao_guia = 0 -- Guia Não Gerada
       where id = en_aberturaefdpc_id;
      --
      update guia_pgto_imp t set
        t.dm_situacao = 3 -- Cancelado
      where t.aberturaefdpc_id = en_aberturaefdpc_id;  
      --      
   end if;                                                           
   --  
   commit;
   --
exception
   when others then
      --
      gv_resumo_log := 'Erro na pk_gera_arq_efd_pc.pkg_estorna_guia_pgto fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico.id%type;
      begin
         pk_log_generico.pkb_log_generico ( sn_loggenerico_id => vn_loggenerico_id
                                          , ev_mensagem       => gv_mensagem_log
                                          , ev_resumo         => gv_resumo_log
                                          , en_tipo_log       => erro_de_sistema
                                          , en_referencia_id  => gt_row_abertura_efd_pc.id
                                          , ev_obj_referencia => gv_obj_referencia
                                          , en_empresa_id     => gt_row_abertura_efd_pc.empresa_id );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_resumo_log);
      --                                                          
end pkg_estorna_guia_pgto; 
--
-------------------------------------------------------------------------------------------------------
END PK_GERA_ARQ_EFD_PC;
/
