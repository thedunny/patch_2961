CREATE OR REPLACE PACKAGE BODY csf_own.pk_csf_api_ct IS
-------------------------------------------------------------------------------------------------------
-- Corpo do pacote da API do Conhecimento de Transporte
-------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------
-- Função interna para gerar o número randomico para o cnf_nfe
-------------------------------------------------------------------------------------------------------
function FKG_GERA_CCT_CTE_RAND return number is
   vn_retorno number := 0;
   vn_fase    number := 0;
BEGIN
   --
   vn_fase := 1;
   --
   select lpad(floor(dbms_random.value(1,99999999)),8,0) 
      into vn_retorno
   from dual;
   --
   return(vn_retorno);
   --
EXCEPTION
   when others then
      --
      gv_mensagem_log := 'Erro na fkg_gera_cct_cte_rand fase('||vn_fase||'):'||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_nf.id%type;
      begin
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
END FKG_GERA_CCT_CTE_RAND;
-------------------------------------------------------------------------------------------------------------------------------------
-- Função para retornar o tipo de emitente dó conhecimento de transporte - conhec_transp.dm_ind_emit = 0-emissão própria, 1-terceiros
-------------------------------------------------------------------------------------------------------------------------------------
function fkg_dmindemit_conhectransp ( en_conhectransp_id in conhec_transp.id%type )
         return conhec_transp.dm_ind_emit%type
is
   --
   vn_dm_ind_emit  conhec_transp.dm_ind_emit%type;
   --
begin
   --
   select ct.dm_ind_emit
     into vn_dm_ind_emit
     from conhec_transp ct
    where ct.id = en_conhectransp_id;
   --
   return vn_dm_ind_emit;
   --
exception
   when no_data_found then
      return 0;
   when others then
      raise_application_error(-20101, 'Problemas em fkg_dmindemit_conhectransp. Erro = '||sqlerrm);
end fkg_dmindemit_conhectransp;

----------------------------------------------------------------------------
-- Função para verificar se existe registro de erro grvados no Log Generico
----------------------------------------------------------------------------
function fkg_ver_erro_log_generico_ct ( en_conhec_transp_id in conhec_transp.id%type )
         return number
is
   --
   vn_qtde      number := 0;
   --
begin
   --
   select count(1)
     into vn_qtde 
     from log_generico_ct lc,
          csf_tipo_log tc
    where lc.referencia_id = en_conhec_transp_id
      and tc.id = lc.csftipolog_id -- #73332
      and tc.dm_grau_sev   = 1;  -- erro 
   --
   if nvl(vn_qtde,0) > 0 then
      return 1;  -- erro
   else
      return 0;  -- só aviso/informação
   end if;   
   --
exception
   when no_data_found then
      return 0;
   when others then
      raise_application_error(-20101, 'Problemas em fkg_ver_erro_log_generico_ct. Erro = '||sqlerrm);
end fkg_ver_erro_log_generico_ct;

-------------------------------------------------------------------------------------------------------
-- Procedimento de criação do e-mail para o Conhecimento de Transporte
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_email ( en_conhectransp_id in conhec_transp.id%type
                              , en_dm_origem       in conhec_transp_email.dm_origem%type
                              , ev_email           in conhec_transp_email.email%type
                              , en_dm_tipo_anexo   in conhec_transp_email.dm_tipo_anexo%type )
is
   --
   vn_fase               number := 0;
   vn_dm_tipo_anexo      conhec_transp_email.dm_tipo_anexo%type;
   vn_dm_env_danfe_email empresa.dm_env_danfe_email%type;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0)   > 0
      and nvl(en_dm_origem,-1)    in (0, 1, 2, 3, 4, 9)
      and nvl(en_dm_tipo_anexo,0) in (1, 2, 3)
      and trim(ev_email)          is not null
      then
      --
      vn_fase := 2;
      --
      begin
         --
         select e.dm_env_danfe_email
           into vn_dm_env_danfe_email
           from conhec_transp ct
              , empresa e
          where ct.id = en_conhectransp_id
            and e.id = ct.empresa_id;
         --
      exception
         when others then
            vn_dm_env_danfe_email := 0;
      end;
      --
      vn_fase := 3;
      --
      if vn_dm_env_danfe_email = 0 then -- Não
         vn_dm_tipo_anexo := 2; -- XML
      else
         vn_dm_tipo_anexo := 3; -- DACTE/XML
      end if;
      --
      vn_fase := 4;
      --
      insert into conhec_transp_email ( id
                                      , conhectransp_id
                                      , dm_origem
                                      , email
                                      , dm_tipo_anexo
                                      , dm_st_email
                                      )
                               values ( conhectranspemail_seq.nextval -- id
                                      , en_conhectransp_id
                                      , en_dm_origem
                                      , ev_email
                                      , vn_dm_tipo_anexo -- en_dm_tipo_anexo
                                      , 0
                                      );
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_email fase(' || vn_fase || '):' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_email;
--
-------------------------------------------------------------------------------------------------------
-- Procedimento seta o tipo de integração que será feito
-- 0 - Somente valida os dados e registra o Log de ocorrência
-- 1 - Valida os dados e registra o Log de ocorrência e insere a informação
-- Todos os procedimentos de integração fazem referência à ele
-------------------------------------------------------------------------------------------------------
procedure pkb_seta_tipo_integr ( en_tipo_integr in number )
is
begin
   --
   gn_tipo_integr := en_tipo_integr;
   --
end pkb_seta_tipo_integr;

-------------------------------------------------------------------------------------------------------
-- Procedimento seta o objeto de referência utilizado na Validação da Informação
-------------------------------------------------------------------------------------------------------
procedure pkb_seta_obj_ref ( ev_objeto in varchar2 )
is
begin
   --
   gv_obj_referencia := upper(ev_objeto);
   --
end pkb_seta_obj_ref;

-------------------------------------------------------------------------------------------------------
-- Procedimento seta o "ID de Referência" utilizado na Validação da Informação
-------------------------------------------------------------------------------------------------------
procedure pkb_seta_referencia_id ( en_id in number )
is
begin
   --
   gn_referencia_id := en_id;
   --
end pkb_seta_referencia_id;

-------------------------------------------------------------------------------------------------------
-- Procedimento armazena o valor do "loggenerico_id" da nota fiscal
-------------------------------------------------------------------------------------------------------
procedure pkb_gt_log_generico_ct ( en_loggenerico    in             Log_generico_ct.id%TYPE
                                 , est_log_generico  in out nocopy  dbms_sql.number_table )
is
   --
   i pls_integer;
   --
begin
   --
   if nvl(en_loggenerico,0) > 0 then
      --
      i := nvl(est_log_generico.count,0) + 1;
      --
      est_log_generico(i) := en_loggenerico;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_gt_log_generico_ct:' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_gt_log_generico_ct;

-------------------------------------------------------------------------------------------------------
-- Procedimento finaliza o Log Genérico
-------------------------------------------------------------------------------------------------------
procedure pkb_finaliza_log_generico_ct
is
begin
   --
   gn_processo_id := null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_finaliza_log_generico_ct fase: '||sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_finaliza_log_generico_ct;

-------------------------------------------------------------------------------------------------------
-- Procedimento de registro de log de erros na validação da nota fiscal
-------------------------------------------------------------------------------------------------------
procedure pkb_log_generico_ct ( sn_loggenerico_id     out nocopy Log_Generico_ct.id%TYPE
                              , ev_mensagem        in            Log_Generico_ct.mensagem%TYPE
                              , ev_resumo          in            Log_Generico_ct.resumo%TYPE
                              , en_tipo_log        in            csf_tipo_log.cd_compat%type      default 1
                              , en_referencia_id   in            Log_Generico_ct.referencia_id%TYPE  default null
                              , ev_obj_referencia  in            Log_Generico_ct.obj_referencia%TYPE default null
                              , en_empresa_id      in            Empresa.Id%type                  default null
                              , en_dm_impressa     in            Log_Generico_ct.dm_impressa%type    default 0 )

is
   --
   vn_fase          number := 0;
   vn_csftipolog_id csf_tipo_log.id%type := null;
   pragma           autonomous_transaction;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(gn_processo_id,0) = 0 then
      select processo_seq.nextval
        into gn_processo_id
        from dual;
   end if;
   --
   if nvl(en_tipo_log,0) > 0 and ev_mensagem is not null then
      --
      vn_fase := 2;
      --
      vn_csftipolog_id := pk_csf.fkg_csf_tipo_log_id ( en_tipo_log => en_tipo_log );
      --
      vn_fase := 3;
      --
      select loggenerico_seq.nextval
        into sn_loggenerico_id
        from dual;
      --
      vn_fase := 4;
      --
      insert into Log_Generico_ct ( id
                                  , processo_id
                                  , dt_hr_log
                                  , mensagem
                                  , referencia_id
                                  , obj_referencia
                                  , resumo
                                  , dm_impressa
                                  , dm_env_email
                                  , csftipolog_id
                                  , empresa_id
                                  )
                           values 
                                  ( sn_loggenerico_id     -- Valor de cada log de validação
                                  , gn_processo_id        -- Valor ID do processo de integração
                                  , sysdate               -- Sempre atribui a data atual do sistema
                                  , ev_mensagem           -- Mensagem do log
                                  , en_referencia_id      -- Id de referência que gerou o log
                                  , ev_obj_referencia     -- Objeto do Banco que gerou o log
                                  , ev_resumo
                                  , en_dm_impressa
                                  , 0
                                  , vn_csftipolog_id
                                  , nvl(en_empresa_id, gn_empresa_id)
                                  );
      --
      vn_fase := 5;
      --
      commit;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_log_generico_ct fase(' || vn_fase || '):' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_log_generico_ct;
--
-------------------------------------------------------------------------------------------------------
-- Procedimento exclui dados de um Conhecimento de Transporte Eletrônico
-------------------------------------------------------------------------------------------------------
procedure pkb_excluir_dados_ct ( en_conhectransp_id   in Conhec_Transp.id%TYPE
                               , en_excl_rloteintwsct in number default 0 )
is
   --
   vn_fase number := 0;
   --
begin
   --
   vn_fase := 1;
   --
   gn_ind_exclu := 0; -- Indica que o CT foi excluído (0-Não / 1-Sim)
   --
   -- Função retorna "true" se for um CTe de emissão própria (Não Legado) já autorizada, cancelada, denegada ou inutulizada, não pode ser re-integrada
   -- Para emissão própria LEGADO, sempre será integrada, por isso, não foi inserido o tratamento para dm_legado = 1
   if pk_csf_ct.fkg_cte_nao_integrar (en_conhectransp_id => en_conhectransp_id) = false then
       --
       -- Se informou o Conhec. de Transporte então exclui os dados dos filhos da Tabela CONHEC_TRANSP
       if nvl(en_conhectransp_id,0) > 0 then
          --
          vn_fase := 1.1;
          --
		  
          -- Verifica se a chamada da rotina de exclusão tb exclui o vínculo com o lote de integração
          if nvl(en_excl_rloteintwsct,0) = 1 then -- 0-Não / 1-Sim
             --
             delete from r_loteintws_ct where conhectransp_id = en_conhectransp_id;
             --
          end if;
          --
          vn_fase := 1.2;
          -- Informações do historico de alteracao do dm_st_proc da tabela conhec_transp
          delete from hist_st_conhec_transp a
           where a.conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 2;
          -- Informações de e-mail
          delete from conhec_transp_email
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 3;
          -- Informações Sobre Anulação de Valores no CT-e
          delete from conhec_transp_anul
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 4;
          -- Informações de Complemento de Impostos
          delete from ctcompltado_imp
           where conhectranspcompltado_id in (select id
                                                from conhec_transp_compltado
                                               where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 5;
          -- Informações do Valor de Prestação de Complemento
          delete from ctcompltado_comp
           where conhectranspcompltado_id in (select id
                                                from conhec_transp_compltado
                                               where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 6;
          -- Informações Sobre Detalhamento do CT-e Complementado
          delete from conhec_transp_compltado
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 7;
          -- Informações sobre Ct-e de Substituição
          delete from conhec_transp_subst
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 8;
          -- Informações sobre Veículos Transportados
          delete from conhec_transp_veic
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 9;
          -- Informações sobre Transporte de Produtos Perigosos
          delete from conhec_transp_peri
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 10;
          -- Informações de Modal Dutoviários
          delete from conhec_transp_duto
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 11;
          -- Informações dos Containeres Contidos no Vagão com DCL
          delete from ctferrovdcldetvag_cont
           where ctferrovdcldetvag_id in (select g.id
                                            from ctferrovdcl_detvag g
                                               , ctferrov_dcl l
                                               , conhec_transp_ferrov f
                                           where g.ctferrovdcl_id = l.id        and
                                                 l.conhectranspferrov_id = f.id and
                                                 f.conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 12;
          -- Informações dos Lacres dos vagões do DCL
          delete from ctferrovdcldetvag_lacre
           where ctferrovdcldetvag_id in (select g.id
                                            from ctferrovdcl_detvag g
                                               , ctferrov_dcl l
                                               , conhec_transp_ferrov f
                                           where g.ctferrovdcl_id = l.id        and
                                                 l.conhectranspferrov_id = f.id and
                                                 f.conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 13;
          -- Informações de Detalhes dos Vagões
          delete from ctferrovdcl_detvag
           where ctferrovdcl_id in (select l.id
                                      from ctferrov_dcl l
                                         , conhec_transp_ferrov f
                                     where l.conhectranspferrov_id = f.id and
                                           f.conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 14;
          -- Informações da DCL
          delete from ctferrov_dcl
           where conhectranspferrov_id in (select id
                                             from conhec_transp_ferrov
                                            where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 15;
          -- Dados do endereço da ferrovia substituída
          delete from ctferrov_subst
           where conhectranspferrov_id in (select id
                                             from conhec_transp_ferrov
                                            where conhectransp_id =  en_conhectransp_id);
          --
          vn_fase := 16;
          -- Informações dos Lacres dos vagões
          delete from ct_ferrov_detvag_lacre
           where ctferrovdetvag_id in ( select dv.id
                                          from conhec_transp_ferrov ctf
                                             , ct_ferrov_detvag dv
                                         where ctf.conhectransp_id =  en_conhectransp_id
                                           and dv.conhectranspferrov_id = ctf.id );
          --
          vn_fase := 17;
          -- informações dos containeres contidos no vagão
          delete from ct_ferrov_detvag_cont
           where ctferrovdetvag_id in ( select dv.id
                                          from conhec_transp_ferrov ctf
                                             , ct_ferrov_detvag dv
                                         where ctf.conhectransp_id =  en_conhectransp_id
                                           and dv.conhectranspferrov_id = ctf.id );
          --
          vn_fase := 18;
          -- Dados de Informações do Rateio das NF de Vagoes
          delete from ct_ferrov_detvag_nf
           where ctferrovdetvag_id in ( select dv.id
                                          from conhec_transp_ferrov ctf
                                             , ct_ferrov_detvag dv
                                         where ctf.conhectransp_id =  en_conhectransp_id
                                           and dv.conhectranspferrov_id = ctf.id );
          --
          vn_fase := 19;
          -- Dados de Informações do Rateio das NF de Vagoes
          delete from ct_ferrov_detvag_nfe
           where ctferrovdetvag_id in ( select dv.id
                                          from conhec_transp_ferrov ctf
                                             , ct_ferrov_detvag dv
                                         where ctf.conhectransp_id =  en_conhectransp_id
                                           and dv.conhectranspferrov_id = ctf.id );
          --
          vn_fase := 20;
          -- informações de detalhes dos Vagões
          delete from ct_ferrov_detvag
           where conhectranspferrov_id in (select id
                                             from conhec_transp_ferrov
                                            where conhectransp_id =  en_conhectransp_id);
          --
          vn_fase := 21;
          -- Informações do modal Ferroviário
          delete from conhec_transp_ferrov
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 22;
          -- Informações dos Lacres dos Cointainers da qtde da carga
          delete from ctaquav_lacre
           where conhectranspaquav_id in (select id
                                            from conhec_transp_aquav
                                           where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 23;
          -- Dados de informações das balsas do Transporte Aquaviário
          delete from ct_aquav_balsa
           where conhectranspaquav_id in (select id from conhec_transp_aquav
                                           where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 24;
          -- Dados de informações de lacres dos conteiners do Transporte Aquaviario
          delete from ct_aquav_cont_lacre
           where ctaquavcont_id in ( select ac.id
                                       from conhec_transp_aquav a
                                          , ct_aquav_cont ac
                                      where a.conhectransp_id = en_conhectransp_id
                                        and ac.conhectranspaquav_id = a.id );
          --
          vn_fase := 25;
          -- Dados de informações de NF dos conteiners do Transporte Aquaviario
          delete from ct_aquav_cont_nf
           where ctaquavcont_id in ( select ac.id
                                       from conhec_transp_aquav a
                                          , ct_aquav_cont ac
                                      where a.conhectransp_id = en_conhectransp_id
                                        and ac.conhectranspaquav_id = a.id );
          --
          vn_fase := 26;
          -- Dados de informações de NFe dos conteiners do Transporte Aquaviario
          delete from ct_aquav_cont_nfe
           where ctaquavcont_id in ( select ac.id
                                       from conhec_transp_aquav a
                                          , ct_aquav_cont ac
                                      where a.conhectransp_id = en_conhectransp_id
                                        and ac.conhectranspaquav_id = a.id );
          --
          vn_fase := 27;
          -- Dados de informações dos conteiners do Transporte Aquaviario
          delete from ct_aquav_cont
           where conhectranspaquav_id in (select id from conhec_transp_aquav
                                           where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 28;
          -- Informações do modal Aquaviário
          delete from conhec_transp_aquav
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 29;
          -- Dados de dimensao da Natureza da carga Aerea
          delete from ct_aereo_dimen
           where conhectranspaereo_id in ( select id from conhec_transp_aereo
                                            where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 30;
          -- Dados de dimensao da Natureza da carga Aerea
          delete from ct_aereo_inf_man
           where conhectranspaereo_id in ( select id from conhec_transp_aereo
                                            where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 31;
          -- Dados de Carga especial da Natureza da carga Aerea
          delete from ct_aereo_carg_esp
           where conhectranspaereo_id in ( select id from conhec_transp_aereo
                                            where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 32;
          -- Informações de transporte de produtos classificados pela ONU como perigosos - Atualização CTe 3.0
          delete from ct_aereo_peri
           where conhectranspaereo_id in ( select id from conhec_transp_aereo
                                            where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 33;
          -- Informações do Informações do modal Aéreo
          delete from conhec_transp_aereo
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 34;
          -- Informações do(s) Motorista(s)
          delete from ctrodo_moto
           where conhectransprodo_id in (select id
                                           from conhec_transp_rodo
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 35;
          -- Informações dos Dados dos Veículos versus Lacre
          delete from ctrodo_lacre
           where conhectransprodo_id in (select id
                                           from conhec_transp_rodo
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 36;
          -- Informações sobre Proprietários do Veículo
          delete from ctrodo_veic_prop
           where ctrodoveic_id in (select c.id
                                     from ctrodo_veic c
                                        , conhec_transp_rodo d
                                    where c.conhectransprodo_id = d.id and
                                          d.conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 37;
          -- Informações sobre os Dados do Veículo
          delete from ctrodo_veic
           where conhectransprodo_id in (select id
                                           from conhec_transp_rodo
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 38;
          --  Informações dos dispositivos do Vale Pedágio
          delete from ctrodo_valeped_disp
           where ctrodovaleped_id in (select a.id
                                        from ctrodo_valeped a
                                           , conhec_transp_rodo b
                                       where a.conhectransprodo_id = b.id and
                                             b.conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 39;
          -- Informações de Vale Pedágio
          delete from ctrodo_valeped
           where conhectransprodo_id in (select id
                                           from conhec_transp_rodo
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 40;
          -- Informações sobre Ordens de Coleta associados
          delete from ctrodo_occ
           where conhectransprodo_id in (select id
                                           from conhec_transp_rodo
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 41;
          -- Informações de Vale Pedágio
          delete from ctrodo_inf_valeped
           where conhectransprodo_id in (select id
                                           from conhec_transp_rodo
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 42;
          -- Informações do modal Rodoviário
          delete from conhec_transp_rodo
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 43;
          -- Informações do modal Rodoviário CTe Outros Serviços - Atualização CTe 3.0
          delete from ct_rodo_os
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 44;
          -- Dados da fatura do CTe
          delete from conhec_transp_fat
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 45;
          -- Dados da fatura do CTe
          delete from conhec_transp_dup
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 46;
          -- Informações de Seguro da Carga
          delete from conhec_transp_seg
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 47;
          -- Informações sobre Documentos de transporte anterior eletrônicos
          delete from ctdocant_eletr
           where conhectranspdocant_id in (select id
                                             from conhec_transp_docant
                                            where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 48;
          -- Informações sobre Documentos de transporte anterior em papel
          delete from ctdocant_papel
           where conhectranspdocant_id in (select id
                                             from conhec_transp_docant
                                            where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 49;
          -- Informações sobre Documentos de Transporte Anterior
          delete from conhec_transp_docant
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 50;
          -- Informações sobre Lacres dos containers
          delete from ctcont_lacre
           where conhectranspcont_id in (select id
                                           from conhec_transp_cont
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 51;
          -- Informações sobre Informações dos containers
          delete from conhec_transp_cont
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 52;
          -- Informações de quantidades da Carga do CT
          delete from ctinfcarga_qtde
           where conhectranspinfcarga_id in (select id
                                               from conhec_transp_infcarga
                                              where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 53;
          -- Informações da Carga do CT-e
          delete from conhec_transp_infcarga
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 54;
          -- Informações do ICMS de partilha com a UF de término do serviço de transporte na operação interestadual - Atualização CTe 3.0
          delete from conhec_transp_part_icms
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 55;
          -- Informações do CT-e multimodal vinculado - Atualização CTe 3.0
          delete from ct_inf_vinc_mult
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 56;
          -- Informações do Percurso do CT-e Outros Serviços - Atualização CTe 3.0
          delete from conhec_transp_percurso
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 57;
          -- Informações dos documentos referenciados CTe Outros Serviços - Atualização CTe 3.0
          delete from ct_doc_ref_os
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 58;
          -- Informações relativas aos Impostos
          delete from conhec_transp_imp
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 58.1;
          -- Informações relativas a Retenção de Impostos
          delete from conhec_transp_imp_ret
           where conhectransp_id = en_conhectransp_id;	  
          --		  
          vn_fase := 59;
          -- Informações sobre Componentes do Valor da Prestação
          delete from ctvlprest_comp
           where conhectranspvlprest_id in (select id
                                              from conhec_transp_vlprest
                                             where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 60;
          -- Informações sobre Valores da Prestação de Serviço
          delete from conhec_transp_vlprest
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 61;
          -- Informações sobre Local de Entrega constante na Nota Fiscal
          delete from ctdest_locent
           where conhectranspdest_id in (select id
                                           from conhec_transp_dest
                                          where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 62;
          -- Informações sobre Informações do Destinatário do CT
          delete from conhec_transp_dest
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 63;
          -- Informações do Recebedor da Carga
          delete from conhec_transp_receb
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 64;
          -- Informações do Expedidor da Carga
          delete from conhec_transp_exped
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 65;
          -- Informações de Local da Coleta do Remetente
          delete from ctrem_loc_colet
           where conhectransprem_id in (select id
                                          from conhec_transp_rem
                                         where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 66;
          -- Informações dos demais documentos
          delete from ctrem_inf_outro
           where conhectransprem_id in (select id
                                          from conhec_transp_rem
                                         where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 67;
          -- Informações das NFe do remetente
          delete from ctrem_inf_nfe
           where conhectransprem_id in (select id
                                          from conhec_transp_rem
                                         where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 68;
          -- Informações sobre o Local de retirada constante na NF
          delete from ctrem_inf_nf_locret
           where ctreminfnf_id in (select e.id
                                     from ctrem_inf_nf e
                                        , conhec_transp_rem h
                                    where e.conhectransprem_id = h.id and
                                          h.conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 69;
          -- Informações das NF do remetente
          delete from ctrem_inf_nf
           where conhectransprem_id in (select id
                                          from conhec_transp_rem
                                         where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 70;
          -- Informações do Remetente das mercadorias transportadas pelo CT
          delete from conhec_transp_rem
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 71;
          -- Informações do Identificação do Emitente do CT
          delete from conhec_transp_emit
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 72;
          -- Impostos e retenção da nota fiscal
          delete from ct_compl_obs
           where conhectranspcompl_id in (select id
                                            from conhec_transp_compl
                                           where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 73;
          -- Observações do Contribuinte/Fiscal
          delete from ct_compl_pass
           where conhectranspcompl_id in (select id
                                            from conhec_transp_compl
                                           where conhectransp_id = en_conhectransp_id);
          --
          vn_fase := 74;
          -- Observações do Contribuinte/Fiscal
          delete from conhec_transp_compl
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 75;
          -- Informações sobre "papel" do tomador do serviço no CT-e
          delete from conhec_transp_tomador
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 76;
          -- pdf do conhecimento de transporte
          delete from conhec_transp_pdf
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 77;
          --
          delete from ct_reg_anal
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 78;
          --
          delete from ct_comp_doc_pis
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 79;
          --
          delete from ct_comp_doc_cofins
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 80;
          --
          delete from ct_proc_ref
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 81;
          --
          delete from conhec_transp_impr
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 82;
          -- Informação de Pessoas Autorizadas a fazer download do XML na Sefaz
          delete from ct_aut_xml
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 83;
          -- Informações do CTe Multimodal
          delete from ct_multimodal
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 84;
          -- Informação de NF
          delete from r_ctinfnf_ctinfunidtransp
           where ctinfnf_id in ( select id from ct_inf_nf
                                  where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 85;
          --
          delete from r_ctinfnf_ctinfunidcarga
           where ctinfnf_id in ( select id from ct_inf_nf
                                  where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 86;
          --
          delete from ct_inf_nf
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 87;
          -- Informações de NFe
          --
          delete from r_ctinfnfe_ctinfunidtransp
           where ctinfnfe_id in ( select id from ct_inf_nfe
                                   where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 88;
          --
          delete from r_ctinfnfe_ctinfunidcarga
           where ctinfnfe_id in ( select id from ct_inf_nfe
                                   where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 89;
          --
          delete from ct_inf_nfe
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 90;
          -- Informações de Outros Documentos
          delete from r_ctinfoutro_ctinfunidtransp
           where ctinfoutro_id in ( select id from ct_inf_outro
                                     where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 91;
          --
          delete from r_ctinfoutro_ctinfunidcarga
           where ctinfoutro_id in ( select id from ct_inf_outro
                                     where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 92;
          --
          delete from ct_inf_outro
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 93;
          -- Informações da Unidade do transporte
          delete from ct_iut_carga_lacre
           where ctinfunidtranspcarga_id in ( select utc.id
                                                from ct_inf_unid_transp ut
                                                   , ct_inf_unid_transp_carga utc
                                               where ut.conhectransp_id = en_conhectransp_id
                                                 and utc.ctinfunidtransp_id = ut.id );
          --
          vn_fase := 94;
          --
          delete from ct_inf_unid_transp_carga
           where ctinfunidtransp_id in ( select ut.id
                                           from ct_inf_unid_transp ut
                                          where ut.conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 95;
          --
          delete from ct_inf_unid_transp_lacre
           where ctinfunidtransp_id in ( select ut.id
                                           from ct_inf_unid_transp ut
                                          where ut.conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 96;
          --
          delete from ct_inf_unid_transp
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 97;
          -- Informações da Unidade de Carga
          delete from ct_inf_unid_carga_lacre
           where ctinfunidcarga_id in ( select id from ct_inf_unid_carga
                                         where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 98;
          --
          delete from ct_inf_unid_carga
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 99;
          -- Informações do Sistema de Registro de Eventos
          delete from evento_cte_cce
           where eventocte_id in ( select id from evento_cte
                                    where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 100;
          --
          delete from evento_cte_multimodal
           where eventocte_id in ( select id from evento_cte
                                    where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 101;
          --
          delete from evento_cte_epec
           where eventocte_id in ( select id from evento_cte
                                    where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 102;
          --
          delete from evento_cte_retorno
           where eventocte_id in ( select id from evento_cte
                                    where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 103;
          -- Atualização CTe 3.0
          delete from evento_cte_gtv_esp
           where eventoctegtv_id in ( select eg.id from evento_cte_gtv  eg
                                                      , evento_cte      ec
                                       where ec.conhectransp_id = en_conhectransp_id
                                         and eg.eventocte_id    = ec.id );
          --
          vn_fase := 104;
          -- Atualização CTe 3.0
          delete from evento_cte_gtv
           where eventocte_id in ( select id from evento_cte
                                    where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 105;
          -- Atualização CTe 3.0
          delete from evento_cte_desac
           where eventocte_id in ( select id from evento_cte
                                    where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 106;
          delete from evento_cte
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 107;
          delete from ct_inf_prov ci
           where ci.ctinforfiscal_id in ( select id 
                                            from ctinfor_fiscal
                                           where conhectransp_id = en_conhectransp_id );
          --
          vn_fase := 108;
          delete from ctinfor_fiscal
           where conhectransp_id = en_conhectransp_id;
          --
          vn_fase := 109;
          --
          -- Os dados de consulta da Cte na Sefaz não são excluidos, somente retirada a referência conhectransp_id
          --
          -- Chama rotina que atualiza a tabela csf_cons_sit
          pk_csf_api_cons_sit.gt_row_ct_cons_sit                  := null;
          pk_csf_api_cons_sit.gt_row_ct_cons_sit.conhectransp_id  := en_conhectransp_id;
          --
          pk_csf_api_cons_sit.pkb_ins_atu_ct_cons_sit ( est_row_ct_cons_sit => pk_csf_api_cons_sit.gt_row_ct_cons_sit
                                                      , ev_campo_atu        => 'conhectransp_id'
                                                      , en_tp_rotina        => 0 -- atualização
                                                      , ev_rotina_orig      => 'pk_csf_api_ct.pkb_excluir_dados_ct'
                                                      );
          --
          gn_ind_exclu := 1; -- Indica que o CT foi excluído (0-Não / 1-Sim)
          --
          vn_fase := 110;
          -- Essa rotina irá excluir o CT das tabelas de conversão 
          pk_entr_cte_terceiro.pkb_desfazer_copia_cte ( en_conhectransp_id_dest => en_conhectransp_id );
          --
       end if;
       --
   end if;
   --
   commit;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_excluir_dados_ct fase(' || vn_fase || '):' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_excluir_dados_ct;

-------------------------------------------------------------------------------------------------------
-- Integra Evento Prestação de Servico em Desacordo do CTe por parte do Tomador - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------

procedure pkb_integr_evento_cte_desac ( est_log_generico         in out nocopy  dbms_sql.number_table
                                      , est_row_evento_cte_desac in out nocopy  evento_cte_desac%rowtype
                                      , en_conhectransp_id       in             conhec_transp.id%type )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id   Log_Generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_evento_cte_desac.eventocte_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Evento Prestação de Servico em Desacordo do CTe por parte do Tomador.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from evento_cte
      where id = est_row_evento_cte_desac.eventocte_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then  
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_evento_cte_desac.dm_ind_desac_oper := trim(pk_csf.fkg_converte(est_row_evento_cte_desac.dm_ind_desac_oper));
   est_row_evento_cte_desac.obs               := trim(pk_csf.fkg_converte(est_row_evento_cte_desac.obs));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_evento_cte_desac.eventocte_id, 0) > 0
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select eventoctedesac_seq.nextval
           into est_row_evento_cte_desac.id
           from dual;
         --
         insert into evento_cte_desac ( id
                                      , eventocte_id
                                      , dm_ind_desac_oper
                                      , obs
                                      )
                               values ( est_row_evento_cte_desac.id
                                      , est_row_evento_cte_desac.eventocte_id
                                      , est_row_evento_cte_desac.dm_ind_desac_oper
                                      , est_row_evento_cte_desac.obs
                                      );
         --
      else
         --
         vn_fase := 99.6;
         --
         update evento_cte_desac set dm_ind_desac_oper = est_row_evento_cte_desac.dm_ind_desac_oper
                                   , obs               = est_row_evento_cte_desac.obs
          where id = est_row_evento_cte_desac.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_evento_cte_desac fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_evento_cte_desac;

-------------------------------------------------------------------------------------------------------
-- Integra os Evento de CTe GTV (Grupo de Transporte de Valores) - Espécies Transportadas - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------

procedure pkb_integr_evento_cte_gtv_esp ( est_log_generico           in out nocopy  dbms_sql.number_table
                                        , est_row_evento_cte_gtv_esp in out nocopy  evento_cte_gtv_esp%rowtype
                                        , en_conhectransp_id         in             conhec_transp.id%type )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  Log_Generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_evento_cte_gtv_esp.eventoctegtv_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Evento de CTe GTV (Grupo de Transporte de Valores) - Espécies Transportadas.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if nvl(est_row_evento_cte_gtv_esp.dm_tp_especie, -9) not in (1, 2, 3, 4) then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := 'O "Tipo de espécie" nas Informações do Evento de CTe GTV (Grupo de Transporte de Valores) - Espécies Transportadas ' ||
                        '(' || est_row_evento_cte_gtv_esp.dm_tp_especie || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   begin
     select ec.conhectransp_id
       into vn_conhectransp_id
       from evento_cte     ec
          , evento_cte_gtv eg
      where ec.id = eg.eventocte_id
        and eg.id = est_row_evento_cte_gtv_esp.eventoctegtv_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;   
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_evento_cte_gtv_esp.eventoctegtv_id, 0) > 0
      and est_row_evento_cte_gtv_esp.dm_tp_especie in (1, 2, 3, 4)
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select eventoctegtvesp_seq.nextval
           into est_row_evento_cte_gtv_esp.id
           from dual;
         --
         insert into evento_cte_gtv_esp ( id
                                        , eventoctegtv_id
                                        , dm_tp_especie
                                        , vl_esp
                                        )
                                 values ( est_row_evento_cte_gtv_esp.id
                                        , est_row_evento_cte_gtv_esp.eventoctegtv_id
                                        , est_row_evento_cte_gtv_esp.dm_tp_especie
                                        , est_row_evento_cte_gtv_esp.vl_esp
                                        );
         --
      else
         --
         vn_fase := 99.5;
         --
         update evento_cte_gtv_esp set dm_tp_especie  = est_row_evento_cte_gtv_esp.dm_tp_especie
                                     , vl_esp         = est_row_evento_cte_gtv_esp.vl_esp
          where id = est_row_evento_cte_gtv_esp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_evento_cte_gtv_esp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_evento_cte_gtv_esp;

-------------------------------------------------------------------------------------------------------
-- Integra os Evento de CTe GTV (Grupo de Transporte de Valores) - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------

procedure pkb_integr_evento_cte_gtv ( est_log_generico       in out nocopy  dbms_sql.number_table
                                    , est_row_evento_cte_gtv in out nocopy  evento_cte_gtv%rowtype
                                    , en_conhectransp_id     in             conhec_transp.id%type )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  Log_Generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_evento_cte_gtv.eventocte_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Evento de CTe GTV (Grupo de Transporte de Valores).';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if trim(pk_csf.fkg_converte(est_row_evento_cte_gtv.nro_doc)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := 'O "Número da GTV" nas Informações do Evento de CTe GTV (Grupo de Transporte de Valores) ' ||
                        '(' || est_row_evento_cte_gtv.nro_doc || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if trim(pk_csf.fkg_converte(est_row_evento_cte_gtv.id_aidf)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := 'O "Identificador para diferenciar GTV de mesmo número" nas Informações do Evento de CTe GTV (Grupo de Transporte de Valores) ' ||
                        '(' || est_row_evento_cte_gtv.id_aidf || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if est_row_evento_cte_gtv.dt_emiss is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := 'A "Data da emissão" nas Informações do Evento de CTe GTV (Grupo de Transporte de Valores) ' ||
                        '(' || est_row_evento_cte_gtv.dt_emiss || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if nvl(est_row_evento_cte_gtv.dig_verif, -1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := 'O "Número do Dígito Verificador" nas Informações do Evento de CTe GTV (Grupo de Transporte de Valores) ' ||
                        '(' || est_row_evento_cte_gtv.dig_verif || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   --
   if nvl(est_row_evento_cte_gtv.qtde_carga, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := 'A "Quantidade de volumes/malotes" nas Informações do Evento de CTe GTV (Grupo de Transporte de Valores) ' ||
                        '(' || est_row_evento_cte_gtv.qtde_carga || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from evento_cte
      where id = est_row_evento_cte_gtv.eventocte_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_evento_cte_gtv.nro_doc  := trim(pk_csf.fkg_converte(est_row_evento_cte_gtv.nro_doc));
   est_row_evento_cte_gtv.id_aidf  := trim(pk_csf.fkg_converte(est_row_evento_cte_gtv.id_aidf));
   est_row_evento_cte_gtv.serie    := trim(pk_csf.fkg_converte(est_row_evento_cte_gtv.serie));
   est_row_evento_cte_gtv.subserie := trim(pk_csf.fkg_converte(est_row_evento_cte_gtv.subserie));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_evento_cte_gtv.eventocte_id, 0) > 0
      and est_row_evento_cte_gtv.nro_doc is not null
      and est_row_evento_cte_gtv.id_aidf is not null
      and est_row_evento_cte_gtv.dt_emiss is not null
      and nvl(est_row_evento_cte_gtv.dig_verif, -1) >= 0 
      and nvl(est_row_evento_cte_gtv.qtde_carga, -1) >= 0
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select eventoctegtv_seq.nextval
           into est_row_evento_cte_gtv.id
           from dual;
         --
         insert into evento_cte_gtv ( id
                                    , eventocte_id
                                    , nro_doc
                                    , id_aidf
                                    , serie
                                    , subserie
                                    , dt_emiss
                                    , dig_verif
                                    , qtde_carga
                                    )
                             values ( est_row_evento_cte_gtv.id
                                    , est_row_evento_cte_gtv.eventocte_id
                                    , est_row_evento_cte_gtv.nro_doc
                                    , est_row_evento_cte_gtv.id_aidf
                                    , est_row_evento_cte_gtv.serie
                                    , est_row_evento_cte_gtv.subserie
                                    , est_row_evento_cte_gtv.dt_emiss
                                    , est_row_evento_cte_gtv.dig_verif
                                    , est_row_evento_cte_gtv.qtde_carga
                                    );
         --
      else
         --
         vn_fase := 99.6;
         --
         update evento_cte_gtv set eventocte_id = est_row_evento_cte_gtv.eventocte_id
                                 , nro_doc      = est_row_evento_cte_gtv.nro_doc
                                 , id_aidf      = est_row_evento_cte_gtv.id_aidf     
                                 , serie        = est_row_evento_cte_gtv.serie       
                                 , subserie     = est_row_evento_cte_gtv.subserie    
                                 , dt_emiss     = est_row_evento_cte_gtv.dt_emiss    
                                 , dig_verif    = est_row_evento_cte_gtv.dig_verif   
                                 , qtde_carga   = est_row_evento_cte_gtv.qtde_carga
          where id = est_row_evento_cte_gtv.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_evento_cte_gtv fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_evento_cte_gtv;

-------------------------------------------------------------------------------------------------------
-- Integra dados do Evento do CTe Carta de Corração

procedure pkb_integr_evento_cte_cce ( est_log_generico              in out nocopy  dbms_sql.number_table
                                    , est_row_evento_cte_cce        in out nocopy  evento_cte_cce%rowtype
                                    , en_conhectransp_id            in             conhec_transp.id%type
                                    , ev_estrutcte_grupo            in             estrut_cte.campo%type
                                    , ev_estrutcte_campo            in             estrut_cte.campo%type
                                    )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_evento_cte_cce.eventocte_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Evento para a Carta de Correção.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   --Indicar o grupo de informações que pertence o campoAlterado
   est_row_evento_cte_cce.estrutcte_id_grupo := pk_csf_ct.fkg_estrutcte_id_grupo ( ev_campo => ev_estrutcte_grupo );
   --
   vn_fase := 2.1;
   --
   if nvl(est_row_evento_cte_cce.estrutcte_id_grupo,0) <= 0 then
      --
      gv_mensagem_log := '"Indicar o grupo" (' || ev_estrutcte_grupo || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Nome do campo modificado do CT-e Original
   est_row_evento_cte_cce.estrutcte_id_campo := pk_csf_ct.fkg_estrutcte_id_campo ( en_estrutcte_id  => est_row_evento_cte_cce.estrutcte_id_grupo
                                                                                 , ev_campo         => ev_estrutcte_campo
                                                                                 );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_evento_cte_cce.estrutcte_id_campo,0) <= 0 then
      --
      gv_mensagem_log := '"Campo modificado do CT-e Original" (' || ev_estrutcte_campo || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   est_row_evento_cte_cce.valor_alterado := trim( pk_csf.fkg_converte(est_row_evento_cte_cce.valor_alterado) );
   --
   if est_row_evento_cte_cce.valor_alterado is null then
      --
      gv_mensagem_log := '"Valor correspondente à alteração" não pode ser nulo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if nvl(est_row_evento_cte_cce.nro_item_alter, 1) <= 0 then
      --
      gv_mensagem_log := '"indice do item alterado" (' || est_row_evento_cte_cce.nro_item_alter || ') não pode ser zero ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_evento_cte_cce.eventocte_id,0) > 0
      and nvl(est_row_evento_cte_cce.estrutcte_id_grupo,0) > 0
      and nvl(est_row_evento_cte_cce.estrutcte_id_campo,0) > 0
      and est_row_evento_cte_cce.valor_alterado is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then 
         --
         vn_fase := 99.2;
         --
         select eventoctecce_seq.nextval
           into est_row_evento_cte_cce.id
           from dual;
         --
         insert into evento_cte_cce ( id
                                    , eventocte_id
                                    , estrutcte_id_grupo
                                    , estrutcte_id_campo
                                    , valor_alterado
                                    , nro_item_alter
                                    )
                             values ( est_row_evento_cte_cce.id
                                    , est_row_evento_cte_cce.eventocte_id
                                    , est_row_evento_cte_cce.estrutcte_id_grupo
                                    , est_row_evento_cte_cce.estrutcte_id_campo
                                    , est_row_evento_cte_cce.valor_alterado
                                    , est_row_evento_cte_cce.nro_item_alter
                                    );
         --
      else
         --
         vn_fase := 99.3;
         --
         update evento_cte_cce set eventocte_id        = est_row_evento_cte_cce.eventocte_id
                                 , estrutcte_id_grupo  = est_row_evento_cte_cce.estrutcte_id_grupo
                                 , estrutcte_id_campo  = est_row_evento_cte_cce.estrutcte_id_campo
                                 , valor_alterado      = est_row_evento_cte_cce.valor_alterado
                                 , nro_item_alter      = est_row_evento_cte_cce.nro_item_alter
          where id = est_row_evento_cte_cce.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_evento_cte_cce fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_evento_cte_cce;

-------------------------------------------------------------------------------------------------------
-- Integra dados do Evento do CTe Multimodal

procedure pkb_integr_evento_cte_mmodal ( est_log_generico              in out nocopy  dbms_sql.number_table
                                       , est_row_evento_cte_multimodal in out nocopy  evento_cte_multimodal%rowtype
                                       , en_conhectransp_id            in             conhec_transp.id%type
                                       )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_evento_cte_multimodal.eventocte_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Evento para o Multimodal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_evento_cte_multimodal.descr_registro := trim( pk_csf.fkg_converte(est_row_evento_cte_multimodal.descr_registro) );
   est_row_evento_cte_multimodal.nro_doc := trim( pk_csf.fkg_converte(est_row_evento_cte_multimodal.nro_doc) );
   --
   vn_fase := 3;
   --
   if est_row_evento_cte_multimodal.descr_registro is null then
      --
      gv_mensagem_log := '"Descrição do Registro Multimodal" não pode ser nulo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.1;
   --
   if length(est_row_evento_cte_multimodal.descr_registro) < 15 then
      --
      gv_mensagem_log := '"Descrição do Registro Multimodal" deve ter no minimo 15 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_evento_cte_multimodal.eventocte_id,0) > 0
      and est_row_evento_cte_multimodal.descr_registro is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select eventoctemultimodal_seq.nextval
           into est_row_evento_cte_multimodal.id
           from dual;
         --
         insert into evento_cte_multimodal ( id
                                           , eventocte_id
                                           , descr_registro
                                           , nro_doc
                                           )
                                    values ( est_row_evento_cte_multimodal.id
                                           , est_row_evento_cte_multimodal.eventocte_id
                                           , est_row_evento_cte_multimodal.descr_registro
                                           , est_row_evento_cte_multimodal.nro_doc
                                           );
         --
      else
         --
         vn_fase := 99.3;
         --
         update evento_cte_multimodal set eventocte_id    = est_row_evento_cte_multimodal.eventocte_id
                                        , descr_registro  = est_row_evento_cte_multimodal.descr_registro
                                        , nro_doc         = est_row_evento_cte_multimodal.nro_doc
          where id = est_row_evento_cte_multimodal.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_evento_cte_mmodal fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_evento_cte_mmodal;

-------------------------------------------------------------------------------------------------------
-- Integra dados do Evento do CTe

procedure pkb_integr_evento_cte ( est_log_generico              in out nocopy  dbms_sql.number_table
                                , est_row_evento_cte            in out nocopy  evento_cte%rowtype
                                , ev_tipoeventosefaz_cd         in             tipo_evento_sefaz.cd%type
                                )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   vn_nro_seq        evento_cte.nro_seq%type;
   vv_nro_chave_cte  conhec_transp.nro_chave_cte%type;
   --
begin
   --
   vn_fase := 1;
   --
   /*
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_evento_cte.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if; */
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_evento_cte.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para o Evento.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_evento_cte.dt_hr_evento := sysdate;
   --
   vn_fase := 3;
   --
   est_row_evento_cte.tipoeventosefaz_id := pk_csf.fkg_tipoeventosefaz_id( ev_cd => trim(ev_tipoeventosefaz_cd) );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_evento_cte.tipoeventosefaz_id,0) <= 0 then
      --
      gv_mensagem_log := '"Tipo de Evento da Sefaz" (' || ev_tipoeventosefaz_cd || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(est_row_evento_cte.dm_st_integra, -1) not in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10) then
      --
      gv_mensagem_log := '"Situação de Integração" (' || est_row_evento_cte.dm_st_integra || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if nvl(est_row_evento_cte.dm_st_proc, -1) not in (0, 1, 2, 3, 4, 5) then
      --
      gv_mensagem_log := '"Situação de Processo" (' || est_row_evento_cte.dm_st_proc || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- recupera o ultimo número de sequencia
   begin
      --
      select nvl(max(nro_seq),0) + 1
        into vn_nro_seq
        from evento_cte
       where conhectransp_id     = est_row_evento_cte.conhectransp_id
         and tipoeventosefaz_id  = est_row_evento_cte.tipoeventosefaz_id
         and dm_st_proc = 3;
      --
   exception
      when others then
         vn_nro_seq := 1;
   end;
   --
   if ev_tipoeventosefaz_cd = '110111'
      and nvl(vn_nro_seq,0) > 1
      then
      --
      return;
      --
   end if;
   --
   est_row_evento_cte.nro_seq := vn_nro_seq;
   --
   vn_fase := 7;
   --Identificador da TAG a ser assinada, a regra de formação do Id é: ID+ tpEvento+ chave do CT-e+ nSeqEvento
   --
   vv_nro_chave_cte := trim(pk_csf.fkg_chave_ct ( en_conhectransp_id => est_row_evento_cte.conhectransp_id ));
   --
   vn_fase := 7.1;
   --
   est_row_evento_cte.id_tag_chave := 'ID' || trim(ev_tipoeventosefaz_cd) || vv_nro_chave_cte || lpad(vn_nro_seq, 2, '0');
   --
   vn_fase := 7.2;
   --
   if length(est_row_evento_cte.id_tag_chave) <> 54 then
      --
      gv_mensagem_log := '"Identificador da TAG" (' || est_row_evento_cte.id_tag_chave || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   if nvl(est_log_generico.count,0) > 0 then
      --
      est_row_evento_cte.dm_st_proc := 4; -- Erro de validação
      --
   else
      --
      est_row_evento_cte.dm_st_proc := 1; -- Validado
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_evento_cte.conhectransp_id,0) > 0
      and est_row_evento_cte.dt_hr_evento is not null
      and nvl(est_row_evento_cte.tipoeventosefaz_id,0) > 0
      and nvl(est_row_evento_cte.dm_st_integra, -1) in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
      and nvl(est_row_evento_cte.dm_st_proc, -1) in (0, 1, 2, 3, 4, 5)
      and nvl(est_row_evento_cte.nro_seq,0) > 0
      and est_row_evento_cte.id_tag_chave is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select eventocte_seq.nextval
           into est_row_evento_cte.id
           from dual;
         --
         insert into evento_cte ( id
                                , conhectransp_id
                                , dt_hr_evento
                                , tipoeventosefaz_id
                                , dm_st_integra
                                , dm_st_proc
                                , nro_seq
                                , id_tag_chave
                                )
                         values ( est_row_evento_cte.id
                                , est_row_evento_cte.conhectransp_id
                                , est_row_evento_cte.dt_hr_evento
                                , est_row_evento_cte.tipoeventosefaz_id
                                , est_row_evento_cte.dm_st_integra
                                , est_row_evento_cte.dm_st_proc
                                , est_row_evento_cte.nro_seq
                                , est_row_evento_cte.id_tag_chave
                                );
         --
      else
         --
         vn_fase := 99.3;
         --
         update evento_cte set conhectransp_id     = est_row_evento_cte.conhectransp_id
                             , dt_hr_evento        = est_row_evento_cte.dt_hr_evento
                             , tipoeventosefaz_id  = est_row_evento_cte.tipoeventosefaz_id
                             , dm_st_integra       = est_row_evento_cte.dm_st_integra
                             , dm_st_proc          = est_row_evento_cte.dm_st_proc
                             , nro_seq             = est_row_evento_cte.nro_seq
                             , id_tag_chave        = est_row_evento_cte.id_tag_chave
          where id = est_row_evento_cte.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_evento_cte fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_evento_cte;
--
-- ====================================================================================================== --
-- Integra as informações de Eventos do CTe EPEC
-- ====================================================================================================== --
procedure pkb_integr_evento_cte_epec ( est_log_generico        in out nocopy  dbms_sql.number_table
                                     , est_row_evento_cte_epec in out nocopy  evento_cte_epec%rowtype
                                     , en_conhectransp_id      in             conhec_transp.id%type )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  Log_Generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_evento_cte_epec.eventocte_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informadas as informações de Eventos do CTe EPEC.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from evento_cte
      where id = est_row_evento_cte_epec.eventocte_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp
         set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_evento_cte_epec.just_cont := est_row_evento_cte_epec.just_cont;
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_evento_cte_epec.eventocte_id, 0) > 0
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select eventocteepec_seq.nextval
           into est_row_evento_cte_epec.id
           from dual;
         --
         insert into evento_cte_epec ( id
                                     , eventocte_id
                                     , just_cont
                                     )
                              values ( est_row_evento_cte_epec.id
                                     , est_row_evento_cte_epec.eventocte_id
                                     , est_row_evento_cte_epec.just_cont
                                     );
         --
      else
         --
         vn_fase := 99.6;
         --
         update evento_cte_epec
            set just_cont = est_row_evento_cte_epec.just_cont
          where id = est_row_evento_cte_epec.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_evento_cte_epec fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_evento_cte_epec;
--
-------------------------------------------------------------------------------------------------------
-- Integra dados do Multimodal

procedure pkb_integr_ct_multimodal ( est_log_generico       in out nocopy  dbms_sql.number_table
                                   , est_row_ct_multimodal  in out nocopy  ct_multimodal%rowtype
                                   , ev_cod_part_consg      in             pessoa.cod_part%type
                                   , ev_cod_part_red        in             pessoa.cod_part%type
                                   , en_multorg_id          in             mult_org.id%type
                                   )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_multimodal.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_multimodal.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para o Multimodal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_ct_multimodal.pessoa_id_consg := pk_csf.fkg_pessoa_id_cod_part ( en_multorg_id => en_multorg_id
                                                                          , ev_cod_part   => trim(ev_cod_part_consg) );
   --
   vn_fase := 2.1;
   --
   if trim(ev_cod_part_consg) is not null
      and nvl(est_row_ct_multimodal.pessoa_id_consg,0) <= 0 then
      --
      gv_mensagem_log := '"Código do participante consignatário" (' || ev_cod_part_consg || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_ct_multimodal.pessoa_id_red := pk_csf.fkg_pessoa_id_cod_part ( en_multorg_id => en_multorg_id
                                                                        , ev_cod_part   => trim(ev_cod_part_red) );
   --
   vn_fase := 3.1;
   --
   if trim(ev_cod_part_red) is not null
      and nvl(est_row_ct_multimodal.pessoa_id_red,0) <= 0 then
      --
      gv_mensagem_log := '"Código do participante redespachante" (' || ev_cod_part_red || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(est_row_ct_multimodal.cod_mun_orig,0) > 0 
      and not pk_csf.fkg_ibge_cidade ( ev_ibge_cidade => est_row_ct_multimodal.cod_mun_orig)
      then
      --
      gv_mensagem_log := '"Código IBGE do município de origem do serviço" (' || est_row_ct_multimodal.cod_mun_orig || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if nvl(est_row_ct_multimodal.cod_mun_dest,0) > 0
      and not pk_csf.fkg_ibge_cidade ( ev_ibge_cidade => est_row_ct_multimodal.cod_mun_dest)
      then
      --
      gv_mensagem_log := '"Código IBGE do município de origem do serviço" (' || est_row_ct_multimodal.cod_mun_dest || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   --
   if trim(pk_csf.fkg_converte(est_row_ct_multimodal.otm)) is null then
      --
      gv_mensagem_log := 'Não informado o "Registro do operador de transporte multimodal" (OTM).';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   --
   if nvl(est_row_ct_multimodal.dm_ind_nat_frt, -1) not in (0, 1) then
      --
      gv_mensagem_log := '"Indicador da natureza do frete" (' || est_row_ct_multimodal.dm_ind_nat_frt || ') esta inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   --
   if nvl(est_row_ct_multimodal.vl_liq_frt,0) <= 0 then
      --
      gv_mensagem_log := '"Valor líquido do frete" (' || est_row_ct_multimodal.vl_liq_frt || ') não pode ser zero ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   if nvl(est_row_ct_multimodal.vl_gris,0) < 0 then
      --
      gv_mensagem_log := '"Valor do gris (gerenciamento de risco)" (' || est_row_ct_multimodal.vl_gris || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   --
   if nvl(est_row_ct_multimodal.vl_pdg,0) < 0 then
      --
      gv_mensagem_log := '"Somatório dos valores de pedágio" (' || est_row_ct_multimodal.vl_pdg || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   --
   if nvl(est_row_ct_multimodal.vl_out,0) < 0 then
      --
      gv_mensagem_log := '"Outros valores" (' || est_row_ct_multimodal.vl_out || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   --
   if nvl(est_row_ct_multimodal.vl_frt,0) <= 0 then
      --
      gv_mensagem_log := '"Valor total do frete" (' || est_row_ct_multimodal.vl_frt || ') não pode ser zero ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --
   vn_fase := 99;
   --
   est_row_ct_multimodal.otm         := trim(pk_csf.fkg_converte(est_row_ct_multimodal.otm));
   est_row_ct_multimodal.vl_liq_frt  := nvl(est_row_ct_multimodal.vl_liq_frt,0);
   est_row_ct_multimodal.vl_frt      := nvl(est_row_ct_multimodal.vl_frt,0);
   est_row_ct_multimodal.veic_id     := trim(pk_csf.fkg_converte(est_row_ct_multimodal.veic_id));
   est_row_ct_multimodal.uf_id       := trim(pk_csf.fkg_converte(est_row_ct_multimodal.uf_id));
   --
   if nvl(est_row_ct_multimodal.conhectransp_id,0) > 0
      and nvl(est_row_ct_multimodal.cod_mun_orig,0) > 0
      and nvl(est_row_ct_multimodal.cod_mun_dest,0) > 0
      and est_row_ct_multimodal.otm is not null
      and nvl(est_row_ct_multimodal.dm_ind_nat_frt, -1) in (0,1)
      and nvl(est_row_ct_multimodal.vl_liq_frt,0) > 0
      and nvl(est_row_ct_multimodal.vl_frt,0) > 0
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctmultimodal_seq.nextval
           into est_row_ct_multimodal.id
           from dual;
         --
         insert into ct_multimodal ( id
                                   , conhectransp_id
                                   , pessoa_id_consg
                                   , pessoa_id_red
                                   , cod_mun_orig
                                   , cod_mun_dest
                                   , otm
                                   , dm_ind_nat_frt
                                   , vl_liq_frt
                                   , vl_gris
                                   , vl_pdg
                                   , vl_out
                                   , vl_frt
                                   , veic_id
                                   , uf_id
                                   )
                            values ( est_row_ct_multimodal.id
                                   , est_row_ct_multimodal.conhectransp_id
                                   , est_row_ct_multimodal.pessoa_id_consg
                                   , est_row_ct_multimodal.pessoa_id_red
                                   , est_row_ct_multimodal.cod_mun_orig
                                   , est_row_ct_multimodal.cod_mun_dest
                                   , est_row_ct_multimodal.otm
                                   , est_row_ct_multimodal.dm_ind_nat_frt
                                   , est_row_ct_multimodal.vl_liq_frt
                                   , est_row_ct_multimodal.vl_gris
                                   , est_row_ct_multimodal.vl_pdg
                                   , est_row_ct_multimodal.vl_out
                                   , est_row_ct_multimodal.vl_frt
                                   , est_row_ct_multimodal.veic_id
                                   , est_row_ct_multimodal.uf_id
                                   );
         --
      else
         --
         vn_fase := 99.3;
         --
         update ct_multimodal set conhectransp_id  = est_row_ct_multimodal.conhectransp_id
                                , pessoa_id_consg  = est_row_ct_multimodal.pessoa_id_consg
                                , pessoa_id_red    = est_row_ct_multimodal.pessoa_id_red
                                , cod_mun_orig     = est_row_ct_multimodal.cod_mun_orig
                                , cod_mun_dest     = est_row_ct_multimodal.cod_mun_dest
                                , otm              = est_row_ct_multimodal.otm
                                , dm_ind_nat_frt   = est_row_ct_multimodal.dm_ind_nat_frt
                                , vl_liq_frt       = est_row_ct_multimodal.vl_liq_frt
                                , vl_gris          = est_row_ct_multimodal.vl_gris
                                , vl_pdg           = est_row_ct_multimodal.vl_pdg
                                , vl_out           = est_row_ct_multimodal.vl_out
                                , vl_frt           = est_row_ct_multimodal.vl_frt
                                , veic_id          = est_row_ct_multimodal.veic_id
                                , uf_id            = est_row_ct_multimodal.uf_id
          where id = est_row_ct_multimodal.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_multimodal fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_multimodal;

-------------------------------------------------------------------------------------------------------
-- Integra o Relacionamento de Outros Documentos com a Unidade de Carga

procedure pkb_integr_r_outro_infuc ( est_log_generico              in out nocopy  dbms_sql.number_table
                                   , est_row_r_outro_infunidcarga  in out nocopy  r_ctinfoutro_ctinfunidcarga%rowtype
                                   , en_conhectransp_id            in             conhec_transp.id%type
                                   , ev_dm_tipo_doc                in             ct_inf_outro.dm_tipo_doc%type
                                   , ev_nro_docto                  in             ct_inf_outro.nro_docto%type
                                   , en_dm_tp_unid_carga           in             ct_inf_unid_carga.dm_tp_unid_carga%type
                                   , ev_ident_unid_carga           in             ct_inf_unid_carga.ident_unid_carga%type
                                   )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_r_outro_infunidcarga.ctinfoutro_id := pk_csf_ct.fkg_ct_inf_outro_id ( en_conhectransp_id => en_conhectransp_id
                                                                               , ev_dm_tipo_doc     => ev_dm_tipo_doc
                                                                               , ev_nro_docto       => ev_nro_docto
                                                                               );
   --
   vn_fase := 2.1;
   --
   if nvl(est_row_r_outro_infunidcarga.ctinfoutro_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada o Outro Documento (Tipo de documento originário: ' || ev_dm_tipo_doc || ' / '
                         || 'Número do documento: ' || ev_nro_docto || ' ) para relacionar com a Unidade de Transporte.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_r_outro_infunidcarga.ctinfunidcarga_id := pk_csf_ct.fkg_ct_inf_unid_carga_id ( en_conhectransp_id   => en_conhectransp_id
                                                                                        , en_dm_tp_unid_carga  => en_dm_tp_unid_carga
                                                                                        , ev_ident_unid_carga  => ev_ident_unid_carga
                                                                                        );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_r_outro_infunidcarga.ctinfunidcarga_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Unidade de Carga (Tipo da Unidade de Carga: ' || en_dm_tp_unid_carga ||
                         ' Identificação da Unidade de Carga: ' || ev_ident_unid_carga || ') para relacionar com a Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_r_outro_infunidcarga.ctinfoutro_id,0) > 0
      and nvl(est_row_r_outro_infunidcarga.ctinfunidcarga_id,0) > 0
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select rctinfoutroctinfunidcarga_seq.nextval
           into est_row_r_outro_infunidcarga.id
           from dual;
         --
         insert into r_ctinfoutro_ctinfunidcarga ( id
                                                 , ctinfoutro_id
                                                 , ctinfunidcarga_id
                                                 )
                                          values ( est_row_r_outro_infunidcarga.id
                                                 , est_row_r_outro_infunidcarga.ctinfoutro_id
                                                 , est_row_r_outro_infunidcarga.ctinfunidcarga_id
                                                 );
         --
      else
         --
         vn_fase := 99.3;
         --
         update r_ctinfoutro_ctinfunidcarga
            set ctinfoutro_id      = est_row_r_outro_infunidcarga.ctinfoutro_id
              , ctinfunidcarga_id  = est_row_r_outro_infunidcarga.ctinfunidcarga_id
          where id = est_row_r_outro_infunidcarga.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_r_outro_infuc fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_r_outro_infuc;

-------------------------------------------------------------------------------------------------------
-- Integra o Relacionamento de Outros Documentos com a Unidade de Transporte

procedure pkb_integr_r_outro_infut ( est_log_generico                in out nocopy  dbms_sql.number_table
                                   , est_row_r_outro_infunidtransp   in out nocopy  r_ctinfoutro_ctinfunidtransp%rowtype
                                   , en_conhectransp_id              in             conhec_transp.id%type
                                   , ev_dm_tipo_doc                  in             ct_inf_outro.dm_tipo_doc%type
                                   , ev_nro_docto                    in             ct_inf_outro.nro_docto%type
                                   , en_dm_tp_unid_transp            in             ct_inf_unid_transp.dm_tp_unid_transp%type
                                   , ev_ident_unid_transp            in             ct_inf_unid_transp.ident_unid_transp%type
                                   )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_r_outro_infunidtransp.ctinfoutro_id := pk_csf_ct.fkg_ct_inf_outro_id ( en_conhectransp_id => en_conhectransp_id
                                                                                , ev_dm_tipo_doc     => ev_dm_tipo_doc
                                                                                , ev_nro_docto       => ev_nro_docto
                                                                                );
   --
   vn_fase := 2.1;
   --
   if nvl(est_row_r_outro_infunidtransp.ctinfoutro_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada o Outro Documento (Tipo de documento originário: ' || ev_dm_tipo_doc || ' / '
                         || 'Número do documento: ' || ev_nro_docto || ' ) para relacionar com a Unidade de Transporte.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_r_outro_infunidtransp.ctinfunidtransp_id := pk_csf_ct.fkg_ct_inf_unid_transp_id ( en_conhectransp_id    => en_conhectransp_id
                                                                                           , en_dm_tp_unid_transp  => en_dm_tp_unid_transp
                                                                                           , ev_ident_unid_transp  => ev_ident_unid_transp
                                                                                           );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_r_outro_infunidtransp.ctinfunidtransp_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Unidade de Transporte (Tipo da Unidade de Transporte: ' || en_dm_tp_unid_transp || 
                         ' Identificação da Unidade de Transporte: ' || ev_ident_unid_transp || ') para relacionar com a Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_r_outro_infunidtransp.ctinfoutro_id,0) > 0
      and nvl(est_row_r_outro_infunidtransp.ctinfunidtransp_id,0) > 0
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select rctinfoutroctinfunidtransp_seq.nextval
           into est_row_r_outro_infunidtransp.id
           from dual;
         --
         insert into r_ctinfoutro_ctinfunidtransp ( id
                                                  , ctinfoutro_id
                                                  , ctinfunidtransp_id
                                                  )
                                           values ( est_row_r_outro_infunidtransp.id
                                                  , est_row_r_outro_infunidtransp.ctinfoutro_id
                                                  , est_row_r_outro_infunidtransp.ctinfunidtransp_id
                                                  );
         --
      else
         --
         vn_fase := 99.3;
         --
         update r_ctinfoutro_ctinfunidtransp
            set ctinfoutro_id       = est_row_r_outro_infunidtransp.ctinfoutro_id
              , ctinfunidtransp_id  = est_row_r_outro_infunidtransp.ctinfunidtransp_id
          where id                  = est_row_r_outro_infunidtransp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_r_outro_infut fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_r_outro_infut;

-------------------------------------------------------------------------------------------------------
-- Integra o Relacionamento da NFe com a Unidade de Carga

procedure pkb_integr_r_nfe_infunidcarga ( est_log_generico            in out nocopy  dbms_sql.number_table
                                        , est_row_r_nfe_infunidcarga  in out nocopy  r_ctinfnfe_ctinfunidcarga%rowtype
                                        , en_conhectransp_id          in             conhec_transp.id%type
                                        , ev_nro_chave_nfe            in             ct_inf_nfe.nro_chave_nfe%type
                                        , en_dm_tp_unid_carga         in             ct_inf_unid_carga.dm_tp_unid_carga%type
                                        , ev_ident_unid_carga         in             ct_inf_unid_carga.ident_unid_carga%type
                                        )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_r_nfe_infunidcarga.ctinfnfe_id := pk_csf_ct.fkg_ct_inf_nfe_id ( en_conhectransp_id => en_conhectransp_id
                                                                         , ev_nro_chave_nfe   => ev_nro_chave_nfe
                                                                         );
   --
   vn_fase := 2.1;
   --
   if nvl(est_row_r_nfe_infunidcarga.ctinfnfe_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a NFe (Chave de Acesso: ' || ev_nro_chave_nfe || ') para relacionar com a Unidade de Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_r_nfe_infunidcarga.ctinfunidcarga_id := pk_csf_ct.fkg_ct_inf_unid_carga_id ( en_conhectransp_id   => en_conhectransp_id
                                                                                      , en_dm_tp_unid_carga  => en_dm_tp_unid_carga
                                                                                      , ev_ident_unid_carga  => ev_ident_unid_carga
                                                                                      );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_r_nfe_infunidcarga.ctinfunidcarga_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Unidade de Carga (Tipo da Unidade de Carga: ' || en_dm_tp_unid_carga ||
                         ' Identificação da Unidade de Carga: ' || ev_ident_unid_carga || ') para relacionar com a Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_r_nfe_infunidcarga.ctinfnfe_id,0) > 0
      and nvl(est_row_r_nfe_infunidcarga.ctinfunidcarga_id,0) > 0
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select rctinfnfectinfunidcarga_seq.nextval
           into est_row_r_nfe_infunidcarga.id
           from dual;
         --
         insert into r_ctinfnfe_ctinfunidcarga ( id
                                               , ctinfnfe_id
                                               , ctinfunidcarga_id
                                               )
                                        values ( est_row_r_nfe_infunidcarga.id
                                               , est_row_r_nfe_infunidcarga.ctinfnfe_id
                                               , est_row_r_nfe_infunidcarga.ctinfunidcarga_id
                                               );
         --
      else
         --
         vn_fase := 99.3;
         --
         update r_ctinfnfe_ctinfunidcarga set ctinfnfe_id        = est_row_r_nfe_infunidcarga.ctinfnfe_id
                                            , ctinfunidcarga_id  = est_row_r_nfe_infunidcarga.ctinfunidcarga_id
          where id = est_row_r_nfe_infunidcarga.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_r_nfe_infunidcarga fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_r_nfe_infunidcarga;

-------------------------------------------------------------------------------------------------------
-- Integra o Relacionamento da NFe com a Unidade de Transporte

procedure pkb_integr_r_nfe_infunidtransp ( est_log_generico              in out nocopy  dbms_sql.number_table
                                         , est_row_r_nfe_infunidtransp   in out nocopy  r_ctinfnfe_ctinfunidtransp%rowtype
                                         , en_conhectransp_id            in             conhec_transp.id%type
                                         , ev_nro_chave_nfe              in             ct_inf_nfe.nro_chave_nfe%type
                                         , en_dm_tp_unid_transp          in             ct_inf_unid_transp.dm_tp_unid_transp%type
                                         , ev_ident_unid_transp          in             ct_inf_unid_transp.ident_unid_transp%type
                                         )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Localiza a NFe
   est_row_r_nfe_infunidtransp.ctinfnfe_id := pk_csf_ct.fkg_ct_inf_nfe_id ( en_conhectransp_id => en_conhectransp_id
                                                                          , ev_nro_chave_nfe   => ev_nro_chave_nfe
                                                                          );
   --
   vn_fase := 2.1;
   --
   if nvl(est_row_r_nfe_infunidtransp.ctinfnfe_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a NFe (Chave de Acesso: ' || ev_nro_chave_nfe || ') para relacionar com a Unidade de Transporte.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   -- 
   vn_fase := 3;
   --
   est_row_r_nfe_infunidtransp.ctinfunidtransp_id := pk_csf_ct.fkg_ct_inf_unid_transp_id ( en_conhectransp_id    => en_conhectransp_id
                                                                                         , en_dm_tp_unid_transp  => en_dm_tp_unid_transp
                                                                                         , ev_ident_unid_transp  => ev_ident_unid_transp
                                                                                         );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_r_nfe_infunidtransp.ctinfunidtransp_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Unidade de Transporte (Tipo da Unidade de Transporte: ' || en_dm_tp_unid_transp || 
                         ' Identificação da Unidade de Transporte: ' || ev_ident_unid_transp || ') para relacionar com a Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                         , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_r_nfe_infunidtransp.ctinfnfe_id,0) > 0
      and nvl(est_row_r_nfe_infunidtransp.ctinfunidtransp_id,0) > 0
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select rctinfnfectinfunidtransp_seq.nextval
           into est_row_r_nfe_infunidtransp.id
           from dual;
         --
         insert into r_ctinfnfe_ctinfunidtransp ( id
                                                , ctinfnfe_id
                                                , ctinfunidtransp_id
                                                )
                                         values ( est_row_r_nfe_infunidtransp.id
                                                , est_row_r_nfe_infunidtransp.ctinfnfe_id
                                                , est_row_r_nfe_infunidtransp.ctinfunidtransp_id
                                                );
         --
      else
         --
         vn_fase := 99.3;
         --
         update r_ctinfnfe_ctinfunidtransp set ctinfnfe_id         = est_row_r_nfe_infunidtransp.ctinfnfe_id
                                             , ctinfunidtransp_id  = est_row_r_nfe_infunidtransp.ctinfunidtransp_id
          where id = est_row_r_nfe_infunidtransp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_r_nfe_infunidtransp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_r_nfe_infunidtransp;

-------------------------------------------------------------------------------------------------------
-- Integra o Relacionamento da Nota Fiscal com a Unidade de Carga

procedure pkb_integr_r_nf_infunidcarga ( est_log_generico            in out nocopy  dbms_sql.number_table
                                       , est_row_r_nf_infunidcarga   in out nocopy  r_ctinfnf_ctinfunidcarga%rowtype
                                       , en_conhectransp_id          in             conhec_transp.id%type
                                       , ev_cod_mod_nf               in             mod_fiscal.cod_mod%type
                                       , ev_serie_nf                 in             ct_inf_nf.serie%type
                                       , en_nro_nf                   in             ct_inf_nf.nro_nf%type
                                       , en_dm_tp_unid_carga         in             ct_inf_unid_carga.dm_tp_unid_carga%type
                                       , ev_ident_unid_carga         in             ct_inf_unid_carga.ident_unid_carga%type
                                       )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 2;
   -- recupera o ID a NF do CTe
   est_row_r_nf_infunidcarga.ctinfnf_id := pk_csf_ct.fkg_ct_inf_nf_id ( en_conhectransp_id => en_conhectransp_id
                                                                      , ev_cod_mod_nf      => ev_cod_mod_nf
                                                                      , ev_serie_nf        => ev_serie_nf
                                                                      , en_nro_nf          => en_nro_nf
                                                                      );
   --
   vn_fase := 2.1;
   --
   if nvl(est_row_r_nf_infunidcarga.ctinfnf_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Nota Fiscal (Modelo: ' || ev_cod_mod_nf || ' Serie: ' || ev_serie_nf || ' Número: ' || en_nro_nf || ') para relacionar com a Unidade de Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_r_nf_infunidcarga.ctinfunidcarga_id := pk_csf_ct.fkg_ct_inf_unid_carga_id ( en_conhectransp_id   => en_conhectransp_id
                                                                                     , en_dm_tp_unid_carga  => en_dm_tp_unid_carga
                                                                                     , ev_ident_unid_carga  => ev_ident_unid_carga
                                                                                     );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_r_nf_infunidcarga.ctinfunidcarga_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Unidade de Carga (Tipo da Unidade de Carga: ' || en_dm_tp_unid_carga ||
                         ' Identificação da Unidade de Carga: ' || ev_ident_unid_carga || ') para relacionar com a Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_r_nf_infunidcarga.ctinfnf_id,0) > 0
      and nvl(est_row_r_nf_infunidcarga.ctinfunidcarga_id,0) > 0
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select rctinfnfctinfunidcarga_seq.nextval
           into est_row_r_nf_infunidcarga.id
           from dual;
         --
         insert into r_ctinfnf_ctinfunidcarga ( id
                                              , ctinfnf_id
                                              , ctinfunidcarga_id
                                              )
                                       values ( est_row_r_nf_infunidcarga.id
                                              , est_row_r_nf_infunidcarga.ctinfnf_id
                                              , est_row_r_nf_infunidcarga.ctinfunidcarga_id
                                              );
         --
      else
         --
         vn_fase := 99.3;
         --
         update r_ctinfnf_ctinfunidcarga set ctinfnf_id         = est_row_r_nf_infunidcarga.ctinfnf_id
                                           , ctinfunidcarga_id  = est_row_r_nf_infunidcarga.ctinfunidcarga_id
          where id = est_row_r_nf_infunidcarga.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_r_nf_infunidcarga fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_r_nf_infunidcarga;

-------------------------------------------------------------------------------------------------------
-- Integra o Relacionamento da Nota Fiscal com a Unidade de Transporte

procedure pkb_integr_r_nf_infunidtransp ( est_log_generico            in out nocopy  dbms_sql.number_table
                                        , est_row_r_nf_infunidtransp  in out nocopy  r_ctinfnf_ctinfunidtransp%rowtype
                                        , en_conhectransp_id          in             conhec_transp.id%type
                                        , ev_cod_mod_nf               in             mod_fiscal.cod_mod%type
                                        , ev_serie_nf                 in             ct_inf_nf.serie%type
                                        , en_nro_nf                   in             ct_inf_nf.nro_nf%type
                                        , en_dm_tp_unid_transp        in             ct_inf_unid_transp.dm_tp_unid_transp%type
                                        , ev_ident_unid_transp        in             ct_inf_unid_transp.ident_unid_transp%type
                                        )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 2;
   --
   -- recupera o ID a NF do CTe
   est_row_r_nf_infunidtransp.ctinfnf_id := pk_csf_ct.fkg_ct_inf_nf_id ( en_conhectransp_id => en_conhectransp_id
                                                                       , ev_cod_mod_nf      => ev_cod_mod_nf
                                                                       , ev_serie_nf        => ev_serie_nf
                                                                       , en_nro_nf          => en_nro_nf
                                                                       );
   --
   vn_fase := 2.1;
   --
   if nvl(est_row_r_nf_infunidtransp.ctinfnf_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Nota Fiscal (Modelo: ' || ev_cod_mod_nf || ' Serie: ' || ev_serie_nf || ' Número: ' || en_nro_nf || ') para relacionar com a Unidade de Transporte.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_r_nf_infunidtransp.ctinfunidtransp_id := pk_csf_ct.fkg_ct_inf_unid_transp_id ( en_conhectransp_id    => en_conhectransp_id
                                                                                        , en_dm_tp_unid_transp  => en_dm_tp_unid_transp
                                                                                        , ev_ident_unid_transp  => ev_ident_unid_transp
                                                                                        );
   --
   vn_fase := 3.1;
   --
   if nvl(est_row_r_nf_infunidtransp.ctinfunidtransp_id,0) <= 0 then
      --
      gv_mensagem_log := 'Não localizada a Unidade de Transporte (Tipo da Unidade de Transporte: ' || en_dm_tp_unid_transp || 
                         ' Identificação da Unidade de Transporte: ' || ev_ident_unid_transp || ') para relacionar com a Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_r_nf_infunidtransp.ctinfnf_id,0) > 0
      and nvl(est_row_r_nf_infunidtransp.ctinfunidtransp_id,0) > 0
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select rctinfnfctinfunidtransp_seq.nextval
           into est_row_r_nf_infunidtransp.id
           from dual;
         --
         insert into r_ctinfnf_ctinfunidtransp ( id
                                               , ctinfnf_id
                                               , ctinfunidtransp_id
                                               )
                                        values ( est_row_r_nf_infunidtransp.id
                                               , est_row_r_nf_infunidtransp.ctinfnf_id
                                               , est_row_r_nf_infunidtransp.ctinfunidtransp_id
                                               );
         --
      else
         --
         vn_fase := 99.3;
         --
         update r_ctinfnf_ctinfunidtransp set ctinfnf_id          = est_row_r_nf_infunidtransp.ctinfnf_id
                                            , ctinfunidtransp_id  = est_row_r_nf_infunidtransp.ctinfunidtransp_id
          where id = est_row_r_nf_infunidtransp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_r_nf_infunidtransp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_r_nf_infunidtransp;

-------------------------------------------------------------------------------------------------------
-- Integra os Lacres das Unidades de Carga
procedure pkb_integr_ct_ct_iuc_lacre ( est_log_generico         in out nocopy  dbms_sql.number_table
                                     , est_row_ct_iuc_lacre     in out nocopy  ct_inf_unid_carga_lacre%rowtype
                                     , en_conhectransp_id       in             conhec_transp.id%type
                                     )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_iuc_lacre.ctinfunidcarga_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado a Unidade de Carga para o Lacre.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_ct_iuc_lacre.nro_lacre := trim( pk_csf.fkg_converte(est_row_ct_iuc_lacre.nro_lacre) );
   --
   vn_fase := 2.1;
   --
   if est_row_ct_iuc_lacre.nro_lacre is null then
      --
      gv_mensagem_log := 'O "Número do lacre" da Unidade de Carga não pode ser nulo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_ct_iuc_lacre.ctinfunidcarga_id,0) > 0
      and est_row_ct_iuc_lacre.nro_lacre is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctinfunidcargalacre_seq.nextval
           into est_row_ct_iuc_lacre.id
           from dual;
         --
         insert into ct_inf_unid_carga_lacre ( id
                                             , ctinfunidcarga_id
                                             , nro_lacre
                                             )
                                      values ( est_row_ct_iuc_lacre.id
                                             , est_row_ct_iuc_lacre.ctinfunidcarga_id
                                             , est_row_ct_iuc_lacre.nro_lacre
                                             );
         --
      else
         --
         update ct_inf_unid_carga_lacre set nro_lacre = est_row_ct_iuc_lacre.nro_lacre
          where id = est_row_ct_iuc_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_ct_iuc_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_ct_iuc_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações das Unidades de Carga
procedure pkb_integr_ct_inf_unid_carga ( est_log_generico               in out nocopy  dbms_sql.number_table
                                       , est_row_ct_inf_unid_carga      in out nocopy  ct_inf_unid_carga%rowtype
                                       )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_inf_unid_carga.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_inf_unid_carga.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para a Unidades de Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if nvl(est_row_ct_inf_unid_carga.dm_tp_unid_carga,0) not in (1, 2, 3, 4) then
      --
      gv_mensagem_log := 'O "Tipo da Unidade de Carga" da Unidades de Carga esta inválido (' || est_row_ct_inf_unid_carga.dm_tp_unid_carga || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_ct_inf_unid_carga.ident_unid_carga := trim( pk_csf.fkg_converte(est_row_ct_inf_unid_carga.ident_unid_carga) );
   --
   vn_fase := 3.1;
   --
   if est_row_ct_inf_unid_carga.ident_unid_carga is null then
      --
      gv_mensagem_log := 'O "Identificação da Unidade de Carga" da Unidades de Carga não pode ser nula.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(est_row_ct_inf_unid_carga.qtde_rat_tot,0) < 0 then
      --
      gv_mensagem_log := 'O "Quantidade rateada (Peso,Volume)" da Unidades de Carga não pode ser negativa (' || est_row_ct_inf_unid_carga.qtde_rat_tot || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_ct_inf_unid_carga.conhectransp_id,0) > 0
      and nvl(est_row_ct_inf_unid_carga.dm_tp_unid_carga,0) in (1, 2, 3, 4)
      and est_row_ct_inf_unid_carga.ident_unid_carga is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctinfunidcarga_seq.nextval
           into est_row_ct_inf_unid_carga.id
           from dual;
         --
         insert into ct_inf_unid_carga ( id
                                       , conhectransp_id
                                       , dm_tp_unid_carga
                                       , ident_unid_carga
                                       , qtde_rat_tot
                                       )
                                values ( est_row_ct_inf_unid_carga.id
                                       , est_row_ct_inf_unid_carga.conhectransp_id
                                       , est_row_ct_inf_unid_carga.dm_tp_unid_carga
                                       , est_row_ct_inf_unid_carga.ident_unid_carga
                                       , est_row_ct_inf_unid_carga.qtde_rat_tot
                                       );
         --
      else
         --
         vn_fase := 99.3;
         --
         update ct_inf_unid_carga set dm_tp_unid_carga  = est_row_ct_inf_unid_carga.dm_tp_unid_carga
                                    , ident_unid_carga  = est_row_ct_inf_unid_carga.ident_unid_carga
                                    , qtde_rat_tot      = est_row_ct_inf_unid_carga.qtde_rat_tot
          where id = est_row_ct_inf_unid_carga.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_inf_unid_carga fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_inf_unid_carga;

-------------------------------------------------------------------------------------------------------
-- Integra os Lacres das Unidades de Carga
procedure pkb_integr_ct_iut_carga_lacre ( est_log_generico               in out nocopy  dbms_sql.number_table
                                        , est_row_ct_iut_carga_lacre     in out nocopy  ct_iut_carga_lacre%rowtype
                                        , en_conhectransp_id             in             conhec_transp.id%type
                                        )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_iut_carga_lacre.ctinfunidtranspcarga_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado a Carga de Unidades de Transporte para o Lacre.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_ct_iut_carga_lacre.nro_lacre := trim( pk_csf.fkg_converte(est_row_ct_iut_carga_lacre.nro_lacre) );
   --
   vn_fase := 2.1;
   --
   if est_row_ct_iut_carga_lacre.nro_lacre is null then
      --
      gv_mensagem_log := 'O "Número do lacre" de Carga de Unidades de Transporte não pode ser nulo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_ct_iut_carga_lacre.ctinfunidtranspcarga_id,0) > 0
      and est_row_ct_iut_carga_lacre.nro_lacre is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctiutcargalacre_seq.nextval
           into est_row_ct_iut_carga_lacre.id
           from dual;
         --
         insert into ct_iut_carga_lacre ( id
                                        , ctinfunidtranspcarga_id
                                        , nro_lacre
                                        )
                                 values ( est_row_ct_iut_carga_lacre.id
                                        , est_row_ct_iut_carga_lacre.ctinfunidtranspcarga_id
                                        , est_row_ct_iut_carga_lacre.nro_lacre
                                        );
         --
      else
         --
         update ct_iut_carga_lacre set nro_lacre = est_row_ct_iut_carga_lacre.nro_lacre
          where id = est_row_ct_iut_carga_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_iut_carga_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_iut_carga_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra os Cargas das Unidades de Transporte
procedure pkb_integr_ct_iut_carga ( est_log_generico         in out nocopy  dbms_sql.number_table
                                  , est_row_ct_iut_carga     in out nocopy  ct_inf_unid_transp_carga%rowtype
                                  , en_conhectransp_id       in             Conhec_Transp.id%TYPE
                                  )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_iut_carga.ctinfunidtransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado a Unidades de Transporte para a Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if nvl(est_row_ct_iut_carga.dm_tp_unid_carga,0) not in (1, 2, 3, 4) then
      --
      gv_mensagem_log := 'O "Tipo da Unidade de Carga" de Unidades de Transporte para a Carga esta inválido (' || est_row_ct_iut_carga.dm_tp_unid_carga || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_ct_iut_carga.ident_unid_carga := trim( pk_csf.fkg_converte(est_row_ct_iut_carga.ident_unid_carga) );
   --
   vn_fase := 3.1;
   --
   if est_row_ct_iut_carga.ident_unid_carga is null then
      --
      gv_mensagem_log := 'O "Identificação da Unidade de Carga" de Unidades de Transporte para a Carga não pode ser nulo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(est_row_ct_iut_carga.qtde_rat,0) < 0 then
      --
      gv_mensagem_log := 'O "Quantidade rateada (Peso,Volume)" de Unidades de Transporte para a Carga não pode ser negativo (' || est_row_ct_iut_carga.qtde_rat || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_ct_iut_carga.ctinfunidtransp_id,0) > 0 
      and nvl(est_row_ct_iut_carga.dm_tp_unid_carga,0) in (1, 2, 3, 4)
      and est_row_ct_iut_carga.ident_unid_carga is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_Fase := 99.2;
         --
         select ctinfunidtranspcarga_seq.nextval
           into est_row_ct_iut_carga.id
           from dual;
         --
         insert into ct_inf_unid_transp_carga ( id
                                              , ctinfunidtransp_id
                                              , dm_tp_unid_carga
                                              , ident_unid_carga
                                              , qtde_rat
                                              )
                                       values ( est_row_ct_iut_carga.id
                                              , est_row_ct_iut_carga.ctinfunidtransp_id
                                              , est_row_ct_iut_carga.dm_tp_unid_carga
                                              , est_row_ct_iut_carga.ident_unid_carga
                                              , est_row_ct_iut_carga.qtde_rat
                                              );
         --
      else
         --
         vn_Fase := 99.3;
         --
         update ct_inf_unid_transp_carga set dm_tp_unid_carga  = est_row_ct_iut_carga.dm_tp_unid_carga
                                           , ident_unid_carga  = est_row_ct_iut_carga.ident_unid_carga
                                           , qtde_rat          = est_row_ct_iut_carga.qtde_rat
          where id = est_row_ct_iut_carga.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_iut_carga fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_iut_carga;

-------------------------------------------------------------------------------------------------------
-- Integra os Lacres das Unidades de Transporte
procedure pkb_integr_ct_iut_lacre ( est_log_generico         in out nocopy  dbms_sql.number_table
                                  , est_row_ct_iut_lacre     in out nocopy  ct_inf_unid_transp_lacre%rowtype
                                  , en_conhectransp_id       in             Conhec_Transp.id%TYPE
                                  )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_iut_lacre.ctinfunidtransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado a Unidades de Transporte para o Lacre.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   est_row_ct_iut_lacre.nro_lacre := trim( pk_csf.fkg_converte(est_row_ct_iut_lacre.nro_lacre) );
   --
   vn_fase := 2.1;
   --
   if est_row_ct_iut_lacre.nro_lacre is null then
      --
      gv_mensagem_log := 'O "Número do lacre" de Unidades de Transporte para o Lacre não pode ser nulo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_ct_iut_lacre.ctinfunidtransp_id,0) > 0 
      and est_row_ct_iut_lacre.nro_lacre is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctinfunidtransplacre_seq.nextval
           into est_row_ct_iut_lacre.id
           from dual;
         --
         insert into ct_inf_unid_transp_lacre ( id
                                              , ctinfunidtransp_id
                                              , nro_lacre
                                              )
                                       values ( ctinfunidtransplacre_seq.nextval --id
                                              , est_row_ct_iut_lacre.ctinfunidtransp_id
                                              , est_row_ct_iut_lacre.nro_lacre
                                              );
         --
      else
         --
         vn_fase := 99.3;
         --
         update ct_inf_unid_transp_lacre set nro_lacre = est_row_ct_iut_lacre.nro_lacre
          where id = ct_inf_unid_transp_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_iut_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_iut_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações das Unidades de Transporte
procedure pkb_integr_ct_inf_unid_transp ( est_log_generico               in out nocopy  dbms_sql.number_table
                                        , est_row_ct_inf_unid_transp     in out nocopy  ct_inf_unid_transp%rowtype
                                        )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_inf_unid_transp.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_inf_unid_transp.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro de Informações das Unidades de Transporte.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if nvl(est_row_ct_inf_unid_transp.dm_tp_unid_transp,0) not in (1, 2, 3, 4, 5, 6, 7) then
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo da Unidade de Transporte" de Informações das Unidades de Transporte (' ||
                         est_row_ct_inf_unid_transp.dm_tp_unid_transp || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_ct_inf_unid_transp.ident_unid_transp := trim( pk_csf.fkg_converte(est_row_ct_inf_unid_transp.ident_unid_transp) );
   --
   vn_fase := 3.1;
   --
   if est_row_ct_inf_unid_transp.ident_unid_transp is null then
      --
      gv_mensagem_log := 'A "Identificação da Unidade de Transporte" de Informações das Unidades de Transporte não pode ser nula.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(est_row_ct_inf_unid_transp.qtde_rat_tot,0) < 0 then
      --
      gv_mensagem_log := 'A "Quantidade total rateada (Peso,Volume)" de Informações das Unidades de Transporte não pode ser negativa (' || nvl(est_row_ct_inf_unid_transp.qtde_rat_tot,0) || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_ct_inf_unid_transp.conhectransp_id,0) > 0
      and nvl(est_row_ct_inf_unid_transp.dm_tp_unid_transp,0) in (1, 2, 3, 4, 5, 6, 7)
      and est_row_ct_inf_unid_transp.ident_unid_transp is not null
      then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctinfunidtransp_seq.nextval
           into est_row_ct_inf_unid_transp.id
           from dual;
         --
         insert into ct_inf_unid_transp ( id
                                        , conhectransp_id
                                        , dm_tp_unid_transp
                                        , ident_unid_transp
                                        , qtde_rat_tot
                                        )
                                 values ( est_row_ct_inf_unid_transp.id
                                        , est_row_ct_inf_unid_transp.conhectransp_id
                                        , est_row_ct_inf_unid_transp.dm_tp_unid_transp
                                        , est_row_ct_inf_unid_transp.ident_unid_transp
                                        , est_row_ct_inf_unid_transp.qtde_rat_tot
                                        );
         --
      else
         --
         vn_fase := 99.3;
         --
         update ct_inf_unid_transp set dm_tp_unid_transp  = est_row_ct_inf_unid_transp.dm_tp_unid_transp
                                     , ident_unid_transp  = est_row_ct_inf_unid_transp.ident_unid_transp
                                     , qtde_rat_tot       = est_row_ct_inf_unid_transp.qtde_rat_tot
          where id = est_row_ct_inf_unid_transp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_inf_unid_transp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_inf_unid_transp;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos demais documentos.
procedure pkb_integr_ct_inf_outro ( est_log_generico         in out nocopy  dbms_sql.number_table
                                  , est_row_ct_inf_outro     in out nocopy  ct_inf_outro%rowtype
                                  )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_inf_outro.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_inf_outro.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro das Informações dos demais documentos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Tipo de documento originário atende o tipo '00'ou '99'.
   --
   if nvl(trim(pk_csf.fkg_converte(est_row_ct_inf_outro.dm_tipo_doc)), '999') not in ('00', '10', '99') then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de documento originário" das Informações dos demais documentos (' ||
                         est_row_ct_inf_outro.dm_tipo_doc || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Data de Emissão está nulo.
   --
   if est_row_ct_inf_outro.dt_emissao is not null
      and est_row_ct_inf_outro.dt_emissao < (sysdate - 360)
      then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" das Informações dos demais documentos (' ||
                         est_row_ct_inf_outro.dt_emissao || ') não pode ser menor que 1 ano atrás.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Valor do documento fiscal está negativo caso ele seja informado.
   --
   if nvl(est_row_ct_inf_outro.vl_doc_fisc, 0) < 0  then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do documento fiscal" das Informações dos demais documentos (' ||
                         est_row_ct_inf_outro.vl_doc_fisc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   est_row_ct_inf_outro.descr_outros := trim(pk_csf.fkg_converte(est_row_ct_inf_outro.descr_outros));
   --
   if est_row_ct_inf_outro.dm_tipo_doc = '99'
      and est_row_ct_inf_outro.descr_outros is null
      then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O campo "Descrição" das Informações dos demais documentos deve ser informado quando o "Tipo de Documento Originário" for 99-Outros.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   est_row_ct_inf_outro.dm_tipo_doc := trim(pk_csf.fkg_converte(est_row_ct_inf_outro.dm_tipo_doc));
   est_row_ct_inf_outro.nro_docto := trim(pk_csf.fkg_converte(est_row_ct_inf_outro.nro_docto));
   --
   vn_fase := 99.1;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_inf_outro.conhectransp_id ) = 1 then
      --
      vn_fase := 99.2;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_inf_outro.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_inf_outro.conhectransp_id, 0) > 0
      and nvl(trim(pk_csf.fkg_converte(est_row_ct_inf_outro.dm_tipo_doc)), '999') in ('00', '10', '99')
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctinfoutro_seq.nextval
           into est_row_ct_inf_outro.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_inf_outro ( id
                                  , conhectransp_id
                                  , dm_tipo_doc
                                  , descr_outros
                                  , nro_docto
                                  , dt_emissao
                                  , vl_doc_fisc
                                  , dt_prev_ent
                                  )
                           values ( est_row_ct_inf_outro.id
                                  , est_row_ct_inf_outro.conhectransp_id
                                  , est_row_ct_inf_outro.dm_tipo_doc
                                  , est_row_ct_inf_outro.descr_outros
                                  , est_row_ct_inf_outro.nro_docto
                                  , est_row_ct_inf_outro.dt_emissao
                                  , est_row_ct_inf_outro.vl_doc_fisc
                                  , est_row_ct_inf_outro.dt_prev_ent
                                  );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_inf_outro set dm_tipo_doc  = est_row_ct_inf_outro.dm_tipo_doc
                               , descr_outros = est_row_ct_inf_outro.descr_outros
                               , nro_docto    = est_row_ct_inf_outro.nro_docto
                               , dt_emissao   = est_row_ct_inf_outro.dt_emissao
                               , vl_doc_fisc  = est_row_ct_inf_outro.vl_doc_fisc
                               , dt_prev_ent  = est_row_ct_inf_outro.dt_prev_ent
          where id = est_row_ct_inf_outro.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_inf_outro fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_inf_outro;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a NFe do Conhec. Transp.
procedure pkb_integr_ct_inf_nfe ( est_log_generico      in out nocopy  dbms_sql.number_table
                                , est_row_ct_inf_nfe    in out nocopy  ct_inf_nfe%rowtype
                                )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_inf_nfe.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_inf_nfe.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro da NFe.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Chave de acesso da NF-e possui tamanho valido.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_inf_nfe.nro_chave_nfe))), 0) <> 44 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de acesso da NF-e" relacionada Conhec. Transp. (' ||
                         est_row_ct_inf_nfe.nro_chave_nfe || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if nvl(est_row_ct_inf_nfe.pin,0) > 0
      and length(est_row_ct_inf_nfe.pin) not between 2 and 9 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O número do "PIN SUFRAMA" da NFe do Conhec. Transp. (' ||
                         est_row_ct_inf_nfe.pin || ') deve conter de 2 a 9 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_inf_nfe.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_inf_nfe.conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_inf_nfe.nro_chave_nfe := trim(pk_csf.fkg_converte(est_row_ct_inf_nfe.nro_chave_nfe));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_inf_nfe.conhectransp_id, 0) > 0
      and est_row_ct_inf_nfe.nro_chave_nfe is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctinfnfe_seq.nextval
           into est_row_ct_inf_nfe.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_inf_nfe ( id
                                , conhectransp_id
                                , nro_chave_nfe
                                , pin
                                , dt_prev_ent
                                )
                         values ( est_row_ct_inf_nfe.id
                                , est_row_ct_inf_nfe.conhectransp_id
                                , est_row_ct_inf_nfe.nro_chave_nfe
                                , est_row_ct_inf_nfe.pin
                                , est_row_ct_inf_nfe.dt_prev_ent
                                );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_inf_nfe set nro_chave_nfe = est_row_ct_inf_nfe.nro_chave_nfe
                             , pin           = est_row_ct_inf_nfe.pin
                             , dt_prev_ent   = est_row_ct_inf_nfe.dt_prev_ent
          where id = est_row_ct_inf_nfe.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_inf_nfe fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  Log_Generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_inf_nfe;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas das NF do Conhecimento de Transporte
procedure pkb_integr_ct_inf_nf ( est_log_generico      in out nocopy  dbms_sql.number_table
                               , est_row_ct_inf_nf     in out nocopy  ct_inf_nf%rowtype
                               , ev_cod_mod            in             Mod_Fiscal.cod_mod%type
                               )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id Log_Generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_inf_nf.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_inf_nf.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro da Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo série está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_inf_nf.serie)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "série" da Nota Fiscal do Conhec. Transp. não informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo série está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_inf_nf.nro_nf)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número" da Nota Fiscal do Conhec. Transp. não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Data de Emissão está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_inf_nf.dt_emissao)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" da Nota Fiscal do Conhec. Transp. não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Valor da Base de Cálculo do ICMS está nulo.
   --
   if nvl(est_row_ct_inf_nf.vl_bc_icms, -1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Base de Cálculo do ICMS" da Nota Fiscal do Conhec. Transp. não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Valor da Base de Cálculo do ICMS está nulo.
   --
   if nvl(est_row_ct_inf_nf.vl_icms, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do ICMS" da Nota Fiscal do Conhec. Transp. não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Valor da Base de Cálculo do ICMS ST está nulo.
   --
   if nvl(est_row_ct_inf_nf.vl_bc_icmsst, -1) < 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Base de Cálculo do ICMS ST" da Nota Fiscal do Conhec. Transp. não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Valor Total do ICMS ST está nulo.
   --
   if nvl(est_row_ct_inf_nf.vl_icmsst , -1) < 0 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total do ICMS ST" da Nota Fiscal do Conhec. Transp. não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Valor Total dos Produtos está nulo.
   --
   if nvl(est_row_ct_inf_nf.vl_total_prod , -1) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total dos Produtos" da Nota Fiscal do Conhec. Transp. não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Valor Total da NF está nulo.
   --
   if nvl(est_row_ct_inf_nf.vl_total_nf , -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total" da Nota Fiscal do Conhec. Transp. não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo CFOP está nulo.
   --
   if nvl(est_row_ct_inf_nf.cfop , 0) <= 0 then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CFOP Predominante" da Nota Fiscal do Conhec. Transp. não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo CFOP existe na tabela de CFOP do sistema.
   --
   if pk_csf.fkg_cfop_id ( en_cd  => est_row_ct_inf_nf.cfop ) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CFOP Predominante" da Nota Fiscal do Conhec. Transp. (' || est_row_ct_inf_nf.cfop  || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   -- Valida se o campo Peso total em Kg está negativo caso ele seja informado.
   --
   if nvl(est_row_ct_inf_nf.peso_kg, 0) < 0 then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Peso total em Kg" relativo a(s) NF(s) do Conhec. Transp. (' || est_row_ct_inf_nf.peso_kg  || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14;
   -- Valida se o campo PIN SUFRAMA está negativo caso ele seja informado.
   --
   if nvl(est_row_ct_inf_nf.pin,0) > 0
      and length(est_row_ct_inf_nf.pin) not between 2 and 9 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O número do "PIN SUFRAMA" da Nota Fiscal do Conhec. Transp. (' ||
                         est_row_ct_inf_nf.pin || ') deve conter de 2 a 9 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15;
   -- Valida o modelo da Nota Fiscal
   est_row_ct_inf_nf.modfiscal_id := pk_csf.fkg_Mod_Fiscal_id ( ev_cod_mod => lpad(trim(ev_cod_mod), 2, '0') );
   --
   vn_fase := 15.1;
   --
   if nvl(est_row_ct_inf_nf.modfiscal_id,0) <= 0 then
      --
      vn_fase := 15.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Modelo da Nota Fiscal" da Nota Fiscal do Conhec. Transp. (' || ev_cod_mod  || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15.3;
   --
   if trim(ev_cod_mod) not in ('01', '04') then
      --
      vn_fase := 15.4;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Modelo da Nota Fiscal" da Nota Fiscal do Conhec. Transp. ('
                         || ev_cod_mod  
                         || ') está inválido, apenas são válidos os modelos: 01 - NF Modelo 01/1A e Avulsa e 04 - NF de Produtor';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_inf_nf.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_inf_nf.conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_inf_nf.nro_roma_nf   := trim(pk_csf.fkg_converte(est_row_ct_inf_nf.nro_roma_nf));
   est_row_ct_inf_nf.nro_ped_nf    := trim(pk_csf.fkg_converte(est_row_ct_inf_nf.nro_ped_nf));
   est_row_ct_inf_nf.serie         := trim(pk_csf.fkg_converte(est_row_ct_inf_nf.serie));
   est_row_ct_inf_nf.nro_nf        := trim(pk_csf.fkg_converte(est_row_ct_inf_nf.nro_nf));
   est_row_ct_inf_nf.vl_bc_icms    := nvl(est_row_ct_inf_nf.vl_bc_icms,0);
   est_row_ct_inf_nf.vl_icms       := nvl(est_row_ct_inf_nf.vl_icms,0);
   est_row_ct_inf_nf.vl_bc_icmsst  := nvl(est_row_ct_inf_nf.vl_bc_icmsst,0);
   est_row_ct_inf_nf.vl_icmsst     := nvl(est_row_ct_inf_nf.vl_icmsst,0);
   est_row_ct_inf_nf.vl_total_prod := nvl(est_row_ct_inf_nf.vl_total_prod,0);
   est_row_ct_inf_nf.vl_total_nf   := nvl(est_row_ct_inf_nf.vl_total_nf,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_inf_nf.conhectransp_id, 0) > 0
      and est_row_ct_inf_nf.serie is not null
      and est_row_ct_inf_nf.nro_nf is not null
      and est_row_ct_inf_nf.dt_emissao is not null
      and nvl(est_row_ct_inf_nf.vl_bc_icms, -1) >= 0
      and nvl(est_row_ct_inf_nf.vl_icms, -1) >= 0
      and nvl(est_row_ct_inf_nf.vl_bc_icmsst, -1) >= 0
      and nvl(est_row_ct_inf_nf.vl_icmsst, -1) >= 0
      and nvl(est_row_ct_inf_nf.vl_total_prod, -1) >= 0
      and nvl(est_row_ct_inf_nf.vl_total_nf, -1) >= 0
      and nvl(est_row_ct_inf_nf.cfop, 0) > 0
      and nvl(est_row_ct_inf_nf.modfiscal_id,0) > 0
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctinfnf_seq.nextval
           into est_row_ct_inf_nf.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_inf_nf ( id
                               , conhectransp_id
                               , nro_roma_nf
                               , nro_ped_nf
                               , modfiscal_id
                               , serie
                               , nro_nf
                               , dt_emissao
                               , vl_bc_icms
                               , vl_icms
                               , vl_bc_icmsst
                               , vl_icmsst
                               , vl_total_prod
                               , vl_total_nf
                               , cfop
                               , peso_kg
                               , pin
                               , dt_prev_ent
                               )
                        values ( est_row_ct_inf_nf.id
                               , est_row_ct_inf_nf.conhectransp_id
                               , est_row_ct_inf_nf.nro_roma_nf
                               , est_row_ct_inf_nf.nro_ped_nf
                               , est_row_ct_inf_nf.modfiscal_id
                               , est_row_ct_inf_nf.serie
                               , est_row_ct_inf_nf.nro_nf
                               , est_row_ct_inf_nf.dt_emissao
                               , est_row_ct_inf_nf.vl_bc_icms
                               , est_row_ct_inf_nf.vl_icms
                               , est_row_ct_inf_nf.vl_bc_icmsst
                               , est_row_ct_inf_nf.vl_icmsst
                               , est_row_ct_inf_nf.vl_total_prod
                               , est_row_ct_inf_nf.vl_total_nf
                               , est_row_ct_inf_nf.cfop
                               , est_row_ct_inf_nf.peso_kg
                               , est_row_ct_inf_nf.pin
                               , est_row_ct_inf_nf.dt_prev_ent
                               );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_inf_nf set nro_roma_nf   = est_row_ct_inf_nf.nro_roma_nf
                            , nro_ped_nf    = est_row_ct_inf_nf.nro_ped_nf
                            , serie         = est_row_ct_inf_nf.serie
                            , nro_nf        = est_row_ct_inf_nf.nro_nf
                            , dt_emissao    = est_row_ct_inf_nf.dt_emissao
                            , vl_bc_icms    = est_row_ct_inf_nf.vl_bc_icms
                            , vl_icms       = est_row_ct_inf_nf.vl_icms
                            , vl_bc_icmsst  = est_row_ct_inf_nf.vl_bc_icmsst
                            , vl_icmsst     = est_row_ct_inf_nf.vl_icmsst
                            , vl_total_prod = est_row_ct_inf_nf.vl_total_prod
                            , vl_total_nf   = est_row_ct_inf_nf.vl_total_nf
                            , cfop          = est_row_ct_inf_nf.cfop
                            , peso_kg       = est_row_ct_inf_nf.peso_kg
                            , pin           = est_row_ct_inf_nf.pin
                            , modfiscal_id  = est_row_ct_inf_nf.modfiscal_id
                            , dt_prev_ent   = est_row_ct_inf_nf.dt_prev_ent
          where id = est_row_ct_inf_nf.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_inf_nf fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_inf_nf;

-------------------------------------------------------------------------------------------------------
-- Integra as informações de Pessoas Autorizadas a fazer download do XML na Sefaz
procedure pkb_integr_ct_aut_xml ( est_log_generico      in out nocopy  dbms_sql.number_table
                                , est_row_ct_aut_xml    in out nocopy  ct_aut_xml%rowtype
                                )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_aut_xml.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aut_xml.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro de Pessoas Autorizadas a fazer download do XML na Sefaz.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida informações do CNPJ
   --
   if trim(est_row_ct_aut_xml.cnpj) = '00000000000000'
      or trim(est_row_ct_aut_xml.cnpj) = '0'
      or trim(est_row_ct_aut_xml.cnpj) = 'EXTERIOR'
      then
      est_row_ct_aut_xml.cnpj := null;
   end if;
   --
   vn_Fase := 3.1;
   -- valida se CNPJ é numerico caso ele seja informado.
   if trim(est_row_ct_aut_xml.cnpj) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ct_aut_xml.cnpj ) = false then
      --
      gv_mensagem_log := 'O "CNPJ do Participante para download na Sefaz" ('||est_row_ct_aut_xml.cnpj||
                         ') deve conter somente números considerando os zeros à esquerda.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   --
   -- Valida o CNPJ
   if trim(est_row_ct_aut_xml.cnpj) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ct_aut_xml.cnpj ) = true
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_ct_aut_xml.cnpj), 0) = 0 then
      --
      gv_mensagem_log := 'O "CNPJ do Participante para download na Sefaz" ('||est_row_ct_aut_xml.cnpj||') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida Informações do CPF
   --
   if trim(est_row_ct_aut_xml.cpf) = '00000000000'
      or trim(est_row_ct_aut_xml.cpf) = '0'
      or trim(est_row_ct_aut_xml.cpf) = 'EXTERIOR'
      then
      est_row_ct_aut_xml.cpf := null;
   end if;
   --
   vn_fase := 4.1;
   --
   -- valida se CPF é numerico caso ele seja informado.
   if trim(est_row_ct_aut_xml.cpf) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ct_aut_xml.cpf ) = false then
      --
      gv_mensagem_log := 'O "CPF do Participante para download na Sefaz" ('||est_row_ct_aut_xml.cpf||
                         ') deve conter somente números considerando os zeros à esquerda.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4.2;
   --
   -- Valida o CPF
   if trim(est_row_ct_aut_xml.cpf) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ct_aut_xml.cpf ) = true
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_ct_aut_xml.cpf), 0) = 0 then
      --
      gv_mensagem_log := 'O "CPF do Participante para download na Sefaz" ('||est_row_ct_aut_xml.cpf||') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if trim(est_row_ct_aut_xml.cpf) is not null
      and trim(est_row_ct_aut_xml.cnpj) is not null
      then
      --
      gv_mensagem_log := 'No registro de Pessoas Autorizadas a fazer Download do XML na Sefaz, não informar o CPF e CNPJ ao mesmo tempo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5.1;
   --
   if trim(est_row_ct_aut_xml.cpf) is null
      and trim(est_row_ct_aut_xml.cnpj) is null
      then
      --
      gv_mensagem_log := 'No registro de Pessoas Autorizadas a fazer Download do XML na Sefaz, deve ser informado um CPF ou um CNPJ.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não tem registro de Log e o Tipo de Integração é 1 (valida e insere)
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_aut_xml.conhectransp_id ) = 1  then
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_aut_xml.conhectransp_id;
      --
   end if;
   --
   est_row_ct_aut_xml.cnpj  := trim(est_row_ct_aut_xml.cnpj);
   est_row_ct_aut_xml.cpf   := trim(est_row_ct_aut_xml.cpf);
   --
   vn_fase := 99.1;
   --
   if nvl(est_row_ct_aut_xml.conhectransp_id,0) > 0
      then
      --
      if nvl(gn_tipo_integr,0) = 1 then -- Insere
         --
         vn_fase := 99.2;
         --
         select ctautxml_seq.Nextval
           into est_row_ct_aut_xml.id
           from dual;
         --
         insert into ct_aut_xml ( id
                                , conhectransp_id
                                , cnpj
                                , cpf
                                )
                         values ( est_row_ct_aut_xml.id
                                , est_row_ct_aut_xml.conhectransp_id
                                , est_row_ct_aut_xml.cnpj
                                , est_row_ct_aut_xml.cpf
                                );
         --
      else
         -- atualiza
         vn_fase := 99.3;
         --
         update ct_aut_xml set cnpj  = est_row_ct_aut_xml.cnpj
                             , cpf   = est_row_ct_aut_xml.cpf
          where id = est_row_ct_aut_xml.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aut_xml fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aut_xml;

-------------------------------------------------------------------------------------------------------
-- Integra as informações de envio de Impressoras do CTe
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_impr ( est_log_generico in out nocopy dbms_sql.number_table
                                        , est_row_ct_impr  in out nocopy Conhec_Transp_impr%rowtype )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_impr.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_impr.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro de Impressoras do CTe.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if nvl(est_row_ct_impr.dm_tipo_impr,-1) not in ( 1, 2 )
      then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Tipo de Impressora (' || est_row_ct_impr.dm_tipo_impr || ') !';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if trim(est_row_ct_impr.descr_impr) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Impressora do CTe não Informada!';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não tem registro de Log e o Tipo de Integração é 1 (valida e insere)
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_impr.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_impr.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_impr.conhectransp_id,0) > 0
      and nvl(est_row_ct_impr.dm_tipo_impr,-1) in ( 1, 2 )
      and trim(est_row_ct_impr.descr_impr) is not null
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectranspimpr_seq.Nextval
           into est_row_ct_impr.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_impr ( id
                                        , conhectransp_id
                                        , DM_TIPO_IMPR
                                        , DESCR_IMPR
                                        )
                                 values ( est_row_ct_impr.id
                                        , est_row_ct_impr.conhectransp_id
                                        , est_row_ct_impr.DM_TIPO_IMPR
                                        , est_row_ct_impr.DESCR_IMPR
                                        );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_impr set DM_TIPO_IMPR      = est_row_ct_impr.DM_TIPO_IMPR
                                     , DESCR_IMPR        = est_row_ct_impr.DESCR_IMPR
          where id = est_row_ct_impr.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_impr fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_impr;

-------------------------------------------------------------------------------------------------------
-- Integra as informações de envio de e-mail do CTe
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_email ( est_log_generico in out nocopy dbms_sql.number_table
                                         , est_row_ct_email in out nocopy Conhec_Transp_email%rowtype )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_ct_email.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_email.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro de E-mail.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if nvl(est_row_ct_email.dm_origem,-1) not in (0, 1, 2, 3, 4, 8, 9)
      then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Origem do e-mail esta inválida (' || est_row_ct_email.dm_origem || ') !';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if trim(est_row_ct_email.email) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Email não informado!';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(est_row_ct_email.dm_tipo_anexo,0) not in (1, 2, 3)
      then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Tipo de anexo do e-mail esta inválida (' || est_row_ct_email.dm_tipo_anexo || ') !';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if nvl(est_row_ct_email.dm_st_email,-1) not in (0, 1, 2, 3, 4)
      then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Situação do e-mail esta inválida (' || est_row_ct_email.dm_st_email || ') !';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não tem registro de Log e o Tipo de Integração é 1 (valida e insere)
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_email.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_email.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_email.conhectransp_id,0) > 0
      and nvl(est_row_ct_email.dm_origem,-1) in (0, 1, 2, 3, 4, 8, 9)
      and trim(est_row_ct_email.email) is not null
      and nvl(est_row_ct_email.dm_tipo_anexo,0) in (1, 2, 3)
      and nvl(est_row_ct_email.dm_st_email,-1) in (0, 1, 2, 3, 4)
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectranspemail_seq.Nextval
           into est_row_ct_email.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_email ( id
                                         , conhectransp_id
                                         , dm_origem
                                         , email
                                         , dm_tipo_anexo
                                         , dm_st_email
                                         )
                                  values ( est_row_ct_email.id
                                         , est_row_ct_email.conhectransp_id
                                         , est_row_ct_email.dm_origem
                                         , est_row_ct_email.email
                                         , est_row_ct_email.dm_tipo_anexo
                                         , est_row_ct_email.dm_st_email
                                         );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_email set dm_origem      = est_row_ct_email.dm_origem
                                      , email          = est_row_ct_email.email
                                      , dm_tipo_anexo  = est_row_ct_email.dm_tipo_anexo
                                      , dm_st_email    = est_row_ct_email.dm_st_email
          where id = est_row_ct_email.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_email fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_email;

-------------------------------------------------------------------------------------------------------
-- Integra as informações do detalhamento do CT-e do Tipo de Anulação de Valores - conhec_transp_anul
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_anul ( est_log_generico   in out nocopy  dbms_sql.number_table
                                        , est_row_ct_anul    in out nocopy  Conhec_Transp_Anul%rowtype
                                        , en_conhectransp_id in             Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_anul.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro do tipo Anulação de Valores.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se a Chave de acesso do CT-e original é nula
   if trim(pk_csf.fkg_converte(est_row_ct_anul.nro_chave_cte_anul)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Chave de acesso do CT-e original a ser anulada e substituída" não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

   vn_fase := 3;
   -- Valida se o tamanho da Chave de acesso do CT-e original a ser anulado e substituido está menor que 44 caracteres
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_anul.nro_chave_cte_anul))), 0) <> 44 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O Tamanho da "Chave de acesso do CT-e original a ser anulada e substituída" ('
                         || est_row_ct_anul.nro_chave_cte_anul || ') diferente de 44 dígitos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se a Data de Emissão da Declaração do tomador não contribuinte do ICMS está sendo informada.
   if est_row_ct_anul.dt_emissao is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Data de Emissão da declaração do tomador não contribuinte do ICMS" não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

   vn_fase := 5;
   -- Valida se a Data de Emissão da Declaração do tomador não contribuinte do ICMS é maior que a data atual.
   --Obs: II - na hipótese de o tomador de serviço não ser contribuinte do ICMS:
   --a) o tomador deverá emitir declaração mencionando o número e data de emissão do documento fiscal original, bem como o motivo do erro;
   --b) após receber o documento referido na alínea "a", o prestador de serviço de transporte deverá emitir Conhecimento de Transporte, pelo valor total do serviço, sem destaque do imposto, consignando como natureza da operação "Anulação de valor relativo à prestação de serviço de transporte", informando o número do documento fiscal emitido com erro e o motivo;
   --c) o prestador de serviço de transporte deverá emitir outro Conhecimento de Transporte, referenciando o documento original emitido com erro, consignando a expressão "Este documento está vinculado ao documento fiscal número ... e data ... em virtude de (especificar o motivo do erro)", devendo observar as disposições deste convênio.
   --Leandro mantive a validação de acordo com a Legislação citada acima.
   if est_row_ct_anul.DT_EMISSAO > sysdate then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Data de Emissão da declaração do tomador não contribuinte do ICMS" (' || est_row_ct_anul.DT_EMISSAO || ') está maior que data atual.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não tem registro de Log e o Tipo de Integração é 1 (valida e insere)
   -- então insere a informação referente ao detalhamento do CT-e do tipo Anulação de Valores
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => en_conhectransp_id ) = 1 then
      --
      vn_fase := 99.2;
      --
      update conhec_transp set dm_st_proc = 10
       where id = en_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_anul.conhectransp_id,0) > 0
      and est_row_ct_anul.nro_chave_cte_anul is not null
      and est_row_ct_anul.dt_emissao is not null
      then
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectranspanul_seq.Nextval
           into est_row_ct_anul.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_anul ( id
                                        , conhectransp_id
                                        , nro_chave_cte_anul
                                        , dt_emissao 
                                        )
                                 values ( est_row_ct_anul.id
                                        , est_row_ct_anul.conhectransp_id
                                        , est_row_ct_anul.nro_chave_cte_anul
                                        , est_row_ct_anul.dt_emissao 
                                        );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_anul set nro_chave_cte_anul = est_row_ct_anul.nro_chave_cte_anul
                                     , dt_emissao         = est_row_ct_anul.dt_emissao
          where id = est_row_ct_anul.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_anul fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_anul;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Impostos de complemento
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctcompltado_imp ( est_log_generico   in out nocopy dbms_sql.number_table
                                     , est_row_Imp_ComCt  in out nocopy Ctcompltado_Imp%rowtype
                                     , en_cd_imp          in            Tipo_Imposto.cd%TYPE
                                     , ev_cod_st          in            Cod_ST.cod_st%TYPE
                                     , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_Imp_ComCt.conhectranspcompltado_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Detalhamento do Conhec. Transp. Complementado para registro dos Impostos de Complemento.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --Busca códigos do impostos;
   if  trim(en_cd_imp) is not null then
      --
      vn_fase := 2.1;
      --
      est_row_Imp_ComCt.tipoimp_id := pk_csf.fkg_Tipo_Imposto_id ( en_cd  => en_cd_imp);
      --
   end if;
   --
   vn_fase := 3;
   --Busca códigos do ST;
   if nvl(est_row_Imp_ComCt.tipoimp_id, -1) > 0
      and trim(ev_cod_st) is not null then
      --
       vn_fase := 3.1;
      --
       est_row_Imp_ComCt.codst_id := pk_csf.fkg_Cod_ST_id ( ev_cod_st      => ev_cod_st
                                                          , en_tipoimp_id  => est_row_Imp_ComCt.tipoimp_id );
      --
   end if;
   --
   vn_fase := 4;
   -- Recupera o Tipo de Imposto, se não informado registra o erro de validação
   if nvl(est_row_Imp_ComCt.tipoimp_id, -1) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Imposto" nos Impostos de Complemento (' || en_cd_imp || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   -- Valida se o campo Tipo de Imposto é ICMS.
   --
   if pk_csf.fkg_Tipo_Imp_Sigla( en_id => est_row_Imp_ComCt.tipoimp_id) <> 'ICMS' then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Imposto" nos Impostos de Complemento (' ||
                         en_cd_imp || ') deve ser de ICMS.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   --
   -- Valida se o campo Código ST está nulo.
   --
   if nvl(est_row_Imp_ComCt.codst_id, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código ST" nos Impostos de Complemento (' ||
                         est_row_Imp_ComCt.codst_id || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   --
   -- Valida se o campo Código ST está inválido.
   --
   if ev_cod_st not in ('00', '20', '40', '41', '51', '60', '90') then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código ST" nos Impostos de Complemento (' || ev_cod_st || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   --
   -- Validações de números negativos
   --
   if nvl(est_row_Imp_ComCt.vl_base_calc,0) < 0 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Valor da Base de Cálculo" do Impostos de complemento (' ||
                         est_row_Imp_ComCt.vl_base_calc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   if nvl(est_row_Imp_ComCt.aliq_apli,0) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Alíquota" do Impostos de complemento (' ||
                         est_row_Imp_ComCt.aliq_apli || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   --
   if nvl(est_row_Imp_ComCt.vl_imp_trib,0) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Impostos" de complemento (' ||
                         est_row_Imp_ComCt.vl_imp_trib || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   --
   if nvl(est_row_Imp_ComCt.perc_reduc,0) < 0 then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Percentual de Redução" do Impostos de complemento (' ||
                         est_row_Imp_ComCt.perc_reduc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   --
   if nvl(est_row_Imp_ComCt.vl_cred,0) < 0 then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Crédito outorgado/Presumido" do Impostos de complemento(' ||
                         est_row_Imp_ComCt.vl_cred || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   --
   if nvl(est_row_Imp_ComCt.dm_inf_imp, 9) not in (0, 1, 2, 3) and
      nvl(gn_dm_ind_emit,0)                   = 0                 and  -- emissao
      nvl(gn_dm_legado,0)                  = 0                 then -- nao legado
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de informação do Imposto" (' ||
                         est_row_Imp_ComCt.dm_inf_imp || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   -- Caso o Indicador de Informação do Imposto for "0 - Normal" o Código de Situação Tributária deverá estar entre:
   -- 00, 20, 40, 41 ou 51. Ps.: Essa regra ficou definida em conversa com o Leandro.
   vn_fase := 14;
   --
   if nvl(est_row_Imp_ComCt.dm_inf_imp, 9) = 0
      and ev_cod_st not in ('00', '20', '40', '41', '51') then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código ST" (' || ev_cod_st || ') não é apropriado para a Finalidade de Imposto 0-Normal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14.2;
   --
   if nvl(est_row_Imp_ComCt.dm_inf_imp, 9) in (1)
      and ev_cod_st not in ('60') then
      --
      vn_fase := 14.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código ST" (' || ev_cod_st || ') não é apropriado para a Finalidade de Imposto 1-Responsabilidade do recolhimento do ICMS atribuído ao tomador ou 3º por ST.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   -- Caso o Indicador de Informação do Imposto for DIFERENTE "0 - Normal" o Código de Situação Tributária deverá ser 90.
   --Ps.: Essa regra ficou definida em conversa com o Leandro.
   vn_fase := 15;
   --
   if nvl(est_row_Imp_ComCt.dm_inf_imp, 9) in (2, 3)
      and ev_cod_st not in ('90') then
      --
      vn_fase := 15.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código ST" (' || ev_cod_st || ') não é apropriado para a Finalidade de Imposto 2-ICMS devido à Outra UF ou 3-ICMS Outros.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select cc.conhectransp_id 
       into vn_conhectransp_id
       from conhec_transp_compltado cc 
      where cc.id = est_row_imp_comct.conhectranspcompltado_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;   
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_imp_comct.conhectranspcompltado_id, 0) > 0
      and nvl(est_row_Imp_ComCt.dm_inf_imp, 9) in (0, 1, 2, 3)
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select ctcompltadoimp_seq.nextval
           into est_row_imp_comct.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ctcompltado_imp ( id
                                     , conhectranspcompltado_id
                                     , tipoimp_id
                                     , codst_id
                                     , vl_base_calc
                                     , aliq_apli
                                     , vl_imp_trib
                                     , perc_reduc
                                     , vl_cred
                                     , dm_inf_imp 
                                     )
                              values ( est_row_imp_comct.id
                                     , est_row_imp_comct.conhectranspcompltado_id
                                     , est_row_imp_comct.tipoimp_id
                                     , est_row_imp_comct.codst_id
                                     , est_row_imp_comct.vl_base_calc
                                     , est_row_imp_comct.aliq_apli
                                     , est_row_imp_comct.vl_imp_trib
                                     , est_row_imp_comct.perc_reduc
                                     , est_row_imp_comct.vl_cred
                                     , est_row_Imp_ComCt.dm_inf_imp 
                                     );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ctcompltado_imp set tipoimp_id   = est_row_imp_comct.tipoimp_id
                                  , codst_id     = est_row_imp_comct.codst_id
                                  , vl_base_calc = est_row_imp_comct.vl_base_calc
                                  , aliq_apli    = est_row_imp_comct.aliq_apli
                                  , vl_imp_trib  = est_row_imp_comct.vl_imp_trib
                                  , perc_reduc   = est_row_imp_comct.perc_reduc
                                  , vl_cred      = est_row_imp_comct.vl_cred
                                  , dm_inf_imp   = est_row_Imp_ComCt.dm_inf_imp
         where id = est_row_imp_comct.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctcompltado_imp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctcompltado_imp;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Valor da Prestação de complemento
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctcompltado_comp ( est_log_generico   in out nocopy dbms_sql.number_table
                                      , est_row_Comp_ct    in out nocopy ctcompltado_comp%rowtype
                                      , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_Comp_ct.conhectranspcompltado_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Detalhamento do Conhec. Transp. Complementado para registro do Valor da Prestação de complemento.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Validações de caracteres especiais
   if trim(pk_csf.fkg_converte(est_row_Comp_Ct.nome)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do componente" do Valor da Prestação de complemento não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o valor da prestação de complemento está negativa ou nulla;
   if nvl(est_row_Comp_Ct.valor, -1) < 0   then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Prestação de complemento" (' ||
                         est_row_Comp_Ct.valor || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
  --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select cc.conhectransp_id 
       into vn_conhectransp_id
       from conhec_transp_compltado cc
      where cc.id = est_row_Comp_Ct.conhectranspcompltado_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_comp_ct.nome  := trim(pk_csf.fkg_converte(est_row_comp_ct.nome));
   est_row_comp_ct.valor := nvl(est_row_comp_ct.valor,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_Comp_Ct.conhectranspcompltado_id, 0) > 0
      and est_row_Comp_Ct.nome is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctcompltadocomp_seq.nextval
           into est_row_Comp_Ct.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctcompltado_comp ( id
                                      , conhectranspcompltado_id
                                      , nome
                                      , valor 
                                      )
                               values ( est_row_comp_ct.id
                                      , est_row_comp_ct.conhectranspcompltado_id
                                      , est_row_comp_ct.nome
                                      , est_row_comp_ct.valor 
                                      );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctcompltado_comp set nome = est_row_comp_ct.nome
                                   , valor = est_row_comp_ct.valor
         where id = est_row_comp_ct.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctcompltado_comp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctcompltado_comp;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Detalhamento do CT-e complementado
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_compltado ( est_log_generico     in out nocopy dbms_sql.number_table
                                  , est_row_ct_compltado in out nocopy Conhec_Transp_Compltado%rowtype
                                  , en_conhectransp_id   in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_compltado.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registra o Detalhamento a ser complementado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- validações de caracteres especiais
   --
   if trim(pk_csf.fkg_converte(est_row_ct_compltado.nro_chave_cte_comp)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave do CT-e complementado" (' || est_row_ct_compltado.nro_chave_cte_comp || ') não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- validações de tamanho da Chave
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_compltado.nro_chave_cte_comp))), 0) <> 44   then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave do CT-e complementado" (' ||
                         est_row_ct_compltado.nro_chave_cte_comp || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                         , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o valor da prestação de complemento está negativo ou nulo;
   if nvl(est_row_ct_compltado.vl_total_prest, -1) < 0   then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Prestação de Serviço Complementado" (' ||
                         est_row_ct_compltado.vl_total_prest || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_compltado.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_compltado.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_compltado.nro_chave_cte_comp := trim(pk_csf.fkg_converte(est_row_ct_compltado.nro_chave_cte_comp));
   est_row_ct_compltado.vl_total_prest     := nvl(est_row_ct_compltado.vl_total_prest,0);
   est_row_ct_compltado.inf_ad_fiscal      := trim(pk_csf.fkg_converte(est_row_ct_compltado.inf_ad_fiscal));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_compltado.conhectransp_id, 0) > 0
      and est_row_ct_compltado.nro_chave_cte_comp is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspcompltado_seq.nextval
           into est_row_ct_compltado.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_compltado ( id
                                             , conhectransp_id
                                             , nro_chave_cte_comp
                                             , vl_total_prest
                                             , inf_ad_fiscal 
                                             )
                                      values ( est_row_ct_compltado.id
                                             , est_row_ct_compltado.conhectransp_id
                                             , est_row_ct_compltado.nro_chave_cte_comp
                                             , est_row_ct_compltado.vl_total_prest
                                             , est_row_ct_compltado.inf_ad_fiscal
                                             );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_compltado set nro_chave_cte_comp = est_row_ct_compltado.nro_chave_cte_comp
                                          , vl_total_prest     = est_row_ct_compltado.vl_total_prest
                                          , inf_ad_fiscal      = est_row_ct_compltado.inf_ad_fiscal
         where id = est_row_ct_compltado.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_compltado fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_compltado;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas do CT-e de substituição
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_subst ( est_log_generico   in out nocopy dbms_sql.number_table
                                         , est_row_ct_subst   in out nocopy Conhec_Transp_Subst%rowtype
                                         , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   vn_modfiscal_id   Mod_Fiscal.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_subst.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registrar as Informações do CT-e de substituição.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- validações de caracteres especiais na Chave do CT-e a ser substituído
   --
   if trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_sub)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de acesso do CT-e a ser substituído (original)" (' ||
                         est_row_ct_subst.nro_chave_cte_sub || ') não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- validações de tamanho da Chave da Chave do CT-e a ser substituído
   if trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_sub)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_sub))), 0) <> 44 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de acesso do CT-e a ser substituído (original)" (' ||
                         est_row_ct_subst.nro_chave_cte_sub || ') está diferente de 44 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- validações de tamanho da Chave da Chave do CT-e emitida pelo tomador
   --
   if est_row_ct_subst.nro_chave_nfe_tom is not null then
   --
      if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_nfe_tom))), 0) <> 44   then
         --
         vn_fase := 4.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A "Chave de acesso da NF-e emitida pelo Tomador" referente ao CT-e de Substituição(' ||
                            est_row_ct_subst.nro_chave_nfe_tom || ') está diferente de 44 caracteres.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
   --
   end if;
   --
   vn_fase := 5;
   --
   -- Valida se o tamanho do CNPJ do emitente do Documento Fiscal
   --
   if est_row_ct_subst.cnpj is not null then
   --
      if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_subst.cnpj))), 0) <> 14 then
         --
         vn_fase := 5.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O "CNPJ do emitente do Documento Fiscal" emitido pelo Tomador referente ao CT-e de Substituição(' ||
                            est_row_ct_subst.cnpj || ') está diferente de 14 caracteres.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
        --
      end if;
      --
   end if;
   --
   vn_fase := 6;
   --
   if est_row_ct_subst.cod_mod is not null then
      -- Valida se código do modelo do Documento fiscal existe no tabela cod_modelo
      -- Resp. Protocolo sefaz 3940785:
      -- As informações citadas são mutuamente exclusivas, assim a Sra. deve informar uma NF-e ou uma NF/CTRC ou um CT-e.
      -- No grupo da refNF, mod aceita todos os documentos fiscais "não eletrônicos" existentes, se o documento for eletrônico (NF-e ou CT-e) queira
      -- informar a chave de acesso no grupo específico.
      vn_modfiscal_id := pk_csf.fkg_Mod_Fiscal_id ( ev_cod_mod  => est_row_ct_subst.cod_mod );
      --
      if nvl(vn_modfiscal_id,0) > 0
         or trim(pk_csf.fkg_converte(est_row_ct_subst.cod_mod)) in ('55', '57', '67') then  --Atualização CTe 3.0
         --
         vn_fase := 6.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O "Código do modelo do Documento Fiscal" emitido pelo Tomador referente ao CT-e de Substituição(' ||
                            est_row_ct_subst.cod_mod || ') está inválido.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
   vn_fase := 7;
   --
   -- Valida se o tamanho do número do documento é negativo
   if nvl(est_row_ct_subst.nro, 0) < 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Documento Fiscal" emitido pelo Tomador referente ao CT-e de Substituição(' ||
                         est_row_ct_subst.nro || ') não pode ser negativo ou zero.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   --
   -- Valida se o Valor do Documento Fiscal é negativo
   if nvl(est_row_ct_subst.vl_doc_fiscal, 0) < 0 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Documento Fiscal" emitido pelo Tomador referente ao CT-e de Substituição(' ||
                         est_row_ct_subst.vl_doc_fiscal || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   -- Validações de tamanho da Chave da Chave do CT-e emitida pelo tomador
   if est_row_ct_subst.nro_chave_cte_tom is not null then
   --
      if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_tom))), 0) <> 44 then
         --
         vn_fase := 9.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A "Chave de acesso do CT-e emitido pelo Tomador" referente ao CT-e de Substituição(' ||
                            est_row_ct_subst.nro_chave_cte_tom || ') está diferente de 44 caracteres.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
      --
      end if;
      --
   end if;
   --
   vn_fase := 10;
   -- Validações de tamanho da Chave da Chave do CT-e de Anulação
   if est_row_ct_subst.nro_chave_cte_anul is not null then
   --
      if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_anul))), 0) <> 44   then
         --
         vn_fase := 10.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A "Chave de acesso do CT-e emitido pelo Tomador" referente ao CT-e de Substituição(' ||
                            est_row_ct_subst.nro_chave_cte_anul || ') está diferente de 44 caracteres.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
   vn_fase := 11;
   -- Atendendo regra do manual que diz: "...Informar a série do documento fiscal(informar zero se inexistente)..."
   if est_row_ct_subst.cnpj is not null
      and est_row_ct_subst.cod_mod is not null
      and nvl(est_row_ct_subst.nro, 0) > 0
      and est_row_ct_subst.dt_emissao is not null
      and est_row_ct_subst.serie is null
      then
      --
      vn_fase := 11.1;
      --
      est_row_ct_subst.serie := 0;
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o tamanho do CPF do emitente do Documento Fiscal
   --
   if est_row_ct_subst.cpf is not null then
   --
      if nvl(length(trim(pk_csf.fkg_converte(est_row_ct_subst.cpf))), 0) <> 11 then
         --
         vn_fase := 12.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O "CPF do emitente do Documento Fiscal" emitido pelo Tomador referente ao CT-e de Substituição(' ||
                            est_row_ct_subst.cnpj || ') está diferente de 11 caracteres.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
        --
      end if;
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_subst.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_subst.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_subst.nro_chave_cte_sub   := trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_sub));
   est_row_ct_subst.nro_chave_nfe_tom   := trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_nfe_tom));
   est_row_ct_subst.cnpj                := trim(pk_csf.fkg_converte(est_row_ct_subst.cnpj));
   est_row_ct_subst.cod_mod             := trim(pk_csf.fkg_converte(est_row_ct_subst.cod_mod));
   est_row_ct_subst.serie               := trim(pk_csf.fkg_converte(est_row_ct_subst.serie));
   est_row_ct_subst.subserie            := trim(pk_csf.fkg_converte(est_row_ct_subst.subserie));
   est_row_ct_subst.nro_chave_cte_tom   := trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_tom));
   est_row_ct_subst.nro_chave_cte_anul  := trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_anul));
   est_row_ct_subst.cpf                 := trim(pk_csf.fkg_converte(est_row_ct_subst.cpf));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_subst.conhectransp_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ct_subst.nro_chave_cte_sub)) is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspsubst_seq.nextval
           into est_row_ct_subst.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_subst ( id
                                         , conhectransp_id
                                         , nro_chave_cte_sub
                                         , nro_chave_nfe_tom
                                         , cnpj
                                         , cod_mod
                                         , serie
                                         , subserie
                                         , nro
                                         , vl_doc_fiscal
                                         , dt_emissao
                                         , nro_chave_cte_tom
                                         , nro_chave_cte_anul
                                         , dm_ind_alt_toma  -- Atualização CTe 3.0
                                         , cpf
                                         )
                                  values ( est_row_ct_subst.id
                                         , est_row_ct_subst.conhectransp_id
                                         , est_row_ct_subst.nro_chave_cte_sub
                                         , est_row_ct_subst.nro_chave_nfe_tom
                                         , est_row_ct_subst.cnpj
                                         , est_row_ct_subst.cod_mod
                                         , est_row_ct_subst.serie
                                         , est_row_ct_subst.subserie
                                         , est_row_ct_subst.nro
                                         , est_row_ct_subst.vl_doc_fiscal
                                         , est_row_ct_subst.dt_emissao
                                         , est_row_ct_subst.nro_chave_cte_tom
                                         , est_row_ct_subst.nro_chave_cte_anul
                                         , est_row_ct_subst.dm_ind_alt_toma  -- Atualização CTe 3.0
                                         , est_row_ct_subst.cpf
                                         );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_subst set nro_chave_cte_sub  = est_row_ct_subst.nro_chave_cte_sub
                                      , nro_chave_nfe_tom  = est_row_ct_subst.nro_chave_nfe_tom
                                      , cnpj               = est_row_ct_subst.cnpj
                                      , cod_mod            = est_row_ct_subst.cod_mod
                                      , serie              = est_row_ct_subst.serie
                                      , subserie           = est_row_ct_subst.subserie
                                      , nro                = est_row_ct_subst.nro
                                      , vl_doc_fiscal      = est_row_ct_subst.vl_doc_fiscal
                                      , dt_emissao         = est_row_ct_subst.dt_emissao
                                      , nro_chave_cte_tom  = est_row_ct_subst.nro_chave_cte_tom
                                      , nro_chave_cte_anul = est_row_ct_subst.nro_chave_cte_anul
                                      , dm_ind_alt_toma    = est_row_ct_subst.dm_ind_alt_toma  -- Atualização CTe 3.0
                                      , cpf                = est_row_ct_subst.cpf
         where id = est_row_ct_subst.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_subst fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_subst;
--
-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Dados da Cobrança
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_dup ( est_log_generico          in out nocopy dbms_sql.number_table
                                       , est_row_Conhec_Transp_dup in out nocopy Conhec_Transp_dup%rowtype )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_Conhec_Transp_dup.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_Conhec_Transp_dup.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registrar as Informações de Dados de Fatura.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Válida o Valor original da fatura
   if nvl(est_row_Conhec_Transp_dup.vl_dup,0) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da duplicata" (' || est_row_Conhec_Transp_dup.vl_dup || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   est_row_Conhec_Transp_dup.nro_dup := trim(pk_csf.fkg_converte(est_row_Conhec_Transp_dup.nro_dup));
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_Conhec_Transp_dup.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_Conhec_Transp_dup.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_Conhec_Transp_dup.conhectransp_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectranspdup_seq.nextval
           into est_row_Conhec_Transp_dup.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_dup ( id
                                       , conhectransp_id
                                       , nro_dup
                                       , dt_venc
                                       , vl_dup
                                       )
                                values ( est_row_Conhec_Transp_dup.id
                                       , est_row_Conhec_Transp_dup.conhectransp_id
                                       , est_row_Conhec_Transp_dup.nro_dup
                                       , est_row_Conhec_Transp_dup.dt_venc
                                       , est_row_Conhec_Transp_dup.vl_dup
                                       );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_dup set nro_dup = est_row_Conhec_Transp_dup.nro_dup
                                    , dt_venc = est_row_Conhec_Transp_dup.dt_venc
                                    , vl_dup  = est_row_Conhec_Transp_dup.vl_dup
         where id = est_row_Conhec_Transp_dup.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_dup fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_dup;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Dados da fatura
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_fat ( est_log_generico          in out nocopy  dbms_sql.number_table
                                       , est_row_Conhec_Transp_fat in out nocopy  Conhec_Transp_fat%rowtype )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => est_row_Conhec_Transp_fat.conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_Conhec_Transp_fat.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registra as Informações de Dados da fatura.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Válida o Valor original da fatura
   if nvl(est_row_conhec_transp_fat.vl_orig,0) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor original da fatura" (' || est_row_conhec_transp_fat.vl_orig || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida o Valor do desconto da fatura
   if nvl(est_row_conhec_transp_fat.vl_desc,0) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do desconto da fatura" (' || est_row_conhec_transp_fat.vl_desc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida o Valor líquido da fatura
   if nvl(est_row_conhec_transp_fat.vl_liq,0) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor líquido da fatura" (' || est_row_conhec_transp_fat.vl_liq || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   est_row_Conhec_Transp_fat.nro_fat := trim(pk_csf.fkg_converte(est_row_Conhec_Transp_fat.nro_fat));
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_Conhec_Transp_fat.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_Conhec_Transp_fat.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_Conhec_Transp_fat.conhectransp_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectranspfat_seq.nextval
           into est_row_Conhec_Transp_fat.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_fat ( id             
                                       , conhectransp_id
                                       , nro_fat
                                       , vl_orig
                                       , vl_desc
                                       , vl_liq
                                       )
                                values ( est_row_Conhec_Transp_fat.id
                                       , est_row_Conhec_Transp_fat.conhectransp_id
                                       , est_row_Conhec_Transp_fat.nro_fat
                                       , est_row_Conhec_Transp_fat.vl_orig
                                       , est_row_Conhec_Transp_fat.vl_desc
                                       , est_row_Conhec_Transp_fat.vl_liq
                                       );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_fat set nro_fat = est_row_Conhec_Transp_fat.nro_fat
                                    , vl_orig = est_row_Conhec_Transp_fat.vl_orig
                                    , vl_desc = est_row_Conhec_Transp_fat.vl_desc
                                    , vl_liq  = est_row_Conhec_Transp_fat.vl_liq
         where id = est_row_Conhec_Transp_fat.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_fat fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_fat;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações dos veículos transportados
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_veic ( est_log_generico   in out nocopy dbms_sql.number_table
                                        , est_row_ct_veic    in out nocopy Conhec_Transp_Veic%rowtype
                                        , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_veic.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registrar as Informações dos veículos transportados.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- validações de caracteres especiais no campo chassi do veículo
   --
   if trim(pk_csf.fkg_converte(est_row_ct_veic.chassi)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Chassi do Veículo" (' || est_row_ct_veic.chassi || ') não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se Código da cor do veículo está nulo
   --
   if trim(pk_csf.fkg_converte(est_row_ct_veic.cod_cod)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código da Cor do Veículo" (' ||
                          est_row_ct_veic.cod_cod || ') não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se a Descrição da Cor está nula
   if trim(pk_csf.fkg_converte(est_row_ct_veic.descr_cor)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Descrição da Cor" do Veículo (' ||
                         est_row_ct_veic.descr_cor || ') não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o Código Marca Modelo é nulo
   if trim(pk_csf.fkg_converte(est_row_ct_veic.cod_modelo)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código Marca Modelo" (' ||
                         est_row_ct_veic.cod_modelo || ') não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   --
   -- Valida o campo Valo Unitário é Nulo ou negativo
   if nvl(est_row_ct_veic.vl_unit, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Unitário do Veículo"(' ||
                         est_row_ct_veic.vl_unit || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o Valor do Frete é Nulo ou negativo.
   if nvl(est_row_ct_veic.vl_frete, -1) < 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Frete Unitário" do veículo ('||est_row_ct_veic.vl_frete||') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_veic.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_veic.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_veic.chassi     := trim(pk_csf.fkg_converte(est_row_ct_veic.chassi));
   est_row_ct_veic.cod_cod    := trim(pk_csf.fkg_converte(est_row_ct_veic.cod_cod));
   est_row_ct_veic.descr_cor  := trim(pk_csf.fkg_converte(est_row_ct_veic.descr_cor));
   est_row_ct_veic.cod_modelo := trim(pk_csf.fkg_converte(est_row_ct_veic.cod_modelo));
   est_row_ct_veic.vl_unit    := nvl(est_row_ct_veic.vl_unit,0);
   est_row_ct_veic.vl_frete   := nvl(est_row_ct_veic.vl_frete,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_veic.conhectransp_id, 0) > 0
      and est_row_ct_veic.chassi is not null
      and est_row_ct_veic.cod_cod is not null
      and est_row_ct_veic.descr_cor is not null
      and est_row_ct_veic.cod_modelo is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspveic_seq.nextval
           into est_row_ct_veic.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_veic ( id
                                        , conhectransp_id
                                        , chassi
                                        , cod_cod
                                        , descr_cor
                                        , cod_modelo
                                        , vl_unit
                                        , vl_frete 
                                        )
                                 values ( est_row_ct_veic.id
                                        , est_row_ct_veic.conhectransp_id
                                        , est_row_ct_veic.chassi
                                        , est_row_ct_veic.cod_cod
                                        , est_row_ct_veic.descr_cor
                                        , est_row_ct_veic.cod_modelo
                                        , est_row_ct_veic.vl_unit
                                        , est_row_ct_veic.vl_frete 
                                        );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_veic set chassi     = est_row_ct_veic.chassi
                                     , cod_cod    = est_row_ct_veic.cod_cod
                                     , descr_cor  = est_row_ct_veic.descr_cor
                                     , cod_modelo = est_row_ct_veic.cod_modelo
                                     , vl_unit    = est_row_ct_veic.vl_unit
                                     , vl_frete   = est_row_ct_veic.vl_frete
         where id = est_row_ct_veic.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_veic fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_veic;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a transporte de produtos classificados pela ONU como perigosos
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_peri ( est_log_generico   in out nocopy dbms_sql.number_table
                                        , est_row_ct_peri    in out nocopy Conhec_Transp_Peri%rowtype
                                        , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_peri.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registrar as Informações do transporte de produtos perigosos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- validações campo Número da ONU está nulo
   --
   if trim(pk_csf.fkg_converte(est_row_ct_peri.nro_onu)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número da ONU" para produtos perigosos não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Nome Apropriado para Embarque do Produto está Nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_peri.nome_aprop)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome Apropriado para Embarque do Produto" considerado perigoso pela ONU não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Classe ou subclasse, e risco subsidiário está Nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_peri.classe_risco )) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Classe ou subclasse, e risco subsidiário" do Produto considerado perigoso pela ONU não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se a Quantidade total por produto é nula
   if trim(pk_csf.fkg_converte(est_row_ct_peri.qtde_total_prod)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Quantidade total por produto" considerado perigoso pela ONU não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_peri.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_peri.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_peri.nro_onu         := trim(pk_csf.fkg_converte(est_row_ct_peri.nro_onu));
   est_row_ct_peri.nome_aprop      := trim(pk_csf.fkg_converte(est_row_ct_peri.nome_aprop));
   est_row_ct_peri.classe_risco    := trim(pk_csf.fkg_converte(est_row_ct_peri.classe_risco));
   est_row_ct_peri.grupo_emb       := trim(pk_csf.fkg_converte(est_row_ct_peri.grupo_emb));
   est_row_ct_peri.qtde_total_prod := trim(pk_csf.fkg_converte(est_row_ct_peri.qtde_total_prod));
   est_row_ct_peri.qtde_vol_tipo   := trim(pk_csf.fkg_converte(est_row_ct_peri.qtde_vol_tipo));
   est_row_ct_peri.ponto_fulgor    := trim(pk_csf.fkg_converte(est_row_ct_peri.ponto_fulgor));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_peri.conhectransp_id, 0) > 0
      and est_row_ct_peri.nro_onu is not null
      and est_row_ct_peri.nome_aprop is not null
      and est_row_ct_peri.classe_risco is not null
      and est_row_ct_peri.qtde_total_prod is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspperi_seq.nextval
           into est_row_ct_peri.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_peri ( id
                                        , conhectransp_id
                                        , nro_onu
                                        , nome_aprop
                                        , classe_risco
                                        , grupo_emb
                                        , qtde_total_prod
                                        , qtde_vol_tipo
                                        , ponto_fulgor 
                                        )
                                 values ( est_row_ct_peri.id
                                        , est_row_ct_peri.conhectransp_id
                                        , est_row_ct_peri.nro_onu
                                        , est_row_ct_peri.nome_aprop
                                        , est_row_ct_peri.classe_risco
                                        , est_row_ct_peri.grupo_emb
                                        , est_row_ct_peri.qtde_total_prod
                                        , est_row_ct_peri.qtde_vol_tipo
                                        , est_row_ct_peri.ponto_fulgor
                                        );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_peri set nro_onu         = est_row_ct_peri.nro_onu
                                     , nome_aprop      = est_row_ct_peri.nome_aprop
                                     , classe_risco    = est_row_ct_peri.classe_risco
                                     , grupo_emb       = est_row_ct_peri.grupo_emb
                                     , qtde_total_prod = est_row_ct_peri.qtde_total_prod
                                     , qtde_vol_tipo   = est_row_ct_peri.qtde_vol_tipo
                                     , ponto_fulgor    = est_row_ct_peri.ponto_fulgor
         where id = est_row_ct_peri.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_peri fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_peri;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a transporte de produtos classificados pela ONU como perigosos
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_duto ( est_log_generico   in out nocopy dbms_sql.number_table
                                        , est_row_ct_duto    in out nocopy Conhec_Transp_Duto%rowtype
                                        , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_duto.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Ct-e para registra as Informações do modal Dutoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Valor da tarifa está negativo ou nulo.
   --
   if nvl(est_row_ct_duto.vl_tarifa, -1) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Tarifa" referente ao modal Dutoviário (' ||
                         est_row_ct_duto.vl_tarifa || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if est_row_ct_duto.dt_ini is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data inicial" referente ao modal Dutoviário não foi encontrada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if est_row_ct_duto.dt_fin is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data final" referente ao modal Dutoviário não foi encontrada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_duto.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_duto.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_duto.conhectransp_id, 0) > 0
      and nvl(est_row_ct_duto.vl_tarifa, -1) >= 0 
      and est_row_ct_duto.dt_ini is not null 
      and est_row_ct_duto.dt_fin is not null 
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectranspduto_seq.nextval
           into est_row_ct_duto.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_duto ( id
                                        , conhectransp_id
                                        , vl_tarifa 
                                        , dt_ini
                                        , dt_fin )
                                 values ( est_row_ct_duto.id
                                        , est_row_ct_duto.conhectransp_id
                                        , est_row_ct_duto.vl_tarifa 
                                        , est_row_ct_duto.dt_ini
                                        , est_row_ct_duto.dt_fin);
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_duto set vl_tarifa = est_row_ct_duto.vl_tarifa
                                     , dt_ini    = est_row_ct_duto.dt_ini
                                     , dt_fin    = est_row_ct_duto.dt_fin
            where id = est_row_ct_duto.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_duto fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_duto;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos containeres contidos no vagão com DCL
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctferr_cont ( est_log_generico    in out nocopy dbms_sql.number_table
                                 , est_row_ctferr_cont in out nocopy Ctferrovdcldetvag_Cont%rowtype
                                 , en_conhectransp_id  in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctferr_cont.ctferrovdcldetvag_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não inseridas as informações relativas ao detalhes dos Vagões.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Identificação do Container está negativo ou nulo.
   --
   if nvl(est_row_ctferr_cont.nro_cont, -1) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Identificação do Container" contidos no vagão com DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_cont.nro_cont || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select v.conhectransp_id
       into vn_conhectransp_id
       from ctferrovdcl_detvag p
          , ctferrov_dcl q
          , conhec_transp_ferrov v
      where q.conhectranspferrov_id = v.id
        and p.ctferrovdcl_id        = q.id
        and p.id                    = est_row_ctferr_cont.ctferrovdcldetvag_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ctferr_cont.ctferrovdcldetvag_id, 0) > 0
      and nvl(est_row_ctferr_cont.nro_cont, 0) > 0 then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select ctferrovdcldetvagcont_seq.nextval
           into est_row_ctferr_cont.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ctferrovdcldetvag_cont ( id
                                            , ctferrovdcldetvag_id
                                            , nro_cont
                                            , dt_prev )
                                     values ( est_row_ctferr_cont.id
                                            , est_row_ctferr_cont.ctferrovdcldetvag_id
                                            , est_row_ctferr_cont.nro_cont
                                            , est_row_ctferr_cont.dt_prev );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ctferrovdcldetvag_cont set nro_cont = est_row_ctferr_cont.nro_cont
                                         , dt_prev  = est_row_ctferr_cont.dt_prev
         where id = est_row_ctferr_cont.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctferr_cont fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctferr_cont;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Lacres dos vagões do DCL
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctferr_lacre ( est_log_generico     in out nocopy dbms_sql.number_table
                                  , est_row_ctferr_lacre in out nocopy Ctferrovdcldetvag_Lacre%rowtype
                                  , en_conhectransp_id   in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctferr_lacre.ctferrovdcldetvag_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não inseridas as informações relativas ao detalhes dos Vagões.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo número do lacre está negativo ou nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctferr_lacre.nro_lacre)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do lacre" do vagão do DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_lacre.nro_lacre || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select v.conhectransp_id
       into vn_conhectransp_id
       from ctferrovdcl_detvag p
          , ctferrov_dcl q
          , conhec_transp_ferrov v
      where q.conhectranspferrov_id = v.id
        and p.ctferrovdcl_id        = q.id
        and p.id                    = est_row_ctferr_lacre.ctferrovdcldetvag_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ctferr_lacre.ctferrovdcldetvag_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctferr_lacre.nro_lacre)) is not null then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select ctferrovdcldetvaglacre_seq.nextval
           into est_row_ctferr_lacre.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ctferrovdcldetvag_lacre ( id
                                             , ctferrovdcldetvag_id
                                             , nro_lacre )
                                      values ( est_row_ctferr_lacre.id
                                             , est_row_ctferr_lacre.ctferrovdcldetvag_id
                                             , est_row_ctferr_lacre.nro_lacre );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ctferrovdcldetvag_lacre set nro_lacre = est_row_ctferr_lacre.nro_lacre
         where id = est_row_ctferr_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctferr_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctferr_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos de detalhes dos Vagões
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctferrovdcl_detvag ( est_log_generico      in out nocopy dbms_sql.number_table
                                        , est_row_ctferr_detvag in out nocopy Ctferrovdcl_Detvag%rowtype
                                        , en_conhectransp_id    in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctferr_detvag.ctferrovdcl_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não inseridas as informações relativas ao DCL (Despacho de Carga em Lotação).';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Número de Identificação do Vagão está nulo ou negativo.
   --
   if nvl(est_row_ctferr_detvag.nro_vagao, -1) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Vagão" (' ||
                         est_row_ctferr_detvag.nro_vagao || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Capacidade em Toneladas está nula ou negativa.
   --
   if nvl(est_row_ctferr_detvag.cap_ton, -1) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Capacidade em Toneladas" do Vagão (' ||
                         est_row_ctferr_detvag.cap_ton || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o Peso Real em Toneladas está nulo ou negativo.
   --
   if nvl(est_row_ctferr_detvag.peso_real, -1) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Peso Real em Toneladas" do Vagão (' ||
                         est_row_ctferr_detvag.peso_real || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o Peso Base de Cálculo de Frete em Toneladas está nulo ou negativo.
   --
   if nvl(est_row_ctferr_detvag.peso_bc_frete, -1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Peso Base de Cálculo de Frete em Toneladas" do Vagão (' ||
                         est_row_ctferr_detvag.peso_bc_frete || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select v.conhectransp_id
       into vn_conhectransp_id
       from ctferrov_dcl d
          , conhec_transp_ferrov v
      where d.conhectranspferrov_id = v.id
        and d.id = est_row_ctferr_detvag.ctferrovdcl_id; 
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctferr_detvag.tipo_vagao := trim(pk_csf.fkg_converte(est_row_ctferr_detvag.tipo_vagao)) ;
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctferr_detvag.ctferrovdcl_id, 0) > 0
      and nvl(est_row_ctferr_detvag.nro_vagao, -1) > 0
      and nvl(est_row_ctferr_detvag.cap_ton, -1) >= 0
      and nvl(est_row_ctferr_detvag.peso_real, -1) >= 0
      and nvl(est_row_ctferr_detvag.peso_bc_frete, -1) >= 0 then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctferrovdcldetvag_seq.nextval
           into est_row_ctferr_detvag.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctferrovdcl_detvag ( id
                                        , ctferrovdcl_id
                                        , nro_vagao
                                        , cap_ton
                                        , tipo_vagao
                                        , peso_real
                                        , peso_bc_frete )
                                 values ( est_row_ctferr_detvag.id
                                        , est_row_ctferr_detvag.ctferrovdcl_id
                                        , est_row_ctferr_detvag.nro_vagao
                                        , est_row_ctferr_detvag.cap_ton
                                        , est_row_ctferr_detvag.tipo_vagao
                                        , est_row_ctferr_detvag.peso_real
                                        , est_row_ctferr_detvag.peso_bc_frete);
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctferrovdcl_detvag set nro_vagao     = est_row_ctferr_detvag.nro_vagao
                                     , cap_ton       = est_row_ctferr_detvag.cap_ton
                                     , tipo_vagao    = est_row_ctferr_detvag.tipo_vagao
                                     , peso_real     = est_row_ctferr_detvag.peso_real
                                     , peso_bc_frete = est_row_ctferr_detvag.peso_bc_frete
         where id = est_row_ctferr_detvag.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctferrovdcl_detvag fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctferrovdcl_detvag;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao DCL
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctferrov_dcl ( est_log_generico   in out nocopy dbms_sql.number_table
                                  , est_row_ctferr_dcl in out nocopy Ctferrov_Dcl%rowtype
                                  , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctferr_dcl.conhectranspferrov_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não inseridas as informações relativas ao modal Ferroviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo serie está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctferr_dcl.serie )) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Série" do DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.serie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo NRO_DCL está nulo ou negativo
   --
   if nvl(est_row_ctferr_dcl.nro_dcl, -1) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do DCL" - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.nro_dcl || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o formato do campo Data de Emissão está nulo
   --
   if est_row_ctferr_dcl.dt_emissao is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" do DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.dt_emissao || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se a quantidade de vagões está nula ou negativa.
   --
   if nvl(est_row_ctferr_dcl.qtde_vagao, -1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Quantidade de Vagões" declarada no DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.qtde_vagao || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o peso para cálculo em Toneladas está nula ou negativa.
   --
   if nvl(est_row_ctferr_dcl.peso_calc_ton, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Peso para Cálculo em Toneladas" declarado no DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.peso_calc_ton || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o Valor da Tarifa está nula ou negativa.
   --
   if nvl(est_row_ctferr_dcl.vl_tarifa, -1) < 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Tarifa" declarado no DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.vl_tarifa || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o Valor do Frete está nulo ou negativo.
   --
   if nvl(est_row_ctferr_dcl.vl_frete, -1) < 0 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Frete" declarado no DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.vl_frete || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se a quantidade de vagões está nula ou negativa.
   --
   if nvl(est_row_ctferr_dcl.vl_serv_aces, -1) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor dos Serviços Acessórios" declarado no DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.vl_serv_aces || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o Valor Total do Serviço está nulo ou negativo.
   --
   if nvl(est_row_ctferr_dcl.vl_total_serv, -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Serviço" declarado no DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.vl_total_serv || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o Valor Total do Serviço é igual a somatória entre frete e serviço.
   --
   if nvl(est_row_ctferr_dcl.vl_total_serv, 0) <> (nvl(est_row_ctferr_dcl.vl_frete,0) + nvl(est_row_ctferr_dcl.vl_serv_aces ,0)) then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Serviço" declarado no DCL - Despacho de Carga em Lotação (' ||
                         est_row_ctferr_dcl.vl_total_serv || ') está diferente da somatória entre Serviço e Frete.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select v.conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_ferrov v
      where v.id = est_row_ctferr_dcl.conhectranspferrov_id; 
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctferr_dcl.serie    := trim(pk_csf.fkg_converte(est_row_ctferr_dcl.serie));
   est_row_ctferr_dcl.id_trem  := trim(pk_csf.fkg_converte(est_row_ctferr_dcl.id_trem));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctferr_dcl.conhectranspferrov_id, 0) > 0
      and est_row_ctferr_dcl.serie is not null
      and nvl(est_row_ctferr_dcl.nro_dcl, -1) > 0
      and est_row_ctferr_dcl.dt_emissao is not null
      and nvl(est_row_ctferr_dcl.qtde_vagao, -1) >= 0
      and nvl(est_row_ctferr_dcl.peso_calc_ton, -1) >= 0
      and nvl(est_row_ctferr_dcl.vl_tarifa, -1) >= 0
      and nvl(est_row_ctferr_dcl.vl_frete, -1) >= 0
      and nvl(est_row_ctferr_dcl.vl_serv_aces, -1) >= 0
      and nvl(est_row_ctferr_dcl.vl_total_serv, -1) >= 0 then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctferrovdcl_seq.nextval
           into est_row_ctferr_dcl.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctferrov_dcl ( id
                                  , conhectranspferrov_id
                                  , serie
                                  , nro_dcl
                                  , dt_emissao
                                  , qtde_vagao
                                  , peso_calc_ton
                                  , vl_tarifa
                                  , vl_frete
                                  , vl_serv_aces
                                  , vl_total_serv
                                  , id_trem )
                           values ( est_row_ctferr_dcl.id
                                  , est_row_ctferr_dcl.conhectranspferrov_id
                                  , est_row_ctferr_dcl.serie
                                  , est_row_ctferr_dcl.nro_dcl
                                  , est_row_ctferr_dcl.dt_emissao
                                  , est_row_ctferr_dcl.qtde_vagao
                                  , est_row_ctferr_dcl.peso_calc_ton
                                  , est_row_ctferr_dcl.vl_tarifa
                                  , est_row_ctferr_dcl.vl_frete
                                  , est_row_ctferr_dcl.vl_serv_aces
                                  , est_row_ctferr_dcl.vl_total_serv
                                  , est_row_ctferr_dcl.id_trem);
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctferrov_dcl set serie         = est_row_ctferr_dcl.serie
                               , nro_dcl       = est_row_ctferr_dcl.nro_dcl
                               , dt_emissao    = est_row_ctferr_dcl.dt_emissao
                               , qtde_vagao    = est_row_ctferr_dcl.qtde_vagao
                               , peso_calc_ton = est_row_ctferr_dcl.peso_calc_ton
                               , vl_tarifa     = est_row_ctferr_dcl.vl_tarifa
                               , vl_frete      = est_row_ctferr_dcl.vl_frete
                               , vl_serv_aces  = est_row_ctferr_dcl.vl_serv_aces
                               , vl_total_serv = est_row_ctferr_dcl.vl_total_serv
                               , id_trem       = est_row_ctferr_dcl.id_trem
         where id = est_row_ctferr_dcl.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctferrov_dcl fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctferrov_dcl;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a Dados do endereço da ferrovia substituída
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctferrov_subst ( est_log_generico     in out nocopy dbms_sql.number_table
                                    , est_row_ctferr_subst in out nocopy Ctferrov_Subst%rowtype
                                    , en_conhectransp_id   in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctferr_subst.conhectranspferrov_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não inseridas as informações relativas ao modal Ferroviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo CNPJ está válido. O Campo CNPJ por ser null. Nesse caso preencher com 0.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctferr_subst.cnpj ))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CNPJ" da ferrovia substituída (' ||
                         est_row_ctferr_subst.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   est_row_ctferr_subst.ie := trim ( replace(replace(replace(replace(replace(upper(est_row_ctferr_subst.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   -- Valida se o campo Inscrição Estadual está maior que o permitido.
   -- No manual diz que o tamanho pode variar entre 2 a 14.
   if trim(pk_csf.fkg_converte(est_row_ctferr_subst.ie)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctferr_subst.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" da Ferrovia Substituta (' ||
                         est_row_ctferr_subst.ie || ') está maior que 14 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo nome está nulo.
   --
   if (trim(pk_csf.fkg_converte(est_row_ctferr_subst.nome))) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" da Ferrovia Substituta (' ||
                         est_row_ctferr_subst.nome || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctferr_subst.lograd)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" da Ferrovia Substituta (' ||
                         est_row_ctferr_subst.lograd || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se IBGE está nulo ou negativo.
   --
   if nvl(est_row_ctferr_subst.ibge_cidade, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "IBGE da Cidade" referente ao Logradouro da Ferrovia Substituta (' ||
                         est_row_ctferr_subst.ibge_cidade || ') está nulo ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida Código do IBGE;
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_ctferr_subst.ibge_cidade) = False then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do IBGE" referente ao Logradouro da Ferrovia Substituta (' ||
                          est_row_ctferr_subst.ibge_cidade || ') não pertence a tabela do IBGE Nacional.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se a Sigla do Estado é valida.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado => est_row_ctferr_subst.uf) = False then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla do Estado" referente ao Logradouro da Ferrovia Substituta (' ||
                         est_row_ctferr_subst.uf || ') não pertence a tabela do IBGE Nacional.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se a Descrição da Cidade está nula.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctferr_subst.descr_cidade))), 0) = 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do Município" referente ao Logradouro da Ferrovia Substituta (' ||
                         est_row_ctferr_subst.descr_cidade || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se a CPE está nulo.
   --
   if nvl(est_row_ctferr_subst.cep, -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CEP do Município" referente ao Logradouro da Ferrovia Substituta (' ||
                         est_row_ctferr_subst.cep || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select v.conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_ferrov v
      where v.id = est_row_ctferr_subst.conhectranspferrov_id; 
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctferr_subst.cnpj           := trim(pk_csf.fkg_converte(est_row_ctferr_subst.cnpj));
   est_row_ctferr_subst.cod_int        := trim(pk_csf.fkg_converte(est_row_ctferr_subst.cod_int));
   est_row_ctferr_subst.nome           := trim(pk_csf.fkg_converte(est_row_ctferr_subst.nome));
   est_row_ctferr_subst.lograd         := trim(pk_csf.fkg_converte(est_row_ctferr_subst.lograd));
   est_row_ctferr_subst.nro            := trim(pk_csf.fkg_converte(est_row_ctferr_subst.nro));
   est_row_ctferr_subst.compl          := trim(pk_csf.fkg_converte(est_row_ctferr_subst.compl));
   est_row_ctferr_subst.bairro         := trim(pk_csf.fkg_converte(est_row_ctferr_subst.bairro));
   est_row_ctferr_subst.descr_cidade   := trim(pk_csf.fkg_converte(est_row_ctferr_subst.descr_cidade));
   est_row_ctferr_subst.uf             := trim(pk_csf.fkg_converte(est_row_ctferr_subst.uf)) ;
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctferr_subst.conhectranspferrov_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctferr_subst.cnpj)) is not null
      and trim(pk_csf.fkg_converte(est_row_ctferr_subst.nome)) is not null
      and trim(pk_csf.fkg_converte(est_row_ctferr_subst.lograd)) is not null
      and nvl(est_row_ctferr_subst.ibge_cidade, -1) > 0
      and trim(pk_csf.fkg_converte(est_row_ctferr_subst.descr_cidade)) is not null
      and nvl(est_row_ctferr_subst.cep, -1) >= 0
      and trim(pk_csf.fkg_converte(est_row_ctferr_subst.uf)) is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctferrovsubst_seq.nextval
           into est_row_ctferr_subst.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctferrov_subst ( id
                                    , conhectranspferrov_id
                                    , cnpj
                                    , cod_int
                                    , ie
                                    , nome
                                    , lograd
                                    , nro
                                    , compl
                                    , bairro
                                    , ibge_cidade
                                    , descr_cidade
                                    , cep
                                    , uf )
                             values ( est_row_ctferr_subst.id
                                    , est_row_ctferr_subst.conhectranspferrov_id
                                    , est_row_ctferr_subst.cnpj
                                    , est_row_ctferr_subst.cod_int
                                    , est_row_ctferr_subst.ie
                                    , est_row_ctferr_subst.nome
                                    , est_row_ctferr_subst.lograd
                                    , est_row_ctferr_subst.nro
                                    , est_row_ctferr_subst.compl
                                    , est_row_ctferr_subst.bairro
                                    , est_row_ctferr_subst.ibge_cidade
                                    , est_row_ctferr_subst.descr_cidade
                                    , est_row_ctferr_subst.cep
                                    , trim(pk_csf.fkg_converte(est_row_ctferr_subst.uf)) );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctferrov_subst set cnpj         = est_row_ctferr_subst.cnpj
                                 , cod_int      = est_row_ctferr_subst.cod_int
                                 , ie           = est_row_ctferr_subst.ie
                                 , nome         = est_row_ctferr_subst.nome
                                 , lograd       = est_row_ctferr_subst.lograd
                                 , nro          = est_row_ctferr_subst.nro
                                 , compl        = est_row_ctferr_subst.compl
                                 , bairro       = est_row_ctferr_subst.bairro
                                 , ibge_cidade  = est_row_ctferr_subst.ibge_cidade
                                 , descr_cidade = est_row_ctferr_subst.descr_cidade
                                 , cep          = est_row_ctferr_subst.cep
                                 , uf           = est_row_ctferr_subst.uf
         where id = est_row_ctferr_subst.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctferrov_subst fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctferrov_subst;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas modal Ferroviário
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_ferrov ( est_log_generico   in out nocopy dbms_sql.number_table
                               , est_row_ct_ferrov  in out nocopy Conhec_Transp_Ferrov%rowtype
                               , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_ferrov.conhectransp_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e para registro do Modal Ferroviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Tipo de Tráfego está invalido.
   --
   if nvl(est_row_ct_ferrov.dm_tp_traf, 9) not in (0, 1, 2, 3) then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Tráfego: 0-Próprio, 1-Mútuo, 2- rodoferroviário ou 3-rodoviário" do Modal Ferroviário (' ||
                         est_row_ct_ferrov.dm_tp_traf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Fluxo Ferroviário está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_ferrov.fluxo_ferrov)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Fluxo Ferroviário" do Modal Ferroviário (' ||
                         est_row_ct_ferrov.fluxo_ferrov || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Valor do Frete está inválido.
   --
   if nvl(est_row_ct_ferrov.vl_frete, -1) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Frete" do Modal Ferroviário (' ||
                         est_row_ct_ferrov.vl_frete || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Atualização CTe 3.0
   -- Valida se o campo Valor do Frete está inválido.
   if trim(pk_csf.fkg_converte(est_row_ct_ferrov.nro_chave_cte_orig)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ct_ferrov.nro_chave_cte_orig))), 0) <> 44 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O Tamanho da "Chave de acesso do CT-e emitido pelo ferrovia de origem" ('
                         || est_row_ct_ferrov.nro_chave_cte_orig || ') está diferente de 44 dígitos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count, 0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_ferrov.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_ferrov.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_ferrov.fluxo_ferrov       := trim(pk_csf.fkg_converte(est_row_ct_ferrov.fluxo_ferrov));
   est_row_ct_ferrov.id_trem            := trim(pk_csf.fkg_converte(est_row_ct_ferrov.id_trem));
   est_row_ct_ferrov.nro_chave_cte_orig := trim(pk_csf.fkg_converte(est_row_ct_ferrov.nro_chave_cte_orig)); -- Atualização CTe 3.0
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_ferrov.conhectransp_id, 0) > 0
      and nvl(est_row_ct_ferrov.dm_tp_traf, 9) in (0, 1, 2, 3)
      and trim(pk_csf.fkg_converte(est_row_ct_ferrov.fluxo_ferrov)) is not null
      and nvl(est_row_ct_ferrov.vl_frete, -1) >= 0 
      and nvl(est_row_ct_ferrov.dm_resp_fat, 1) in (1, 2) 
      and nvl(est_row_ct_ferrov.dm_ferr_emit, 1) in (1, 2) then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspferrov_seq.nextval
           into est_row_ct_ferrov.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_ferrov ( id
                                          , conhectransp_id
                                          , dm_tp_traf
                                          , fluxo_ferrov
                                          , id_trem
                                          , vl_frete 
                                          , dm_resp_fat
                                          , dm_ferr_emit
                                          , nro_chave_cte_orig )  -- Atualização CTe 3.0
                                   values ( est_row_ct_ferrov.id
                                          , est_row_ct_ferrov.conhectransp_id
                                          , est_row_ct_ferrov.dm_tp_traf
                                          , est_row_ct_ferrov.fluxo_ferrov
                                          , est_row_ct_ferrov.id_trem
                                          , est_row_ct_ferrov.vl_frete
                                          , est_row_ct_ferrov.dm_resp_fat
                                          , est_row_ct_ferrov.dm_ferr_emit
                                          , est_row_ct_ferrov.nro_chave_cte_orig );  -- Atualização CTe 3.0
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_ferrov set dm_tp_traf         = est_row_ct_ferrov.dm_tp_traf
                                       , fluxo_ferrov       = est_row_ct_ferrov.fluxo_ferrov
                                       , id_trem            = est_row_ct_ferrov.id_trem
                                       , vl_frete           = est_row_ct_ferrov.vl_frete
                                       , dm_resp_fat        = est_row_ct_ferrov.dm_resp_fat
                                       , dm_ferr_emit       = est_row_ct_ferrov.dm_ferr_emit
                                       , nro_chave_cte_orig = est_row_ct_ferrov.nro_chave_cte_orig  -- Atualização CTe 3.0
         where id = est_row_ct_ferrov.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_ferrov fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_ferrov;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao lacres dos cointainers da qtde da carga no modal Aquaviário
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctaquav_lacre ( est_log_generico      in out nocopy dbms_sql.number_table
                                   , est_row_ctaquav_lacre in out nocopy Ctaquav_Lacre%rowtype
                                   , en_conhectransp_id    in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctaquav_lacre.conhectranspaquav_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e do Modal Aquaviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Número do Lacre está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctaquav_lacre.nro_lacre)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Lacre" do Modal Aquaviário (' ||
                         est_row_ctaquav_lacre.nro_lacre || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aquav
      where id = est_row_ctaquav_lacre.conhectranspaquav_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;   
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ctaquav_lacre.conhectranspaquav_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctaquav_lacre.nro_lacre)) is not null then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select ctaquavlacre_seq.nextval
           into est_row_ctaquav_lacre.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ctaquav_lacre ( id
                                   , conhectranspaquav_id
                                   , nro_lacre )
                            values ( est_row_ctaquav_lacre.id
                                   , est_row_ctaquav_lacre.conhectranspaquav_id
                                   , trim(pk_csf.fkg_converte(est_row_ctaquav_lacre.nro_lacre)) );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ctaquav_lacre set nro_lacre = trim(pk_csf.fkg_converte(est_row_ctaquav_lacre.nro_lacre))
          where id = est_row_ctaquav_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctaquav_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctaquav_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas modal Aquaviário.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_aquav ( est_log_generico   in out nocopy dbms_sql.number_table
                                         , est_row_ct_aquav   in out nocopy Conhec_Transp_Aquav%rowtype
                                         , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aquav.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e para registro do Modal Aquaviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Valor da Prestação Base de Cálculo do AFRMM está nulo ou negativo.
   --
   if nvl(est_row_ct_aquav.vl_prest_bc_afrmm, -1) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Prestação Base de Cálculo do AFRMM" do Modal Aquaviário (' ||
                         est_row_ct_aquav.vl_prest_bc_afrmm || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo AFRMM (Adicional de Frete para Renovação da Marinha Mercante) está nulo ou negativo.
   --
   if nvl(est_row_ct_aquav.vl_afrmm, -1) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "AFRMM (Adicional de Frete para Renovação da Marinha Mercante)" do Modal Aquaviário (' ||
                         est_row_ct_aquav.vl_afrmm || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Identificação do Navio está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_aquav.ident_navio)) is null  then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Identificação do Navio" do Modal Aquaviário (' ||
                         est_row_ct_aquav.ident_navio || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Direção do Navio está inválido.
   --
   if nvl(trim(pk_csf.fkg_converte(est_row_ct_aquav.dm_direcao)), '9') not in ('L', 'N', 'S', 'O') then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Direção (N-Norte, L-Leste, S-Sul, O-Oeste)" do Modal Aquaviário (' ||
                         est_row_ct_aquav.dm_direcao || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Tipo de Navegação caso ele não seja nulo.
   --
   if (trim(pk_csf.fkg_converte(est_row_ct_aquav.dm_tp_nav)) is not null
      and (nvl(trim(pk_csf.fkg_converte(est_row_ct_aquav.dm_tp_nav)), '9') not in ('0', '1'))) then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Navegação (0 - Interior; 1 - Cabotagem)" do Modal Aquaviário (' ||
                         est_row_ct_aquav.dm_tp_nav || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Irin está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_aquav.irin)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Irin" do Modal Aquaviário (' ||
                         est_row_ct_aquav.irin || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_aquav.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_aquav.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_aquav.nro_booking   := trim(pk_csf.fkg_converte(est_row_ct_aquav.nro_booking));
   est_row_ct_aquav.nro_ctrl      := trim(pk_csf.fkg_converte(est_row_ct_aquav.nro_ctrl));
   est_row_ct_aquav.ident_navio   := trim(pk_csf.fkg_converte(est_row_ct_aquav.ident_navio));
   est_row_ct_aquav.nro_viagem    := trim(pk_csf.fkg_converte(est_row_ct_aquav.nro_viagem));
   est_row_ct_aquav.dm_direcao    := trim(pk_csf.fkg_converte(est_row_ct_aquav.dm_direcao));
   est_row_ct_aquav.port_emb      := trim(pk_csf.fkg_converte(est_row_ct_aquav.port_emb));
   est_row_ct_aquav.port_transb   := trim(pk_csf.fkg_converte(est_row_ct_aquav.port_transb));
   est_row_ct_aquav.port_dest     := trim(pk_csf.fkg_converte(est_row_ct_aquav.port_dest));
   est_row_ct_aquav.irin          := trim(pk_csf.fkg_converte(est_row_ct_aquav.irin)) ;
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_aquav.conhectransp_id, 0) > 0
      and nvl(est_row_ct_aquav.vl_prest_bc_afrmm, -1) >= 0
      and nvl(est_row_ct_aquav.vl_afrmm, -1) >= 0
      and trim(pk_csf.fkg_converte(est_row_ct_aquav.ident_navio)) is not null
      and nvl(trim(pk_csf.fkg_converte(est_row_ct_aquav.dm_direcao)), '9') in ('L', 'N', 'S', 'O')
      and trim(pk_csf.fkg_converte(est_row_ct_aquav.irin)) is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspaquav_seq.nextval
           into est_row_ct_aquav.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_aquav ( id
                                         , conhectransp_id
                                         , vl_prest_bc_afrmm
                                         , vl_afrmm
                                         , nro_booking
                                         , nro_ctrl
                                         , ident_navio
                                         , nro_viagem
                                         , dm_direcao
                                         , port_emb
                                         , port_transb
                                         , port_dest
                                         , dm_tp_nav
                                         , irin )
                                  values ( est_row_ct_aquav.id
                                         , est_row_ct_aquav.conhectransp_id
                                         , est_row_ct_aquav.vl_prest_bc_afrmm
                                         , est_row_ct_aquav.vl_afrmm
                                         , est_row_ct_aquav.nro_booking
                                         , est_row_ct_aquav.nro_ctrl
                                         , est_row_ct_aquav.ident_navio
                                         , est_row_ct_aquav.nro_viagem
                                         , est_row_ct_aquav.dm_direcao
                                         , est_row_ct_aquav.port_emb
                                         , est_row_ct_aquav.port_transb
                                         , est_row_ct_aquav.port_dest
                                         , est_row_ct_aquav.dm_tp_nav
                                         , est_row_ct_aquav.irin);
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_aquav set vl_prest_bc_afrmm = est_row_ct_aquav.vl_prest_bc_afrmm
                                      , vl_afrmm          = est_row_ct_aquav.vl_afrmm
                                      , nro_booking       = est_row_ct_aquav.nro_booking
                                      , nro_ctrl          = est_row_ct_aquav.nro_ctrl
                                      , ident_navio       = est_row_ct_aquav.ident_navio
                                      , nro_viagem        = est_row_ct_aquav.nro_viagem
                                      , dm_direcao        = est_row_ct_aquav.dm_direcao
                                      , port_emb          = est_row_ct_aquav.port_emb
                                      , port_transb       = est_row_ct_aquav.port_transb
                                      , port_dest         = est_row_ct_aquav.port_dest
                                      , dm_tp_nav         = est_row_ct_aquav.dm_tp_nav
                                      , irin              = est_row_ct_aquav.irin
          where id = est_row_ct_aquav.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_aquav fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_aquav;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações do Transporte de produtos classificados pela ONU como perigosos - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aereo_peri ( est_log_generico        in out nocopy dbms_sql.number_table
                                   , est_row_ct_aereo_peri   in out nocopy ct_aereo_peri%rowtype
                                   , en_conhectransp_id      in            conhec_transp.id%type )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aereo_peri.conhectranspaereo_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado as informações do transporte de produtos classificados pela ONU como perigosos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id   => vn_loggenerico_id
                          , ev_mensagem         => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo           => gv_mensagem_log
                          , en_tipo_log         => ERRO_DE_SISTEMA
                          , en_referencia_id    => gn_referencia_id
                          , ev_obj_referencia   => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Número ONU/UN está inválido.
   if trim(pk_csf.fkg_converte(est_row_ct_aereo_peri.nro_onu)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número ONU/UN" nas Informações do Transporte de produtos classificados pela ONU como perigosos ' ||
                        '(' || est_row_ct_aereo_peri.nro_onu || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   -- Valida se o campo Quantidade total de volumes contendo artigos perigosos está inválido.
   if trim(pk_csf.fkg_converte(est_row_ct_aereo_peri.qtde_tot_emb)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Quantidade total de volumes contendo artigos perigosos" nas Informações do Transporte de produtos classificados pela ONU como perigosos ' ||
                        '(' || est_row_ct_aereo_peri.qtde_tot_emb || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   -- Valida se o campo Quantidade total de artigos perigosos está inválido.
   if nvl(est_row_ct_aereo_peri.qtde_tot_atr_peri, -1) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Quantidade total de artigos perigosos" nas Informações do Transporte de produtos classificados pela ONU como perigosos ' ||
                        '(' || est_row_ct_aereo_peri.qtde_tot_atr_peri || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   -- Valida se o campo Unidade de medida está inválido.
   if nvl(est_row_ct_aereo_peri.dm_unid_med, -9) not in (1, 2, 3, 4, 5) then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Unidade de medida" nas Informações do Transporte de produtos classificados pela ONU como perigosos ' ||
                        '(' || est_row_ct_aereo_peri.dm_unid_med || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir a informação do Transporte de produtos classificados pela ONU como perigosos
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aereo
      where id = est_row_ct_aereo_peri.conhectranspaereo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --   
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id  = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_aereo_peri.nro_onu      := trim(pk_csf.fkg_converte(est_row_ct_aereo_peri.nro_onu));
   est_row_ct_aereo_peri.qtde_tot_emb := trim(pk_csf.fkg_converte(est_row_ct_aereo_peri.qtde_tot_emb));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_aereo_peri.conhectranspaereo_id, 0) > 0
      and est_row_ct_aereo_peri.nro_onu is not null
      and est_row_ct_aereo_peri.qtde_tot_emb is not null
      and nvl(est_row_ct_aereo_peri.qtde_tot_atr_peri, -1) >= 0
      and nvl(est_row_ct_aereo_peri.dm_unid_med, -9) in (1, 2, 3, 4, 5)
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctaereoperi_seq.nextval
           into est_row_ct_aereo_peri.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_aereo_peri ( id
                                   , conhectranspaereo_id
                                   , nro_onu
                                   , qtde_tot_emb
                                   , qtde_tot_atr_peri
                                   , dm_unid_med
                                   )
                            values ( est_row_ct_aereo_peri.id
                                   , est_row_ct_aereo_peri.conhectranspaereo_id
                                   , est_row_ct_aereo_peri.nro_onu
                                   , est_row_ct_aereo_peri.qtde_tot_emb
                                   , est_row_ct_aereo_peri.qtde_tot_atr_peri
                                   , est_row_ct_aereo_peri.dm_unid_med
                                   );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_aereo_peri set nro_onu           = est_row_ct_aereo_peri.nro_onu          
                                , qtde_tot_emb      = est_row_ct_aereo_peri.qtde_tot_emb     
                                , qtde_tot_atr_peri = est_row_ct_aereo_peri.qtde_tot_atr_peri
                                , dm_unid_med       = est_row_ct_aereo_peri.dm_unid_med
          where id = est_row_ct_aereo_peri.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aereo_peri fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aereo_peri;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas modal Aéreo.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_aereo ( est_log_generico   in out nocopy dbms_sql.number_table
                                         , est_row_ct_aereo   in out nocopy Conhec_Transp_Aereo%rowtype
                                         , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aereo.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e para registro do Modal Aéreo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Número da Minuta está negativo caso ele não seja nulo.
   --
   if nvl(est_row_ct_aereo.nro_minuta, 0) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número da Minuta" do Modal Aéreo (' ||
                         est_row_ct_aereo.nro_minuta || ') está negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Número da Operacional do Conhecimento Aéreo está negativo caso ele não seja nulo.
   --
   if nvl(est_row_ct_aereo.nro_oper, 0) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número da Minuta" do Modal Aéreo (' ||
                         est_row_ct_aereo.nro_oper || ') está negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Valor da Tarifa está negativo caso ele não seja nulo.
   --
   if nvl(est_row_ct_aereo.vl_tarifa, 0) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Tarifa" do Modal Aéreo (' ||
                         est_row_ct_aereo.vl_tarifa || ') está negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_aereo.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_aereo.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_aereo.loja_ag_emiss  := trim(pk_csf.fkg_converte(est_row_ct_aereo.loja_ag_emiss));
   est_row_ct_aereo.cod_iata       := trim(pk_csf.fkg_converte(est_row_ct_aereo.cod_iata));
   est_row_ct_aereo.trecho         := trim(pk_csf.fkg_converte(est_row_ct_aereo.trecho));
   est_row_ct_aereo.cl             := trim(pk_csf.fkg_converte(est_row_ct_aereo.cl));
   est_row_ct_aereo.cod_tarifa     := trim(pk_csf.fkg_converte(est_row_ct_aereo.cod_tarifa));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_aereo.conhectransp_id, 0) > 0 then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspaereo_seq.nextval
           into est_row_ct_aereo.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_aereo ( id
                                         , conhectransp_id
                                         , nro_minuta
                                         , nro_oper
                                         , dt_prev_entr
                                         , loja_ag_emiss
                                         , cod_iata
                                         , trecho
                                         , cl
                                         , cod_tarifa
                                         , vl_tarifa )
                                  values ( est_row_ct_aereo.id
                                         , est_row_ct_aereo.conhectransp_id
                                         , est_row_ct_aereo.nro_minuta
                                         , est_row_ct_aereo.nro_oper
                                         , est_row_ct_aereo.dt_prev_entr
                                         , est_row_ct_aereo.loja_ag_emiss
                                         , est_row_ct_aereo.cod_iata
                                         , est_row_ct_aereo.trecho
                                         , est_row_ct_aereo.cl
                                         , est_row_ct_aereo.cod_tarifa
                                         , est_row_ct_aereo.vl_tarifa );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_aereo set nro_minuta    = est_row_ct_aereo.nro_minuta
                                      , nro_oper      = est_row_ct_aereo.nro_oper
                                      , dt_prev_entr  = est_row_ct_aereo.dt_prev_entr
                                      , loja_ag_emiss = est_row_ct_aereo.loja_ag_emiss
                                      , cod_iata      = est_row_ct_aereo.cod_iata
                                      , trecho        = est_row_ct_aereo.trecho
                                      , cl            = est_row_ct_aereo.cl
                                      , cod_tarifa    = est_row_ct_aereo.cod_tarifa
                                      , vl_tarifa     = est_row_ct_aereo.vl_tarifa
          where id = est_row_ct_aereo.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_aereo fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_aereo;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao motorista (rodoviário).
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_moto ( est_log_generico    in out nocopy dbms_sql.number_table
                                 , est_row_ctrodo_moto in out nocopy Ctrodo_Moto%rowtype
                                 , en_conhectransp_id  in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_moto.conhectransprodo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e referente ao do Modal Rodoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Nome do Motorista está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_moto.nome)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do Motorista" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_moto.nome || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo CPF do motorista está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_moto.cpf)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CPF do Motorista" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_moto.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo CPF do motorista com formato inválido.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_moto.cpf))), 0) <> 11 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CPF do Motorista" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_moto.cpf || ') está com formato inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rodo
      where id =  est_row_ctrodo_moto.conhectransprodo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --   
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id =  vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_moto.nome   := trim(pk_csf.fkg_converte(est_row_ctrodo_moto.nome));
   est_row_ctrodo_moto.cpf    := trim(pk_csf.fkg_converte(est_row_ctrodo_moto.cpf) );
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_moto.conhectransprodo_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctrodo_moto.nome)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_moto.cpf))), 0) = 11 then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodomoto_seq.nextval
           into est_row_ctrodo_moto.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_moto ( id
                                 , conhectransprodo_id
                                 , nome
                                 , cpf )
                          values ( est_row_ctrodo_moto.id
                                 , est_row_ctrodo_moto.conhectransprodo_id
                                 , est_row_ctrodo_moto.nome
                                 , est_row_ctrodo_moto.cpf) ;
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_moto set nome = est_row_ctrodo_moto.nome
                              , cpf  = est_row_ctrodo_moto.cpf
          where id = est_row_ctrodo_moto.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_moto fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_moto;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas Dados dos Veículos (Lacre).
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_lacre ( est_log_generico     in out nocopy dbms_sql.number_table
                                  , est_row_ctrodo_lacre in out nocopy Ctrodo_Lacre%rowtype
                                  , en_conhectransp_id   in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_lacre.conhectransprodo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e referente ao Modal Rodoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Lacre está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_lacre.nro_lacre)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Lacre" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_lacre.nro_lacre || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rodo
      where id =  est_row_ctrodo_lacre.conhectransprodo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
     fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_lacre.nro_lacre := trim(pk_csf.fkg_converte(est_row_ctrodo_lacre.nro_lacre));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_lacre.conhectransprodo_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctrodo_lacre.nro_lacre)) is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodolacre_seq.nextval
           into est_row_ctrodo_lacre.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_lacre ( id
                                  , conhectransprodo_id
                                  , nro_lacre )
                           values ( est_row_ctrodo_lacre.id
                                  , est_row_ctrodo_lacre.conhectransprodo_id
                                  , est_row_ctrodo_lacre.nro_lacre );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_lacre set nro_lacre = est_row_ctrodo_lacre.nro_lacre
          where id = est_row_ctrodo_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Proprietários do Veículo.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_veic_prop ( est_log_generico         in out nocopy dbms_sql.number_table
                                      , est_row_ctrodo_veic_prop in out nocopy Ctrodo_Veic_Prop%rowtype
                                      , en_conhectransp_id       in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_veic_prop.ctrodoveic_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e referente aos Dados dos Veículo no Modal Rodoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o tamanho do campo CPF caso ele seja informado.
   --
   if est_row_ctrodo_veic_prop.cpf is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.cpf))), 0) <> 11 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Proprietário do Veículo no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_veic_prop.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho do campo CPF caso ele seja informado.
   --
   if est_row_ctrodo_veic_prop.cnpj is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.cnpj))), 0) <> 14 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Proprietário do Veículo no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_veic_prop.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o tamanho do campo RNTRC está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.rntrc)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "RNTRC" do Proprietário do Veículo no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_veic_prop.rntrc || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o tamanho do campo Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.nome)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome do proprietário" do Proprietário do Veículo no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_veic_prop.nome || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se campo UF está nulo.
   if trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.uf)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla do Estado" do Proprietário do Veículo no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_veic_prop.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado => est_row_ctrodo_veic_prop.uf) = False then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla do Estado" do Proprietário do Veículo no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_veic_prop.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se campo UF está nulo.
   --
   if nvl(est_row_ctrodo_veic_prop.dm_tp_prop, 9) not in (0, 1, 2) then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de proprietário: 0-TAC  Agregado; 1-TAC Independente; ou 2  Outros" do Proprietário do Veículo (' ||
                         est_row_ctrodo_veic_prop.dm_tp_prop || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select b.conhectransp_id
       into vn_conhectransp_id
       from ctrodo_veic a
          , conhec_transp_rodo b
      where b.id = a.conhectransprodo_id
        and a.id =  est_row_ctrodo_veic_prop.ctrodoveic_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_veic_prop.cpf    := trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.cpf));
   est_row_ctrodo_veic_prop.cnpj   := trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.cnpj));
   est_row_ctrodo_veic_prop.rntrc  := trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.rntrc));
   est_row_ctrodo_veic_prop.nome   := trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.nome));
   est_row_ctrodo_veic_prop.ie     := nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.ie))),0);
   est_row_ctrodo_veic_prop.uf     := trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.uf));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_veic_prop.ctrodoveic_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.rntrc)) is not null
      and trim(pk_csf.fkg_converte(est_row_ctrodo_veic_prop.nome))is not null
      and nvl(est_row_ctrodo_veic_prop.dm_tp_prop, 9) in (0, 1, 2) then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodoveicprop_seq.nextval
           into est_row_ctrodo_veic_prop.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_veic_prop ( id
                                      , ctrodoveic_id
                                      , cpf
                                      , cnpj
                                      , rntrc
                                      , nome
                                      , ie
                                      , uf
                                      , dm_tp_prop )
                              values ( est_row_ctrodo_veic_prop.id
                                     , est_row_ctrodo_veic_prop.ctrodoveic_id
                                     , est_row_ctrodo_veic_prop.cpf
                                     , est_row_ctrodo_veic_prop.cnpj
                                     , est_row_ctrodo_veic_prop.rntrc
                                     , est_row_ctrodo_veic_prop.nome
                                     , est_row_ctrodo_veic_prop.ie
                                     , est_row_ctrodo_veic_prop.uf
                                     , est_row_ctrodo_veic_prop.dm_tp_prop );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_veic_prop set cpf        = est_row_ctrodo_veic_prop.cpf
                                   , cnpj       = est_row_ctrodo_veic_prop.cnpj
                                   , rntrc      = est_row_ctrodo_veic_prop.rntrc
                                   , nome       = est_row_ctrodo_veic_prop.nome
                                   , ie         = est_row_ctrodo_veic_prop.ie
                                   , uf         = est_row_ctrodo_veic_prop.uf
                                   , dm_tp_prop = est_row_ctrodo_veic_prop.dm_tp_prop
          where id = est_row_ctrodo_veic_prop.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_veic_prop fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_veic_prop;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Dados do Veículo.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_veic ( est_log_generico    in out nocopy dbms_sql.number_table
                                 , est_row_ctrodo_veic in out nocopy Ctrodo_Veic%rowtype
                                 , en_conhectransp_id  in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_veic.conhectransprodo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e referente ao Modal Rodoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_veic.renavam)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "RENAVAM" do Veículo no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.renavam || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   est_row_ctrodo_veic.placa := upper(trim( pk_csf.fkg_converte ( replace(replace(replace(est_row_ctrodo_veic.placa, '.', ''), ',', ''), '-', '')) ) );
   --
   if est_row_ctrodo_veic.placa is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "PLACA" do Veículo no Modal Rodoviário deve ser informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   --
   if est_row_ctrodo_veic.placa is not null
      and length(est_row_ctrodo_veic.placa) <> 7
      then
      --
      vn_fase := 3.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "PLACA" do Veículo no Modal Rodoviário deve ser informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   /*
   vn_fase := 4;
   --
   if trim( est_row_ctrodo_veic.uf ) <> 'EX' then
      --
      vn_fase := 4.1;
      --
      vv_placa_prefixo  := substr(est_row_ctrodo_veic.placa, 1, 3);
      vv_placa_sufixo   := substr(est_row_ctrodo_veic.placa, 4, 4);
      --
      vn_fase := 4.2;
      -- valida o prefixo e sufixo da placa do veículo
      i := 1;
      while i <= 3 loop
         --
         vn_fase := 4.3;
         --
         if pk_csf.fkg_is_numerico( substr(vv_placa_prefixo, i, i) ) then
            vn_erro := 1;
         end if;
         --
         i := i + 1;
         --
      end loop;
      --
      vn_fase := 4.4;
      --
      if nvl(vn_erro,0) = 1 then
         --
         vn_fase := 4.5;
         --
         gv_mensagem_log := 'A "PLACA" do Veículo no Modal Rodoviário (' || est_row_ctrodo_veic.placa || ') deve conter apenas letras no prefixo.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 4.6;
      --
      if not pk_csf.fkg_is_numerico( vv_placa_sufixo ) then
         --
         vn_fase := 4.7;
         --
         gv_mensagem_log := 'A "PLACA" do Veículo no Modal Rodoviário (' || est_row_ctrodo_veic.placa || ') deve conter apenas números no sufixo.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 4.8;
      --
      if (vv_placa_sufixo = '0000') then
         --
         vn_fase := 4.9;
         --
         gv_mensagem_log := 'A "PLACA" do Veículo no Modal Rodoviário (' || est_row_ctrodo_veic.placa || ') não pode ser igual a "0000" no sufixo.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;

   end if;
   */
   --
   vn_fase := 5;
   --
   if nvl(est_row_ctrodo_veic.tara, -1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Tara em KG" do Veículo no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.tara || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   --
   if nvl(est_row_ctrodo_veic.cap_kg, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Capacidade em KG" do Veículo no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.cap_kg || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   --
   if nvl(est_row_ctrodo_veic.cap_m3, -1) < 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Capacidade em M3" do Veículo no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.cap_m3 || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   --
   if nvl(upper(trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_prop))), 'Z') not in ('P', 'T') then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Propriedade de veículo: P- Próprio; T- terceiro" do Veículo no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.dm_tp_prop || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   if nvl(est_row_ctrodo_veic.dm_tp_veic, 9) not in (0, 1) then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de veículo: 0-Tração; 1-Reboque" do Veículo no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.dm_tp_veic || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   --
   if nvl(trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_rod)), '9') not in ('00', '01', '02', '03', '04', '05', '06') then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Rodado 00:não aplicável 01:Truck 02:Toco 03:Cavalo Mecânico 04:VAN 05:Utilitário 06:Outros" (' ||
                         est_row_ctrodo_veic.dm_tp_rod || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   --
   if nvl(trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_car)), '9') not in ('00', '01', '02', '03', '04', '05') then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Carroceria 00:não aplicável 01:Aberta 02:Fechada/Baú 03:Granelera 04:Porta Container 05:Sider" (' ||
                         est_row_ctrodo_veic.dm_tp_car || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_veic.uf)) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla do Estado onde o veículo está licenciado" no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado => est_row_ctrodo_veic.uf) = False then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla do Estado onde o veículo está licenciado" no Modal Rodoviário (' ||
                         est_row_ctrodo_veic.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rodo
      where id = est_row_ctrodo_veic.conhectransprodo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_veic.cod_int_veic  := trim(pk_csf.fkg_converte(est_row_ctrodo_veic.cod_int_veic));
   est_row_ctrodo_veic.renavam       := trim(pk_csf.fkg_converte(est_row_ctrodo_veic.renavam));
   est_row_ctrodo_veic.placa         := trim(pk_csf.fkg_converte(est_row_ctrodo_veic.placa));
   est_row_ctrodo_veic.tara          := est_row_ctrodo_veic.tara;
   est_row_ctrodo_veic.cap_kg        := est_row_ctrodo_veic.cap_kg;
   est_row_ctrodo_veic.cap_m3        := est_row_ctrodo_veic.cap_m3;
   est_row_ctrodo_veic.dm_tp_prop    := upper(trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_prop)));
   est_row_ctrodo_veic.dm_tp_veic    := est_row_ctrodo_veic.dm_tp_veic;
   est_row_ctrodo_veic.dm_tp_rod     := trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_rod));
   est_row_ctrodo_veic.dm_tp_car     := trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_car));
   est_row_ctrodo_veic.uf            := trim(pk_csf.fkg_converte(est_row_ctrodo_veic.uf));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_veic.conhectransprodo_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctrodo_veic.renavam)) is not null
      and trim(pk_csf.fkg_converte(est_row_ctrodo_veic.placa)) is not null
      and nvl(est_row_ctrodo_veic.tara, -1) >= 0
      and nvl(est_row_ctrodo_veic.cap_kg, -1) >= 0
      and nvl(est_row_ctrodo_veic.cap_m3, -1) >= 0
      and nvl(upper(trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_prop))), 'Z') in ('P', 'T')
      and nvl(est_row_ctrodo_veic.dm_tp_veic, 9) in (0, 1)
      and nvl(trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_rod)), '9') in ('00', '01', '02', '03', '04', '05', '06')
      and nvl(trim(pk_csf.fkg_converte(est_row_ctrodo_veic.dm_tp_car)), '9') in ('00', '01', '02', '03', '04', '05')
      and trim(pk_csf.fkg_converte(est_row_ctrodo_veic.uf)) is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodoveic_seq.nextval
           into est_row_ctrodo_veic.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_veic ( id
                                 , conhectransprodo_id
                                 , cod_int_veic
                                 , renavam
                                 , placa
                                 , tara
                                 , cap_kg
                                 , cap_m3
                                 , dm_tp_prop
                                 , dm_tp_veic
                                 , dm_tp_rod
                                 , dm_tp_car
                                 , uf )
                         values ( est_row_ctrodo_veic.id
                                , est_row_ctrodo_veic.conhectransprodo_id
                                , est_row_ctrodo_veic.cod_int_veic
                                , est_row_ctrodo_veic.renavam
                                , est_row_ctrodo_veic.placa
                                , est_row_ctrodo_veic.tara
                                , est_row_ctrodo_veic.cap_kg
                                , est_row_ctrodo_veic.cap_m3
                                , est_row_ctrodo_veic.dm_tp_prop
                                , est_row_ctrodo_veic.dm_tp_veic
                                , est_row_ctrodo_veic.dm_tp_rod
                                , est_row_ctrodo_veic.dm_tp_car
                                , est_row_ctrodo_veic.uf );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_veic set cod_int_veic = est_row_ctrodo_veic.cod_int_veic
                              , renavam      = est_row_ctrodo_veic.renavam
                              , placa        = est_row_ctrodo_veic.placa
                              , tara         = est_row_ctrodo_veic.tara
                              , cap_kg       = est_row_ctrodo_veic.cap_kg
                              , cap_m3       = est_row_ctrodo_veic.cap_m3
                              , dm_tp_prop   = est_row_ctrodo_veic.dm_tp_prop
                              , dm_tp_veic   = est_row_ctrodo_veic.dm_tp_veic
                              , dm_tp_rod    = est_row_ctrodo_veic.dm_tp_rod
                              , dm_tp_car    = est_row_ctrodo_veic.dm_tp_car
                              , uf           = est_row_ctrodo_veic.uf
          where id = est_row_ctrodo_veic.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_veic fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_veic;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas dispositivos do Vale Pedágio.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_valeped_disp ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_ctrodo_valeped_disp in out nocopy Ctrodo_Valeped_Disp%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   vn_conhetransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_valeped_disp.ctrodovaleped_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e referente ao Vale Pedágio no Modal Rodoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Tipo do dispositivo está com o valor de uma das opções.
   --
   if nvl(est_row_ctrodo_valeped_disp.dm_tp_disp, 9) not in (0, 1, 2) then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo do dispositivo: 0 - Cartão magnético; 1- TAG; 2 - Ticket em papel" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_valeped_disp.dm_tp_disp || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Empresa fornecedora do Vale Pedágio está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_valeped_disp.empr_forn)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Empresa fornecedora do Vale Pedágio" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_valeped_disp.empr_forn || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Data de vigência do Contrato está nulo.
   --
   if est_row_ctrodo_valeped_disp.dt_vig is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de vigência do Contrato" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_valeped_disp.dt_vig || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select b.conhectransp_id
       into vn_conhetransp_id
       from ctrodo_valeped a
          , conhec_transp_rodo b
      where b.id = a.conhectransprodo_id
        and a.id = est_row_ctrodo_valeped_disp.ctrodovaleped_id;
   exception
     when no_data_found then
       vn_conhetransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhetransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhetransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_valeped_disp.empr_forn  := trim(pk_csf.fkg_converte(est_row_ctrodo_valeped_disp.empr_forn));
   est_row_ctrodo_valeped_disp.nro_disp   := trim(pk_csf.fkg_converte(est_row_ctrodo_valeped_disp.nro_disp));
   est_row_ctrodo_valeped_disp.nro_comp   := trim(pk_csf.fkg_converte(est_row_ctrodo_valeped_disp.nro_comp));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_valeped_disp.ctrodovaleped_id, 0) > 0
      and nvl(est_row_ctrodo_valeped_disp.dm_tp_disp, 9) in (0, 1, 2)
      and trim(pk_csf.fkg_converte(est_row_ctrodo_valeped_disp.empr_forn)) is not null
      and est_row_ctrodo_valeped_disp.dt_vig is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodovalepeddisp_seq.nextval
           into est_row_ctrodo_valeped_disp.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_valeped_disp ( id
                                         , ctrodovaleped_id
                                         , dm_tp_disp
                                         , empr_forn
                                         , dt_vig
                                         , nro_disp
                                         , nro_comp  )
                                  values ( est_row_ctrodo_valeped_disp.id
                                         , est_row_ctrodo_valeped_disp.ctrodovaleped_id
                                         , est_row_ctrodo_valeped_disp.dm_tp_disp
                                         , est_row_ctrodo_valeped_disp.empr_forn
                                         , est_row_ctrodo_valeped_disp.dt_vig
                                         , est_row_ctrodo_valeped_disp.nro_disp
                                         , est_row_ctrodo_valeped_disp.nro_comp );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_valeped_disp set dm_tp_disp = est_row_ctrodo_valeped_disp.dm_tp_disp
                                      , empr_forn  = est_row_ctrodo_valeped_disp.empr_forn
                                      , dt_vig     = est_row_ctrodo_valeped_disp.dt_vig
                                      , nro_disp   = est_row_ctrodo_valeped_disp.nro_disp
                                      , nro_comp   = est_row_ctrodo_valeped_disp.nro_comp
          where id = est_row_ctrodo_valeped_disp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_valeped_disp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_valeped_disp;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas Vale Pedágio.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_valeped ( est_log_generico       in out nocopy dbms_sql.number_table
                                    , est_row_ctrodo_valeped in out nocopy Ctrodo_Valeped%rowtype
                                    , en_conhectransp_id     in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   vn_conhectranp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_valeped.conhectransprodo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e referente ao Modal Rodoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Valor Total dos Vales Pedágio é negativo caso ele seja informado.
   --
   if nvl(est_row_ctrodo_valeped.vl_total_valeped, 0) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total dos Vales Pedágio" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_valeped.vl_total_valeped || ') está negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Responsável pelo Pag. do Pedágio está com o valor de uma das opções.
   --
   if nvl(est_row_ctrodo_valeped.dm_resp_pagto, 9) not in (0, 1, 2, 3, 4, 5) then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Responsável pelo pagamento do Vale Pedágio" no Ct-e do Transporte Rodoviário (' ||
                         est_row_ctrodo_valeped.dm_resp_pagto || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectranp_id
       from conhec_transp_rodo
      where id = est_row_ctrodo_valeped.conhectransprodo_id;
   exception
     when no_data_found then
       vn_conhectranp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectranp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectranp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_valeped.nro_reg := trim(pk_csf.fkg_converte(est_row_ctrodo_valeped.nro_reg));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_valeped.conhectransprodo_id, 0) > 0
      and nvl(est_row_ctrodo_valeped.dm_resp_pagto, 9) in (0, 1, 2, 3, 4, 5) then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodovaleped_seq.nextval
           into est_row_ctrodo_valeped.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_valeped ( id
                                    , conhectransprodo_id
                                    , nro_reg
                                    , vl_total_valeped
                                    , dm_resp_pagto )
                             values ( est_row_ctrodo_valeped.id
                                    , est_row_ctrodo_valeped.conhectransprodo_id
                                    , est_row_ctrodo_valeped.nro_reg
                                    , est_row_ctrodo_valeped.vl_total_valeped
                                    , est_row_ctrodo_valeped.dm_resp_pagto );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_valeped set nro_reg          = est_row_ctrodo_valeped.nro_reg
                                 , vl_total_valeped = est_row_ctrodo_valeped.vl_total_valeped
                                 , dm_resp_pagto    = est_row_ctrodo_valeped.dm_resp_pagto
          where id = est_row_ctrodo_valeped.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_valeped fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_valeped;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Vale Pedágio
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_inf_valeped ( est_log_generico           in out nocopy dbms_sql.number_table
                                        , est_row_ctrodo_inf_valeped in out nocopy ctrodo_inf_valeped%rowtype
                                        , en_conhectransp_id         in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_inf_valeped.conhectransprodo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente ao Modal Rodoviário para o Vale Pedágio.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Número da Ordem de coleta está nulo ou negativo.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_inf_valeped.cnpj_forn))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CNPJ da empresa fornecedora do Vale-Pedágio" no Conhec. Transp. Rodoviário (' ||
                         est_row_ctrodo_inf_valeped.cnpj_forn || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
    vn_fase := 3;
   -- Valida se o campo Número da Ordem de coleta está nulo ou negativo.
   --
   if nvl(est_row_ctrodo_inf_valeped.nro_compra, -1) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do comprovante de compra" do Vale Pedágio (' ||
                         est_row_ctrodo_inf_valeped.nro_compra || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   if nvl(est_row_ctrodo_inf_valeped.vl_vale_ped, 0) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Vale-Pedagio" do Vale Pedágio (' ||
                         est_row_ctrodo_inf_valeped.vl_vale_ped || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rodo
      where id = est_row_ctrodo_inf_valeped.conhectransprodo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id =  vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_inf_valeped.cnpj_forn   := trim(pk_csf.fkg_converte(est_row_ctrodo_inf_valeped.cnpj_forn));
   est_row_ctrodo_inf_valeped.nro_compra  := nvl(est_row_ctrodo_inf_valeped.nro_compra,0);
   est_row_ctrodo_inf_valeped.cnpj_pgto   := trim(pk_csf.fkg_converte(est_row_ctrodo_inf_valeped.cnpj_pgto));
   est_row_ctrodo_inf_valeped.vl_vale_ped := nvl(est_row_ctrodo_inf_valeped.vl_vale_ped,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_inf_valeped.conhectransprodo_id, 0) > 0
      and est_row_ctrodo_inf_valeped.cnpj_forn is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select CTRODOINFVALEPED_SEQ.nextval
           into est_row_ctrodo_inf_valeped.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_inf_valeped ( id
                                        , conhectransprodo_id
                                        , cnpj_forn
                                        , nro_compra
                                        , cnpj_pgto
                                        , vl_vale_ped
                                        )
                                 values ( est_row_ctrodo_inf_valeped.id
                                        , est_row_ctrodo_inf_valeped.conhectransprodo_id
                                        , est_row_ctrodo_inf_valeped.cnpj_forn
                                        , est_row_ctrodo_inf_valeped.nro_compra
                                        , est_row_ctrodo_inf_valeped.cnpj_pgto
                                        , est_row_ctrodo_inf_valeped.vl_vale_ped
                                        );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_inf_valeped set cnpj_forn   = est_row_ctrodo_inf_valeped.cnpj_forn
                                     , nro_compra  = est_row_ctrodo_inf_valeped.nro_compra
                                     , cnpj_pgto   = est_row_ctrodo_inf_valeped.cnpj_pgto
                                     , vl_vale_ped = est_row_ctrodo_inf_valeped.vl_vale_ped
          where id = est_row_ctrodo_inf_valeped.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_inf_valeped fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_inf_valeped;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações do modal Rodoviário CTe Outros Serviços - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_rodo_os ( est_log_generico      in out nocopy dbms_sql.number_table
                                , est_row_ct_rodo_os    in out nocopy ct_rodo_os%rowtype
                                , en_conhectransp_id    in            conhec_transp.id%type )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_rodo_os.conhectransp_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado as informações do modal Rodoviário CTe Outros Serviços.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id   => vn_loggenerico_id
                          , ev_mensagem         => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo           => gv_mensagem_log
                          , en_tipo_log         => ERRO_DE_SISTEMA
                          , en_referencia_id    => gn_referencia_id
                          , ev_obj_referencia   => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Tipo Proprietário está inválido.
   if est_row_ct_rodo_os.dm_tp_prop is not null
      and est_row_ct_rodo_os.dm_tp_prop in (0, 1, 2) then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo Proprietário" nas Informações do modal Rodoviário CTe Outros Serviços ' ||
                        '(' || est_row_ct_rodo_os.dm_tp_prop || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir a informação do modal Rodoviário CTe Outros Serviços
   if nvl(est_log_generico.count, 0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_rodo_os.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_rodo_os.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_rodo_os.placa         := trim(pk_csf.fkg_converte(est_row_ct_rodo_os.placa));
   est_row_ct_rodo_os.uf_placa      := trim(pk_csf.fkg_converte(est_row_ct_rodo_os.uf_placa));
   est_row_ct_rodo_os.cpf_cnpj_prop := trim(pk_csf.fkg_converte(est_row_ct_rodo_os.cpf_cnpj_prop));
   est_row_ct_rodo_os.nome_prop     := trim(pk_csf.fkg_converte(est_row_ct_rodo_os.nome_prop));
   est_row_ct_rodo_os.ie_prop       := trim(pk_csf.fkg_converte(est_row_ct_rodo_os.ie_prop));
   est_row_ct_rodo_os.uf_prop       := trim(pk_csf.fkg_converte(est_row_ct_rodo_os.uf_prop));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_rodo_os.conhectransp_id, 0) > 0
      and nvl(est_row_ct_rodo_os.dm_tp_prop, 0) in (0, 1, 2)
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodoos_seq.nextval
           into est_row_ct_rodo_os.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_rodo_os ( id
                                , conhectransp_id
                                , taf
                                , nro_reg_rest
                                , placa
                                , uf_placa
                                , cpf_cnpj_prop
                                , taf_prop
                                , nro_reg_rest_prop
                                , nome_prop
                                , ie_prop
                                , uf_prop
                                , dm_tp_prop
                                )
                         values ( est_row_ct_rodo_os.id
                                , est_row_ct_rodo_os.conhectransp_id
                                , est_row_ct_rodo_os.taf
                                , est_row_ct_rodo_os.nro_reg_rest
                                , est_row_ct_rodo_os.placa
                                , est_row_ct_rodo_os.uf_placa
                                , est_row_ct_rodo_os.cpf_cnpj_prop
                                , est_row_ct_rodo_os.taf_prop
                                , est_row_ct_rodo_os.nro_reg_rest_prop
                                , est_row_ct_rodo_os.nome_prop
                                , est_row_ct_rodo_os.ie_prop
                                , est_row_ct_rodo_os.uf_prop
                                , est_row_ct_rodo_os.dm_tp_prop
                                );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_rodo_os set taf               = est_row_ct_rodo_os.taf
                             , nro_reg_rest      = est_row_ct_rodo_os.nro_reg_rest
                             , placa             = est_row_ct_rodo_os.placa
                             , uf_placa          = est_row_ct_rodo_os.uf_placa
                             , cpf_cnpj_prop     = est_row_ct_rodo_os.cpf_cnpj_prop
                             , taf_prop          = est_row_ct_rodo_os.taf_prop
                             , nro_reg_rest_prop = est_row_ct_rodo_os.nro_reg_rest_prop
                             , nome_prop         = est_row_ct_rodo_os.nome_prop
                             , ie_prop           = est_row_ct_rodo_os.ie_prop
                             , uf_prop           = est_row_ct_rodo_os.uf_prop
                             , dm_tp_prop        = est_row_ct_rodo_os.dm_tp_prop
          where id = est_row_ct_rodo_os.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_rodo_os fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_rodo_os;

------------------------------------------------------------------------------------------------------
-- Integra as Informações da Dimensão da Carga do Modal Aéreo.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aereo_dimen ( est_log_generico       in out nocopy dbms_sql.number_table
                                    , est_row_ct_aereo_dimen in out nocopy ct_aereo_dimen%rowtype
                                    , en_conhectransp_id     in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aereo_dimen.conhectranspaereo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente ao Modal Aéreo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aereo
      where id = est_row_ct_aereo_dimen.conhectranspaereo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;   
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_aereo_dimen.conhectranspaereo_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTAEREODIMEN_SEQ.nextval
           into est_row_ct_aereo_dimen.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_aereo_dimen( id
                                   , conhectranspaereo_id
                                   , dimensao
                                   )
                             values( est_row_ct_aereo_dimen.id
                                   , est_row_ct_aereo_dimen.conhectranspaereo_id
                                   , est_row_ct_aereo_dimen.dimensao
                                   );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_aereo_dimen set dimensao = est_row_ct_aereo_dimen.dimensao
          where id = est_row_ct_aereo_dimen.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aereo_dimen fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aereo_dimen;

------------------------------------------------------------------------------------------------------  
-- Integra as Informações do manuseio da carga do modal Aéreo.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aereo_inf_man ( est_log_generico         in out nocopy dbms_sql.number_table
                                      , est_row_ct_aereo_inf_man in out nocopy ct_aereo_inf_man%rowtype
                                      , en_conhectransp_id       in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aereo_inf_man.conhectranspaereo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informações de Manuseio.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aereo
      where id = est_row_ct_aereo_inf_man.conhectranspaereo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_aereo_inf_man.conhectranspaereo_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTAEREOINFMAN_SEQ.nextval
           into est_row_ct_aereo_inf_man.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_aereo_inf_man( id
                                     , conhectranspaereo_id
                                     , dm_manuseio
                                     )
                               values( est_row_ct_aereo_inf_man.id
                                     , est_row_ct_aereo_inf_man.conhectranspaereo_id
                                     , est_row_ct_aereo_inf_man.dm_manuseio
                                     );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_aereo_inf_man set dm_manuseio = est_row_ct_aereo_inf_man.dm_manuseio
          where id = est_row_ct_aereo_inf_man.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aereo_inf_man fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aereo_inf_man;

------------------------------------------------------------------------------------------------------
-- Integra as Informações do manuseio da carga especial do modal Aéreo.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aereo_carg_esp ( est_log_generico          in out nocopy dbms_sql.number_table
                                       , est_row_ct_aereo_carg_esp in out nocopy ct_aereo_carg_esp%rowtype
                                       , en_conhectransp_id        in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aereo_carg_esp.conhectranspaereo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informações de Cargas Especiais.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aereo
       where id = est_row_ct_aereo_carg_esp.conhectranspaereo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_aereo_carg_esp.conhectranspaereo_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTAEREOCARGESP_SEQ.nextval
           into est_row_ct_aereo_carg_esp.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_aereo_carg_esp( id
                                      , conhectranspaereo_id
                                      , cod_imp
                                      )
                                values( est_row_ct_aereo_carg_esp.id
                                      , est_row_ct_aereo_carg_esp.conhectranspaereo_id
                                      , est_row_ct_aereo_carg_esp.cod_imp
                                      );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_aereo_carg_esp set cod_imp = est_row_ct_aereo_carg_esp.cod_imp
          where id = est_row_ct_aereo_carg_esp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aereo_carg_esp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aereo_carg_esp;

------------------------------------------------------------------------------------------------------
-- Integra as Informações de Balsas do modal Aquaviário.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aquav_balsa ( est_log_generico       in out nocopy dbms_sql.number_table
                                    , est_row_ct_aquav_balsa in out nocopy ct_aquav_balsa%rowtype
                                    , en_conhectransp_id     in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aquav_balsa.conhectranspaquav_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes de Balsas.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aquav
      where id = est_row_ct_aquav_balsa.conhectranspaquav_id;   
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_aquav_balsa.conhectranspaquav_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTAQUAVBALSA_SEQ.nextval
           into est_row_ct_aquav_balsa.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_aquav_balsa( id
                                   , conhectranspaquav_id
                                   , balsa
                                   )
                             values( est_row_ct_aquav_balsa.id
                                   , est_row_ct_aquav_balsa.conhectranspaquav_id
                                   , est_row_ct_aquav_balsa.balsa
                                   );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_aquav_balsa set balsa = est_row_ct_aquav_balsa.balsa
          where id = est_row_ct_aquav_balsa.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aquav_balsa fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aquav_balsa;

------------------------------------------------------------------------------------------------------
-- Integra as Informações de Conteiners do modal Aquaviário.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aquav_cont ( est_log_generico      in out nocopy dbms_sql.number_table
                                   , est_row_ct_aquav_cont in out nocopy ct_aquav_cont%rowtype
                                   , en_conhectransp_id    in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aquav_cont.conhectranspaquav_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes de Conteiners.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Conteiner está inválido.
   if trim(pk_csf.fkg_converte(est_row_ct_aquav_cont.conteiner)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Conteiner" nas Informações de Conteiners do modal Aquaviário ' ||
                        '(' || est_row_ct_aquav_cont.conteiner || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aquav
       where id = est_row_ct_aquav_cont.conhectranspaquav_id;
   exception
     when no_data_found then
        vn_conhectransp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_aquav_cont.conteiner := trim(pk_csf.fkg_converte(est_row_ct_aquav_cont.conteiner));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_aquav_cont.conhectranspaquav_id, 0) > 0
      and est_row_ct_aquav_cont.conteiner is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctaquavcont_seq.nextval
           into est_row_ct_aquav_cont.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_aquav_cont ( id
                                   , conhectranspaquav_id
                                   , conteiner
                                   )
                            values ( est_row_ct_aquav_cont.id
                                   , est_row_ct_aquav_cont.conhectranspaquav_id
                                   , est_row_ct_aquav_cont.conteiner
                                   );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_aquav_cont set conteiner = est_row_ct_aquav_cont.conteiner
          where id = est_row_ct_aquav_cont.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aquav_cont fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aquav_cont;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Notas fiscais eletrônicas de Conteiners do modal Aquaviário.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aquav_cont_nfe ( est_log_generico            in out nocopy dbms_sql.number_table
                                       , est_row_ct_aquav_cont_nfe   in out nocopy ct_aquav_cont_nfe%rowtype
                                       , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_nfe.nro_chave_nfe)) is null then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de acesso da NF-e" nas Informações de NFe dos conteiners do Transporte Aquaviario ' ||
                        '(' || est_row_ct_aquav_cont_nfe.nro_chave_nfe || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_nfe.nro_chave_nfe)) is not null 
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_nfe.nro_chave_nfe))), 0) <> 44 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O tamanho da "Chave de acesso da NF-e" nas Informações de NFe dos conteiners do Transporte Aquaviario ' ||
                        '(' || est_row_ct_aquav_cont_nfe.nro_chave_nfe || ') diferente de 44 dígitos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if nvl(est_row_ct_aquav_cont_nfe.unid_med_rat,0) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Unidade de medida rateada (Peso,Volume)" nas Informações de NFe dos conteiners do Transporte Aquaviario ' ||
                        '(' || est_row_ct_aquav_cont_nfe.unid_med_rat || ') não pode ser negativa.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => en_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = en_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_aquav_cont_nfe.nro_chave_nfe := trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_nfe.nro_chave_nfe));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_aquav_cont_nfe.ctaquavcont_id, 0) > 0
      and est_row_ct_aquav_cont_nfe.nro_chave_nfe is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctaquavcontnfe_seq.nextval
           into est_row_ct_aquav_cont_nfe.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_aquav_cont_nfe ( id
                                       , ctaquavcont_id
                                       , nro_chave_nfe
                                       , unid_med_rat
                                       )
                                values ( est_row_ct_aquav_cont_nfe.id
                                       , est_row_ct_aquav_cont_nfe.ctaquavcont_id
                                       , est_row_ct_aquav_cont_nfe.nro_chave_nfe
                                       , est_row_ct_aquav_cont_nfe.unid_med_rat
                                       );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_aquav_cont_nfe set nro_chave_nfe = est_row_ct_aquav_cont_nfe.nro_chave_nfe
                                    , unid_med_rat  = est_row_ct_aquav_cont_nfe.unid_med_rat
          where id = est_row_ct_aquav_cont_nfe.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aquav_cont_nfe fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aquav_cont_nfe;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Notas de Conteiners do modal Aquaviário.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aquav_cont_nf ( est_log_generico            in out nocopy dbms_sql.number_table
                                      , est_row_ct_aquav_cont_nf    in out nocopy ct_aquav_cont_nf%rowtype
                                      , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_nf.serie)) is null then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Serie da nota fiscal do conteiner do modal aquaviário não informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if nvl(est_row_ct_aquav_cont_nf.nro_nf, 0) <= 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Número da nota fiscal do conteiner do modal aquaviário não informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if nvl(est_row_ct_aquav_cont_nf.unid_med_rat, 0) < 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Unidade de medida rateada (Peso,Volume) do conteiner do modal aquaviário não pode ser negativa.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id =>  en_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = en_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_aquav_cont_nf.serie := trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_nf.serie));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_aquav_cont_nf.ctaquavcont_id, 0) > 0
      and est_row_ct_aquav_cont_nf.serie is not null
      and nvl(est_row_ct_aquav_cont_nf.nro_nf, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select ctaquavcontnf_seq.nextval
           into est_row_ct_aquav_cont_nf.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_aquav_cont_nf ( id
                                      , ctaquavcont_id
                                      , serie
                                      , nro_nf
                                      , unid_med_rat
                                      )
                               values ( est_row_ct_aquav_cont_nf.id
                                      , est_row_ct_aquav_cont_nf.ctaquavcont_id
                                      , est_row_ct_aquav_cont_nf.serie
                                      , est_row_ct_aquav_cont_nf.nro_nf
                                      , est_row_ct_aquav_cont_nf.unid_med_rat
                                      );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_aquav_cont_nf set serie        = est_row_ct_aquav_cont_nf.serie
                                   , nro_nf       = est_row_ct_aquav_cont_nf.nro_nf
                                   , unid_med_rat = est_row_ct_aquav_cont_nf.unid_med_rat
          where id = est_row_ct_aquav_cont_nf.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aquav_cont_nf fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aquav_cont_nf;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Lacres de Conteiners do modal Aquaviário.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_aquav_cont_lacre ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_ct_aquav_cont_lacre in out nocopy ct_aquav_cont_lacre%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_aquav_cont_lacre.ctaquavcont_id,0) = 0 
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes de Lacres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Lacre está inválido.
   if trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_lacre.lacre)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Lacre" nas Informações de Lacres de Conteiners do modal Aquaviário ' ||
                        '(' || est_row_ct_aquav_cont_lacre.lacre || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_aquav
      where id = est_row_ct_aquav_cont_lacre.ctaquavcont_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_aquav_cont_lacre.lacre := trim(pk_csf.fkg_converte(est_row_ct_aquav_cont_lacre.lacre));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_aquav_cont_lacre.ctaquavcont_id, 0) > 0
      and est_row_ct_aquav_cont_lacre.lacre is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctaquavcontlacre_seq.nextval
           into est_row_ct_aquav_cont_lacre.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_aquav_cont_lacre ( id
                                         , ctaquavcont_id
                                         , lacre
                                         )
                                  values ( est_row_ct_aquav_cont_lacre.id
                                         , est_row_ct_aquav_cont_lacre.ctaquavcont_id
                                         , est_row_ct_aquav_cont_lacre.lacre
                                         );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_aquav_cont_lacre set lacre = est_row_ct_aquav_cont_lacre.lacre
          where id = est_row_ct_aquav_cont_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_aquav_cont_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_aquav_cont_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de detalhes dos vagões.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_ferrov_detvag ( est_log_generico         in out nocopy dbms_sql.number_table
                                      , est_row_ct_ferrov_detvag in out nocopy ct_ferrov_detvag%rowtype
                                      , en_conhectransp_id       in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_ferrov_detvag.conhectranspferrov_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes dos detalhes dos Vagoes.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_ferrov
      where id = est_row_ct_ferrov_detvag.conhectranspferrov_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id =  vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_ferrov_detvag.conhectranspferrov_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select ctferrovdetvag_seq.nextval
           into est_row_ct_ferrov_detvag.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_ferrov_detvag ( id
                                      , conhectranspferrov_id
                                      , nro_vagao
                                      , cap_ton
                                      , tipo_vagao
                                      , peso_real
                                      , peso_bc_frete
                                      )
                              values ( est_row_ct_ferrov_detvag.id
                                     , est_row_ct_ferrov_detvag.conhectranspferrov_id
                                     , est_row_ct_ferrov_detvag.nro_vagao
                                     , est_row_ct_ferrov_detvag.cap_ton
                                     , est_row_ct_ferrov_detvag.tipo_vagao
                                     , est_row_ct_ferrov_detvag.peso_real
                                     , est_row_ct_ferrov_detvag.peso_bc_frete
                                     );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_ferrov_detvag set nro_vagao = est_row_ct_ferrov_detvag.nro_vagao
          where id = est_row_ct_ferrov_detvag.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_ferrov_detvag fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_ferrov_detvag;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de lacres dos vagões.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_fer_detvag_lacre ( est_log_generico               in out nocopy dbms_sql.number_table
                                         , est_row_ct_ferrov_detvag_lacre in out nocopy ct_ferrov_detvag_lacre%rowtype
                                         , en_conhectransp_id             in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_ferrov_detvag_lacre.CTFERROVDETVAG_ID,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes dos lacres dos Vagoes.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_ferrov
      where id = est_row_ct_ferrov_detvag_lacre.CTFERROVDETVAG_ID;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id =  vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_ferrov_detvag_lacre.CTFERROVDETVAG_ID, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTFERROVDETVAGLACRE_SEQ.nextval
           into est_row_ct_ferrov_detvag_lacre.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_ferrov_detvag_lacre ( id
                                            , ctferrovdetvag_id
                                            , nro_lacre
                                            )
                                     values ( est_row_ct_ferrov_detvag_lacre.id
                                            , est_row_ct_ferrov_detvag_lacre.CTFERROVDETVAG_ID
                                            , est_row_ct_ferrov_detvag_lacre.nro_lacre
                                            );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_ferrov_detvag_lacre set nro_lacre   = est_row_ct_ferrov_detvag_lacre.nro_lacre
          where id = est_row_ct_ferrov_detvag_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_fer_detvag_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_fer_detvag_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de conteiners dos vagões.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_fer_detvag_cont ( est_log_generico              in out nocopy dbms_sql.number_table
                                        , est_row_ct_ferrov_detvag_cont in out nocopy ct_ferrov_detvag_cont%rowtype
                                        , en_conhectransp_id            in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_ferrov_detvag_cont.CTFERROVDETVAG_ID,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes dos conteiners dos Vagoes.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_ferrov
      where id = est_row_ct_ferrov_detvag_cont.CTFERROVDETVAG_ID;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_ferrov_detvag_cont.ctferrovdetvag_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTFERROVDETVAGCONT_SEQ.nextval
           into est_row_ct_ferrov_detvag_cont.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_ferrov_detvag_cont ( id
                                           , ctferrovdetvag_id
                                           , nro_cont
                                           , dt_prev
                                           )
                                    values ( est_row_ct_ferrov_detvag_cont.id
                                           , est_row_ct_ferrov_detvag_cont.CTFERROVDETVAG_ID
                                           , est_row_ct_ferrov_detvag_cont.nro_cont
                                           , est_row_ct_ferrov_detvag_cont.dt_prev
                                           );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_ferrov_detvag_cont set nro_cont   = est_row_ct_ferrov_detvag_cont.nro_cont
          where id = est_row_ct_ferrov_detvag_cont.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_fer_detvag_cont fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_fer_detvag_cont;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Rateio das NF de Vagões.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_ferrov_detvag_nf ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_ct_ferrov_detvag_nf in out nocopy ct_ferrov_detvag_nf%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_ferrov_detvag_nf.CTFERROVDETVAG_ID,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes de Rateio das NF de Vagões.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_ferrov
      where id = est_row_ct_ferrov_detvag_nf.CTFERROVDETVAG_ID;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_ferrov_detvag_nf.ctferrovdetvag_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTFERROVDETVAGNF_SEQ.nextval
           into est_row_ct_ferrov_detvag_nf.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_ferrov_detvag_nf ( id
                                         , ctferrovdetvag_id
                                         , serie
                                         , nro_nf
                                         , peso_rat
                                         )
                                  values ( est_row_ct_ferrov_detvag_nf.id
                                         , est_row_ct_ferrov_detvag_nf.ctferrovdetvag_id
                                         , est_row_ct_ferrov_detvag_nf.serie
                                         , est_row_ct_ferrov_detvag_nf.nro_nf
                                         , est_row_ct_ferrov_detvag_nf.peso_rat
                                         );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_ferrov_detvag_nf set nro_nf   = est_row_ct_ferrov_detvag_nf.nro_nf
          where id = est_row_ct_ferrov_detvag_nf.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_ferrov_detvag_nf fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_ferrov_detvag_nf;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações de Rateio das NFe de Vagões.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_fer_detvag_nfe ( est_log_generico             in out nocopy dbms_sql.number_table
                                       , est_row_ct_ferrov_detvag_nfe in out nocopy ct_ferrov_detvag_nfe%rowtype
                                       , en_conhectransp_id           in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_ferrov_detvag_nfe.CTFERROVDETVAG_ID,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as informaçoes de Rateio das NFe de Vagões.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e Insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_ferrov
      where id = est_row_ct_ferrov_detvag_nfe.CTFERROVDETVAG_ID;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_ferrov_detvag_nfe.ctferrovdetvag_id, 0) > 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select CTFERROVDETVAGNFE_SEQ.nextval
           into est_row_ct_ferrov_detvag_nfe.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into ct_ferrov_detvag_nfe ( id
                                          , ctferrovdetvag_id
                                          , nro_chave_nfe
                                          , peso_rat
                                          )
                                   values ( est_row_ct_ferrov_detvag_nfe.id
                                          , est_row_ct_ferrov_detvag_nfe.ctferrovdetvag_id
                                          , est_row_ct_ferrov_detvag_nfe.nro_chave_nfe
                                          , est_row_ct_ferrov_detvag_nfe.peso_rat
                                          );
         --
      else
         --
         vn_fase := 99.6;
         --
         update ct_ferrov_detvag_nfe set nro_chave_nfe   = est_row_ct_ferrov_detvag_nfe.nro_chave_nfe
          where id = est_row_ct_ferrov_detvag_nfe.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_fer_detvag_nfe fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_fer_detvag_nfe;   

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas Ordens de Coleta associados.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrodo_occ ( est_log_generico   in out nocopy dbms_sql.number_table
                                , est_row_ctrodo_occ in out nocopy Ctrodo_Occ%rowtype
                                , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrodo_occ.conhectransprodo_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. referente as Ordens de Coleta associados.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Número da Ordem de coleta está nulo ou negativo.
   --
   if nvl(est_row_ctrodo_occ.nro_occ, -1) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número da Ordem de coleta" no Conhec. Transp. Rodoviário (' ||
                         est_row_ctrodo_occ.nro_occ || ') está nulo ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
    vn_fase := 3;
   -- Valida se o campo Número da Ordem de coleta está nulo ou negativo.
   --
   if est_row_ctrodo_occ.dt_emissao is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de emissão da ordem de coleta" no Conhec. Transp. Rodoviário (' ||
                         est_row_ctrodo_occ.dt_emissao || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Número do CNPJ está nulo e com tamanho inválido.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_occ.cnpj))), 0) <> 14 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" na Ordem de Coleta do Conhec. Transp. Rodoviário (' ||
                         est_row_ctrodo_occ.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Inscrição Estadual está nulo e com tamanho inválido.
   est_row_ctrodo_occ.ie        := trim ( replace(replace(replace(replace(replace(upper(est_row_ctrodo_occ.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctrodo_occ.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" na Ordem de Coleta do Conhec. Transp. Rodoviário (' ||
                         est_row_ctrodo_occ.ie || ') deve conter de 2 a 14 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5.2;
   -- IE não pode ser ISENTO
   if upper( trim(pk_csf.fkg_converte(est_row_ctrodo_occ.ie)) ) like 'ISENT%' then
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" na Ordem de Coleta do Conhec. Transp. Rodoviário (' ||
                         est_row_ctrodo_occ.ie || ') não é aceita pela estrutura do arquivo XML.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrodo_occ.uf)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" na Ordem de Coleta do Conhec. Transp. Rodoviário não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Sigla da UF é válida.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado => est_row_ctrodo_occ.uf) = False then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" na Ordem de Coleta do Conhec. Transp. Rodoviário (' ||
                         est_row_ctrodo_occ.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rodo
      where id = est_row_ctrodo_occ.conhectransprodo_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrodo_occ.serie     := trim(pk_csf.fkg_converte(est_row_ctrodo_occ.serie));
   est_row_ctrodo_occ.nro_occ   := nvl(est_row_ctrodo_occ.nro_occ,0);
   est_row_ctrodo_occ.cnpj      := trim(pk_csf.fkg_converte(est_row_ctrodo_occ.cnpj));
   est_row_ctrodo_occ.cod_int   := trim(pk_csf.fkg_converte(est_row_ctrodo_occ.cod_int));
   est_row_ctrodo_occ.uf        := trim(pk_csf.fkg_converte(est_row_ctrodo_occ.uf));
   est_row_ctrodo_occ.fone      := trim(pk_csf.fkg_converte(est_row_ctrodo_occ.fone));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrodo_occ.conhectransprodo_id, 0) > 0
      and est_row_ctrodo_occ.dt_emissao is not null
      and est_row_ctrodo_occ.cnpj is not null
      and est_row_ctrodo_occ.ie is not null
      and est_row_ctrodo_occ.uf is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctrodoocc_seq.nextval
           into est_row_ctrodo_occ.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrodo_occ ( id
                                , conhectransprodo_id
                                , serie
                                , nro_occ
                                , dt_emissao
                                , cnpj
                                , cod_int
                                , ie
                                , uf
                                , fone
                                )
                         values ( est_row_ctrodo_occ.id
                                , est_row_ctrodo_occ.conhectransprodo_id
                                , est_row_ctrodo_occ.serie
                                , est_row_ctrodo_occ.nro_occ
                                , est_row_ctrodo_occ.dt_emissao
                                , est_row_ctrodo_occ.cnpj
                                , est_row_ctrodo_occ.cod_int
                                , est_row_ctrodo_occ.ie
                                , est_row_ctrodo_occ.uf
                                , est_row_ctrodo_occ.fone
                                );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrodo_occ set serie      = est_row_ctrodo_occ.serie
                             , nro_occ    = est_row_ctrodo_occ.nro_occ
                             , dt_emissao = est_row_ctrodo_occ.dt_emissao
                             , cnpj       = est_row_ctrodo_occ.cnpj
                             , cod_int    = est_row_ctrodo_occ.cod_int
                             , ie         = est_row_ctrodo_occ.ie
                             , uf         = est_row_ctrodo_occ.uf
                             , fone       = est_row_ctrodo_occ.fone
          where id = est_row_ctrodo_occ.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;

exception
   when others then
      null;
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrodo_occ fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrodo_occ;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao do modal Rodoviário.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_rodo ( est_log_generico           in out nocopy dbms_sql.number_table
                                        , est_row_conhec_transp_rodo in out nocopy Conhec_Transp_Rodo%rowtype
                                        , en_conhectransp_id         in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_rodo.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro Modal Rodoviário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Registro Nacional de Transportadores Rodoviários de Carga está nulo ou negativo.
   --
   if nvl(est_row_conhec_transp_rodo.rntrc, -1) <= 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Registro Nacional de Transportadores Rodoviários de Carga" no Modal Rodoviário (' ||
                         est_row_conhec_transp_rodo.rntrc || ') está nulo ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Data prevista para entrega da carga no Recebedor está nulo.
   -- Para a versão 3.0 do CTE esse campo foi retirado, então pode vim c vlr nulo
   if est_row_conhec_transp_rodo.dm_lotacao is not null and
      est_row_conhec_transp_rodo.dm_lotacao not in (0, 1) then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de Lotação: 0 - Não, 1 - Sim" no Modal Rodoviário (' ||
                         est_row_conhec_transp_rodo.dm_lotacao || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Data prevista para entrega da carga no Recebedor está nulo.
   --
   if est_row_conhec_transp_rodo.dt_prev_entr is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data prevista para entrega da carga no Recebedor" no Modal Rodoviário não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if est_row_conhec_transp_rodo.ciot is not null
      and nvl(est_row_conhec_transp_rodo.ciot,-1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código Identificador da Operação de Transporte" no Modal Rodoviário não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5.2;
   --
   if est_row_conhec_transp_rodo.ciot is not null
      and length(est_row_conhec_transp_rodo.ciot) <> 12 then
      --
      vn_fase := 5.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código Identificador da Operação de Transporte" no Modal Rodoviário deve ter 12 digitos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_rodo.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_rodo.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_conhec_transp_rodo.conhectransp_id, 0) >  0
      and nvl(est_row_conhec_transp_rodo.rntrc, -1)      >= 0
      and est_row_conhec_transp_rodo.dt_prev_entr        is not null
      and (est_row_conhec_transp_rodo.dm_lotacao is null or nvl(est_row_conhec_transp_rodo.dm_lotacao, 9) in (0, 1)) then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectransprodo_seq.nextval
           into est_row_conhec_transp_rodo.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_rodo ( id
                                        , conhectransp_id
                                        , rntrc
                                        , dt_prev_entr
                                        , dm_lotacao
                                        , serie_ctrb
                                        , nro_ctrb
                                        , ciot
                                        )
                                 values ( est_row_conhec_transp_rodo.id
                                        , est_row_conhec_transp_rodo.conhectransp_id
                                        , est_row_conhec_transp_rodo.rntrc
                                        , est_row_conhec_transp_rodo.dt_prev_entr
                                        , est_row_conhec_transp_rodo.dm_lotacao
                                        , est_row_conhec_transp_rodo.serie_ctrb
                                        , est_row_conhec_transp_rodo.nro_ctrb
                                        , est_row_conhec_transp_rodo.ciot
                                        );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_rodo set rntrc        = est_row_conhec_transp_rodo.rntrc
                                     , dt_prev_entr = est_row_conhec_transp_rodo.dt_prev_entr
                                     , dm_lotacao   = est_row_conhec_transp_rodo.dm_lotacao
                                     , serie_ctrb   = est_row_conhec_transp_rodo.serie_ctrb
                                     , nro_ctrb     = est_row_conhec_transp_rodo.nro_ctrb
                                     , ciot         = est_row_conhec_transp_rodo.ciot
          where id = est_row_conhec_transp_rodo.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_rodo fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_rodo;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Seguro da Carga.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_seg ( est_log_generico          in out nocopy dbms_sql.number_table
                                       , est_row_conhec_transp_seg in out nocopy Conhec_Transp_Seg%rowtype
                                       , en_conhectransp_id        in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_seg.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro Seguro da Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Responsável pelo seguro está inválido.
   --
   if nvl(est_row_conhec_transp_seg.dm_resp_seg, 9) not in (0, 1, 2, 3, 4, 5) then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Responsável pelo seguro" (' || est_row_conhec_transp_seg.dm_resp_seg || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Valor da Mercadoria para efeito de averbação está negativo caso ele seja informado.
   --
   if nvl(est_row_conhec_transp_seg.vl_merc, 0) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Carga para efeito de averbação" (' ||
                         est_row_conhec_transp_seg.vl_merc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   est_row_conhec_transp_seg.nro_averb        := trim(pk_csf.fkg_converte(est_row_conhec_transp_seg.nro_averb));
   --
   vn_fase := 4.1;
   --
   if est_row_conhec_transp_seg.nro_averb is not null
      and length(est_row_conhec_transp_seg.nro_averb) <> 20
      then
      --
      vn_fase := 4.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número da Averbação" (' ||
                         est_row_conhec_transp_seg.nro_averb || ') deve ter uma tamanho de 20 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_seg.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_seg.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_seg.descr_seguradora := trim(pk_csf.fkg_converte(est_row_conhec_transp_seg.descr_seguradora));
   est_row_conhec_transp_seg.nro_apolice      := trim(pk_csf.fkg_converte(est_row_conhec_transp_seg.nro_apolice));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_conhec_transp_seg.conhectransp_id, 0) > 0
      and nvl(est_row_conhec_transp_seg.dm_resp_seg, 9) in (0, 1, 2, 3, 4, 5)
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspseg_seq.nextval
           into est_row_conhec_transp_seg.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_seg ( id
                                       , conhectransp_id
                                       , dm_resp_seg
                                       , descr_seguradora
                                       , nro_apolice
                                       , nro_averb
                                       , vl_merc 
                                       )
                                values ( est_row_conhec_transp_seg.id
                                       , est_row_conhec_transp_seg.conhectransp_id
                                       , est_row_conhec_transp_seg.dm_resp_seg
                                       , est_row_conhec_transp_seg.descr_seguradora
                                       , est_row_conhec_transp_seg.nro_apolice
                                       , est_row_conhec_transp_seg.nro_averb
                                       , est_row_conhec_transp_seg.vl_merc 
                                       );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_seg set dm_resp_seg      = est_row_conhec_transp_seg.dm_resp_seg
                                    , descr_seguradora = est_row_conhec_transp_seg.descr_seguradora
                                    , nro_apolice      = est_row_conhec_transp_seg.nro_apolice
                                    , nro_averb        = est_row_conhec_transp_seg.nro_averb
                                    , vl_merc          = est_row_conhec_transp_seg.vl_merc
          where id = est_row_conhec_transp_seg.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_seg fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_seg;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Documentos de transporte anterior eletrônicos.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctdocant_eletr ( est_log_generico       in out nocopy dbms_sql.number_table
                                    , est_row_ctdocant_eletr in out nocopy Ctdocant_Eletr%rowtype
                                    , en_conhectransp_id     in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctdocant_eletr.conhectranspdocant_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não foi informado o Emissor do Documento Anterior para registro do documento eletrônico.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o tamanho do campo Chave de acesso do CT-e e se ele é nulo.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctdocant_eletr.nro_chave_cte))), 0) <> 44 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de acesso do CT-e" do Documento de Transporte Anterior Eletrônico(' ||
                         est_row_ctdocant_eletr.nro_chave_cte || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_docant
      where id = est_row_ctdocant_eletr.conhectranspdocant_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null; 
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctdocant_eletr.nro_chave_cte := trim(pk_csf.fkg_converte(est_row_ctdocant_eletr.nro_chave_cte));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctdocant_eletr.conhectranspdocant_id, 0) > 0
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctdocant_eletr.nro_chave_cte))), 0) = 44 then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctdocanteletr_seq.nextval
           into est_row_ctdocant_eletr.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctdocant_eletr ( id
                                    , conhectranspdocant_id
                                    , nro_chave_cte
                                    )
                             values ( est_row_ctdocant_eletr.id
                                    , est_row_ctdocant_eletr.conhectranspdocant_id
                                    , est_row_ctdocant_eletr.nro_chave_cte
                                    );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctdocant_eletr set nro_chave_cte = est_row_ctdocant_eletr.nro_chave_cte
          where id = est_row_ctdocant_eletr.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctdocant_eletr fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctdocant_eletr;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Documentos de transporte anterior papel.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctdocant_papel ( est_log_generico       in out nocopy dbms_sql.number_table
                                    , est_row_ctdocant_papel in out nocopy Ctdocant_Papel%rowtype
                                    , en_conhectransp_id     in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctdocant_papel.conhectranspdocant_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Emissor do Documento Anterior para registro do documento em papel.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Tipo do Documento originário é válido.
   --
   if nvl(trim(pk_csf.fkg_converte(est_row_ctdocant_papel.dm_tp_doc)), '999') not in ('00','01','02','03','04','05','06','07','08','09','10','11','12', '99') then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo do Documento Originário" no Documento de Transporte Anterior em Papel(' ||
                         est_row_ctdocant_papel.dm_tp_doc || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Série do Documento Fiscal está nula.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdocant_papel.serie)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Série do Documento Fiscal" do Documento de Transporte Anterior em Papel não informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Número do Documento Fiscal é nulo ou negativo.
   --
   if nvl(est_row_ctdocant_papel.nro_docto, -1) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Documento Fiscal" do Documento de Transporte Anterior em Papel não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Data de emissão do documento é negativa.
   --
   if est_row_ctdocant_papel.dt_emissao is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de emissão do documento" do Documento de Transporte Anterior em Papel não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_docant
      where id = est_row_ctdocant_papel.conhectranspdocant_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;     
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctdocant_papel.dm_tp_doc  := trim(pk_csf.fkg_converte(est_row_ctdocant_papel.dm_tp_doc));
   est_row_ctdocant_papel.serie      := trim(pk_csf.fkg_converte(est_row_ctdocant_papel.serie));
   est_row_ctdocant_papel.sub_serie  := trim(pk_csf.fkg_converte(est_row_ctdocant_papel.sub_serie));
   est_row_ctdocant_papel.nro_docto  := nvl(est_row_ctdocant_papel.nro_docto,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctdocant_papel.conhectranspdocant_id, 0) > 0
      and nvl(trim(pk_csf.fkg_converte(est_row_ctdocant_papel.dm_tp_doc)), '999') in ('00','01','02','03','04','05','06','07','08','09','10','11','12','99')
      and trim(pk_csf.fkg_converte(est_row_ctdocant_papel.serie)) is not null
      and est_row_ctdocant_papel.dt_emissao is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctdocantpapel_seq.nextval
           into est_row_ctdocant_papel.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctdocant_papel ( id
                                    , conhectranspdocant_id
                                    , dm_tp_doc
                                    , serie
                                    , sub_serie
                                    , nro_docto
                                    , dt_emissao 
                                    )
                             values ( est_row_ctdocant_papel.id
                                    , est_row_ctdocant_papel.conhectranspdocant_id
                                    , est_row_ctdocant_papel.dm_tp_doc
                                    , est_row_ctdocant_papel.serie
                                    , est_row_ctdocant_papel.sub_serie
                                    , est_row_ctdocant_papel.nro_docto
                                    , est_row_ctdocant_papel.dt_emissao 
                                    );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctdocant_papel set dm_tp_doc  = est_row_ctdocant_papel.dm_tp_doc
                                 , serie      = est_row_ctdocant_papel.serie
                                 , sub_serie  = est_row_ctdocant_papel.sub_serie
                                 , nro_docto  = est_row_ctdocant_papel.nro_docto
                                 , dt_emissao = est_row_ctdocant_papel.dt_emissao
          where id = est_row_ctdocant_papel.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctdocant_papel fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctdocant_papel;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Transporte Anterior.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhectransp_docant ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_conhectransp_docant in out nocopy Conhec_Transp_Docant%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhectransp_docant.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro Emissor do Documento Anterior.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo CNPJ tamanho do cnpj caso ele não seja nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhectransp_docant.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhectransp_docant.cnpj))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Emissor do Documento Anterior (' ||
                         est_row_conhectransp_docant.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho do Número do CPF caso ele não seja nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhectransp_docant.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhectransp_docant.cpf))), 0) <> 11 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Emissor do Documento Anterior (' ||
                         est_row_conhectransp_docant.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Inscrição Estadual está nulo e o seu tamanho.
   est_row_conhectransp_docant.ie    := trim ( replace(replace(replace(replace(replace(upper(est_row_conhectransp_docant.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_conhectransp_docant.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Emissor do Documento Anterior (' ||
                         est_row_conhectransp_docant.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhectransp_docant.uf)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Emissor do Documento Anterior não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Sigla da UF está inválido.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado => est_row_conhectransp_docant.uf) = False then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Emissor do Documento Anterior (' ||
                         est_row_conhectransp_docant.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Razão Social ou Nome do expedidor está inválido.
   --
   if trim(pk_csf.fkg_converte(est_row_conhectransp_docant.nome)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome do expedidor" do Emissor do Documento Anterior não informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhectransp_docant.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhectransp_docant.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhectransp_docant.cnpj  := trim(pk_csf.fkg_converte(est_row_conhectransp_docant.cnpj));
   est_row_conhectransp_docant.cpf   := trim(pk_csf.fkg_converte(est_row_conhectransp_docant.cpf));
   est_row_conhectransp_docant.uf    := trim(pk_csf.fkg_converte(est_row_conhectransp_docant.uf));
   est_row_conhectransp_docant.nome  := trim(pk_csf.fkg_converte(est_row_conhectransp_docant.nome));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_conhectransp_docant.conhectransp_id, 0) > 0
      and est_row_conhectransp_docant.ie is not null
      and est_row_conhectransp_docant.uf is not null
      and est_row_conhectransp_docant.nome is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspdocant_seq.nextval
           into est_row_conhectransp_docant.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_docant ( id
                                          , conhectransp_id
                                          , cnpj
                                          , cpf
                                          , ie
                                          , uf
                                          , nome
                                          )
                                   values ( est_row_conhectransp_docant.id
                                          , est_row_conhectransp_docant.conhectransp_id
                                          , est_row_conhectransp_docant.cnpj
                                          , est_row_conhectransp_docant.cpf
                                          , est_row_conhectransp_docant.ie
                                          , est_row_conhectransp_docant.uf
                                          , est_row_conhectransp_docant.nome
                                          );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_docant set cnpj = est_row_conhectransp_docant.cnpj
                                       , cpf  = est_row_conhectransp_docant.cpf
                                       , ie   = est_row_conhectransp_docant.ie
                                       , uf   = est_row_conhectransp_docant.uf
                                       , nome = est_row_conhectransp_docant.nome
          where id = est_row_conhectransp_docant.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhectransp_docant fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhectransp_docant;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Lacres dos containers.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctcont_lacre ( est_log_generico     in out nocopy dbms_sql.number_table
                                  , est_row_ctcont_lacre in out nocopy Ctcont_Lacre%rowtype
                                  , en_conhectransp_id   in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctcont_lacre.conhectranspcont_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado a Informação dos Containers para registro dos Lacres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Número do lacre está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctcont_lacre.nro_lacre)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do lacre" nas Informações dos Containers do Grupo de CTe Normal ou Substituído não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_cont
      where id = est_row_ctcont_lacre.conhectranspcont_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id  = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctcont_lacre.nro_lacre := trim(pk_csf.fkg_converte(est_row_ctcont_lacre.nro_lacre));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctcont_lacre.conhectranspcont_id, 0) > 0
      and est_row_ctcont_lacre.nro_lacre is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctcontlacre_seq.nextval
           into est_row_ctcont_lacre.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctcont_lacre ( id
                                  , conhectranspcont_id
                                  , nro_lacre 
                                  )
                           values ( est_row_ctcont_lacre.id
                                  , est_row_ctcont_lacre.conhectranspcont_id
                                  , est_row_ctcont_lacre.nro_lacre
                                  );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctcont_lacre set nro_lacre = est_row_ctcont_lacre.nro_lacre
          where id = est_row_ctcont_lacre.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctcont_lacre fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctcont_lacre;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a Informações dos containers.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_cont ( est_log_generico           in out nocopy dbms_sql.number_table
                                        , est_row_conhec_transp_cont in out nocopy Conhec_Transp_Cont%rowtype
                                        , en_conhectransp_id         in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_cont.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro das Informação dos Containers.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Número do Container está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_cont.nro_cont)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Container" do Grupo de informações do CT-e Normal e Substituto não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_cont.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_cont.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_cont.nro_cont := trim(pk_csf.fkg_converte(est_row_conhec_transp_cont.nro_cont));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_conhec_transp_cont.conhectransp_id, 0) > 0
      and est_row_conhec_transp_cont.nro_cont is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspcont_seq.nextval
           into est_row_conhec_transp_cont.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_cont ( id
                                        , conhectransp_id
                                        , nro_cont
                                        , dt_prevista 
                                        )
                                 values ( est_row_conhec_transp_cont.id
                                        , est_row_conhec_transp_cont.conhectransp_id
                                        , est_row_conhec_transp_cont.nro_cont
                                        , est_row_conhec_transp_cont.dt_prevista 
                                        );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_cont set nro_cont    = est_row_conhec_transp_cont.nro_cont
                                     , dt_prevista = est_row_conhec_transp_cont.dt_prevista
          where id = est_row_conhec_transp_cont.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_cont fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_cont;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a Informações de quantidades da Carga do CT.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctinfcarga_qtde ( est_log_generico        in out nocopy dbms_sql.number_table
                                     , est_row_ctinfcarga_qtde in out nocopy Ctinfcarga_Qtde%rowtype
                                     , en_conhectransp_id      in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctinfcarga_qtde.conhectranspinfcarga_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado as Informações de Carga para registro das Quantidades.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Código da Unidade de Medida está válido.
   --
   if nvl(trim(pk_csf.fkg_converte(est_row_ctinfcarga_qtde.dm_cod_unid)), '99') not in ('00', '01', '02', '03', '04', '05') then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código da Unidade de Medida" da Inf. da Quantidades da Carga (' ||
                         est_row_ctinfcarga_qtde.dm_cod_unid || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Tipo da Medida está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctinfcarga_qtde.tipo_medida)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo da Medida" das Informações da Quantidades da Carga (' ||
                         est_row_ctinfcarga_qtde.tipo_medida || ') não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Quantidade da carga está inválido.
   --
   if nvl(est_row_ctinfcarga_qtde.qtde_carga, -1) <= 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Quantidade da carga" nas Informações da Quantidades da Carga (' ||
                         est_row_ctinfcarga_qtde.qtde_carga || ') não pode ser zero ou negativa.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_infcarga
      where id = est_row_ctinfcarga_qtde.conhectranspinfcarga_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctinfcarga_qtde.dm_cod_unid  := trim(pk_csf.fkg_converte(est_row_ctinfcarga_qtde.dm_cod_unid));
   est_row_ctinfcarga_qtde.tipo_medida  := trim(pk_csf.fkg_converte(est_row_ctinfcarga_qtde.tipo_medida));
   est_row_ctinfcarga_qtde.qtde_carga   := nvl(est_row_ctinfcarga_qtde.qtde_carga,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctinfcarga_qtde.conhectranspinfcarga_id, 0) > 0
      and nvl(trim(pk_csf.fkg_converte(est_row_ctinfcarga_qtde.dm_cod_unid)), '99') in ('00', '01', '02', '03', '04', '05')
      and trim(pk_csf.fkg_converte(est_row_ctinfcarga_qtde.tipo_medida)) is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctinfcargaqtde_seq.nextval
           into est_row_ctinfcarga_qtde.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctinfcarga_qtde ( id
                                     , conhectranspinfcarga_id
                                     , dm_cod_unid
                                     , tipo_medida
                                     , qtde_carga 
                                     )
                              values ( est_row_ctinfcarga_qtde.id
                                     , est_row_ctinfcarga_qtde.conhectranspinfcarga_id
                                     , est_row_ctinfcarga_qtde.dm_cod_unid
                                     , est_row_ctinfcarga_qtde.tipo_medida
                                     , est_row_ctinfcarga_qtde.qtde_carga 
                                     );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctinfcarga_qtde set dm_cod_unid = est_row_ctinfcarga_qtde.dm_cod_unid
                                  , tipo_medida = est_row_ctinfcarga_qtde.tipo_medida
                                  , qtde_carga  = est_row_ctinfcarga_qtde.qtde_carga
          where id = est_row_ctinfcarga_qtde.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctinfcarga_qtde fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctinfcarga_qtde;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a Informações da Carga do CT-e.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_infcarga ( est_log_generico    in out nocopy dbms_sql.number_table
                                 , est_row_ct_infcarga in out nocopy Conhec_Transp_Infcarga%rowtype
                                 , en_conhectransp_id  in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_infcarga.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro das Informações da Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id   => vn_loggenerico_id
                          , ev_mensagem         => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo           => gv_mensagem_log
                          , en_tipo_log         => ERRO_DE_SISTEMA
                          , en_referencia_id    => gn_referencia_id
                          , ev_obj_referencia   => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Valor total da mercadoria está inválido.
   --
   if nvl(est_row_ct_infcarga.vl_total_merc, 0) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor total da mercadoria" nas Informações da Carga (' ||
                         est_row_ct_infcarga.vl_total_merc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Produto predominante está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_infcarga.prod_predom)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Produto predominante" nas Informações da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_infcarga.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_infcarga.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_infcarga.vl_total_merc  := nvl(est_row_ct_infcarga.vl_total_merc, 0);
   est_row_ct_infcarga.prod_predom    := trim(pk_csf.fkg_converte(est_row_ct_infcarga.prod_predom));
   est_row_ct_infcarga.outra_caract   := trim(pk_csf.fkg_converte(est_row_ct_infcarga.outra_caract));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_infcarga.conhectransp_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ct_infcarga.prod_predom)) is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspinfcarga_seq.nextval
           into est_row_ct_infcarga.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_infcarga ( id
                                            , conhectransp_id
                                            , vl_total_merc
                                            , prod_predom
                                            , outra_caract
                                            , vl_carga_averb  -- Atualização CTe 3.0
                                            )
                                     values ( est_row_ct_infcarga.id
                                            , est_row_ct_infcarga.conhectransp_id
                                            , est_row_ct_infcarga.vl_total_merc
                                            , est_row_ct_infcarga.prod_predom
                                            , est_row_ct_infcarga.outra_caract
                                            , est_row_ct_infcarga.vl_carga_averb  -- Atualização CTe 3.0
                                            );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_infcarga set vl_total_merc  = est_row_ct_infcarga.vl_total_merc
                                         , prod_predom    = est_row_ct_infcarga.prod_predom
                                         , outra_caract   = est_row_ct_infcarga.outra_caract
                                         , vl_carga_averb = est_row_ct_infcarga.vl_carga_averb  -- Atualização CTe 3.0
          where id = est_row_ct_infcarga.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_infcarga fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_infcarga;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações do ICMS de partilha com a UF de término do serviço de transporte na operação interestadual - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_part_icms ( est_log_generico     in out nocopy dbms_sql.number_table
                                  , est_row_ct_part_icms in out nocopy conhec_transp_part_icms%rowtype
                                  , en_conhectransp_id   in            conhec_transp.id%type )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_part_icms.conhectransp_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o ICMS de partilha com a UF de término do serviço de transporte na operação interestadual.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id   => vn_loggenerico_id
                          , ev_mensagem         => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo           => gv_mensagem_log
                          , en_tipo_log         => ERRO_DE_SISTEMA
                          , en_referencia_id    => gn_referencia_id
                          , ev_obj_referencia   => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Valor da BC do ICMS na UF de término da prestação do serviço de transporte está inválido.
   if nvl(est_row_ct_part_icms.vl_bc_uf_fim, -1) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da base de cálculo" nas Informações do ICMS de partilha com a UF de término do serviço de transporte na operação interestadual ' ||
                        '(' || est_row_ct_part_icms.vl_bc_uf_fim || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   -- Valida se o campo Percentual do ICMS relativo ao Fundo de Combate à pobreza (FCP) na UF de término da prestação do serviço de transporte está inválido.
   if nvl(est_row_ct_part_icms.perc_fcp_uf_fim, -1) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Percentual do ICMS relativo ao Fundo de Combate à pobreza (FCP)" nas Informações do ICMS de partilha com a UF de término do serviço ' ||
                         'de transporte na operação interestadual (' || est_row_ct_part_icms.perc_fcp_uf_fim || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   -- Valida se o campo Alíquota interna da UF de término da prestação do serviço de transporte está inválido.
   if nvl(est_row_ct_part_icms.perc_icms_uf_fim, -1) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Alíquota interna" nas Informações do ICMS de partilha com a UF de término do serviço ' ||
                         'de transporte na operação interestadual (' || est_row_ct_part_icms.perc_icms_uf_fim || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   -- Valida se o campo Alíquota interestadual das UF envolvidas está inválido.
   if nvl(est_row_ct_part_icms.perc_icms_inter, -1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Alíquota interestadual" nas Informações do ICMS de partilha com a UF de término do serviço ' ||
                         'de transporte na operação interestadual (' || est_row_ct_part_icms.perc_icms_inter || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   --
   -- Valida se o campo Percentual provisório de partilha entre os estados está inválido.
   if nvl(est_row_ct_part_icms.perc_icms_inter_part, 0) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Percentual provisório de partilha entre os estados" nas Informações do ICMS de partilha com a UF de término do serviço ' ||
                         'de transporte na operação interestadual (' || est_row_ct_part_icms.perc_icms_inter_part || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   --
   -- Valida se o campo Valor do ICMS relativo ao Fundo de Combate á Pobreza (FCP) da UF de término da prestação está inválido.
   if nvl(est_row_ct_part_icms.vl_fcp_uf_fim, -1) < 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do ICMS relativo ao Fundo de Combate á Pobreza (FCP)" nas Informações do ICMS de partilha com a UF de término do serviço ' ||
                         'de transporte na operação interestadual (' || est_row_ct_part_icms.vl_fcp_uf_fim || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   --
   -- Valida se o campo Valor do ICMS de partilha para a UF de término da prestação do serviço de transporte está inválido.
   if nvl(est_row_ct_part_icms.vl_icms_uf_fim, -1) < 0 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do ICMS de partilha para a UF de término" nas Informações do ICMS de partilha com a UF de término do serviço ' ||
                         'de transporte na operação interestadual (' || est_row_ct_part_icms.vl_icms_uf_fim || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   -- Valida se o campo Valor do ICMS de partilha para a UF de início da prestação do serviço de transporte está inválido.
   if nvl(est_row_ct_part_icms.vl_icms_uf_ini, -1) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do ICMS de partilha para a UF de início" nas Informações do ICMS de partilha com a UF de término do serviço ' ||
                         'de transporte na operação interestadual (' || est_row_ct_part_icms.vl_icms_uf_ini || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir a informação do ICMS de partilha com a UF de término do serviço de transporte na operação interestadual
   if nvl(est_log_generico.count, 0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_part_icms.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_part_icms.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_part_icms.conhectransp_id, 0) > 0
      and nvl(est_row_ct_part_icms.vl_bc_uf_fim, -1) >= 0
      and nvl(est_row_ct_part_icms.perc_fcp_uf_fim, -1) >= 0
      and nvl(est_row_ct_part_icms.perc_icms_uf_fim, -1) >= 0
      and nvl(est_row_ct_part_icms.perc_icms_inter, -1) >= 0
      and nvl(est_row_ct_part_icms.perc_icms_inter_part, 0) >= 0
      and nvl(est_row_ct_part_icms.vl_fcp_uf_fim, -1) >= 0
      and nvl(est_row_ct_part_icms.vl_icms_uf_fim, -1) >= 0
      and nvl(est_row_ct_part_icms.vl_icms_uf_ini, -1) >= 0
      then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr, 0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectranspparticms_seq.nextval
           into est_row_ct_part_icms.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_part_icms ( id
                                             , conhectransp_id
                                             , vl_bc_uf_fim
                                             , perc_fcp_uf_fim
                                             , perc_icms_uf_fim
                                             , perc_icms_inter
                                             , perc_icms_inter_part
                                             , vl_fcp_uf_fim
                                             , vl_icms_uf_fim
                                             , vl_icms_uf_ini
                                             )
                                      values ( est_row_ct_part_icms.id
                                             , est_row_ct_part_icms.conhectransp_id
                                             , est_row_ct_part_icms.vl_bc_uf_fim
                                             , est_row_ct_part_icms.perc_fcp_uf_fim
                                             , est_row_ct_part_icms.perc_icms_uf_fim
                                             , est_row_ct_part_icms.perc_icms_inter
                                             , est_row_ct_part_icms.perc_icms_inter_part
                                             , est_row_ct_part_icms.vl_fcp_uf_fim
                                             , est_row_ct_part_icms.vl_icms_uf_fim
                                             , est_row_ct_part_icms.vl_icms_uf_ini
                                             );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_part_icms set vl_bc_uf_fim         = est_row_ct_part_icms.vl_bc_uf_fim
                                          , perc_fcp_uf_fim      = est_row_ct_part_icms.perc_fcp_uf_fim
                                          , perc_icms_uf_fim     = est_row_ct_part_icms.perc_icms_uf_fim
                                          , perc_icms_inter      = est_row_ct_part_icms.perc_icms_inter
                                          , perc_icms_inter_part = est_row_ct_part_icms.perc_icms_inter_part
                                          , vl_fcp_uf_fim        = est_row_ct_part_icms.vl_fcp_uf_fim
                                          , vl_icms_uf_fim       = est_row_ct_part_icms.vl_icms_uf_fim
                                          , vl_icms_uf_ini       = est_row_ct_part_icms.vl_icms_uf_ini
          where id = est_row_ct_part_icms.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_part_icms fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                            , ev_obj_referencia   => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_part_icms;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações do CT-e multimodal vinculado - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_inf_vinc_mult ( est_log_generico         in out nocopy dbms_sql.number_table
                                      , est_row_ct_inf_vinc_mult in out nocopy ct_inf_vinc_mult%rowtype
                                      , en_conhectransp_id       in            conhec_transp.id%type )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_inf_vinc_mult.conhectransp_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado as informações do CT-e multimodal vinculado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id   => vn_loggenerico_id
                          , ev_mensagem         => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo           => gv_mensagem_log
                          , en_tipo_log         => ERRO_DE_SISTEMA
                          , en_referencia_id    => gn_referencia_id
                          , ev_obj_referencia   => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Chave de Acesso do CTe Multmodal está inválido.
   if trim(pk_csf.fkg_converte(est_row_ct_inf_vinc_mult.nro_chave_cte)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de Acesso do CTe Multmodal" nas Informações do CT-e multimodal vinculado ' ||
                        '(' || est_row_ct_inf_vinc_mult.nro_chave_cte || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   -- Valida se o campo Chave de Acesso do CTe Multmodal está com 44 caracteres
   if trim(pk_csf.fkg_converte(est_row_ct_inf_vinc_mult.nro_chave_cte)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ct_inf_vinc_mult.nro_chave_cte))), 0) <> 44 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de Acesso do CTe Multimodal" nas Informações do CT-e multimodal vinculado ' ||
                        '(' || est_row_ct_inf_vinc_mult.nro_chave_cte || ') está diferente de 44 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir a informação do CT-e multimodal vinculado
   if nvl(est_log_generico.count, 0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_inf_vinc_mult.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_inf_vinc_mult.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_inf_vinc_mult.nro_chave_cte := trim(pk_csf.fkg_converte(est_row_ct_inf_vinc_mult.nro_chave_cte));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_inf_vinc_mult.conhectransp_id, 0) > 0
      and est_row_ct_inf_vinc_mult.nro_chave_cte is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr, 0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctinfvincmult_seq.nextval
           into est_row_ct_inf_vinc_mult.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_inf_vinc_mult ( id
                                      , conhectransp_id
                                      , nro_chave_cte
                                      )
                               values ( est_row_ct_inf_vinc_mult.id
                                      , est_row_ct_inf_vinc_mult.conhectransp_id
                                      , est_row_ct_inf_vinc_mult.nro_chave_cte
                                      );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_inf_vinc_mult set nro_chave_cte = est_row_ct_inf_vinc_mult.nro_chave_cte
          where id = est_row_ct_inf_vinc_mult.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_inf_vinc_mult fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_inf_vinc_mult;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações do Percurso do CT-e Outros Serviços - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_transp_percurso ( est_log_generico           in out nocopy dbms_sql.number_table
                                        , est_row_ct_transp_percurso in out nocopy conhec_transp_percurso%rowtype
                                        , ev_sigla_estado            in            estado.sigla_estado%type
                                        , en_conhectransp_id         in            conhec_transp.id%type )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_transp_percurso.conhectransp_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado as informações do Percurso do CT-e Outros Serviços.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id   => vn_loggenerico_id
                          , ev_mensagem         => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo           => gv_mensagem_log
                          , en_tipo_log         => ERRO_DE_SISTEMA
                          , en_referencia_id    => gn_referencia_id
                          , ev_obj_referencia   => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Sequencia do Percurso está inválido.
   if nvl(est_row_ct_transp_percurso.seq, -1) < 0 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sequencia do Percurso" nas informações do Percurso do CT-e Outros Serviços ' ||
                        '(' || est_row_ct_transp_percurso.seq || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if ev_sigla_estado is not null then
      --
      vn_fase := 3.1;
      --
      est_row_ct_transp_percurso.estado_id := pk_csf.fkg_estado_id ( ev_sigla_estado => trim(ev_sigla_estado) );
      --
   end if;
   --
   vn_fase := 4;
   --
   -- Valida se o campo UF está inválido.
   if nvl(est_row_ct_transp_percurso.estado_id, 0) <= 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "UF" nas informações do Percurso do CT-e Outros Serviços ' ||
                        '(' || ev_sigla_estado || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir a informação do Percurso do CT-e Outros Serviços
   if nvl(est_log_generico.count, 0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_transp_percurso.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_transp_percurso.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   if nvl(est_row_ct_transp_percurso.conhectransp_id, 0) > 0
      and nvl(est_row_ct_transp_percurso.seq, -1) >= 0
      and nvl(est_row_ct_transp_percurso.estado_id, 0) > 0 then
      --
      vn_fase := 99.3;
      --
      if nvl(gn_tipo_integr, 0) = 1 then
         --
         vn_fase := 99.4;
         --
         select conhectransppercurso_seq.nextval
           into est_row_ct_transp_percurso.id
           from dual;
         --
         vn_fase := 99.5;
         --
         insert into conhec_transp_percurso ( id
                                            , conhectransp_id
                                            , seq
                                            , estado_id
                                            )
                                     values ( est_row_ct_transp_percurso.id
                                            , est_row_ct_transp_percurso.conhectransp_id
                                            , est_row_ct_transp_percurso.seq
                                            , est_row_ct_transp_percurso.estado_id
                                            );
         --
      else
         --
         vn_fase := 99.6;
         --
         update conhec_transp_percurso set seq       = est_row_ct_transp_percurso.seq
                                         , estado_id = est_row_ct_transp_percurso.estado_id
          where id = est_row_ct_transp_percurso.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_transp_percurso fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_transp_percurso;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações dos documentos referenciados CTe Outros Serviços - Atualização CTe 3.0
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_doc_ref_os ( est_log_generico      in out nocopy dbms_sql.number_table
                                   , est_row_ct_doc_ref_os in out nocopy ct_doc_ref_os%rowtype
                                   , en_conhectransp_id    in            conhec_transp.id%type )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_doc_ref_os.conhectransp_id, 0) = 0
      and nvl(est_log_generico.count, 0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado as informações dos documentos referenciados CTe Outros Serviços.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id   => vn_loggenerico_id
                          , ev_mensagem         => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo           => gv_mensagem_log
                          , en_tipo_log         => ERRO_DE_SISTEMA
                          , en_referencia_id    => gn_referencia_id
                          , ev_obj_referencia   => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Número do documento está inválido.
   if trim(pk_csf.fkg_converte(est_row_ct_doc_ref_os.nro_doc)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do documento" nas Informações dos documentos referenciados CTe Outros Serviços ' ||
                        '(' || est_row_ct_doc_ref_os.nro_doc || ') não foi informado ou está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   -- Valida se o campo Data de Emissão está inválido.
   if est_row_ct_doc_ref_os.dt_emiss is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" nas Informações dos documentos referenciados CTe Outros Serviços ' ||
                         '(' || est_row_ct_doc_ref_os.dt_emiss || ') não foi informada ou está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Valida e insere)
   -- então realiza a condição de inserir a informação dos documentos referenciados CTe Outros Serviços
   if nvl(est_log_generico.count, 0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_doc_ref_os.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_doc_ref_os.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_doc_ref_os.nro_doc   := trim(pk_csf.fkg_converte(est_row_ct_doc_ref_os.nro_doc));
   est_row_ct_doc_ref_os.serie     := trim(pk_csf.fkg_converte(est_row_ct_doc_ref_os.serie));
   est_row_ct_doc_ref_os.subserie  := trim(pk_csf.fkg_converte(est_row_ct_doc_ref_os.subserie));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_doc_ref_os.conhectransp_id, 0) > 0
      and est_row_ct_doc_ref_os.nro_doc is not null
      and est_row_ct_doc_ref_os.dt_emiss is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr, 0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctdocrefos_seq.nextval
           into est_row_ct_doc_ref_os.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_doc_ref_os ( id
                                   , conhectransp_id
                                   , nro_doc
                                   , serie
                                   , subserie
                                   , dt_emiss
                                   , vl_transp
                                   )
                            values ( est_row_ct_doc_ref_os.id
                                   , est_row_ct_doc_ref_os.conhectransp_id
                                   , est_row_ct_doc_ref_os.nro_doc
                                   , est_row_ct_doc_ref_os.serie
                                   , est_row_ct_doc_ref_os.subserie
                                   , est_row_ct_doc_ref_os.dt_emiss
                                   , est_row_ct_doc_ref_os.vl_transp
                                   );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_doc_ref_os set nro_doc   = est_row_ct_doc_ref_os.nro_doc
                                , serie     = est_row_ct_doc_ref_os.serie
                                , subserie  = est_row_ct_doc_ref_os.subserie
                                , dt_emiss  = est_row_ct_doc_ref_os.dt_emiss
                                , vl_transp = est_row_ct_doc_ref_os.vl_transp
          where id = est_row_ct_doc_ref_os.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_doc_ref_os fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_doc_ref_os;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Impostos.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_imp ( est_log_generico          in out nocopy dbms_sql.number_table
                                       , est_row_conhec_transp_imp in out nocopy Conhec_Transp_Imp%rowtype
                                       , en_cd_imp                 in            Tipo_Imposto.cd%TYPE
                                       , ev_cod_st                 in            Cod_ST.cod_st%TYPE
                                       , en_conhectransp_id        in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_imp.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro das Informações dos Impostos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --Busca códigos do impostos;
   if  trim(en_cd_imp) is not null then
      --
      vn_fase := 2.1;
      --
      est_row_conhec_transp_imp.tipoimp_id := pk_csf.fkg_Tipo_Imposto_id ( en_cd  => en_cd_imp );
      --
   end if;
   --
   vn_fase := 3;
   --Busca códigos do ST;
   if nvl(est_row_conhec_transp_imp.tipoimp_id, -1) > 0 
      and trim(ev_cod_st) is not null then
      --
       vn_fase := 3.1;
      --
       est_row_conhec_transp_imp.codst_id := pk_csf.fkg_Cod_ST_id ( ev_cod_st      => ev_cod_st
                                                                  , en_tipoimp_id  => est_row_conhec_transp_imp.tipoimp_id );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Tipo de Imposto está nulo.
   --
   if nvl(est_row_conhec_transp_imp.tipoimp_id, -1) < 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Imposto" (' || en_cd_imp || ') não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Tipo de Imposto é ICMS.
   --
   if pk_csf.fkg_Tipo_Imp_Sigla( en_id => est_row_conhec_transp_imp.tipoimp_id) <> 'ICMS' then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Imposto" (' || ev_cod_st || ') não é de ICMS.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Código ST está nulo.
   --
   if nvl(est_row_conhec_transp_imp.codst_id, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código ST" nas Informações dos Impostos (' || ev_cod_st || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Código ST está inválido.
   --
   if trim(ev_cod_st) not in ('00', '20', '40', '41', '51', '60', '90') then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Apenas são válidos os Códigos de ST 00, 20, 40, 41, 51, 60 e 90 para o tipo de imposto ICMS.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Valor da Base de Cálculo está negativo.
   --
   if nvl(est_row_conhec_transp_imp.vl_base_calc, 0) < 0 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Base de Cálculo" nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.vl_base_calc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                            , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Aliquota aplicada em percentual está negativo.
   --
   if nvl(est_row_conhec_transp_imp.aliq_apli, 0) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Aliquota aplicada em percentual" nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.aliq_apli || ') não pode ser negativa.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Valor do imposto tributado está negativo.
   --
   if nvl(est_row_conhec_transp_imp.vl_imp_trib, 0) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do imposto tributado" nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.vl_imp_trib || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Percentual de redução de base está negativo.
   --
   if nvl(est_row_conhec_transp_imp.perc_reduc, 0) < 0 then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Percentual de redução de base" nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.perc_reduc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Valor do Crédito outorgado/Presumido está negativo.
   --
   if nvl(est_row_conhec_transp_imp.vl_cred, 0) < 0 then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do Crédito outorgado/Presumido" nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.vl_cred || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12.1;
   -- Valida se o campo Valor Base Outro está negativo.
   --
   if nvl(est_row_conhec_transp_imp.vl_base_outro, 0) < 0 then
      --
      vn_fase := 12.11;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor outros da base de cálculo " nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.vl_base_outro || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12.2;
   -- Valida se o campo Valor do imposto outros está negativo.
   --
   if nvl(est_row_conhec_transp_imp.vl_imp_outro, 0) < 0 then
      --
      vn_fase := 12.21;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do imposto outros " nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.vl_imp_outro || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12.3;
   -- Valida se o campo Valor isento da base de cálculo está negativo.
   --
   if nvl(est_row_conhec_transp_imp.vl_base_isenta, 0) < 0 then
      --
      vn_fase := 12.31;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor isento da base de cálculo " nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.vl_base_isenta || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12.4;
   -- Valida se o campo Aliquota aplicada para base e valor de imposto outros está negativo.
   --
   if nvl(est_row_conhec_transp_imp.aliq_aplic_outro, 0) < 0 then
      --
      vn_fase := 12.41;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Aliquota aplicada para base e valor de imposto outros " nas Informações dos Impostos (' ||
                         est_row_conhec_transp_imp.aliq_aplic_outro || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   -- Valida se o campo Indicador de Informação do Imposto está dentro do domínio pro sistema.
   vn_fase := 13;
   --
   if nvl(est_row_conhec_transp_imp.dm_inf_imp, 9) not in (0, 1, 2, 3) and  
      nvl(gn_dm_legado,0)                  = 0                 then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de informação do Imposto" (' ||
                         est_row_conhec_transp_imp.dm_inf_imp || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   -- Caso o Indicador de Informação do Imposto for "0 - Normal" o Código de Situação Tributária deverá estar entre:
   -- 00, 20, 40, 41 ou 51. Ps.: Essa regra ficou definida em conversa com o Leandro.
   vn_fase := 14;
   --
   if nvl(est_row_conhec_transp_imp.dm_inf_imp, 9) = 0
      and trim(ev_cod_st) not in ('00', '20', '40', '41', '51') and  
      nvl(gn_dm_legado,0)                  = 0                 then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de informação do Imposto" (' ||
                         est_row_conhec_transp_imp.dm_inf_imp || ') não é apropriado para o Código da Situação Tributária ' || ev_cod_st || '.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14.2;
   --
   if nvl(est_row_conhec_transp_imp.dm_inf_imp, 9) in (1)
      and trim(ev_cod_st) not in ('60') and  
      nvl(gn_dm_legado,0)                  = 0   then
      --
      vn_fase := 14.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de informação do Imposto" (' ||
                         est_row_conhec_transp_imp.dm_inf_imp || ') não é apropriado para Código da Situação Tributária ' || ev_cod_st || '.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   -- Caso o Indicador de Informação do Imposto for DIFERENTE "0 - Normal" o Código de Situação Tributária deverá ser 90.
   --Ps.: Essa regra ficou definida em conversa com o Leandro.
   vn_fase := 15;
   --
   if nvl(est_row_conhec_transp_imp.dm_inf_imp, 9) in (2, 3)
      and trim(ev_cod_st) not in ('90') and  
      nvl(gn_dm_legado,0)                  = 0                 then
      --
      vn_fase := 15.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de informação do Imposto" (' ||
                         est_row_conhec_transp_imp.dm_inf_imp || ') não é apropriado para Código da Situação Tributária ' || ev_cod_st || '.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 16;
   -- Atualização CTe 3.0
   -- Valida se o campo Indicador de ICMS devido à UF de origem da prestação, quando diferente da UF do emitente. 0-Não; 1-Sim
   if nvl(est_row_conhec_transp_imp.dm_outra_uf, -9) not in (0, 1) then
      --
      vn_fase := 16.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de ICMS devido à UF de origem da prestação, quando diferente da UF do emitente." (' ||
                         est_row_conhec_transp_imp.dm_outra_uf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 17;
   --
   -- Apresentar alerta de conhecimentos como CST 90 (Outras) e com valor de ICMS tributado.   
   if trim(ev_cod_st) = '90' and 
      nvl(est_row_conhec_transp_imp.vl_base_calc, 0) > 0 and  
      nvl(est_row_conhec_transp_imp.aliq_apli, 0) > 0 and
      nvl(est_row_conhec_transp_imp.vl_imp_trib, 0) > 0 then
      --
      vn_fase := 17.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Código da Situação Tributária ' || ev_cod_st || ' (Outras) e informado valores de tributação de ICMS. Base de calculo, aliquota e valor de imposto. Pode ocorrer erro no Livro Fiscal de Saída se parametrização de CST não tributados estiver ativa.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => INFORMACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;	  
   --	  
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_imp.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_imp.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_imp.vl_base_calc := nvl(est_row_conhec_transp_imp.vl_base_calc,0);
   est_row_conhec_transp_imp.aliq_apli    := nvl(est_row_conhec_transp_imp.aliq_apli,0);
   est_row_conhec_transp_imp.vl_imp_trib  := nvl(est_row_conhec_transp_imp.vl_imp_trib,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_conhec_transp_imp.conhectransp_id, 0) > 0
      and nvl(est_row_conhec_transp_imp.dm_inf_imp, 9) in (0, 1, 2, 3)
      and nvl(est_row_conhec_transp_imp.dm_outra_uf, -9) in (0, 1) -- Atualização CTe 3.0
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspimp_seq.nextval
           into est_row_conhec_transp_imp.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_imp ( id
                                       , conhectransp_id
                                       , tipoimp_id
                                       , codst_id
                                       , vl_base_calc
                                       , aliq_apli
                                       , vl_imp_trib
                                       , perc_reduc
                                       , vl_cred
                                       , dm_inf_imp 
                                       , dm_outra_uf -- Atualização CTe 3.0
                                       )
                                values ( est_row_conhec_transp_imp.id
                                       , est_row_conhec_transp_imp.conhectransp_id
                                       , est_row_conhec_transp_imp.tipoimp_id
                                       , est_row_conhec_transp_imp.codst_id
                                       , est_row_conhec_transp_imp.vl_base_calc
                                       , est_row_conhec_transp_imp.aliq_apli
                                       , est_row_conhec_transp_imp.vl_imp_trib
                                       , est_row_conhec_transp_imp.perc_reduc
                                       , est_row_conhec_transp_imp.vl_cred
                                       , est_row_conhec_transp_imp.dm_inf_imp 
                                       , est_row_conhec_transp_imp.dm_outra_uf  -- Atualização CTe 3.0
                                       );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_imp set tipoimp_id   = est_row_conhec_transp_imp.tipoimp_id
                                    , codst_id     = est_row_conhec_transp_imp.codst_id
                                    , vl_base_calc = est_row_conhec_transp_imp.vl_base_calc
                                    , aliq_apli    = est_row_conhec_transp_imp.aliq_apli
                                    , vl_imp_trib  = est_row_conhec_transp_imp.vl_imp_trib
                                    , perc_reduc   = est_row_conhec_transp_imp.perc_reduc
                                    , vl_cred      = est_row_conhec_transp_imp.vl_cred
                                    , dm_inf_imp   = est_row_conhec_transp_imp.dm_inf_imp
                                    , dm_outra_uf  = est_row_conhec_transp_imp.dm_outra_uf -- Atualização CTe 3.0
          where id = est_row_conhec_transp_imp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_imp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_imp;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Impostos - Flex Field.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_imp_ff ( est_log_generico       in out nocopy  dbms_sql.number_table
                               , en_conhectranspimp_id  in             conhec_transp_imp.id%type
                               , ev_atributo            in             varchar2
                               , ev_valor               in             varchar2 )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%type;
   vv_mensagem         varchar2(1000) := null;
   vn_dmtipocampo      ff_obj_util_integr.dm_tipo_campo%type;
   vn_vl_base_outro    conhec_transp_imp.vl_base_outro%type := 0;
   vn_vl_imp_outro     conhec_transp_imp.vl_imp_outro%type := 0;
   vn_vl_base_isenta   conhec_transp_imp.vl_base_isenta%type := 0;
   vn_aliq_aplic_outro conhec_transp_imp.aliq_aplic_outro%type := 0;
   --
begin
   --
   vn_fase := 1;
   --
   gv_mensagem_log := null;
   --
   if trim(ev_atributo) is null then
      --
      vn_fase := 2;
      --
      gv_mensagem_log := 'Registro Analitico dos Impostos(Conhecimento de Transp.): "Atributo" deve ser informado.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => erro_de_validacao
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                                           , est_log_generico => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if trim(ev_valor) is null then
      --
      vn_fase := 4;
      --
      gv_mensagem_log := 'Registro Analitico dos Impostos(Conhecimento de Transp.): "VALOR" referente ao atributo deve ser informado.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => erro_de_validacao
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   vv_mensagem := pk_csf.fkg_ff_verif_campos( ev_obj_name => 'VW_CSF_CONHEC_TRANSP_IMP_FF'
                                            , ev_atributo => trim(ev_atributo)
                                            , ev_valor    => trim(ev_valor) );
   --
   vn_fase := 6;
   --
   if vv_mensagem is not null then
      --
      vn_fase := 7;
      --
      gv_mensagem_log := vv_mensagem;
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => erro_de_validacao
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   else
      --
      vn_fase := 8;
      --
      vn_dmtipocampo := pk_csf.fkg_ff_retorna_dmtipocampo( ev_obj_name => 'VW_CSF_CONHEC_TRANSP_IMP_FF'
                                                         , ev_atributo => trim(ev_atributo) );
      --
      vn_fase := 9;
      --
      if trim(ev_atributo) = 'VL_BASE_OUTRO'    or
         trim(ev_atributo) = 'VL_IMP_OUTRO'     or
         trim(ev_atributo) = 'ALIQ_APLIC_OUTRO' or
         trim(ev_atributo) = 'VL_BASE_ISENTA'   then
         --
         vn_fase := 10;
         --
         if trim(ev_valor) is not null then
            --
            vn_fase := 11;
            --
            if vn_dmtipocampo = 1 then -- tipo de campo = 0-data, 1-numérico, 2-caractere
               --
               vn_fase := 12;
               --
               if trim(ev_atributo) = 'VL_BASE_OUTRO' then
                  --
                  vn_fase := 13;
                  --
                  vn_vl_base_outro := pk_csf.fkg_ff_ret_vlr_number( ev_obj_name => 'VW_CSF_CONHEC_TRANSP_IMP_FF'
                                                                  , ev_atributo => trim(ev_atributo)
                                                                  , ev_valor    => trim(ev_valor) );
                  --
               elsif trim(ev_atributo) = 'VL_IMP_OUTRO' then
                     --
                     vn_fase := 14;
                     --
                     vn_vl_imp_outro := pk_csf.fkg_ff_ret_vlr_number( ev_obj_name => 'VW_CSF_CONHEC_TRANSP_IMP_FF'
                                                                    , ev_atributo => trim(ev_atributo)
                                                                    , ev_valor    => trim(ev_valor) );
                     --
               elsif trim(ev_atributo) = 'ALIQ_APLIC_OUTRO' then
                     --
                     vn_fase := 16;
                     --
                     vn_aliq_aplic_outro := pk_csf.fkg_ff_ret_vlr_number( ev_obj_name => 'VW_CSF_CONHEC_TRANSP_IMP_FF'
                                                                        , ev_atributo => trim(ev_atributo)
                                                                        , ev_valor    => trim(ev_valor) );
                     --
               elsif trim(ev_atributo) = 'VL_BASE_ISENTA' then
                     --
                     vn_fase := 15;
                     --
                     vn_vl_base_isenta := pk_csf.fkg_ff_ret_vlr_number( ev_obj_name => 'VW_CSF_CONHEC_TRANSP_IMP_FF'
                                                                      , ev_atributo => trim(ev_atributo)
                                                                      , ev_valor    => trim(ev_valor) );
                     --
               end if;
               --
               vn_fase := 17;
               --
               if nvl(vn_vl_base_outro    ,0) < 0 or
                  nvl(vn_vl_imp_outro     ,0) < 0 or
                  nvl(vn_aliq_aplic_outro ,0) < 0 or
                  nvl(vn_vl_base_isenta   ,0) < 0 then
                  --
                  vn_fase := 18;
                  --
                  gv_mensagem_log := 'Para o atributo '||ev_atributo||', o VALOR ('||ev_valor||') informado não pode ser negativo.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                                    , ev_mensagem       => gv_cabec_log
                                                    , ev_resumo         => gv_mensagem_log
                                                    , en_tipo_log       => erro_de_validacao
                                                    , en_referencia_id  => gn_referencia_id
                                                    , ev_obj_referencia => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                                                       , est_log_generico => est_log_generico );
                  --
               end if;
               --
            else
               --
               vn_fase := 19;
               --
               gv_mensagem_log := 'Para o atributo '||ev_atributo||', o VALOR informado não confere com o tipo de campo, deveria ser NUMÉRICO.';
               --
               vn_loggenerico_id := null;
               --
               pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                                 , ev_mensagem       => gv_cabec_log
                                                 , ev_resumo         => gv_mensagem_log
                                                 , en_tipo_log       => erro_de_validacao
                                                 , en_referencia_id  => gn_referencia_id
                                                 , ev_obj_referencia => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                                                    , est_log_generico => est_log_generico );
               --
            end if;
            --
         else
            --
            vn_fase := 20;
            --
            gv_mensagem_log := 'Para o atributo '||ev_atributo||', o VALOR deve ser maior do que zero (0).';
            --
            vn_loggenerico_id := null;
            --
            pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                              , ev_mensagem       => gv_cabec_log
                                              , ev_resumo         => gv_mensagem_log
                                              , en_tipo_log       => erro_de_validacao
                                              , en_referencia_id  => gn_referencia_id
                                              , ev_obj_referencia => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                                                 , est_log_generico => est_log_generico );
            --
         end if;
      else
         --
         vn_fase := 21;
         --
         gv_mensagem_log := '"Atributo" ('||ev_atributo||') e "VALOR" ('||ev_valor||') relacionados, não especificados no processo.';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => ERRO_DE_VALIDACAO
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
   vn_fase := 22;
   --
   if nvl(en_conhectranspimp_id,0) = 0 then
      --
      vn_fase := 23;
      --
      gv_mensagem_log := 'Identificador do imposto do conhecimento de transporte não informado.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => erro_de_validacao
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(en_conhectranspimp_id,0) > 0 and
      ev_atributo = 'VL_BASE_OUTRO' and
      vn_vl_base_outro is not null and
      gv_mensagem_log is null then
      --
      vn_fase := 99.1;
      --
      update conhec_transp_imp cr
         set cr.vl_base_outro = vn_vl_base_outro
       where cr.id = en_conhectranspimp_id;
      --
   elsif nvl(en_conhectranspimp_id,0) > 0 and
         ev_atributo = 'VL_IMP_OUTRO' and
         vn_vl_imp_outro is not null and
         gv_mensagem_log is null then
         --
         vn_fase := 99.2;
         --
         update conhec_transp_imp cr
            set cr.vl_imp_outro = vn_vl_imp_outro
          where cr.id = en_conhectranspimp_id;
         --
   elsif nvl(en_conhectranspimp_id,0) > 0 and
         ev_atributo = 'VL_BASE_ISENTA' and
         vn_vl_base_isenta is not null and
         gv_mensagem_log is null then
         --
         vn_fase := 99.3;
         --
         update conhec_transp_imp cr
            set cr.vl_base_isenta = vn_vl_base_isenta
          where cr.id = en_conhectranspimp_id;
         --
   elsif nvl(en_conhectranspimp_id,0) > 0 and
         ev_atributo = 'ALIQ_APLIC_OUTRO' and
         vn_aliq_aplic_outro is not null and
         gv_mensagem_log is null then
         --
         vn_fase := 99.4;
         --
         update conhec_transp_imp cr
            set cr.aliq_aplic_outro = vn_aliq_aplic_outro
          where cr.id = en_conhectranspimp_id;
         --
   end if;
   --
   vn_fase := 100;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pk_csf_api_ct.pkb_integr_ct_imp_ff fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_mensagem_log
                                           , ev_resumo          => null
                                           , en_tipo_log        => ERRO_DE_SISTEMA
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_imp_ff;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas Componentes do Valor da Prestação.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctvlprest_comp ( est_log_generico       in out nocopy dbms_sql.number_table
                                    , est_row_ctvlprest_comp in out nocopy Ctvlprest_Comp%rowtype
                                    , en_conhectransp_id     in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctvlprest_comp.conhectranspvlprest_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Valor da Prestação para registro dos Componentes.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Nome do componente está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctvlprest_comp.nome)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do componente" do Componente do Valor da Prestação não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Valor do Componente está negativo.
   --
   if nvl(est_row_ctvlprest_comp.valor, -1) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do componente" do Componente do Valor da Prestação (' ||
                         est_row_ctvlprest_comp.valor || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_vlprest
      where id = est_row_ctvlprest_comp.conhectranspvlprest_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctvlprest_comp.nome  := trim(pk_csf.fkg_converte(est_row_ctvlprest_comp.nome));
   est_row_ctvlprest_comp.valor := nvl(est_row_ctvlprest_comp.valor,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctvlprest_comp.conhectranspvlprest_id, 0) > 0
      and trim(pk_csf.fkg_converte(est_row_ctvlprest_comp.nome)) is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctvlprestcomp_seq.nextval
           into est_row_ctvlprest_comp.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctvlprest_comp ( id
                                    , conhectranspvlprest_id
                                    , nome
                                    , valor 
                                    )
                             values ( est_row_ctvlprest_comp.id
                                    , est_row_ctvlprest_comp.conhectranspvlprest_id
                                    , est_row_ctvlprest_comp.nome
                                    , est_row_ctvlprest_comp.valor
                                    );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctvlprest_comp set nome   = est_row_ctvlprest_comp.nome
                                 , valor  = est_row_ctvlprest_comp.valor
          where id = est_row_ctvlprest_comp.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctvlprest_comp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctvlprest_comp;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Valores da Prestação de Serviço.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_vlprest ( est_log_generico   in out nocopy dbms_sql.number_table
                                , est_row_ct_vlprest in out nocopy Conhec_Transp_Vlprest%rowtype
                                , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_vlprest.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhecimento de Transporte para registro dos Valores da Prestação.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Valida se o campo Valor Total da Prestação do Serviço está inválido e dm_tp_cte <> 1 - CT-e de Complemento de Valores.
   -- a pk_csf_api_ct.gt_row_conhec_transp.dm_tp_cte é carregada na pk_integr_view_ct.pkb_ler_Conhec_Transp(OpenInterface) ou pk_valida_ambiente_ct.pkb_ler_Conhec_Transp
   if nvl(est_row_ct_vlprest.vl_prest_serv, -1) <= 0 and nvl(pk_csf_api_ct.gt_row_conhec_transp.dm_tp_cte,-1) <> 1 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total da Prestação do Serviço" ('||est_row_ct_vlprest.vl_prest_serv||') não pode ser negativo ou zero(0).';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Valor a Receber está inválido.
   --
   if nvl(est_row_ct_vlprest.vl_receb, -1) < 0 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor a Receber" da Prestação de Serviço (' ||
                         est_row_ct_vlprest.vl_receb || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   --
   -- Valida se o campo Valor total do documento fiscal está inválido, somente para dm_tp_cte <> 1 - CT-e de Complemento de Valores.
   if nvl(est_row_ct_vlprest.vl_docto_fiscal, -1) <= 0 and pk_csf_api_ct.gt_row_conhec_transp.dm_tp_cte <> 1 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor total do documento fiscal" da Prestação de Serviço (' ||
                         est_row_ct_vlprest.vl_docto_fiscal || ') não pode ser negativo ou zero (0).';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if nvl(est_row_ct_vlprest.vl_tot_trib, 0) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor total de Impostos Tributados" da Prestação de Serviço (' ||
                         est_row_ct_vlprest.vl_docto_fiscal || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia 
                       );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico 
                          );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_vlprest.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_vlprest.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_vlprest.vl_prest_serv   := nvl(est_row_ct_vlprest.vl_prest_serv,0);
   est_row_ct_vlprest.vl_receb        := nvl(est_row_ct_vlprest.vl_receb,0);
   est_row_ct_vlprest.vl_docto_fiscal := nvl(est_row_ct_vlprest.vl_docto_fiscal,0);
   est_row_ct_vlprest.vl_tot_trib     := nvl(est_row_ct_vlprest.vl_tot_trib, 0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_vlprest.conhectransp_id, 0) > 0
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspvlprest_seq.nextval
           into est_row_ct_vlprest.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_vlprest ( id
                                           , conhectransp_id
                                           , vl_prest_serv
                                           , vl_receb
                                           , vl_docto_fiscal
                                           , vl_desc
                                           , vl_tot_trib
                                           )
                                    values ( est_row_ct_vlprest.id
                                           , est_row_ct_vlprest.conhectransp_id
                                           , est_row_ct_vlprest.vl_prest_serv
                                           , est_row_ct_vlprest.vl_receb
                                           , est_row_ct_vlprest.vl_docto_fiscal
                                           , est_row_ct_vlprest.vl_desc
                                           , est_row_ct_vlprest.vl_tot_trib
                                           );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_vlprest set vl_prest_serv   = est_row_ct_vlprest.vl_prest_serv
                                        , vl_receb        = est_row_ct_vlprest.vl_receb
                                        , vl_docto_fiscal = est_row_ct_vlprest.vl_docto_fiscal
                                        , vl_desc         = est_row_ct_vlprest.vl_desc
                                        , vl_tot_trib     = est_row_ct_vlprest.vl_tot_trib
          where id = est_row_ct_vlprest.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_vlprest fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_vlprest;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Local de Entrega constante na Nota Fiscal.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctdest_locent ( est_log_generico      in out nocopy dbms_sql.number_table
                                   , est_row_ctdest_locent in out nocopy Ctdest_Locent%rowtype
                                   , en_conhectransp_id    in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctdest_locent.conhectranspdest_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Destinário do Conhec. Transp. para registro do Local da Entrega.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctdest_locent.cnpj))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Local de Entrega (' ||
                         est_row_ctdest_locent.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctdest_locent.cpf))), 0) <> 11 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Local de Entrega (' ||
                         est_row_ctdest_locent.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Razão Social ou Nome está inválido.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.nome)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do Local de Entrega não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Logradouro está inválido.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.lograd)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do Local de Entrega não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Número está inválido.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.nro)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do Local de Entrega não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.bairro)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" do Local de Entrega não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Código do município está inválido.
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_ctdest_locent.ibge_cidade ) = False then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Local de Entrega (' ||
                         est_row_ctdest_locent.ibge_cidade || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Código do município está nulo.
   --
   if nvl(est_row_ctdest_locent.ibge_cidade, -1) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Local de Entrega não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Código do município está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.descr_cidade)) is null then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do município" do Local de Entrega não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctdest_locent.uf)) is null then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Local de Entrega não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_ctdest_locent.uf ) = False then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Local de Entrega (' ||
                         est_row_ctdest_locent.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_dest
      where id = est_row_ctdest_locent.conhectranspdest_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id  = vn_conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctdest_locent.cnpj          := trim(pk_csf.fkg_converte(est_row_ctdest_locent.cnpj));
   est_row_ctdest_locent.cpf           := trim(pk_csf.fkg_converte(est_row_ctdest_locent.cpf));
   est_row_ctdest_locent.nome          := trim(pk_csf.fkg_converte(est_row_ctdest_locent.nome));
   est_row_ctdest_locent.lograd        := trim(pk_csf.fkg_converte(est_row_ctdest_locent.lograd));
   est_row_ctdest_locent.nro           := trim(pk_csf.fkg_converte(est_row_ctdest_locent.nro));
   est_row_ctdest_locent.compl         := trim(pk_csf.fkg_converte(est_row_ctdest_locent.compl));
   est_row_ctdest_locent.bairro        := trim(pk_csf.fkg_converte(est_row_ctdest_locent.bairro));
   est_row_ctdest_locent.ibge_cidade   := nvl(est_row_ctdest_locent.ibge_cidade,0);
   est_row_ctdest_locent.descr_cidade  := trim(pk_csf.fkg_converte(est_row_ctdest_locent.descr_cidade));
   est_row_ctdest_locent.uf            := trim(pk_csf.fkg_converte(est_row_ctdest_locent.uf));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctdest_locent.conhectranspdest_id, 0) > 0
      and est_row_ctdest_locent.nome is not null
      and est_row_ctdest_locent.lograd is not null
      and est_row_ctdest_locent.nro is not null
      and est_row_ctdest_locent.bairro is not null
      and est_row_ctdest_locent.descr_cidade is not null
      and est_row_ctdest_locent.uf is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctdestlocent_seq.nextval
           into est_row_ctdest_locent.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctdest_locent ( id
                                   , conhectranspdest_id
                                   , cnpj
                                   , cpf
                                   , nome
                                   , lograd
                                   , nro
                                   , compl
                                   , bairro
                                   , ibge_cidade
                                   , descr_cidade
                                   , uf 
                                   )
                            values ( est_row_ctdest_locent.id
                                   , est_row_ctdest_locent.conhectranspdest_id
                                   , est_row_ctdest_locent.cnpj
                                   , est_row_ctdest_locent.cpf
                                   , est_row_ctdest_locent.nome
                                   , est_row_ctdest_locent.lograd
                                   , est_row_ctdest_locent.nro
                                   , est_row_ctdest_locent.compl
                                   , est_row_ctdest_locent.bairro
                                   , est_row_ctdest_locent.ibge_cidade
                                   , est_row_ctdest_locent.descr_cidade
                                   , est_row_ctdest_locent.uf
                                   );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctdest_locent set cnpj         = est_row_ctdest_locent.cnpj
                                , cpf          = est_row_ctdest_locent.cpf
                                , nome         = est_row_ctdest_locent.nome
                                , lograd       = est_row_ctdest_locent.lograd
                                , nro          = est_row_ctdest_locent.nro
                                , compl        = est_row_ctdest_locent.compl
                                , bairro       = est_row_ctdest_locent.bairro
                                , ibge_cidade  = est_row_ctdest_locent.ibge_cidade
                                , descr_cidade = est_row_ctdest_locent.descr_cidade
                                , uf           = est_row_ctdest_locent.uf
          where id = est_row_ctdest_locent.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctdest_locent fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctdest_locent;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao do Destinatário do CT.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_dest ( est_log_generico           in out nocopy dbms_sql.number_table
                                        , est_row_conhec_transp_dest in out nocopy Conhec_Transp_Dest%rowtype
                                        , en_conhectransp_id         in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_dest.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro do Destinatário.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cnpj))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Destinatário (' ||
                         est_row_conhec_transp_dest.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2.2;
   -- Valida o CNPJ.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cnpj)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_dest.cnpj), 0) = 0 then
      --
      vn_fase := 2.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Destinatário (' ||
                         est_row_conhec_transp_dest.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cpf))), 0) <> 11 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Destinatário (' ||
                         est_row_conhec_transp_dest.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cpf)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_dest.cpf), 0) = 0 then
      --
      vn_fase := 3.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Destinatário (' ||
                         est_row_conhec_transp_dest.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Inscrição Estadual.
   est_row_conhec_transp_dest.ie           := trim ( replace(replace(replace(replace(replace(upper(est_row_conhec_transp_dest.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.ie)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Destinatário (' ||
                         est_row_conhec_transp_dest.ie || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4.2;
   -- Valida a Inscrição Estadual.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.ie)) is not null
      and trim(est_row_conhec_transp_dest.uf) is not null
      and nvl(pk_valida_docto.fkg_valida_ie( ev_inscr_est => est_row_conhec_transp_dest.ie
                                           , ev_estado    => est_row_conhec_transp_dest.uf ), 0) = 0 then
      --
      vn_fase := 4.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Destinatário (' ||
                         est_row_conhec_transp_dest.ie || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Razão Social ou Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.nome)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do Destinatário não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.lograd)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do Destinatário não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Número do Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.nro)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do Destinatário não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.bairro)) is null then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" do Destinatário não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Código do município.
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_conhec_transp_dest.ibge_cidade ) = False then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Destinatário (' ||
                         est_row_conhec_transp_dest.ibge_cidade || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Código do município está nulo.
   --
   if nvl(est_row_conhec_transp_dest.ibge_cidade, -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Destinatário não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Código do município está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.descr_cidade)) is null then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do município" do Destinatário não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.uf)) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Destinatário não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_conhec_transp_dest.uf ) = False then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Destinatário (' ||
                         est_row_conhec_transp_dest.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14;
   -- Valida se o campo Código do País existe caso ele seja informado.
   --
   if est_row_conhec_transp_dest.cod_pais is not null
      and pk_csf.fkg_codpais_siscomex_valido ( en_cod_siscomex  => est_row_conhec_transp_dest.cod_pais ) = False then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do País" do Destinatário (' ||
                         est_row_conhec_transp_dest.cod_pais || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_dest.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_dest.conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_dest.cnpj         := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cnpj));
   est_row_conhec_transp_dest.cpf          := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cpf));
   est_row_conhec_transp_dest.nome         := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.nome));
   est_row_conhec_transp_dest.lograd       := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.lograd));
   est_row_conhec_transp_dest.nro          := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.nro));
   est_row_conhec_transp_dest.compl        := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.compl));
   est_row_conhec_transp_dest.bairro       := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.bairro));
   est_row_conhec_transp_dest.ibge_cidade  := nvl(est_row_conhec_transp_dest.ibge_cidade,0);
   est_row_conhec_transp_dest.descr_cidade := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.descr_cidade));
   est_row_conhec_transp_dest.cep          := lpad(trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.cep)), 8, '0');
   est_row_conhec_transp_dest.uf           := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.uf));
   est_row_conhec_transp_dest.descr_pais   := trim(pk_csf.fkg_converte(est_row_conhec_transp_dest.descr_pais));
   --
   vn_fase := 99.3;
   --
   if gt_row_conhec_transp.dm_tp_amb = 2 then
      --
      vn_fase := 99.4;
      --
      est_row_conhec_transp_dest.nome := 'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL';
      --
   end if;
   --
   vn_fase := 99.5;
   -- procedimento de criação de e-mail do Conhec. Transp.
   pkb_integr_ct_email ( en_conhectransp_id   => est_row_conhec_transp_dest.conhectransp_id
                       , en_dm_origem         => 3 -- Destinatário
                       , ev_email             => est_row_conhec_transp_dest.email
                       , en_dm_tipo_anexo     => 3 --DACTE/XML
                       );
   --
   vn_fase := 99.6;
   --
   if nvl(est_row_conhec_transp_dest.conhectransp_id, 0) > 0
      and est_row_conhec_transp_dest.nome is not null
      and est_row_conhec_transp_dest.lograd is not null
      and est_row_conhec_transp_dest.nro is not null
      and est_row_conhec_transp_dest.bairro is not null
      and est_row_conhec_transp_dest.descr_cidade is not null
      and est_row_conhec_transp_dest.uf is not null
      then
      --
      vn_fase := 99.7;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.8;
         --
         select conhectranspdest_seq.nextval
           into est_row_conhec_transp_dest.id
           from dual;
         --
         vn_fase := 99.9;
         --
         insert into conhec_transp_dest ( id
                                        , conhectransp_id
                                        , cnpj
                                        , cpf
                                        , ie
                                        , nome
                                        , fone
                                        , suframa
                                        , lograd
                                        , nro
                                        , compl
                                        , bairro
                                        , ibge_cidade
                                        , descr_cidade
                                        , cep
                                        , uf
                                        , cod_pais
                                        , descr_pais
                                        , email
                                        )
                                 values ( est_row_conhec_transp_dest.id
                                        , est_row_conhec_transp_dest.conhectransp_id
                                        , est_row_conhec_transp_dest.cnpj
                                        , est_row_conhec_transp_dest.cpf
                                        , est_row_conhec_transp_dest.ie
                                        , est_row_conhec_transp_dest.nome
                                        , est_row_conhec_transp_dest.fone
                                        , est_row_conhec_transp_dest.suframa
                                        , est_row_conhec_transp_dest.lograd
                                        , est_row_conhec_transp_dest.nro
                                        , est_row_conhec_transp_dest.compl
                                        , est_row_conhec_transp_dest.bairro
                                        , est_row_conhec_transp_dest.ibge_cidade
                                        , est_row_conhec_transp_dest.descr_cidade
                                        , est_row_conhec_transp_dest.cep
                                        , est_row_conhec_transp_dest.uf
                                        , est_row_conhec_transp_dest.cod_pais
                                        , est_row_conhec_transp_dest.descr_pais
                                        , est_row_conhec_transp_dest.email
                                        );
         --
      else
         --
         vn_fase := 99.10;
         --
         update conhec_transp_dest set cnpj         = est_row_conhec_transp_dest.cnpj
                                     , cpf          = est_row_conhec_transp_dest.cpf
                                     , ie           = est_row_conhec_transp_dest.ie
                                     , nome         = est_row_conhec_transp_dest.nome
                                     , fone         = est_row_conhec_transp_dest.fone
                                     , suframa      = est_row_conhec_transp_dest.suframa
                                     , lograd       = est_row_conhec_transp_dest.lograd
                                     , nro          = est_row_conhec_transp_dest.nro
                                     , compl        = est_row_conhec_transp_dest.compl
                                     , bairro       = est_row_conhec_transp_dest.bairro
                                     , ibge_cidade  = est_row_conhec_transp_dest.ibge_cidade
                                     , descr_cidade = est_row_conhec_transp_dest.descr_cidade
                                     , cep          = est_row_conhec_transp_dest.cep
                                     , uf           = est_row_conhec_transp_dest.uf
                                     , cod_pais     = est_row_conhec_transp_dest.cod_pais
                                     , descr_pais   = est_row_conhec_transp_dest.descr_pais
                                     , email        = est_row_conhec_transp_dest.email
          where id = est_row_conhec_transp_dest.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_dest fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_dest;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao do Recebedor da Carga.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_receb ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_conhec_transp_receb in out nocopy Conhec_Transp_Receb%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_receb.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro do Recebedor da Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cnpj))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2.2;
   -- Valida CNPJ.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cnpj)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_receb.cnpj), 0) = 0 then
      --
      vn_fase := 2.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cpf))), 0) <> 11 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cpf)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_receb.cpf), 0) = 0 then
      --
      vn_fase := 3.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Inscrição Estadual.
   est_row_conhec_transp_receb.ie           := trim ( replace(replace(replace(replace(replace(upper(est_row_conhec_transp_receb.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.ie)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.ie || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4.2;
   -- Valida a Inscrição Estadual.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.ie)) is not null
      and trim(est_row_conhec_transp_receb.uf) is not null
      and nvl(pk_valida_docto.fkg_valida_ie( ev_inscr_est => est_row_conhec_transp_receb.ie
                                           , ev_estado    => est_row_conhec_transp_receb.uf ), 0) = 0 then
      --
      vn_fase := 4.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Razão Social ou Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.nome)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do Recebedor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.lograd)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do Recebedor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Número do Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.nro)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do Recebedor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.bairro)) is null then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" do Recebedor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Código do município.
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_conhec_transp_receb.ibge_cidade ) = False then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.ibge_cidade || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Código do município está nulo.
   --
   if nvl(est_row_conhec_transp_receb.ibge_cidade, -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Recebedor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Descrição do município está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.descr_cidade)) is null then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do município" do Recebedor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.uf)) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Recebedor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_conhec_transp_receb.uf ) = False then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14;
   -- Valida se o campo Código do País existe caso ele seja informado.
   --
   if est_row_conhec_transp_receb.cod_pais is not null
      and pk_csf.fkg_codpais_siscomex_valido ( en_cod_siscomex  => est_row_conhec_transp_receb.cod_pais ) = False then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do País" do Recebedor da Carga (' ||
                         est_row_conhec_transp_receb.cod_pais || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_receb.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_receb.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_receb.cnpj         := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cnpj));
   est_row_conhec_transp_receb.cpf          := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cpf));
   est_row_conhec_transp_receb.nome         := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.nome));
   est_row_conhec_transp_receb.nome_fant    := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.nome_fant));
   est_row_conhec_transp_receb.lograd       := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.lograd));
   est_row_conhec_transp_receb.nro          := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.nro));
   est_row_conhec_transp_receb.compl        := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.compl));
   est_row_conhec_transp_receb.bairro       := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.bairro));
   est_row_conhec_transp_receb.ibge_cidade  := nvl(est_row_conhec_transp_receb.ibge_cidade,0);
   est_row_conhec_transp_receb.descr_cidade := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.descr_cidade));
   est_row_conhec_transp_receb.uf           := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.uf));
   est_row_conhec_transp_receb.descr_pais   := trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.descr_pais));
   est_row_conhec_transp_receb.cep          := lpad(trim(pk_csf.fkg_converte(est_row_conhec_transp_receb.cep)), 8, '0');
   --
   vn_fase := 99.3;
   --
   if gt_row_conhec_transp.dm_tp_amb = 2 then
      --
      vn_fase := 99.4;
      --
      est_row_conhec_transp_receb.nome := 'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL';
      --
   end if;
   --
   vn_fase := 99.5;
   -- procedimento de criação de e-mail do Conhec. Transp.
   pkb_integr_ct_email ( en_conhectransp_id   => est_row_conhec_transp_receb.conhectransp_id
                       , en_dm_origem         => 2 -- Recebedor
                       , ev_email             => est_row_conhec_transp_receb.email
                       , en_dm_tipo_anexo     => 3 --DACTE/XML
                       );
   --
   vn_fase := 99.6;
   --
   if nvl(est_row_conhec_transp_receb.conhectransp_id, 0) > 0
      and est_row_conhec_transp_receb.nome is not null
      and est_row_conhec_transp_receb.lograd is not null
      and est_row_conhec_transp_receb.nro is not null
      and est_row_conhec_transp_receb.bairro is not null
      and est_row_conhec_transp_receb.descr_cidade is not null
      and est_row_conhec_transp_receb.uf is not null
      then
      --
      vn_fase := 99.7;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.8;
         --
         select conhectranspreceb_seq.nextval
           into est_row_conhec_transp_receb.id
           from dual;
         --
         vn_fase := 99.9;
         --
         insert into conhec_transp_receb ( id
                                         , conhectransp_id
                                         , cnpj
                                         , cpf
                                         , ie
                                         , nome
                                         , nome_fant
                                         , fone
                                         , lograd
                                         , nro
                                         , compl
                                         , bairro
                                         , ibge_cidade
                                         , descr_cidade
                                         , cep
                                         , uf
                                         , cod_pais
                                         , descr_pais
                                         , email
                                         )
                                  values ( est_row_conhec_transp_receb.id
                                         , est_row_conhec_transp_receb.conhectransp_id
                                         , est_row_conhec_transp_receb.cnpj
                                         , est_row_conhec_transp_receb.cpf
                                         , est_row_conhec_transp_receb.ie
                                         , est_row_conhec_transp_receb.nome
                                         , est_row_conhec_transp_receb.nome_fant
                                         , est_row_conhec_transp_receb.fone
                                         , est_row_conhec_transp_receb.lograd
                                         , est_row_conhec_transp_receb.nro
                                         , est_row_conhec_transp_receb.compl
                                         , est_row_conhec_transp_receb.bairro
                                         , est_row_conhec_transp_receb.ibge_cidade
                                         , est_row_conhec_transp_receb.descr_cidade
                                         , est_row_conhec_transp_receb.cep
                                         , est_row_conhec_transp_receb.uf
                                         , est_row_conhec_transp_receb.cod_pais
                                         , est_row_conhec_transp_receb.descr_pais
                                         , est_row_conhec_transp_receb.email
                                         );
         --
      else
         --
         vn_fase := 99.10;
         --
         update conhec_transp_receb set cnpj         = est_row_conhec_transp_receb.cnpj
                                      , cpf          = est_row_conhec_transp_receb.cpf
                                      , ie           = est_row_conhec_transp_receb.ie
                                      , nome         = est_row_conhec_transp_receb.nome
                                      , nome_fant    = est_row_conhec_transp_receb.nome_fant
                                      , fone         = est_row_conhec_transp_receb.fone
                                      , lograd       = est_row_conhec_transp_receb.lograd
                                      , nro          = est_row_conhec_transp_receb.nro
                                      , compl        = est_row_conhec_transp_receb.compl
                                      , bairro       = est_row_conhec_transp_receb.bairro
                                      , ibge_cidade  = est_row_conhec_transp_receb.ibge_cidade
                                      , descr_cidade = est_row_conhec_transp_receb.descr_cidade
                                      , cep          = est_row_conhec_transp_receb.cep
                                      , uf           = est_row_conhec_transp_receb.uf
                                      , cod_pais     = est_row_conhec_transp_receb.cod_pais
                                      , descr_pais   = est_row_conhec_transp_receb.descr_pais
                                      , email        = est_row_conhec_transp_receb.email
          where id = est_row_conhec_transp_receb.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_receb fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_receb;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Expedidor da Carga.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_exped ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_conhec_transp_exped in out nocopy Conhec_Transp_Exped%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_exped.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro do Expedidor da Carga.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cnpj))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2.2;
   -- Valida CNPJ informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cnpj)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_exped.cnpj), 0) = 0 then
      --
      vn_fase := 2.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cpf))), 0) <> 11 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   -- Valida o CPF.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cpf)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_exped.cpf), 0) = 0 then
      --
      vn_fase := 3.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Inscrição Estadual.
   est_row_conhec_transp_exped.ie           := trim ( replace(replace(replace(replace(replace(upper(est_row_conhec_transp_exped.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.ie)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.ie || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4.2;
   -- Valida se o campo Inscrição Estadual.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.ie)) is not null
      and trim(est_row_conhec_transp_exped.uf) is not null
      and nvl(pk_valida_docto.fkg_valida_ie( ev_inscr_est => est_row_conhec_transp_exped.ie
                                           , ev_estado    => est_row_conhec_transp_exped.uf ), 0) = 0 then
      --
      vn_fase := 4.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Razão Social ou Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.nome)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do Expedidor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.lograd)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do Expedidor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Número do Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.nro)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do Expedidor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.bairro)) is null then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" do Expedidor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Código do município.
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_conhec_transp_exped.ibge_cidade ) = False then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.ibge_cidade || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Código do município está nulo.
   --
   if nvl(est_row_conhec_transp_exped.ibge_cidade, -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Expedidor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Descrição do município está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.descr_cidade)) is null then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do município" do Expedidor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.uf)) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Expedidor da Carga não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_conhec_transp_exped.uf ) = False then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14;
   -- Valida se o campo Código do País existe caso ele seja informado.
   --
   if est_row_conhec_transp_exped.cod_pais is not null
      and pk_csf.fkg_codpais_siscomex_valido ( en_cod_siscomex  => est_row_conhec_transp_exped.cod_pais ) = False then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do País" do Expedidor da Carga (' ||
                         est_row_conhec_transp_exped.cod_pais || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_exped.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_exped.conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_exped.cnpj         := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cnpj));
   est_row_conhec_transp_exped.cpf          := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cpf));
   est_row_conhec_transp_exped.nome         := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.nome));
   est_row_conhec_transp_exped.nome_fant    := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.nome_fant));
   est_row_conhec_transp_exped.lograd       := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.lograd));
   est_row_conhec_transp_exped.nro          := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.nro));
   est_row_conhec_transp_exped.compl        := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.compl));
   est_row_conhec_transp_exped.bairro       := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.bairro));
   est_row_conhec_transp_exped.ibge_cidade  := nvl(est_row_conhec_transp_exped.ibge_cidade,0);
   est_row_conhec_transp_exped.descr_cidade := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.descr_cidade));
   est_row_conhec_transp_exped.cep          := lpad(trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.cep)), 8, '0');
   est_row_conhec_transp_exped.uf           := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.uf));
   est_row_conhec_transp_exped.descr_pais   := trim(pk_csf.fkg_converte(est_row_conhec_transp_exped.descr_pais));
   --
   vn_fase := 99.3;
   --
   if gt_row_conhec_transp.dm_tp_amb = 2 then
      --
      vn_fase := 99.4;
      --
      est_row_conhec_transp_exped.nome := 'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL';
      --
   end if;
   --
   vn_fase := 99.5;
   -- procedimento de criação de e-mail do Conhec. Transp.
   pkb_integr_ct_email ( en_conhectransp_id   => est_row_conhec_transp_exped.conhectransp_id
                       , en_dm_origem         => 1 -- Expedidor
                       , ev_email             => est_row_conhec_transp_exped.email
                       , en_dm_tipo_anexo     => 3 --DACTE/XML
                       );
   --
   vn_fase := 99.6;
   --
   if nvl(est_row_conhec_transp_exped.conhectransp_id, 0) > 0
      and est_row_conhec_transp_exped.nome is not null
      and est_row_conhec_transp_exped.lograd is not null
      and est_row_conhec_transp_exped.nro is not null
      and est_row_conhec_transp_exped.bairro is not null
      and est_row_conhec_transp_exped.descr_cidade is not null
      and est_row_conhec_transp_exped.uf is not null
      then
      --
      vn_fase := 99.7;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.8;
         --
         select conhectranspexped_seq.nextval
           into est_row_conhec_transp_exped.id
           from dual;
         --
         vn_fase := 99.9;
         --
         insert into conhec_transp_exped ( id
                                         , conhectransp_id
                                         , cnpj
                                         , cpf
                                         , ie
                                         , nome
                                         , nome_fant
                                         , fone
                                         , lograd
                                         , nro
                                         , compl
                                         , bairro
                                         , ibge_cidade
                                         , descr_cidade
                                         , cep
                                         , uf
                                         , cod_pais
                                         , descr_pais
                                         , email
                                         )
                                  values ( est_row_conhec_transp_exped.id
                                         , est_row_conhec_transp_exped.conhectransp_id
                                         , est_row_conhec_transp_exped.cnpj
                                         , est_row_conhec_transp_exped.cpf
                                         , est_row_conhec_transp_exped.ie
                                         , est_row_conhec_transp_exped.nome
                                         , est_row_conhec_transp_exped.nome_fant
                                         , est_row_conhec_transp_exped.fone
                                         , est_row_conhec_transp_exped.lograd
                                         , est_row_conhec_transp_exped.nro
                                         , est_row_conhec_transp_exped.compl
                                         , est_row_conhec_transp_exped.bairro
                                         , est_row_conhec_transp_exped.ibge_cidade
                                         , est_row_conhec_transp_exped.descr_cidade
                                         , est_row_conhec_transp_exped.cep
                                         , est_row_conhec_transp_exped.uf
                                         , est_row_conhec_transp_exped.cod_pais
                                         , est_row_conhec_transp_exped.descr_pais
                                         , est_row_conhec_transp_exped.email
                                         );
         --
      else
         --
         vn_fase := 99.10;
         --
         update conhec_transp_exped set cnpj         = est_row_conhec_transp_exped.cnpj
                                      , cpf          = est_row_conhec_transp_exped.cpf
                                      , ie           = est_row_conhec_transp_exped.ie
                                      , nome         = est_row_conhec_transp_exped.nome
                                      , nome_fant    = est_row_conhec_transp_exped.nome_fant
                                      , fone         = est_row_conhec_transp_exped.fone
                                      , lograd       = est_row_conhec_transp_exped.lograd
                                      , nro          = est_row_conhec_transp_exped.nro
                                      , compl        = est_row_conhec_transp_exped.compl
                                      , bairro       = est_row_conhec_transp_exped.bairro
                                      , ibge_cidade  = est_row_conhec_transp_exped.ibge_cidade
                                      , descr_cidade = est_row_conhec_transp_exped.descr_cidade
                                      , cep          = est_row_conhec_transp_exped.cep
                                      , uf           = est_row_conhec_transp_exped.uf
                                      , cod_pais     = est_row_conhec_transp_exped.cod_pais
                                      , descr_pais   = est_row_conhec_transp_exped.descr_pais
                                      , email        = est_row_conhec_transp_exped.email
          where id = est_row_conhec_transp_exped.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_exped fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_exped;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos demais documentos.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrem_inf_outro ( est_log_generico        in out nocopy dbms_sql.number_table
                                     , est_row_ctrem_inf_outro in out nocopy Ctrem_Inf_Outro%rowtype
                                     , en_conhectransp_id      in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrem_inf_outro.conhectransprem_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Remetente para registro das Informações dos demais documentos.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Tipo de documento originário atende o tipo '00'ou '99'.
   --
   if nvl(trim(pk_csf.fkg_converte(est_row_ctrem_inf_outro.dm_tipo_doc)), '999') not in ('00', '10', '99') then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de documento originário" das Informações dos demais documentos (' ||
                         est_row_ctrem_inf_outro.dm_tipo_doc || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Data de Emissão está nulo.
   --
   if est_row_ctrem_inf_outro.dt_emissao is not null
      and est_row_ctrem_inf_outro.dt_emissao < (sysdate - 360)
      then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" das Informações dos demais documentos (' ||
                         est_row_ctrem_inf_outro.dt_emissao || ') não pode ser menor que 1 ano atrás.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Valor do documento fiscal está negativo caso ele seja informado.
   --
   if nvl(est_row_ctrem_inf_outro.vl_doc_fisc, 0) < 0  then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do documento fiscal" das Informações dos demais documentos (' ||
                         est_row_ctrem_inf_outro.vl_doc_fisc || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   est_row_ctrem_inf_outro.descr_outros := trim(pk_csf.fkg_converte(est_row_ctrem_inf_outro.descr_outros));
   --
   if est_row_ctrem_inf_outro.dm_tipo_doc = '99'
      and est_row_ctrem_inf_outro.descr_outros is null 
      then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O campo "Descrição" das Informações dos demais documentos deve ser informado quando o "Tipo de Documento Originário" for 99-Outros.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rem
      where id = est_row_ctrem_inf_outro.conhectransprem_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrem_inf_outro.dm_tipo_doc := trim(pk_csf.fkg_converte(est_row_ctrem_inf_outro.dm_tipo_doc));
   est_row_ctrem_inf_outro.nro_docto := trim(pk_csf.fkg_converte(est_row_ctrem_inf_outro.nro_docto));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrem_inf_outro.conhectransprem_id, 0) > 0
      and nvl(trim(pk_csf.fkg_converte(est_row_ctrem_inf_outro.dm_tipo_doc)), '999') in ('00', '10', '99')
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctreminfoutro_seq.nextval
           into est_row_ctrem_inf_outro.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrem_inf_outro ( id
                                     , conhectransprem_id
                                     , dm_tipo_doc
                                     , descr_outros
                                     , nro_docto
                                     , dt_emissao
                                     , vl_doc_fisc 
                                     )
                              values ( est_row_ctrem_inf_outro.id
                                     , est_row_ctrem_inf_outro.conhectransprem_id
                                     , est_row_ctrem_inf_outro.dm_tipo_doc
                                     , est_row_ctrem_inf_outro.descr_outros
                                     , est_row_ctrem_inf_outro.nro_docto
                                     , est_row_ctrem_inf_outro.dt_emissao
                                     , est_row_ctrem_inf_outro.vl_doc_fisc 
                                     );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrem_inf_outro set dm_tipo_doc  = est_row_ctrem_inf_outro.dm_tipo_doc
                                  , descr_outros = est_row_ctrem_inf_outro.descr_outros
                                  , nro_docto    = est_row_ctrem_inf_outro.nro_docto
                                  , dt_emissao   = est_row_ctrem_inf_outro.dt_emissao
                                  , vl_doc_fisc  = est_row_ctrem_inf_outro.vl_doc_fisc
          where id = est_row_ctrem_inf_outro.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrem_inf_outro fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrem_inf_outro;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a NFe do remetente
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrem_inf_nfe ( est_log_generico      in out nocopy dbms_sql.number_table
                                   , est_row_ctrem_inf_nfe in out nocopy Ctrem_Inf_Nfe%rowtype
                                   , en_conhectransp_id    in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrem_inf_nfe.conhectransprem_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Remetente para registro da NFe.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Chave de acesso da NF-e possui tamanho valido.
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_ctrem_inf_nfe.nro_chave_nfe))), 0) <> 44 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Chave de acesso da NF-e" da NFe do remetente (' ||
                         est_row_ctrem_inf_nfe.nro_chave_nfe || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   if nvl(est_row_ctrem_inf_nfe.pin,0) > 0
      and length(est_row_ctrem_inf_nfe.pin) not between 2 and 9 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O número do "PIN SUFRAMA" da NFe do remetente (' ||
                         est_row_ctrem_inf_nfe.pin || ') deve conter de 2 a 9 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rem
      where id = est_row_ctrem_inf_nfe.conhectransprem_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrem_inf_nfe.nro_chave_nfe := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nfe.nro_chave_nfe));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrem_inf_nfe.conhectransprem_id, 0) > 0
      and est_row_ctrem_inf_nfe.nro_chave_nfe is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctreminfnfe_seq.nextval
           into est_row_ctrem_inf_nfe.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrem_inf_nfe ( id
                                   , conhectransprem_id
                                   , nro_chave_nfe
                                   , pin
                                   )
                            values ( est_row_ctrem_inf_nfe.id
                                   , est_row_ctrem_inf_nfe.conhectransprem_id
                                   , est_row_ctrem_inf_nfe.nro_chave_nfe
                                   , est_row_ctrem_inf_nfe.pin
                                   );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrem_inf_nfe set nro_chave_nfe = est_row_ctrem_inf_nfe.nro_chave_nfe
                                , pin           = est_row_ctrem_inf_nfe.pin
          where id = est_row_ctrem_inf_nfe.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrem_inf_nfe fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrem_inf_nfe;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Local de retirada constante na NF
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrem_inf_nf_locret ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_ctrem_inf_nf_locret in out nocopy Ctrem_Inf_Nf_Locret%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrem_inf_nf_locret.ctreminfnf_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado a Nota Fiscal do remetente para registro do Local de retirada constante na Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.cnpj))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" relativo ao Local de retirada constante na NFe (' ||
                         est_row_ctrem_inf_nf_locret.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.cpf))), 0) <> 11 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" relativo ao Local de retirada constante na NFe (' ||
                         est_row_ctrem_inf_nf_locret.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Razão Social ou Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.nome)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do Local de retirada constante na Nota Fiscal não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.lograd)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do Local de retirada constante na Nota Fiscal não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Número do Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.nro)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do Local de retirada constante na Nota Fiscal não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.bairro)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" do Local de retirada constante na Nota Fiscal não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Código do município.
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_ctrem_inf_nf_locret.ibge_cidade ) = False then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Local de retirada constante na Nota Fiscal está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Código do município está nulo.
   --
   if nvl(est_row_ctrem_inf_nf_locret.ibge_cidade, -1) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Local de retirada constante na Nota Fiscal não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Descrição do município está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.descr_cidade)) is null then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do município" do Local de retirada constante na Nota Fiscal não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.uf)) is null then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Local de retirada constante na Nota Fiscal não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_ctrem_inf_nf_locret.uf ) = False then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Local de retirada constante na Nota Fiscal está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin     
     select b.conhectransp_id
       into vn_conhectransp_id
       from ctrem_inf_nf a
          , conhec_transp_rem b
      where b.id = a.conhectransprem_id
        and a.id = est_row_ctrem_inf_nf_locret.ctreminfnf_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null; 
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrem_inf_nf_locret.cnpj         := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.cnpj));
   est_row_ctrem_inf_nf_locret.cpf          := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.cpf));
   est_row_ctrem_inf_nf_locret.nome         := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.nome));
   est_row_ctrem_inf_nf_locret.lograd       := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.lograd));
   est_row_ctrem_inf_nf_locret.nro          := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.nro));
   est_row_ctrem_inf_nf_locret.compl        := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.compl));
   est_row_ctrem_inf_nf_locret.bairro       := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.bairro));
   est_row_ctrem_inf_nf_locret.ibge_cidade  := nvl(est_row_ctrem_inf_nf_locret.ibge_cidade,0);
   est_row_ctrem_inf_nf_locret.descr_cidade := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.descr_cidade));
   est_row_ctrem_inf_nf_locret.uf           := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf_locret.uf));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrem_inf_nf_locret.ctreminfnf_id, 0) > 0
      and est_row_ctrem_inf_nf_locret.nome is not null
      and est_row_ctrem_inf_nf_locret.lograd is not null
      and est_row_ctrem_inf_nf_locret.nro is not null
      and est_row_ctrem_inf_nf_locret.bairro is not null
      and est_row_ctrem_inf_nf_locret.descr_cidade is not null
      and est_row_ctrem_inf_nf_locret.uf is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctreminfnflocret_seq.nextval
           into est_row_ctrem_inf_nf_locret.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrem_inf_nf_locret ( id
                                         , ctreminfnf_id
                                         , cnpj
                                         , cpf
                                         , nome
                                         , lograd
                                         , nro
                                         , compl
                                         , bairro
                                         , ibge_cidade
                                         , descr_cidade
                                         , uf 
                                         )
                                  values ( est_row_ctrem_inf_nf_locret.id
                                         , est_row_ctrem_inf_nf_locret.ctreminfnf_id
                                         , est_row_ctrem_inf_nf_locret.cnpj
                                         , est_row_ctrem_inf_nf_locret.cpf
                                         , est_row_ctrem_inf_nf_locret.nome
                                         , est_row_ctrem_inf_nf_locret.lograd
                                         , est_row_ctrem_inf_nf_locret.nro
                                         , est_row_ctrem_inf_nf_locret.compl
                                         , est_row_ctrem_inf_nf_locret.bairro
                                         , est_row_ctrem_inf_nf_locret.ibge_cidade
                                         , est_row_ctrem_inf_nf_locret.descr_cidade
                                         , est_row_ctrem_inf_nf_locret.uf
                                         );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrem_inf_nf_locret  set cnpj         = est_row_ctrem_inf_nf_locret.cnpj
                                       , cpf          = est_row_ctrem_inf_nf_locret.cpf
                                       , nome         = est_row_ctrem_inf_nf_locret.nome
                                       , lograd       = est_row_ctrem_inf_nf_locret.lograd
                                       , nro          = est_row_ctrem_inf_nf_locret.nro
                                       , compl        = est_row_ctrem_inf_nf_locret.compl
                                       , bairro       = est_row_ctrem_inf_nf_locret.bairro
                                       , ibge_cidade  = est_row_ctrem_inf_nf_locret.ibge_cidade
                                       , descr_cidade = est_row_ctrem_inf_nf_locret.descr_cidade
                                       , uf           = est_row_ctrem_inf_nf_locret.uf
          where id = est_row_ctrem_inf_nf_locret.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrem_inf_nf_locret fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrem_inf_nf_locret;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas das NF do remetente
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ctrem_inf_nf ( est_log_generico     in out nocopy dbms_sql.number_table
                                  , est_row_ctrem_inf_nf in out nocopy Ctrem_Inf_Nf%rowtype
                                  , en_conhectransp_id   in            Conhec_Transp.id%TYPE
                                  , ev_cod_mod           in            Mod_Fiscal.cod_mod%type )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrem_inf_nf.conhectransprem_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Remetente para registro da Nota Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo série está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf.serie)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "série" da Nota Fiscal do remetente não informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo série está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf.nro_nf)) is null then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número" da Nota Fiscal do remetente não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Data de Emissão está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf.dt_emissao)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" da Nota Fiscal do remetente não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Valor da Base de Cálculo do ICMS está nulo.
   --
   if nvl(est_row_ctrem_inf_nf.vl_bc_icms, -1) < 0 then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Base de Cálculo do ICMS" da Nota Fiscal do remetente não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Valor da Base de Cálculo do ICMS está nulo.
   --
   if nvl(est_row_ctrem_inf_nf.vl_icms, -1) < 0 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor do ICMS" da Nota Fiscal do remetente não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Valor da Base de Cálculo do ICMS ST está nulo.
   --
   if nvl(est_row_ctrem_inf_nf.vl_bc_icmsst, -1) < 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor da Base de Cálculo do ICMS ST" da Nota Fiscal do remetente não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Valor Total do ICMS ST está nulo.
   --
   if nvl(est_row_ctrem_inf_nf.vl_icmsst , -1) < 0 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total do ICMS ST" da Nota Fiscal do remetente não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Valor Total dos Produtos está nulo.
   --
   if nvl(est_row_ctrem_inf_nf.vl_total_prod , -1) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total dos Produtos" da Nota Fiscal do remetente não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Valor Total da NF está nulo.
   --
   if nvl(est_row_ctrem_inf_nf.vl_total_nf , -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Valor Total" da Nota Fiscal do remetente não informado ou negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo CFOP está nulo.
   --
   if nvl(est_row_ctrem_inf_nf.cfop , -1) < 0 then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CFOP Predominante" da Nota Fiscal do remetente não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo CFOP existe na tabela de CFOP do sistema.
   --
   if pk_csf.fkg_cfop_id ( en_cd  => est_row_ctrem_inf_nf.cfop ) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CFOP Predominante" da Nota Fiscal do remetente (' || est_row_ctrem_inf_nf.cfop  || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   -- Valida se o campo Peso total em Kg está negativo caso ele seja informado.
   --
   if est_row_ctrem_inf_nf.peso_kg is not null
      and nvl(est_row_ctrem_inf_nf.peso_kg, 0) < 0 then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Peso total em Kg" relativo a(s) NF(s) do remetente (' || est_row_ctrem_inf_nf.peso_kg  || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14;
   -- Valida se o campo PIN SUFRAMA está negativo caso ele seja informado.
   --
   if est_row_ctrem_inf_nf.pin is not null
      and nvl(est_row_ctrem_inf_nf.pin, 0) < 0 then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "CFOP Predominante" da Nota Fiscal do remetente (' || est_row_ctrem_inf_nf.pin  || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15;
   -- Valida o modelo da Nota Fiscal
   est_row_ctrem_inf_nf.modfiscal_id := pk_csf.fkg_Mod_Fiscal_id ( ev_cod_mod => lpad(trim(ev_cod_mod), 2, '0') );
   --
   vn_fase := 15.1;
   --
   if nvl(est_row_ctrem_inf_nf.modfiscal_id,0) <= 0 then
      --
      vn_fase := 15.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Modelo da Nota Fiscal" da Nota Fiscal do remetente (' || ev_cod_mod  || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15.3;
   --
   if trim(ev_cod_mod) not in ('01', '04') then
      --
      vn_fase := 15.4;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Modelo da Nota Fiscal" da Nota Fiscal do remetente ('
                         || ev_cod_mod  
                         || ') está inválido, apenas são válidos os modelos: 01 - NF Modelo 01/1A e Avulsa e 04 - NF de Produtor';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
      from conhec_transp_rem
     where id = est_row_ctrem_inf_nf.conhectransprem_id;
   exception
      when no_data_found then
        vn_conhectransp_id := null;   
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrem_inf_nf.nro_roma_nf   := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf.nro_roma_nf));
   est_row_ctrem_inf_nf.nro_ped_nf    := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf.nro_ped_nf));
   est_row_ctrem_inf_nf.serie         := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf.serie));
   est_row_ctrem_inf_nf.nro_nf        := trim(pk_csf.fkg_converte(est_row_ctrem_inf_nf.nro_nf));
   est_row_ctrem_inf_nf.vl_bc_icms    := nvl(est_row_ctrem_inf_nf.vl_bc_icms,0);
   est_row_ctrem_inf_nf.vl_icms       := nvl(est_row_ctrem_inf_nf.vl_icms,0);
   est_row_ctrem_inf_nf.vl_bc_icmsst  := nvl(est_row_ctrem_inf_nf.vl_bc_icmsst,0);
   est_row_ctrem_inf_nf.vl_icmsst     := nvl(est_row_ctrem_inf_nf.vl_icmsst,0);
   est_row_ctrem_inf_nf.vl_total_prod := nvl(est_row_ctrem_inf_nf.vl_total_prod,0);
   est_row_ctrem_inf_nf.vl_total_nf   := nvl(est_row_ctrem_inf_nf.vl_total_nf,0);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrem_inf_nf.conhectransprem_id, 0) > 0
      and est_row_ctrem_inf_nf.serie is not null
      and est_row_ctrem_inf_nf.nro_nf is not null
      and est_row_ctrem_inf_nf.dt_emissao is not null
      and nvl(est_row_ctrem_inf_nf.vl_bc_icms, -1) >= 0
      and nvl(est_row_ctrem_inf_nf.vl_icms, -1) >= 0
      and nvl(est_row_ctrem_inf_nf.vl_bc_icmsst, -1) >= 0
      and nvl(est_row_ctrem_inf_nf.vl_icmsst, -1) >= 0
      and nvl(est_row_ctrem_inf_nf.vl_total_prod, -1) >= 0
      and nvl(est_row_ctrem_inf_nf.vl_total_nf, -1) >= 0
      and nvl(est_row_ctrem_inf_nf.cfop, 0) > 0
      and nvl(est_row_ctrem_inf_nf.modfiscal_id,0) > 0
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctreminfnf_seq.nextval
           into est_row_ctrem_inf_nf.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ctrem_inf_nf ( id
                                  , conhectransprem_id
                                  , nro_roma_nf
                                  , nro_ped_nf
                                  , serie
                                  , nro_nf
                                  , dt_emissao
                                  , vl_bc_icms
                                  , vl_icms
                                  , vl_bc_icmsst
                                  , vl_icmsst
                                  , vl_total_prod
                                  , vl_total_nf
                                  , cfop
                                  , peso_kg
                                  , pin
                                  , modfiscal_id
                                  )
                           values ( est_row_ctrem_inf_nf.id
                                  , est_row_ctrem_inf_nf.conhectransprem_id
                                  , est_row_ctrem_inf_nf.nro_roma_nf
                                  , est_row_ctrem_inf_nf.nro_ped_nf
                                  , est_row_ctrem_inf_nf.serie
                                  , est_row_ctrem_inf_nf.nro_nf
                                  , est_row_ctrem_inf_nf.dt_emissao
                                  , est_row_ctrem_inf_nf.vl_bc_icms
                                  , est_row_ctrem_inf_nf.vl_icms
                                  , est_row_ctrem_inf_nf.vl_bc_icmsst
                                  , est_row_ctrem_inf_nf.vl_icmsst
                                  , est_row_ctrem_inf_nf.vl_total_prod
                                  , est_row_ctrem_inf_nf.vl_total_nf
                                  , est_row_ctrem_inf_nf.cfop
                                  , est_row_ctrem_inf_nf.peso_kg
                                  , est_row_ctrem_inf_nf.pin
                                  , est_row_ctrem_inf_nf.modfiscal_id
                                  );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ctrem_inf_nf  set nro_roma_nf   = est_row_ctrem_inf_nf.nro_roma_nf
                                , nro_ped_nf    = est_row_ctrem_inf_nf.nro_ped_nf
                                , serie         = est_row_ctrem_inf_nf.serie
                                , nro_nf        = est_row_ctrem_inf_nf.nro_nf
                                , dt_emissao    = est_row_ctrem_inf_nf.dt_emissao
                                , vl_bc_icms    = est_row_ctrem_inf_nf.vl_bc_icms
                                , vl_icms       = est_row_ctrem_inf_nf.vl_icms
                                , vl_bc_icmsst  = est_row_ctrem_inf_nf.vl_bc_icmsst
                                , vl_icmsst     = est_row_ctrem_inf_nf.vl_icmsst
                                , vl_total_prod = est_row_ctrem_inf_nf.vl_total_prod
                                , vl_total_nf   = est_row_ctrem_inf_nf.vl_total_nf
                                , cfop          = est_row_ctrem_inf_nf.cfop
                                , peso_kg       = est_row_ctrem_inf_nf.peso_kg
                                , pin           = est_row_ctrem_inf_nf.pin
                                , modfiscal_id  = est_row_ctrem_inf_nf.modfiscal_id
          where id = est_row_ctrem_inf_nf.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrem_inf_nf fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrem_inf_nf;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Local da Coleta do Remetente
procedure pkb_integr_ctrem_loc_colet ( est_log_generico         in out nocopy dbms_sql.number_table
                                     , est_row_ctrem_loc_colet  in out nocopy ctrem_loc_colet%rowtype
                                     , en_conhectransp_id       in            Conhec_Transp.id%TYPE
                                     )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ctrem_loc_colet.conhectransprem_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 
      then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Remetente para registro do Local de Entrega.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if est_row_ctrem_loc_colet.uf = 'EX' then
      --
      est_row_ctrem_loc_colet.cnpj          := null;
      est_row_ctrem_loc_colet.cpf           := null;
      est_row_ctrem_loc_colet.ibge_cidade   := '9999999';
      est_row_ctrem_loc_colet.descr_cidade  := 'EXTERIOR';
      --
   end if;
   --
   vn_fase := 3;
   -- Valida informações do CNPJ
   --
   if trim(est_row_ctrem_loc_colet.cnpj) = '00000000000000' 
      or trim(est_row_ctrem_loc_colet.cnpj) = '0'
      or trim(est_row_ctrem_loc_colet.cnpj) = 'EXTERIOR'
      then
      est_row_ctrem_loc_colet.cnpj := null;
   end if;
   --
   vn_Fase := 3.1;
   -- valida se CNPJ é numerico caso ele seja informado.
   if trim(est_row_ctrem_loc_colet.cnpj) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ctrem_loc_colet.cnpj ) = false then
      --
      gv_mensagem_log := 'O "CNPJ do Local de Coleta do Remetente" ('||est_row_ctrem_loc_colet.cnpj||
                         ') deve conter somente números considerando os zeros à esquerda.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   --
   -- Valida o CNPJ
   if trim(est_row_ctrem_loc_colet.cnpj) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ctrem_loc_colet.cnpj ) = true
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_ctrem_loc_colet.cnpj), 0) = 0 then
      --
      gv_mensagem_log := 'O "CNPJ do Local de Coleta do Remetente" ('||est_row_ctrem_loc_colet.cnpj||') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida Informações do CPF
   --
   if trim(est_row_ctrem_loc_colet.cpf) = '00000000000'
      or trim(est_row_ctrem_loc_colet.cpf) = '0'
      or trim(est_row_ctrem_loc_colet.cpf) = 'EXTERIOR'
      then
      est_row_ctrem_loc_colet.cpf := null;
   end if;
   --
   vn_fase := 4.1;
   --
   -- valida se CNPJ é numerico caso ele seja informado.
   if trim(est_row_ctrem_loc_colet.cpf) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ctrem_loc_colet.cpf ) = false then
      --
      gv_mensagem_log := 'O "CPF do destinatário da Nota Fiscal" ('||est_row_ctrem_loc_colet.cpf||
                         ') deve conter somente números considerando os zeros à esquerda.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4.2;
   --
   -- Valida o CPF
   if trim(est_row_ctrem_loc_colet.cpf) is not null
      and pk_csf.fkg_is_numerico ( ev_valor =>  est_row_ctrem_loc_colet.cpf ) = true
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_ctrem_loc_colet.cpf), 0) = 0 then
      --
      gv_mensagem_log := 'O "CPF do destinatário da Nota Fiscal" ('||est_row_ctrem_loc_colet.cpf||') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   if trim(est_row_ctrem_loc_colet.nome) is null then
      --
      gv_mensagem_log := 'O "Razão Social ou Nome" do Local de Coleta do Remetente, não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   --
   if trim(est_row_ctrem_loc_colet.lograd) is null then
      --
      gv_mensagem_log := 'O "Logradouro" do Local de Coleta do Remetente, não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   --
   if trim(est_row_ctrem_loc_colet.nro) is null then
      --
      gv_mensagem_log := 'O "Número do endereço" do Local de Coleta do Remetente, não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   --
   if trim(est_row_ctrem_loc_colet.bairro) is null then
      --
      gv_mensagem_log := 'O "Bairro" do Local de Coleta do Remetente, não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8.1;
   -- verifica se a UF é inválida
   if pk_csf.fkg_uf_valida ( ev_sigla_estado => est_row_ctrem_loc_colet.uf ) = false then
      --
      gv_mensagem_log := '"Sigla da UF do Local de Coleta do Remetente" inválida ('||est_row_ctrem_loc_colet.uf||').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida o campo cidade_ibge
   if est_row_ctrem_loc_colet.ibge_cidade <> 9999999 then
      --
      vn_fase := 9.1;
      --
      if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade => est_row_ctrem_loc_colet.ibge_cidade ) = false then
         --
         vn_fase := 9.2;
         --
         gv_mensagem_log := '"Código IBGE do Local de Coleta do Remetente" inválido ('||est_row_ctrem_loc_colet.ibge_cidade||').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 9.3;
      -- Valida se o IBGE da cidade pertence a sigla da UF
      if pk_csf.fkg_ibge_cidade_por_sigla_uf ( en_ibge_cidade   => est_row_ctrem_loc_colet.ibge_cidade
                                             , ev_sigla_estado  => est_row_ctrem_loc_colet.uf
                                             ) = false 
         then
         --
         vn_fase := 9.4;
         --
         gv_mensagem_log := '"Código IBGE do Local de Coleta do Remetente" ('||
                            est_row_ctrem_loc_colet.ibge_cidade||') não pertence a sigla do estado ('||est_row_ctrem_loc_colet.uf||').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 9.5;
      --
      if trim(est_row_ctrem_loc_colet.descr_cidade) is null then
         -- Busca o nome da cidade conforme IBGE
         est_row_ctrem_loc_colet.descr_cidade := pk_csf.fkg_descr_cidade_conf_ibge ( ev_ibge_cidade => est_row_ctrem_loc_colet.ibge_cidade );
         --
      end if;
      --
      if trim(est_row_ctrem_loc_colet.descr_cidade) is null then
         est_row_ctrem_loc_colet.descr_cidade := 'NI';
      end if;
      --
   end if;
   --
   vn_fase := 9.6;
   --
   if trim(est_row_ctrem_loc_colet.uf) <> 'EX'
      and est_row_ctrem_loc_colet.ibge_cidade = 9999999 then
      --
      gv_mensagem_log := 'Código IBGE do Local de Coleta do Remetente 9999999 não pertence ao estado '||trim(est_row_ctrem_loc_colet.uf)||'.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   --
   if trim(est_row_ctrem_loc_colet.descr_cidade) is null then
      --
      gv_mensagem_log := '"Descrição da Cidade" do Local de Coleta do Remetente não informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_rem
      where id = est_row_ctrem_loc_colet.conhectransprem_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id =  vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ctrem_loc_colet.cnpj          := trim(est_row_ctrem_loc_colet.cnpj);
   est_row_ctrem_loc_colet.cpf           := trim(est_row_ctrem_loc_colet.cpf);
   est_row_ctrem_loc_colet.nome          := trim(est_row_ctrem_loc_colet.nome);
   est_row_ctrem_loc_colet.lograd        := trim(est_row_ctrem_loc_colet.lograd);
   est_row_ctrem_loc_colet.nro           := trim(est_row_ctrem_loc_colet.nro);
   est_row_ctrem_loc_colet.compl         := trim(est_row_ctrem_loc_colet.compl);
   est_row_ctrem_loc_colet.bairro        := trim(est_row_ctrem_loc_colet.bairro);
   est_row_ctrem_loc_colet.ibge_cidade   := trim(est_row_ctrem_loc_colet.ibge_cidade);
   est_row_ctrem_loc_colet.descr_cidade  := trim(est_row_ctrem_loc_colet.descr_cidade);
   est_row_ctrem_loc_colet.uf            := trim(est_row_ctrem_loc_colet.uf);
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ctrem_loc_colet.conhectransprem_id,0) > 0
      and trim(est_row_ctrem_loc_colet.nome) is not null
      and trim(est_row_ctrem_loc_colet.lograd) is not null
      and trim(est_row_ctrem_loc_colet.nro) is not null
      and trim(est_row_ctrem_loc_colet.bairro) is not null
      and trim(est_row_ctrem_loc_colet.ibge_cidade) is not null
      and trim(est_row_ctrem_loc_colet.descr_cidade) is not null
      and trim(est_row_ctrem_loc_colet.uf) is not null
      then
      --
      if nvl(gn_tipo_integr,0) = 1 then -- Inserre
         --
         vn_fase := 99.4;
         --
         select ctremloccolet_seq.nextval
           into est_row_ctrem_loc_colet.id
           from dual;
         --
         insert into ctrem_loc_colet ( id
                                     , conhectransprem_id
                                     , cnpj
                                     , cpf
                                     , nome
                                     , lograd
                                     , nro
                                     , compl
                                     , bairro
                                     , ibge_cidade
                                     , descr_cidade
                                     , uf
                                     )
                              values ( est_row_ctrem_loc_colet.id
                                     , est_row_ctrem_loc_colet.conhectransprem_id
                                     , est_row_ctrem_loc_colet.cnpj
                                     , est_row_ctrem_loc_colet.cpf
                                     , est_row_ctrem_loc_colet.nome
                                     , est_row_ctrem_loc_colet.lograd
                                     , est_row_ctrem_loc_colet.nro
                                     , est_row_ctrem_loc_colet.compl
                                     , est_row_ctrem_loc_colet.bairro
                                     , est_row_ctrem_loc_colet.ibge_cidade
                                     , est_row_ctrem_loc_colet.descr_cidade
                                     , est_row_ctrem_loc_colet.uf
                                     );
         --
      else
         -- atualiza
         vn_fase := 99.5;
         --
         update ctrem_loc_colet set cnpj          = est_row_ctrem_loc_colet.cnpj
                                  , cpf           = est_row_ctrem_loc_colet.cpf
                                  , nome          = est_row_ctrem_loc_colet.nome
                                  , lograd        = est_row_ctrem_loc_colet.lograd
                                  , nro           = est_row_ctrem_loc_colet.nro
                                  , compl         = est_row_ctrem_loc_colet.compl
                                  , bairro        = est_row_ctrem_loc_colet.bairro
                                  , ibge_cidade   = est_row_ctrem_loc_colet.ibge_cidade
                                  , descr_cidade  = est_row_ctrem_loc_colet.descr_cidade
                                  , uf            = est_row_ctrem_loc_colet.uf
          where id = est_row_ctrem_loc_colet.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctrem_loc_colet fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctrem_loc_colet;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Remetente das mercadorias transportadas pelo CT.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_rem ( est_log_generico          in out nocopy dbms_sql.number_table
                                       , est_row_conhec_transp_rem in out nocopy Conhec_Transp_Rem%rowtype
                                       , en_conhectransp_id        in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_rem.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro do Remetente das mercadorias transportadas.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cnpj))), 0) <> 14 then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Remetente (' ||
                         est_row_conhec_transp_rem.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2.2;
   -- Valida o CNPJ informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cnpj)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_rem.cnpj), 0) = 0 then
      --
      vn_fase := 2.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Remetente (' ||
                         est_row_conhec_transp_rem.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o tamanho campo CPF caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cpf))), 0) <> 11 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Remetente (' ||
                         est_row_conhec_transp_rem.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   -- Valida o CPF informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cpf)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_rem.cpf), 0) = 0  then
      --
      vn_fase := 3.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do Remetente (' ||
                         est_row_conhec_transp_rem.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Inscrição Estadual.
   est_row_conhec_transp_rem.ie           := trim ( replace(replace(replace(replace(replace(upper(est_row_conhec_transp_rem.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.ie)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Remetente (' ||
                         est_row_conhec_transp_rem.ie || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4.2;
   -- Valida a Inscrição Estadual.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.ie)) is not null
      and trim(est_row_conhec_transp_rem.uf) is not null
      and nvl(pk_valida_docto.fkg_valida_ie( ev_inscr_est => est_row_conhec_transp_rem.ie
                                           , ev_estado    => est_row_conhec_transp_rem.uf ), 0) = 0 then
      --
      vn_fase := 4.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Remetente (' ||
                         est_row_conhec_transp_rem.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Razão Social ou Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.nome)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do Remetente não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.lograd)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do Remetente não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Número do Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.nro)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do Remetente não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.bairro)) is null then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" relativo ao Remetente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Código do município.
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_conhec_transp_rem.ibge_cidade ) = False then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Remetente (' ||
                         est_row_conhec_transp_rem.ibge_cidade || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Código do município está nulo.
   --
   if nvl(est_row_conhec_transp_rem.ibge_cidade, -1) < 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Remetente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Descrição do município está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.descr_cidade)) is null then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do município" do Remetente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.uf)) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Remetente não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_conhec_transp_rem.uf ) = False then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Remetente (' ||
                         est_row_conhec_transp_rem.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14;
   -- Valida se o campo Código do País existe caso ele seja informado.
   --
   if est_row_conhec_transp_rem.cod_pais is not null
      and pk_csf.fkg_codpais_siscomex_valido ( en_cod_siscomex  => est_row_conhec_transp_rem.cod_pais ) = False then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do País" do Remetente (' ||
                         est_row_conhec_transp_rem.cod_pais || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_rem.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_rem.conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   est_row_conhec_transp_rem.cnpj         := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cnpj));
   est_row_conhec_transp_rem.cpf          := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cpf));
   est_row_conhec_transp_rem.nome         := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.nome));
   est_row_conhec_transp_rem.nome_fant    := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.nome_fant));
   est_row_conhec_transp_rem.lograd       := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.lograd));
   est_row_conhec_transp_rem.nro          := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.nro));
   est_row_conhec_transp_rem.compl        := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.compl));
   est_row_conhec_transp_rem.bairro       := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.bairro));
   est_row_conhec_transp_rem.descr_cidade := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.descr_cidade));
   est_row_conhec_transp_rem.cep          := lpad(trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.cep)), 8, '0');
   est_row_conhec_transp_rem.uf           := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.uf));
   est_row_conhec_transp_rem.descr_pais   := trim(pk_csf.fkg_converte(est_row_conhec_transp_rem.descr_pais));
   --
   vn_fase := 99.3;
   --
   if gt_row_conhec_transp.dm_tp_amb = 2 then
      --
      vn_fase := 99.4;
      --
      est_row_conhec_transp_rem.nome := 'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL';
      --
   end if;
   --
   vn_fase := 99.5;
   -- procedimento de criação de e-mail do Conhec. Transp.
   pkb_integr_ct_email ( en_conhectransp_id   => est_row_conhec_transp_rem.conhectransp_id
                       , en_dm_origem         => 0 -- Remetente
                       , ev_email             => est_row_conhec_transp_rem.email
                       , en_dm_tipo_anexo     => 3 --DACTE/XML
                       );
   --
   vn_fase := 99.6;
   --
   if nvl(est_row_conhec_transp_rem.conhectransp_id, 0) > 0
      and est_row_conhec_transp_rem.nome is not null
      and est_row_conhec_transp_rem.lograd is not null
      and est_row_conhec_transp_rem.nro is not null
      and est_row_conhec_transp_rem.bairro is not null
      and est_row_conhec_transp_rem.descr_cidade is not null
      and est_row_conhec_transp_rem.uf is not null
      then
      --
      vn_fase := 99.7;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.8;
         --
         select conhectransprem_seq.nextval
           into est_row_conhec_transp_rem.id
           from dual;
         --
         vn_fase := 99.9;
         --
         insert into conhec_transp_rem ( id
                                       , conhectransp_id
                                       , cnpj
                                       , cpf
                                       , ie
                                       , nome
                                       , nome_fant
                                       , fone
                                       , lograd
                                       , nro
                                       , compl
                                       , bairro
                                       , ibge_cidade
                                       , descr_cidade
                                       , cep
                                       , uf
                                       , cod_pais
                                       , descr_pais
                                       , email
                                       )
                                values ( est_row_conhec_transp_rem.id
                                       , est_row_conhec_transp_rem.conhectransp_id
                                       , est_row_conhec_transp_rem.cnpj
                                       , est_row_conhec_transp_rem.cpf
                                       , est_row_conhec_transp_rem.ie
                                       , est_row_conhec_transp_rem.nome
                                       , est_row_conhec_transp_rem.nome_fant
                                       , est_row_conhec_transp_rem.fone
                                       , est_row_conhec_transp_rem.lograd
                                       , est_row_conhec_transp_rem.nro
                                       , est_row_conhec_transp_rem.compl
                                       , est_row_conhec_transp_rem.bairro
                                       , est_row_conhec_transp_rem.ibge_cidade
                                       , est_row_conhec_transp_rem.descr_cidade
                                       , est_row_conhec_transp_rem.cep
                                       , est_row_conhec_transp_rem.uf
                                       , est_row_conhec_transp_rem.cod_pais
                                       , est_row_conhec_transp_rem.descr_pais
                                       , est_row_conhec_transp_rem.email
                                       );
         --
      else
         --
         vn_fase := 99.10;
         --
         update conhec_transp_rem set cnpj         = est_row_conhec_transp_rem.cnpj
                                    , cpf          = est_row_conhec_transp_rem.cpf
                                    , ie           = est_row_conhec_transp_rem.ie
                                    , nome         = est_row_conhec_transp_rem.nome
                                    , nome_fant    = est_row_conhec_transp_rem.nome_fant
                                    , fone         = est_row_conhec_transp_rem.fone
                                    , lograd       = est_row_conhec_transp_rem.lograd
                                    , nro          = est_row_conhec_transp_rem.nro
                                    , compl        = est_row_conhec_transp_rem.compl
                                    , bairro       = est_row_conhec_transp_rem.bairro
                                    , ibge_cidade  = est_row_conhec_transp_rem.ibge_cidade
                                    , descr_cidade = est_row_conhec_transp_rem.descr_cidade
                                    , cep          = est_row_conhec_transp_rem.cep
                                    , uf           = est_row_conhec_transp_rem.uf
                                    , cod_pais     = est_row_conhec_transp_rem.cod_pais
                                    , descr_pais   = est_row_conhec_transp_rem.descr_pais
                                    , email        = est_row_conhec_transp_rem.email
          where id = est_row_conhec_transp_rem.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_rem fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_rem;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas do Emitente do CT.
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_emit ( est_log_generico           in out nocopy dbms_sql.number_table
                                        , est_row_conhec_transp_emit in out nocopy Conhec_Transp_Emit%rowtype
                                        , en_conhectransp_id         in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_emit.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro do Emitente';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.cnpj)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Emitente não informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --
   vn_fase := 2.2;
   -- Valida o CNPJ do emitente.
   --
   if nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_conhec_transp_emit.cnpj), 0) = 0 then
      --
      vn_fase := 2.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do Emitente (' || est_row_conhec_transp_emit.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Inscrição Estadual.
   est_row_conhec_transp_emit.ie := trim ( replace(replace(replace(replace(replace(upper(est_row_conhec_transp_emit.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   if nvl(length(trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Emitente (' || est_row_conhec_transp_emit.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   if trim(est_row_conhec_transp_emit.ie) like 'ISENT%' then
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Emitente não pode ser (' || est_row_conhec_transp_emit.ie || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3.2;
   -- Valida o campo Inscrição Estadual.
   --
   if trim(est_row_conhec_transp_emit.uf) is not null
      and nvl(pk_valida_docto.fkg_valida_ie( ev_inscr_est => est_row_conhec_transp_emit.ie
                                           , ev_estado    => est_row_conhec_transp_emit.uf ), 0) = 0 then
      --
      vn_fase := 3.3;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do Emitente (' || est_row_conhec_transp_emit.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Razão Social ou Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.nome)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do Emitente não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.lograd)) is null then
      --
      vn_fase := 5.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do Emitente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 6;
   -- Valida se o campo Número do Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.nro)) is null then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do Emitente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.bairro)) is null then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" do Emitente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo Código do município.
   --
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_conhec_transp_emit.ibge_cidade ) = False then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Emitente (' || est_row_conhec_transp_emit.ibge_cidade || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   -- Valida se o campo Código do município está nulo.
   --
   if nvl(est_row_conhec_transp_emit.ibge_cidade, -1) < 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do município" do Emitente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Descrição do município está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.descr_cidade)) is null then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do município" do Emitente não foi informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.uf)) is null then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Emitente não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_conhec_transp_emit.uf ) = False then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do Emitente (' || est_row_conhec_transp_emit.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 13;
   -- Valida se o campo Código do País existe caso ele seja informado.
   --
   if est_row_conhec_transp_emit.cod_pais >= 0
      and pk_csf.fkg_codpais_siscomex_valido ( en_cod_siscomex  => est_row_conhec_transp_emit.cod_pais ) = False then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do País" do Emitente (' || est_row_conhec_transp_emit.cod_pais || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 14;
   -- Valida indicador do Simples Nacional
   if nvl(est_row_conhec_transp_emit.dm_ind_sn,0) not in (0, 1) then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador do Simples Nacional" do Emitente (' || est_row_conhec_transp_emit.dm_ind_sn || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_emit.conhectransp_id ) = 1  then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_emit.conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_emit.cnpj          := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.cnpj));
   est_row_conhec_transp_emit.nome          := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.nome));
   est_row_conhec_transp_emit.nome_fant     := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.nome_fant));
   est_row_conhec_transp_emit.lograd        := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.lograd));
   est_row_conhec_transp_emit.nro           := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.nro));
   est_row_conhec_transp_emit.compl         := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.compl));
   est_row_conhec_transp_emit.bairro        := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.bairro));
   est_row_conhec_transp_emit.ibge_cidade   := nvl(est_row_conhec_transp_emit.ibge_cidade, 0);
   est_row_conhec_transp_emit.descr_cidade  := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.descr_cidade));
   est_row_conhec_transp_emit.cep           := lpad(trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.cep)), 8, '0');
   est_row_conhec_transp_emit.uf            := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.uf));
   est_row_conhec_transp_emit.descr_pais    := trim(pk_csf.fkg_converte(est_row_conhec_transp_emit.descr_pais));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_conhec_transp_emit.conhectransp_id, 0) > 0
      and est_row_conhec_transp_emit.cnpj is not null
      and est_row_conhec_transp_emit.ie is not null
      and est_row_conhec_transp_emit.nome is not null
      and est_row_conhec_transp_emit.lograd is not null
      and est_row_conhec_transp_emit.nro is not null
      and est_row_conhec_transp_emit.bairro is not null
      and est_row_conhec_transp_emit.descr_cidade is not null
      and est_row_conhec_transp_emit.uf is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspemit_seq.nextval
           into est_row_conhec_transp_emit.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_emit ( id
                                        , conhectransp_id
                                        , cnpj
                                        , ie
                                        , nome
                                        , nome_fant
                                        , lograd
                                        , nro
                                        , compl
                                        , bairro
                                        , ibge_cidade
                                        , descr_cidade
                                        , cep
                                        , uf
                                        , cod_pais
                                        , descr_pais
                                        , fone
                                        , dm_ind_sn
                                        )
                                 values ( est_row_conhec_transp_emit.id
                                        , est_row_conhec_transp_emit.conhectransp_id
                                        , est_row_conhec_transp_emit.cnpj
                                        , est_row_conhec_transp_emit.ie
                                        , est_row_conhec_transp_emit.nome
                                        , est_row_conhec_transp_emit.nome_fant
                                        , est_row_conhec_transp_emit.lograd
                                        , est_row_conhec_transp_emit.nro
                                        , est_row_conhec_transp_emit.compl
                                        , est_row_conhec_transp_emit.bairro
                                        , est_row_conhec_transp_emit.ibge_cidade
                                        , est_row_conhec_transp_emit.descr_cidade
                                        , est_row_conhec_transp_emit.cep
                                        , est_row_conhec_transp_emit.uf
                                        , est_row_conhec_transp_emit.cod_pais
                                        , est_row_conhec_transp_emit.descr_pais
                                        , est_row_conhec_transp_emit.fone
                                        , est_row_conhec_transp_emit.dm_ind_sn
                                        );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_emit set cnpj         = est_row_conhec_transp_emit.cnpj
                                     , ie           = est_row_conhec_transp_emit.ie
                                     , nome         = est_row_conhec_transp_emit.nome
                                     , nome_fant    = est_row_conhec_transp_emit.nome_fant
                                     , lograd       = est_row_conhec_transp_emit.lograd
                                     , nro          = est_row_conhec_transp_emit.nro
                                     , compl        = est_row_conhec_transp_emit.compl
                                     , bairro       = est_row_conhec_transp_emit.bairro
                                     , ibge_cidade  = est_row_conhec_transp_emit.ibge_cidade
                                     , descr_cidade = est_row_conhec_transp_emit.descr_cidade
                                     , cep          = est_row_conhec_transp_emit.cep
                                     , uf           = est_row_conhec_transp_emit.uf
                                     , cod_pais     = est_row_conhec_transp_emit.cod_pais
                                     , descr_pais   = est_row_conhec_transp_emit.descr_pais
                                     , fone         = est_row_conhec_transp_emit.fone
                                     , dm_ind_sn    = est_row_conhec_transp_emit.dm_ind_sn
          where id = est_row_conhec_transp_emit.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_emit fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_emit;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Observações do Contribuinte/Fiscal
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_compl_obs ( est_log_generico     in out nocopy dbms_sql.number_table
                                  , est_row_ct_compl_obs in out nocopy Ct_Compl_Obs%rowtype
                                  , en_conhectransp_id   in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vv_descr_dominio   dominio.descr%type;
   vn_conhectransp_id conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_compl_obs.conhectranspcompl_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o CT-e referente ao dados compl. para fins operacionais ou comerciais p/ registro Observ. do Contrib./Fiscal.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Tipo possui valor permitido pelo layout.
   --
   if nvl(est_row_ct_compl_obs.dm_tipo, 9) not in (0, 1) then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Observação Complementar" relativo as Observações do Contribuinte/Fiscal (' ||
                         est_row_ct_compl_obs.dm_tipo || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2.2;
   --
   vv_descr_dominio := pk_csf.fkg_dominio ( ev_dominio   => 'CT_COMPL_OBS.DM_TIPO'
                                          , ev_vl        => est_row_ct_compl_obs.dm_tipo
                                          );
   --
   vn_fase := 3;
   -- Valida se o campo está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_compl_obs.campo)) is null  then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Identificação do campo" relativo as Observações do ' || vv_descr_dominio || ' (' ||
                         est_row_ct_compl_obs.campo || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 4;
   -- Valida se o campo Conteúdo do campo está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_compl_obs.texto)) is null then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Conteúdo do campo" relativo as Observações do ' || vv_descr_dominio || ' (' ||
                         est_row_ct_compl_obs.texto || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_compl
      where id = est_row_ct_compl_obs.conhectranspcompl_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   --
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_compl_obs.campo := trim(pk_csf.fkg_converte(est_row_ct_compl_obs.campo));
   est_row_ct_compl_obs.texto := trim(pk_csf.fkg_converte(est_row_ct_compl_obs.texto));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_compl_obs.conhectranspcompl_id, 0) > 0
      and nvl(est_row_ct_compl_obs.dm_tipo, 9) in (0, 1)
      and est_row_ct_compl_obs.campo is not null
      and est_row_ct_compl_obs.texto is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctcomplobs_seq.nextval
           into est_row_ct_compl_obs.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_compl_obs ( id
                                  , conhectranspcompl_id
                                  , dm_tipo
                                  , campo
                                  , texto
                                  )
                           values ( est_row_ct_compl_obs.id
                                  , est_row_ct_compl_obs.conhectranspcompl_id
                                  , est_row_ct_compl_obs.dm_tipo
                                  , est_row_ct_compl_obs.campo
                                  , est_row_ct_compl_obs.texto
                                  );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_compl_obs set dm_tipo = est_row_ct_compl_obs.dm_tipo
                               , campo   = est_row_ct_compl_obs.campo
                               , texto   = est_row_ct_compl_obs.texto
          where id = est_row_ct_compl_obs.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_compl_obs fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_compl_obs;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas a Sigla ou código interno da Filial/Porto/Estação/Aeroporto de Passagem
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_compl_pass ( est_log_generico      in out nocopy dbms_sql.number_table
                                   , est_row_ct_compl_pass in out nocopy Ct_Compl_Pass%rowtype
                                   , en_conhectransp_id    in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_loggenerico_id   log_generico_ct.id%TYPE;
   vn_conhectransp_id  conhec_transp.id%type;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_compl_pass.conhectranspcompl_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Complemento para registro Sigla ou código interno da Filial/Porto/Estação/Aeroporto de Passagem.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Sigla ou código interno está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_compl_pass.pass)) is null then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla ou código interno" relativo a Filial/Porto/Estação/Aeroporto de Passagem (' ||
                         est_row_ct_compl_pass.pass || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   begin
     select conhectransp_id
       into vn_conhectransp_id
       from conhec_transp_compl
      where id = est_row_ct_compl_pass.conhectranspcompl_id;
   exception
     when no_data_found then
       vn_conhectransp_id := null;
   end;
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => vn_conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = vn_conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_compl_pass.pass := trim(pk_csf.fkg_converte(est_row_ct_compl_pass.pass));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_compl_pass.conhectranspcompl_id, 0) > 0
      and est_row_ct_compl_pass.pass is not null then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select ctcomplpass_seq.nextval
           into est_row_ct_compl_pass.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into ct_compl_pass ( id
                                   , conhectranspcompl_id
                                   , pass 
                                   )
                            values ( est_row_ct_compl_pass.id
                                   , est_row_ct_compl_pass.conhectranspcompl_id
                                   , est_row_ct_compl_pass.pass
                                   );
         --
      else
         --
         vn_fase := 99.7;
         --
         update ct_compl_pass set pass = est_row_ct_compl_pass.pass
          where id = est_row_ct_compl_pass.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_compl_pass fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_compl_pass;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Dados compl. do CT-e para fins operacionais ou comerciais
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp_compl ( est_log_generico            in out nocopy dbms_sql.number_table
                                         , est_row_conhec_transp_compl in out nocopy Conhec_Transp_Compl%rowtype
                                         , en_conhectransp_id          in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp_compl.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro dos Dados complementares para fins operacionais ou comerciais.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   -- Valida se o campo Tipo de data/período programado para entrega está com valor permitido pelo layout, caso ele seja informado.
   --
   if nvl(est_row_conhec_transp_compl.dm_tp_per_entr, -1) >= 0
      and est_row_conhec_transp_compl.dm_tp_per_entr not in (0, 1, 2, 3, 4) then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de data/período programado para entrega" relativo aos Dados compl. do CT-e para fins operacionais ou comerciais (' ||
                         est_row_conhec_transp_compl.dm_tp_per_entr || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   -- Valida se o campo Tipo de data/período programado para entrega está com valor permitido pelo layout, caso ele seja informado.
   --
   if nvl(est_row_conhec_transp_compl.dm_tp_hor_entr, -1) >= 0
      and est_row_conhec_transp_compl.dm_tp_hor_entr not in (0, 1, 2, 3, 4) then
      --
      vn_fase := 3.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de hora programada para entrega" relativo aos Dados compl. do CT-e para fins operacionais ou comerciais (' ||
                         est_row_conhec_transp_compl.dm_tp_hor_entr || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_conhec_transp_compl.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_conhec_transp_compl.conhectransp_id;

      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_conhec_transp_compl.carac_adic_transp := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.carac_adic_transp));
   est_row_conhec_transp_compl.carac_adic_serv   := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.carac_adic_serv));
   est_row_conhec_transp_compl.emitente          := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.emitente));
   est_row_conhec_transp_compl.orig_fluxo        := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.orig_fluxo));
   est_row_conhec_transp_compl.dest_fluxo        := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.dest_fluxo));
   est_row_conhec_transp_compl.rota_fluxo        := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.rota_fluxo));
   est_row_conhec_transp_compl.hora_prog         := trim(est_row_conhec_transp_compl.hora_prog);
   est_row_conhec_transp_compl.hora_ini          := trim(est_row_conhec_transp_compl.hora_ini);
   est_row_conhec_transp_compl.hora_fim          := trim(est_row_conhec_transp_compl.hora_fim);
   est_row_conhec_transp_compl.orig_calc_frete   := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.orig_calc_frete));
   est_row_conhec_transp_compl.dest_calc_frete   := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.dest_calc_frete));
   est_row_conhec_transp_compl.obs_geral         := trim(pk_csf.fkg_converte(est_row_conhec_transp_compl.obs_geral));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_conhec_transp_compl.conhectransp_id, 0) > 0 then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectranspcompl_seq.nextval
           into est_row_conhec_transp_compl.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_compl ( id
                                         , conhectransp_id
                                         , carac_adic_transp
                                         , carac_adic_serv
                                         , emitente
                                         , orig_fluxo
                                         , dest_fluxo
                                         , rota_fluxo
                                         , dm_tp_per_entr
                                         , dt_prog
                                         , dt_ini
                                         , dt_fim
                                         , dm_tp_hor_entr
                                         , hora_prog
                                         , hora_ini
                                         , hora_fim
                                         , orig_calc_frete
                                         , dest_calc_frete
                                         , obs_geral
                                         )
                                  values ( est_row_conhec_transp_compl.id
                                         , est_row_conhec_transp_compl.conhectransp_id
                                         , est_row_conhec_transp_compl.carac_adic_transp
                                         , est_row_conhec_transp_compl.carac_adic_serv
                                         , est_row_conhec_transp_compl.emitente
                                         , est_row_conhec_transp_compl.orig_fluxo
                                         , est_row_conhec_transp_compl.dest_fluxo
                                         , est_row_conhec_transp_compl.rota_fluxo
                                         , est_row_conhec_transp_compl.dm_tp_per_entr
                                         , est_row_conhec_transp_compl.dt_prog
                                         , est_row_conhec_transp_compl.dt_ini
                                         , est_row_conhec_transp_compl.dt_fim
                                         , est_row_conhec_transp_compl.dm_tp_hor_entr
                                         , est_row_conhec_transp_compl.hora_prog
                                         , est_row_conhec_transp_compl.hora_ini
                                         , est_row_conhec_transp_compl.hora_fim
                                         , est_row_conhec_transp_compl.orig_calc_frete
                                         , est_row_conhec_transp_compl.dest_calc_frete
                                         , est_row_conhec_transp_compl.obs_geral
                                         );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_compl set carac_adic_transp = est_row_conhec_transp_compl.carac_adic_transp
                                      , carac_adic_serv   = est_row_conhec_transp_compl.carac_adic_serv
                                      , emitente          = est_row_conhec_transp_compl.emitente
                                      , orig_fluxo        = est_row_conhec_transp_compl.orig_fluxo
                                      , dest_fluxo        = est_row_conhec_transp_compl.dest_fluxo
                                      , rota_fluxo        = est_row_conhec_transp_compl.rota_fluxo
                                      , dm_tp_per_entr    = est_row_conhec_transp_compl.dm_tp_per_entr
                                      , dt_prog           = est_row_conhec_transp_compl.dt_prog
                                      , dt_ini            = est_row_conhec_transp_compl.dt_ini
                                      , dt_fim            = est_row_conhec_transp_compl.dt_fim
                                      , dm_tp_hor_entr    = est_row_conhec_transp_compl.dm_tp_hor_entr
                                      , hora_prog         = est_row_conhec_transp_compl.hora_prog
                                      , hora_ini          = est_row_conhec_transp_compl.hora_ini
                                      , hora_fim          = est_row_conhec_transp_compl.hora_fim
                                      , orig_calc_frete   = est_row_conhec_transp_compl.orig_calc_frete
                                      , dest_calc_frete   = est_row_conhec_transp_compl.dest_calc_frete
                                      , obs_geral         = est_row_conhec_transp_compl.obs_geral
          where id = est_row_conhec_transp_compl.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp_compl fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp_compl;

-----------------------------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas ao Indicador do "papel" do tomador do serviço no CT-e, pessoa que o serviço foi prestado
-----------------------------------------------------------------------------------------------------------------------------
procedure pkb_integr_ct_tomador ( est_log_generico   in out nocopy dbms_sql.number_table
                                , est_row_ct_tomador in out nocopy Conhec_Transp_Tomador%rowtype
                                , en_conhectransp_id in            Conhec_Transp.id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if pk_csf_ct.fkg_cte_nao_integrar ( en_conhectransp_id => en_conhectransp_id ) then
      --
      goto sair_integr;
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_ct_tomador.conhectransp_id,0) = 0
      and nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 1.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro do Ind. do "papel" do tomador do serviço, pessoa que o serv. foi prestado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_SISTEMA
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   if trim(est_row_ct_tomador.cnpj) = '00000000000000' or trim(est_row_ct_tomador.cnpj) = '0' then
      est_row_ct_tomador.cnpj := null;
   end if;
   --
   vn_fase := 3;
   --
   if trim(est_row_ct_tomador.cpf) = '00000000000' or trim(est_row_ct_tomador.cpf) = '0' then
      est_row_ct_tomador.cpf := null;
   end if;
   --
   vn_fase := 4;
   -- Se o estado for EX, então limpa o CNPJ e IE
   if est_row_ct_tomador.uf = 'EX' then
      --
      est_row_ct_tomador.cnpj := '00000000000000';
      est_row_ct_tomador.cpf  := null;
      est_row_ct_tomador.ie   := null;
      --
   end if;
   --
   vn_fase := 5;
   --
   est_row_ct_tomador.ie := trim ( replace(replace(replace(replace(replace(upper(est_row_ct_tomador.ie), ' ', ''), '.', ''), '-', ''), '/', ''), ',', '') );
   --
   vn_fase := 6;
   -- Valida se o o tamanho do campo CNPJ caso ele seja informado.
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.cnpj)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ct_tomador.cnpj))), 0) <> 14 then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do tomador do serviço no Conhec. Transp.(' ||
                         est_row_ct_tomador.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.cnpj)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_ct_tomador.cnpj), 0) = 0 then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CNPJ" do tomador do serviço no Conhec. Transp.(' ||
                         est_row_ct_tomador.cnpj || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   -- Valida se o campo CPF.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.cpf)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ct_tomador.cpf))), 0) <> 11 then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do tomador do serviço no Conhec. Transp.(' ||
                         est_row_ct_tomador.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.cpf)) is not null
      and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => est_row_ct_tomador.cpf), 0) = 0 then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do CPF" do tomador do serviço no Conhec. Transp.(' ||
                         est_row_ct_tomador.cpf || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   -- Valida se o campo Inscrição Estadual.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.ie)) is not null
      and nvl(length(trim(pk_csf.fkg_converte(est_row_ct_tomador.ie))), 0) not between 2 and 14 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.ie)) is not null
      and trim(est_row_ct_tomador.uf) is not null
      and nvl(pk_valida_docto.fkg_valida_ie( ev_inscr_est => est_row_ct_tomador.ie
                                           , ev_estado    => est_row_ct_tomador.uf ), 0) = 0 then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Inscrição Estadual" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.ie || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   -- Válida se a inscrição estadual de produtor de Minas Gerais
   if trim(est_row_ct_tomador.ie) is not null and est_row_ct_tomador.uf = 'MG' then
      --
      -- PR9999 a PR99999999 para destinatários produtores rurais de MG.
      vn_fase := 12.1;

      if upper(substr(trim(est_row_ct_tomador.ie), 1, 2)) = 'PR'
         and to_number(substr(trim(est_row_ct_tomador.ie), 3, 12)) not between 9999 and 99999999 then
         --
         gv_mensagem_log := '"Inscrição estadual de produtor para Minas Gerais do destinatário da Nota Fiscal"('
                            || trim(est_row_ct_tomador.ie) || ') está inválida.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;

   end if;
   --
   vn_fase := 13;
   --
   if trim(est_row_ct_tomador.ie) like 'ISENT%' then
      --
      est_row_ct_tomador.ie := 'ISENTO';
      --
   end if;
   --
   vn_fase := 14;
   -- Valida se o campo Razão Social ou Nome está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.nome)) is null then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Razão Social ou Nome" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.nome || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15;
   -- Valida se o campo Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.lograd)) is null then
      --
      vn_fase := 15.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Logradouro" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.lograd || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 16;
   -- Valida se o campo Número do Logradouro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.nro)) is null then
      --
      vn_fase := 16.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Logradouro" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.nro || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 17;
   -- Valida se o campo Bairro está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.bairro)) is null then
      --
      vn_fase := 17.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Bairro" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.bairro || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 18;
   --
   -- Se o campo UF = 'EX' atribui Exterior para cidade
   if est_row_ct_tomador.uf = 'EX' then
      --
      est_row_ct_tomador.descr_cidade := 'EXTERIOR';
      est_row_ct_tomador.ibge_cidade  := 9999999;
      --
   end if;
   --
   vn_fase := 19;
   -- Valida se o campo Código do município.
   if est_row_ct_tomador.ibge_cidade <> 9999999 then
      --
      vn_fase := 19.1;
      --
      if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade  => est_row_ct_tomador.ibge_cidade ) = False then
         --
         vn_fase := 19.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O "Código do município" do tomador do serviço no Conhec. Transp. (' ||
                            est_row_ct_tomador.ibge_cidade || ') está inválido.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 19.3;
      -- Valida se o campo Código do município está nulo.
      --
      if nvl(est_row_ct_tomador.ibge_cidade, -1) < 0 then
         --
         vn_fase := 19.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O "Código do município" do tomador do serviço no Conhec. Transp. (' ||
                            est_row_ct_tomador.ibge_cidade || ') é obritagório.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 19.5;
      -- Valida se o campo Descrição do município está nulo.
      --
      if trim(pk_csf.fkg_converte(est_row_ct_tomador.descr_cidade)) is null then
         --
         vn_fase := 19.6;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O "Nome do município" do tomador do serviço no Conhec. Transp. (' ||
                            est_row_ct_tomador.descr_cidade || ') está inválido.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 19.7;
      -- Valida se o IBGE da cidade pertence a sigla da UF
      if pk_csf.fkg_ibge_cidade_por_sigla_uf ( en_ibge_cidade   => est_row_ct_tomador.ibge_cidade
                                             , ev_sigla_estado  => est_row_ct_tomador.uf
                                             ) = false then
         --
         vn_fase := 19.8;
         --
         gv_mensagem_log := '"Código IBGE da cidade do destinatário da Nota Fiscal" (' ||
                            est_row_ct_tomador.ibge_cidade || ') não pertence a sigla do estado (' || est_row_ct_tomador.uf || ')';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
   vn_fase := 20;
   -- Valida se o campo Sigla da UF está nulo.
   --
   if trim(pk_csf.fkg_converte(est_row_ct_tomador.uf)) is null then
      --
      vn_fase := 20.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.uf || ') é obrigatória.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 21;
   -- Valida se o campo Sigla da UF existe.
   --
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => est_row_ct_tomador.uf ) = False then
      --
      vn_fase := 21.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.uf || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 22;
   -- Valida se o campo Código do País existe caso ele seja informado.
   -- Se o código do país for nulo, atribui 1058-Brasil
   if nvl(est_row_ct_tomador.cod_pais,0) <= 0 then
      --
      est_row_ct_tomador.cod_pais := 1058;
      --
   end if;
   --
   vn_fase := 23;
   --
   if est_row_ct_tomador.cod_pais = 1058 
      and est_row_ct_tomador.uf = 'EX' then
      --
      gv_mensagem_log := '"Código do país do destinatário do Tomador 1058 - Brasil" e sigla do estado está inválida (' ||
                         est_row_ct_tomador.uf || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 24;
   --
   if est_row_ct_tomador.cod_pais >= 0
      and pk_csf.fkg_codpais_siscomex_valido ( en_cod_siscomex  => est_row_ct_tomador.cod_pais ) = False then
      --
      vn_fase := 24.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do País" do tomador do serviço no Conhec. Transp. (' ||
                         est_row_ct_tomador.cod_pais || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 25;
   --
   if trim( pk_csf.fkg_converte ( est_row_ct_tomador.descr_pais ) ) is null then
      --
      est_row_ct_tomador.descr_pais := 'Brasil';
      --
   end if;
   --
   vn_fase := 26;
   --
   est_row_ct_tomador.email := trim( pk_csf.fkg_limpa_acento ( ev_string => est_row_ct_tomador.email ) );
   --
   vn_fase := 27;
   -- procedimento de criação de e-mail do Conhec. Transp.
   pkb_integr_ct_email ( en_conhectransp_id   => est_row_ct_tomador.conhectransp_id
                       , en_dm_origem         => 4 -- Outros
                       , ev_email             => est_row_ct_tomador.email
                       , en_dm_tipo_anexo     => 3 --DACTE/XML
                       );
   --
   vn_fase := 99;
   --
   -- Se não foi encontrado erro e o Tipo de Integração é 1 (Válida e insere)
   -- então realiza a condição de inserir o imposto
   if nvl(est_log_generico.count,0) > 0 and 
      fkg_ver_erro_log_generico_ct( en_conhec_transp_id => est_row_ct_tomador.conhectransp_id ) = 1 then
      --
      vn_fase := 99.1;
      --
      update conhec_transp set dm_st_proc = 10
       where id = est_row_ct_tomador.conhectransp_id;
      --
   end if;
   --
   vn_fase := 99.2;
   --
   est_row_ct_tomador.cnpj          := trim(pk_csf.fkg_converte(est_row_ct_tomador.cnpj));
   est_row_ct_tomador.cpf           := trim(pk_csf.fkg_converte(est_row_ct_tomador.cpf));
   est_row_ct_tomador.nome          := trim(pk_csf.fkg_converte(est_row_ct_tomador.nome));
   est_row_ct_tomador.nome_fant     := trim(pk_csf.fkg_converte(est_row_ct_tomador.nome_fant));
   est_row_ct_tomador.lograd        := trim(pk_csf.fkg_converte(est_row_ct_tomador.lograd));
   est_row_ct_tomador.nro           := trim(pk_csf.fkg_converte(est_row_ct_tomador.nro));
   est_row_ct_tomador.compl         := trim(pk_csf.fkg_converte(est_row_ct_tomador.compl));
   est_row_ct_tomador.bairro        := trim(pk_csf.fkg_converte(est_row_ct_tomador.bairro));
   est_row_ct_tomador.descr_cidade  := trim(pk_csf.fkg_converte(est_row_ct_tomador.descr_cidade));
   est_row_ct_tomador.cep           := lpad(trim(pk_csf.fkg_converte(est_row_ct_tomador.cep)), 8, '0');
   est_row_ct_tomador.uf            := trim(pk_csf.fkg_converte(est_row_ct_tomador.uf));
   est_row_ct_tomador.descr_pais    := trim(pk_csf.fkg_converte(est_row_ct_tomador.descr_pais));
   --
   vn_fase := 99.3;
   --
   if nvl(est_row_ct_tomador.conhectransp_id, 0) > 0
      and est_row_ct_tomador.nome is not null
      and est_row_ct_tomador.lograd is not null
      and est_row_ct_tomador.nro is not null
      and est_row_ct_tomador.bairro is not null
      and nvl(est_row_ct_tomador.ibge_cidade, -1) > 0
      and est_row_ct_tomador.descr_cidade is not null
      and est_row_ct_tomador.uf is not null
      then
      --
      vn_fase := 99.4;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.5;
         --
         select conhectransptomador_seq.nextval
           into est_row_ct_tomador.id
           from dual;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp_tomador ( id
                                           , conhectransp_id
                                           , cnpj
                                           , cpf
                                           , ie
                                           , nome
                                           , nome_fant
                                           , fone
                                           , lograd
                                           , nro
                                           , compl
                                           , bairro
                                           , ibge_cidade
                                           , descr_cidade
                                           , cep
                                           , uf
                                           , cod_pais
                                           , descr_pais
                                           , email
                                           )
                                    values ( est_row_ct_tomador.id
                                           , est_row_ct_tomador.conhectransp_id
                                           , est_row_ct_tomador.cnpj
                                           , est_row_ct_tomador.cpf
                                           , est_row_ct_tomador.ie
                                           , est_row_ct_tomador.nome
                                           , est_row_ct_tomador.nome_fant
                                           , est_row_ct_tomador.fone
                                           , est_row_ct_tomador.lograd
                                           , est_row_ct_tomador.nro
                                           , est_row_ct_tomador.compl
                                           , est_row_ct_tomador.bairro
                                           , est_row_ct_tomador.ibge_cidade
                                           , est_row_ct_tomador.descr_cidade
                                           , est_row_ct_tomador.cep
                                           , est_row_ct_tomador.uf
                                           , est_row_ct_tomador.cod_pais
                                           , est_row_ct_tomador.descr_pais
                                           , est_row_ct_tomador.email
                                           );
         --
      else
         --
         vn_fase := 99.7;
         --
         update conhec_transp_tomador set cnpj         = est_row_ct_tomador.cnpj
                                        , cpf          = est_row_ct_tomador.cpf
                                        , ie           = est_row_ct_tomador.ie
                                        , nome         = est_row_ct_tomador.nome
                                        , nome_fant    = est_row_ct_tomador.nome_fant
                                        , fone         = est_row_ct_tomador.fone
                                        , lograd       = est_row_ct_tomador.lograd
                                        , nro          = est_row_ct_tomador.nro
                                        , compl        = est_row_ct_tomador.compl
                                        , bairro       = est_row_ct_tomador.bairro
                                        , ibge_cidade  = est_row_ct_tomador.ibge_cidade
                                        , descr_cidade = est_row_ct_tomador.descr_cidade
                                        , cep          = est_row_ct_tomador.cep
                                        , uf           = est_row_ct_tomador.uf
                                        , cod_pais     = est_row_ct_tomador.cod_pais
                                        , descr_pais   = est_row_ct_tomador.descr_pais
                                        , email        = est_row_ct_tomador.email
          where id = est_row_ct_tomador.id;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ct_tomador fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ct_tomador;

-------------------------------------------------------------------------------------------------------
-- Integra as Informações relativas aos Dados compl. do CT-e para fins operacionais ou comerciais
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_conhec_transp ( est_log_generico           in out nocopy dbms_sql.number_table
                                   , est_row_conhec_transp      in out nocopy Conhec_Transp%rowtype
                                   , ev_cod_mod                 in            Mod_Fiscal.cod_mod%TYPE
                                   , ev_cod_matriz              in            Empresa.cod_matriz%TYPE  default null
                                   , ev_cod_filial              in            Empresa.cod_filial%TYPE  default null
                                   , ev_empresa_cpf_cnpj        in            varchar2                 default null -- CPF/CNPJ da empresa
                                   , ev_cod_part                in            Pessoa.cod_part%TYPE     default null
                                   , ev_cd_sitdocto             in            Sit_Docto.cd%TYPE        default null
                                   , ev_cod_infor               in            Infor_Comp_Dcto_Fiscal.cod_infor%TYPE default null
                                   , ev_sist_orig               in            sist_orig.sigla%type     default null
                                   , ev_cod_unid_org            in            unid_org.cd%type         default null
                                   , en_multorg_id              in            mult_org.id%type
                                   , en_empresaintegrbanco_id   in            empresa_integr_banco.id%type default null
                                   , en_loteintws_id            in            lote_int_ws.id%type default 0
                                   )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_qtde_ct         number := 0;
   vn_qtde_erro_chave number := null;
   vv_cnpj_cpf        varchar2(14);
   vv_insc_estadual   varchar2(14);
   vv_sigla_estado    varchar2(2);
   vn_dm_st_proc      Conhec_Transp.dm_st_proc%TYPE := null;
   vn_dm_legado       Conhec_Transp.dm_legado%TYPE  := null;
   vn_valida          number(1);
   --
begin
   --
   gv_obj_referencia := 'CONHEC_TRANSP';
   --
   vn_fase := 1;
   --
   -- Monta cabeçalho do Log Genérico
   gv_cabec_log := null;
   --
   if nvl(est_row_conhec_transp.empresa_id,0) <= 0 then
      --
      est_row_conhec_transp.empresa_id := pk_csf.fkg_empresa_id2 ( en_multorg_id        => en_multorg_id
                                                                 , ev_cod_matriz        => ev_cod_matriz
                                                                 , ev_cod_filial        => ev_cod_filial
                                                                 , ev_empresa_cpf_cnpj  => ev_empresa_cpf_cnpj );
      --
   end if;
   --
   vn_fase := 1.1;
   --
   if nvl(est_row_conhec_transp.empresa_id,0) > 0 or
      (ev_cod_matriz is not null and ev_cod_filial is not null) then
      --
      vn_fase := 1.2;
      --
      gv_cabec_log := 'Empresa: ' || pk_csf.fkg_nome_empresa ( en_empresa_id => est_row_conhec_transp.empresa_id );
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.3;
   --
   if nvl(est_row_conhec_transp.nro_ct,0) > 0 then
      --
      gv_cabec_log := gv_cabec_log || 'Número: ' || est_row_conhec_transp.nro_ct;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.4;
   --
   if est_row_conhec_transp.serie is not null then
      --
      gv_cabec_log := gv_cabec_log || 'Série: ' || est_row_conhec_transp.serie;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.5;
   --
   if trim ( ev_cod_mod ) is not null then
      --
      gv_cabec_log := gv_cabec_log || 'Modelo: ' || ev_cod_mod;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.6;
   --
   if est_row_conhec_transp.dt_hr_emissao is not null then
      --
      gv_cabec_log := gv_cabec_log || 'Data de emissão: ' || to_char(est_row_conhec_transp.dt_hr_emissao, 'dd/mm/yyyy');
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   gv_cabec_log := gv_cabec_log || 'Operação: ' || pk_csf.fkg_dominio ( ev_dominio   => 'CONHEC_TRANSP.DM_IND_OPER'
                                                                      , ev_vl        => est_row_conhec_transp.dm_ind_oper );
   --
   gv_cabec_log := gv_cabec_log || chr(10);
   --
   --
   gv_cabec_log := gv_cabec_log || 'Indicador do Emitente: ' || pk_csf.fkg_dominio ( ev_dominio   => 'CONHEC_TRANSP.DM_IND_EMIT'
                                                                                   , ev_vl        => est_row_conhec_transp.dm_ind_emit );
   --
   gv_cabec_log := gv_cabec_log||chr(10);
   --
   if nvl(en_loteintws_id,0) > 0 then
      --
      gv_cabec_log := gv_cabec_log || 'Lote WS: ' || en_loteintws_id;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   -- Atribui a empresa para registro no log
   gn_empresa_id := est_row_conhec_transp.empresa_id;
   --
   -- Atribui o CT-e na variável Global
   gt_row_conhec_transp := est_row_conhec_transp;
   --
   vn_fase := 1.7;
   --
   -- Verifica se o CT-e já existe no sistema
   if nvl(est_row_conhec_transp.id,0) <= 0 then
      --
      vn_fase := 1.71;
      --
      est_row_conhec_transp.id := pk_csf_ct.fkg_busca_conhectransp_id ( en_empresa_id       => est_row_conhec_transp.empresa_id
                                                                      , ev_cod_part         => ev_cod_part
                                                                      , ev_cod_mod          => ev_cod_mod
                                                                      , ev_serie            => est_row_conhec_transp.serie
                                                                      , ev_subserie         => est_row_conhec_transp.subserie
                                                                      , en_nro_ct           => est_row_conhec_transp.nro_ct
                                                                      , en_dm_ind_oper      => est_row_conhec_transp.dm_ind_oper
                                                                      , en_dm_ind_emit      => est_row_conhec_transp.dm_ind_emit
                                                                      , en_dm_arm_cte_terc  => est_row_conhec_transp.dm_arm_cte_terc
                                                                      );
      --
   else
      --
      vn_fase := 1.8;
      -- verifica se existe mais de um conhecimento de transporte para empresa, modelo, série, nro, operação, emitente e participante
      begin
         --
         select count(1)
           into vn_qtde_ct
           from Conhec_Transp ct
              , Mod_Fiscal    mf
          where ct.empresa_id      = est_row_conhec_transp.empresa_id
            and mf.id              = ct.modfiscal_id
            and mf.cod_mod         = trim(ev_cod_mod)
            and ct.dm_ind_oper     = nvl(est_row_conhec_transp.dm_ind_oper, ct.dm_ind_oper)
            and ct.serie           = trim(est_row_conhec_transp.serie)
            and ct.nro_ct          = est_row_conhec_transp.nro_ct
            and ct.dm_ind_emit     = est_row_conhec_transp.dm_ind_emit
            and ct.dm_arm_cte_terc = nvl(est_row_conhec_transp.dm_arm_cte_terc,0);
         --
      exception
         --
         when others then
            vn_qtde_ct := 0;
         --
      end;
      --
      vn_fase := 1.81;
      --
      if nvl(vn_qtde_ct,0) >= 1 and nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 1.82;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Conhec. Transp. já foi integrado.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => INFORMACAO
                             , en_referencia_id   => est_row_conhec_transp.id
                             , ev_obj_referencia  => gv_obj_referencia
                             );
         --
      end if;
      --
   end if;
   --
   vn_fase := 1.9;
   -- Se o ct não existe, já atribui o ID
   if nvl(est_row_conhec_transp.id,0) <= 0 then
      --
      select conhectransp_seq.nextval
        into est_row_conhec_transp.id
        from dual;
      --
   end if;
   --
   vn_fase := 1.91;
   --| Seta o ID de referencia do Conhecimento de Transporte
   pkb_seta_referencia_id ( en_id => est_row_conhec_transp.id );
   --
   vn_fase := 1.10;
   -- remove os logs anteriores
   delete from log_generico_ct
    where referencia_id = est_row_conhec_transp.id
      and obj_referencia = 'CONHEC_TRANSP';
   --
   --| Válida a informação da empresa
   vn_fase := 2;
   --
   -- Válida se a empresa é válida
   if pk_csf.fkg_empresa_id_valido ( en_empresa_id => est_row_conhec_transp.empresa_id ) = false then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Empresa" (' || est_row_conhec_transp.empresa_id || ') está incorreta.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   ---- Busca a situação do conhecimento de transporte.
   --vn_dm_st_proc := pk_csf_ct.fkg_st_proc_ct ( en_conhectransp_id => est_row_conhec_transp.id );
   --vn_dm_legado  := pk_csf_ct.fkg_legado_ct ( en_conhectransp_id => est_row_conhec_transp.id );
   -- Busca a situação e legado do conhecimento de transporte, caso estejam nulos.
   if est_row_conhec_transp.dm_st_proc is null then
      vn_dm_st_proc := pk_csf_ct.fkg_st_proc_ct ( en_conhectransp_id => est_row_conhec_transp.id );
   else
      vn_dm_st_proc := est_row_conhec_transp.dm_st_proc;
   end if;
   --
   if est_row_conhec_transp.dm_legado is null then
      vn_dm_legado := pk_csf_ct.fkg_legado_ct ( en_conhectransp_id => est_row_conhec_transp.id );
   else
      vn_dm_legado := est_row_conhec_transp.dm_legado;
   end if;
   --
   vn_fase := 3.1;
   -- Verifica se o conhecimento de transp. está inutilizado
   if pk_csf_ct.fkg_ct_inutiliza ( en_empresa_id  => est_row_conhec_transp.empresa_id
                                 , ev_cod_mod     => ev_cod_mod
                                 , en_serie       => est_row_conhec_transp.serie
                                 , en_nro_ct      => est_row_conhec_transp.nro_ct
                                 ) = 1 then
      --
      vn_fase := 3.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Conhec. Transp. está inutilizado no sistema.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
   --
   -- Verificação de CTE Emissão Própria
   -- ==================================
   --
   -- Tratativa para dm_legado => 0-Não é Legado
   elsif vn_dm_st_proc                     in ( 1, 2, 3, 4, 6, 7, 8, 14 ) and
         vn_dm_legado                      =  0                           and   -- 0 - Não é Legado
         est_row_conhec_transp.dm_ind_emit =  0                           and
         ev_cod_mod                        in ('57', '67')                then  --Atualização CTe 3.0
      --
      vn_fase := 3.3;
      --
      gv_mensagem_log := null;
      --
      gv_dominio := null;
      --
      gv_dominio := pk_csf.fkg_dominio ( ev_dominio   => 'CONHEC_TRANSP.DM_ST_PROC'
                                       , ev_vl        => vn_dm_st_proc );
      --
      gv_mensagem_log := 'Conhec. Transp. está com a situação ' || gv_dominio || ' não pode ser integrado novamente.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Sai do processo
      goto sair_integr;
      --
   -- Tratativa para dm_legado => 1-Legado Autorizado (Aprovada: DM_ST_PROC = 4 DM_LEGADO = 1)
   elsif vn_dm_st_proc                     =  4              and  -- 4-Autorizada
         vn_dm_legado                      not in (1)        and  -- 1-Legado Autorizado
         est_row_conhec_transp.dm_ind_emit =  0              and  -- Emissão Própria
         ev_cod_mod                        in ('57', '67')  then  -- Atualização CTe 3.0
      --
      vn_fase := 3.4;
      --
      gv_mensagem_log := null;
      --
      gv_dominio := null;
      --
      gv_dominio := pk_csf.fkg_dominio ( ev_dominio   => 'CONHEC_TRANSP.DM_ST_PROC'
                                       , ev_vl        => vn_dm_st_proc );
      --
      gv_mensagem_log := 'Conhec. Transp. de emissão própria, com situação '|| gv_dominio ||', só pode ser integrada como "Legado Autorizado".';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Sai do processo
      goto sair_integr;
      --
   -- Tratativa para dm_legado => 2-Legado Denegado (Denegada: DM_ST_PROC = 6 DM_LEGADO = 2)
   elsif vn_dm_st_proc                     =  6              and  -- 6-Denegada
         vn_dm_legado                      not in (2)        and  -- 2-Legado Denegado
         est_row_conhec_transp.dm_ind_emit =  0              and  -- Emissão Própria
         ev_cod_mod                        in ('57', '67')  then  -- Atualização CTe 3.0
      --
      vn_fase := 3.5;
      --
      gv_mensagem_log := null;
      --
      gv_dominio := null;
      --
      gv_dominio := pk_csf.fkg_dominio ( ev_dominio   => 'CONHEC_TRANSP.DM_ST_PROC'
                                       , ev_vl        => vn_dm_st_proc );
      --
      gv_mensagem_log := 'Conhec. Transp. de emissão própria, com situação '|| gv_dominio ||', só pode ser integrada como "Legado Denegado".';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Sai do processo
      goto sair_integr;
      --
   -- Tratativa para dm_legado => 3-Legado Cancelado (Cancelada: DM_ST_PROC = 7 DM_LEGADO = 3)
   elsif vn_dm_st_proc                     =  7              and  -- 7-Cancelada
         vn_dm_legado                      not in (3)        and  -- 3-Legado Cancelado
         est_row_conhec_transp.dm_ind_emit =  0              and  -- Emissão Própria
         ev_cod_mod                        in ('57', '67')  then  -- Atualização CTe 3.0
      --
      vn_fase := 3.6;
      --
      gv_mensagem_log := null;
      --
      gv_dominio := null;
      --
      gv_dominio := pk_csf.fkg_dominio ( ev_dominio   => 'CONHEC_TRANSP.DM_ST_PROC'
                                       , ev_vl        => vn_dm_st_proc );
      --
      gv_mensagem_log := 'Conhec. Transp. de emissão própria, com situação '|| gv_dominio ||', só pode ser integrada como "Legado Cancelado".';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Sai do processo
      goto sair_integr;
      --
   -- Tratativa para dm_legado => 4-Legado Inutilizado (Inutilizada DM_ST_PROC = 8 DM_LEGADO = 4)
   elsif vn_dm_st_proc                     =  8              and  -- 8-Inutilizada
         vn_dm_legado                      not in (4)        and  -- 4-Legado Inutilizado
         est_row_conhec_transp.dm_ind_emit =  0              and  -- Emissão Própria
         ev_cod_mod                        in ('57', '67')  then  -- Atualização CTe 3.0
      --
      vn_fase := 3.7;
      --
      gv_mensagem_log := null;
      --
      gv_dominio := null;
      --
      gv_dominio := pk_csf.fkg_dominio ( ev_dominio   => 'CONHEC_TRANSP.DM_ST_PROC'
                                       , ev_vl        => vn_dm_st_proc );
      --
      gv_mensagem_log := 'Conhec. Transp. de emissão própria, com situação '|| gv_dominio ||', só pode ser integrada como "Legado Inutilizado".';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Sai do processo
      goto sair_integr;
      --
   else
      --
      vn_fase := 3.8;
      --
      -- Se o Tipo de Integração é 1 (válida e insere)
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 3.9;
         --
         pkb_excluir_dados_ct ( en_conhectransp_id => est_row_conhec_transp.id );
         --
      end if;
      --
   end if;
   --
   --| Valida informação do participante
   --
   vn_fase := 4;
   --
   -- Se passou valor no ev_cod_part, busca a pessoa
   if trim ( ev_cod_part ) is not null then
      --
      vn_fase := 4.1;
      --
      est_row_conhec_transp.pessoa_id := pk_csf.fkg_pessoa_id_cod_part ( en_multorg_id => en_multorg_id
                                                                       , ev_cod_part   => ev_cod_part );
      --
   end if;
   --
   vn_fase := 5;
   --
   -- Valida a informação da pessoa
   if nvl(est_row_conhec_transp.pessoa_id,0) > 0 then
      --
      vn_fase := 5.1;
      --
      if pk_csf.fkg_Pessoa_id_valido ( en_pessoa_id => est_row_conhec_transp.pessoa_id ) = false then
         --
         vn_fase := 5.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := '"Código do Participante" (' || est_row_conhec_transp.pessoa_id || ') está incorreto.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 5.3;
      --
      -- Busca o CNPJ ou CPF, Inscrição Estadual e UF do Participante
      vv_cnpj_cpf      := pk_csf.fkg_cnpjcpf_pessoa_id ( en_pessoa_id => est_row_conhec_transp.pessoa_id );
      vv_insc_estadual := pk_csf.fkg_ie_pessoa_id ( en_pessoa_id => est_row_conhec_transp.pessoa_id );
      vv_sigla_estado  := pk_csf.fkg_siglaestado_pessoaid ( en_pessoa_id => est_row_conhec_transp.pessoa_id );
      --
      -- Valida CNPJ ou CPF
      if trim(vv_cnpj_cpf) is not null
         and nvl(pk_valida_docto.fkg_valida_cpf_cgc(ev_numero => vv_cnpj_cpf), 0) = 0 then
         --
         vn_fase := 5.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O "CPF ou CNPJ do Participante" está inválido (' || vv_cnpj_cpf || ').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
        --
        -- Armazena o "loggenerico_id" na memória
        pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                               , est_log_generico  => est_log_generico );
      --
      end if;
      --
      vn_fase := 5.5;
      --
      -- Valida Inscrição Estadual
      if trim(vv_insc_estadual) is not null
         and trim(vv_sigla_estado) is not null
         and nvl(pk_valida_docto.fkg_valida_ie( ev_inscr_est => vv_insc_estadual
                                              , ev_estado    => vv_sigla_estado ), 0) = 0 then
         --
         vn_fase := 5.6;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A "Inscrição Estadual do Participante" está inválida (' || vv_insc_estadual || ').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
        --
        -- Armazena o "loggenerico_id" na memória
        pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                               , est_log_generico  => est_log_generico );
      --
      end if;
      --
   end if;
   --
   --| Válida informação da situação do documento
   --
   vn_fase := 6;
   --
   if trim(ev_cd_sitdocto) is not null then
      --
      est_row_conhec_transp.sitdocto_id    := pk_csf.fkg_Sit_Docto_id ( ev_cd => ev_cd_sitdocto );
      --
   else
      --
      est_row_conhec_transp.sitdocto_id    := pk_csf.fkg_Sit_Docto_id ( ev_cd => '00' );
      --
   end if;
   --
   vn_fase := 6.1;
   --
   -- Valida se indicador da forma de pagamento está correto
   if est_row_conhec_transp.dm_for_pag not in (0, 1, 2) then
      --
      vn_fase := 6.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Forma de pagamento do Serviço" (' || est_row_conhec_transp.dm_for_pag || ') está incorreta.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
    --| Válida informação do código do IBGE do Estado do Emitente
   --
   vn_fase := 7;
   -- Válida o código IBGE do UF
   if pk_csf.fkg_ibge_uf_valida ( ev_ibge_estado => to_char(est_row_conhec_transp.uf_ibge_emit) ) = false and
      nvl(gn_dm_ind_emit,0)                                                                          = 0     and  -- emissao
      nvl(est_row_conhec_transp.dm_legado,0)                                                      = 0     then -- nao legado
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Código da UF do emitente do Documento Fiscal" ('
                         || est_row_conhec_transp.uf_ibge_emit || ') não informado ou inválido!';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
   --
   end if;
   --
   vn_fase := 8;
   -- Se o campo UF = 'EX' atribui Exterior para cidade
   if est_row_conhec_transp.uf_ibge_emit = '99' then
      --
      vn_fase := 8.1;
      --
      est_row_conhec_transp.descr_cidade_emit  := 'EXTERIOR';
      est_row_conhec_transp.ibge_cidade_emit   := 9999999;
      --
   end if;
   --
   vn_fase := 9;
   --
   if pk_csf.fkg_uf_ibge_igual_empresa ( en_empresa_id   => est_row_conhec_transp.empresa_id
                                       , ev_ibge_estado  => to_char(est_row_conhec_transp.uf_ibge_emit) ) = false and
      nvl(gn_dm_ind_emit,0)                                                                                  = 0     and  -- emissao
      nvl(est_row_conhec_transp.dm_legado,0)                                                              = 0     then -- nao legado
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Erro de integração: "Código da UF do emitente do Conhec. Transp." (' || est_row_conhec_transp.uf_ibge_emit
                         || ') não é a mesma da empresa/unidade organizacional.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 10;
   --
   -- Válida informação do campo cfop
   est_row_conhec_transp.cfop_id := pk_csf.fkg_cfop_id ( en_cd => est_row_conhec_transp.cfop );
   --
   vn_fase := 11;
   --
   if nvl(est_row_conhec_transp.cfop_id,0) = 0 then
      --
      vn_fase := 11.1;
      --
      est_row_conhec_transp.cfop_id := 1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"CFOP do Conhec. Transp." (' || est_row_conhec_transp.cfop || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --| Válida informação do campo nat_oper
   --
   vn_fase := 12;
   --
   if trim(pk_csf.fkg_converte(est_row_conhec_transp.nat_oper)) is null then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Descrição da Natureza da Operação" (' || est_row_conhec_transp.nat_oper || ') não foi informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --| Válida informação do campo modfical_id
   vn_fase := 13;
   --
   est_row_conhec_transp.modfiscal_id   := pk_csf.fkg_Mod_Fiscal_id (ev_cod_mod => trim (ev_cod_mod));
   --
   vn_fase := 14;
   --
   -- Válida a informação do modelo fiscal
   if nvl(est_row_conhec_transp.modfiscal_id,0) <= 0 then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Modelo do documento fiscal" (' || ev_cod_mod || ') está incorreto.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15;
   --
   -- valida se a série da NFe é numérica
   if est_row_conhec_transp.serie is not null
      and ev_cod_mod in ('57', '67')  --Atualização CTe 3.0
      and pk_csf.fkg_is_numerico ( ev_valor => est_row_conhec_transp.serie ) = false then
      --
      vn_fase := 15.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Série do CTe (' || est_row_conhec_transp.serie || ') deve ser do tipo numérica.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 16;
   --
   -- Válida a se o nro_cf está nulo ou negativo.
   if nvl(est_row_conhec_transp.nro_ct, -1) <= 0 then
      --
      vn_fase := 16.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Conhec. Transp." (' || est_row_conhec_transp.nro_ct || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 17;
   --
   -- Válida a se o Data de Emissão está nulo ou negativo.
   if est_row_conhec_transp.dt_hr_emissao is null then
      --
      vn_fase := 17.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" do Conhec. Transp. não informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 18;
   --
   if est_row_conhec_transp.dt_hr_emissao > sysdate then
      --
      vn_fase := 18.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Data de Emissão" do Conhec. Transp. (' || est_row_conhec_transp.dt_hr_emissao || ') não pode ser maior que a data atual.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   -- Válida informação do campo dm_tp_imp
   vn_fase := 19;
   --
   -- Função retorna o tipo de Impressão parâmetrizado para a empresa
   est_row_conhec_transp.dm_tp_imp := pk_csf.fkg_tp_impr_empresa ( en_empresa_id => est_row_conhec_transp.empresa_id );
   --
   vn_fase := 20;
   --
   -- Formato de Impressão do DACTE
   if est_row_conhec_transp.dm_tp_imp not in (1, 2) then
      --
      vn_fase := 20.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Formato de impressão do DACTE" (' || est_row_conhec_transp.dm_tp_imp || ') está incorreta.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 21;
   ---- Busca a forma de emissão habilitada para a Empresa
   --est_row_conhec_transp.dm_forma_emiss := pk_csf.fkg_forma_emiss_empresa ( en_empresa_id => est_row_conhec_transp.empresa_id );
   --| Válida informação do campo dm_forma_emiss
   if est_row_conhec_transp.dm_legado <> 0 then
      -- Busca da chave do CTE
      est_row_conhec_transp.dm_forma_emiss := trim( substr(est_row_conhec_transp.nro_chave_cte, 35, 1) );
      --
      if est_row_conhec_transp.dm_forma_emiss is null then -- não foi enviado chave de cte
         est_row_conhec_transp.dm_forma_emiss := 1; -- Atribui Normal para poder inserir o CTe
      end if;
   end if;
   --
   if est_row_conhec_transp.dm_forma_emiss is null then
      -- Busca a forma de emissão habilitada para a Empresa
      est_row_conhec_transp.dm_forma_emiss := pk_csf.fkg_forma_emiss_empresa ( en_empresa_id => est_row_conhec_transp.empresa_id );
   end if;
   --
   vn_fase := 22;
   -- Válida a Forma de Emissão do Conhecimento de Transposte
   if est_row_conhec_transp.dm_forma_emiss not in (1, 5, 7, 8) then
      --
      est_row_conhec_transp.dm_forma_emiss := 1; -- Atribui Normal para poder inserir o CTe
      --
      vn_fase := 22.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Forma de emissão do CT-e" (' || est_row_conhec_transp.dm_forma_emiss || ') está incorreta.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 23;
   --
   if est_row_conhec_transp.dm_forma_emiss in (5, 7, 8) then
      --
      est_row_conhec_transp.DT_CONT := sysdate;
      est_row_conhec_transp.JUST_CONT := 'Sem comunicacao de internet com a sefaz';
      --
   end if;
   --
   -- valida a chave de acesso de Ct-e de emissão própria
   --
   vn_fase := 24;
   --
   -- Verifica se o campo é validado para o tipo de conhecimento de transporte
   vn_valida := pk_csf_ct.fkg_ret_valid_integr ( en_conhectransp_id => null
                                               , en_dm_ind_emit     => est_row_conhec_transp.dm_ind_emit
                                               , en_dm_legado       => est_row_conhec_transp.dm_legado
                                               , en_dm_forma_emiss  => est_row_conhec_transp.dm_forma_emiss
                                               , ev_campo           => 'NRO_CHAVE_CTE' );
   --
   if nvl(vn_valida,0) in (0,1) then
      --
      -- Verifica se a chave foi informada pelo ERP
      if trim(est_row_conhec_transp.nro_chave_cte) is not null then
         --
         -- Valida se a informação da Chave está correta
         --
         vn_fase := 24.1;
         --
         -- Se a Chave de Acesso já existe para o Conhecimento de Transporte, então valida a informação
         pkb_valida_chave_acesso ( est_log_generico     => est_log_generico
                                 , ev_nro_chave_cte     => est_row_conhec_transp.nro_chave_cte
                                 , en_empresa_id        => est_row_conhec_transp.empresa_id
                                 , en_pessoa_id         => est_row_conhec_transp.pessoa_id
                                 , en_dm_ind_emit       => est_row_conhec_transp.dm_ind_emit
                                 , ed_dt_hr_emissao     => trunc(est_row_conhec_transp.dt_hr_emissao)
                                 , ev_cod_mod           => ev_cod_mod
                                 , en_serie             => est_row_conhec_transp.serie
                                 , en_nro_ct            => est_row_conhec_transp.nro_ct
                                 , en_dm_forma_emiss    => est_row_conhec_transp.dm_forma_emiss
                                 , sn_cCT_cte           => est_row_conhec_transp.cCT_cte
                                 , sn_dig_verif_chave   => est_row_conhec_transp.dig_verif_chave
                                 , sn_qtde_erro         => vn_qtde_erro_chave );
         --
         vn_fase := 24.2;
         -- Se encontrou erros na chave, cria uma nova
         if nvl(est_row_conhec_transp.dm_legado, 0) = 0 and
            nvl(vn_qtde_erro_chave,0) > 0 then
            --
            vn_fase := 24.3;
            --
            est_row_conhec_transp.dig_verif_chave := null;
            --
            pkb_integr_CTChave_Refer ( est_log_generico     => est_log_generico
                                     , en_empresa_id        => est_row_conhec_transp.empresa_id
                                     , en_conhectransp_id   => est_row_conhec_transp.id
                                     , ed_dt_hr_emissao     => trunc(est_row_conhec_transp.dt_hr_emissao)
                                     , ev_cod_mod           => ev_cod_mod
                                     , en_serie             => est_row_conhec_transp.serie
                                     , en_nro_ct            => est_row_conhec_transp.nro_ct
                                     , en_dm_forma_emiss    => est_row_conhec_transp.dm_forma_emiss
                                     , esn_cCT_cte          => est_row_conhec_transp.cCT_cte
                                     , sn_dig_verif_chave   => est_row_conhec_transp.dig_verif_chave
                                     , sv_nro_chave_cte     => est_row_conhec_transp.nro_chave_cte
                                     );
            --
            vn_fase := 24.4;
            -- Grava o log de criação de uma nova chave
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Gerada uma nova Chave de Acesso.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => 1
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
         end if;
         --
      else
         --
         -- Verifica se já existe chave para o Conhecimento de Transporte, se não existir, cria a chave
         --
         vn_fase := 24.5;
         --
         pkb_integr_CTChave_Refer ( est_log_generico     => est_log_generico
                                  , en_empresa_id        => est_row_conhec_transp.empresa_id
                                  , en_conhectransp_id   => est_row_conhec_transp.id
                                  , ed_dt_hr_emissao     => trunc(est_row_conhec_transp.dt_hr_emissao)
                                  , ev_cod_mod           => ev_cod_mod
                                  , en_serie             => est_row_conhec_transp.serie
                                  , en_nro_ct            => est_row_conhec_transp.nro_ct
                                  , en_dm_forma_emiss    => est_row_conhec_transp.dm_forma_emiss
                                  , esn_cCT_cte          => est_row_conhec_transp.cCT_cte
                                  , sn_dig_verif_chave   => est_row_conhec_transp.dig_verif_chave
                                  , sv_nro_chave_cte     => est_row_conhec_transp.nro_chave_cte
                                  );
         --
      end if;
      --
   end if;
   --
   est_row_conhec_transp.id_tag_cte := 'CTe' || est_row_conhec_transp.nro_chave_cte;
   --| Válida informação do campo dm_tp_amb
   --
   vn_fase := 25;
   --
   -- Função retorna o tipo de ambiente parâmetrizado para a empresa
   --
   est_row_conhec_transp.dm_tp_amb := pk_csf.fkg_tp_amb_empresa ( en_empresa_id => est_row_conhec_transp.empresa_id );
   --
   vn_fase := 26;
   --
   --| Válida Identificação do Ambiente
   if est_row_conhec_transp.dm_tp_amb not in (1, 2) then
      --
      vn_fase := 26.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Tipo do Ambiente" (' || est_row_conhec_transp.dm_tp_amb || ') está incorreto.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 27;
   --
   --| Válida o campo Tipo do CT-e está com um dos valores disponiblizados pelo layout.
   if nvl(est_row_conhec_transp.dm_tp_cte, 9) not in (0, 1, 2, 3) then
      --
      vn_fase := 27.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Tipo do CT-e" (' || est_row_conhec_transp.dm_tp_cte || ') está incorreto.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --| Seta o campo dm_proc_emiss para zero, porque: "0 - emissão de CT-e com aplicativo do contribuinte."
   --
   vn_fase := 28;
   --
   est_row_conhec_transp.dm_proc_emiss := 0;
   --
   vn_fase := 29;
   --
   --| Válida se o campo Versão do aplicativo emissor de CT-e foi informado.
   if trim(pk_csf.fkg_converte(est_row_conhec_transp.vers_apl_cte)) is null then
      --
      vn_fase := 29.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Versão do aplicativo emissor de CT-e" (' || est_row_conhec_transp.vers_apl_cte || ') é obrigatório.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 30;
   --
   -- Valida o tamanho da chave referencial caso ela seja informada.
   if est_row_conhec_transp.chave_cte_ref             is not null
      and length(est_row_conhec_transp.chave_cte_ref) <> 44 then
      --
      vn_fase := 30.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Chave de acesso do CT-e referenciado" esta inválido (' || est_row_conhec_transp.chave_cte_ref || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --| Validações referente ao do código do IBGE da cidade
   --
   vn_fase := 31;
   --
   -- Válida o código IBGE da Cidade está nulo.
   if nvl(est_row_conhec_transp.ibge_cidade_emit, -1) < 0 and
      nvl(gn_dm_ind_emit,0)                              = 0 and  -- emissao
      nvl(est_row_conhec_transp.dm_legado,0)             = 0 then -- nao legado
      --
      vn_fase := 31.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Código do Município de Ocorrência do Fato Gerador" ('
                         || est_row_conhec_transp.ibge_cidade_emit || ') é obrigatório.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 32;
   -- Válida o código IBGE da Cidade
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade => to_char(est_row_conhec_transp.ibge_cidade_emit) ) = false and 
     nvl(est_row_conhec_transp.dm_ind_emit,0)                                                      = 0 and  -- emissao
      nvl(est_row_conhec_transp.dm_legado,0)                                                       = 0 then -- nao legadothen
      --
      vn_fase := 32.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Código do Município de Ocorrência do Fato Gerador" ('
                         || est_row_conhec_transp.ibge_cidade_emit || ') está inválido!';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 33;
   --
   -- Valida o campo Nome do Município onde o CT-e está sendo emitido foi informado.
   if trim(pk_csf.fkg_converte(est_row_conhec_transp.descr_cidade_emit)) is null then
      --
      vn_fase := 33.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do Município onde o CT-e está sendo emitido " (' || est_row_conhec_transp.descr_cidade_emit || ') é obrigatório .';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 34;
   --
   -- Valida o campo Sigla da UF.
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => trim(pk_csf.fkg_converte(est_row_conhec_transp.sigla_uf_emit)) ) = false and
      nvl(gn_dm_ind_emit,0)                                                                                          = 0     and  -- emissao
      nvl(est_row_conhec_transp.dm_legado,0)                                                                      = 0     then -- nao legado
      --
      vn_fase := 34.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF onde o CT-e está sendo emitido " (' || est_row_conhec_transp.sigla_uf_emit || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 35;
   --
   -- Valida o campo Modal está entre os valores fornecidos pelo layout.
   if trim(est_row_conhec_transp.dm_modal) is not null
      and est_row_conhec_transp.dm_modal not in ('01', '02', '03', '04', '05', '06') then
      --
      vn_fase := 35.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Modalidade" (' || est_row_conhec_transp.dm_modal || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 36;
   --
   -- Valida o campo Modal está entre os valores fornecidos pelo layout.
   if nvl(est_row_conhec_transp.dm_tp_serv, -9) not in (0, 1, 2, 3, 4, 6, 7, 8) then  --Atualização CTe 3.0
      --
      vn_fase := 36.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo do Serviço"(' || est_row_conhec_transp.dm_tp_serv || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --| Validações referente ao do Código do Município de início da prestação
   --
   vn_fase := 37;
   --
   -- Válida o código IBGE da Cidade está nulo.
   if nvl(est_row_conhec_transp.ibge_cidade_ini, -1) < 0 then
      --
      vn_fase := 37.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do Município de início da prestação" ('
                         || est_row_conhec_transp.ibge_cidade_ini || ') é obrigatório.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 38;
   -- Válida o código IBGE da Cidade
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade => to_char(est_row_conhec_transp.ibge_cidade_ini) ) = false then
      --
      vn_fase := 38.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do Município de início da prestação" ('
                         || est_row_conhec_transp.ibge_cidade_ini || ') está inválido!';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 39;
   --
   -- Valida o campo Nome do Município do início da prestação foi informado.
   if trim(pk_csf.fkg_converte(est_row_conhec_transp.descr_cidade_ini)) is null then
      --
      vn_fase := 39.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do Município do início da prestação" (' || est_row_conhec_transp.descr_cidade_ini || ') é obrigatório.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 40;
   --
   -- Verifica se os dois primeiros dígitos do Cód. IBGE de Inicio da Prestação pertence a estado de Inicio da Prestação. Operações Nacionais
   if est_row_conhec_transp.sigla_uf_ini <> 'EX'
      and substr(trim(est_row_conhec_transp.ibge_cidade_ini), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => est_row_conhec_transp.sigla_uf_ini) then
      --
      vn_fase := 40.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código IBGE da Cidade de Inicio da Prestação do Serviço" (' || est_row_conhec_transp.ibge_cidade_ini
                         || ') não pertence ao estado de Inicio da Prestação do Serviço (' || est_row_conhec_transp.sigla_uf_ini || ') .';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 42;
   --
   -- Verifica se os dois primeiros dígitos do Cód. IBGE pertence a estado indicado no cadastro. Operações Exterior.
   if est_row_conhec_transp.sigla_uf_ini = 'EX' and substr(trim(est_row_conhec_transp.ibge_cidade_ini), 1, 2) <> '99' then
      --
      vn_fase := 42.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código IBGE da Cidade de Início da Prestação do Serviço" (' || est_row_conhec_transp.ibge_cidade_ini
                         || ') deve assumir o valor de 9999999 para operações no Exterior.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 43;
   --
   -- Valida o campo Sigla da UF do início da prestação.
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => trim(pk_csf.fkg_converte(est_row_conhec_transp.sigla_uf_ini)) ) = false then
      --
      vn_fase := 43.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF do início da prestação" (' || est_row_conhec_transp.sigla_uf_ini || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --| Validações referente ao Código do Município de término da prestação
   --
   vn_fase := 44;
   --
   -- Válida o código IBGE da Cidade está nulo.
   if nvl(est_row_conhec_transp.ibge_cidade_fim, -1) < 0 then
      --
      vn_fase := 44.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do Município de término da prestação" ('
                         || est_row_conhec_transp.ibge_cidade_fim || ') é obrigatório.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 45;
   -- Válida o código IBGE da Cidade
   if pk_csf.fkg_ibge_cidade ( ev_ibge_cidade => to_char(est_row_conhec_transp.ibge_cidade_fim) ) = false then
      --
      vn_fase := 45.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código do Município de término da prestação" ('
                         || est_row_conhec_transp.ibge_cidade_fim || ') está inválido!';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 46;
   --
   -- Valida o campo Nome do Município do término da prestação foi informado.
   if trim(pk_csf.fkg_converte(est_row_conhec_transp.descr_cidade_fim)) is null then
      --
      vn_fase := 46.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Nome do Município do início da prestação" (' || est_row_conhec_transp.descr_cidade_fim || ') é obrigatório .';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 47;
   --
   -- Valida o campo Sigla da UF do término da prestação.
   if pk_csf.fkg_uf_valida ( ev_sigla_estado  => trim(pk_csf.fkg_converte(est_row_conhec_transp.sigla_uf_fim)) ) = false then
      --
      vn_fase := 47.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Sigla da UF do término da prestação" (' || est_row_conhec_transp.sigla_uf_fim || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 48;
   --
   -- Verifica se os dois primeiros dígitos do Cód. IBGE de Final da Prestação pertence a estado de Final da Prestação. Operações Nacionais
   if est_row_conhec_transp.sigla_uf_fim <> 'EX'
      and substr(trim(est_row_conhec_transp.ibge_cidade_fim), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => est_row_conhec_transp.sigla_uf_fim) then
      --
      vn_fase := 48.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código IBGE da Cidade de Final da Prestação do Serviço" (' || est_row_conhec_transp.ibge_cidade_fim
                        || ') não pertence ao estado de Final da Prestação do Serviço (' || est_row_conhec_transp.sigla_uf_fim || ') .';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 49;
   --
   -- Verifica se os dois primeiros dígitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Exterior.
   if est_row_conhec_transp.sigla_uf_fim = 'EX' and substr(trim(est_row_conhec_transp.ibge_cidade_fim), 1, 2) <> '99' then
      --
      vn_fase := 49.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Código IBGE da Cidade de Final da Prestação do Serviço" (' || est_row_conhec_transp.ibge_cidade_fim
                         || ') deve assumir o valor de 9999999 para operações no Exterior.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 50;
   --
   -- Valida o campo "Indicador se o Recebedor retira no Aeroporto, Filial, Porto ou Estação de Destino?" está entre os valores fornecidos pelo layout.
   if nvl(est_row_conhec_transp.dm_retira, -9) not in (0, 1) then
      --
      vn_fase := 50.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Ind. se o Recebedor retira no Aeroporto, Filial, Porto ou Estação de Destino?" (' || est_row_conhec_transp.dm_retira || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 51;
   --
   -- Valida o campo "Indicador do "papel" do tomador do serviço no CT-e" está entre os valores fornecidos pelo layout.
   if nvl(est_row_conhec_transp.dm_tomador, -9) not in (0, 1, 2, 3, 4) then
      --
      vn_fase := 51.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tomador do Serviço" (' || est_row_conhec_transp.dm_tomador || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 52;
   --
   -- Válida se a situação do processo está correta
   if est_row_conhec_transp.dm_st_proc not in (0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 99) then
      --
      vn_fase := 52.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Situação do processo do CT-e" (' || est_row_conhec_transp.dm_st_proc || ') está incorreto.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 53;
   --
   -- Válida informação do campo dt_st_proc está nulo.
   if est_row_conhec_transp.dt_st_proc is null then
      --
      vn_fase := 53.1;
      est_row_conhec_transp.dt_st_proc := sysdate;
      --
   end if;
   --
   -- Validações referente ao Impressa: 0-Não; 1-Sim; 2-Erro na impressão.
   --
   vn_fase := 54;
   --
   if ev_cod_mod in ('57', '67') then -- Somente CTe
      --
      if est_row_conhec_transp.dm_ind_emit = 0 then -- Emissão própria sempre imprime
         est_row_conhec_transp.dm_impressa := 0; -- Não impressa
      else
         if est_row_conhec_transp.dm_arm_cte_terc = 1 then -- Armazena NFe/XML de Terceiro sempre imprimi
            est_row_conhec_transp.dm_impressa := 0; -- Não impressa
         else
            est_row_conhec_transp.dm_impressa := 1; -- Impressa
         end if;
      end if;
      --
   else
      est_row_conhec_transp.dm_impressa := 1; -- Impressa
   end if;
   --
   --| Válida informação do campo dm_impressa
   vn_fase := 55;
   --
   -- Válida informação do campo
   if est_row_conhec_transp.dm_impressa not in (0, 1, 2, 3, 4) then
      --
      vn_fase := 55.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Situação da Impressão do Ct-e" (' || est_row_conhec_transp.dm_impressa || ') está incorreta.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   --| Válida informação do campo dm_impressa
   vn_fase := 56;
   --
   -- Válida se o valor do campo Situação do e-mail está dentro do que foi estabelecido pelo layout.
   if nvl(est_row_conhec_transp.dm_st_email, -1) not in (0, 1, 2, 3, 4) then
      --
      vn_fase := 56.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'A "Situação do e-mail" (' || est_row_conhec_transp.dm_st_email || ') está inválida.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
     --
     -- Armazena o "loggenerico_id" na memória
     pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                            , est_log_generico  => est_log_generico );
     --
   end if;
   --
   vn_fase := 57;
   -- Caso o campo seja nulo seta zero.
   if nvl(est_row_conhec_transp.dm_st_email, -1) = -1 then
      --
      vn_fase := 57.1;
      --
      est_row_conhec_transp.dm_st_email := 0;
      --
   end if;
   --
   --| Valida Status da Integração.
   --
   vn_fase := 58;
   --Valida se ele não for nulo.
   if nvl(est_row_conhec_transp.dm_st_integra, -1) not in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10) then
      --
      vn_fase := 58.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Situação da Integração" (' || est_row_conhec_transp.dm_st_integra || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 59;
   --
   if nvl(est_row_conhec_transp.dm_st_integra, -1) = -1 then
      --Caso o campo seja nulo seta zero.
      vn_fase := 59.1;
      --
      est_row_conhec_transp.dm_st_integra := 0;
      --
   end if;
   --
   --Valida a autorização do SEFAZ.
   --
   vn_fase := 60;
   --
   -- Se o campo não for nulo.
   if nvl(est_row_conhec_transp.dm_aut_sefaz, 0) not in (0, 1) then
      --
      vn_fase := 60.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O indicador "Autorizada no SEFAZ" (' || est_row_conhec_transp.dm_aut_sefaz || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
     --
     -- Armazena o "loggenerico_id" na memória
     pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                            , est_log_generico  => est_log_generico );
     --
   end if;
   --
   vn_fase := 61;
   --
   if nvl(est_row_conhec_transp.dm_aut_sefaz, -1) = -1 then
      -- Caso seja nulo
      est_row_conhec_transp.dm_aut_sefaz := 0;
      --
   end if;
   --
   vn_fase := 62;
   --
   -- Valida o Indicador do tipo de operação: 0- Aquisição; 1- Prestação
   if nvl(est_row_conhec_transp.dm_ind_oper, -9) not in (0, 1) then
      --
      vn_fase := 62.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador do tipo de operação" (' || est_row_conhec_transp.dm_ind_oper || ') está incorreto.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 63;
   --
   -- Valida se o Indicador do emitente do documento fiscal: 0- Emissão própria; 1- Terceiros
   if nvl(est_row_conhec_transp.dm_ind_emit, -9) not in (0, 1) and 
     nvl(est_row_conhec_transp.dm_legado,0)            = 0     then
      --
      vn_fase := 63.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador do emitente" (' || est_row_conhec_transp.dm_ind_emit || ') está incorreto.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 64;
   --
   -- Valida se Indicador do tipo do frete
   if nvl(est_row_conhec_transp.dm_ind_frt, -9) not in (0, 1, 2, 9) then
      --
      vn_fase := 64.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Ind. do tipo do frete" (' || est_row_conhec_transp.dm_ind_frt || ') está incorreto.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 65;
   -- Seta Data e Hora de entrada da nota no sistema caso ele seja nulo
   if est_row_conhec_transp.dt_hr_ent_sist is null then
     --
     est_row_conhec_transp.dt_hr_ent_sist := sysdate;
     --
   end if;
   --
   vn_fase := 66;
   --
   -- Busca o ID da tabela INFOR_COMP_DCTO_FISCAL caso o parametro do código dela seja passado na chamada da procedure.
   if trim(ev_cod_infor) is not null then
      --
      est_row_conhec_transp.inforcompdctofiscal_id := pk_csf.fkg_Infor_Comp_Dcto_Fiscal_id ( en_multorg_id => en_multorg_id
                                                                                           , en_cod_infor  => trim(ev_cod_infor) );
      --
   end if;
   --
   vn_fase := 67;
   --
   if trim(pk_csf.fkg_converte(ev_sist_orig)) is not null then
      --
      vn_fase := 67.1;
      --
      est_row_conhec_transp.sistorig_id := pk_csf.fkg_sist_orig_id ( en_multorg_id => en_multorg_id
                                                                   , ev_sigla      => trim(ev_sist_orig) );
      --
      -- Válida se o Código do Sistema de Origem
      if trim(pk_csf.fkg_converte(ev_sist_orig)) is not null
         and nvl(est_row_conhec_transp.sistorig_id, 0) = 0 then
         --
         vn_fase := 67.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := '"O Código do Sistema de Origem" ('
                            || ev_sist_orig || ') está inválido ou não está cadastrado no sistema.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
   vn_fase := 68;
   --
   if trim(pk_csf.fkg_converte(ev_cod_unid_org)) is not null then
      --
      vn_fase := 68.1;
      --
      est_row_conhec_transp.unidorg_id := pk_csf.fkg_unig_org_id ( en_empresa_id  => est_row_conhec_transp.empresa_id
                                                                 , ev_cod_unid_org => trim(ev_cod_unid_org) );
      --
      -- Válida se o Código do Sistema de Origem
      if trim(pk_csf.fkg_converte(ev_cod_unid_org)) is not null
         and nvl(est_row_conhec_transp.unidorg_id, 0) = 0 then
         --
         vn_fase := 68.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := '"A Unidade Organizacional" ('
                            || ev_cod_unid_org || ') está inválida ou não está cadastrada no sistema.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
   vn_fase := 69;
   --
   -- Caso o tipo de serviço for Normal o tomador de serviço não pode ser o Expedidor
   if est_row_conhec_transp.dm_tp_serv = 0
      and est_row_conhec_transp.dm_tomador in (1,2) then
      --
      vn_fase := 69.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Tipo de Serviço" - Normal é inválido para o Tipo de Tomador (' || est_row_conhec_transp.dm_tomador || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 70;
   --
   if nvl(est_row_conhec_transp.nro_carreg, 0) < 0 then
      --
      vn_fase := 70.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Número do Carregamento" (' || est_row_conhec_transp.nro_carreg || ') não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 71;
   --
   if nvl(est_row_conhec_transp.dm_legado, -1) not in (0, 1, 2, 3, 4) then
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de Legado" (' || est_row_conhec_transp.dm_legado || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia 
                          );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
      est_row_conhec_transp.dm_legado := 0; -- Não é Legado
      --
   end if;
   --
   if est_row_conhec_transp.dm_legado is null then
      --
      if est_row_conhec_transp.dm_st_proc = 4 then -- Autorizada
         est_row_conhec_transp.dm_legado := 1; -- Legado Autorizado
      elsif est_row_conhec_transp.dm_st_proc = 6 then -- Denegada
         est_row_conhec_transp.dm_legado := 2; -- Legado Denegado
      elsif est_row_conhec_transp.dm_st_proc = 7 then -- Cancelada
         est_row_conhec_transp.dm_legado := 3; -- Legado Cancelado
      elsif est_row_conhec_transp.dm_st_proc = 8 then -- Inutilizada
         est_row_conhec_transp.dm_legado := 4; -- Legado Inutilizado
      else
         est_row_conhec_transp.dm_legado := 0; -- Não é Legado
      end if;
      --
   end if;
   --
   vn_fase := 72;
   -- Atualização CTe 3.0
   -- Valida se o Indicador de CT-e Globalizado: 1-Globalizado
   if est_row_conhec_transp.dm_global is not null
      and est_row_conhec_transp.dm_global not in (1) then
      --
      vn_fase := 72.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador de CT-e Globalizado" (' || est_row_conhec_transp.dm_global || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 73;
   -- Atualização CTe 3.0
   -- Valida se o Indicador do papel do tomador na prestação do serviço: 1-Contribuinte ICMS; 2-Contribuinte isento de inscrição; 9-Não Contribuinte
   if nvl(est_row_conhec_transp.dm_ind_ie_toma, -9) not in (1, 2, 9) then
      --
      vn_fase := 73.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O "Indicador do papel do tomador na prestação do serviço" (' || est_row_conhec_transp.dm_ind_ie_toma || ') está inválido.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   gt_row_conhec_transp.usuario_id := est_row_conhec_transp.usuario_id;
   --
   -- Se não teve erro na validação, integra o Ct-e
   -- Se não existe registro de Log e o Tipo de integração é 1 (válida e insere)
   -- Verifica se existe log de erro no processo
   if nvl(est_log_generico.count,0) > 0 and
      fkg_ver_erro_log_generico_ct( est_row_conhec_transp.id ) = 1 then
      --
      est_row_conhec_transp.dm_st_proc := 10;
      --
   end if;
   --
   vn_fase := 99.1;
   --
   est_row_conhec_transp.versao            := trim(pk_csf.fkg_converte(est_row_conhec_transp.versao));
   est_row_conhec_transp.id_tag_cte        := trim(pk_csf.fkg_converte(est_row_conhec_transp.id_tag_cte));
   est_row_conhec_transp.nat_oper          := trim(pk_csf.fkg_converte(est_row_conhec_transp.nat_oper));
   est_row_conhec_transp.serie             := trim(pk_csf.fkg_converte(est_row_conhec_transp.serie));
   est_row_conhec_transp.subserie          := trim(pk_csf.fkg_converte(est_row_conhec_transp.subserie));
   est_row_conhec_transp.nro_chave_cte     := trim(pk_csf.fkg_converte(est_row_conhec_transp.nro_chave_cte));
   est_row_conhec_transp.chave_cte_ref     := trim(pk_csf.fkg_converte(est_row_conhec_transp.chave_cte_ref));
   est_row_conhec_transp.descr_cidade_emit := trim(pk_csf.fkg_converte(est_row_conhec_transp.descr_cidade_emit));
   est_row_conhec_transp.sigla_uf_emit     := trim(pk_csf.fkg_converte(est_row_conhec_transp.sigla_uf_emit));
   est_row_conhec_transp.descr_cidade_ini  := trim(pk_csf.fkg_converte(est_row_conhec_transp.descr_cidade_ini));
   est_row_conhec_transp.sigla_uf_ini      := trim(pk_csf.fkg_converte(est_row_conhec_transp.sigla_uf_ini));
   est_row_conhec_transp.descr_cidade_fim  := trim(pk_csf.fkg_converte(est_row_conhec_transp.descr_cidade_fim));
   est_row_conhec_transp.sigla_uf_fim      := trim(pk_csf.fkg_converte(est_row_conhec_transp.sigla_uf_fim));
   est_row_conhec_transp.det_retira        := trim(pk_csf.fkg_converte(est_row_conhec_transp.det_retira));
   est_row_conhec_transp.inf_adic_fisco    := trim(pk_csf.fkg_converte(est_row_conhec_transp.inf_adic_fisco));
   est_row_conhec_transp.id_usuario_erp    := trim(pk_csf.fkg_converte(est_row_conhec_transp.id_usuario_erp));
   est_row_conhec_transp.cod_cta           := trim(pk_csf.fkg_converte(est_row_conhec_transp.cod_cta));
   est_row_conhec_transp.dm_arm_cte_terc   := nvl(est_row_conhec_transp.dm_arm_cte_terc, 0);
   est_row_conhec_transp.nro_carreg        := nvl(est_row_conhec_transp.nro_carreg, 0);
   est_row_conhec_transp.obs_global        := trim(pk_csf.fkg_converte(est_row_conhec_transp.obs_global)); -- Atualização CTe 3.0
   est_row_conhec_transp.descr_serv        := trim(pk_csf.fkg_converte(est_row_conhec_transp.descr_serv)); -- Atualização CTe 3.0
   --
   vn_fase := 99.2;
   --
   if est_row_conhec_transp.dt_hr_ent_sist is not null
      and nvl(est_row_conhec_transp.empresa_id,0)         >  0
      and nvl(est_row_conhec_transp.sitdocto_id, -1)      >= 0
      and nvl(est_row_conhec_transp.uf_ibge_emit, -1)     >= 0
      and nvl(est_row_conhec_transp.cfop, -1)             >= 0
      and nvl(est_row_conhec_transp.cfop_id, -1)          >= 0
      and est_row_conhec_transp.nat_oper                  is not null
      and nvl(est_row_conhec_transp.dm_for_pag, -1)       >= 0
      and nvl(est_row_conhec_transp.modfiscal_id, -1)     >= 0
      and nvl(est_row_conhec_transp.nro_ct, -1)           > 0
      and est_row_conhec_transp.dt_hr_emissao             is not null
      and nvl(est_row_conhec_transp.dm_tp_imp, -9)        in (1, 2)
      and nvl(est_row_conhec_transp.dm_forma_emiss, -9)   in (1, 5, 7,8)
      and nvl(est_row_conhec_transp.dm_tp_amb, -9)        in (1, 2)
      and nvl(est_row_conhec_transp.dm_tp_cte, -9)        in (0, 1, 2, 3)
      and nvl(est_row_conhec_transp.dm_proc_emiss, -9)    in (0, 1, 2, 3)
      and est_row_conhec_transp.vers_apl_cte              is not null
      and nvl(est_row_conhec_transp.ibge_cidade_emit, -1) > 0
      and est_row_conhec_transp.descr_cidade_emit         is not null
      and est_row_conhec_transp.sigla_uf_emit             is not null
      and nvl(est_row_conhec_transp.dm_modal, '99')       in ('01', '02', '03', '04', '05', '06')
      and nvl(est_row_conhec_transp.dm_tp_serv, -9)       in (0, 1, 2, 3, 4, 6, 7, 8) --Atualização CTe 3.0
      and nvl(est_row_conhec_transp.ibge_cidade_ini, -1)  > 0
      and est_row_conhec_transp.descr_cidade_ini          is not null
      and est_row_conhec_transp.sigla_uf_ini              is not null
      and nvl(est_row_conhec_transp.ibge_cidade_fim, -1)  > 0
      and est_row_conhec_transp.descr_cidade_fim          is not null
      and est_row_conhec_transp.sigla_uf_fim              is not null
      and nvl(est_row_conhec_transp.dm_retira, -9)        in (0, 1)
      and nvl(est_row_conhec_transp.dm_tomador, -9)       in (0, 1, 2, 3, 4)
      and nvl(est_row_conhec_transp.dm_st_proc, -9)       in (0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 99)
      and nvl(est_row_conhec_transp.dm_impressa, -9)      in (0, 1, 2, 3, 4, 5)
      and nvl(est_row_conhec_transp.dm_st_email, -9)      in (0, 1, 2, 3, 4)
      and nvl(est_row_conhec_transp.dm_st_integra, -9)    in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
      and nvl(est_row_conhec_transp.dm_aut_sefaz, -9)     in (0, 1)
      and nvl(est_row_conhec_transp.dm_ind_oper, -9)      in (0, 1)
      and nvl(est_row_conhec_transp.dm_ind_emit, -9)      in (0, 1)
      and nvl(est_row_conhec_transp.dm_ind_frt, -9)       in (0, 1, 2, 9)
      and nvl(est_row_conhec_transp.dm_global, 1)         in (1)             -- Atualização CTe 3.0
      and nvl(est_row_conhec_transp.dm_ind_ie_toma, -9)   in (1, 2, 9) -- Atualização CTe 3.0
      then
      --
      vn_fase := 99.3;
      --
      -- Se o CT-e já existe, só faz a atualização dos dados
      if pk_csf_ct.fkg_existe_cte ( en_conhec_transp => est_row_conhec_transp.id ) = true then
         --
         vn_fase := 99.4;
         --
         update conhec_transp set dt_hr_ent_sist           = est_row_conhec_transp.dt_hr_ent_sist
                                , empresa_id               = est_row_conhec_transp.empresa_id
                                , lotecte_id               = est_row_conhec_transp.lotecte_id
                                , inutilizaconhectransp_id = est_row_conhec_transp.inutilizaconhectransp_id
                                , pessoa_id                = est_row_conhec_transp.pessoa_id
                                , sitdocto_id              = est_row_conhec_transp.sitdocto_id
                                , versao                   = est_row_conhec_transp.versao
                                , id_tag_cte               = est_row_conhec_transp.id_tag_cte
                                , uf_ibge_emit             = est_row_conhec_transp.uf_ibge_emit
                                , cct_cte                  = est_row_conhec_transp.cct_cte
                                , cfop                     = est_row_conhec_transp.cfop
                                , cfop_id                  = est_row_conhec_transp.cfop_id
                                , nat_oper                 = est_row_conhec_transp.nat_oper
                                , dm_for_pag               = est_row_conhec_transp.dm_for_pag
                                , modfiscal_id             = est_row_conhec_transp.modfiscal_id
                                , serie                    = est_row_conhec_transp.serie
                                , subserie                 = est_row_conhec_transp.subserie
                                , nro_ct                   = est_row_conhec_transp.nro_ct
                                , dt_hr_emissao            = est_row_conhec_transp.dt_hr_emissao
                                , dm_tp_imp                = est_row_conhec_transp.dm_tp_imp
                                , dm_forma_emiss           = est_row_conhec_transp.dm_forma_emiss
                                , dig_verif_chave          = est_row_conhec_transp.dig_verif_chave
                                , nro_chave_cte            = est_row_conhec_transp.nro_chave_cte
                                , dm_tp_amb                = est_row_conhec_transp.dm_tp_amb
                                , dm_tp_cte                = est_row_conhec_transp.dm_tp_cte
                                , dm_proc_emiss            = est_row_conhec_transp.dm_proc_emiss
                                , vers_apl_cte             = est_row_conhec_transp.vers_apl_cte
                                , chave_cte_ref            = est_row_conhec_transp.chave_cte_ref
                                , ibge_cidade_emit         = est_row_conhec_transp.ibge_cidade_emit
                                , descr_cidade_emit        = est_row_conhec_transp.descr_cidade_emit
                                , sigla_uf_emit            = est_row_conhec_transp.sigla_uf_emit
                                , dm_modal                 = est_row_conhec_transp.dm_modal
                                , dm_tp_serv               = est_row_conhec_transp.dm_tp_serv
                                , ibge_cidade_ini          = est_row_conhec_transp.ibge_cidade_ini
                                , descr_cidade_ini         = est_row_conhec_transp.descr_cidade_ini
                                , sigla_uf_ini             = est_row_conhec_transp.sigla_uf_ini
                                , ibge_cidade_fim          = est_row_conhec_transp.ibge_cidade_fim
                                , descr_cidade_fim         = est_row_conhec_transp.descr_cidade_fim
                                , sigla_uf_fim             = est_row_conhec_transp.sigla_uf_fim
                                , dm_retira                = est_row_conhec_transp.dm_retira
                                , det_retira               = est_row_conhec_transp.det_retira
                                , dm_tomador               = est_row_conhec_transp.dm_tomador
                                , inf_adic_fisco           = est_row_conhec_transp.inf_adic_fisco
                                , dm_st_proc               = est_row_conhec_transp.dm_st_proc
                                , dt_st_proc               = est_row_conhec_transp.dt_st_proc
                                , dm_impressa              = est_row_conhec_transp.dm_impressa
                                , dm_st_email              = est_row_conhec_transp.dm_st_email
                                , dm_st_integra            = est_row_conhec_transp.dm_st_integra
                                , dm_aut_sefaz             = est_row_conhec_transp.dm_aut_sefaz
                                , dt_aut_sefaz             = est_row_conhec_transp.dt_aut_sefaz
                                , id_usuario_erp           = est_row_conhec_transp.id_usuario_erp
                                , usuario_id               = est_row_conhec_transp.usuario_id
                                , impressora_id            = est_row_conhec_transp.impressora_id
                                , vias_dacte_custom        = est_row_conhec_transp.vias_dacte_custom
                                , nro_tentativas_impr      = est_row_conhec_transp.nro_tentativas_impr
                                , dt_ult_tenta_impr        = est_row_conhec_transp.dt_ult_tenta_impr
                                , vers_apl                 = est_row_conhec_transp.vers_apl
                                , dm_ind_oper              = est_row_conhec_transp.dm_ind_oper
                                , dm_ind_emit              = est_row_conhec_transp.dm_ind_emit
                                , dm_ind_frt               = est_row_conhec_transp.dm_ind_frt
                                , inforcompdctofiscal_id   = est_row_conhec_transp.inforcompdctofiscal_id
                                , cod_cta                  = est_row_conhec_transp.cod_cta
                                , sistorig_id              = est_row_conhec_transp.sistorig_id
                                , unidorg_id               = est_row_conhec_transp.unidorg_id
                                , dt_cont                  = est_row_conhec_transp.dt_cont
                                , just_cont                = est_row_conhec_transp.just_cont
                                , dm_arm_cte_terc          = est_row_conhec_transp.dm_arm_cte_terc
                                , nro_carreg               = est_row_conhec_transp.nro_carreg
                                , empresaintegrbanco_id    = en_empresaintegrbanco_id
                                , dm_legado                = est_row_conhec_transp.dm_legado
                                , dm_global                = est_row_conhec_transp.dm_global      -- Atualização CTe 3.0
                                , dm_ind_ie_toma           = est_row_conhec_transp.dm_ind_ie_toma -- Atualização CTe 3.0
                                , vl_tot_trib              = est_row_conhec_transp.vl_tot_trib    -- Atualização CTe 3.0
                                , obs_global               = est_row_conhec_transp.obs_global     -- Atualização CTe 3.0
                                , descr_serv               = est_row_conhec_transp.descr_serv     -- Atualização CTe 3.0
                                , qtde_carga_os            = est_row_conhec_transp.qtde_carga_os  -- Atualização CTe 3.0
          where id = est_row_conhec_transp.id;
          --
      else
         --
         vn_fase := 99.5;
         --
         if nvl(est_row_conhec_transp.id,0) = 0 then
            --
            select conhectransp_seq.nextval
              into est_row_conhec_transp.id
              from dual;
            --
         end if;
         --
         vn_fase := 99.6;
         --
         insert into conhec_transp ( id
                                   , dt_hr_ent_sist
                                   , empresa_id
                                   , lotecte_id
                                   , inutilizaconhectransp_id
                                   , pessoa_id
                                   , sitdocto_id
                                   , versao
                                   , id_tag_cte
                                   , uf_ibge_emit
                                   , cct_cte
                                   , cfop
                                   , cfop_id
                                   , nat_oper
                                   , dm_for_pag
                                   , modfiscal_id
                                   , serie
                                   , subserie
                                   , nro_ct
                                   , dt_hr_emissao
                                   , dm_tp_imp
                                   , dm_forma_emiss
                                   , dig_verif_chave
                                   , nro_chave_cte
                                   , dm_tp_amb
                                   , dm_tp_cte
                                   , dm_proc_emiss
                                   , vers_apl_cte
                                   , chave_cte_ref
                                   , ibge_cidade_emit
                                   , descr_cidade_emit
                                   , sigla_uf_emit
                                   , dm_modal
                                   , dm_tp_serv
                                   , ibge_cidade_ini
                                   , descr_cidade_ini
                                   , sigla_uf_ini
                                   , ibge_cidade_fim
                                   , descr_cidade_fim
                                   , sigla_uf_fim
                                   , dm_retira
                                   , det_retira
                                   , dm_tomador
                                   , inf_adic_fisco
                                   , dm_st_proc
                                   , dt_st_proc
                                   , dm_impressa
                                   , dm_st_email
                                   , dm_st_integra
                                   , dm_aut_sefaz
                                   , dt_aut_sefaz
                                   , id_usuario_erp
                                   , usuario_id
                                   , impressora_id
                                   , vias_dacte_custom
                                   , nro_tentativas_impr
                                   , dt_ult_tenta_impr
                                   , vers_apl
                                   , dt_hr_recbto
                                   , nro_protocolo
                                   , digest_value
                                   , msgwebserv_id
                                   , cod_msg
                                   , motivo_resp
                                   , dm_ind_oper
                                   , dm_ind_emit
                                   , dm_ind_frt
                                   , inforcompdctofiscal_id
                                   , cod_cta
                                   , sistorig_id
                                   , unidorg_id
                                   , dt_cont
                                   , just_cont
                                   , dm_arm_cte_terc
                                   , nro_carreg
                                   , empresaintegrbanco_id
                                   , dm_legado
                                   , dm_global       -- Atualização CTe 3.0
                                   , dm_ind_ie_toma  -- Atualização CTe 3.0
                                   , vl_tot_trib     -- Atualização CTe 3.0
                                   , obs_global      -- Atualização CTe 3.0
                                   , descr_serv      -- Atualização CTe 3.0
                                   , qtde_carga_os   -- Atualização CTe 3.0
                                   )
                            values ( est_row_conhec_transp.id
                                   , est_row_conhec_transp.dt_hr_ent_sist
                                   , est_row_conhec_transp.empresa_id
                                   , est_row_conhec_transp.lotecte_id
                                   , est_row_conhec_transp.inutilizaconhectransp_id
                                   , est_row_conhec_transp.pessoa_id
                                   , est_row_conhec_transp.sitdocto_id
                                   , est_row_conhec_transp.versao
                                   , est_row_conhec_transp.id_tag_cte
                                   , est_row_conhec_transp.uf_ibge_emit
                                   , est_row_conhec_transp.cct_cte
                                   , est_row_conhec_transp.cfop
                                   , est_row_conhec_transp.cfop_id
                                   , est_row_conhec_transp.nat_oper
                                   , est_row_conhec_transp.dm_for_pag
                                   , est_row_conhec_transp.modfiscal_id
                                   , est_row_conhec_transp.serie
                                   , est_row_conhec_transp.subserie
                                   , est_row_conhec_transp.nro_ct
                                   , est_row_conhec_transp.dt_hr_emissao
                                   , est_row_conhec_transp.dm_tp_imp
                                   , est_row_conhec_transp.dm_forma_emiss
                                   , est_row_conhec_transp.dig_verif_chave
                                   , est_row_conhec_transp.nro_chave_cte
                                   , est_row_conhec_transp.dm_tp_amb
                                   , est_row_conhec_transp.dm_tp_cte
                                   , est_row_conhec_transp.dm_proc_emiss
                                   , est_row_conhec_transp.vers_apl_cte
                                   , est_row_conhec_transp.chave_cte_ref
                                   , est_row_conhec_transp.ibge_cidade_emit
                                   , est_row_conhec_transp.descr_cidade_emit
                                   , est_row_conhec_transp.sigla_uf_emit
                                   , est_row_conhec_transp.dm_modal
                                   , est_row_conhec_transp.dm_tp_serv
                                   , est_row_conhec_transp.ibge_cidade_ini
                                   , est_row_conhec_transp.descr_cidade_ini
                                   , est_row_conhec_transp.sigla_uf_ini
                                   , est_row_conhec_transp.ibge_cidade_fim
                                   , est_row_conhec_transp.descr_cidade_fim
                                   , est_row_conhec_transp.sigla_uf_fim
                                   , est_row_conhec_transp.dm_retira
                                   , est_row_conhec_transp.det_retira
                                   , est_row_conhec_transp.dm_tomador
                                   , est_row_conhec_transp.inf_adic_fisco
                                   , est_row_conhec_transp.dm_st_proc
                                   , est_row_conhec_transp.dt_st_proc
                                   , est_row_conhec_transp.dm_impressa
                                   , est_row_conhec_transp.dm_st_email
                                   , est_row_conhec_transp.dm_st_integra
                                   , est_row_conhec_transp.dm_aut_sefaz
                                   , est_row_conhec_transp.dt_aut_sefaz
                                   , est_row_conhec_transp.id_usuario_erp
                                   , est_row_conhec_transp.usuario_id
                                   , est_row_conhec_transp.impressora_id
                                   , est_row_conhec_transp.vias_dacte_custom
                                   , est_row_conhec_transp.nro_tentativas_impr
                                   , est_row_conhec_transp.dt_ult_tenta_impr
                                   , est_row_conhec_transp.vers_apl
                                   , est_row_conhec_transp.dt_hr_recbto
                                   , est_row_conhec_transp.nro_protocolo
                                   , est_row_conhec_transp.digest_value
                                   , est_row_conhec_transp.msgwebserv_id
                                   , est_row_conhec_transp.cod_msg
                                   , est_row_conhec_transp.motivo_resp
                                   , est_row_conhec_transp.dm_ind_oper
                                   , est_row_conhec_transp.dm_ind_emit
                                   , est_row_conhec_transp.dm_ind_frt
                                   , est_row_conhec_transp.inforcompdctofiscal_id
                                   , est_row_conhec_transp.cod_cta
                                   , est_row_conhec_transp.sistorig_id
                                   , est_row_conhec_transp.unidorg_id
                                   , est_row_conhec_transp.dt_cont
                                   , est_row_conhec_transp.just_cont
                                   , est_row_conhec_transp.dm_arm_cte_terc
                                   , est_row_conhec_transp.nro_carreg
                                   , en_empresaintegrbanco_id
                                   , est_row_conhec_transp.dm_legado
                                   , est_row_conhec_transp.dm_global      -- Atualização CTe 3.0
                                   , est_row_conhec_transp.dm_ind_ie_toma -- Atualização CTe 3.0
                                   , est_row_conhec_transp.vl_tot_trib    -- Atualização CTe 3.0
                                   , est_row_conhec_transp.obs_global     -- Atualização CTe 3.0
                                   , est_row_conhec_transp.descr_serv     -- Atualização CTe 3.0
                                   , est_row_conhec_transp.qtde_carga_os  -- Atualização CTe 3.0
                                   );
         --
      end if;
      --
      -- Cálcula a quantidade de registros Totais integrados para ser
      -- mostrado na tela de agendamento.
      --
      begin
         pk_agend_integr.gvtn_qtd_total(gv_cd_obj) := nvl(pk_agend_integr.gvtn_qtd_total(gv_cd_obj),0) + 1;
      exception
         when others then
            null;
      end;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_conhec_transp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_conhec_transp;

-------------------------------------------------------------------------------------------------------
-- Procedimento válida a chave de acesso do CTe
-------------------------------------------------------------------------------------------------------
procedure pkb_valida_chave_acesso ( est_log_generico   in out nocopy dbms_sql.number_table
                                  , ev_nro_chave_cte   in            conhec_transp.nro_chave_cte%TYPE
                                  , en_empresa_id      in            Empresa.id%TYPE
                                  , en_pessoa_id       in            pessoa.id%type
                                  , en_dm_ind_emit     in            conhec_transp.dm_ind_emit%type
                                  , ed_dt_hr_emissao   in            conhec_transp.dt_hr_emissao%TYPE
                                  , ev_cod_mod         in            Mod_Fiscal.cod_mod%TYPE
                                  , en_serie           in            conhec_transp.serie%TYPE
                                  , en_nro_ct          in            conhec_transp.nro_ct%TYPE
                                  , en_dm_forma_emiss  in            conhec_transp.dm_forma_emiss%type
                                  , sn_cCT_cte         out           conhec_transp.cCT_cte%TYPE
                                  , sn_dig_verif_chave out           conhec_transp.dig_verif_chave%TYPE
                                  , sn_qtde_erro       out           number )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   -- Informações da Chave de Acesso
   vv_uf_ibge_chave   varchar2(2)  := null;
   vv_emissao_chave   varchar2(4)  := null;
   vv_cnpj_chave      varchar2(14) := null;
   vv_cod_mod_chave   varchar2(2)  := null;
   vv_serie_chave     varchar2(3)  := null;
   vv_nro_ct_chave    varchar2(9)  := null;
   vv_dm_forma_emiss  varchar2(1)  := null;
   -- Informações usadas para comprar com a Chave de Acesso
   vv_cnpj            varchar2(14) := null;
   vv_uf_ibge         varchar2(2)  := null;
   vn_dig_verif_chave conhec_transp.dig_verif_chave%TYPE := null;
   vv_uf_ibge_partic  varchar2(2) := null;
   vv_cnpj_partic     varchar2(14) := null;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_nro_ct,0) > 0 and ev_cod_mod in ('57', '67') then  --Atualização CTe 3.0
      --
      vn_fase := 2;
      --
      if ev_nro_chave_cte is not null then
         --
         -- Válida a informação da Chave informada no ERP
         sn_qtde_erro := 0;
         --
         vn_fase := 3;
         -- Armaxena o valor do código do ibge da chave
         vv_uf_ibge_chave := trim( substr(ev_nro_chave_cte, 1, 2) );
         --
         vn_fase := 4;
         --  Armazena o valor da emissão da Chave
         vv_emissao_chave := trim( substr(ev_nro_chave_cte, 3, 4) );
         --
         vn_fase := 5;
         -- Armazena o valor do cnpj da chave
         vv_cnpj_chave := trim( substr(ev_nro_chave_cte, 7, 14) );
         --
         vn_fase := 6;
         -- Armazena o valor do modelo de docto da chave
         vv_cod_mod_chave := trim( substr(ev_nro_chave_cte, 21, 2) );
         --
         vn_fase := 7;
         -- Armazena do valor da série da nota fiscal da chave
         vv_serie_chave := trim( substr(ev_nro_chave_cte, 23, 3) );
         --
         vn_fase := 8;
         -- Armazena o valor do número da nota fiscal
         vv_nro_ct_chave := trim( substr(ev_nro_chave_cte, 26, 9) );
         --
         vn_fase := 9;
         --
         vv_dm_forma_emiss := trim( substr(ev_nro_chave_cte, 35, 1) );
         --
         vn_fase := 10;
         -- Armazena o valor do número aleatório
         sn_cCT_cte := trim( substr(ev_nro_chave_cte, 36, 8) );
         --
         vn_fase := 11;
         -- Armazena o digito do chave
         sn_dig_verif_chave := to_number( substr(ev_nro_chave_cte, 44, 1) );
         --
         vn_fase := 12;
         -- recupera dados da Empresa
         begin
            select lpad( es.ibge_estado, 2, '0' )
                 , ( lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') || lpad(j.dig_cnpj, 2, '0') ) cnpj
              into vv_uf_ibge
                 , vv_cnpj
              from empresa  e
                 , pessoa   p
                 , cidade   c
                 , estado   es
                 , juridica j
             where e.id        = en_empresa_id
               and p.id        = e.pessoa_id
               and c.id        = p.cidade_id
               and es.id       = c.estado_id
               and j.pessoa_id = p.id;
         exception
            when others then
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'Erro ao recuperar os dados da Empresa para criar a Chave de Acesso.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
               --
         end;
         --
         vn_fase := 12.1;
         -- recupera dados da Pessoa/Participante
         if nvl(en_pessoa_id,0) <> 0 then
            --
            begin
               select lpad( es.ibge_estado, 2, '0' )
                    , ( lpad(ju.num_cnpj, 8, '0') || lpad(ju.num_filial, 4, '0') || lpad(ju.dig_cnpj, 2, '0') )
                 into vv_uf_ibge_partic
                    , vv_cnpj_partic
                 from pessoa   pe
                    , juridica ju
                    , cidade   ci
                    , estado   es
                where pe.id        = en_pessoa_id
                  and ju.pessoa_id = pe.id
                  and ci.id        = pe.cidade_id
                  and es.id        = ci.estado_id;
            exception
               when others then
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'Erro ao recuperar os dados do Participante para comparar dados com a Chave de Acesso.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                      , ev_mensagem        => gv_cabec_log
                                      , ev_resumo          => gv_mensagem_log
                                      , en_tipo_log        => erro_de_validacao
                                      , en_referencia_id   => gn_referencia_id
                                      , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                         , est_log_generico  => est_log_generico );
                  --
            end;
            --
         else
            --
            vv_uf_ibge_partic := null;
            vv_cnpj_partic    := null;
            --
         end if;
         --
         -- Inicia a validação dos dados da chave de acesso com os dados informados da Nota Fiscal
         --
         vn_fase := 13;
         -- DM_IND_EMIT, se de emissão própria checar o Código do IBGE da Cidade da empresa em questão, se for de terceiros checar o Código do IBGE da Cidade do participante.
         if nvl(en_dm_ind_emit,0) = 0 then -- 0-emissão própria
            -- Válida a informação do "Código da UF do emitente do CT-e" - Empresa
            if vv_uf_ibge <> vv_uf_ibge_chave then
               --
               vn_fase := 13.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := '"Código da UF do emitente" informado no Conhec. Transp. ('||vv_uf_ibge||') está diferente do "Código da UF do emitente" '||
                                  '(Empresa) da chave de acesso('||vv_uf_ibge_chave||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
               --
               sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
               --
            end if;
            --
         else -- nvl(en_dm_ind_emit,0) = 1 -- 1-terceiro
            -- Valida a informação do "Código da UF do emitente do CT-e" - Participante
            if vv_uf_ibge_partic is not null and
               vv_uf_ibge_partic <> vv_uf_ibge_chave then
               --
               vn_fase := 13.2;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := '"Código da UF do emitente" informado no Conhec. Transp. ('||vv_uf_ibge_partic||') está diferente do "Código da UF do emitente" '||
                                  '(Participante) da chave de acesso('||vv_uf_ibge_chave||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
               --
               sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
               --
            end if;
            --
         end if;
         --
         vn_fase := 14;
         -- Válida a informação do "Ano e Mês de emissão da NF-e"
         if to_char(ed_dt_hr_emissao, 'YYMM') <> vv_emissao_chave then
            --
            vn_fase := 14.1;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := '"Ano e Mês de emissão" informado no Conhec. Transp. ('
                               || to_char(ed_dt_hr_emissao, 'YYMM') || ') está diferente do "Ano e Mês de emissão" da chave de acesso('
                               || vv_emissao_chave || ')';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
            --
         end if;
         --
         vn_fase := 15;
         -- DM_IND_EMIT, se de emissão própria checar o CNPJ da empresa em questão, se for de terceiros checar o CNPJ do participante.
         if nvl(en_dm_ind_emit,0) = 0 then -- 0-emissão própria
            -- Válida a informação do "CNPJ do emitente" - Empresa
            if vv_cnpj <> vv_cnpj_chave then
               --
               vn_fase := 15.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := '"CNPJ do emitente" informado no Conhec. Transp. ('||vv_cnpj||') está diferente do "CNPJ do emitente" (Empresa) da chave de '||
                                  'acesso('||vv_cnpj_chave||')';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
               --
               sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
               --
            end if;
            --
         else -- nvl(en_dm_ind_emit,0) = 1 -- 1-terceiro
            -- Válida a informação do "CNPJ do emitente" - Participante
            if vv_cnpj_partic is not null and
               vv_cnpj_partic <> vv_cnpj_chave then
               --
               vn_fase := 15.2;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := '"CNPJ do emitente" informado no Conhec. Transp. ('||vv_cnpj||') está diferente do "CNPJ do emitente" (Participante) da '||
                                  'chave de acesso('||vv_cnpj_chave||')';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
               --
               sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
               --
            end if;
            --
         end if;
         --
         vn_fase := 16;
         -- Válida a informação do Modelo do Documento Fiscal
         if ev_cod_mod <> vv_cod_mod_chave then
            --
            vn_fase := 16.1;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := '"Modelo do Documento Fiscal" informado no Conhec. Transp. ('
                               || ev_cod_mod || ') está diferente do "Modelo do Documento Fiscal" da chave de acesso('
                               || vv_cod_mod_chave || ')';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
            --
         end if;
         --
         vn_fase := 17;
         --
         -- Válida a informação da Série do Documento Fiscal
         if lpad( en_serie, 3, '0' ) <> vv_serie_chave then
            --
            vn_fase := 17.1;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := '"Série do Conhec. Transp." informado no CT-e ('
                               || lpad( en_serie, 3, '0' ) || ') está diferente do "Série do Conhec. Transp." da chave de acesso('
                               || vv_serie_chave || ')';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
            --
         end if;
         --
         vn_fase := 18;
         -- Válida a informação do Número do Documento Fiscal
         if lpad( en_nro_ct, 9, '0' ) <> vv_nro_ct_chave then
            --
            vn_fase := 18.1;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := '"Número do Conhec. Transp." informado no CT-e ('
                               || lpad( en_nro_ct, 9, '0' ) || ') está diferente do "Número do Conhec. Transp." da chave de acesso('
                               || vv_nro_ct_chave || ')';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
            --
         end if;
         --
         vn_fase := 19;
         -- valida a forma de emissão
/*         if to_char(en_dm_forma_emiss) <> vv_dm_forma_emiss and nvl(gt_row_conhec_transp.dm_ind_emit,0) = 0 then
            --
            vn_fase := 19.1;
            --
            gv_mensagem_log := '"Forma de emissão" informado na Nota Fiscal ('
                               || lpad( en_dm_forma_emiss, 9, '0' ) || ') está diferente do "Forma de emissão" da chave de acesso('
                               || vv_dm_forma_emiss || ')';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
            --
         end if;*/
         --
         vn_fase := 20;
         -- Cálcula o digito da chave
         vn_dig_verif_chave := pk_csf.fkg_mod_11 ( ev_codigo => substr(ev_nro_chave_cte, 1, 43) );
         --
         vn_fase := 21;
         -- Verifica se o digito da chave é diferente do digito cálculado
         if vn_dig_verif_chave <> nvl(sn_dig_verif_chave, -1) then
            --
            vn_fase := 21.1;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Dígito verificador da Chave de Acesso calculado ('
                               || vn_dig_verif_chave || ') está diferente do Dígito da chave de acesso('
                               || sn_dig_verif_chave || ')';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            sn_qtde_erro := nvl(sn_qtde_erro,0) + 1;
            --
         end if;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_chave_acesso fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_chave_acesso;

-------------------------------------------------------------------------------------------------------
-- Procedimento integra a Chave do Conhecimento de Transporte
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_CTChave_Refer ( est_log_generico   in out nocopy dbms_sql.number_table
                                   , en_empresa_id      in            Empresa.id%TYPE
                                   , en_conhectransp_id in            Conhec_Transp.id%TYPE
                                   , ed_dt_hr_emissao   in            Conhec_Transp.dt_hr_emissao%TYPE
                                   , ev_cod_mod         in            Mod_Fiscal.cod_mod%TYPE
                                   , en_serie           in            Conhec_Transp.serie%TYPE
                                   , en_nro_ct          in            Conhec_Transp.nro_ct%TYPE
                                   , en_dm_forma_emiss  in            Conhec_Transp.dm_forma_emiss%type
                                   , esn_cCT_cte        in out nocopy Conhec_Transp.cCT_cte%TYPE
                                   , sn_dig_verif_chave out           Conhec_Transp.dig_verif_chave%TYPE
                                   , sv_nro_chave_cte   out           Conhec_Transp.nro_chave_cte%TYPE )
is
   --
   vn_fase           number := 0;
   vv_cnpj           varchar2(14) := null;
   vv_uf_ibge        varchar2(2)  := null;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_nro_ct,0) > 0 and ev_cod_mod in ('57', '67') then  --Atualização CTe 3.0
      --
      vn_fase := 2;
      --
      sv_nro_chave_cte := pk_csf.fkg_chave_ct ( en_conhectransp_id => en_conhectransp_id );
      --
      vn_fase := 3;
      -- recupera dados da Empresa
      begin
         select lpad( es.ibge_estado, 2, '0' )
              , ( lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') || lpad(j.dig_cnpj, 2, '0') ) cnpj
           into vv_uf_ibge
              , vv_cnpj
           from Empresa  e
              , Pessoa   p
              , cidade   c
              , estado   es
              , Juridica j
          where e.id        = en_empresa_id
            and p.id        = e.pessoa_id
            and c.id        = p.cidade_id
            and es.id       = c.estado_id
            and j.pessoa_id = p.id;
      exception
         when others then
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Erro ao recuperar os dados da Empresa para criar a Chave de Acesso.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
            --
      end;
      --
      vn_fase := 4;
      --
      esn_cCT_cte := FKG_GERA_CCT_CTE_RAND;
      --
      vn_fase := 6;
      -- Monta a Chave antes de cálcular o dígito
      sv_nro_chave_cte := vv_uf_ibge
                          || to_char(ed_dt_hr_emissao, 'YYMM')
                          || vv_cnpj
                          || ev_cod_mod
                          || lpad( en_serie, 3, '0' )
                          || lpad( en_nro_ct, 9, '0' )
                          || en_dm_forma_emiss
                          || lpad ( esn_cCT_cte, 8, '0' );
      --
      vn_fase := 7;
      -- Cálculo do digito verificador ao modulo 11
      sn_dig_verif_chave := pk_csf.fkg_mod_11 ( ev_codigo => sv_nro_chave_cte );
      sv_nro_chave_cte   := sv_nro_chave_cte || sn_dig_verif_chave;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_CTChave_Refer fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_CTChave_Refer;

-------------------------------------------------------------------------------------------------------
--| Função cria o Lote de Envio da Nota Fiscal e retorna o ID

function fkg_integr_lote_cte ( est_log_generico     in out nocopy  dbms_sql.number_table
                             , en_empresa_id        in             Empresa.id%type
                             , en_modfiscal_id      in             Mod_Fiscal.id%type  --Atualização CTe 3.0
                             )
         return lote_cte.id%TYPE
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%type;
   vn_lote_id        lote_cte.id%type;
   vn_modfiscal_id   mod_fiscal.id%type;  --Atualização CTe 3.0
   --
begin
   -- Monta cabeçalho do Lote para informação na validação
   -- Empresa
   vn_fase := 1;
   --
   if nvl(en_empresa_id,0) > 0 then
      --
      gv_cabec_log := pk_csf.fkg_nome_empresa ( en_empresa_id => en_empresa_id );
      --
   end if;
   --
   vn_fase := 2;
   --
   -- Válida se a empresa é válida
   if pk_csf.fkg_empresa_id_valido ( en_empresa_id => en_empresa_id ) = false then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Empresa" (' || en_empresa_id || ') está incorreta para a criação do lote do CT-e.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
						  , en_referencia_id   => gn_referencia_id);  -- #66443
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 3;
   --
   --Atualização CTe 3.0
   if en_modfiscal_id is null then
      vn_modfiscal_id := pk_csf.fkg_Mod_Fiscal_id ('57');
   else
      vn_modfiscal_id := en_modfiscal_id;
   end if;
   --
   -- Se não houve erro na válidação insere os dados
   vn_fase := 99;
   --
   if nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 99.1;
      --
      select lotecte_seq.nextval
        into vn_lote_id
        from dual;
      --
      vn_fase := 99.2;
      --
      insert into lote_cte ( id
                           , empresa_id
                           , dm_situacao
                           , dm_tp_amb
                           , dm_forma_emiss
                           , dt_abert
                           , modfiscal_id  --Atualização CTe 3.0
                           )
                    values ( vn_lote_id
                           , en_empresa_id
                           , 0
                           , pk_csf.fkg_tp_amb_empresa ( en_empresa_id )
                           , pk_csf.fkg_forma_emiss_empresa ( en_empresa_id )
                           , sysdate
                           , vn_modfiscal_id  --Atualização CTe 3.0
                           );
      --
   end if;
   --
   vn_fase := 99.3;
   --
   return vn_lote_id;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na fkg_integr_lote_cte fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
							 , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end fkg_integr_lote_cte;

-------------------------------------------------------------------------------------------------------
-- Re-envia lote que teve erro ao ser enviado a SEFAZ
-------------------------------------------------------------------------------------------------------
procedure pkb_reenvia_lote_cte
is
   --
   vn_fase number := 0;
   --
   cursor c_lote is
   select l.*
     from Lote_Cte  l
    where l.dm_situacao = 3 -- Erro ao enviar Lote a SEFAZ
      and l.cod_msg     = 999
      and exists ( select 1 from conhec_transp ct
                    where ct.lotecte_id = l.id
                      and ct.dm_st_proc = 5
                      and nvl(ct.msgwebserv_id,0) <= 0
                      and ct.motivo_resp is null );
   --
begin
   --
   vn_fase := 1;
   --
   for rec in c_lote loop
      exit when c_lote%notfound or (c_lote%notfound) is null;
      --
      vn_fase := 2;
      --
      update conhec_transp set dm_st_proc = 1
                             , dt_st_proc = sysdate
       where lotecte_id = rec.id;
      --
      vn_fase := 3;
      --
      update Lote_Cte set dm_situacao = 0
       where id = rec.id;
      --
      vn_fase := 4;
      --
      commit;
      --
   end loop;
   --
   vn_fase := 5;
   --
   for rec in c_lote loop
      exit when c_lote%notfound or (c_lote%notfound) is null;
      --
      vn_fase := 5.1;
      --
      update conhec_transp set dm_st_proc = 1
                             , lotecte_id = null
       where lotecte_id = rec.id;
      --
      vn_fase := 5.2;
      --
      commit;
      --
   end loop;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_reenvia_lote_cte fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , ev_obj_referencia  => 'CONHEC_TRANSP'
						  , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end pkb_reenvia_lote_cte;

-------------------------------------------------------------------------------------------------------
-- Procedimento ajusta lotes que estão com a situação 2-concluído e suas notas não
-------------------------------------------------------------------------------------------------------
PROCEDURE PKB_AJUSTA_LOTE_CTE ( EN_MULTORG_ID IN MULT_ORG.ID%TYPE )
IS
   --
   vn_fase number := 0;
   --
   cursor c_lote ( en_multorg_id in mult_org.id%type ) is
   select distinct ct.id
     from empresa       em
        , conhec_transp ct
        , lote_cte      l
    where em.multorg_id  = en_multorg_id
      and ct.empresa_id  = em.id
      and ct.dm_st_proc in (0, 1, 2, 3)
      and l.id           = ct.lotecte_id
      and l.dm_situacao  = 2 -- lote concluído
      and not exists (select 1 from conhec_transp_canc ctc where ctc.conhectransp_id = ct.id)
    order by 1;
   --
begin
   --
   vn_fase := 1;
   --
   for rec in c_lote ( en_multorg_id => en_multorg_id )
   loop
      --
      exit when c_lote%notfound or (c_lote%notfound) is null;
      --
      vn_fase := 2;
      --
      update conhec_transp set dm_st_proc = 1, lotecte_id = null
       where id = rec.id;
      --
   end loop;
   --
   vn_fase := 3;
   --
   commit;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na PKB_AJUSTA_LOTE_CTE fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , ev_obj_referencia  => 'CONHEC_TRANSP'
						  , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end PKB_AJUSTA_LOTE_CTE;

-------------------------------------------------------------------------------------------------------
-- Procedimento excluir lotes sem Conhecimento de Transportes
-------------------------------------------------------------------------------------------------------
procedure pkb_excluir_lote_sem_cte ( en_multorg_id in mult_org.id%type default 0)
is
   --
   vn_fase           number := 0;
   vn_loggenerico_id log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   delete from Lote_Cte l
    where l.dm_situacao <> 2
      and l.empresa_id in (select em.id
                             from empresa em
                            where em.multorg_id = nvl(en_multorg_id,em.multorg_id))
      and not exists ( select 1
                         from Conhec_Transp ct
                        where ct.lotecte_id = l.id );
   --
   vn_fase := 2;
   --
   commit;
   --
exception
   when others then
      --
      rollback;
      --
      gv_mensagem_log := 'Erro na pkb_excluir_lote_sem_cte fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
						  , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end pkb_excluir_lote_sem_cte;

-------------------------------------------------------------------------------------------------------
-- Processo de criação do Lote de Conhecimento de Transportes
-------------------------------------------------------------------------------------------------------
procedure pkb_gera_lote_cte ( en_multorg_id in mult_org.id%type )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_lote_id         Lote_Cte.id%TYPE := null;
   vn_qtde_cte        number := 0;
   vt_log_generico    dbms_sql.number_table;
   --
   cursor c_empresa ( en_multorg_id in mult_org.id%type ) is
   select e.id                empresa_id
        , e.cod_matriz        cod_matriz
        , e.cod_filial        cod_filial
        , e.max_qtd_nfe_lote  max_qtd_nfe_lote
     from empresa e
    where e.multorg_id  = en_multorg_id
      and e.dm_situacao = 1 -- ativo
    order by e.id;
   --
   cursor c_conhec_transp ( en_empresa_id Empresa.id%TYPE ) is
   select ct.id  conhectransp_id
        , ct.modfiscal_id
     from Conhec_transp  ct
        , Mod_Fiscal     mf
    where ct.empresa_id  = en_empresa_id
      and ct.dm_st_proc  = 1 -- Aguardando processamento
      and ct.dm_ind_emit = 0 -- Emissão Própria
      and ct.lotecte_id is null
      and mf.id          = ct.modfiscal_id
      and mf.cod_mod     in ('57')  -- CT-e
      and not exists ( select 1
                         from Conhec_Transp_Canc ctc
                        where ctc.conhectransp_id = ct.id )
    order by 1;
   --
   cursor c_conhec_transp_os ( en_empresa_id Empresa.id%TYPE ) is
   select ct.id  conhectransp_id
        , ct.modfiscal_id
     from Conhec_transp  ct
        , Mod_Fiscal     mf
    where ct.empresa_id  = en_empresa_id
      and ct.dm_st_proc  = 1 -- Aguardando processamento
      and ct.dm_ind_emit = 0 -- Emissão Própria
      and ct.lotecte_id is null
      and mf.id          = ct.modfiscal_id
      and mf.cod_mod     in ('67')  -- CT-e Outros Serviços   --Atualização CTe 3.0
      and not exists ( select 1
                         from Conhec_Transp_Canc ctc
                        where ctc.conhectransp_id = ct.id )
    order by 1;
   --
begin
   --
   vn_fase := 1;
   -- Inicia a criação de lote por empresa
   for rec_emp in c_empresa ( en_multorg_id => en_multorg_id )
   loop
      --
      exit when c_empresa%notfound or c_empresa%notfound is null;
      --
      vn_fase := 2;
      --
      vn_lote_id  := 0;
      vn_qtde_cte := 0;
      --
      -- Geração de lote para os conhecimentos de transporte com modelo fiscal (57 - Conhecimento de Transporte Eletrônico)
      -- Foi criado o cursor c_conhec_transp_os pelo Marcelo Ono para que os lotes fossem diferentes para o mod. 57 e 67
      for rec_cte in c_conhec_transp( rec_emp.empresa_id ) loop
         exit when c_conhec_transp%notfound or c_conhec_transp%notfound is null;
         --
         vn_fase := 3;
         -- Verifica se não existe lote e o cria "OU" se o número de Conhec. de Transporte for maior ou igual a 50, zero o lote para a criação de um novo lote
         if (nvl(vn_lote_id,0) <= 0 or nvl(vn_qtde_cte,0) > nvl(rec_emp.max_qtd_nfe_lote,0) ) then
            --
            vn_fase := 4;
            --
            vt_log_generico.delete;
            --
            vn_fase := 5;
            --
            vn_lote_id := fkg_integr_lote_cte ( est_log_generico     => vt_log_generico
                                              , en_empresa_id        => rec_emp.empresa_id
                                              , en_modfiscal_id      => rec_cte.modfiscal_id);  --Atualização CTe 3.0
            --
            vn_fase := 6;
            -- Se houve erro ao criar o lote sai do processo de conhec. de transp.
            if nvl(vt_log_generico.count,0) > 0 then
               --
               exit;
               --
            end if;
            --
         end if;
         --
         vn_fase := 7;
         -- Atualiza a Ct-e com o Id do Lote
         update Conhec_transp set lotecte_id = vn_lote_id
          where id = rec_cte.conhectransp_id;
         --
         vn_fase := 8;
         --
         vn_qtde_cte := nvl(vn_qtde_cte,0) + 1;
         --
      end loop;
      --
      vn_fase := 9;
      --
      vn_lote_id  := 0;
      vn_qtde_cte := 0;
      --
      vn_fase := 10;
      --
      -- Geração do lote para os conhecimentos de transporte com modelo fiscal (Conhecimento de Transporte Eletrônico - Outros Serviços)
      -- Foi criado o cursor c_conhec_transp_os pelo Marcelo Ono para que os lotes fossem diferentes para o mod. 57 e 67
      for rec_cte_os in c_conhec_transp_os ( rec_emp.empresa_id ) loop
         exit when c_conhec_transp_os%notfound or c_conhec_transp_os%notfound is null;
         --
         vn_fase := 11;
         -- Verifica se não existe lote e o cria "OU" se o número de Conhec. de Transporte for maior ou igual a 50, zero o lote para a criação de um novo lote
         if (nvl(vn_lote_id,0) <= 0 or nvl(vn_qtde_cte,0) > nvl(rec_emp.max_qtd_nfe_lote,0) ) then
            --
            vn_fase := 12;
            --
            vt_log_generico.delete;
            --
            vn_fase := 13;
            --
            vn_lote_id := fkg_integr_lote_cte ( est_log_generico     => vt_log_generico
                                              , en_empresa_id        => rec_emp.empresa_id 
                                              , en_modfiscal_id      => rec_cte_os.modfiscal_id);  --Atualização CTe 3.0
            --
            vn_fase := 14;
            --
            -- Se houve erro ao criar o lote sai do processo de conhec. de transp.
            if nvl(vt_log_generico.count,0) > 0 then
               --
               exit;
               --
            end if;
            --
         end if;
         --
         vn_fase := 15;
         -- Atualiza a Ct-e com o Id do Lote
         update Conhec_transp set lotecte_id = vn_lote_id
          where id = rec_cte_os.conhectransp_id;
         --
         vn_fase := 16;
         --
         vn_qtde_cte := nvl(vn_qtde_cte,0) + 1;
         --
      end loop;
      --
      commit;
      --
   end loop;
   --
   vn_fase := 17;
   --
   pkb_excluir_lote_sem_cte ( en_multorg_id => en_multorg_id );
   --
exception
   when others then
      --
      rollback;
      --
      gv_mensagem_log := 'Erro na pkb_gera_lote_cte fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
							 , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end pkb_gera_lote_cte;

-------------------------------------------------------------------------------------------------------
-- Função retorna as notas fiscais que não pode ser inutilizadas
function fkg_ct_nao_inutiliza ( en_empresa_id   in  Inutiliza_Conhec_Transp.empresa_id%TYPE
                              , en_dm_tp_amb    in  Inutiliza_Conhec_Transp.dm_tp_amb%TYPE
                              , ev_cod_mod      in  Mod_Fiscal.cod_mod%TYPE
                              , en_serie        in  Inutiliza_Conhec_Transp.serie%TYPE
                              , en_nro_ini      in  Inutiliza_Conhec_Transp.nro_ini%TYPE
                              , en_nro_fim      in  Inutiliza_Conhec_Transp.nro_fim%TYPE )
          return varchar2
is

   cursor c_conhec_transp is
   select ct.nro_ct
        , ct.serie
        , mf.cod_mod
        , ct.dm_st_proc
     from Conhec_Transp ct
        , Mod_Fiscal   mf
    where ct.empresa_id    = en_empresa_id
      and ct.dm_tp_amb     = en_dm_tp_amb
      and ct.serie         = en_serie
      and ct.nro_ct between en_nro_ini and en_nro_fim
      and ct.dm_ind_emit   = 0  -- Emissão própria
      and mf.id            = ct.modfiscal_id
      and mf.cod_mod       = ev_cod_mod
    order by ct.nro_ct;

   vn_fase number := 0;
   vv_descr varchar2(4000) := null;
   vv_ds_st_proc varchar2(100) := null;

begin

   vn_fase := 1;

   for rec in c_conhec_transp loop
      --
      vn_fase := 2;
      --
      -- Se não for nenhuma das situações de processo
      /*
      5 - Nota rejeitada
      10 - Erro na validação da NOta
      11 - Erro na montagem do XMl
      12 - Erro ao enviar a Nota ao Sefaz
      99 - Erro geral de sistema
      */
      if rec.dm_st_proc not in (5, 10, 11, 12, 13, 15, 16, 99) then
         --
         vn_fase := 3;
         --
         vv_ds_st_proc := substr(pk_csf.fkg_dominio('CONHEC_TRANSP.DM_ST_PROC', rec.dm_st_proc), 1, 100);
         --
         vv_descr := vv_descr || 'Conhecimento de Transporte: ' || rec.nro_ct
                              || ' Série: ' || rec.serie
                              || ' Modelo: ' || rec.cod_mod
                              || ', não pode ser inutilizada pois está a com a Situação: ' || vv_ds_st_proc
                              || chr(10);
         --
      end if;
      --
   end loop;

   return vv_descr;

exception
   when no_data_found then
      return null;
   when others then
      --
      gv_mensagem_log := 'Erro na fkg_ct_nao_inutiliza fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
						  , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end fkg_ct_nao_inutiliza;

-------------------------------------------------------------------------------------------------------
-- Procedimento faz a integração da Inutilização do Conhecimento de Transporte
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_inutilizact ( est_log_generico     in out nocopy dbms_sql.number_table
                                 , est_row_Inutiliza_Ct in out nocopy Inutiliza_Conhec_Transp%rowtype
                                 , ev_cod_mod           in            Mod_Fiscal.cod_mod%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_dm_tp_amb       Inutiliza_Conhec_Transp.dm_tp_amb%TYPE;
   vn_dm_forma_emiss  Inutiliza_Conhec_Transp.dm_forma_emiss%TYPE;
   vn_uf_ibge         Inutiliza_Conhec_Transp.uf_ibge%TYPE;
   vv_cnpj            Inutiliza_Conhec_Transp.cnpj%TYPE;
   vv_id_inut         Inutiliza_Conhec_Transp.id_inut%TYPE;
   vn_modfiscal_id    Inutiliza_Conhec_Transp.modfiscal_id%TYPE;
   vv_usuario_nome    neo_usuario.nome%type := null;
   --
begin
   --
   -- Monta cabeçalho da inutilização para informação na validação
   -- Empresa
   vn_fase := 1.1;
   --
   gv_cabec_log := null;
   gv_cabec_log_item := null;
   --
   if nvl(est_row_Inutiliza_Ct.empresa_id,0) > 0 then
      --
      vn_fase := 1.2;
      --
      gv_cabec_log := 'Empresa: ' || pk_csf.fkg_nome_empresa ( en_empresa_id => est_row_Inutiliza_Ct.empresa_id );
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.3;
   -- Código Modelo
   if ev_cod_mod is not null then
      --
      vn_fase := 1.4;
      --
      gv_cabec_log := gv_cabec_log || 'Modelo: ' || ev_cod_mod;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.5;
   -- Série dos documentos
   if trim(est_row_Inutiliza_Ct.serie) is not null then
      --
      vn_fase := 1.6;
      --
      gv_cabec_log := gv_cabec_log || 'Série: ' || est_row_Inutiliza_Ct.serie;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.61;
   --
   if pk_csf.fkg_is_numerico(est_row_Inutiliza_Ct.serie) then
      --
      est_row_Inutiliza_Ct.serie := to_number(est_row_Inutiliza_Ct.serie);
      --
   end if;
   --
   --
   vn_fase := 1.7;
   -- Número Inicial
   if nvl(est_row_Inutiliza_Ct.nro_ini,0) > 0 then
      --
      vn_fase := 1.8;
      --
      gv_cabec_log := gv_cabec_log || 'Número Inicial: ' || est_row_Inutiliza_Ct.nro_ini;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.9;
   -- Número Final
   if nvl(est_row_Inutiliza_Ct.nro_fim,0) > 0 then
      --
      vn_fase := 1.10;
      --
      gv_cabec_log := gv_cabec_log || 'Número Final: ' || est_row_Inutiliza_Ct.nro_fim;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
-------------------------------------------------------------------------------------------------------
   --| Valida a informação da empresa

   vn_fase := 2;

   -- Valida se a empresa é válida
   if pk_csf.fkg_empresa_id_valido ( en_empresa_id => est_row_Inutiliza_Ct.empresa_id ) = false then
      --
      vn_fase := 2.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Empresa" (' || est_row_Inutiliza_Ct.empresa_id || ') está incorreta.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

-------------------------------------------------------------------------------------------------------
   --
   vn_fase := 3;
   -- Função retorna o tipo de ambiente parametrizado para a empresa
   vn_dm_tp_amb := pk_csf.fkg_tp_amb_empresa ( en_empresa_id => est_row_Inutiliza_Ct.empresa_id );
   --
   vn_fase := 3.1;
   -- Verifica se o tipo de ambiente informado é diferente do tipo de ambiente da empresa
   if est_row_Inutiliza_Ct.dm_tp_amb <> vn_dm_tp_amb then
      --
      vn_fase := 3.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'O Tipo de Ambiente informado na Inutilização (' || est_row_Inutiliza_Ct.dm_tp_amb
                         || ') está divergente do Tipo de Ambiente da Empresa (' || vn_dm_tp_amb || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
-------------------------------------------------------------------------------------------------------
   --
   vn_fase := 4;
   -- Busca a forma de emissão habilitada para a Empresa
   vn_dm_forma_emiss := pk_csf.fkg_forma_emiss_empresa ( en_empresa_id => est_row_Inutiliza_Ct.empresa_id );
   --
   vn_fase := 4.1;
   -- Verifica se a forma de emissão da Inutilização é diferente da forma de emissão da Empresa
   if est_row_Inutiliza_Ct.dm_forma_emiss <> vn_dm_forma_emiss then
      --
      vn_fase := 4.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Forma de Emissão informada na Inutilização (' || est_row_Inutiliza_Ct.dm_forma_emiss
                         || ') está divergente da Forma de Emissão da Empresa (' || vn_dm_forma_emiss || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
-------------------------------------------------------------------------------------------------------
   --
   vn_fase := 5;
   -- Busca os dados da empresa
   begin
      --
      select lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') || lpad(dig_cnpj, 2, '0')
           , to_number(es.ibge_estado)
        into vv_cnpj
           , vn_uf_ibge
        from Empresa   e
           , Pessoa    p
           , Juridica  j
           , Cidade    c
           , Estado    es
       where e.id         = est_row_Inutiliza_Ct.empresa_id
         and p.id         = e.pessoa_id
         and j.pessoa_id  = p.id
         and c.id         = p.cidade_id
         and es.id        = c.estado_id;
      --
   exception
      when no_data_found then
         vv_cnpj    := null;
         vn_uf_ibge := null;
      when others then
         raise_application_error(20101, 'Erro ao recuperar dados da empresa:' || sqlerrm);
   end;
   --
-------------------------------------------------------------------------------------------------------
   --
   vn_fase := 6;
   -- Valida se o código informado é diferente do Código UF_IBGE da Empresa
   if est_row_Inutiliza_Ct.uf_ibge <> vn_uf_ibge then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Código IBGE do Estado informado na Inutilização (' || est_row_Inutiliza_Ct.uf_ibge
                         || ') está divergente do Código IBGE do Estado da Empresa (' || vn_uf_ibge || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
-------------------------------------------------------------------------------------------------------

   vn_fase := 7;

   -- Valida se o CNPJ do emitente é diferente do CNPJ da empresa
   if est_row_Inutiliza_Ct.cnpj <> vv_cnpj then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'CNPJ informado na Inutilização (' || est_row_Inutiliza_Ct.cnpj
                         || ') está divergerte do CNPJ da Empresa (' || vv_cnpj || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

-------------------------------------------------------------------------------------------------------
   --| Valida informação do campo modfical_id
   vn_fase := 8;
   --
   vn_modfiscal_id := pk_csf.fkg_Mod_Fiscal_id ( ev_cod_mod => ev_cod_mod );
   --
   vn_fase := 8.1;
   -- Valida a informação do modelo fiscal
   if est_row_Inutiliza_Ct.modfiscal_id <> vn_modfiscal_id then
      --
      vn_fase := 8.2;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Modelo do Documento Fiscal informado na Inutilização está divergente do Modelo Fiscal (' || ev_cod_mod || ').';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

-------------------------------------------------------------------------------------------------------
   --
   vn_fase := 9;
   -- Valida informação da série
   if trim(est_row_Inutiliza_Ct.serie) is null then
      --
      vn_fase := 9.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Série do Conhec. Transp." deve ser informada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

-------------------------------------------------------------------------------------------------------

   vn_fase := 10;

   -- Valida informações o Número inicial e final de inutilização

   if nvl(est_row_Inutiliza_Ct.nro_ini,0) <= 0 then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Número da CT-e inicial a ser inutilizado" deve ser informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

   vn_fase := 11;

   if nvl(est_row_Inutiliza_Ct.nro_fim,0) <= 0 then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := '"Número da CT-e final a ser inutilizado" deve ser informado.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

   vn_fase := 12;

   -- Valida se o nro inicial é maior que o nro final
   if nvl(est_row_Inutiliza_Ct.nro_ini,0) > nvl(est_row_Inutiliza_Ct.nro_fim,0) then
      --
      vn_fase := 12.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Número inicial não pode ser maior que o número final.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

-------------------------------------------------------------------------------------------------------

   vn_fase := 13;

   -- Valida a informação da justificativa do Conhecimento de Transporte
   if nvl(length(est_row_Inutiliza_Ct.justif),0) < 15 then
      --
      vn_fase := 13.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Justificativa do Conhec. Transp. deve ter no mínimo 15 caracteres.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

-------------------------------------------------------------------------------------------------------

   vn_fase := 14;

   -- Valida se o intervalo do Conhecimento de Transporte pode ser cancelada
   gv_mensagem_log := null;
   --
   vn_fase := 14.1;
   -- Função retorna os Ct-e(s) que não podem ser inutilizadas
   gv_mensagem_log := fkg_ct_nao_inutiliza ( en_empresa_id   => est_row_Inutiliza_Ct.empresa_id
                                           , en_dm_tp_amb    => est_row_Inutiliza_Ct.dm_tp_amb
                                           , ev_cod_mod      => ev_cod_mod
                                           , en_serie        => est_row_Inutiliza_Ct.serie
                                           , en_nro_ini      => est_row_Inutiliza_Ct.nro_ini
                                           , en_nro_fim      => est_row_Inutiliza_Ct.nro_fim );
   --
   vn_fase := 15;
   --
   if gv_mensagem_log is not null then
      --
      vn_fase := 15.1;
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;

-------------------------------------------------------------------------------------------------------

   vn_fase := 16;
   -- Identificador da TAG a ser assinada formada com Código da UF(2) + CNPJ(14) + modelo(2) + série(3)
   -- + nro inicial(9) e nro final(9) precedida do literal ID
   vv_id_inut := 'ID'|| lpad(vn_uf_ibge, 2, '0')
                 || vv_cnpj
                 || ev_cod_mod 
                 || lpad(est_row_Inutiliza_Ct.serie, 3, '0')
                 || lpad(est_row_Inutiliza_Ct.nro_ini, 9, '0')
                 || lpad(est_row_Inutiliza_Ct.nro_fim, 9, '0');
   --
   vn_fase := 17;
   -- Verifica se o Identificador da TAG a ser Assinada é diferente do informado
   if est_row_Inutiliza_Ct.id_inut <> vv_id_inut then
      --
      vn_fase := 17.1;
      --
      gv_mensagem_log := null;
      --
      gv_mensagem_log := 'Identificador da TAG a ser Assinada (' || est_row_Inutiliza_Ct.id_inut
                         || ') está divergente do Identificador da TAG a ser Assinada (' || vv_id_inut || ') cálculada.';
      --
      vn_loggenerico_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => ERRO_DE_VALIDACAO
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                          , est_log_generico  => est_log_generico );
      --
   end if;
   --
   -- situação de integração
   --
-------------------------------------------------------------------------------------------------------

   -- Se não houve erro na válidação insere os dados
   vn_fase := 99;
   --
   if nvl(est_log_generico.count,0) = 0 then
      --
      vn_fase := 99.1;
      --
      if nvl(est_row_Inutiliza_Ct.usuario_id,0) > 0 then
         vv_usuario_nome := pk_csf.fkg_usuario_nome ( en_usuario_id => est_row_Inutiliza_Ct.usuario_id );
      else
         vv_usuario_nome := 'Integração';
      end if;
      --
      gv_mensagem_log := 'Usuário que solicitou o cancelamento: '||vv_usuario_nome||'.';
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                       , ev_mensagem        => gv_cabec_log
                       , ev_resumo          => gv_mensagem_log
                       , en_tipo_log        => info_canc_nfe
                       , en_referencia_id   => gn_referencia_id
                       , ev_obj_referencia  => gv_obj_referencia
                       , en_dm_impressa     => 1 );
      --
      vn_fase := 99.2;
      -- Altera situação para "Aberto"
      update inutiliza_conhec_transp set dm_situacao = 0
                                       , ano = substr(est_row_Inutiliza_Ct.ano, 3, 2)
       where id = est_row_Inutiliza_Ct.id
         and dm_situacao = 5; -- Não Validada
      --
      vn_fase := 99.3;
      -- Atualiza as Nota Fiscais com o ID da Inutilização
      update conhec_transp set inutilizaconhectransp_id = est_row_Inutiliza_Ct.id
                             , serie = est_row_Inutiliza_Ct.serie
       where id in (
                    select ct.id
                      from conhec_transp  ct
                         , Mod_Fiscal   mf
                     where ct.empresa_id    = est_row_Inutiliza_Ct.empresa_id
                       and ct.dm_ind_emit   = 0  -- Emissão própria
                       and ct.dm_tp_amb     = est_row_Inutiliza_Ct.dm_tp_amb
                       and ct.serie         = est_row_Inutiliza_Ct.serie
                       and ct.nro_ct between est_row_Inutiliza_Ct.nro_ini
                                         and est_row_Inutiliza_Ct.nro_fim
                       and mf.id            = ct.modfiscal_id
                       and mf.cod_mod       = ev_cod_mod
                   );
      --
      vn_fase := 99.4;
      --
      commit;
      --
   else
      --
      vn_fase := 99.5;
      -- Altera a Situação da Inutilização para 6-Erro de Validação
      update inutiliza_conhec_transp set dm_situacao = 6
       where id = est_row_Inutiliza_Ct.id
         and dm_situacao = 5; -- Não Validada
      --
      commit;
      --
   end if;
   --
-------------------------------------------------------------------------------------------------------

exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_inutilizact fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end pkb_integr_inutilizact;

-------------------------------------------------------------------------------------------------------------------
-- Procedimento para atualizar CT-e inutilizadas
-- Depois de Homologado a Inutilização, verifica se tem algum CTe vinculado e
-- Altera o DM_ST_PROC para 8-Inutilizada e a Situação do Documento para "05-NF-e ou CT-e - Numeração inutilizada"
-------------------------------------------------------------------------------------------------------------------
procedure pkb_atual_cte_inut ( en_multorg_id in mult_org.id%type )
is
   --
   vn_fase            number := 0;
   vn_seq_nro_ct      inutiliza_conhec_transp.nro_ini%type;
   vn_dm_st_integra   conhec_transp.dm_st_integra%type;
   vn_conhectransp_id conhec_transp.id%type;
   --
   cursor c_inut ( en_multorg_id in mult_org.id%type ) is
      select ic.*
           , em.dm_tipo_integr
           , mf.cod_mod
        from empresa                 em
           , inutiliza_conhec_transp ic
           , mod_fiscal              mf
       where em.multorg_id   = en_multorg_id
         and ic.empresa_id   = em.id
         and ic.dm_situacao  = 2 -- Concluído (Envio e Retorno a SEFAZ com sucesso)
         and ic.dm_integr_ct = 0 -- Sem Conhecimento de Transporte: 0-não, 1-sim
         and mf.id           = ic.modfiscal_id
         and mf.cod_mod     in ('57', '67')  --Atualização CTe 3.0
       order by ic.id;
   --
begin
   --
   vn_fase := 1;
   -- Inutlização sem Conhecimento de Transporte
   for rec in c_inut ( en_multorg_id => en_multorg_id )
   loop
      --
      vn_fase := 2;
      --
      vn_seq_nro_ct := rec.nro_ini;
      --
      if rec.dm_tipo_integr = 3 then -- Integração através de view de banco de dados (table/view)
         vn_dm_st_integra := 7; -- Integração por view de banco de dados
      else
         vn_dm_st_integra := 5; -- Integrado via arquivo texto (ENT)
      end if;
      --
      vn_fase := 3;
      --
      while vn_seq_nro_ct <= rec.nro_fim loop
         --
         vn_fase := 3.1;
         -- Recupera o ID do conhecimento de transporte
         vn_conhectransp_id := pk_csf_ct.fkg_busca_conhectransp_id ( en_empresa_id      => rec.empresa_id
                                                                   , ev_cod_part        => null
                                                                   , ev_cod_mod         => rec.cod_mod  --Atualização CTe 3.0
                                                                   , ev_serie           => rec.serie
                                                                   , ev_subserie        => null
                                                                   , en_nro_ct          => vn_seq_nro_ct
                                                                   , en_dm_ind_oper     => null
                                                                   , en_dm_ind_emit     => 0 -- 0-emissão própria, 1-terceiros
                                                                   , en_dm_arm_cte_terc => 0 ); -- 0-não, 1-sim
         --
         vn_fase := 3.2;
         --
         if nvl(vn_conhectransp_id,0) <= 0 then
            --
            vn_fase := 3.3;
            --
            begin
               select conhectransp_seq.nextval
                 into vn_conhectransp_id
                 from dual;
            exception
               when others then
                  --
                  gv_mensagem_log := 'Problemas ao recuperar sequence p/conhec_transp (pk_csf_api_ct.pkb_atual_cte_inut) fase('||vn_fase||'). Erro = '||sqlerrm;
                  --
                  declare
                     vn_loggenerico_id  log_generico_ct.id%type;
                  begin
                     pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                         , ev_mensagem       => gv_cabec_log
                                         , ev_resumo         => gv_mensagem_log
                                         , en_tipo_log       => erro_de_sistema
                                         , ev_obj_referencia => 'CONHEC_TRANSP'
										 , en_referencia_id   => gn_referencia_id);  -- #66443
                  exception
                     when others then
                        null;
                  end;
                  --
                  raise_application_error (-20101, gv_mensagem_log);
                  --
            end;
            --
            vn_fase := 3.4;
            --
            begin
               insert into conhec_transp ( id
                                         , dt_hr_ent_sist
                                         , empresa_id
                                         , lotecte_id
                                         , inutilizaconhectransp_id
                                         , pessoa_id
                                         , sitdocto_id
                                         , versao
                                         , id_tag_cte
                                         , uf_ibge_emit
                                         , cct_cte
                                         , cfop
                                         , cfop_id
                                         , nat_oper
                                         , dm_for_pag
                                         , modfiscal_id
                                         , serie
                                         , subserie
                                         , nro_ct
                                         , dt_hr_emissao
                                         , dm_tp_imp
                                         , dm_forma_emiss
                                         , dig_verif_chave
                                         , nro_chave_cte
                                         , dm_tp_amb
                                         , dm_tp_cte
                                         , dm_proc_emiss
                                         , vers_apl_cte
                                         , chave_cte_ref
                                         , ibge_cidade_emit
                                         , descr_cidade_emit
                                         , sigla_uf_emit
                                         , dm_modal
                                         , dm_tp_serv
                                         , ibge_cidade_ini
                                         , descr_cidade_ini
                                         , sigla_uf_ini
                                         , ibge_cidade_fim
                                         , descr_cidade_fim
                                         , sigla_uf_fim
                                         , dm_retira
                                         , det_retira
                                         , dm_tomador
                                         , inf_adic_fisco
                                         , dm_st_proc
                                         , dt_st_proc
                                         , dm_impressa
                                         , dm_st_email
                                         , dm_st_integra
                                         , dm_aut_sefaz
                                         , dt_aut_sefaz
                                         , id_usuario_erp
                                         , usuario_id
                                         , impressora_id
                                         , vias_dacte_custom
                                         , nro_tentativas_impr
                                         , dt_ult_tenta_impr
                                         , vers_apl
                                         , dt_hr_recbto
                                         , nro_protocolo
                                         , digest_value
                                         , msgwebserv_id
                                         , cod_msg
                                         , motivo_resp
                                         , dm_ind_oper
                                         , dm_ind_emit
                                         , dm_ind_frt
                                         , inforcompdctofiscal_id
                                         , cod_cta
                                         , dt_sai_ent
                                         , sistorig_id
                                         , unidorg_id
                                         , cte_proc_xml
                                         , dt_cont
                                         , just_cont
                                         , dm_arm_cte_terc
                                         , nro_chave_cte_adic
                                         , natoper_id
                                         , nro_carreg )
                                  values ( vn_conhectransp_id             -- id
                                         , rec.dt_inut                    -- dt_hr_ent_sist
                                         , rec.empresa_id                 -- empresa_id
                                         , null                           -- lotecte_id
                                         , rec.id                         -- inutilizaconhectransp_id
                                         , null                           -- pessoa_id
                                         , pk_csf.fkg_sit_docto_id('05')  -- sitdocto_id
                                         , null                           -- versao
                                         , 'CTe'                          -- id_tag_cte
                                         , rec.uf_ibge                    -- uf_ibge_emit
                                         , null                           -- cct_cte
                                         , 1000                           -- cfop
                                         , 1                              -- cfop_id
                                         , 'Inutilização'                 -- nat_oper
                                         , 2                              -- dm_for_pag
                                         , rec.modfiscal_id               -- modfiscal_id   --Atualização CTe 3.0
                                         , rec.serie                      -- serie
                                         , null                           -- subserie
                                         , vn_seq_nro_ct                  -- nro_ct
                                         , rec.dt_inut                    -- dt_hr_emissao
                                         , 1                              -- dm_tp_imp
                                         , rec.dm_forma_emiss             -- dm_forma_emiss
                                         , null                           -- dig_verif_chave
                                         , null                           -- nro_chave_cte
                                         , rec.dm_tp_amb                  -- dm_tp_amb
                                         , 0                              -- dm_tp_cte
                                         , 0                              -- dm_proc_emiss
                                         , 1                              -- vers_apl_cte
                                         , null                           -- chave_cte_ref
                                         , 9999999                        -- ibge_cidade_emit
                                         , 'SC'                           -- descr_cidade_emit
                                         , rec.uf_ibge                    -- sigla_uf_emit
                                         , '01'                           -- dm_modal
                                         , 0                              -- dm_tp_serv
                                         , 9999999                        -- ibge_cidade_ini
                                         , 'SC'                           -- descr_cidade_ini
                                         , rec.uf_ibge                    -- sigla_uf_ini
                                         , 9999999                        -- ibge_cidade_fim
                                         , 'SC'                           -- descr_cidade_fim
                                         , rec.uf_ibge                    -- sigla_uf_fim
                                         , 0                              -- dm_retira
                                         , null                           -- det_retira
                                         , 0                              -- dm_tomador
                                         , null                           -- inf_adic_fisco
                                         , 8                              -- dm_st_proc
                                         , rec.dt_inut                    -- dt_st_proc
                                         , 3                              -- dm_impressa
                                         , 4                              -- dm_st_email
                                         , vn_dm_st_integra               -- dm_st_integra
                                         , 1                              -- dm_aut_sefaz
                                         , rec.dt_inut                    -- dt_aut_sefaz
                                         , null                           -- id_usuario_erp
                                         , null                           -- usuario_id
                                         , null                           -- impressora_id
                                         , null                           -- vias_dacte_custom
                                         , null                           -- nro_tentativas_impr
                                         , null                           -- dt_ult_tenta_impr
                                         , null                           -- vers_apl
                                         , null                           -- dt_hr_recbto
                                         , null                           -- nro_protocolo
                                         , null                           -- digest_value
                                         , null                           -- msgwebserv_id
                                         , null                           -- cod_msg
                                         , null                           -- motivo_resp
                                         , 1                              -- dm_ind_oper
                                         , 0                              -- dm_ind_emit
                                         , 9                              -- dm_ind_frt
                                         , null                           -- inforcompdctofiscal_id
                                         , null                           -- cod_cta
                                         , null                           -- dt_sai_ent
                                         , null                           -- sistorig_id
                                         , null                           -- unidorg_id
                                         , null                           -- cte_proc_xml
                                         , null                           -- dt_cont
                                         , null                           -- just_cont
                                         , 0                              -- dm_arm_cte_terc
                                         , null                           -- nro_chave_cte_adic
                                         , null                           -- natoper_id
                                         , null );                        -- nro_carreg
            exception
               when others then
                  --
                  gv_mensagem_log := 'Problemas ao incluir conhec_transp (pk_csf_api_ct.pkb_atual_cte_inut) fase('||vn_fase||'). Erro = '||sqlerrm;
                  --
                  declare
                     vn_loggenerico_id  log_generico_ct.id%type;
                  begin
                     pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                         , ev_mensagem       => gv_cabec_log
                                         , ev_resumo         => gv_mensagem_log
                                         , en_tipo_log       => erro_de_sistema
                                         , ev_obj_referencia => 'CONHEC_TRANSP'
										 , en_referencia_id   => gn_referencia_id);  -- #66443
                  exception
                     when others then
                        null;
                  end;
                  --
                  raise_application_error (-20101, gv_mensagem_log);
                  --
            end;
            --
            vn_fase := 3.5;
            --
            begin
               insert into conhec_transp_emit( id
                                             , conhectransp_id
                                             , cnpj
                                             , ie
                                             , nome
                                             , nome_fant
                                             , lograd
                                             , nro
                                             , compl
                                             , bairro
                                             , ibge_cidade
                                             , descr_cidade
                                             , cep
                                             , uf
                                             , cod_pais
                                             , descr_pais
                                             , fone
                                             , dm_ind_sn )
                                       values( conhectranspemit_seq.nextval -- id
                                             , vn_conhectransp_id           -- conhectransp_id
                                             , rec.cnpj                     -- cnpj
                                             , 'ISENTA'                     -- ie
                                             , 'Informar pelo XML'          -- nome
                                             , null                         -- nome_fant
                                             , 'SL'                         -- lograd
                                             , 'SN'                         -- nro
                                             , null                         -- compl
                                             , 'SB'                         -- bairro
                                             , 9999999                      -- ibge_cidade
                                             , 'SC'                         -- descr_cidade
                                             , null                         -- cep
                                             , rec.uf_ibge                  -- uf
                                             , null                         -- cod_pais
                                             , null                         -- descr_pais
                                             , null                         -- fone
                                             , 0 );                         -- dm_ind_sn
            exception
               when others then
                  --
                  gv_mensagem_log := 'Problemas ao incluir conhec_transp_emit (pk_csf_api_ct.pkb_atual_cte_inut) fase('||vn_fase||'). Erro = '||sqlerrm;
                  --
                  declare
                     vn_loggenerico_id  log_generico_ct.id%type;
                  begin
                     pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                         , ev_mensagem       => gv_cabec_log
                                         , ev_resumo         => gv_mensagem_log
                                         , en_tipo_log       => erro_de_sistema
                                         , ev_obj_referencia => 'CONHEC_TRANSP'
										 , en_referencia_id   => gn_referencia_id);  -- #66443
                  exception
                     when others then
                        null;
                  end;
                  --
                  raise_application_error (-20101, gv_mensagem_log);
                  --
            end;
            --
         else
            --
            vn_fase := 3.6;
            -- Relaciona a inutilização da CTe
            begin
               update conhec_transp ct
                  set ct.dm_st_proc               = 8 -- Inutilizada
                    , ct.dt_st_proc               = rec.dt_inut
                    , ct.sitdocto_id              = ( select sd.id from sit_docto sd where sd.cd = '05' )
                    , ct.inutilizaconhectransp_id = rec.id
                    , ct.dm_st_integra            = decode(ct.dm_st_integra, 8, ct.dm_st_integra, vn_dm_st_integra)
                where ct.id = vn_conhectransp_id;
            exception
               when others then
                  --
                  gv_mensagem_log := 'Problemas ao atualizar conhec_transp (pk_csf_api_ct.pkb_atual_cte_inut) fase('||vn_fase||'). Erro = '||sqlerrm;
                  --
                  declare
                     vn_loggenerico_id  log_generico_ct.id%type;
                  begin
                     pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                         , ev_mensagem       => gv_cabec_log
                                         , ev_resumo         => gv_mensagem_log
                                         , en_tipo_log       => erro_de_sistema
                                         , ev_obj_referencia => 'CONHEC_TRANSP'
										 , en_referencia_id   => gn_referencia_id);  -- #66443
                  exception
                     when others then
                        null;
                  end;
                  --
                  raise_application_error (-20101, gv_mensagem_log);
                  --
            end;
            --
         end if;
         --
         vn_fase := 3.7;
         --
         vn_seq_nro_ct := nvl(vn_seq_nro_ct,0) + 1;
         --
      end loop;
      --
      vn_fase := 4;
      -- atualiza domínio de relacionamento entre a Inutilização e o CTe
      begin
         update inutiliza_conhec_transp ic
            set ic.dm_integr_ct = 1 -- 1-sim, com conhecimento de transporte
          where ic.id = rec.id;
      exception
         when others then
            --
            gv_mensagem_log := 'Problemas ao atualizar inutiliza_conhec_transp (pk_csf_api_ct.pkb_atual_cte_inut) fase('||vn_fase||'). Erro = '||sqlerrm;
            --
            declare
               vn_loggenerico_id  log_generico_ct.id%type;
            begin
               pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenerico_id
                                   , ev_mensagem       => gv_cabec_log
                                   , ev_resumo         => gv_mensagem_log
                                   , en_tipo_log       => erro_de_sistema
                                   , ev_obj_referencia => 'CONHEC_TRANSP'
								   , en_referencia_id   => gn_referencia_id);  -- #66443
            exception
               when others then
                  null;
            end;
            --
            raise_application_error (-20101, gv_mensagem_log);
            --
      end;
      --
   end loop;
   --
   vn_fase := 5;
   --
   commit;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Problemas em pkb_atual_cte_inut fase('||vn_fase||'). Erro = '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%type;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => erro_de_sistema
                             , ev_obj_referencia  => 'CONHEC_TRANSP'
							 , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end pkb_atual_cte_inut;

-------------------------------------------------------------------------------------------------------------------
-- Procedimento de atualização do campo CONHECTRANSP_ID da tabela CT_CONS_SIT
-- Pega todos os registros que o campo CONHECTRANSP_ID estão nulos, verifica se sua chave de acesso existe
-- na tabela CONHEC_TRANSP, se exitir relacionar o campo CONHECTRANSP_ID.ID com campo CSF_CONS_SIT.CONHECTRANSP_ID
-------------------------------------------------------------------------------------------------------------------
procedure pkb_relac_cte_cons_sit ( en_multorg_id in mult_org.id%type )
  is
     --
     vn_fase            number := 0;
     vn_loggenerico_id  log_generico_ct.id%TYPE;
     vn_conhectransp_id Conhec_Transp.id%TYPE := null;
     vn_ctconssit_id    ct_cons_sit.id%type;
     vn_dm_situacao     ct_cons_sit.dm_situacao%type;
     vn_dm_st_proc      conhec_transp.dm_st_proc%type;
     vn_nro_ct          conhec_transp.nro_ct%type;
     vn_serie           conhec_transp.serie%type;	 
     --
     vn_multorg_id       mult_org.id%type;
     vv_ibge_estado      estado.ibge_estado%type;
     vd_dt_emiss         nota_fiscal.dt_emiss%type;
     vv_cnpj_emit        varchar2(14);
     vv_cod_mod          mod_fiscal.cod_mod%type;
     vv_serie            nota_fiscal.serie%type;
     vn_nro_nf           nota_fiscal.nro_nf%type;
     vn_dm_forma_emiss   nota_fiscal.dm_forma_emiss%type;
     vn_cnf_nfe          nota_fiscal.cnf_nfe%type;
     vn_dig_verif_chave  nota_fiscal.dig_verif_chave%type;
     vv_cod_part         pessoa.cod_part%type;
     vn_pessoa_id        pessoa.id%type;
     --
     cursor c_cons_sit ( en_multorg_id in mult_org.id%type ) is
     select cs.*
       from empresa     em
          , ct_cons_sit cs
      where em.multorg_id              = en_multorg_id
        and cs.empresa_id              = em.id
        and nvl(cs.conhectransp_id,0) <= 0
        and cs.dm_situacao            in (2, 3, 4, 5)
        and length(cs.nro_chave_cte)   = 44
      order by cs.id;
     --
     cursor c_ct ( en_multorg_id in mult_org.id%type ) is
     select ct.id
          , ct.nro_chave_cte
       from empresa       em
          , conhec_transp ct
      where em.multorg_id      = en_multorg_id
        and ct.empresa_id      = em.id
        and ct.dm_st_proc     in (0, 1, 2, 3)
        and ct.dm_arm_cte_terc = 1
      order by 1;
     --
  begin
     --
     vn_fase := 1;
     --
     for rec in c_cons_sit ( en_multorg_id => en_multorg_id )
     loop
        --
        exit when c_cons_sit%notfound or (c_cons_sit%notfound) is null;
        --
        vn_fase := 2;
        --
        vn_conhectransp_id := null;
        -- Verificar se exite CTe para a Chave de Acesso consultada
        --vn_conhectransp_id := pk_csf.fkg_conhectransp_id_pela_chave ( en_nro_chave_cte => rec.nro_chave_cte );
        -- a função não considera conhecimento de transporte como sendo de armazenamento.
        begin
           select max(ct.id)
             into vn_conhectransp_id
             from Conhec_Transp ct
            where ct.nro_chave_cte   = rec.nro_chave_cte
              and ct.dm_arm_cte_terc = 1;
        exception
           when others then
              vn_conhectransp_id := 0;
        end;
        --
        vn_fase := 3;
        --
        vn_dm_situacao := rec.dm_situacao;
        --
        if vn_dm_situacao = 2 then -- autorizado
           vn_dm_st_proc := 4;
        elsif vn_dm_situacao = 3 then -- cancelado
           vn_dm_st_proc := 7;
        elsif vn_dm_situacao = 4 then -- denegado
           vn_dm_st_proc := 6;
        elsif vn_dm_situacao = 5 and rec.cstat = 731 then -- Erro ao Consultar: Rejeição: Consulta a uma Chave de Acesso muito antiga
           vn_dm_st_proc := 4; -- Mantém autorizado
        else
           vn_dm_st_proc := 5;-- rejeitada
        end if;
        --
        vn_fase := 3.1;
        --
        vv_ibge_estado := substr(rec.nro_chave_cte, 1, 2);
        --
        if rec.dhrecbto is not null then
           --
           vd_dt_emiss := rec.dhrecbto;
           --
        elsif pk_csf.fkg_data_valida('01/' || substr(rec.nro_chave_cte, 5, 2) || '/' || substr(rec.nro_chave_cte, 3, 2), 'dd/mm/yy') then
           --
           vd_dt_emiss := to_date('01/' || substr(rec.nro_chave_cte, 5, 2) || '/' || substr(rec.nro_chave_cte, 3, 2), 'dd/mm/yy');
           --
        else
           --
           vd_dt_emiss := sysdate;
           --
        end if;
        --
        vn_fase := 3.2;
        --
        vv_cnpj_emit := substr(rec.nro_chave_cte, 7, 14);
        vv_cod_mod   := substr(rec.nro_chave_cte, 21, 2);
        vv_serie     := to_number(substr(rec.nro_chave_cte, 23, 3));
        vn_nro_nf    := substr(rec.nro_chave_cte, 26, 9);
        --
        vn_fase := 3.3;
        --
        vn_dm_forma_emiss  := substr(rec.nro_chave_cte, 35, 1);
        vn_cnf_nfe         := substr(rec.nro_chave_cte, 36, 8);
        vn_dig_verif_chave := substr(rec.nro_chave_cte, 44, 1);
        --
        vn_fase := 3.4;
        vn_multorg_id    := pk_csf.fkg_multorg_id_empresa ( en_empresa_id => rec.empresa_id );
        -- busca a pessoa
        vn_pessoa_id := pk_csf.fkg_Pessoa_id_cpf_cnpj ( en_multorg_id => vn_multorg_id
                                                      , en_cpf_cnpj   => vv_cnpj_emit );
        --
        vv_cod_part := pk_csf.fkg_pessoa_cod_part ( en_pessoa_id => vn_pessoa_id );
        --
        -- Se encontrou a CTe para a Chave de Acesso, relacionar o ID
        if nvl(vn_conhectransp_id,0) > 0 then
           --
           vn_fase := 4;
           --
           -- Chama rotina que atualiza a tabela csf_cons_sit
           pk_csf_api_cons_sit.gt_row_ct_cons_sit                 := null;
           pk_csf_api_cons_sit.gt_row_ct_cons_sit.id              := rec.id;
           pk_csf_api_cons_sit.gt_row_ct_cons_sit.conhectransp_id := vn_conhectransp_id;
           --
           pk_csf_api_cons_sit.pkb_ins_atu_ct_cons_sit ( est_row_ct_cons_sit => pk_csf_api_cons_sit.gt_row_ct_cons_sit
                                                       , ev_campo_atu        => 'conhectransp_id'
                                                       , en_tp_rotina        => 0 -- atualização
                                                       , ev_rotina_orig      => 'pk_csf_api_ct.pkb_relac_cte_cons_sit'
                                                       );
           --
           vn_fase := 4.1;
           if nvl(vn_dm_situacao,0) > 0 then
              --
              vn_fase := 4.2;
              --
              if rec.dm_rec_fisico = 1 then
                 --
                 begin
                   update conhec_transp set dm_st_proc = vn_dm_st_proc
                                          , dm_dacte_rec = 1
                                          , dm_ret_ct_erp = 0
                    where id = vn_conhectransp_id
                      and dm_st_proc <> vn_dm_st_proc;
                 exception
                 when others then
                    --
                    gv_mensagem_log := 'Erro na pkb_relac_cte_cons_sit fase(' || vn_fase || '): ' || sqlerrm;
                    --
                    declare
                       vn_loggenerico_id  log_generico_ct.id%TYPE;
                    begin
                       --
                       pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_mensagem_log
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => ERRO_DE_SISTEMA
                                           , ev_obj_referencia  => 'CONHEC_TRANSP'
                                           , en_referencia_id   => gn_referencia_id);  -- #66443
                       --
                    exception
                       when others then
                          null;
                    end;
                 end;
                 --
              else
                --
                vn_fase := 4.3;
                 --
                 begin
                   update conhec_transp set dm_st_proc = vn_dm_st_proc
                                          , dm_ret_ct_erp = 0
                     where id = vn_conhectransp_id
                       and dm_st_proc <> vn_dm_st_proc;
                 exception
                 when others then
                    --
                    gv_mensagem_log := 'Erro na pkb_relac_cte_cons_sit fase(' || vn_fase || '): ' || sqlerrm;
                    --
                    declare
                       vn_loggenerico_id  log_generico_ct.id%TYPE;
                    begin
                       --
                       pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_mensagem_log
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => ERRO_DE_SISTEMA
                                           , ev_obj_referencia  => 'CONHEC_TRANSP'
                                           , en_referencia_id   => gn_referencia_id);  -- #66443
                       --
                    exception
                       when others then
                          null;
                    end;
                 end;
                 --
              end if;
              --
              commit;
              --
           end if;
           --
        else
           --
           vn_fase := 5;
           --
           if rec.dm_rec_fisico = 1 then
              --
              vn_fase := 5.1;
              --
              select conhectransp_seq.nextval
                into vn_conhectransp_id
                from dual;
              --
              vn_fase := 5.2;
              --
              begin
                 --
                 insert into conhec_transp ( id
                                        , dt_hr_ent_sist
                                        , empresa_id
                                        , lotecte_id
                                        , inutilizaconhectransp_id
                                        , pessoa_id
                                        , sitdocto_id
                                        , versao
                                        , id_tag_cte
                                        , uf_ibge_emit
                                        , cct_cte
                                        , cfop
                                        , cfop_id
                                        , nat_oper
                                        , dm_for_pag
                                        , modfiscal_id
                                        , serie
                                        , subserie
                                        , nro_ct
                                        , dt_hr_emissao
                                        , dm_tp_imp
                                        , dm_forma_emiss
                                        , dig_verif_chave
                                        , nro_chave_cte
                                        , dm_tp_amb
                                        , dm_tp_cte
                                        , dm_proc_emiss
                                        , vers_apl_cte
                                        , chave_cte_ref
                                        , ibge_cidade_emit
                                        , descr_cidade_emit
                                        , sigla_uf_emit
                                        , dm_modal
                                        , dm_tp_serv
                                        , ibge_cidade_ini
                                        , descr_cidade_ini
                                        , sigla_uf_ini
                                        , ibge_cidade_fim
                                        , descr_cidade_fim
                                        , sigla_uf_fim
                                        , dm_retira
                                        , det_retira
                                        , dm_tomador
                                        , inf_adic_fisco
                                        , dm_st_proc
                                        , dt_st_proc
                                        , dm_impressa
                                        , dm_st_email
                                        , dm_st_integra
                                        , dm_aut_sefaz
                                        , dt_aut_sefaz
                                        , id_usuario_erp
                                        , usuario_id
                                        , impressora_id
                                        , vias_dacte_custom
                                        , nro_tentativas_impr
                                        , dt_ult_tenta_impr
                                        , vers_apl
                                        , dt_hr_recbto
                                        , nro_protocolo
                                        , digest_value
                                        , msgwebserv_id
                                        , cod_msg
                                        , motivo_resp
                                        , dm_ind_oper
                                        , dm_ind_emit
                                        , dm_ind_frt
                                        , inforcompdctofiscal_id
                                        , cod_cta
                                        , dt_sai_ent
                                        , sistorig_id
                                        , unidorg_id
                                        , cte_proc_xml
                                        , dt_cont
                                        , just_cont
                                        , dm_arm_cte_terc
                                        , nro_chave_cte_adic
                                        , natoper_id
                                        , nro_carreg
                                        , dm_ret_ct_erp
                                        , empresaintegrbanco_id
                                        , dm_rec_xml
                                        , dm_dacte_rec
                                        , nro_email_env_forn
                                        , dm_fin_email_forn
                                        )
                                 values ( vn_conhectransp_id -- id
                                        , sysdate -- dt_hr_ent_sist
                                        , rec.empresa_id -- empresa_id
                                        , null -- lotecte_id
                                        , null -- inutilizaconhectransp_id
                                        , vn_pessoa_id -- pessoa_id
                                        , pk_csf.fkg_Sit_Docto_id ( '00' ) -- sitdocto_id
                                        , '1' -- versao
                                        , ('CTe' || rec.nro_chave_cte) -- id_tag_cte
                                        , vv_ibge_estado -- uf_ibge_emit
                                        , vn_cnf_nfe -- cct_cte
                                        , 5102 -- cfop
                                        , pk_csf.fkg_cfop_id (5102) --cfop_id
                                        , 'Compra' -- nat_oper
                                        , 1 -- dm_for_pag
                                        , pk_csf.fkg_mod_fiscal_id ( vv_cod_mod ) -- modfiscal_id
                                        , vv_serie -- serie
                                        , null -- subserie
                                        , vn_nro_nf -- nro_ct
                                        , vd_dt_emiss -- dt_hr_emissao
                                        , 1 -- dm_tp_imp
                                        , vn_dm_forma_emiss -- dm_forma_emiss
                                        , vn_dig_verif_chave -- dig_verif_chave
                                        , rec.nro_chave_cte -- nro_chave_cte
                                        , 1 -- dm_tp_amb
                                        , 0 -- dm_tp_cte
                                        , 0 -- dm_proc_emiss
                                        , '1' -- vers_apl_cte
                                        , null -- chave_cte_ref
                                        , (vv_ibge_estado || 9999 ) -- ibge_cidade_emit
                                        , 'Pendente' -- descr_cidade_emit
                                        , 'XX' -- sigla_uf_emit
                                        , '01' -- dm_modal
                                        , 0 -- dm_tp_serv
                                        , (vv_ibge_estado || 9999 ) -- ibge_cidade_ini
                                        , 'Pendente' -- descr_cidade_ini
                                        , 'XX' -- sigla_uf_ini
                                        , (vv_ibge_estado || 9999 ) -- ibge_cidade_fim
                                        , 'Pendente' -- descr_cidade_fim
                                        , 'XX' -- sigla_uf_fim
                                        , 0 -- dm_retira
                                        , null -- det_retira
                                        , 4 -- dm_tomador -- outros
                                        , null -- inf_adic_fisco
                                        , vn_dm_st_proc -- dm_st_proc
                                        , sysdate -- dt_st_proc
                                        , 0 -- dm_impressa
                                        , 0 -- dm_st_email
                                        , 7 -- dm_st_integra
                                        , 1 -- dm_aut_sefaz
                                        , rec.DHRECBTO -- dt_aut_sefaz
                                        , null -- id_usuario_erp
                                        , null -- usuario_id
                                        , null -- impressora_id
                                        , 1 -- vias_dacte_custom
                                        , 0 -- nro_tentativas_impr
                                        , null -- dt_ult_tenta_impr
                                        , '1' -- vers_apl
                                        , rec.DHRECBTO -- dt_hr_recbto
                                        , rec.NPROT -- nro_protocolo
                                        , rec.DIGVAL -- digest_value
                                        , rec.MSGWEBSERV_ID -- msgwebserv_id
                                        , rec.CSTAT -- cod_msg
                                        , rec.XMOTIVO -- motivo_resp
                                        , 0 -- dm_ind_oper
                                        , 1 -- dm_ind_emit
                                        , 0 -- dm_ind_frt
                                        , null -- inforcompdctofiscal_id
                                        , null -- cod_cta
                                        , null -- dt_sai_ent
                                        , null -- sistorig_id
                                        , null -- unidorg_id
                                        , null -- cte_proc_xml
                                        , null -- dt_cont
                                        , null -- just_cont
                                        , 1 -- dm_arm_cte_terc
                                        , null -- nro_chave_cte_adic
                                        , null -- natoper_id
                                        , null -- nro_carreg
                                        , 0 -- dm_ret_ct_erp
                                        , null -- empresaintegrbanco_id
                                        , 0 -- dm_rec_xml
                                        , rec.dm_rec_fisico -- dm_dacte_rec
                                        , 0 -- nro_email_env_forn
                                        , 0 -- dm_fin_email_forn
                                        );
              --
              exception
                 when others then
                    vn_conhectransp_id := null;
              end;
              --
              vn_fase := 5.2;
              --
              if nvl(vn_conhectransp_id,0) > 0 then
                 --
                 begin
                    --
                    insert into conhec_transp_emit ( id
                                             , conhectransp_id
                                             , cnpj
                                             , ie
                                             , nome
                                             , nome_fant
                                             , lograd
                                             , nro
                                             , compl
                                             , bairro
                                             , ibge_cidade
                                             , descr_cidade
                                             , cep
                                             , uf
                                             , cod_pais
                                             , descr_pais
                                             , fone
                                             , dm_ind_sn
                                             )
                                      values ( conhectranspemit_seq.nextval --id
                                             , vn_conhectransp_id --conhectransp_id
                                             , vv_cnpj_emit -- cnpj
                                             , '1' -- ie
                                             , 'X' -- nome
                                             , 'X' -- nome_fant
                                             , 'X' -- lograd
                                             , 'X' -- nro
                                             , null -- compl
                                             , 'X' -- bairro
                                             , 9999999 -- ibge_cidade
                                             , 'Pendente' -- descr_cidade
                                             , 0 -- cep
                                             , 'XX' -- uf
                                             , 1058 -- cod_pais
                                             , 'Brasil' -- descr_pais
                                             , null -- fone
                                             , null -- dm_ind_sn
                                             );
                    --
                 exception
                    when others then
                       null;
                 end;
                 --
                 vn_fase := 5.3;
                 --
                 begin
                    --
                    insert into conhec_transp_vlprest ( id
                                                , conhectransp_id
                                                , vl_prest_serv
                                                , vl_receb
                                                , vl_docto_fiscal
                                                , vl_desc
                                                , vl_tot_trib
                                                )
                                         values ( conhectranspvlprest_seq.nextval -- id
                                                , vn_conhectransp_id --conhectransp_id
                                                , 0 -- vl_prest_serv
                                                , 0 -- vl_receb
                                                , 0 -- vl_docto_fiscal
                                                , 0 -- vl_desc
                                                , 0 -- vl_tot_trib
                                                );
                    --
                 exception
                    when others then
                       null;
                 end;
                 --
                 vn_fase := 5.4;
                 --
                 gv_mensagem_log := 'CTe criado a partir de consulta da chave de acesso.';
                 --
                 pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                  , ev_mensagem        => gv_mensagem_log
                                  , ev_resumo          => gv_mensagem_log
                                  , en_tipo_log        => CONHEC_TRANSP_INTEGRADO
                                  , en_referencia_id   => vn_conhectransp_id
                                  , ev_obj_referencia  => 'CONHEC_TRANSP');
                 --
              end if;
              --
              commit;
              --
           end if;
           --
        end if;
        --
     end loop;
     --
     commit;
     --
     vn_fase := 5;
     --
     -- Acerta a situação de processo de CTe integrado de terceiros
     for rec in c_ct ( en_multorg_id => en_multorg_id )
     loop
        --
        exit when c_ct%notfound or (c_ct%notfound) is null;
        --
        vn_fase := 6;
        --
        -- recupera a ultima consulta
        begin
           --
           select max(id)
             into vn_ctconssit_id
             from ct_cons_sit
            where nro_chave_cte = rec.nro_chave_cte
              AND dm_situacao <> 1;
           --
        exception
           when others then
              vn_ctconssit_id := 0;
        end;
        --
        vn_fase := 6.1;
        --
        if nvl(vn_ctconssit_id,0) > 0 then
           --
           vn_fase := 6.2;
           --
           -- busca a situação da consulta
           begin
              --
              select dm_situacao
                 into vn_dm_situacao
                 from ct_cons_sit
                where id = vn_ctconssit_id;
              --
           exception
              when others then
                 vn_dm_situacao := 0;
           end;
           --
           vn_fase := 6.3;
           --
           if nvl(vn_dm_situacao,0) > 0 then
              --
              if vn_dm_situacao = 2 then -- autorizado
                 vn_dm_st_proc := 4;
              elsif vn_dm_situacao = 3 then -- cancelado
                 vn_dm_st_proc := 7;
              elsif vn_dm_situacao = 4 then -- denegado
                 vn_dm_st_proc := 6;
              else
                 --vn_dm_st_proc := 5;
                 --
                 begin
                    select c.nro_ct
                         , c.serie					     
                         , nvl(w.dm_efeito_nota,4)	
                      into vn_nro_ct
                         , vn_serie					  
                         , vn_dm_st_proc		  
                      from conhec_transp c
                         , msg_webserv w					  
                     where c.id = rec.id
                       and w.cd = nvl(c.cod_msg,100);					 
                 exception
                    when others then
                       null;					
                 end;				 
                 --
                 gv_mensagem_log := null;
                 --
                 gv_mensagem_log := 'Não foi possivel encontrar o grupo de autorização no XML para o conhecimento Nr.: ('
				                    ||vn_nro_ct||' / '||vn_serie||') e não é possivel consultar o status atual do documento'||
                                    ' na Sefaz.';
                 --
                 declare
                    vn_loggenerico_id  log_generico_ct.id%TYPE;
                 begin
                    --
                    pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => INFORMACAO
                                        , ev_obj_referencia  => 'CONHEC_TRANSP'
                                        , en_referencia_id   => gn_referencia_id);  -- #66443
                    --
                 exception
                    when others then
                       null;
                 end;				 
                 --	
              end if;
              --
              update conhec_transp set dm_st_proc = vn_dm_st_proc
               where id = rec.id;
              --
              commit;
              --
           end if;
           --
        end if;
        --
     end loop;
     --
     commit;
     --
  exception
     when others then
        --
        gv_mensagem_log := 'Erro na pkb_relac_cte_cons_sit fase(' || vn_fase || '): ' || sqlerrm;
        --
        declare
           vn_loggenerico_id  log_generico_ct.id%TYPE;
        begin
           --
           pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                               , ev_mensagem        => gv_mensagem_log
                               , ev_resumo          => gv_mensagem_log
                               , en_tipo_log        => ERRO_DE_SISTEMA
                               , ev_obj_referencia  => 'CONHEC_TRANSP'
                               , en_referencia_id   => gn_referencia_id);  -- #66443
           --
        exception
           when others then
              null;
        end;
        --
        raise_application_error (-20101, gv_mensagem_log);
        --
  end pkb_relac_cte_cons_sit;

--------------------------------------------------------------------------------------------------------
-- Metodo para consultar CTe de Terceiro, com "Data de Autorização" menor que sete dias da data atual --
-- serve para verificar se o emitente da CTe cancelou a mesma                                         --
--------------------------------------------------------------------------------------------------------
PROCEDURE PKB_CONS_CTE_TERC ( en_multorg_id  in mult_org.id%type )
IS
   --
   vn_fase           number := 0;
   vn_qtde_cons      number := 0;
   vn_qtde_cons_tot  number := 0;
   vd_dt_dia_ini     date;
   vd_dt_dia_fin     date;
   --
   cursor c_ct ( ed_dt_dia_ini in date
               , ed_dt_dia_fin in date ) is
   --select ct.*
   select ct.empresa_id
        , ct.dm_tp_amb
        , ct.nro_chave_cte
        , ct.dt_aut_sefaz		
     from empresa e
        , conhec_transp ct
    where 1 = 1
      and e.multorg_id = en_multorg_id
      and ct.empresa_id = e.id
      and ct.dm_arm_cte_terc = 1
      and ct.dm_ind_emit = 1
      and ct.dm_st_proc = 4
      --and (trunc(sysdate) - trunc(ct.DT_HR_EMISSAO)) <= 7
      and ct.dt_aut_sefaz between ed_dt_dia_ini and ed_dt_dia_fin
    order by ct.id;
   --
   -- CTe de recebimento de XML sem consulta
   cursor c_ct_zero ( ed_dt_dia_ini in date
                    , ed_dt_dia_fin in date ) is
   select ct.id
        , ct.dm_tp_amb
        , ct.empresa_id
        , ct.nro_chave_cte
     from empresa e
        , conhec_transp ct
    where 1 = 1
      and e.multorg_id = en_multorg_id
      and ct.empresa_id = e.id
      and ct.dm_arm_cte_terc = 1
      and ct.dm_st_proc not in (4, 6, 7, 8)
      --and (trunc(sysdate) - trunc(ct.DT_HR_EMISSAO)) <= 7
      and ct.dt_aut_sefaz between ed_dt_dia_ini and ed_dt_dia_fin
    order by 1;
   --
BEGIN
   --
   vn_fase := 1;
   --
   vd_dt_dia_ini := trunc(sysdate - 8);
   vd_dt_dia_fin := to_date(to_char(trunc(sysdate),'dd/mm/rrrr') || ' ' || '23:59','dd/mm/rrrr hh24:mi');
   --
   for rec in c_ct ( ed_dt_dia_ini => vd_dt_dia_ini
                   , ed_dt_dia_fin => vd_dt_dia_fin )
   loop
      --
      exit when c_ct%notfound or (c_ct%notfound) is null;
      --
      vn_fase := 2;
      -- verifica se existe consulta no dia para a chave de acesso
      begin
        select count(1)
          into vn_qtde_cons
          from ct_cons_sit
         where nro_chave_cte = rec.nro_chave_cte
           and trunc(dt_hr_cons_sit) = trunc(sysdate);
      exception
         when others then
            vn_qtde_cons := 0;
      end;
      --
      vn_fase := 3;
      --
	  -- verifica se existe sete consultas com data menor que data final e inclui mais uma leitura para possivel cancelamento 
      --  pós consulta na data final dos sete dias.
      --	  
      begin
         select count(1)
           into vn_qtde_cons_tot
           from ct_cons_sit
          where nro_chave_cte = rec.nro_chave_cte
            and dt_hr_cons_sit < vd_dt_dia_fin;
      exception
         when others then
            vn_qtde_cons_tot := 0;
      end;
      --
      vn_fase := 4;
      --
      if nvl(vn_qtde_cons,0) <= 0 and nvl(vn_qtde_cons_tot,0) < 8 then
         --
         -- Chama rotina que atualiza a tabela csf_cons_sit
         pk_csf_api_cons_sit.gt_row_ct_cons_sit                    :=   null;
         --
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.empresa_id	   :=	rec.empresa_id;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dm_tp_cons	   :=	6;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dm_tp_amb	   :=	rec.dm_tp_amb;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.nro_chave_cte	   :=	rec.nro_chave_cte;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dt_hr_cons_sit	   :=	sysdate;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dm_situacao        :=	1;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.cuf	           :=	substr(rec.nro_chave_cte, 1, 2);
         --
         pk_csf_api_cons_sit.pkb_ins_atu_ct_cons_sit ( est_row_ct_cons_sit => pk_csf_api_cons_sit.gt_row_ct_cons_sit
                                                     , ev_campo_atu        => null
                                                     , en_tp_rotina        => 1 -- insert
                                                     , ev_rotina_orig      => 'pk_csf_api_ct.pkb_cons_cte_terc insert 01'
                                                     );
	     --
      end if;
      --
      vn_fase := 4;
      --
      commit;
      --
   end loop;
   --
   vn_fase := 5;
   -- pega as CTE de recebimento de XML com Situação 0-Não validado
   for rec in c_ct_zero ( ed_dt_dia_ini => vd_dt_dia_ini
                        , ed_dt_dia_fin => vd_dt_dia_fin )
   loop
      --
      exit when c_ct_zero%notfound or (c_ct_zero%notfound) is null;
      --
      vn_fase := 6;
      -- verifica se existe consulta no dia para a chave de acesso
      begin
         select count(1)
           into vn_qtde_cons
           from ct_cons_sit
          where nro_chave_cte = rec.nro_chave_cte
            and trunc(dt_hr_cons_sit) = trunc(sysdate);
      exception
         when others then
            vn_qtde_cons := 0;
      end;
      --
      vn_fase := 7;
      --
      if nvl(vn_qtde_cons,0) <= 0 then
         --
         -- Chama rotina que atualiza a tabela csf_cons_sit
         pk_csf_api_cons_sit.gt_row_ct_cons_sit                    :=   null;
         --
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.empresa_id	   :=	rec.empresa_id;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dm_tp_cons	   :=	6;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dm_tp_amb	   :=	rec.dm_tp_amb;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.nro_chave_cte	   :=	rec.nro_chave_cte;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dt_hr_cons_sit	   :=	sysdate;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.dm_situacao        :=	1;
         pk_csf_api_cons_sit.gt_row_ct_cons_sit.cuf	           :=	substr(rec.nro_chave_cte, 1, 2);
         --
         pk_csf_api_cons_sit.pkb_ins_atu_ct_cons_sit ( est_row_ct_cons_sit => pk_csf_api_cons_sit.gt_row_ct_cons_sit
                                                     , ev_campo_atu        => null
                                                     , en_tp_rotina        => 1 -- insert
                                                     , ev_rotina_orig      => 'pk_csf_api_ct.pkb_cons_cte_terc insert 02'
                                                     );
         --
      end if;
      --
      vn_fase := 8;
      --
      commit;
      --
   end loop;
   --
EXCEPTION
   when others then
      raise_application_error(-20101,'Erro na pk_csf_api.pkb_cons_cte_terc fase('||vn_fase||'):'||sqlerrm);
END PKB_CONS_CTE_TERC;
--
-------------------------------------------------------------------------------------------------------
-- Atualiza Situação do Conhecimento de Transporte
-------------------------------------------------------------------------------------------------------
procedure pkb_atual_sit_docto ( en_multorg_id in mult_org.id%type )
is
   --
   vn_fase        number := 0;
   vn_sitdocto_id sit_docto.id%type;
   --
   cursor c_ct ( en_multorg_id in mult_org.id%type ) is
   select ct.id         conhectransp_id
        , ct.dm_st_proc dm_st_proc
     from empresa       em
        , conhec_transp ct
        , sit_docto     sd
    where em.multorg_id  = en_multorg_id
      and ct.empresa_id  = em.id
      and ct.dm_st_proc in ( 7, 8 ) -- Cancelado e Inutilizado
      and sd.id          = ct.sitdocto_id
      and sd.cd          = '00';
   --
begin
   --
   vn_fase := 1;
   --
   for rec in c_ct ( en_multorg_id => en_multorg_id )
   loop
      --
      vn_fase := 1.1;
      --
      if rec.dm_st_proc = 7 then
         --
         vn_sitdocto_id := pk_csf.fkg_Sit_Docto_id ( ev_cd => '02' );
         --
      else
         --
         vn_sitdocto_id := pk_csf.fkg_Sit_Docto_id ( ev_cd => '05' );
         --
      end if;
      --
      vn_fase := 1.2;
      --
      update conhec_transp
         set sitdocto_id = vn_sitdocto_id
       where id = rec.conhectransp_id;
      --
   end loop;
   --
   commit;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_atual_sit_docto fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , ev_obj_referencia  => 'CONHEC_TRANSP'
						  , en_referencia_id   => gn_referencia_id);  -- #66443
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end pkb_atual_sit_docto;

-------------------------------------------------------------------------------------------------------
-- Procedimento que busca todas as Inutilizações com a situação "5-Não Validada"
-------------------------------------------------------------------------------------------------------
procedure pkb_consit_inutilizacao ( en_multorg_id in mult_org.id%type )
is
   --
   vn_fase         number := 0;
   vt_log_generico dbms_sql.number_table;
   --
   cursor c_inutilizanf ( en_multorg_id in mult_org.id%type ) is
   select ct.id
        , ct.empresa_id
        , ct.dm_situacao
        , ct.dm_tp_amb
        , ct.dm_forma_emiss
        , ct.dt_inut
        , ct.uf_ibge
        , ct.ano
        , ct.cnpj
        , ct.modfiscal_id
        , ct.serie
        , ct.nro_ini
        , ct.nro_fim
        , ct.justif
        , ct.id_inut
        , mf.cod_mod
        , ct.usuario_id
        , ct.dm_st_integra
     from empresa                 em
        , Inutiliza_Conhec_Transp ct
        , Mod_Fiscal              mf
    where em.multorg_id  = en_multorg_id
      and ct.empresa_id  = em.id
      and ct.dm_situacao = 5 -- Não Válidada
      and mf.id          = ct.modfiscal_id
    order by ct.id;
   --
begin
   --
   vn_fase := 1;
   --
   vt_log_generico.delete;
   --
   vn_fase := 2;
   --
   pkb_seta_obj_ref ( ev_objeto => 'INUTILIZA_CONHEC_TRANSP' );
   --
   vn_fase := 2.1;
   --
   for rec in c_inutilizanf ( en_multorg_id => en_multorg_id )
   loop
      --
      vn_fase := 3;
      --
      gt_row_inut_conhec_transp := null;
      --
      pkb_seta_referencia_id ( en_id => rec.id );
      --
      vn_fase := 3.1;
      --
      gt_row_inut_conhec_transp.id              := rec.id;
      gt_row_inut_conhec_transp.empresa_id      := rec.empresa_id;
      gt_row_inut_conhec_transp.dm_situacao     := rec.dm_situacao;
      gt_row_inut_conhec_transp.dm_tp_amb       := rec.dm_tp_amb;
      gt_row_inut_conhec_transp.dm_forma_emiss  := rec.dm_forma_emiss;
      gt_row_inut_conhec_transp.dt_inut         := rec.dt_inut;
      gt_row_inut_conhec_transp.uf_ibge         := rec.uf_ibge;
      gt_row_inut_conhec_transp.ano             := rec.ano;
      gt_row_inut_conhec_transp.cnpj            := rec.cnpj;
      gt_row_inut_conhec_transp.modfiscal_id    := rec.modfiscal_id;
      gt_row_inut_conhec_transp.serie           := rec.serie;
      gt_row_inut_conhec_transp.nro_ini         := rec.nro_ini;
      gt_row_inut_conhec_transp.nro_fim         := rec.nro_fim;
      gt_row_inut_conhec_transp.justif          := rec.justif;
      gt_row_inut_conhec_transp.id_inut         := rec.id_inut;
      gt_row_inut_conhec_transp.usuario_id      := rec.usuario_id;
      gt_row_inut_conhec_transp.dm_st_integra   := rec.dm_st_integra;
      --
      vn_fase := 4;
      --
      pkb_integr_inutilizact ( est_log_generico      => vt_log_generico
                             , est_row_Inutiliza_Ct  => gt_row_inut_conhec_transp
                             , ev_cod_mod            => rec.cod_mod
                             );
      --
   end loop;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_consit_inutilizacao fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
      exception
         when others then
            null;
      end;
      --
      raise_application_error (-20101, gv_mensagem_log);
      --
end pkb_consit_inutilizacao;

-------------------------------------------------------------------------------------------------------
-- Procedimento que faz a integração os CT-e Cancelados
-------------------------------------------------------------------------------------------------------
procedure pkb_integr_Conhec_Transp_Canc ( est_log_generico           in out nocopy dbms_sql.number_table
                                        , est_row_Conhec_Transp_Canc in out nocopy Conhec_Transp_Canc%rowtype
                                        , en_loteintws_id            in     lote_int_ws.id%type default 0 )
is
   --
   vn_fase                     number := 0;
   vd_dt_hr_emissao            Conhec_Transp.dt_hr_emissao%TYPE;
   vd_dt_aut_sefaz             Conhec_Transp.dt_aut_sefaz%TYPE;
   vn_dif_dias                 number;
   vn_dm_st_proc               Conhec_Transp.dm_st_proc%TYPE;
   vn_loggenerico_id           log_generico_ct.id%TYPE;
   vn_empresa_id               Empresa.id%TYPE            := null;
   vn_nro_ct                   Conhec_Transp.nro_ct%TYPE  := null;
   vv_serie                    Conhec_Transp.serie%TYPE   := null;
   vv_cod_mod                  Mod_Fiscal.cod_mod%TYPE    := null;
   vn_dm_tp_amb                empresa.dm_tp_amb%type;
   vv_ibge_estado              estado.ibge_estado%type    := null;
   vv_cnpj                     varchar2(14) := null;
   vn_inutilizaconhectransp_id Conhec_Transp.inutilizaconhectransp_id%type;
   vn_modfiscal_id             Conhec_Transp.modfiscal_id%type;
   vn_nro_protocolo            Conhec_Transp.nro_protocolo%type;
   vn_ct_canc                  number := 0;
   vn_dm_tipo_integr           empresa.dm_tipo_integr%type := null;
   vv_usuario_nome             neo_usuario.nome%type := null;
   --
   vt_row_evento_cte           evento_cte%rowtype;
   --
begin
   --
   vn_fase := 1;
   --
   -- Busca dados do Conhecimento de Transporte
   begin
      select ct.empresa_id
           , ct.nro_ct
           , ct.serie
           , mf.cod_mod
           , ct.dt_hr_emissao
           , ct.dm_st_proc
           , nvl(ct.dt_aut_sefaz,ct.dt_hr_emissao)
           , ct.nro_protocolo
           , e.dm_tipo_integr
        into vn_empresa_id
           , vn_nro_ct
           , vv_serie
           , vv_cod_mod
           , vd_dt_hr_emissao
           , vn_dm_st_proc
           , vd_dt_aut_sefaz
           , vn_nro_protocolo
           , vn_dm_tipo_integr
        from Conhec_Transp ct
           , Mod_Fiscal  mf
           , empresa     e
       where ct.id       = est_row_Conhec_Transp_Canc.conhectransp_id
         and mf.id       = ct.modfiscal_id
         and e.id        = ct.empresa_id;
   exception
      when others then
         vn_empresa_id     := null;
         vn_nro_ct         := null;
         vv_serie          := null;
         vv_cod_mod        := null;
         vd_dt_hr_emissao  := null;
         vn_dm_st_proc     := null;
         vd_dt_aut_sefaz   := null;
         vn_nro_protocolo  := null;
         vn_dm_tipo_integr := null;
   end;
   -- Monta cabeçalho do Log Genérico
   gv_cabec_log := null;
   --
   vn_fase := 1.1;
   --
   if nvl(vn_empresa_id,0) > 0 then
      --
      vn_fase := 1.2;
      --
      gv_cabec_log := 'Empresa: ' || pk_csf.fkg_nome_empresa ( en_empresa_id => vn_empresa_id );
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.3;
   --
   if nvl(vn_nro_ct,0) > 0 then
      --
      gv_cabec_log := gv_cabec_log || 'Número: ' || vn_nro_ct;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.4;
   --
   if vv_serie is not null then
      --
      gv_cabec_log := gv_cabec_log || 'Série: ' || vv_serie;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.5;
   --
   if vv_cod_mod is not null then
      --
      gv_cabec_log := gv_cabec_log || 'Modelo: ' || vv_cod_mod;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.6;
   --
   if vd_dt_hr_emissao is not null then
      --
      gv_cabec_log := gv_cabec_log || 'Data de emissão: ' || to_char(vd_dt_hr_emissao, 'dd/mm/yyyy');
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   if nvl(en_loteintws_id,0) > 0 then
      --
      gv_cabec_log := gv_cabec_log || 'Lote WS: ' || en_loteintws_id;
      --
      gv_cabec_log := gv_cabec_log || chr(10);
      --
   end if;
   --
   vn_fase := 1.7;
   -- Verifica se a nota já tem registro de cancelamento     -- Conversar com o Leandro para tirar essa busca.
   begin
      --
      select distinct 1
        into vn_ct_canc
        from Conhec_Transp_Canc
       where conhectransp_id = est_row_Conhec_Transp_Canc.conhectransp_id;
      --
   exception
      when no_data_found then
         vn_ct_canc := 0;
   end;
   --
   vn_fase := 2;
   -- Se a situação do Conhecimento de Transporte não for "7-Cancelada" e tem protocolo de autorização, então cancela
   if nvl(vn_dm_st_proc,0) in (0, 4) and nvl(vn_nro_protocolo,0) > 0 then
      --
      gn_referencia_id := est_row_Conhec_Transp_Canc.conhectransp_id;
      gv_obj_referencia := 'CONHEC_TRANSP';
      --
      vn_fase  := 2.1;
      -- Verifica se teve nota fiscal informada
      if nvl(est_row_Conhec_Transp_Canc.conhectransp_id,0) = 0
         and nvl(est_log_generico.count,0) = 0 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não informado o Conhec. Transp. para ser cancelado.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase  := 3;
      --
      -- Verifica se a data de cancelamento é nula
      if est_row_Conhec_Transp_Canc.dt_canc is null then
         --
         est_row_Conhec_Transp_Canc.dt_canc := sysdate;
         --
      end if;
      --
      vn_fase := 3.1;
      --
      if trunc(est_row_Conhec_Transp_Canc.dt_canc) < trunc(vd_dt_hr_emissao) then
         --
         est_row_Conhec_Transp_Canc.dt_canc := sysdate;
         --
      end if;
      --
      vn_fase := 4;
      --
      -- Verifica se não foi informada a justificativa de cancelamento
      if trim( est_row_Conhec_Transp_Canc.justif ) is null then
         --
         vn_fase := 4.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não foi informada a justificativa do cancelamento do CT-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 5;
      -- Verifica se o Conhecimento de Transporte foi emitido a mais de 60 dias, se foi não pode cancelar
      -- Atenção: "O prazo atual para o cancelamento do CT-e é de 60 dias." Fonte: http://www.cte.fazenda.gov.br/assuntoFAQ4.aspx#11 dia 26/04/2010
      if nvl(est_row_Conhec_Transp_Canc.conhectransp_id,0) > 0 then
         --
         vn_fase := 5.1;
         --
         if vd_dt_aut_sefaz is not null then
            --
            vn_fase := 5.2;
            -- Cálcula a diferença de dias
            vn_dif_dias := est_row_Conhec_Transp_Canc.dt_canc - vd_dt_aut_sefaz;
            --
            vn_fase := 5.3;
            -- Verificar NF-e autorizada há mais de 60 dias (1440 horas)
            -- Se a diferença de dias for maior que 60 (sessenta) o conhecimento não pode ser cancelado
            if vn_dif_dias > 60 then
               --
               vn_fase := 5.4;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O Conhec. Transp. não pode ser cancelada pois já foi emitida a mais de 60 (sessenta) dias.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         else
            --
            vn_fase := 5.5;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Não foi recuperada a data de emissão do CT-e para ser cancelado.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
            --
         end if;
         --
      end if;
      --
      vn_fase := 6;
      -- Valida se a "Situação do Processo" do CT-e permite ser cancelado
      --
      if nvl(vn_dm_st_proc,0) not in (0, 4) then
         --
         vn_fase := 6.1;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Situação do processo do CT-e não permite que ela seja cancelado (' || vn_dm_st_proc || ').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 7;
      --
      gn_tipo_integr := 1;
      -- Implementa a solicitação do EVento do Cte
      vt_row_evento_cte := null;
      vt_row_evento_cte.conhectransp_id  := est_row_Conhec_Transp_Canc.conhectransp_id;
      vt_row_evento_cte.dt_hr_evento     := sysdate;
      vt_row_evento_cte.dm_st_integra    := 0;
      vt_row_evento_cte.dm_st_proc       := 0;
      --
      vn_fase := 7.1;
      --
      pk_csf_api_ct.pkb_integr_evento_cte ( est_log_generico              => est_log_generico
                                          , est_row_evento_cte            => vt_row_evento_cte
                                          , ev_tipoeventosefaz_cd         => '110111'
                                          );
      --
      vn_Fase := 7.2;
      --
      est_row_Conhec_Transp_Canc.eventocte_id := vt_row_evento_cte.id;
      --
      vn_fase := 99;
      --
      if nvl(est_row_Conhec_Transp_Canc.conhectransp_id, 0) > 0
         and est_row_Conhec_Transp_Canc.dt_canc is not null
         and trim ( pk_csf.fkg_converte ( est_row_Conhec_Transp_Canc.justif ) ) is not null then
         --
         vn_fase := 99.1;
         --
         if nvl(vn_dm_tipo_integr,0) = 3
            and est_row_Conhec_Transp_Canc.dm_st_integra not in (2, 3, 4, 10, 11, 12, 13)
            then -- Integração Table/View
            est_row_Conhec_Transp_Canc.dm_st_integra  := 8;
         end if;
         --
         vn_fase := 99.2;
         -- Se não existe registro de log e o Tipo de Integração é 1 (válida e insere)
         -- então registra o Cancelamento do CT-e
         if nvl(est_log_generico.count,0) = 0 then
            --
            vn_fase := 99.3;
            --
            if nvl(vn_ct_canc,0) <= 0 then
               --
               vn_fase := 99.4;
               --
               select conhectranspcanc_seq.nextval
                 into est_row_Conhec_Transp_Canc.id
                 from dual;
               --
               vn_fase := 99.5;
               --
               insert into Conhec_Transp_Canc ( id
                                              , conhectransp_id
                                              , dt_canc
                                              , justif
                                              , dm_st_integra
                                              , eventocte_id
                                              )
                                       values ( est_row_Conhec_Transp_Canc.id
                                              , est_row_Conhec_Transp_Canc.conhectransp_id
                                              , est_row_Conhec_Transp_Canc.dt_canc
                                              , trim ( pk_csf.fkg_converte ( est_row_Conhec_Transp_Canc.justif ) )
                                              , nvl(est_row_Conhec_Transp_Canc.dm_st_integra,0)
                                              , est_row_Conhec_Transp_Canc.eventocte_id
                                              );
               --
            else
               --
               vn_fase := 99.6;
               --
               update Conhec_Transp_Canc set dt_canc        = est_row_Conhec_Transp_Canc.dt_canc
                                           , justif         = trim ( pk_csf.fkg_converte ( est_row_Conhec_Transp_Canc.justif ) )
                                           , dm_st_integra  = nvl(est_row_Conhec_Transp_Canc.dm_st_integra,0)
                                           , eventocte_id   = est_row_Conhec_Transp_Canc.eventocte_id
                where conhectransp_id = est_row_Conhec_Transp_Canc.conhectransp_id;
               --
            end if;
            --
            vn_fase := 99.7;
            --
            if nvl(est_row_Conhec_Transp_Canc.usuario_id,0) > 0 then
               vv_usuario_nome := pk_csf.fkg_usuario_nome ( en_usuario_id => est_row_Conhec_Transp_Canc.usuario_id );
            else
               vv_usuario_nome := 'Integração';
            end if;
            --
            gv_mensagem_log := 'Usuário que solicitou o cancelamento: '||vv_usuario_nome||'.';
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => info_canc_nfe
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia
                             , en_dm_impressa     => 1 );
            --
            -- Atualiza a Situação do processo do CT-e para 1-Não Processada. Aguardando Processamento
            -- e indica que não foi atualizado no ERP
            update Conhec_Transp set dm_st_proc   = 1
                                   , dt_st_proc   = sysdate
             where id = est_row_Conhec_Transp_Canc.conhectransp_id;
            --
         end if;
         --
      end if;
      --
   else
      --
      vn_fase := 99.8;
      --
      --| Se não é uma nota autoriza, então cria o processo de inutilização
      --
      if nvl(vn_dm_st_proc,0) not in (0, 1, 2, 3, 4, 6, 7, 8) then
         --
         vn_fase := 99.9;
         --
         begin
            select ct.dm_tp_amb
                 , es.ibge_estado
                 , (lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') || lpad(j.dig_cnpj, 2, '0')) cnpj
                 , ct.modfiscal_id
                 , ct.serie
                 , ct.nro_ct
                 , ct.inutilizaconhectransp_id
              into vn_dm_tp_amb
                 , vv_ibge_estado
                 , vv_cnpj
                 , vn_modfiscal_id
                 , vv_serie
                 , vn_nro_ct
                 , vn_inutilizaconhectransp_id
              from conhec_transp ct
                 , empresa     e
                 , pessoa      p
                 , juridica    j
                 , cidade      c
                 , estado      es
             where ct.id       = est_row_Conhec_Transp_Canc.conhectransp_id
               and e.id        = ct.empresa_id
               and p.id        = e.pessoa_id
               and j.pessoa_id = p.id
               and c.id        = p.cidade_id
               and es.id       = c.estado_id;
         exception
            when others then
               vn_dm_tp_amb                  := null;
               vv_ibge_estado                := null;
               vv_cnpj                       := null;
               vn_modfiscal_id               := null;
               vv_serie                      := null;
               vn_nro_ct                     := null;
               vn_inutilizaconhectransp_id   := null;
         end;
         --
         vn_fase := 99.10;
         --
         if nvl(vn_empresa_id,0) > 0 then
            --
            if nvl(vn_inutilizaconhectransp_id,0) > 0 then
               --
               update inutiliza_conhec_transp set empresa_id      = vn_empresa_id
                                                , dm_situacao     = 5
                                                , dm_tp_amb       = vn_dm_tp_amb
                                                , dm_forma_emiss  = 1
                                                , dt_inut         = sysdate
                                                , uf_ibge         = vv_ibge_estado
                                                , ano             = to_number(to_char(sysdate, 'RRRR'))
                                                , cnpj            = vv_cnpj
                                                , modfiscal_id    = vn_modfiscal_id
                                                , serie           = vv_serie
                                                , nro_ini         = vn_nro_ct
                                                , nro_fim         = vn_nro_ct
                                                , justif          = trim ( pk_csf.fkg_converte ( est_row_Conhec_Transp_Canc.justif ) )
                                                , id_inut         = ('ID' || vv_ibge_estado || vv_cnpj || vv_cod_mod || lpad(vv_serie, 3, '0') || lpad(vn_nro_ct, 9, '0') || lpad(vn_nro_ct, 9, '0'))
                where id = vn_inutilizaconhectransp_id
                  and dm_situacao = 6; -- Erro de validação
               --
            else
               --
               select inutilizaconhectransp_seq.nextval
                 into vn_inutilizaconhectransp_id
                 from dual;
               --
               insert into inutiliza_conhec_transp ( id
                                                 , empresa_id
                                                 , dm_situacao
                                                 , dm_tp_amb
                                                 , dm_forma_emiss
                                                 , dt_inut
                                                 , uf_ibge
                                                 , ano
                                                 , cnpj
                                                 , modfiscal_id
                                                 , serie
                                                 , nro_ini
                                                 , nro_fim
                                                 , justif
                                                 , id_inut )
                                          values ( vn_inutilizaconhectransp_id
                                                 , vn_empresa_id
                                                 , 5 -- dm_situacao
                                                 , vn_dm_tp_amb
                                                 , 1
                                                 , sysdate
                                                 , vv_ibge_estado
                                                 , to_number(to_char(sysdate, 'RRRR'))
                                                 , vv_cnpj
                                                 , vn_modfiscal_id
                                                 , vv_serie
                                                 , vn_nro_ct
                                                 , vn_nro_ct
                                                 , trim ( pk_csf.fkg_converte ( est_row_Conhec_Transp_Canc.justif ) )
                                                 , ('ID' || vv_ibge_estado || vv_cnpj || vv_cod_mod || lpad(vv_serie, 3, '0') || lpad(vn_nro_ct, 9, '0') || lpad(vn_nro_ct, 9, '0'))
                                                 );
               --
            end if;
            --
            update conhec_transp set lotecte_id = null
                                   , dm_st_proc = 10
                                   , inutilizaconhectransp_id = vn_inutilizaconhectransp_id
             where id = est_row_Conhec_Transp_Canc.conhectransp_id;
            --
         end if;
         --
      end if;
      --
   end if;
   --
   <<sair_integr>>
   null;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_Conhec_Transp_Canc fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_Conhec_Transp_Canc;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Anulação de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_anulacao ( est_log_generico   in out nocopy dbms_sql.number_table
                                    , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase           number := 0;
   vn_qtde           number := 0;
   vn_loggenerico_id log_generico_ct.id%type;
   vn_id_anulado     conhec_transp.id%type;
   vn_dm_tp_cte      conhec_transp.dm_tp_cte%type;
   --
   cursor c_anulacao is
   select *
     from conhec_transp_anul
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      -- Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de anulação por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from conhec_transp_anul
          where conhectransp_id = en_conhectransp_id
          order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      --
      if vn_dm_tp_cte = 2
         and nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Detalhamento do CT-e do tipo Anulação de Valores.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => erro_de_validacao
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.4;
      --
      -- Caso a finalidade do Ct-e for de Anulação verifica se há informações de anulação.
      if vn_dm_tp_cte = 2 and nvl(vn_qtde, 0) = 0 then
         --
         vn_fase := 2.5;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações de Detalhamento do CT-e do tipo Anulação de Valores .';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => erro_de_validacao
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.6;
      --
      --Caso a finalidade do Ct-e não for de Anulação e há informações de anulação.
      if vn_dm_tp_cte <> 2 and nvl(vn_qtde, 0) > 0 then
         --
         vn_fase := 2.7;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A Finalidade do Ct-e (' || vn_dm_tp_cte || ') não é de Anulação de Valores.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para anulação de valores
      --
      vn_fase := 3;
      --
      if vn_dm_tp_cte = 2
         and vn_qtde = 1 then
         --
         -- Recupero as informações do conhecimento de transporte anulado.
         for rec in c_anulacao loop
            --
            vn_fase := 4;
            --
            -- Busca ID do Ct-e a ser anulado através da chave e armazena em uma váriavel.
            --
            vn_id_anulado := nvl(pk_csf.fkg_conhectransp_id_pela_chave(en_nro_chave_cte => rec.nro_chave_cte_anul), 0);
            --
            vn_fase := 4.1;
            --
            -- Verifica se o Ct-e que será Anulado Existe.
            if vn_id_anulado = 0 then
               --
               vn_fase := 4.2;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "Chave de acesso do CT-e original a ser anulado e substituído" (' || rec.nro_chave_cte_anul || ') não localizou o Ct-e original.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se o Ct-e que será Anulado está com o a situação autorizado para uso.
            if pk_csf.fkg_st_proc_ct(en_conhectransp_id => vn_id_anulado) <> 4 then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A situação do "CT-e original a ser anulado e substituído" (' || pk_csf.fkg_st_proc_ct(en_conhectransp_id => vn_id_anulado) || ') não está com status de autorizado para uso.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6;
            --
            -- Verificar os CNPJ entre Ct-e Original e o que está anulando.
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'EM' ) <>
               pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_anulado, vv_pessoa => 'EM' ) then
               --
               vn_fase := 6.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CT-e original" (' || pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_anulado, vv_pessoa => 'EM' ) || ') e o Ct-e de Anulação (' || pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'EM' ) || ') devem possuir o mesmo CNPJ.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 7;
            --
            -- Verifica se a finalidade do Ct-e a ser anulado é normal
            if pk_csf.fkg_dm_tp_cte(en_conhectransp_id => vn_id_anulado) <> 0 then
               --
               vn_fase := 7.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A finalidade do "CT-e original a ser anulado ou substituido" (' || pk_csf.fkg_dm_tp_cte(en_conhectransp_id => vn_id_anulado) || ') deve ser Normal(0).';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 8;
            --
            -- Verifica se o Prazo para emitir um CT-e de anulação é de até 60 dias em comparação a data de emissão do Ct-e Original a ser Anulado ou Substiuido.
            if pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => en_conhectransp_id ) > (pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => vn_id_anulado ) + 60) then
               --
               vn_fase := 8.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "Data de Emissão do Ct-e"(' || pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => en_conhectransp_id ) || ') deve ocorrer em até 60 dias do Ct-e Original a ser anulado ou substituido (' || (pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => vn_id_anulado)) || ').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 9;
            --
            -- Verifica se o Valor de Prestação de Serviço do CT-e de anulação é diferente do alor de Prestação de Serviço Ct-e Original a ser Anulado ou Substiuido.
            if pk_csf.fkg_vl_valor_prest_ct(en_conhectransp_id => en_conhectransp_id) <> pk_csf.fkg_vl_valor_prest_ct(en_conhectransp_id => vn_id_anulado) then
               --
               vn_fase := 9.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Valor da Prestação do Serviço" do Ct-e(' || (pk_csf.fkg_vl_valor_prest_ct(en_conhectransp_id => en_conhectransp_id)) || ') deve ser igual ao Valor da Prestação do Serviço do Ct-e Original a ser anulado ou substituido (' || (pk_csf.fkg_vl_valor_prest_ct(en_conhectransp_id => vn_id_anulado)) || ').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 10;
            --
            -- Verifica se o Valor de ICMS do CT-e de anulação é diferente do valor de ICMS Ct-e Original a ser Anulado ou Substiuido.
            -- Ps: Por enquanto eu coloquei apenas o Campo ICMS talvez no futuro terá que colocar os outros campos da tabela de imposto.
            if pk_csf.fkg_vl_imp_trib_ct (en_conhectransp_id => en_conhectransp_id) <> pk_csf.fkg_vl_imp_trib_ct (en_conhectransp_id => vn_id_anulado) then
               --
               vn_fase := 10.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Valor do ICMS" do Ct-e(' || (pk_csf.fkg_vl_imp_trib_ct (en_conhectransp_id => en_conhectransp_id)) || ') deve ser igual ao Valor de ICMS do Ct-e Original a ser anulado ou substituido (' || (pk_csf.fkg_vl_imp_trib_ct (en_conhectransp_id => vn_id_anulado)) || ').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 11;
            --
            -- Verifica Ct-e Original a ser Anulado não foi anulado ou substiuido anteriormente.
            --
            if pk_csf.fkg_val_ref_anul ( en_conhectransp_id => en_conhectransp_id
                                       , ev_nro_chave_cte_anul => rec.nro_chave_cte_anul ) = True then
               --
               vn_fase := 11.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Ct-e Original a ser Anulado ou Substiuido" (' || rec.nro_chave_cte_anul || ') já foi referenciado anteriormente.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 12;
            --
            -- Verifica Ct-e do Tipo Substiuição tem o Tipo de Emissão do Tipo Normal.
            -- Ps.: Protocolo 4054711
            if pk_csf.fkg_dmformaemiss_pelo_id ( en_conhectransp_id => en_conhectransp_id ) <> 1 then
               --
               vn_fase := 12.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Tipo de Emissão" (' ||pk_csf.fkg_dmformaemiss_pelo_id ( en_conhectransp_id => en_conhectransp_id ) || ') não pode ser em contigência.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
             --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_anulacao fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_anulacao;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Substiuição de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_substituicao ( est_log_generico   in out nocopy dbms_sql.number_table
                                        , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   vn_id_substituto   conhec_transp.id%type;
   vn_dm_tp_cte       conhec_transp.dm_tp_cte%type;
   --
   cursor c_substituicao is
   select *
     from Conhec_Transp_Subst
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      -- Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de substituicao por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Subst
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      -- Verificar se foram inseridos mais de um registro de substiuição.
      if vn_dm_tp_cte = 3
         and nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um CT-e de Substituição.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.4;
      --
      --Caso a finalidade do Ct-e for de Substiuicão verifica se há informações de substiuição.
      if vn_dm_tp_cte = 3 and nvl(vn_qtde, 0) = 0 then
         --
         vn_fase := 2.5;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações do CT-e de Substituição.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.6;
      --
      --Caso a finalidade do Ct-e não for de Substiuição e há informações de substiuicão.
      if vn_dm_tp_cte <> 3 and nvl(vn_qtde, 0) > 0 then
         --
         vn_fase := 2.7;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A Finalidade do Ct-e ('||vn_dm_tp_cte||') não é de CT-e Substituto.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para o CT-e Substituto
      --
      vn_fase := 3;
      --
      if vn_dm_tp_cte = 3 then
         --
         -- Recupero as informações do conhecimento de transporte substituto.
         for rec in c_substituicao loop
            --
            vn_fase := 4;
            --
            -- Busca ID do Ct-e a ser substuido através da chave e armazena em uma váriavel.
            --
            vn_id_substituto := nvl(pk_csf.fkg_conhectransp_id_pela_chave(en_nro_chave_cte => rec.nro_chave_cte_sub), 0);
            --
            vn_fase := 5;
            --
            -- Verifica se o Ct-e que será Substituto Existe.
            if vn_id_substituto = 0 then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "Chave de acesso do CT-e original a ser substituído" ('||rec.nro_chave_cte_sub||') não localizou o Ct-e original.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6;
            --
            -- Verifica se o Ct-e que será Substituto está com o a situação autorizado para uso.
            if pk_csf.fkg_st_proc_ct(en_conhectransp_id => vn_id_substituto) <> 4 then
               --
               vn_fase := 6.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A situação do "CT-e original a ser substituído" ('||pk_csf.fkg_st_proc_ct(en_conhectransp_id => vn_id_substituto)||
                                  ') não está com status de autorizado para uso.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
           vn_fase := 7;
            --
            -- Verifica se o CNPJ do Emitente do Ct-e que será Substituido é diferente ao CNPJ do Emitente do Ct-e.
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'EM' ) <>
               pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto, vv_pessoa => 'EM' ) then
               --
               vn_fase := 7.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CT-e original" ('||pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto, vv_pessoa => 'EM' )||
                                  ') e o Ct-e de Substituição ('||pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto, vv_pessoa => 'EM' )||
                                  ') devem possuir o mesmo CNPJ.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 8;
            --
            -- Verifica se a finalidade do Ct-e a ser substituto é normal
            if pk_csf.fkg_dm_tp_cte(en_conhectransp_id => vn_id_substituto) <> 0 then
               --
               vn_fase := 8.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A finalidade do "CT-e original a ser substituido" ('||pk_csf.fkg_dm_tp_cte(en_conhectransp_id => vn_id_substituto)||
                                  ') deve ser Normal(0).';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 9;
            --
            -- Verifica se o Prazo para emitir um CT-e de Substiuiçào é de até 60 dias em comparação a data de emissão do Ct-e Original a ser Substiuido.
            if pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => en_conhectransp_id ) > (pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => vn_id_substituto ) + 60) then
               --
               vn_fase := 9.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "Data de Emissão do Ct-e"('||pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => en_conhectransp_id )||') deve ocorrer em até '||
                                  '60 dias do Ct-e Original a ser substituido ('||(pk_csf.fkg_dt_emiss_ct(en_conhectransp_id => vn_id_substituto))||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 10;
            --
            -- Verifica Ct-e do Tipo Substiuição tem o Tipo de Emissão do Tipo Normal.
            -- Ps.: Protocolo 4054711
            if pk_csf.fkg_dmformaemiss_pelo_id ( en_conhectransp_id => en_conhectransp_id ) <> 1 then
               --
               vn_fase := 10.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Tipo de Emissão" ('||pk_csf.fkg_dmformaemiss_pelo_id ( en_conhectransp_id => en_conhectransp_id )||
                                  ') não pode ser em contigência.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 11;
            --
            -- Verifica Ct-e Original a ser substituido não foi anulado ou substiuido anteriormente.
            --
            if pk_csf.fkg_val_ref_cte_sub ( en_conhectransp_id   => en_conhectransp_id
                                          , ev_nro_chave_cte_sub => rec.nro_chave_cte_sub) = True then
               --
               vn_fase := 11.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Ct-e Original a ser Substiuido" ('||rec.nro_chave_cte_sub||') já foi referenciado anteriormente.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 12;
            --
            -- Verifica se o CNPJ Rementente do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'R') <>
               pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'R') then
               --
               vn_fase := 12.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CNPJ do Remetente do Ct-e Original" ('||pk_csf.fkg_cnpj_pelo_id( en_conhectransp_id => vn_id_substituto, vv_pessoa => 'R')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto, vv_pessoa => 'R')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 13;
            --
            -- Verifica se o CNPJ do destinatario do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador
            --
            if pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'D') <>
               pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'D') then
               --
               vn_fase := 13.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CNPJ do Destinatário do Ct-e Original" ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'D')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'D')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 14;
            --
            -- Verifica se o CNPJ do Expedidor do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'E') <>
               pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'E') then
               --
               vn_fase := 14.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CNPJ do Expeditor do Ct-e Original" ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'E')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'E')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 15;
            --
            -- Verifica se o CNPJ do Tomador do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador
            --
            if pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'T') <>
               pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'T') then
               --
               vn_fase := 15.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CNPJ do Tomador do Ct-e Original" ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'T')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'T')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 16;
            --
            -- Verifica se o CNPJ do Recebedor do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'RC') <>
               pk_csf.fkg_cnpj_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'RC') then
               --
               vn_fase := 16.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CNPJ do Recebedor do Ct-e Original" ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'RC')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'RC')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 17;
            --
            -- Verifica se o IE do Emitente do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'EM') <>
               pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'EM') then
               --
               vn_fase := 17.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "IE do Emitente do Ct-e Original" ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'EM')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'EM')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 18;
            --
            -- Verifica se o IE do Remetente do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'R') <>
               pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'R') then
               --
               vn_fase := 18.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "IE do Remetente do Ct-e Original" ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'R')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'R')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 19;
            --
            -- Verifica se o IE do Recebedor do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'RC') <>
               pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'RC') then
               --
               vn_fase := 19.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "IE do Recebedor do Ct-e Original" ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'RC')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'RC')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 20;
            --
            -- Verifica se o IE do Expedidor do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'E') <>
               pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'E') then
               --
               vn_fase := 20.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "IE do Expedidor do Ct-e Original" ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'E')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'E')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 21;
            --
            -- Verifica se o IE do Tomador do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'T') <>
               pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'T') then
               --
               vn_fase := 21.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "IE do Tomador do Ct-e Original" ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'T')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'T')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 22;
            --
            -- Verifica se o IE do Destinatário do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'D') <>
               pk_csf.fkg_ie_pelo_id ( en_conhectransp_id => vn_id_substituto  , vv_pessoa => 'D') then
               --
               vn_fase := 22.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "IE do Destinatário do Ct-e Original" ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => vn_id_substituto, vv_pessoa => 'D')||
                                  ') é diferente do CT-e Substituído ('||pk_csf.fkg_ie_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'D')||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 23;
            --
            -- Verifica se a UF de Inicio da Prestação do Destinatário do Ct-e Substituto é igual ao do Ct-e Substituído
            --
            if pk_csf.fkg_siglaufini_pelo_id ( en_conhectransp_id => en_conhectransp_id ) <>
               pk_csf.fkg_siglaufini_pelo_id ( en_conhectransp_id => vn_id_substituto ) then
               --
               vn_fase := 23.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "UF de Inicio da Prestação do Serviço do Ct-e Original" ('||
                                  pk_csf.fkg_siglaufini_pelo_id(en_conhectransp_id => vn_id_substituto)||') é diferente do CT-e Substituído ('||
                                  pk_csf.fkg_siglaufini_pelo_id(en_conhectransp_id => vn_id_substituto)||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 24;
            --
            -- Verifica se a UF do Final da Prestação do Destinatário do Ct-e Substituto é igual ao do Ct-e Substituído
            -- Parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            --
            if pk_csf.fkg_siglauffim_pelo_id ( en_conhectransp_id => en_conhectransp_id ) <>
               pk_csf.fkg_siglauffim_pelo_id ( en_conhectransp_id => vn_id_substituto ) then
               --
               vn_fase := 24.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "UF de Final da Prestação do Serviço do Ct-e Original" ('||
                                  pk_csf.fkg_siglauffim_pelo_id(en_conhectransp_id => vn_id_substituto)||') é diferente do CT-e Substituído ('||
                                  pk_csf.fkg_siglauffim_pelo_id(en_conhectransp_id => en_conhectransp_id)||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 25;
            --
            -- Se a Finalidade do Ct-e for 3 e for informado que o Tomador não é contribuinte de Ct-e a tabela de anulação deve estar preenchida.
            --
            if rec.nro_chave_cte_anul is not null
               and pk_csf.fkg_val_ref_cte_anul ( en_conhectransp_id => en_conhectransp_id, ev_nro_chave_cte_anul => rec.nro_chave_cte_anul ) = False then
               --
               vn_fase := 25.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'Informado o grupo do "Tomador não é contribuinte de ICMS" ('||rec.nro_chave_cte_anul||
                                  ') porém o do Ct-e de anulação não foi inserido.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_substituicao fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_substituicao;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Ct-e Normal e Dutoviário
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ct_duto ( est_log_generico   in out nocopy dbms_sql.number_table
                                   , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   vn_dm_tp_cte       conhec_transp.dm_tp_cte%type;
   vv_dm_modal        conhec_transp.dm_modal%type;
   --
   cursor c_duto is
   select *
     from Conhec_Transp_Duto
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de informações dutoviárias.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Duto
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      vv_dm_modal  := pk_csf.fkg_dm_modal(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      -- Caso o Ct-e for Normal e de Modal Dutoviário verifica a Ocorrência
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '05'
         and nvl(vn_qtde,0) > 1 then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Modal Dutoviário para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.4;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '05'
         and nvl(vn_qtde, 0) = 0  then
         --
         vn_fase := 2.5;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações de Modal Dutoviário para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.6;
      --
      --Caso o Modal não seja dutoviário verifica se há informações inseridas
      if vn_dm_tp_cte = 0
         and vv_dm_modal <> '05'
         and nvl(vn_qtde, 0) > 1  then
         --
         vn_fase := 2.7;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A Modalidade do Ct-e ('||vv_dm_modal||') não é de Modal Dutoviário.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Modal Dutoviário
      --
      vn_fase := 3;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '05'
         and nvl(vn_qtde, 0) = 1 then
         --
         -- Recupero as informações do conhecimento de transporte dutoviário.
         for rec in c_duto loop
            --
            vn_fase := 4;
            --
            -- Verifica se o Modal for Dutoviário não pode haver informações de produtos perigosos registrados no Ct-e.
            if pk_csf.fkg_valid_prod_peri(en_conhectransp_id => en_conhectransp_id) = True then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O Ct-e de Modal Dutoviário ('||vv_dm_modal||
                                  ') não pode haver informações no "Grupo de Produto Perigosos".';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ct_duto fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ct_duto;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Ct-e Normal e Ferroviário
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ct_ferrov ( est_log_generico   in out nocopy dbms_sql.number_table
                                     , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   vn_dm_tp_cte       conhec_transp.dm_tp_cte%type;
   vv_dm_modal        conhec_transp.dm_modal%type;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      -- Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de informações ferroviárias.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Ferrov
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      vv_dm_modal  := pk_csf.fkg_dm_modal(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      --Caso o Ct-e for Normal e de Modal Ferroviário verifica a Ocorrência
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '04'
         and nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Modal Ferroviário para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.4;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '04'
         and nvl(vn_qtde, 0) = 0  then
         --
         vn_fase := 2.5;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações de Modal Ferroviário para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.6;
      --
      --Caso o Modal não seja ferroviário verifica se há informações inseridas
      if vn_dm_tp_cte = 0
         and vv_dm_modal <> '04'
         and nvl(vn_qtde, 0) > 1  then
         --
         vn_fase := 2.7;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A Modalidade do Ct-e ('||vv_dm_modal||') não é de Modal Ferroviário.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ct_ferrov fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ct_ferrov;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Ct-e Normal e Aquaviário
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ct_aquav ( est_log_generico   in out nocopy dbms_sql.number_table
                                    , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   vn_dm_tp_cte       conhec_transp.dm_tp_cte%type;
   vv_dm_modal        conhec_transp.dm_modal%type;
   --
   cursor c_aquav is
   select *
     from Conhec_Transp_Aquav
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de informações Aquaviárias.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Aquav
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      vv_dm_modal  := pk_csf.fkg_dm_modal(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      --Caso o Ct-e for Normal e de Modal Aquaviárias verifica a Ocorrência
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '03'
         and nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Modal Aquaviário para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '03'
         and nvl(vn_qtde, 0) = 0  then
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações de Modal Aquaviário para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.5;
      --
      --Caso o Modal não seja Aquaviário verifica se há informações inseridas
      if vn_dm_tp_cte = 0
         and vv_dm_modal <> '03'
         and nvl(vn_qtde, 0) > 1  then
         --
         vn_fase := 2.6;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A Modalidade do Ct-e ('||vv_dm_modal||') não é de Modal Aquaviário.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                             , est_log_generico => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Modal Aquaviário
      --
      vn_fase := 3;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '03'
         and nvl(vn_qtde, 0) = 1 then
         --
         -- Recupero as informações do conhecimento de transporte Aquaviário.
         for rec in c_aquav loop
            --
            vn_fase := 4;
            --
            -- Verifica se o Modal for Aquaviário a ocorrência para o lacre é dê 0 - 3.
            if pk_csf.fkg_valid_lacre_aquav(en_conhectranspaquav_id => rec.id) not between 0 and 3 then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A Ocorrência do Ct-e Aquaviário para o "Grupo de Informações dos Lacres dos Cointainers da Qtde da Carga" ('||
                                  pk_csf.fkg_valid_lacre_aquav(en_conhectranspaquav_id => rec.id)||') é ZERO até TRÊS.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ct_aquav fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ct_aquav;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento valida informação de Ct-e Normal e Aéreo
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ct_aereo ( est_log_generico   in out nocopy dbms_sql.number_table
                                    , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   vn_dm_tp_cte       conhec_transp.dm_tp_cte%type;
   vv_dm_modal        conhec_transp.dm_modal%type;
   --
   cursor c_aereo is
   select *
     from Conhec_Transp_Aereo
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de informações aéreas.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Aereo
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      vv_dm_modal  := pk_csf.fkg_dm_modal(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      --Caso o Ct-e for Normal e de Modal Aéreo verifica a Ocorrência
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '02'
         and nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Modal Aéreo para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.4;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '02'
         and nvl(vn_qtde, 0) = 0  then
         --
         vn_fase := 2.5;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações de Modal Aéreo para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.6;
      --
      --Caso o Modal não seja Aéreo verifica se há informações inseridas
      if vn_dm_tp_cte = 0
         and vv_dm_modal <> '02'
         and nvl(vn_qtde, 0) > 1  then
         --
         vn_fase := 2.7;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A Modalidade do Ct-e ('||vv_dm_modal||') não é de Modal Aéreo.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Modal Aéreo
      --
      vn_fase := 3;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '02'
         and nvl(vn_qtde, 0) = 1 then
         --
         -- Recupero as informações do conhecimento de transporte aéreo.
         for rec in c_aereo loop
            --
            vn_fase := 4;
            --
            -- Verifica se o Modal for Aéreo não pode haver informações de produtos perigosos registrados no Ct-e.
            if pk_csf.fkg_valid_prod_peri(en_conhectransp_id => en_conhectransp_id) = True then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O Ct-e de Modal Aéreo ('||vv_dm_modal||') não pode haver informações no "Grupo de Produto Perigosos".';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ct_aereo fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ct_aereo;

-------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Ct-e Normal e Rodoviário
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
-------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ct_rodo ( est_log_generico   in out nocopy dbms_sql.number_table
                                   , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   vn_dm_tp_cte       conhec_transp.dm_tp_cte%type;
   vv_dm_modal        conhec_transp.dm_modal%type;
   --
   cursor c_rodo is
   select *
     from Conhec_Transp_Rodo
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de informações Rodoviário.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Rodo
          where conhectransp_id = en_conhectransp_id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      vv_dm_modal  := pk_csf.fkg_dm_modal(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      -- Caso o Ct-e for Normal e de Modal Rodoviário verifica a Ocorrência
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Modal Rodoviário para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                             , est_log_generico => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.4;
      --
      if vn_dm_tp_cte        = 0      and
         vv_dm_modal         = '01'   and
         nvl(vn_qtde, 0)     = 0      and
         nvl(gn_dm_ind_emit,0)  = 0      and  -- emissao
         nvl(gn_dm_legado,0) = 0      then -- nao legado
         --
         vn_fase := 2.5;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações de Modal Rodoviário para o Conhec. Transp.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.6;
      --
      --Caso o Modal não seja Rodoviário verifica se há informações inseridas
      if vn_dm_tp_cte = 0
         and vv_dm_modal <> '01'
         and nvl(vn_qtde, 0) > 1  then
         --
         vn_fase := 2.7;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'A Modalidade do Ct-e ('||vv_dm_modal||') não é de Modal Rodoviário.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Modal Rodoviário
      --
      vn_fase := 3;
      --
      if vn_dm_tp_cte = 0
         and vv_dm_modal = '01'
         and nvl(vn_qtde, 0) = 1 then
         --
         -- Recupero as informações do conhecimento de transporte Rodoviário.
         for rec in c_rodo loop
            --
            vn_fase := 4;
            --
            -- Verifica se o Modal for Rodoviário a ocorrência de Ordens de Coleta é de 0 - 10
            if pk_csf.fkg_valid_ctrodo_occ(en_conhectransprodo_id => rec.id) not between 0 and 10 then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A ocorrência no Ct-e Rodoviário para o grupo "Ordens de Coleta associados" ('||
                                  pk_csf.fkg_valid_ctrodo_occ(en_conhectransprodo_id => rec.id)||') é de ZERO até DEZ.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se o Modal for Rodoviário e de lotação a ocorrência de Vale Pedágio é de 0 - 1
            if rec.dm_lotacao = 1
               and pk_csf.fkg_valid_ctrodo_valeped(en_conhectransprodo_id => rec.id) not between 0 and 1 then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A ocorrência no Ct-e Rodoviário para o grupo "Vale Pedágio" ('||
                                  pk_csf.fkg_valid_ctrodo_valeped(en_conhectransprodo_id => rec.id)||') é de ZERO até UM.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
             --
            vn_fase := 6;
            --
            -- Verifica se o Modal for Rodoviário e não for lotação o grupo Vale Pedágio não poderá estar preenchido
            if rec.dm_lotacao = 0
               and pk_csf.fkg_valid_ctrodo_valeped(en_conhectransprodo_id => rec.id) > 0 then
               --
               vn_fase := 6.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A ocorrência no Ct-e Rodoviário para o grupo "Vale Pedágio" ('||
                                  pk_csf.fkg_valid_ctrodo_valeped(en_conhectransprodo_id => rec.id)||
                                  ') não pode existir quando o Indicador de Lotação for NÃO ('||rec.dm_lotacao||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ct_rodo fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ct_rodo;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Ct-e Normal e Rodoviário para veículos próprios
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ctrodo_veic ( est_log_generico   in out nocopy dbms_sql.number_table
                                       , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   --
   cursor c_ctrodo_veic is
   select a.*
     from Ctrodo_Veic a
        , Conhec_Transp_Rodo b
    where b.conhectransp_id = en_conhectransp_id
      and a.conhectransprodo_id = b.id
    order by a.id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --
      -- Recupero as informações do conhecimento de transporte Rodoviário referentes as informações dos veículos.
      for rec in c_ctrodo_veic loop
         --
         vn_fase := 3;
         --
         -- Verifica se o veículo pertencer ao emitente do Ct-e não deverá existir o grupo 'Proprietários do Veículo'
         if rec.dm_tp_prop = 'P'
            and pk_csf.fkg_valid_ctrodo_veic_prop(en_ctrodoveic_id => rec.id) = True then
            --
            vn_fase := 3.1;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Não informar a TAG "Proprietários do Veículo" quando veículo pertencer ao Emitente do CT-e ('||rec.dm_tp_prop||').';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
            --
         end if;
         --
         vn_fase := 4;
         --
         -- Verifica se o veículo não pertencer ao emitente do Ct-e deverá existir o grupo 'Proprietários do Veículo'
         if rec.dm_tp_prop = 'T'
            and pk_csf.fkg_valid_ctrodo_veic_prop(en_ctrodoveic_id => rec.id) = False then
            --
            vn_fase := 4.1;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Informar a TAG "Proprietários do Veículo" quando veículo não pertencer ao Emitente do CT-e ('||rec.dm_tp_prop||').';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
            --
         end if;
         --
      end loop;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ctrodo_veic fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ctrodo_veic;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação do Seguro da Carga
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_conhec_transp_seg ( est_log_generico   in out nocopy dbms_sql.number_table
                                       , en_conhectransp_id in            conhec_transp_seg.conhectransp_id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 and
      nvl(gn_dm_ind_emit,0)        = 0 and      -- emissao
      nvl(gn_dm_legado,0)       = 0 then -- nao legado
      --
      vn_fase := 2;
      --
      if pk_csf.fkg_dm_modal(en_conhectransp_id => en_conhectransp_id) = '01' then
         --
         -- Recupera as informações do Seguro da Carga.
         --
         vn_fase := 3;
         --
         begin
            select count(1)
              into vn_qtde
              from conhec_transp_seg
             where conhectransp_id = en_conhectransp_id;
         exception
            when others then
               vn_qtde := 0;
         end;
         --
         if nvl(vn_qtde,0)       <= 0 and
            nvl(gn_dm_ind_emit,0)    = 0 and  -- emissao
            nvl(gn_dm_legado,0)   = 0 then -- nao legado
            --
            vn_fase := 4;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'O Grupo "Informações do Seguro da Carga" é obrigatório para o Modal Rodoviário.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
            --
         end if;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_conhec_transp_seg fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_conhec_transp_seg;
--
--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida as Informações relativas aos Impostos
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ct_imp ( est_log_generico   in out nocopy dbms_sql.number_table
                                  , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   cursor c_imp is
   select *
     from conhec_transp_imp
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro relativo a impostos por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from conhec_transp_imp
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Grupo de "Informações relativas aos Impostos" para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      --Verifica se há informações relativas aos Impostos.
      if nvl(vn_qtde, 0) = 0 then
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há registro do Grupo de "Informações relativas aos Impostos" para o Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para as Informações relativas aos Impostos.
      --
      vn_fase := 3;
      --
      if vn_qtde = 1 then
         --
         -- Recupero as informações relativas a impostos do conhecimento de transporte.
         for rec in c_imp loop
            --
            vn_fase := 4;
            --
            -- Verifica se o imposto em questão é referente ao ICMS
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec.tipoimp_id)) <> 'ICMS' then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Tipo do Imposto" ('||trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec.tipoimp_id))||') não ocorre para CT-e.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Separei a validação por TAG pois é mais fácil de dar manutenção no caso de alteração de regras no futuro.
            -- Verifica se TAG de CST00
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec.tipoimp_id)) = 'ICMS'
               and trim(pk_csf.fkg_Cod_ST_cod(en_id_st => rec.codst_id)) = '00' then
               --
               vn_fase := 5.1;
               --
               -- Verifica se a base de icms foi informada
               if nvl(rec.vl_base_calc, 0) <= 0 then
                  --
                  vn_fase := 5.2;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Base de Cálculo" é obrigatória ('||rec.vl_base_calc||') para Cód. da Situação Tributária 00.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 5.3;
               --
               -- Verifica se a aliquota de icms foi informada
               if nvl(rec.aliq_apli, 0) <= 0 then
                  --
                  vn_fase := 5.4;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Alíquota do ICMS" é obrigatória ('||rec.aliq_apli||') para Cód. da Situação Tributária 00.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 5.5;
               --
               -- Verifica se o valor de icms foi informado
               if nvl(rec.vl_imp_trib, 0) <= 0 then
                  --
                  vn_fase := 5.6;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Valor Tributado" é obrigatório ('||rec.vl_imp_trib||') para Cód. da Situação Tributária 00.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
            end if;
            --
            vn_fase := 6;
            --
            -- Verifica se TAG de CST20
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec.tipoimp_id)) = 'ICMS'
               and trim(pk_csf.fkg_Cod_ST_cod(en_id_st => rec.codst_id)) = '20' then
               --
               vn_fase := 6.1;
               --
               -- Verifica se a base de icms foi informada
               if nvl(rec.vl_base_calc, 0) <= 0 then
                  --
                  vn_fase := 6.2;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Base de Cálculo" é obrigatória ('||rec.vl_base_calc||') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 6.3;
               --
               -- Verifica se a aliquota de icms foi informada
               if nvl(rec.aliq_apli, 0) <= 0 then
                  --
                  vn_fase := 6.4;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Alíquota do ICMS" é obrigatória ('||rec.aliq_apli||') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 6.5;
               --
               -- Verifica se o valor de icms foi informado
               if nvl(rec.vl_imp_trib, 0) <= 0 then
                  --
                  vn_fase := 6.6;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Valor Tributado" é obrigatório ('||rec.vl_imp_trib||') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 6.7;
               --
               -- Verifica se a valor de percentual de redução foi informada
               if nvl(rec.perc_reduc, 0) <= 0 then
                  --
                  vn_fase := 6.8;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Percentual de Redução" é obrigatório ('||rec.perc_reduc||') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
            end if;
            --
            vn_fase := 7;
            --
            -- Verifica se TAG de CST90
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec.tipoimp_id)) = 'ICMS'
               and trim(pk_csf.fkg_Cod_ST_cod(en_id_st => rec.codst_id)) = '90' then
               --
               vn_fase := 7.1;
               --
               -- Verifica se a base de icms foi informada
               if nvl(rec.vl_base_calc, 0) <= 0 then
                  --
                  vn_fase := 7.2;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Base de Cálculo" é obrigatória ('||rec.vl_base_calc||') para Cód. da Situação Tributária 90.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 7.3;
               --
               -- Verifica se a aliquota de icms foi informada
               if nvl(rec.aliq_apli, 0) <= 0 then
                  --
                  vn_fase := 7.4;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Alíquota do ICMS" é obrigatória ('||rec.aliq_apli||') para Cód. da Situação Tributária 90.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 7.5;
               --
               -- Verifica se o valor de icms foi informado
               if nvl(rec.vl_imp_trib, 0) <= 0 then
                  --
                  vn_fase := 7.6;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Valor Tributado" é obrigatório ('||rec.vl_imp_trib||') para Cód. da Situação Tributária 90.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ct_imp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ct_imp;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação de Remetente de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_rem ( est_log_generico   in out nocopy dbms_sql.number_table
                               , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_qtde_inf_outro  number := 0;
   vn_qtde_loc_colet  number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   cursor c_rem is
   select *
     from Conhec_Transp_Rem
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de remetente por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Rem
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Remetente para Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      --Verifica a ocorrência do remetente para o tipo de serviço.
      if nvl(vn_qtde, 0)           = 0                                                 and
         pk_csf.fkg_dm_tp_serv (en_conhectransp_id => en_conhectransp_id) in (0, 1, 2) and
         nvl(gn_dm_ind_emit,0)        = 0                                                 and      -- emissao
         nvl(gn_dm_legado,0)       = 0                                                 then -- nao legado
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O Grupo "Remetente" é obrigatório para o Tipo de Serviço ('||pk_csf.fkg_dm_tp_serv(en_conhectransp_id => en_conhectransp_id)||').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para remetente do Ct-e
      --
      vn_fase := 3;
      --
      if vn_qtde = 1 then
         --
         -- Recupero as informações do remetente do conhecimento de transporte.
         for rec in c_rem loop
            exit when c_rem%notfound or (c_rem%notfound) is null;
            --
            vn_fase := 4;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Nacionais
            if rec.uf <> 'EX'
               and substr(trim(rec.ibge_cidade), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => rec.uf) then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') não pertence ao estado ('||rec.uf||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Exterior.
            if rec.uf = 'EX' and substr(trim(rec.ibge_cidade), 1, 2) <> '99' then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') deve assumir o valor de 9999999 para operações no Exterior.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6;
            /*
            --
            begin
               select count(1)
                 into vn_qtde_inf_nf
                 from ctrem_inf_nf
                where conhectransprem_id = rec.id;
            exception
               when others then
                  vn_qtde_inf_nf := 0;
            end;
            --
            vn_fase := 6.1;
            --
            begin
               select count(1)
                 into vn_qtde_inf_nfe
                 from ctrem_inf_nfe
                where conhectransprem_id = rec.id;
            exception
               when others then
                  vn_qtde_inf_nfe := 0;
            end;
            --
            vn_fase := 6.2;
            --
            begin
               select count(1)
                 into vn_qtde_inf_outro
                 from ctrem_inf_outro
                where conhectransprem_id = rec.id;
            exception
               when others then
                  vn_qtde_inf_outro := 0;
            end;
            --
            vn_fase := 6.3;
            --
            if nvl(vn_qtde_inf_nf,0) <= 0
               and nvl(vn_qtde_inf_nfe,0) <= 0
               and nvl(vn_qtde_inf_outro,0) <= 0
               then
               --
               vn_fase := 6.4;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'Não foi informado os documentos fiscais do rementente do CTe (Nota Fiscal, NFe ou Declaração).';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6.5;
            --
            if nvl(vn_qtde_inf_nf,0) > 0
               and nvl(vn_qtde_inf_nfe,0) > 0
               then
               --
               vn_fase := 6.6;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'Não pode haver referencia de "Nota Fiscal" e "NFe" juntas para o rementente do CTe.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6.7;
            --
            if nvl(vn_qtde_inf_nf,0) > 0
               and nvl(vn_qtde_inf_outro,0) > 0
               then
               --
               vn_fase := 6.8;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'Não pode haver referencia de "Nota Fiscal" e "Demais Documentos" juntos para o rementente do CTe.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6.9;
            --
            if nvl(vn_qtde_inf_nfe,0) > 0
               and nvl(vn_qtde_inf_outro,0) > 0
               then
               --
               vn_fase := 6.10;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'Não pode haver referencia de "NFe" e "Demais Documentos" juntos para o rementente do CTe.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            */
            --
            vn_fase := 7;
            -- valida a qtdade de local de coleta
            begin
               --
               select count(1)
                 into vn_qtde_inf_outro
                 from ctrem_loc_colet
                where conhectransprem_id = rec.id;
               --
            exception
               when others then
                  vn_qtde_loc_colet := 0;
            end;
            --
            vn_fase := 7.1;
            --
            if nvl(vn_qtde_loc_colet,0) > 1 then
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'Não pode haver mais que um local de coleta do Remetente.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_rem fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_rem;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação do Destinatário de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_dest ( est_log_generico   in out nocopy dbms_sql.number_table
                                , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   cursor c_dest is
   select *
     from Conhec_Transp_Dest
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de remetente por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Dest
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Destinatário para Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      --Verifica a ocorrência do destinário para o tipo de serviço.
      if nvl(vn_qtde, 0)     = 0                                                       and
         pk_csf.fkg_dm_tp_serv (en_conhectransp_id => en_conhectransp_id) in (0, 1, 2) and
         nvl(gn_dm_ind_emit,0)  = 0                                                       and  -- emissao
         nvl(gn_dm_legado,0) = 0                                                       then -- nao legado
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O Grupo "Destinatário" é obrigatório para o Tipo de Serviço ('||pk_csf.fkg_dm_tp_serv(en_conhectransp_id => en_conhectransp_id)||').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Destinatário do Ct-e
      --
      vn_fase := 3;
      --
      if vn_qtde = 1 then
         --
         -- Recupero as informações do Destinatário do conhecimento de transporte.
         for rec in c_dest loop
            --
            vn_fase := 4;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Nacionais
            if rec.uf <> 'EX'
               and substr(trim(rec.ibge_cidade), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => rec.uf) then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') não pertence ao estado ('||rec.uf||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Exterior.
            if rec.uf = 'EX' and substr(trim(rec.ibge_cidade), 1, 2) <> '99' then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') deve assumir o valor de 9999999 para operações no Exterior.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6;
            --
            -- Caso o SuFrama seja informado. Verifica se a UF está entre AC, AM, RO, RR ou no caso de AP só permitido para os estado de Macapá e Santana
            if nvl(rec.suframa, 0) > 0 and rec.uf not in ('AC', 'AM', 'RO', 'RR', 'AP') then
               --
               vn_fase := 6.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código Suframa" ('||rec.suframa||') não pertence ao Estado ('||rec.uf||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 7;
            --
            -- Caso o SuFrama seja informado e o estador for AP verifica se o IBGE da Cidade pertence ao Macapá ou Santana.
            if nvl(rec.suframa, 0) > 0 and rec.uf = 'AP' and rec.ibge_cidade not in (1600303, 1600600) then
               --
               vn_fase := 7.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "IBGE da Cidade" ('||rec.ibge_cidade||') não pertence a região do Suframa.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
             --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_dest fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_dest;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação do Expedidor de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_exped ( est_log_generico   in out nocopy dbms_sql.number_table
                                 , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   cursor c_exped is
   select *
     from Conhec_Transp_Exped
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de remetente por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Exped
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Expedidor para Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      --Verifica a ocorrência do expedidor para o tipo de serviço.
      if nvl(vn_qtde, 0) = 0
         and pk_csf.fkg_dm_tp_serv (en_conhectransp_id => en_conhectransp_id) = 3 then
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O Grupo "Expedidor" é obrigatório para o Tipo de Serviço (' || pk_csf.fkg_dm_tp_serv (en_conhectransp_id => en_conhectransp_id) || ').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Expedidor do Ct-e
      --
      vn_fase := 3;
      --
      if vn_qtde = 1 then
         --
         -- Recupero as informações do Expedidor do conhecimento de transporte.
         for rec in c_exped loop
            --
            vn_fase := 4;
            --
            -- Verifica se os dois primeiros dígitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Nacionais
            if rec.uf <> 'EX'
               and substr(trim(rec.ibge_cidade), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => rec.uf) then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') não pertence ao estado ('||rec.uf||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se os dois primeiros dígitos do Cód. IBGE pertence a estado indicado no cadastro. Operações Exterior.
            if rec.uf = 'EX' and substr(trim(rec.ibge_cidade), 1, 2) <> '99' then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') deve assumir o valor de 9999999 para operações no Exterior.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
             --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_exped fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_exped;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação do Recebedor de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_receb ( est_log_generico   in out nocopy dbms_sql.number_table
                                 , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   cursor c_receb is
   select *
     from Conhec_Transp_Receb
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de Recebedor por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Receb
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Recebedor para Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      --Verifica a ocorrência do recebedor para o tipo de serviço.
      if nvl(vn_qtde, 0) = 0
         and pk_csf.fkg_dm_tp_serv (en_conhectransp_id => en_conhectransp_id) = 3 then
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'O Grupo "Recebedor" é obrigatório para o Tipo de Serviço ('||pk_csf.fkg_dm_tp_serv(en_conhectransp_id => en_conhectransp_id)||').';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Recebedor do Ct-e
      --
      vn_fase := 3;
      --
      if vn_qtde = 1 then
         --
         -- Recupero as informações do Recebedor do conhecimento de transporte.
         for rec in c_receb loop
            --
            vn_fase := 4;
            --
            -- Verifica se os dois primeiros dígitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Nacionais
            if rec.uf <> 'EX'
               and substr(trim(rec.ibge_cidade), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => rec.uf) then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') não pertence ao estado ('||rec.uf||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se os dois primeiros dígitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Exterior.
            if rec.uf = 'EX' and substr(trim(rec.ibge_cidade), 1, 2) <> '99' then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') deve assumir o valor de 9999999 para operações no Exterior.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
             --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_receb fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_receb;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação do Tomador de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_tom ( est_log_generico   in out nocopy dbms_sql.number_table
                               , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase number := 0;
   vn_qtde number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   cursor c_tom is
   select *
     from Conhec_Transp_Tomador
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de Recebedor por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Tomador
          where conhectransp_id = en_conhectransp_id;
      exception
        when others then
         vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Tomador para Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      --Verifica se há informações de Tomador.
      if nvl(vn_qtde, 0) = 0 then
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações do Tomador do Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Tomador do Ct-e
      --
      vn_fase := 3;
      --
      if vn_qtde = 1 then
         --
         -- Recupero as informações do Tomador do conhecimento de transporte.
         for rec in c_tom loop
            --
            vn_fase := 4;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Nacionais
            if rec.uf <> 'EX'
               and substr(trim(rec.ibge_cidade), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => rec.uf) then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" (' || rec.ibge_cidade || ') não pertence ao estado (' || rec.uf || ') .';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Exterior.
            if rec.uf = 'EX' and substr(trim(rec.ibge_cidade), 1, 2) <> '99' then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" (' || rec.ibge_cidade || ') deve assumir o valor de 9999999 para operações no Exterior.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
             --
         end loop;
      --
      end if;
    --
    end if;
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_tom fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_tom;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação do Emitente de CT-e
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_emit ( est_log_generico   in out nocopy dbms_sql.number_table
                                , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   cursor c_emit is
   select *
     from Conhec_Transp_Emit
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro de Recebedor por Ct-e.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Emit
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de um Emitente para Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      --Verifica se há informações de Emitente.
      if nvl(vn_qtde, 0)     = 0 and
         nvl(gn_dm_ind_emit,0)  = 0 and  -- emissao
         nvl(gn_dm_legado,0) = 0 then -- nao legado
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações do Emitente do Ct-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para Emitente do Ct-e
      --
      vn_fase := 3;
      --
      if vn_qtde = 1 then
         --
         -- Recupero as informações do Emitente do conhecimento de transporte.
         for rec in c_emit loop
            --
            vn_fase := 4;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence ao estado indicado no cadastro. Operações Nacionais
            if rec.uf <> 'EX'
               and substr(trim(rec.ibge_cidade), 1, 2) <> pk_csf.fkg_Estado_ibge_sigla(ev_sigla_estado => rec.uf) then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') não pertence ao estado ('||rec.uf||').';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se os dois primeiros digitos do Cód. IBGE pertence a estado indicado no cadastro. Operações Exterior.
            if rec.uf = 'EX' and substr(trim(rec.ibge_cidade), 1, 2) <> '99' then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Código IBGE da Cidade" ('||rec.ibge_cidade||') deve assumir o valor de 9999999 para operações no Exterior.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_emit fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_emit;

-------------------------------------------------------------------------------------------------------
-- Procedimento válida informação Dados complementares do CT-e
-------------------------------------------------------------------------------------------------------
procedure pkb_valida_conhec_transp_compl ( est_log_generico   in out nocopy dbms_sql.number_table
                                         , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      begin
         select count(1)
           into vn_qtde
           from conhec_transp_compl
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Informado mais de registro de Dados complementares do CT-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_conhec_transp_compl fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_conhec_transp_compl;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida as Informações relativas aos Impostos Complementados
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_infor_ctcompl_imp ( est_log_generico   in out nocopy dbms_sql.number_table
                                       , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase             number := 0;
   vn_qtde_ctcompltado number := 0;
   vn_qtde_ctcompl_imp number := 0;
   vn_loggenerico_id   log_generico_ct.id%type;
   --
   cursor c_ctcompltado is
   select a.*
     from conhec_transp_compltado a
    where a.conhectransp_id = en_conhectransp_id
    order by a.id;
   --
   cursor c_ctcompl_imp ( en_conhectranspcompltado_id ctcompltado_imp.conhectranspcompltado_id%type ) is
   select b.*
     from ctcompltado_imp b
    where b.conhectranspcompltado_id = en_conhectranspcompltado_id
    order by b.id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-1
      -- Verificar se há mais de um registro relativo aos Impostos Complementados.
      begin
         select count(1)
           into vn_qtde_ctcompltado
           from conhec_transp_compltado a
          where a.conhectransp_id = en_conhectransp_id;
      exception
         when others then
            vn_qtde_ctcompltado := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde_ctcompltado, 0) > 1 then
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não pode ser informado mais 10 (dez) registro do Grupo de "Impostos Complementados" para o Conhec. Transp.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                             , est_log_generico => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para as Informações relativas aos Impostos Complementados.
      --
      vn_fase := 3;
      --
      for rec in c_ctcompltado loop
         exit when c_ctcompltado%notfound or (c_ctcompltado%notfound) is null;
         --
         vn_fase := 3.1;
         --
         begin
            select count(1)
              into vn_qtde_ctcompl_imp
              from ctcompltado_imp
             where conhectranspcompltado_id = rec.id;
         exception
            when others then
               vn_qtde_ctcompl_imp := 0;
         end;
         --
         vn_fase := 3.2;
         --Verifica se NÃO há informações relativas aos Impostos Complementados.
         if nvl(vn_qtde_ctcompl_imp, 0) <= 0 then
            --
            vn_fase := 3.3;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Não há registro do Grupo de "Impostos Complementados" para o Ct-e.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico   => vn_loggenerico_id
                                , est_log_generico => est_log_generico );
            --
         end if;
         --
         vn_fase := 3.4;
         --Verifica se há mais de um registro para Impostos Complementados.
         if nvl(vn_qtde_ctcompl_imp, 0) > 1 then
            --
            vn_fase := 3.3;
            --
            gv_mensagem_log := null;
            --
            gv_mensagem_log := 'Existe mais de um registro as informações de "Impostos Complementados" para o Ct-e.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
            --
         end if;
         --
         -- Recupero as informações relativas a impostos do conhecimento de transporte.
         for rec_imp in c_ctcompl_imp(rec.id) loop
            exit when c_ctcompl_imp%notfound or (c_ctcompl_imp%notfound) is null;
            --
            vn_fase := 4;
            --
            -- Verifica se o imposto em questão é referente ao ICMS
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec_imp.tipoimp_id)) <> 'ICMS' then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "Tipo do Imposto" no Imposto Complementado ('||trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec_imp.tipoimp_id))||
                                  ') não ocorre para CT-e.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Separei a validação por TAG pois é mais fácil de dar manutenção no caso de alteração de regras no futuro.
            -- Verifica se TAG de CST00
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec_imp.tipoimp_id)) = 'ICMS'
               and trim(pk_csf.fkg_Cod_ST_cod(en_id_st => rec_imp.codst_id)) = '00' then
               --
               vn_fase := 5.1;
               --
               -- Verifica se a base de icms foi informada
               if nvl(rec_imp.vl_base_calc, 0) <= 0 then
                  --
                  vn_fase := 5.11;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Base de Cálculo" é obrigatória no Imposto Complementado ('||rec_imp.vl_base_calc||
                                     ') para Cód. da Situação Tributária 00.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 5.2;
               --
               -- Verifica se a aliquota de icms foi informada
               if nvl(rec_imp.aliq_apli, 0) <= 0 then
                  --
                  vn_fase := 5.22;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Alíquota do ICMS" é obrigatória no Imposto Complementado ('||rec_imp.aliq_apli||
                                     ') para Cód. da Situação Tributária 00.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 5.3;
               --
               -- Verifica se o valor de icms foi informado
               if nvl(rec_imp.vl_imp_trib, 0) <= 0 then
                  --
                  vn_fase := 5.33;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Valor Tributado" é obrigatório no Imposto Complementado ('||rec_imp.vl_imp_trib||
                                     ') para Cód. da Situação Tributária 00.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
            end if;
            --
            vn_fase := 6;
            --
            -- Verifica se TAG de CST20
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec_imp.tipoimp_id)) = 'ICMS'
               and trim(pk_csf.fkg_Cod_ST_cod(en_id_st => rec_imp.codst_id)) = '20' then
               --
               vn_fase := 6.1;
               --
               -- Verifica se a base de icms foi informada
               if nvl(rec_imp.vl_base_calc, 0) <= 0 then
                  --
                  vn_fase := 6.11;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Base de Cálculo" é obrigatória no Imposto Complementado ('||rec_imp.vl_base_calc||
                                     ') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 6.2;
               --
               -- Verifica se a aliquota de icms foi informada
               if nvl(rec_imp.aliq_apli, 0) <= 0 then
                  --
                  vn_fase := 6.22;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Alíquota do ICMS" é obrigatória no Imposto Complementado ('||rec_imp.aliq_apli||
                                     ') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 6.3;
               --
               -- Verifica se o valor de icms foi informado
               if nvl(rec_imp.vl_imp_trib, 0) <= 0 then
                  --
                  vn_fase := 6.33;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Valor Tributado" é obrigatório no Imposto Complementado ('||rec_imp.vl_imp_trib||
                                     ') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 6.4;
               --
               -- Verifica se o valor de percentual de redução foi informado
               if nvl(rec_imp.perc_reduc, 0) <= 0 then
                  --
                  vn_fase := 6.44;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Percentual de Redução" é obrigatório no Imposto Complementado ('||rec_imp.perc_reduc||
                                     ') para Cód. da Situação Tributária 20.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
            end if;
            --
            vn_fase := 7;
            --
            -- Verifica se TAG de CST90
            if trim(pk_csf.fkg_Tipo_Imp_Sigla(en_id => rec_imp.tipoimp_id)) = 'ICMS'
               and trim(pk_csf.fkg_Cod_ST_cod(en_id_st => rec_imp.codst_id)) = '90' then
               --
               vn_fase := 7.1;
               --
               -- Verifica se a base de icms foi informada
               if nvl(rec_imp.vl_base_calc, 0) <= 0 then
                  --
                  vn_fase := 7.11;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Base de Cálculo" é obrigatória no Imposto Complementado ('||rec_imp.vl_base_calc||
                                     ') para Cód. da Situação Tributária 90.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 7.2;
               --
               -- Verifica se a aliquota de icms foi informada
               if nvl(rec_imp.aliq_apli, 0) <= 0 then
                  --
                  vn_fase := 7.22;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'A "Alíquota do ICMS" é obrigatória no Imposto Complementado ('||rec_imp.aliq_apli||
                                     ') para Cód. da Situação Tributária 90.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
               vn_fase := 7.3;
               --
               -- Verifica se a valor de icms foi informada
               if nvl(rec_imp.vl_imp_trib, 0) <= 0 then
                  --
                  vn_fase := 7.33;
                  --
                  gv_mensagem_log := null;
                  --
                  gv_mensagem_log := 'O "Valor Tributado" é obrigatório no Imposto Complementado ('||rec_imp.vl_imp_trib||
                                     ') para Cód. da Situação Tributária 90.';
                  --
                  vn_loggenerico_id := null;
                  --
                  pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                   , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                   , ev_resumo          => gv_mensagem_log
                                   , en_tipo_log        => ERRO_DE_VALIDACAO
                                   , en_referencia_id   => gn_referencia_id
                                   , ev_obj_referencia  => gv_obj_referencia );
                  --
                  -- Armazena o "loggenerico_id" na memória
                  pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                      , est_log_generico  => est_log_generico );
                  --
               end if;
               --
            end if;
            --
         end loop;
         --
      end loop;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_infor_ctcompl_imp fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_infor_ctcompl_imp;

--------------------------------------------------------------------------------------------------------------------
-- Procedimento válida informação do CT-e Complementar
-- Verifica se as informações inseridas estão dentro das regras de negócios expostas no Layout do Ct-e versão 1.03.
--------------------------------------------------------------------------------------------------------------------
procedure pkb_valida_ct_compltado ( est_log_generico   in out nocopy dbms_sql.number_table
                                  , en_conhectransp_id in            conhec_transp.id%type )
is
   --
   vn_fase            number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%type;
   vn_id_ctreferen    conhec_transp.id%type;
   vn_dm_tp_cte       conhec_transp.dm_tp_cte%type;
   --
   cursor c_compltado is
   select *
     from conhec_transp_compltado
    where conhectransp_id = en_conhectransp_id
    order by id;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --Validações de Ocorrência: 1-10
      -- Verificar se há mais de dez registros de CT-e Complementar.
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Compltado
          where conhectransp_id = en_conhectransp_id
       order by id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 2.1;
      --
      vn_dm_tp_cte := pk_csf.fkg_dm_tp_cte(en_conhectransp_id => en_conhectransp_id);
      --
      vn_fase := 2.2;
      --
      if vn_dm_tp_cte = 1
         and nvl(vn_qtde, 0) > 1 then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Referenciado mais de um "CT-e Complementar".';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.4;
      --
      --Verifica se há informações de CT-e Complementar.
      if vn_dm_tp_cte = 1
         and nvl(vn_qtde, 0) = 0 then
         --
         vn_fase := 2.5;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não há informações de "CT-e Complementar".';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.6;
      --
      --Verifica se há informações de CT-e Complementar para Ct-e cuja a finalidade não é 1.
      if vn_dm_tp_cte <> 1
         and nvl(vn_qtde, 0) > 0 then
         --
         vn_fase := 2.7;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Há informações de "CT-e Complementar" porém a Finalidade do Ct-e é diferente de 1.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      --Caso a Ocorrência esteja correta o sistema valida as demais regras de negócio para CT-e Complementar
      --
      vn_fase := 3;
      --
      if vn_dm_tp_cte <> 1 then
         --
         -- Recupero as informações do CT-e Complementar.
         for rec in c_compltado loop
            --
            vn_fase := 4;
            --
            -- Busca o ID do Conhecimento de Transporte através da Chave do Ct-e Complementado
            --
            vn_id_ctreferen := nvl(pk_csf.fkg_conhectransp_id_pela_chave(en_nro_chave_cte => rec.nro_chave_cte_comp), 0);
            --
            -- Verifica se os CNPJ do Emitente dos Ct-e referenciados(originais) são os mesmos que o do CT-e Complementar
            --| E parametro vv_pessoa onde assumir: R - Remetente, D- Destinarario, E - Expedidor, RC - Recebedor, T - Tomador, EM - Emitente
            if pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => vn_id_ctreferen, vv_pessoa => 'EM') <>
               pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'EM') then
               --
               vn_fase := 4.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'O "CNPJ do Emitente" ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => en_conhectransp_id, vv_pessoa => 'EM')||') é '||
                                  'diferente do CNPJ do CT-e referenciado ('||pk_csf.fkg_cnpj_pelo_id(en_conhectransp_id => vn_id_ctreferen, vv_pessoa => 'EM')||
                                  ') pela chave: '||rec.nro_chave_cte_comp||'.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 5;
            --
            -- Verifica se existe CT-e que foi referenciado na Chave do CT-e complementado.
            if nvl(vn_id_ctreferen, 0) = 0 then
               --
               vn_fase := 5.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "Chave do CT-e complementado" ('||rec.nro_chave_cte_comp||') não localizou nenhum Ct-e na base de dados.';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
            vn_fase := 6;
            --
            -- Verifica se existe CT-e que foi referenciado foi emitido com a finalidade de Normal(0).
            if pk_csf.fkg_dm_tp_cte ( en_conhectransp_id => vn_id_ctreferen ) <> 0  then
               --
               vn_fase := 6.1;
               --
               gv_mensagem_log := null;
               --
               gv_mensagem_log := 'A "Chave do CT-e complementado" ('||rec.nro_chave_cte_comp||') corresponde ao um Ct-e com a finalidade diferente de Normal(0).';
               --
               vn_loggenerico_id := null;
               --
               pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
               --
               -- Armazena o "loggenerico_id" na memória
               pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
               --
            end if;
            --
         end loop;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_ct_compltado fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_ct_compltado;

-------------------------------------------------------------------------------------------------------
-- Procedimento valida se foi informado o Grupo de informações do CT-e Normal e Substituto
-------------------------------------------------------------------------------------------------------
procedure pkb_valida_ct_Infcarga ( est_log_generico   in out nocopy dbms_sql.number_table
                                 , en_conhectransp_id in            Conhec_Transp.Id%TYPE )
is
   --
   vn_fase            number := 0;
   vn_qtde_Infcarga   number := 0;
   vn_qtde            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0
      and gt_row_conhec_transp.dm_tp_cte = 0 -- Normal
      then
      --
      vn_fase := 2;
      --
      -- soma a quantidade de informações de carga
      begin
         select count(1)
           into vn_qtde_Infcarga
           from Conhec_Transp_Infcarga
          where conhectransp_id = en_conhectransp_id;
      exception
         when others then
            vn_qtde_Infcarga := 0;
      end;
      --
      vn_fase := 2.1;
      --
      if nvl(vn_qtde_Infcarga,0) <= 0 and
         nvl(gn_dm_ind_emit,0)       = 0 and  -- emissao
         nvl(gn_dm_legado,0)      = 0 then -- nao legado
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não informado o registro de Informações da Carga do CT-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 2.3;
      --
      if nvl(vn_qtde_Infcarga,0) > 1 then
         --
         vn_fase := 2.4;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não pode ser informado mais que um registro de Informações da Carga do CT-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      end if;
      --
      vn_fase := 3;
      --
      begin
         select count(1)
           into vn_qtde
           from Conhec_Transp_Infcarga ic
              , ctinfcarga_qtde        q
          where ic.conhectransp_id        = en_conhectransp_id
            and q.conhectranspinfcarga_id = ic.id;
      exception
         when others then
            vn_qtde := 0;
      end;
      --
      vn_fase := 3.1;
      --
      if nvl(vn_qtde,0)     <= 0 and
         nvl(gn_dm_ind_emit,0)  = 0 and  -- emissao
         nvl(gn_dm_legado,0) = 0 then -- nao legado
         --
         vn_fase := 2.2;
         --
         gv_mensagem_log := null;
         --
         gv_mensagem_log := 'Não informado o registro de Informações da quantidades da Carga do CT-e.';
         --
         vn_loggenerico_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_VALIDACAO
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_valida_ct_Infcarga fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_ct_Infcarga;
--
-- =================================================================================================================== --
procedure pkb_valida_ct_d190 ( est_log_generico   in out nocopy dbms_sql.number_table
                             , en_conhectransp_id in            Conhec_Transp.Id%TYPE ) is
-- =================================================================================================================== --
   --
   vn_fase            number := 0;
   vn_qtd             number := 0;
   vn_vl_base_calc    number := 0;
   vn_vl_imp_trib     number := 0;
   vn_aliq_apli       number := 0;
   vn_cfop_id         number := null;
   vn_codst_id        number := null;
   vn_vl_opr          number := 0;     
   --
   cursor cur_conhec is
      select ct.codst_id
           , ct.cfop_id
           , ct.aliq_icms
        from ct_reg_anal ct
       where conhectransp_id = en_conhectransp_id;
   --
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
begin
   --
   begin
      --
      select count(*)
        into vn_qtd
        from ct_reg_anal ct
       where ct.conhectransp_id = en_conhectransp_id;
      --
   exception
      when no_data_found then
         vn_qtd := 0;
   end;
   -- Retornar vlr para os campos abaixo, são os campos da tab ct_reg_anal
   --
   if nvl(en_conhectransp_id, 0) > 0 then
      --
      vn_fase := 1;
      --
      -- Não foi incluído begin para tratar o erro do select no exception principal
      begin  
      select ct.cfop_id
           , imp.codst_id
           , imp.aliq_apli -- aliq_icms
           , sum(nvl(imp.vl_base_calc, 0)) vl_base_calc
           , sum(nvl(imp.vl_imp_trib, 0))  vl_imp_trib
        into vn_cfop_id
           , vn_codst_id
           , vn_aliq_apli
           , vn_vl_base_calc
           , vn_vl_imp_trib
        from conhec_transp     ct
            , conhec_transp_imp imp
           , tipo_imposto      ti
       where imp.conhectransp_id = ct.id
         and ti.id               = imp.tipoimp_id
         and ti.cd               = 1 -- ICMS
         and ct.id               = en_conhectransp_id
       group by ct.cfop_id
           , imp.codst_id
           , imp.aliq_apli;
      exception
        when no_data_found then
      --
          gv_cabec_log    := 'Não encotrado o imposto ICMS pk_csf_api_ct.pkb_valida_ct_d190 fase:(' || vn_fase || ') EN_CONHECTRANSP_ID: '||en_conhectransp_id||'. ' || sqlerrm;
          gv_mensagem_log := 'Não encotrado o imposto ICMS pk_csf_api_ct.pkb_valida_ct_d190 fase:(' || vn_fase || '): ' || sqlerrm;
          --
          declare
             vn_loggenerico_id  log_generico_ct.id%TYPE;
          begin
             --
             pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                              , ev_mensagem        => gv_cabec_log
                              , ev_resumo          => gv_mensagem_log
                              , en_tipo_log        => ERRO_DE_SISTEMA
                              , en_referencia_id   => en_conhectransp_id
                              , ev_obj_referencia  => gv_obj_referencia );
             --
             -- Armazena o "loggenerico_id" na memória
             pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                 , est_log_generico  => est_log_generico );
             --
          exception
             when others then
                null;
          end;
        when others then
          --
          gv_cabec_log    := 'Falha na execução do select pk_csf_api_ct.pkb_valida_ct_d190 fase:(' || vn_fase || ') EN_CONHECTRANSP_ID: '||en_conhectransp_id||'. ' || sqlerrm;
          gv_mensagem_log := 'Falha na execução do select ICMS pk_csf_api_ct.pkb_valida_ct_d190 fase:(' || vn_fase || '): ' || sqlerrm;
          --
          declare
             vn_loggenerico_id  log_generico_ct.id%TYPE;
          begin
             --
             pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                              , ev_mensagem        => gv_cabec_log
                              , ev_resumo          => gv_mensagem_log
                              , en_tipo_log        => ERRO_DE_SISTEMA
                              , en_referencia_id   => en_conhectransp_id
                              , ev_obj_referencia  => gv_obj_referencia );
             --
             -- Armazena o "loggenerico_id" na memória
             pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                 , est_log_generico  => est_log_generico );
             --
          exception
             when others then
                null;
          end;
          
      end;
      --
      vn_fase := 1.1;
      --
      begin
        select ctv.VL_DOCTO_FISCAL 
          into vn_vl_opr
          from conhec_transp_vlprest ctv 
        where ctv.conhectransp_id = en_conhectransp_id;
      exception
        when others then
        vn_vl_opr:=0;
      end;
      --
      if nvl(vn_qtd, 0) = 0 then
         --
         vn_fase := 2;
         --
         insert into ct_reg_anal ( id
                                 , conhectransp_id
                                 , codst_id
                                 , cfop_id
                                 , dm_orig_merc
                                 , aliq_icms
                                 , vl_opr
                                 , vl_bc_icms
                                 , vl_icms
                                 , vl_red_bc
                                 , obslanctofiscal_id
                                 , vl_base_outro
                                 , vl_imp_outro
                                 , vl_base_isenta
                                 , aliq_aplic_outro )
                          values ( ctreganal_seq.nextval -- id
                                 , en_conhectransp_id    -- conhectransp_id
                                 , vn_codst_id           -- codst_id
                                 , vn_cfop_id            -- cfop_id
                                 , 0                     -- dm_orig_merc
                                 , vn_aliq_apli          -- aliq_icms
                                 , vn_vl_opr             -- vl_opr
                                 , vn_vl_base_calc       -- vl_bc_icms
                                 , vn_vl_imp_trib        -- vl_icms
                                 , 0                     -- vl_red_bc
                                 , null                  -- obslanctofiscal_id
                                 , null                  -- vl_base_outro
                                 , null                  -- vl_imp_outro
                                 , null                  -- vl_base_isenta
                                 , null );               -- aliq_aplic_outro)
      --
      else
      --
         for rec_conhec in cur_conhec loop
            exit when cur_conhec%notfound or (cur_conhec%notfound) is null;
            --
            update ct_reg_anal
               set dm_orig_merc       = 0
                 , vl_opr             = vn_vl_opr
                 , vl_bc_icms         = vn_vl_base_calc
                 , vl_icms            = vn_vl_imp_trib
                 , vl_red_bc          = 0
                 , obslanctofiscal_id = null
                 , vl_base_outro      = null
                 , vl_imp_outro       = null
                 , vl_base_isenta     = null
                 , aliq_aplic_outro   = null
             where conhectransp_id    = en_conhectransp_id
               and codst_id           = rec_conhec.codst_id
               and cfop_id            = rec_conhec.cfop_id
               and aliq_icms          = rec_conhec.aliq_icms;
            --
         end loop;
         --
      --
      end if;
      --
      commit;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pk_csf_api_ct.pkb_valida_ct_d190(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_SISTEMA
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_ct_d190;
--
-- =================================================================================================================== --

procedure pkb_valida_ct_d100 ( est_log_generico     in out nocopy  dbms_sql.number_table
                             , en_conhectransp_id   in             conhec_transp.id%type )
is
   --
   vn_fase            number := 0;
   vd_dt_hr_emissao   CONHEC_TRANSP.DT_HR_EMISSAO%type;
   vv_cod_mod         MOD_FISCAL.cod_mod%type;
   vn_loggenerico_id  log_generico_ct.id%type;
   --
   cursor c_conhec_transp is
   select to_date(ct.DT_HR_EMISSAO, 'dd/mm/yyyy') dt_hr_emissao, md.cod_mod
     from CONHEC_TRANSP ct, MOD_FISCAL md
    where 1 = 1
      and ct.id = en_conhectransp_id
      and ct.modfiscal_id = md.id;
   --
  
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      -- Recupera quantidade de registros por "chave".
      open c_conhec_transp;
      fetch c_conhec_transp into vd_dt_hr_emissao
                               , vv_cod_mod;
      close c_conhec_transp;
      --
      vn_fase := 4;
      --
      if (nvl(vd_dt_hr_emissao,sysdate) >= '01/01/2019' and vv_cod_mod in ('07','09','10','11','26','27')) then
         --
         vn_fase := 4.1;
         --
         gv_mensagem_log := 'O modelo selecionado não está mais vigente na data de emissão informada.';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => erro_de_validacao
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
      end if;
      --
      vn_fase := 5;
      --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_csf_api_ct fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%type;
      begin
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => erro_de_sistema
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_valida_ct_d100;
--
-- =================================================================================================================== --
--
-- Procedimento de validar Informações de Documentos Fiscais

procedure pkb_vld_inf_doc ( est_log_generico   in out nocopy dbms_sql.number_table
                          , en_conhectransp_id in            Conhec_Transp.Id%TYPE
                          )
is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   --
   vn_dm_tp_serv      conhec_transp.dm_tp_serv%type;
   vn_qtde_ct_inf_nf     number;
   vn_qtde_ct_inf_nfe    number;
   vn_qtde_ct_inf_outro  number;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(en_conhectransp_id,0) > 0 then
      --
      vn_fase := 2;
      --
      vn_dm_tp_serv := pk_csf.fkg_dm_tp_serv ( en_conhectransp_id => en_conhectransp_id );
      --
      if vn_dm_tp_serv in (0, 1, 2)
         then
         --
         vn_fase := 3;
         --
         vn_qtde_ct_inf_nf     := 0;
         vn_qtde_ct_inf_nfe    := 0;
         vn_qtde_ct_inf_outro  := 0;
         --
         vn_fase := 3.1;
         --
         begin
            --
            select count(1)
              into vn_qtde_ct_inf_nf
              from ct_inf_nf
             where conhectransp_id = en_conhectransp_id;
            --
         exception
            when others then
               vn_qtde_ct_inf_nf := 0;
         end;
         --
         vn_fase := 3.2;
         --
         begin
            --
            select count(1)
              into vn_qtde_ct_inf_nfe
              from ct_inf_nfe
             where conhectransp_id = en_conhectransp_id;
            --
         exception
            when others then
               vn_qtde_ct_inf_nfe := 0;
         end;
         --
         vn_fase := 3.3;
         --
         begin
            --
            select count(1)
              into vn_qtde_ct_inf_outro
              from ct_inf_outro
             where conhectransp_id = en_conhectransp_id;
            --
         exception
            when others then
               vn_qtde_ct_inf_outro := 0;
         end;
         --
         vn_fase := 4;
         --
         if nvl(vn_qtde_ct_inf_nf,0)    <= 0 and
            nvl(vn_qtde_ct_inf_nfe,0)   <= 0 and
            nvl(vn_qtde_ct_inf_outro,0) <= 0 and
            nvl(gn_dm_ind_emit,0)           = 0 and  -- emissao
            nvl(gn_dm_legado,0)          = 0 then -- nao legado
            --
            gv_mensagem_log := 'Não informado algum Documento Fiscal de relacionamento com o CTe.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                , ev_resumo          => gv_mensagem_log
                                , en_tipo_log        => ERRO_DE_VALIDACAO
                                , en_referencia_id   => gn_referencia_id
                                , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                   , est_log_generico  => est_log_generico );
            --
         end if;
         --
         vn_fase := 5;
         --
         if nvl(vn_qtde_ct_inf_nf,0) > 0
            and nvl(vn_qtde_ct_inf_nfe,0) > 0
            then
            --
            gv_mensagem_log := 'Não pode haver referencia de "Nota Fiscal" e "NFe" juntas para o rementente do CTe.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
            --
         end if;
         --
         vn_fase := 5.1;
         --
         if nvl(vn_qtde_ct_inf_nf,0) > 0
            and nvl(vn_qtde_ct_inf_outro,0) > 0
            then
            --
            gv_mensagem_log := 'Não pode haver referencia de "Nota Fiscal" e "Demais Documentos" juntos para o rementente do CTe.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
            --
         end if;
         --
         vn_fase := 5.2;
         --
         if nvl(vn_qtde_ct_inf_nfe,0) > 0
            and nvl(vn_qtde_ct_inf_outro,0) > 0
            then
            --
            gv_mensagem_log := 'Não pode haver referencia de "NFe" e "Demais Documentos" juntos para o rementente do CTe.';
            --
            vn_loggenerico_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                             , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                             , ev_resumo          => gv_mensagem_log
                             , en_tipo_log        => ERRO_DE_VALIDACAO
                             , en_referencia_id   => gn_referencia_id
                             , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                , est_log_generico  => est_log_generico );
            --
         end if;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_vld_inf_doc fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_vld_inf_doc;

-------------------------------------------------------------------------------------------------------
-- Procedure que consiste os dados do Conhecimento de Transporte
-------------------------------------------------------------------------------------------------------
procedure pkb_consistem_ct(est_log_generico   in out nocopy dbms_sql.number_table,
                           en_conhectransp_id in conhec_transp.id%type) is
  --
  vn_fase           number := 0;
  vn_loggenerico_id log_generico_ct.id%type;
  vn_objintegr_id   obj_integr.id%type;
  vn_usuario_id     number;
  vv_maquina        varchar2(255);
  vv_desc_tipo_emit dominio.descr%type;
  --
begin
  --
  gv_cabec_log := 'Consistência dos dados Referente ao Conhecimento de Transporte. ' || pk_csf_ct.fkg_dados_conhectransp_id(en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 1;
  --
  gn_multorg_id := pk_csf.fkg_multorg_id_empresa(en_empresa_id => pk_csf_ct.fkg_busca_empresa_ct(en_conhectransp_id => en_conhectransp_id));
  --
  vn_fase := 1.1;
  --
  /*pk_csf_ct.pkb_busca_dm_ind_emit( en_conhectransp_id => en_conhectransp_id
                                 , sn_dm_ind_emit     => gn_dm_ind_emit
                                 , sn_dm_legado       => gn_dm_legado );*/
  --
  vn_fase := 2;
  --
  -- Valida informação de anulação
  pkb_valida_infor_anulacao(est_log_generico   => est_log_generico,
                            en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 3;
  -- Valida informação de Ct-e Complementado
  pkb_valida_ct_compltado(est_log_generico   => est_log_generico,
                          en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 4;
  -- Valida informação de substituição
  pkb_valida_infor_substituicao(est_log_generico   => est_log_generico,
                                en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 5;
  -- Valida informação Ct-e Dutoviário
  pkb_valida_infor_ct_duto(est_log_generico   => est_log_generico,
                           en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 6;
  -- Valida informação Ct-e Ferroviário
  pkb_valida_infor_ct_ferrov(est_log_generico   => est_log_generico,
                             en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 7;
  -- Válida informação do Ct-e Aquaviário
  pkb_valida_infor_ct_aquav(est_log_generico   => est_log_generico,
                            en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 8;
  -- Válida informação do Ct-e Aereo
  pkb_valida_infor_ct_aereo(est_log_generico   => est_log_generico,
                            en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 9;
  -- Válida informação do Ct-e Rodoviário
  pkb_valida_infor_ct_rodo(est_log_generico   => est_log_generico,
                           en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 10;
  -- Valida informação do Seguro de Carga
  pkb_valida_conhec_transp_seg(est_log_generico   => est_log_generico,
                               en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 11;
  -- Valida informação do Seguro de Carga
  --pkb_valida_infor_ct_imp ( est_log_generico   => est_log_generico
  --                        , en_conhectransp_id => en_conhectransp_id );
  --
  vn_fase := 12;
  -- Valida informação do Ct-e Rodoviário Veículos
  pkb_valida_infor_ctrodo_veic(est_log_generico   => est_log_generico,
                               en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 13;
  -- Valida informação do destinatario
  pkb_valida_infor_dest(est_log_generico   => est_log_generico,
                        en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 14;
  -- Valida informação do recebedor
  pkb_valida_infor_receb(est_log_generico   => est_log_generico,
                         en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 15;
  -- Valida informação do expededor
  pkb_valida_infor_exped(est_log_generico   => est_log_generico,
                         en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 16;
  -- Valida informação do remetente
  pkb_valida_infor_rem(est_log_generico   => est_log_generico,
                       en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 17;
  -- Valida informação do emitente
  pkb_valida_infor_emit(est_log_generico   => est_log_generico,
                        en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 18;
  -- Válida informação Dados complementares do CT-e
  pkb_valida_conhec_transp_compl(est_log_generico   => est_log_generico,
                                 en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 19;
  -- Valida se foi informado o Grupo de informações do CT-e Normal e Substituto
  pkb_valida_ct_infcarga(est_log_generico   => est_log_generico,
                         en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 20;
  -- validar Informações de Documentos Fiscais
  pkb_vld_inf_doc(est_log_generico   => est_log_generico,
                  en_conhectransp_id => en_conhectransp_id);
  --
  vn_fase := 21;
  -- Busca o vlr do icms
  pkb_valida_ct_d190(est_log_generico   => est_log_generico,
                     en_conhectransp_id => en_conhectransp_id);
  vn_fase := 22;                   
    pkb_valida_ct_d100(est_log_generico   => est_log_generico,
                     en_conhectransp_id => en_conhectransp_id);                     
  --
  -- Chama as rotinas programaveis do tipo "Emissão Online"
  --
  if nvl(gt_row_conhec_transp.dm_ind_emit, 1) = 0 then
    --
    -- Recupera o id do objeto de integração
    --
    begin
      select id 
        into vn_objintegr_id 
        from obj_integr 
       where cd = '4'; -- Conhecimento de Transporte
    exception
      when others then
        vn_objintegr_id := 0;
    end;
    --
    -- Recupera o USUARIO_ID
    --
    if nvl(gt_row_conhec_transp.usuario_id, 0) > 0 then
      --
      vn_usuario_id := gt_row_conhec_transp.usuario_id;
      --
    else
      --
      vn_usuario_id := pk_csf.fkg_usuario_id(ev_login => 'admin');
      --
    end if;
    --
    if nvl(vn_usuario_id, 0) <= 0 then
      --
      begin
        --
        select min(id) 
          into vn_usuario_id 
          from neo_usuario;
        --
      exception
        when others then
          null;
      end;
      --
    end if;
    --
    -- Recupera o nome da máquina
    --
    vv_maquina := sys_context('USERENV', 'HOST');
    --
    if vv_maquina is null then
      --
      vv_maquina := 'Servidor';
      --
    end if;
    --
    -- Chama o procedimento de execução das rotinas programaveis do tipo "Emissão Online"
    pk_csf_rot_prog.pkb_exec_rot_prog_online(en_id_doc         => en_conhectransp_id,
                                             ed_dt_ini         => trunc(gt_row_conhec_transp.dt_hr_emissao),
                                             ed_dt_fin         => trunc(gt_row_conhec_transp.dt_hr_emissao),
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_referencia_id  => en_conhectransp_id,
                                             en_usuario_id     => vn_usuario_id,
                                             ev_maquina        => vv_maquina,
                                             en_objintegr_id   => vn_objintegr_id,
                                             en_multorg_id     => gn_multorg_id,
                                             en_empresa_id     => pk_csf_ct.fkg_busca_empresa_ct(en_conhectransp_id => en_conhectransp_id));
    --
  end if;
  --
  vn_fase := 99;
  --
  if nvl(est_log_generico.count, 0) > 0 and gv_obj_referencia = 'CONHEC_TRANSP' then
    --
    if fkg_ver_erro_log_generico_ct( en_conhec_transp_id => en_conhectransp_id ) = 1 then
       update conhec_transp 
          set dm_st_proc = 10 
        where id         = en_conhectransp_id;
    end if; 
    --
  end if;
  --
  vn_fase := 99.1;
  --
  if gv_obj_referencia = 'CONHEC_TRANSP' then
    --
    if nvl(gt_row_conhec_transp.dm_ind_emit, 1) = 0 then
    
      -- Recupera a descrição (Emissão própria)
      vv_desc_tipo_emit := pk_csf.fkg_dominio(ev_dominio => 'CONHEC_TRANSP.DM_IND_EMIT',
                                              ev_vl      => upper(0));
    
      -- Se não contém erro de validação, Grava o Log de Conhecimento de Transporte Integrado - Terceiros
      gv_mensagem_log := 'Conhecimento de Transporte Integrado - ' || vv_desc_tipo_emit;
      --
      if nvl(est_log_generico.count, 0) = 0 then
        --
        gv_mensagem_log := gv_mensagem_log || ' e validado.';
        --
      end if;
      --
      vn_fase := 99.2;
      --
      pkb_log_generico_ct(sn_loggenerico_id => vn_loggenerico_id,
                          ev_mensagem       => gv_cabec_log,
                          ev_resumo         => gv_mensagem_log,
                          en_tipo_log       => conhec_transp_integrado,
                          en_referencia_id  => gn_referencia_id,
                          ev_obj_referencia => gv_obj_referencia);
      --
    elsif nvl(gt_row_conhec_transp.dm_ind_emit, 1) = 1 then
    
      -- Recupera a descrição (Terceiros)
      vv_desc_tipo_emit := pk_csf.fkg_dominio(ev_dominio => 'CONHEC_TRANSP.DM_IND_EMIT',
                                              ev_vl      => upper(1));
    
      -- Se não contém erro de validação, Grava o Log de Conhecimento de Transporte Integrado - Emissão própria
      gv_mensagem_log := 'Conhecimento de Transporte Integrado - ' || vv_desc_tipo_emit;
      --
      if nvl(est_log_generico.count, 0) = 0 then
        --
        gv_mensagem_log := gv_mensagem_log || ' e validado.';
        --
      end if;
      --
      vn_fase := 99.3;
      --
      pkb_log_generico_ct(sn_loggenerico_id => vn_loggenerico_id,
                          ev_mensagem       => gv_cabec_log,
                          ev_resumo         => gv_mensagem_log,
                          en_tipo_log       => conhec_transp_integrado,
                          en_referencia_id  => gn_referencia_id,
                          ev_obj_referencia => gv_obj_referencia);
      --
    end if;
    --
  end if;
  --
exception
  when others then
    --
    gv_mensagem_log := 'Erro na pkb_consistem_ct fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico_ct.id%TYPE;
    begin
      --
      pkb_log_generico_ct(sn_loggenerico_id => vn_loggenerico_id,
                          ev_mensagem       => gv_cabec_log,
                          ev_resumo         => gv_mensagem_log,
                          en_tipo_log       => ERRO_DE_SISTEMA,
                          en_referencia_id  => gn_referencia_id,
                          ev_obj_referencia => gv_obj_referencia);
      --
      -- Armazena o "loggenerico_id" na memória
      pkb_gt_log_generico_ct(en_loggenerico   => vn_loggenerico_id,
                             est_log_generico => est_log_generico);
      --
    exception
      when others then
        null;
    end;
    --
end pkb_consistem_ct;
-------------------------------------------------------------------------------------------------------
-- Função para validar os conhecimentos de transporte
-------------------------------------------------------------------------------------------------------
FUNCTION FKG_VALIDA_CT ( EN_EMPRESA_ID      IN  EMPRESA.ID%TYPE
                       , ED_DT_INI          IN  DATE
                       , ED_DT_FIN          IN  DATE
                       , EV_OBJ_REFERENCIA  IN  log_generico_ct.OBJ_REFERENCIA%TYPE
                       , EN_REFERENCIA_ID   IN  log_generico_ct.REFERENCIA_ID%TYPE )
         RETURN BOOLEAN IS
   --
   vn_fase              number;
   vt_log_generico      dbms_sql.number_table;
   vn_dm_dt_escr_dfepoe empresa.dm_dt_escr_dfepoe%type;
   --
   cursor c_conhec( en_dm_dt_escr_dfepoe in empresa.dm_dt_escr_dfepoe%type ) is
      select ct.id conhectransp_id
        from conhec_transp ct
       where ct.empresa_id      = en_empresa_id
         and ct.dm_st_proc      = 4 -- Autorizada
         and ct.dm_arm_cte_terc = 0
         and ct.dm_ind_emit     = 0 -- 0-emissão própria, 1-terceiros
         and ((ct.dm_ind_oper = 1 and ct.dt_hr_emissao between ed_dt_ini and ed_dt_fin)
               or
              (ct.dm_ind_oper = 0 and en_dm_dt_escr_dfepoe = 0 and ct.dt_hr_emissao between ed_dt_ini and ed_dt_fin)
               or
              (ct.dm_ind_oper = 0 and en_dm_dt_escr_dfepoe = 1 and nvl(ct.dt_sai_ent,ct.dt_hr_emissao) between ed_dt_ini and ed_dt_fin))
    order by ct.id;
   --
BEGIN
   --
   vn_fase := 1;
   --
   pkb_seta_tipo_integr ( en_tipo_integr => 0 ); -- 0-Valida e registra Log, 1-Valida, registra Log e insere a informação
   --
   pkb_seta_obj_ref ( ev_objeto => ev_obj_referencia );
   --
   pkb_seta_referencia_id ( en_id => en_referencia_id );
   --
   vn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa( en_empresa_id => en_empresa_id );
   --
   vn_fase := 2;
   --
   vt_log_generico.delete;
   --
   for rec in c_conhec( en_dm_dt_escr_dfepoe => vn_dm_dt_escr_dfepoe )
   loop
      --
      exit when c_conhec%notfound or (c_conhec%notfound) is null;
      --
      vn_fase := 3;
      --
      pkb_consistem_ct ( est_log_generico   => vt_log_generico
                       , en_conhectransp_id => rec.conhectransp_id );
      --
   end loop;
   --
   vn_fase := 4;
   --
   if nvl(vt_log_generico.count,0) > 0 then
      return false;
   else
      return true;
   end if;
   --
EXCEPTION
   when others then
      raise_application_error(-20101, 'Problemas em pk_csf_api_ct.fkg_valida_ct (fase = '||vn_fase||' empresa_id = '||en_empresa_id||' período de '||
                                      to_char(ed_dt_ini,'dd/mm/yyyy')||' até '||to_char(ed_dt_fin,'dd/mm/yyyy')||' objeto = '||ev_obj_referencia||
                                      ' referencia_id = '||en_referencia_id||'). Erro = '||sqlerrm);
END FKG_VALIDA_CT;

------------------------------------------------------------------------------------------------------------------

-- Procedimento valida o mult org de acordo com o COD e o HASH das tabelas Flex-Field

procedure pkb_val_atrib_multorg ( est_log_generico   in out nocopy  dbms_sql.number_table
                                , ev_obj_name        in             VARCHAR2
                                , ev_atributo        in             VARCHAR2
                                , ev_valor           in             VARCHAR2
                                , sv_cod_mult_org    out            VARCHAR2
                                , sv_hash_mult_org   out            VARCHAR2
                                , ev_obj_referencia  in             log_generico_ct.obj_referencia%type
                                , en_referencia_id   in             log_generico_ct.referencia_id%type
                                )


is
   --
   vn_fase              number := 0;
   vn_loggenericoct_id  log_generico_ct.id%type;
   vv_mensagem          varchar2(1000) := null;
   vn_dmtipocampo       ff_obj_util_integr.dm_tipo_campo%type;
   vv_hash_mult_org     mult_org.hash%type;
   vv_cod_mult_org      mult_org.cd%type;
  --
begin
 --
   vn_fase := 1;
   --
   gv_mensagem_log := null;
   --
   gn_referencia_id   := en_referencia_id;
   gv_obj_referencia  := ev_obj_referencia;
   --
   vn_fase := 2;
   --
   if trim(ev_valor) is null then
      --
      vn_fase := 3;
      --
      gv_mensagem_log := '"Código ou HASH da Mult-Organização (objeto: '|| ev_obj_name ||'):"VALOR" referente ao atributo deve ser informado.';
      --
      vn_loggenericoct_id := null;
      --
      pkb_log_generico_ct  ( sn_loggenerico_id  => vn_loggenericoct_id
                           , ev_mensagem        => gv_mensagem_log
                           , ev_resumo          => gv_cabec_log
                           , en_tipo_log        => INFORMACAO
                           , en_referencia_id   => gn_referencia_id
                           , ev_obj_referencia  => gv_obj_referencia );
      --
   end if;
   --
   vn_fase := 4;
   --
   vv_mensagem := pk_csf.fkg_ff_verif_campos( ev_obj_name => ev_obj_name
                                            , ev_atributo => trim(ev_atributo)
                                            , ev_valor    => trim(ev_valor) );
   --
   vn_fase := 5;
   --
   if vv_mensagem is not null then
      --
      vn_fase := 6;
      --
      gv_mensagem_log := vv_mensagem;
      --
      vn_loggenericoct_id := null;
      --
      pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenericoct_id
                           , ev_mensagem        => gv_mensagem_log
                           , ev_resumo          => gv_cabec_log
                           , en_tipo_log        => INFORMACAO
                           , en_referencia_id   => gn_referencia_id
                           , ev_obj_referencia  => gv_obj_referencia );
      --
   else
       --
      vn_fase := 7;
      --
      vn_dmtipocampo := pk_csf.fkg_ff_retorna_dmtipocampo( ev_obj_name => ev_obj_name
                                                         , ev_atributo => trim(ev_atributo) );
      --
      vn_fase := 8;
      --
      if trim(ev_valor) is not null then
         --
         vn_fase := 9;
         --
         if vn_dmtipocampo = 2 then -- tipo de campo = 0-data, 1-numérico, 2-caractere
            --
            vn_fase := 10;
            --
            if trim(ev_atributo) = 'COD_MULT_ORG' then
                --
                vn_fase := 11;
                --
                begin
                   vv_cod_mult_org := pk_csf.fkg_ff_ret_vlr_caracter( ev_obj_name => ev_obj_name
                                                                    , ev_atributo => trim(ev_atributo)
                                                                    , ev_valor    => trim(ev_valor) );
                exception
                   when others then
                      vv_cod_mult_org := null;
                end;
                --
            elsif trim(ev_atributo) = 'HASH_MULT_ORG' then
               --
                vn_fase := 12;
                --
                begin
                   vv_hash_mult_org := pk_csf.fkg_ff_ret_vlr_caracter( ev_obj_name => ev_obj_name
                                                                     , ev_atributo => trim(ev_atributo)
                                                                     , ev_valor    => trim(ev_valor) );
                exception
                   when others then
                      vv_hash_mult_org := null;
                end;
                --
            end if;
            --
         else
            --
            vn_fase := 13;
            --
            gv_mensagem_log := 'Para o atributo '||ev_atributo||', o VALOR informado não confere com o tipo de campo, deveria ser CARACTERE.';
            --
            vn_loggenericoct_id := null;
            --
            pkb_log_generico_ct ( sn_loggenerico_id => vn_loggenericoct_id
                                 , ev_mensagem       => gv_mensagem_log
                                 , ev_resumo         => gv_cabec_log
                                 , en_tipo_log       => INFORMACAO
                                 , en_referencia_id  => gn_referencia_id
                                 , ev_obj_referencia => gv_obj_referencia );
         end if;
         --
      end if;
      --
   end if;
   --
   vn_fase := 14;
   --
   sv_cod_mult_org := vv_cod_mult_org;
   --
   sv_hash_mult_org := vv_hash_mult_org;
--
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_val_atrib_multorg fase('||vn_fase||'): '||sqlerrm;
      --
      declare
         vn_loggenericoct_id  log_generico.id%type;
      begin
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenericoct_id
                              , ev_mensagem        => gv_mensagem_log
                              , ev_resumo          => gv_cabec_log
                              , en_tipo_log        => erro_de_validacao
                              , en_referencia_id   => gn_referencia_id
                              , ev_obj_referencia  => gv_obj_referencia );
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct  ( en_loggenerico    => vn_loggenericoct_id
                                 , est_log_generico  => est_log_generico );
      exception
         when others then
            null;
      end;
end pkb_val_atrib_multorg;

-------------------------------------------------------------------------------------------------------

procedure pkb_ret_multorg_id( est_log_generico       in out nocopy  dbms_sql.number_table
                            , ev_cod_mult_org        in             mult_org.cd%type
                            , ev_hash_mult_org       in             mult_org.hash%type
                            , sn_multorg_id          in out nocopy  mult_org.id%type
                            , ev_obj_referencia      in             log_generico_ct.obj_referencia%type
                            , en_referencia_id       in             log_generico_ct.referencia_id%type
                            )
is
   vn_fase               number := 0;
   vv_multorg_hash       mult_org.hash%type;
   vn_multorg_id         mult_org.id%type;
   vn_loggenericoct_id  Log_Generico_ct.id%type;
   vn_dm_obrig_integr    mult_org.dm_obrig_integr%type;

begin
   --
   vn_fase := 1;
   --
   gn_referencia_id   := en_referencia_id;
   gv_obj_referencia  := ev_obj_referencia;
   --
   begin
      --
      select mo.hash, mo.id, mo.dm_obrig_integr
        into vv_multorg_hash, vn_multorg_id, vn_dm_obrig_integr
        from mult_org mo
       where mo.cd = ev_cod_mult_org;
      --
      vn_fase := 2;
      --
   exception
      when no_data_found then
         --
         vn_fase := 3;
         --
         vv_multorg_hash := null;
         --
         vn_multorg_id := 0;
         --
      when others then
         --
         vn_fase := 4;
         --
         vv_multorg_hash := null;
         --
         vn_multorg_id := 0;
         --
         gv_mensagem_log := 'Problema ao tentar buscar o Mult Org. Fase: '||vn_fase;
         gv_cabec_log :=  'Codigo do MultOrg: |' || ev_cod_mult_org || '| Hash do MultOrg: |'||ev_hash_mult_org||'|';
         --
         vn_loggenericoct_id := null;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenericoct_id
                              , ev_mensagem           => gv_mensagem_log
                              , ev_resumo             => gv_cabec_log
                              , en_tipo_log           => ERRO_DE_VALIDACAO
                              , en_referencia_id      => gn_referencia_id
                              , ev_obj_referencia     => gv_obj_referencia
                              );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenericoct_id
                                 , est_log_generico  => est_log_generico );
   --
   end;
   --
   vn_fase := 5;
   --
   if nvl(vn_multorg_id, 0) = 0 then

      gv_mensagem_log := 'O Mult Org de codigo: |' || ev_cod_mult_org || '| não existe.';
      --
      vn_loggenericoct_id := null;
      --
      vn_fase := 5.1;
      --
      if vn_dm_obrig_integr = 0 then -- Não validar o multorg.
         --
         vn_fase := 5.2;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenericoct_id
                              , ev_mensagem           => gv_mensagem_log
                              , ev_resumo             => gv_mensagem_log
                              , en_tipo_log           => INFORMACAO
                              , en_referencia_id      => gn_referencia_id
                              , ev_obj_referencia     => gv_obj_referencia
                              );
         --
      elsif vn_dm_obrig_integr = 1 then -- Validar o multorg.
         --
         vn_fase := 5.3;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenericoct_id
                             , ev_mensagem           => gv_mensagem_log
                             , ev_resumo             => gv_mensagem_log
                             , en_tipo_log           => ERRO_DE_VALIDACAO
                             , en_referencia_id      => gn_referencia_id
                             , ev_obj_referencia     => gv_obj_referencia
                             );
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenericoct_id
                                 , est_log_generico  => est_log_generico );
      end if;
      --
   elsif vv_multorg_hash != ev_hash_mult_org then
      --
      vn_fase := 6;
      --
      gv_mensagem_log := 'O valor do Hash ('|| ev_hash_mult_org ||') do Mult Org:'|| ev_cod_mult_org ||'esta incorreto.';
      --
      vn_loggenericoct_id := null;
      --
      if vn_dm_obrig_integr = 0 then -- Não validar o multorg.
         --
         vn_fase := 5.2;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenericoct_id
                              , ev_mensagem           => gv_mensagem_log
                              , ev_resumo             => gv_mensagem_log
                              , en_tipo_log           => INFORMACAO
                              , en_referencia_id      => gn_referencia_id
                              , ev_obj_referencia     => gv_obj_referencia
                              );
         --
      elsif vn_dm_obrig_integr = 1 then -- Validar o multorg.
         --
         vn_fase := 5.3;
         --
         pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenericoct_id
                             , ev_mensagem           => gv_mensagem_log
                             , ev_resumo             => gv_mensagem_log
                             , en_tipo_log           => ERRO_DE_VALIDACAO
                             , en_referencia_id      => gn_referencia_id
                             , ev_obj_referencia     => gv_obj_referencia
                             );
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenericoct_id
                                 , est_log_generico  => est_log_generico );
      end if;
      --
   end if;
   --
   vn_fase := 7;
   --
   sn_multorg_id := vn_multorg_id;

exception
   when others then
      raise_application_error (-20101, 'Problemas ao validar Mult Org - pk_csf_api_ct.pkb_ret_multorg_id. Fase: '||vn_fase||' Erro = '||sqlerrm);
end pkb_ret_multorg_id;

-------------------------------------------------------------------------------------------------------

procedure pkb_cria_nat_oper( ev_cod_nat         nat_oper.cod_nat%type
                           , ev_descr_nat       nat_oper.descr_nat%type default null
                           , en_multorg_id      mult_org.id%type)
is
   --
   --
begin
   --
   if trim( ev_cod_nat ) is not null
      and trim( ev_descr_nat ) is not null 
      and nvl(en_multorg_id,0) > 0 then
      --
      insert into Nat_Oper ( id
                           , cod_nat
                           , descr_nat
                           , multorg_id
                           , dm_st_proc
                           )
                     values
                           ( natoper_seq.nextval
                           , trim(ev_cod_nat)
                           , trim(ev_descr_nat)
                           , en_multorg_id
                           , 1
                           );
      --
      commit;
      --
   elsif trim( ev_cod_nat ) is not null
     and nvl(en_multorg_id,0) > 0 then
      --
      insert into Nat_Oper ( id
                           , cod_nat
                           , descr_nat
                           , multorg_id
                           , dm_st_proc
                           )
                     values
                           ( natoper_seq.nextval
                           , trim(ev_cod_nat)
                           , 'Natureza de Operacao'
                           , en_multorg_id
                           , 1
                           );
      --
      commit;
      --
   end if;
   --
exception
   when others then
      --
      null;
      --
end pkb_cria_nat_oper;

-------------------------------------------------------------------------------------------------------

--| Função retorna o ID da NAT_OPER pelo cod_nat

function fkg_natoper_id_cod_nat ( en_multorg_id in mult_org.id%type
                                , ev_cod_nat    in Nat_Oper.cod_nat%TYPE )
         return Nat_Oper.id%TYPE
is

  vn_natoper_id  Nat_Oper.id%TYPE;

begin

   if ev_cod_nat is not null then

      select nop.id
        into vn_natoper_id
        from Nat_Oper  nop
       where nop.cod_nat = trim(ev_cod_nat)
         and multorg_id = en_multorg_id;

   end if;

   return vn_natoper_id;

exception
   when no_data_found then
      return null;
   when others then
      raise_application_error(-20101, 'Erro na fkg_natoper_id_cod_nat: ' || sqlerrm);
end fkg_natoper_id_cod_nat;
--
-- =================================================================================================================== --
-- Procedimento integra o imposto de PIS/PASEP
-- =================================================================================================================== --
procedure pkb_integr_ctimpout_pis ( est_log_generico              in out nocopy dbms_sql.number_table
                                  , est_row_ct_comp_doc_pis       in out nocopy ct_comp_doc_pis%rowtype
                                  , ev_cpf_cnpj_emit              in            varchar2
                                  , ev_cod_st                     in            cod_st.cod_st%type
                                  , ev_cod_bc_cred_pc             in            base_calc_cred_pc.cd%type
                                  , ev_cod_cta                    in            plano_conta.cod_cta%type
                                  , en_multorg_id                 in            mult_org.id%type ) is
   --
   vn_fase            number := 0;
   vn_loggenerico_id  log_generico_ct.id%TYPE;
   vn_dm_ind_oper     conhec_transp.dm_ind_oper%type;
   vn_empresa_id      empresa.id%type;
   vv_descr           varchar2(1000) := null;
   vn_dm_valida_pis   empresa.dm_valida_pis%type;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(est_row_ct_comp_doc_pis.conhectransp_id,0) <= 0 then
      --
      vn_fase := 1.1;
      --
      gv_mensagem_log := 'Não informado o Conhec. Transp. para registro das Informações dos Outros Impostos.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   begin
      select ct.dm_ind_oper
        into vn_dm_ind_oper
        from conhec_transp ct
       where ct.id = nvl(est_row_ct_comp_doc_pis.conhectransp_id,0);
   exception
      when others then
         vn_dm_ind_oper := 0; -- Valor default - Aquisição
   end;
   --
   vn_fase := 2.1;
   --
   if vn_dm_ind_oper = 0 then -- Aquisição
      --
      vn_fase := 2.2;
      --
      if (ev_cod_st not between 50 and 56) and
         (ev_cod_st not between 60 and 66) and
         (ev_cod_st not between 70 and 75) and
         (ev_cod_st not between 98 and 99) then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := '"Código da Situação Tributária" inválido (' || ev_cod_st || ') deve estar entre 50 e 56, 60 e 66, 70 e 75, 98 e 99, para o tipo '||
                            'de imposto PIS, devido ao CTE ser de Aquisição.';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => ERRO_DE_VALIDACAO
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
   elsif vn_dm_ind_oper = 1 then -- Prestação
         --
         vn_fase := 2.4;
         --
         if ev_cod_st not in ('01','02','03','04','05','06','07','08','09','49') then
            --
            vn_fase := 2.5;
            --
            gv_mensagem_log := '"Código da Situação Tributária" inválido (' || ev_cod_st || ') deve ser 01, 02, 03, 04, 05, 06, 07, 08, 09, ou 49, para o tipo '||
                               'de imposto PIS, devido ao CTE ser de Prestação.';
            --
            vn_loggenerico_id := null;
            --
            pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                              , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                              , ev_resumo          => gv_mensagem_log
                                              , en_tipo_log        => ERRO_DE_VALIDACAO
                                              , en_referencia_id   => gn_referencia_id
                                              , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                                 , est_log_generico  => est_log_generico );
            --
         end if;
         --
   end if;
   --
   vn_fase := 3;
   --
   est_row_ct_comp_doc_pis.codst_id := pk_csf.fkg_cod_st_id ( ev_cod_st      => ev_cod_st
                                                            , en_tipoimp_id  => pk_csf.fkg_Tipo_Imposto_id ( 4 ) ); -- PIS
   --
   vn_fase := 4;
   --
   if nvl(est_row_ct_comp_doc_pis.codst_id,0) <= 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := '"Código da situação Tributária" inválido (' || ev_cod_st || ') para o tipo de imposto PIS.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --      
   vn_empresa_id := pk_csf.fkg_empresa_id_pelo_cpf_cnpj ( en_multorg_id => en_multorg_id
                                                        , ev_cpf_cnpj   => ev_cpf_cnpj_emit );
   -- -- Recupera se valida ou não pis                        
   if fkg_dmindemit_conhectransp ( en_conhectransp_id => est_row_ct_comp_doc_pis.conhectransp_id ) = 0 then -- emissão própria
      --
      vn_dm_valida_pis := pk_csf.fkg_empresa_dmvalpis_emis ( en_empresa_id => vn_empresa_id );
      --
   elsif fkg_dmindemit_conhectransp ( en_conhectransp_id => est_row_ct_comp_doc_pis.conhectransp_id  ) = 1 then -- terceiros
      --
      vn_dm_valida_pis := pk_csf.fkg_empresa_dmvalpis_terc ( en_empresa_id => vn_empresa_id );
      --
   else
      --
      vn_dm_valida_pis := 1; -- sim
      --
   end if;
   --
   vn_fase := 6;
   --
   if (ev_cod_st between 50 and 56) or
      (ev_cod_st between 60 and 66) then
      if nvl(est_row_ct_comp_doc_pis.basecalccredpc_id,0) = 0 and -- base de credito não informada
         vn_dm_valida_pis = 1 and  -- valida pis
         nvl(est_row_ct_comp_doc_pis.vl_bc_pis,0) > 0 and
         nvl(est_row_ct_comp_doc_pis.aliq_pis,0) > 0 then
         --
         gv_mensagem_log := '"Código da Base de Cálculo do Crédito" para PIS não informada e existe base e aliquota para o conhecimento.';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => INFORMACAO
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --         
      end if;  
      --
   end if;  
   --
   if ev_cod_bc_cred_pc not between '01' and '18' then
      --
      vn_fase := 6.1;
      --
      gv_mensagem_log := '"Código da Base de Cálculo do Crédito" inválido (' || ev_cod_bc_cred_pc || ') deve estar entre 01 e 18 (PIS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 7;
   --
   est_row_ct_comp_doc_pis.basecalccredpc_id := pk_csf_efd_pc.fkg_base_calc_cred_pc_id ( ev_cd => ev_cod_bc_cred_pc );
   --
   vn_fase := 8;
   --
   if nvl(est_row_ct_comp_doc_pis.basecalccredpc_id,0) <= 0 and ev_cod_bc_cred_pc is not null then
      --
      vn_fase := 8.1;
      --
      gv_mensagem_log := '"Código da Base de Cálculo do Crédito" inválido (' || ev_cod_bc_cred_pc || ') (PIS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   est_row_ct_comp_doc_pis.planoconta_id := pk_csf.fkg_plano_conta_id ( ev_cod_cta    => ev_cod_cta
                                                                       , en_empresa_id => vn_empresa_id );
   --
   vn_fase := 10;
   --
   if nvl(est_row_ct_comp_doc_pis.planoconta_id,0) <= 0 and ev_cod_cta is not null then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := '"Código da conta analítica contábil debitada/creditada" inválido (' || ev_cod_cta || ') (PIS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   --
   if est_row_ct_comp_doc_pis.dm_ind_nat_frt not in (0,1,2,3,4,5,9) then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := '"Indicador da Natureza do Frete Contratado" inválido (' || est_row_ct_comp_doc_pis.dm_ind_nat_frt || ') deve estar entre 0 e 5 ou 9 (PIS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   --
   if est_row_ct_comp_doc_pis.dm_ind_nat_frt in (0,1,2,3,4,5,9) then
      vv_descr := pk_csf.fkg_dominio ( ev_dominio => 'CT_COMP_DOC_PIS.DM_IND_NAT_FRT'
                                     , ev_vl      => est_row_ct_comp_doc_pis.dm_ind_nat_frt );
      --
      vn_fase := 13;
      --
      if vv_descr is null then
         --
         vn_fase := 13.1;
         --
         gv_mensagem_log := '"Indicador da Natureza do Frete Contratado" inválido (' || est_row_ct_comp_doc_pis.dm_ind_nat_frt || ') (PIS).';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => ERRO_DE_VALIDACAO
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --
      end if;
   end if;
   --
   vn_fase := 14;
   --
   if nvl(est_row_ct_comp_doc_pis.vl_item,0) < 0 then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := '"Valor total dos itens" não pode ser negativo (PIS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15;
   --
   if nvl(est_row_ct_comp_doc_pis.vl_bc_pis,0) < 0 then
      --
      vn_fase := 15.1;
      --
      gv_mensagem_log := '"Valor da base de cálculo do PIS/PASEP" não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 16;
   --
   if nvl(est_row_ct_comp_doc_pis.aliq_pis,0) < 0 then
      --
      vn_fase := 16.1;
      --
      gv_mensagem_log := '"Alíquota do PIS/PASEP (em percentual)" não pode ser negativa.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 17;
   --
   if nvl(est_row_ct_comp_doc_pis.vl_pis,0) < 0 then
      --
      vn_fase := 17.1;
      --
      gv_mensagem_log := '"Valor do PIS/PASEP" não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_row_ct_comp_doc_pis.conhectransp_id,0) > 0
      and est_row_ct_comp_doc_pis.dm_ind_nat_frt in (0,1,2,3,4,5,9)
      and est_row_ct_comp_doc_pis.vl_item is not null
      and nvl(est_row_ct_comp_doc_pis.codst_id,0) > 0 then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctcompdocpis_seq.nextval
           into est_row_ct_comp_doc_pis.id
           from dual;
         --
         vn_fase := 99.3;
         --
         insert into ct_comp_doc_pis ( id
                                     , conhectransp_id
                                     , dm_ind_nat_frt
                                     , vl_item
                                     , codst_id
                                     , basecalccredpc_id
                                     , vl_bc_pis
                                     , aliq_pis
                                     , vl_pis
                                     , planoconta_id )
                              values ( est_row_ct_comp_doc_pis.id
                                     , est_row_ct_comp_doc_pis.conhectransp_id
                                     , est_row_ct_comp_doc_pis.dm_ind_nat_frt
                                     , est_row_ct_comp_doc_pis.vl_item
                                     , est_row_ct_comp_doc_pis.codst_id
                                     , est_row_ct_comp_doc_pis.basecalccredpc_id
                                     , est_row_ct_comp_doc_pis.vl_bc_pis
                                     , est_row_ct_comp_doc_pis.aliq_pis
                                     , est_row_ct_comp_doc_pis.vl_pis
                                     , est_row_ct_comp_doc_pis.planoconta_id );
         --
      else
         --
         vn_fase := 99.4;
         --
         update ct_comp_doc_pis
            set dm_ind_nat_frt      = est_row_ct_comp_doc_pis.dm_ind_nat_frt
              , vl_item             = est_row_ct_comp_doc_pis.vl_item
              , codst_id            = est_row_ct_comp_doc_pis.codst_id
              , basecalccredpc_id   = est_row_ct_comp_doc_pis.basecalccredpc_id
              , vl_bc_pis           = est_row_ct_comp_doc_pis.vl_bc_pis
              , aliq_pis            = est_row_ct_comp_doc_pis.aliq_pis
              , vl_pis              = est_row_ct_comp_doc_pis.vl_pis
              , planoconta_id       = est_row_ct_comp_doc_pis.planoconta_id
          where id = est_row_ct_comp_doc_pis.id;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pkb_integr_ctimpout_pis fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                          , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                          , ev_resumo          => gv_mensagem_log
                          , en_tipo_log        => ERRO_DE_SISTEMA
                          , en_referencia_id   => gn_referencia_id
                          , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                             , est_log_generico  => est_log_generico );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctimpout_pis;
--
-- =================================================================================================================== --
-- Procedimento integra o imposto de CONFINS
-- =================================================================================================================== --
procedure pkb_integr_ctimpout_cofins ( est_log_generico        in out nocopy  dbms_sql.number_table
                                     , est_ct_comp_doc_cofins  in out nocopy  ct_comp_doc_cofins%rowtype
                                     , ev_cpf_cnpj_emit        in             varchar2
                                     , ev_cod_st               in             cod_st.cod_st%type
                                     , ev_cod_bc_cred_pc       in             base_calc_cred_pc.cd%type
                                     , ev_cod_cta              in             plano_conta.cod_cta%type
                                     , en_multorg_id           in             mult_org.id%type ) is
   --
   vn_fase               number := 0;
   vn_loggenerico_id     log_generico_ct.id%TYPE;
   vn_dm_ind_oper        conhec_transp.dm_ind_oper%type;
   vn_empresa_id         empresa.id%type;
   vv_descr              varchar2(1000) := null;
   vn_dm_valida_cofins   empresa.dm_valida_cofins%type;
   --
begin
   --
   vn_fase := 1;
   --
   if nvl(est_ct_comp_doc_cofins.conhectransp_id,0) <= 0 then
      --
      vn_fase := 1.1;
      --
      gv_mensagem_log := 'Não informado o relacionamento entre o Resumo de Impostos e o Conhecimento de Transportes (COFINS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 2;
   --
   begin
      select ct.dm_ind_oper
        into vn_dm_ind_oper
        from conhec_transp ct
       where ct.id = nvl(est_ct_comp_doc_cofins.conhectransp_id,0);
   exception
      when others then
         vn_dm_ind_oper := 0; -- Valor default - Aquisição
   end;
   --
   vn_fase := 2.1;
   --
   if vn_dm_ind_oper = 0 then -- Aquisição
      --
      vn_fase := 2.2;
      --
      if (ev_cod_st not between 50 and 56) and
         (ev_cod_st not between 60 and 66) and
         (ev_cod_st not between 70 and 75) and
         (ev_cod_st not between 98 and 99) then
         --
         vn_fase := 2.3;
         --
         gv_mensagem_log := '"Código da Situação Tributária" inválido (' || ev_cod_st || ') deve estar entre 50 e 56, 60 e 66, 70 e 75, 98 e 99, para o tipo '||
                            'de imposto COFINS, devido ao CTE ser de Aquisição.';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => ERRO_DE_VALIDACAO
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --
      end if;
      --
   elsif vn_dm_ind_oper = 1 then -- Prestação
         --
         vn_fase := 2.4;
         --
         if ev_cod_st not in ('01','02','03','04','05','06','07','08','09','49') then
            --
            vn_fase := 2.5;
            --
            gv_mensagem_log := '"Código da Situação Tributária" inválido (' || ev_cod_st || ') deve ser 01, 02, 03, 04, 05, 06, 07, 08, 09, ou 49, para o '||
                               'tipo de imposto COFINS, devido ao CTE ser de Prestação.';
            --
            vn_loggenerico_id := null;
            --
            pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                              , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                              , ev_resumo          => gv_mensagem_log
                                              , en_tipo_log        => ERRO_DE_VALIDACAO
                                              , en_referencia_id   => gn_referencia_id
                                              , ev_obj_referencia  => gv_obj_referencia );
            --
            -- Armazena o "loggenerico_id" na memória
            pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                                 , est_log_generico  => est_log_generico );
            --
         end if;
         --
   end if;
   --
   vn_fase := 3;
   --
   est_ct_comp_doc_cofins.codst_id := pk_csf.fkg_cod_st_id ( ev_cod_st      => ev_cod_st
                                                            , en_tipoimp_id  => pk_csf.fkg_Tipo_Imposto_id ( 5 ) ); -- COFINS
   --
   vn_fase := 4;
   --
   if nvl(est_ct_comp_doc_cofins.codst_id,0) <= 0 then
      --
      vn_fase := 4.1;
      --
      gv_mensagem_log := '"Código da situação Tributária" inválido (' || ev_cod_st || ') para o tipo de imposto COFINS.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 5;
   --
   vn_empresa_id := pk_csf.fkg_empresa_id_pelo_cpf_cnpj ( en_multorg_id => en_multorg_id
                                                        , ev_cpf_cnpj   => ev_cpf_cnpj_emit );
   --   
   vn_fase := 6;
   -- 
   -- Recupera se valida ou não cofins                   
   if fkg_dmindemit_conhectransp ( en_conhectransp_id => est_ct_comp_doc_cofins.conhectransp_id ) = 0 then -- emissão própria
      --
      vn_dm_valida_cofins := pk_csf.fkg_empresa_dmvalcofins_emis ( en_empresa_id => vn_empresa_id );
      --
   elsif fkg_dmindemit_conhectransp ( en_conhectransp_id => est_ct_comp_doc_cofins.conhectransp_id  ) = 1 then -- terceiros
      --
      vn_dm_valida_cofins := pk_csf.fkg_empresa_dmvalcofins_terc ( en_empresa_id => vn_empresa_id );
      --
   else
      --
      vn_dm_valida_cofins := 1; -- sim
      --
   end if;
   --
   vn_fase := 7;
   --
   if (ev_cod_st between 50 and 56) or
      (ev_cod_st between 60 and 66) then
      if nvl(est_ct_comp_doc_cofins.basecalccredpc_id,0) = 0 and -- base de credito não informada
         vn_dm_valida_cofins = 1 and  -- valida cofins
         nvl(est_ct_comp_doc_cofins.vl_bc_cofins,0) > 0 and
         nvl(est_ct_comp_doc_cofins.aliq_cofins,0) > 0 then
         --
         gv_mensagem_log := '"Código da Base de Cálculo do Crédito" para COFINS não informada e existe base e aliquota para o conhecimento.';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log || gv_cabec_log_item
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => INFORMACAO
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --         
      end if;  
      --
   end if;  
   --   
   if ev_cod_bc_cred_pc not between '01' and '18' then
      --
      vn_fase := 7.1;
      --
      gv_mensagem_log := '"Código da Base de Cálculo do Crédito" inválido (' || ev_cod_bc_cred_pc || ') deve estar entre 01 e 18 (COFINS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 8;
   --
   est_ct_comp_doc_cofins.basecalccredpc_id := pk_csf_efd_pc.fkg_base_calc_cred_pc_id ( ev_cd => ev_cod_bc_cred_pc );
   --
   vn_fase := 8.1;
   --
   if nvl(est_ct_comp_doc_cofins.basecalccredpc_id,0) <= 0 and ev_cod_bc_cred_pc is not null then
      --
      vn_fase := 8.2;
      --
      gv_mensagem_log := '"Código da Base de Cálculo do Crédito" inválido (' || ev_cod_bc_cred_pc || ') (COFINS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 9;
   --
   est_ct_comp_doc_cofins.planoconta_id := pk_csf.fkg_plano_conta_id ( ev_cod_cta    => ev_cod_cta
                                                                      , en_empresa_id => vn_empresa_id );
   --
   vn_fase := 10;
   --
   if nvl(est_ct_comp_doc_cofins.planoconta_id,0) <= 0 and ev_cod_cta is not null then
      --
      vn_fase := 10.1;
      --
      gv_mensagem_log := '"Código da conta analítica contábil debitada/creditada" inválido (' || ev_cod_cta || ') (COFINS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 11;
   --
   if est_ct_comp_doc_cofins.dm_ind_nat_frt not in (0,1,2,3,4,5,9) then
      --
      vn_fase := 11.1;
      --
      gv_mensagem_log := '"Indicador da Natureza do Frete Contratado" inválido (' || est_ct_comp_doc_cofins.dm_ind_nat_frt || ') deve estar entre 0 e 5 ou 9 (COFINS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 12;
   --
   if est_ct_comp_doc_cofins.dm_ind_nat_frt in (0,1,2,3,4,5,9) then
      vv_descr := pk_csf.fkg_dominio ( ev_dominio => 'CT_COMP_DOC_COFINS.DM_IND_NAT_FRT'
                                     , ev_vl      => est_ct_comp_doc_cofins.dm_ind_nat_frt );
      --
      vn_fase := 13;
      --
      if vv_descr is null then
         --
         vn_fase := 13.1;
         --
         gv_mensagem_log := '"Indicador da Natureza do Frete Contratado" inválido (' || est_ct_comp_doc_cofins.dm_ind_nat_frt || ') (COFINS).';
         --
         vn_loggenerico_id := null;
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_cabec_log
                                           , ev_resumo          => gv_mensagem_log
                                           , en_tipo_log        => ERRO_DE_VALIDACAO
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
         -- Armazena o "loggenerico_id" na memória
         pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                              , est_log_generico  => est_log_generico );
         --
      end if;
   end if;
   --
   vn_fase := 14;
   --
   if nvl(est_ct_comp_doc_cofins.vl_item,0) < 0 then
      --
      vn_fase := 14.1;
      --
      gv_mensagem_log := '"Valor total dos itens" não pode ser negativo (COFINS).';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 15;
   --
   if nvl(est_ct_comp_doc_cofins.vl_bc_cofins,0) < 0 then
      --
      vn_fase := 15.1;
      --
      gv_mensagem_log := '"Valor da base de cálculo do COFINS" não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 16;
   --
   if nvl(est_ct_comp_doc_cofins.aliq_cofins,0) < 0 then
      --
      vn_fase := 16.1;
      --
      gv_mensagem_log := '"Alíquota do COFINS (em percentual)" não pode ser negativa.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 17;
   --
   if nvl(est_ct_comp_doc_cofins.vl_cofins,0) < 0 then
      --
      vn_fase := 17.1;
      --
      gv_mensagem_log := '"Valor do COFINS" não pode ser negativo.';
      --
      vn_loggenerico_id := null;
      --
      pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                        , ev_mensagem        => gv_cabec_log
                                        , ev_resumo          => gv_mensagem_log
                                        , en_tipo_log        => ERRO_DE_VALIDACAO
                                        , en_referencia_id   => gn_referencia_id
                                        , ev_obj_referencia  => gv_obj_referencia );
      --
      -- Armazena o "loggenerico_id" na memória
      pk_csf_api_ct.pkb_gt_log_generico_ct ( en_loggenerico    => vn_loggenerico_id
                                           , est_log_generico  => est_log_generico );
      --
   end if;
   --
   vn_fase := 99;
   --
   if nvl(est_ct_comp_doc_cofins.conhectransp_id,0) > 0
      and est_ct_comp_doc_cofins.dm_ind_nat_frt in (0,1,2,3,4,5,9)
      and est_ct_comp_doc_cofins.vl_item is not null
      and nvl(est_ct_comp_doc_cofins.codst_id,0) > 0 then
      --
      vn_fase := 99.1;
      --
      if nvl(gn_tipo_integr,0) = 1 then
         --
         vn_fase := 99.2;
         --
         select ctcompdoccofins_seq.nextval
           into est_ct_comp_doc_cofins.id
           from dual;
         --
         vn_fase := 99.3;
         --
         insert into ct_comp_doc_cofins ( id
                                        , conhectransp_id
                                        , dm_ind_nat_frt
                                        , vl_item
                                        , codst_id
                                        , basecalccredpc_id
                                        , vl_bc_cofins
                                        , aliq_cofins
                                        , vl_cofins
                                        , planoconta_id )
                                 values ( est_ct_comp_doc_cofins.id
                                        , est_ct_comp_doc_cofins.conhectransp_id
                                        , est_ct_comp_doc_cofins.dm_ind_nat_frt
                                        , est_ct_comp_doc_cofins.vl_item
                                        , est_ct_comp_doc_cofins.codst_id
                                        , est_ct_comp_doc_cofins.basecalccredpc_id
                                        , est_ct_comp_doc_cofins.vl_bc_cofins
                                        , est_ct_comp_doc_cofins.aliq_cofins
                                        , est_ct_comp_doc_cofins.vl_cofins
                                        , est_ct_comp_doc_cofins.planoconta_id );
         --
      else
         --
         vn_fase := 99.4;
         --
         update ct_comp_doc_cofins
            set dm_ind_nat_frt    = est_ct_comp_doc_cofins.dm_ind_nat_frt
              , vl_item           = est_ct_comp_doc_cofins.vl_item
              , codst_id          = est_ct_comp_doc_cofins.codst_id
              , basecalccredpc_id = est_ct_comp_doc_cofins.basecalccredpc_id
              , vl_bc_cofins      = est_ct_comp_doc_cofins.vl_bc_cofins
              , aliq_cofins       = est_ct_comp_doc_cofins.aliq_cofins
              , vl_cofins         = est_ct_comp_doc_cofins.vl_cofins
              , planoconta_id     = est_ct_comp_doc_cofins.planoconta_id
          where id = est_ct_comp_doc_cofins.id;
         --
      end if;
      --
   end if;
   --
exception
   when others then
      --
      gv_mensagem_log := 'Erro na pk_csf_api_d100.pkb_integr_ctimpout_cofins fase(' || vn_fase || '): ' || sqlerrm;
      --
      declare
         vn_loggenerico_id  log_generico_ct.id%TYPE;
      begin
         --
         pk_csf_api_ct.pkb_log_generico_ct ( sn_loggenerico_id  => vn_loggenerico_id
                                           , ev_mensagem        => gv_mensagem_log
                                           , ev_resumo          => null
                                           , en_tipo_log        => ERRO_DE_SISTEMA
                                           , en_referencia_id   => gn_referencia_id
                                           , ev_obj_referencia  => gv_obj_referencia );
         --
      exception
         when others then
            null;
      end;
      --
end pkb_integr_ctimpout_cofins;
--
-- =================================================================================================================== --
--
END PK_CSF_API_CT;
/
