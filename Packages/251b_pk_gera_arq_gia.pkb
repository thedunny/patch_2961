create or replace package body csf_own.pk_gera_arq_gia is

-------------------------------------------------------------------------------------------------------
-- Corpo do pacote de Geração do Arquivo da GIA
-------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------
-- Procedimento grava as informações da estrutura do arquivo da GIA  
-------------------------------------------------------------------------------------------------------
procedure pkb_grava_estr_arq_gia is
  --
  vn_fase number := 0;
  pragma autonomous_transaction;
  --
begin
  --
  vn_fase := 1;
  --
  if nvl(vt_estr_arq_gia.count, 0) > 0 then
    --
    vn_fase := 2;
    --
    forAll i in 1 .. vt_estr_arq_gia.count
      insert into estr_arq_gia values vt_estr_arq_gia (i);
    --
    vn_fase := 3;
    --
    commit;
    --
  end if;
  --
exception
  when others then
    --
    gv_resumo := 'Erro na pkb_grava_estr_arq_gia fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo);
    --
end pkb_grava_estr_arq_gia;

-------------------------------------------------------------------------------------------------------
-- Procedimento que armazena a estrutura do arquivo da GIA em um array
-------------------------------------------------------------------------------------------------------
procedure pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  in tipo_cod_arq.cd%type,
                                 ev_registrogia_cd in registro_gia.cd%type,
                                 el_conteudo       in estr_arq_gia.conteudo%type) is
  --
  vn_fase           number := 0;
  vn_indice         number := 0;
  vn_registrogia_id registro_gia.id%type;
  vn_tipocodarq_id  tipo_cod_arq.id%type;
  --
begin
  --
  vn_fase := 1;
  --
  if ev_tipocodarq_cd is not null and ev_registrogia_cd is not null and
     el_conteudo is not null then
    --
    vn_fase := 2;
    --
    vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => ev_tipocodarq_cd);
    --
    vn_fase := 3;
    --
    vn_registrogia_id := pk_csf_gia.fkg_registrogia_id(en_tipocodarq_id => vn_tipocodarq_id,
                                                       ev_cd            => ev_registrogia_cd);
    --
    vn_fase := 4;
    --
    vn_indice := nvl(vt_estr_arq_gia.count, 0) + 1;
    --
    vn_fase := 5;
    --
    if nvl(vn_registrogia_id, 0) > 0 then
      --
      vn_fase := 6;
      --
      select estrarqgia_seq.nextval
        into vt_estr_arq_gia(vn_indice).id
        from dual;
      --
      vn_fase := 7;
      --
      vt_estr_arq_gia(vn_indice).aberturagia_id := gt_row_abertura_gia.id;
      vt_estr_arq_gia(vn_indice).registrogia_id := vn_registrogia_id;
      vt_estr_arq_gia(vn_indice).sequencia      := vn_indice;
      vt_estr_arq_gia(vn_indice).conteudo       := el_conteudo || FINAL_DE_LINHA;
      --
    end if;
    --
  end if;
  --
exception
  when others then
    --
    gv_resumo := 'Erro na pkb_armaz_estr_arq_gia fase(' || vn_fase || '): ' || sqlerrm;
    --
    declare
      vn_loggenerico_id Log_Generico.id%TYPE;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo);
    --
end pkb_armaz_estr_arq_gia;

-------------------------------------------------------------------------------------------------------
-- Função que verifica o valor do ICMS-ST conforme CFOP
-------------------------------------------------------------------------------------------------------
function fkg_vlr_icmsst_conf_cfop(en_cd_cfop in cfop.cd%type,
                                  en_valor   in number) return number is
  --
begin
  --
  if en_cd_cfop = 1360 then
    return en_valor;
  elsif en_cd_cfop between 1401 and 1449 then
    return en_valor;
  elsif en_cd_cfop between 1651 and 1699 then
    return en_valor;
  elsif substr(en_cd_cfop, 1, 2) = 19 then
    return en_valor;
  elsif en_cd_cfop between 2401 and 2449 then
    return en_valor;
  elsif en_cd_cfop between 2651 and 2699 then
    return en_valor;
  elsif substr(en_cd_cfop, 1, 2) = 29 then
    return en_valor;
  elsif en_cd_cfop = 5360 then
    return en_valor;
  elsif en_cd_cfop between 5401 and 5449 then
    return en_valor;
  elsif en_cd_cfop between 5651 and 5699 then
    return en_valor;
  elsif substr(en_cd_cfop, 1, 2) = 59 then
    return en_valor;
  elsif en_cd_cfop = 6360 then
    return en_valor;
  elsif en_cd_cfop between 6401 and 6449 then
    return en_valor;
  elsif en_cd_cfop between 6651 and 6699 then
    return en_valor;
  elsif substr(en_cd_cfop, 1, 2) = 69 then
    return en_valor;
  else
    return 0;
  end if;
  --
exception
  when others then
    return 0;
end fkg_vlr_icmsst_conf_cfop;

-------------------------------------------------------------------------------------------------------
-- Função que retorna a classe de vencimento
-------------------------------------------------------------------------------------------------------
function fkg_ret_classe_vencto_dime(en_empresa_id   in param_classe_vencto_dime.empresa_id%type,
                                    en_cod_receita  in param_classe_vencto_dime.cod_receita%type,
                                    en_dia_vencto   in param_classe_vencto_dime.dia_vencto%type,
                                    en_dm_orig_cred in param_classe_vencto_dime.dm_orig_cred%type) return number is
  --
  vn_classe_vencto param_classe_vencto_dime.classe_vencto%type;
  --
begin
  --
  begin
    select p.classe_vencto
      into vn_classe_vencto
      from param_classe_vencto_dime p
     where p.empresa_id  = en_empresa_id
       and p.cod_receita = en_cod_receita
       and p.dia_vencto  = decode(nvl(en_dia_vencto, 0),
                                  0,
                                  p.dia_vencto,
                                  nvl(en_dia_vencto, 0))
       and p.dm_orig_cred = en_dm_orig_cred;
  exception
    when no_data_found then
      begin
        select p.classe_vencto
          into vn_classe_vencto
          from param_classe_vencto_dime p
         where p.empresa_id   = en_empresa_id
           and p.cod_receita  = en_cod_receita
           and p.dia_vencto   is null
           and p.dm_orig_cred = en_dm_orig_cred;
      exception
        when too_many_rows then
          begin
            select max(p.classe_vencto)
              into vn_classe_vencto
              from param_classe_vencto_dime p
             where p.empresa_id   = en_empresa_id
               and p.cod_receita  = en_cod_receita
               and p.dia_vencto   = en_dia_vencto
               and p.dm_orig_cred = en_dm_orig_cred;
          exception
            when others then
              return 0;
          end;
      end;
  end;
  --
  return vn_classe_vencto;
  --
exception
  when others then
    return 0;
end fkg_ret_classe_vencto_dime;

--------------------------------------------
-- Procedimento retorna ESTADO-UF da Pessoa
--------------------------------------------
procedure pkb_dados_pessoa(en_pessoa_id    in pessoa.id%type,
                           sn_estado_id    out estado.id%type,
                           sv_sigla_estado out estado.sigla_estado%type) is
begin
  --
  select est.id, 
         est.sigla_estado
    into sn_estado_id, 
         sv_sigla_estado
    from pessoa p, 
         cidade cid, 
         estado est
   where p.id   = en_pessoa_id
     and cid.id = p.cidade_id
     and est.id = cid.estado_id;
  --
exception
  when others then
    sn_estado_id    := 0;
    sv_sigla_estado := null;
end pkb_dados_pessoa;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-ES
------------------------------------------------
procedure pkb_gera_arq_gia_es is
  --
  vn_fase  number := 0;
  vb_achou boolean;
  --
  vn_vl_folha            inf_folha_pgto.vl_folha%type;
  vn_cfop                number := 0;
  vn_vl_contabil         number := 0;
  vv_cod_st_icms         cod_st.cod_st%type := null;
  vn_vl_base_calc_icms   number := 0;
  vn_aliq_icms           number := 0;
  vn_vl_imp_trib_icms    number := 0;
  vn_vl_base_calc_icmsst number := 0;
  vn_vl_imp_trib_icmsst  number := 0;
  vn_vl_bc_isenta_icms   number := 0;
  vn_vl_bc_outra_icms    number := 0;
  vv_cod_st_ipi          cod_st.cod_st%type := null;
  vn_vl_base_calc_ipi    number := 0;
  vn_aliq_ipi            number := 0;
  vn_vl_imp_trib_ipi     number := 0;
  vn_vl_bc_isenta_ipi    number := 0;
  vn_vl_bc_outra_ipi     number := 0;
  vn_ipi_nao_recup       number := 0;
  vn_outro_ipi           number := 0;
  vn_vl_imp_nao_dest_ipi number;
  vn_vl_fcp_icmsst       number;
  vn_aliq_fcp_icms       number;
  vn_vl_fcp_icms         number;
  --
  -- 1-Registro Inicial
  type tp_ini is record(
    TpReg    varchar2(1),
    DescrReg varchar2(21));
  --
  type t_tab_tp_ini is table of tp_ini index by binary_integer;
  vt_tab_tp_ini t_tab_tp_ini;
  --
  -- 2-Registro Principal do DIEF
  type tp_princ is record(
    TpReg         varchar2(1),
    InscrEst      number(9),
    MesRef        number(2),
    AnoRef        number(4),
    ForApres      varchar2(1), -- 1-Original no prazo; 2-Retificadora no prazo; 3-Original fora do prazo; 4-Retificadora fora do prazo.
    DebPer        number(11),
    OutrDebRef03  number(11),
    EstCred       number(11),
    DescOutrDeb   varchar2(30),
    OutrDebRef05  number(11),
    CredPer       number(11),
    OutrCredRef10 number(11),
    EstDeb        number(11),
    Deducao       number(11),
    DescOutrCred  varchar2(30),
    OutrCredRef13 number(11),
    SldCredMesAnt number(11),
    ICMSRec       number(11),
    SldCredMesSeg number(11),
    DiferAliq     number(11),
    SubstTrib     number(11),
    Fundap        number(11),
    EstimatSuper  number(11),
    EstimatAtac   number(11),
    DescOutrICMSA varchar2(30),
    VlrOutrICMSA  number(11),
    DescOutrICMSB varchar2(30),
    VlrOutrICMSB  number(11),
    DescOutrICMSC varchar2(30),
    VlrOutrICMSC  number(11),
    TpDecl        varchar2(1) -- 0-DIEF Regime Normal; 1-DIEF Regime Estimativa.
    );
  --
  type t_tab_tp_princ is table of tp_princ index by binary_integer;
  vt_tab_tp_princ t_tab_tp_princ;
  --
  -- 3-Registro de Custos e Despesas do DIEF
  type tp_cusdesp is record(
    TpReg           varchar2(1),
    Agua            number(11),
    EnergEletr      number(11),
    Telefone        number(11),
    AlugCondom      number(11),
    ProlabHonor     number(11),
    TribFed         number(11),
    ContribPrevid   number(11),
    TribMunic       number(11),
    VlrBrutFolPagto number(11),
    DescOutrDespA   varchar2(30),
    VlrOutrDespA    number(11),
    DescOutrDespB   varchar2(30),
    VlrOutrDespB    number(11),
    FillerAEsp      varchar2(30), -- Espaços em branco
    FillerBZer      number(11), -- Preencher com Zeros
    FillerCEsp      varchar2(30), -- Espaços em branco
    FillerDZer      number(11), -- Preencher com Zeros
    FillerEEsp      varchar2(30), -- Espaços em branco
    FillerFZer      number(11), -- Preencher com Zeros
    FillerGEsp      varchar2(30), -- Espaços em branco
    FillerHZer      number(11) -- Preencher com zeros
    );
  --
  type t_tab_tp_cusdesp is table of tp_cusdesp index by binary_integer;
  vt_tab_tp_cusdesp t_tab_tp_cusdesp;
  --
  -- 4-Vencimentos do DIEF
  type tp_vencto is record(
    TpReg      varchar2(1),
    CodTrib1   number(4),
    DtVencto1  number(8), -- Formato: DDMMRRRR
    VlrVencto1 number(11),
    CodTrib2   number(4),
    DtVencto2  number(8), -- Formato: DDMMRRRR
    VlrVencto2 number(11),
    CodTrib3   number(4),
    DtVencto3  number(8), -- Formato: DDMMRRRR
    VlrVencto3 number(11),
    CodTrib4   number(4),
    DtVencto4  number(8), -- Formato: DDMMRRRR
    VlrVencto4 number(11),
    CodTrib5   number(4),
    DtVencto5  number(8), -- Formato: DDMMRRRR
    VlrVencto5 number(11),
    CodTrib6   number(4),
    DtVencto6  number(8), -- Formato: DDMMRRRR
    VlrVencto6 number(11),
    CodTrib7   number(4),
    DtVenc7    number(8), -- Formato: DDMMRRRR
    VlrVencto7 number(11),
    CodTrib8   number(4),
    DtVencto8  number(8), -- Formato: DDMMRRRR
    VlrVencto8 number(11));
  --
  type t_tab_tp_vencto is table of tp_vencto index by binary_integer;
  vt_tab_tp_vencto t_tab_tp_vencto;
  --
  -- 5-Resumo de Operações do DIEF
  type tp_resoper is record(
    TpReg       varchar2(1),
    NroCFOP     number(4),
    VlrContabil number(11),
    BaseCalc    number(11),
    Imposto     number(11),
    Isentas     number(11),
    Outras      number(11));
  --
  type t_tab_tp_resoper is table of tp_resoper index by binary_integer;
  type t_bi_tab_tp_resoper is table of t_tab_tp_resoper index by binary_integer;
  vt_bi_tab_tp_resoper t_bi_tab_tp_resoper;
  --
  -- A-Registro Principal da Declaração de Movimento de Café Cru
  type tp_regA is record(
    TpReg        varchar2(1),
    InscrEst     number(9),
    AnoMesRef    number(6),
    TpDocto      varchar2(1), -- 1-Orig no prazo; 2-Retif no prazo; 3-Orig fora do prazo; 4-Retif Fora do prazo.
    EstqGlobInic number(7));
  --
  type t_tab_tp_regA is table of tp_regA index by binary_integer;
  vt_tab_tp_regA t_tab_tp_regA;
  --
  -- B-Movimento de Café Cru
  type tp_regB is record(
    TpReg          varchar2(1),
    NroNtFisc      number(7),
    DtNtFisc       number(8),
    InscrDestRemet number(15),
    CodMunicUFPais varchar2(5),
    QtdeSacas      number(5),
    ARArabCOCon    varchar2(2),
    TpCafe         varchar2(3),
    CodFiscSINIEF  varchar2(4),
    TpMovto        varchar2(2), -- E-Entrada; EX-Exportação.
    TpOper         number(2),
    NroContrCSIC   varchar2(17),
    VlrICMSRec     number(11),
    InscrDeposDest number(15),
    UFDeposDest    varchar2(2));
  --
  type t_tab_tp_regB is table of tp_regB index by binary_integer;
  vt_tab_tp_regB t_tab_tp_regB;
  --
  -- C-Certificados de Origem / Aproveitamento
  type tp_regC is record(
    TpReg     varchar2(1),
    NroCertif number(7),
    VlrCertif number(11));
  --
  type t_tab_tp_regC is table of tp_regC index by binary_integer;
  vt_tab_tp_regC t_tab_tp_regC;
  --
  -- F-Créditos Acumulados - Movimento Mês
  type tp_regF is record(
    TpReg            varchar2(1),
    VlTranspMesAnt   number(14),
    VlRecebTransf    number(14),
    VlSaidasExt      number(14),
    FillerZer        number(14), -- Preencher com Zeros
    VlPrestAntExport number(14),
    DescOutCredGer   varchar2(60),
    VlOutrCredGer    number(14),
    VlrReincorp      number(14));
  --
  type t_tab_tp_regF is table of tp_regF index by binary_integer;
  vt_tab_tp_regF t_tab_tp_regF;
  --
  -- G-Créditos Acumulados - Detalhes
  type tp_regG is record(
    TpReg       varchar2(1),
    TpDet       varchar2(1), -- "T" - Transferência; "R" - Recebimento; "C" - Utilização por Compensação.
    NroOrdem    number(3), -- Sequencial, início = 1.
    RazSoc      varchar2(46),
    CNPJ        number(14),
    NroNota     number(6),
    DtNota      number(8),
    NaturOper   number(2),
    DescOutrSit varchar2(60),
    VlrOper     number(14),
    NroProc     number(8));
  --
  type t_tab_tp_regG is table of tp_regG index by binary_integer;
  vt_tab_tp_regG t_tab_tp_regG;
  --
  -- H-Energia Elétrica
  type tp_regH is record(
    TpReg      varchar2(1),
    CodMunic   varchar2(5),
    VlrGer     number(10),
    VlrDistrib number(10));
  --
  type t_tab_tp_regH is table of tp_regH index by binary_integer;
  vt_tab_tp_regH t_tab_tp_regH;
  --
  -- I-Transportes
  type tp_regI is record(
    TpReg    varchar2(1),
    CodMunic varchar2(5),
    VlrGer   number(10));
  --
  type t_tab_tp_regI is table of tp_regI index by binary_integer;
  vt_tab_tp_regI t_tab_tp_regI;
  --
  -- J Comunicações
  type tp_regJ is record(
    TpReg    varchar2(1),
    CodMunic varchar2(5),
    Filler   number(14), -- Preencher com Zeros
    VlrServ  number(10));
  --
  type t_tab_tp_regJ is table of tp_regJ index by binary_integer;
  vt_tab_tp_regJ t_tab_tp_regJ;
  --
  -- K-Mudança de Município
  type tp_regK is record(
    TpReg       varchar2(1),
    CodCFOP     number(4),
    VlrContabil number(10));
  --
  type t_tab_tp_regK is table of tp_regK index by binary_integer;
  vt_tab_tp_regK t_tab_tp_regK;
  --
  -- L-Valor Adicionado por Município
  type tp_regL is record(
    TpReg     varchar2(1),
    CodMunic  varchar(5),
    VlrMercad number(10));
  --
  type t_tab_tp_regL is table of tp_regL index by binary_integer;
  vt_tab_tp_regL t_tab_tp_regL;
  --
  -- M-GI/ICMS
  type tp_regM is record(
    TpReg             varchar2(1),
    SiglaLocalUF      varchar2(2),
    TpMovto           varchar2(1), -- E-Entrada; S-Saída.
    VlrContabil       number(10),
    VlrContabilNContr number(10), -- Utilizado apenas para saídas
    VlrBase           number(10),
    VlrBaseNContr     number(10), -- Utilizado apenas para saídas
    VlrOutras         number(10),
    VlrPetrEnerg      number(10),
    VlrOutrNContr     number(10) -- Entradas (Outros Produtos) / Saídas (ICMS - ST)
    );
  --
  type t_tab_tp_regM is table of tp_regM index by binary_integer;
  vt_tab_tp_regM t_tab_tp_regM;
  --
  -- N-Estoque
  type tp_regN is record(
    TpReg             varchar2(1),
    VlrEstimatInic    number(10),
    VlrEstimatFin     number(10),
    VlEstimaInicAtual number(10),
    VlEstimaFinAtual  number(10));
  --
  type t_tab_tp_regN is table of tp_regN index by binary_integer;
  vt_tab_tp_regN t_tab_tp_regN;
  --
  -- P-Mapa Resumo - Estabelecimentos Relacionados
  type tp_regP is record(
    TpReg         varchar2(1),
    TpPessoa      varchar2(1), -- F-Pessoa Física; J-Pessoa Jurídica
    IdentPessoa   varchar2(14), -- CPF/CNPJ sem formatação
    NomeRazSocial varchar2(46),
    UF            varchar2(2));
  --
  type t_tab_tp_regP is table of tp_regP index by binary_integer;
  vt_tab_tp_regP t_tab_tp_regP;
  --
  -- Q-Mapa Resumo - Identificação do Documento
  type tp_regQ is record(
    TpReg varchar2(1));
  --
  type t_tab_tp_regQ is table of tp_regQ index by binary_integer;
  vt_tab_tp_regQ t_tab_tp_regQ;
  --
  -- R-Mapa Resumo - Movimento Mensal
  type tp_regR is record(
    TpReg      varchar2(1),
    TpMovto    varchar2(1), -- E-Entrada; S-Saída.
    NroOrdem   number(5), -- Sequencial, início = 1.
    CodCombust varchar2(2), -- A-Álcool; AH-Álcool Hidratado; HO-Álcool Hidratado Outros fins; D-Diesel Comum; DA-Diesel Aditivado; G-Gasolina Comum;
    -- GA-Gasolina Aditivada; GN-Gás Natural Veicular; QA-Querosene Aviação; AN-Álcool Anidro; AO-Álcool Anidro Outros Fins.
    TpConsum      varchar2(1), -- C-Consumidor Final (exclusivo para saídas de Postos Combustível); E-Exterior; F-Pessoa Física; J-Pessoa Jurídica.
    TpPessoa      varchar2(1), -- E-Exterior; F-Pessoa Física; J-Pessoa Jurídica.
    IdentifPessoa varchar2(14), -- CPF/CNPJ sem formatação
    VolCombust    number(15),
    AmbitoLiminar varchar2(1), -- E-Estadual; F-Federal.
    NroLiminar    number(12));
  --
  type t_tab_tp_regR is table of tp_regR index by binary_integer;
  vt_tab_tp_regR t_tab_tp_regR;
  --
  -- S-Mapa Resumo - Estoque
  type tp_regS is record(
    TpReg      varchar2(1),
    CodCombust varchar2(2), -- A-Álcool; AH-Álcool Hidratado; HO-Álcool Hidratado Outros fins; D-Diesel Comum; DA-Diesel Aditivado; G-Gasolina Comum;
    -- GA-Gasolina Aditivada; GN-Gás Natural Veicular; QA-Querosene Aviação; AN-Álcool Anidro; AO-Álcool Anidro Outros Fins.
    VolInicEstq number(15),
    Observ      varchar2(200));
  --
  type t_tab_tp_regS is table of tp_regS index by binary_integer;
  vt_tab_tp_regS t_tab_tp_regS;
  --
  -- T-Mapa Resumo - Liminares
  type tp_regT is record(
    TpReg         varchar2(1),
    AmbitoLiminar varchar2(1), -- E-Estadual; F-Federal.
    NroLiminar    number(12),
    DtConcess     number(8),
    DtCassa       number(8),
    Observ        varchar2(200));
  --
  type t_tab_tp_regT is table of tp_regT index by binary_integer;
  vt_tab_tp_regT t_tab_tp_regT;
  --
  -- U-Mapa Resumo - Combustíveis Autorizados por Liminar
  type tp_regU is record(
    TpReg         varchar2(1),
    AmbitoLiminar varchar2(1), -- E-Estadual; F-Federal.
    NroLiminar    number(12),
    CodCombust    varchar2(2) -- A-Álcool; AH-Álcool Hidratado; HO-Álcool Hidratado Outros fins; D-Diesel Comum; DA-Diesel Aditivado; G-Gasolina Comum;
    -- GA-Gasolina Aditivada; GN-Gás Natural Veicular; QA-Querosene Aviação; AN-Álcool Anidro; AO-Álcool Anidro Outros Fins.
    );
  --
  type t_tab_tp_regU is table of tp_regU index by binary_integer;
  vt_tab_tp_regU t_tab_tp_regU;
  --
  -- O-Produtor Rural
  type tp_regO is record(
    TpReg          varchar2(1),
    InscrProdut    varchar2(9),
    DtRefer        number(6),
    NroNota        number(7),
    DtEmiss        number(8),
    InscrEstadDest varchar2(9),
    SiglaLocal     varchar2(5),
    NaturOper      number(2),
    TpOper         number(2),
    VlrNota        number(10),
    ICMS           number(10));
  --
  type t_tab_tp_regO is table of tp_regO index by binary_integer;
  vt_tab_tp_regO t_tab_tp_regO;
  --
  -- D-Registro Final
  type tp_regD is record(
    TpReg           varchar2(1),
    QtdeTotal       number(5),
    QtdeRegNormal   number(5),
    QtdeRegEstimat  number(5),
    QtdeProdutRural number(5));
  --
  type t_tab_tp_regD is table of tp_regD index by binary_integer;
  vt_tab_tp_regD t_tab_tp_regD;
  --
  -- Cursores para o processo
  --
  cursor c_apur_icms is
    select sum(nvl(ai.vl_total_debito, 0)) vl_total_debito,
           sum(nvl(ai.vl_estorno_credito, 0)) vl_estorno_credito,
           sum(nvl(ai.vl_saldo_credor_transp, 0)) vl_saldo_credor_transp,
           sum(nvl(ob.vl_orig_rec, 0)) vl_orig_rec,
           sum(nvl(ai.vl_saldo_credor_ant, 0)) vl_saldo_credor_ant,
           sum(nvl(ai.vl_estorno_debido, 0)) vl_estorno_debido,
           sum(nvl(ai.vl_ajust_debito, 0)) vl_ajust_debito,
           sum(nvl(ai.vl_total_credito, 0)) vl_total_credito,
           sum(nvl(ai.vl_ajust_credito, 0)) vl_ajust_credito,
           sum(nvl(ai.vl_icms_recolher, 0)) vl_icms_recolher
      from apuracao_icms ai, 
           obrig_rec_apur_icms ob
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
       and ob.apuracaoicms_id   = ai.id;
  --
  cursor c_apur_icms_dt_vencto is
    select ob.dt_vencto_obrig, 
           sum(nvl(ob.vl_orig_rec, 0)) vl_orig_rec
      from apuracao_icms ai,  
           obrig_rec_apur_icms ob
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
       and ob.apuracaoicms_id   = ai.id
     group by ob.dt_vencto_obrig;
  --
  cursor c_det_cfop is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper, -- 0-Entrada, 1-Saída
           nf.dm_ind_emit,  -- 0-Emissão Própria, 1-Terceiros
           cod_mod,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           inf.id         itemnf_id
      from nota_fiscal nf, 
           mod_fiscal mf, 
           item_nota_fiscal inf
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(trunc(nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(trunc(nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65', '99')
       and inf.notafiscal_id  = nf.id
     order by 1, 2;
  --
  -- Item 26/27
  cursor c_det_cfop_sc is
    select nf.id          notafiscal_id,
           nf.dm_ind_emit,
           nf.dm_ind_oper,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           mf.cod_mod,
           r.id           nfregistanalit_id
      from nota_fiscal nf, 
           mod_fiscal mf, 
           nfregist_analit r
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('06', '29', '28', '21', '22')
       and r.notafiscal_id    = nf.id
     order by 1;
  --
  cursor c_det_cfop_ct is
    select ct.id            conhectransp_id,
           ct.dm_ind_oper,
           ct.pessoa_id,
           ct.dt_hr_emissao dt_emiss,
           ct.nro_ct,
           ct.serie         serie_ct,
           ct.subserie      subserie_ct,
           r.id             ctreganal_id
      from conhec_transp ct, 
           ct_reg_anal r
     where ct.empresa_id      = gt_row_abertura_gia.empresa_id
       and ct.dm_st_proc      = 4 -- Autorizada
       and ct.dm_arm_cte_terc = 0
       and ((ct.dm_ind_emit = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and r.conhectransp_id  = ct.id
     order by 1;
  --
  cursor c_det_cfop_ecf is
    select r.id     reducaozecf_id,
           r.dt_doc dt_emiss,
           ramd.id  reganalmovdiaecf_id
      from equip_ecf e, 
           reducao_z_ecf r, 
           reg_anal_mov_dia_ecf ramd
     where e.empresa_id        = gt_row_abertura_gia.empresa_id
       and r.equipecf_id       = e.id
       and r.dm_st_proc        = 1 -- Validada
       and to_date(r.dt_doc, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and ramd.reducaozecf_id = r.id
     order by 1;
  --
  -- Função para retornar o grupo da CFOP em questão
  function fkg_retorna_grupo_cfop(en_cd_cfop in cfop.cd%type) return number is
    --
    vn_cfop number;
    --
  begin
    --
    if substr(nvl(en_cd_cfop, 0), 1, 1) = 1 then -- Grupo Entradas do Estado
      --
      if nvl(en_cd_cfop, 0) between 1100 and 1149 then
        vn_cfop := 1100;
      elsif nvl(en_cd_cfop, 0) between 1150 and 1199 then
        vn_cfop := 1150;
      elsif nvl(en_cd_cfop, 0) between 1200 and 1249 then
        vn_cfop := 1200;
      elsif nvl(en_cd_cfop, 0) between 1250 and 1299 then
        vn_cfop := 1250;
      elsif nvl(en_cd_cfop, 0) between 1300 and 1349 then
        vn_cfop := 1300;
      elsif nvl(en_cd_cfop, 0) between 1350 and 1399 then
        vn_cfop := 1350;
      elsif nvl(en_cd_cfop, 0) between 1400 and 1449 then
        vn_cfop := 1400;
      elsif nvl(en_cd_cfop, 0) between 1450 and 1499 then
        vn_cfop := 1450;
      elsif nvl(en_cd_cfop, 0) between 1500 and 1549 then
        vn_cfop := 1500;
      elsif nvl(en_cd_cfop, 0) between 1550 and 1599 then
        vn_cfop := 1550;
      elsif nvl(en_cd_cfop, 0) between 1600 and 1649 then
        vn_cfop := 1600;
      elsif nvl(en_cd_cfop, 0) between 1650 and 1699 then
        vn_cfop := 1650;
      else
        vn_cfop := 1900;
      end if;
      --
    elsif substr(nvl(en_cd_cfop, 0), 1, 1) = 2 then -- Grupo Entradas de Outros Estados
      --
      if nvl(en_cd_cfop, 0) between 2100 and 2149 then
        vn_cfop := 2100;
      elsif nvl(en_cd_cfop, 0) between 2150 and 2199 then
        vn_cfop := 2150;
      elsif nvl(en_cd_cfop, 0) between 2200 and 2249 then
        vn_cfop := 2200;
      elsif nvl(en_cd_cfop, 0) between 2250 and 2299 then
        vn_cfop := 2250;
      elsif nvl(en_cd_cfop, 0) between 2300 and 2349 then
        vn_cfop := 2300;
      elsif nvl(en_cd_cfop, 0) between 2350 and 2399 then
        vn_cfop := 2350;
      elsif nvl(en_cd_cfop, 0) between 2400 and 2449 then
        vn_cfop := 2400;
      elsif nvl(en_cd_cfop, 0) between 2450 and 2499 then
        vn_cfop := 2450;
      elsif nvl(en_cd_cfop, 0) between 2500 and 2549 then
        vn_cfop := 2500;
      elsif nvl(en_cd_cfop, 0) between 2550 and 2599 then
        vn_cfop := 2550;
      elsif nvl(en_cd_cfop, 0) between 2600 and 2649 then
        vn_cfop := 2600;
      elsif nvl(en_cd_cfop, 0) between 2650 and 2699 then
        vn_cfop := 2650;
      else
        vn_cfop := 2900;
      end if;
      --
    elsif substr(nvl(en_cd_cfop, 0), 1, 1) = 3 then -- Grupo Entradas do Exterior
      --
      if nvl(en_cd_cfop, 0) between 3100 and 3149 then
        vn_cfop := 3100;
      elsif nvl(en_cd_cfop, 0) between 3150 and 3199 then
        vn_cfop := 3150;
      elsif nvl(en_cd_cfop, 0) between 3200 and 3249 then
        vn_cfop := 3200;
      elsif nvl(en_cd_cfop, 0) between 3250 and 3299 then
        vn_cfop := 3250;
      elsif nvl(en_cd_cfop, 0) between 3300 and 3349 then
        vn_cfop := 3300;
      elsif nvl(en_cd_cfop, 0) between 3350 and 3399 then
        vn_cfop := 3350;
      elsif nvl(en_cd_cfop, 0) between 3400 and 3449 then
        vn_cfop := 3400;
      elsif nvl(en_cd_cfop, 0) between 3450 and 3499 then
        vn_cfop := 3450;
      elsif nvl(en_cd_cfop, 0) between 3500 and 3549 then
        vn_cfop := 3500;
      elsif nvl(en_cd_cfop, 0) between 3550 and 3599 then
        vn_cfop := 3550;
      elsif nvl(en_cd_cfop, 0) between 3600 and 3649 then
        vn_cfop := 3600;
      elsif nvl(en_cd_cfop, 0) between 3650 and 3699 then
        vn_cfop := 3650;
      else
        vn_cfop := 3900;
      end if;
      --
    elsif substr(nvl(en_cd_cfop, 0), 1, 1) = 5 then -- Grupo Saídas para o Estado
      --
      if nvl(en_cd_cfop, 0) between 5100 and 5149 then
        vn_cfop := 5100;
      elsif nvl(en_cd_cfop, 0) between 5150 and 5199 then
        vn_cfop := 5150;
      elsif nvl(en_cd_cfop, 0) between 5200 and 5249 then
        vn_cfop := 5200;
      elsif nvl(en_cd_cfop, 0) between 5250 and 5299 then
        vn_cfop := 5250;
      elsif nvl(en_cd_cfop, 0) between 5300 and 5349 then
        vn_cfop := 5300;
      elsif nvl(en_cd_cfop, 0) between 5350 and 5399 then
        vn_cfop := 5350;
      elsif nvl(en_cd_cfop, 0) between 5400 and 5449 then
        vn_cfop := 5400;
      elsif nvl(en_cd_cfop, 0) between 5450 and 5499 then
        vn_cfop := 5450;
      elsif nvl(en_cd_cfop, 0) between 5500 and 5549 then
        vn_cfop := 5500;
      elsif nvl(en_cd_cfop, 0) between 5550 and 5599 then
        vn_cfop := 5550;
      elsif nvl(en_cd_cfop, 0) between 5600 and 5649 then
        vn_cfop := 5600;
      elsif nvl(en_cd_cfop, 0) between 5650 and 5699 then
        vn_cfop := 5650;
      else
        vn_cfop := 5900;
      end if;
      --
    elsif substr(nvl(en_cd_cfop, 0), 1, 1) = 6 then -- Grupo Saídas para Outros Estados
      --
      if nvl(en_cd_cfop, 0) between 6100 and 6149 then
        vn_cfop := 6100;
      elsif nvl(en_cd_cfop, 0) between 6150 and 6199 then
        vn_cfop := 6150;
      elsif nvl(en_cd_cfop, 0) between 6200 and 6249 then
        vn_cfop := 6200;
      elsif nvl(en_cd_cfop, 0) between 6250 and 6299 then
        vn_cfop := 6250;
      elsif nvl(en_cd_cfop, 0) between 6300 and 6349 then
        vn_cfop := 6300;
      elsif nvl(en_cd_cfop, 0) between 6350 and 6399 then
        vn_cfop := 6350;
      elsif nvl(en_cd_cfop, 0) between 6400 and 6449 then
        vn_cfop := 6400;
      elsif nvl(en_cd_cfop, 0) between 6450 and 6499 then
        vn_cfop := 6450;
      elsif nvl(en_cd_cfop, 0) between 6500 and 6549 then
        vn_cfop := 6500;
      elsif nvl(en_cd_cfop, 0) between 6550 and 6599 then
        vn_cfop := 6550;
      elsif nvl(en_cd_cfop, 0) between 6600 and 6649 then
        vn_cfop := 6600;
      elsif nvl(en_cd_cfop, 0) between 6650 and 6699 then
        vn_cfop := 6650;
      else
        vn_cfop := 6900;
      end if;
      --
    elsif substr(nvl(en_cd_cfop, 0), 1, 1) = 7 then -- Grupo Saídas para o Exterior
      --
      if nvl(en_cd_cfop, 0) between 7100 and 7149 then
        vn_cfop := 7100;
      elsif nvl(en_cd_cfop, 0) between 7150 and 7199 then
        vn_cfop := 7150;
      elsif nvl(en_cd_cfop, 0) between 7200 and 7249 then
        vn_cfop := 7200;
      elsif nvl(en_cd_cfop, 0) between 7250 and 7299 then
        vn_cfop := 7250;
      elsif nvl(en_cd_cfop, 0) between 7300 and 7349 then
        vn_cfop := 7300;
      elsif nvl(en_cd_cfop, 0) between 7350 and 7399 then
        vn_cfop := 7350;
      elsif nvl(en_cd_cfop, 0) between 7400 and 7449 then
        vn_cfop := 7400;
      elsif nvl(en_cd_cfop, 0) between 7450 and 7499 then
        vn_cfop := 7450;
      elsif nvl(en_cd_cfop, 0) between 7500 and 7549 then
        vn_cfop := 7500;
      elsif nvl(en_cd_cfop, 0) between 7550 and 7599 then
        vn_cfop := 7550;
      elsif nvl(en_cd_cfop, 0) between 7600 and 7649 then
        vn_cfop := 7600;
      elsif nvl(en_cd_cfop, 0) between 7650 and 7699 then
        vn_cfop := 7650;
      else
        vn_cfop := 7900;
      end if;
    end if;
    --
    return vn_cfop;
    --
  exception
    when others then
      return 0;
  end fkg_retorna_grupo_cfop;
  --
  -- Limpar os vetores
  procedure pkb_limpa_vetor_es is
    --
  begin
    --
    vt_tab_tp_ini.delete;
    vt_tab_tp_princ.delete;
    vt_tab_tp_cusdesp.delete;
    vt_tab_tp_vencto.delete;
    vt_bi_tab_tp_resoper.delete;
    vt_tab_tp_regA.delete;
    vt_tab_tp_regB.delete;
    vt_tab_tp_regC.delete;
    vt_tab_tp_regF.delete;
    vt_tab_tp_regG.delete;
    vt_tab_tp_regH.delete;
    vt_tab_tp_regI.delete;
    vt_tab_tp_regJ.delete;
    vt_tab_tp_regK.delete;
    vt_tab_tp_regL.delete;
    vt_tab_tp_regM.delete;
    vt_tab_tp_regN.delete;
    vt_tab_tp_regP.delete;
    vt_tab_tp_regQ.delete;
    vt_tab_tp_regR.delete;
    vt_tab_tp_regS.delete;
    vt_tab_tp_regT.delete;
    vt_tab_tp_regU.delete;
    vt_tab_tp_regO.delete;
    vt_tab_tp_regD.delete;
    --
  end pkb_limpa_vetor_es;
  --
  -- Procedimento monta a estrutura do arquivo da GIA-ES
  procedure pkb_monta_estr_arq_gia_es is
    --
    vn_fase_arq     number := 0;
    i               pls_integer;
    j               pls_integer;
    vn_qtde_resoper number := 0;
    --
  begin
    --
    vn_fase_arq := 1;
    --
    -- 1-Registro Inicial
    if nvl(vt_tab_tp_ini.count, 0) > 0 then
      --
      vn_fase_arq := 1.1;
      --
      i := nvl(vt_tab_tp_ini.first, 0);
      --
      loop
        --
        vn_fase_arq := 1.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 1.3;
        --
        gl_conteudo := vt_tab_tp_ini(i).TpReg;
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp_ini(i).DescrReg, 21, ' ');
        --
        vn_fase_arq := 1.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '1',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 1.5;
        --
        if i = vt_tab_tp_ini.last then
          exit;
        else
          i := vt_tab_tp_ini.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 2;
    --
    -- 2-Registro Principal do DIEF
    if nvl(vt_tab_tp_princ.count, 0) > 0 then
      --
      vn_fase_arq := 2.1;
      --
      i := nvl(vt_tab_tp_princ.first, 0);
      --
      loop
        --
        vn_fase_arq := 2.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 2.3;
        --
        gl_conteudo := vt_tab_tp_princ(i).TpReg;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).InscrEst, 9, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).MesRef, 2, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).AnoRef, 4, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp_princ(i).ForApres, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).DebPer, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).OutrDebRef03, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).EstCred, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_princ(i).DescOutrDeb, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).OutrDebRef05, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).CredPer, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).OutrCredRef10, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).EstDeb, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).Deducao, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_princ(i).DescOutrCred, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).OutrCredRef13, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).SldCredMesAnt, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).ICMSRec, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).SldCredMesSeg, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).DiferAliq, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).SubstTrib, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).Fundap, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).EstimatSuper, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).EstimatAtac, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_princ(i).DescOutrICMSA, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).VlrOutrICMSA, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_princ(i).DescOutrICMSB, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).VlrOutrICMSB, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_princ(i).DescOutrICMSC, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_princ(i).VlrOutrICMSC, 11, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp_princ(i).TpDecl, 1, ' ');
        --
        vn_fase_arq := 2.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '2',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 2.5;
        --
        if i = vt_tab_tp_princ.last then
          exit;
        else
          i := vt_tab_tp_princ.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 3;
    --
    -- 3-Registro de Custos e Despesas do DIEF
    if nvl(vt_tab_tp_cusdesp.count, 0) > 0 then
      --
      vn_fase_arq := 3.1;
      --
      i := nvl(vt_tab_tp_cusdesp.first, 0);
      --
      loop
        --
        vn_fase_arq := 3.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 3.3;
        --
        gl_conteudo := vt_tab_tp_cusdesp(i).TpReg;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).Agua, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).EnergEletr, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).Telefone, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).AlugCondom, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).ProlabHonor, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).TribFed, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).ContribPrevid, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).TribMunic, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).VlrBrutFolPagto, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_cusdesp(i).DescOutrDespA, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).VlrOutrDespA, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_cusdesp(i).DescOutrDespB, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).VlrOutrDespB, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_cusdesp(i).FillerAEsp, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).FillerBZer, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_cusdesp(i).FillerCEsp, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).FillerDZer, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_cusdesp(i).FillerEEsp, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).FillerFZer, 11, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_cusdesp(i).FillerGEsp, ' '), 30, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_cusdesp(i).FillerHZer, 11, 0);
        --
        vn_fase_arq := 3.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '3',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 3.5;
        --
        if i = vt_tab_tp_cusdesp.last then
          exit;
        else
          i := vt_tab_tp_cusdesp.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 4;
    --
    -- 4-Vencimentos do DIEF
    if nvl(vt_tab_tp_vencto.count, 0) > 0 then
      --
      vn_fase_arq := 4.1;
      --
      i := nvl(vt_tab_tp_vencto.first, 0);
      --
      loop
        --
        vn_fase_arq := 4.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 4.3;
        --
        gl_conteudo := vt_tab_tp_vencto(i).TpReg;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib1, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVencto1, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto1, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib2, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVencto2, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto2, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib3, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVencto3, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto3, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib4, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVencto4, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto4, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib5, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVencto5, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto5, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib6, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVencto6, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto6, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib7, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVenc7, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto7, 11, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).CodTrib8, 4, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).DtVencto8, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_vencto(i).VlrVencto8, 11, 0);
        --
        vn_fase_arq := 4.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '4',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 4.5;
        --
        if i = vt_tab_tp_vencto.last then
          exit;
        else
          i := vt_tab_tp_vencto.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 5;
    --
    -- 5-Resumo de Operações do DIEF
    if nvl(vt_bi_tab_tp_resoper.count, 0) > 0 then
      --
      vn_fase_arq := 5.1;
      --
      i := nvl(vt_bi_tab_tp_resoper.first, 0);
      --
      loop
        --
        vn_fase_arq := 5.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 5.3;
        --
        begin
          vn_qtde_resoper := vt_bi_tab_tp_resoper(i).count;
        exception
          when others then
            vn_qtde_resoper := 0;
        end;
        --
        vn_fase_arq := 5.4;
        --
        if nvl(vn_qtde_resoper, 0) > 0 then
          --
          vn_fase_arq := 5.5;
          --
          j := vt_bi_tab_tp_resoper(i).first;
          --
          vn_fase_arq := 5.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 5.7;
            --
            gl_conteudo := vt_bi_tab_tp_resoper(i)(j).TpReg;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp_resoper(i)(j).NroCFOP, 4, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp_resoper(i)(j).VlrContabil, 11, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp_resoper(i)(j).BaseCalc, 11, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp_resoper(i)(j).Imposto, 11, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp_resoper(i)(j).Isentas, 11, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp_resoper(i)(j).Outras, 11, 0);
            --
            vn_fase_arq := 5.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '5',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 5.9;
            --
            if j = vt_bi_tab_tp_resoper(i).last then
              exit;
            else
              j := vt_bi_tab_tp_resoper(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 5.10;
        --
        if i = vt_bi_tab_tp_resoper.last then
          exit;
        else
          i := vt_bi_tab_tp_resoper.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 6;
    --
    -- 5-Resumo de Operações do DIEF - Não será processado
    -- B-Movimento de Café Cru - Não será processado
    -- C-Certificados de Origem / Aproveitamento - Não será processado
    --
    -- F-Créditos Acumulados - Movimento Mês
    if nvl(vt_tab_tp_regF.count, 0) > 0 then
      --
      vn_fase_arq := 6.1;
      --
      i := nvl(vt_tab_tp_regF.first, 0);
      --
      loop
        --
        vn_fase_arq := 6.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 6.3;
        --
        gl_conteudo := vt_tab_tp_regF(i).TpReg;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regF(i).VlTranspMesAnt, 14, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regF(i).VlRecebTransf, 14, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regF(i).VlSaidasExt, 14, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regF(i).FillerZer, 14, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regF(i).VlPrestAntExport, 14, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_regF(i).DescOutCredGer, ' '), 60, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regF(i).VlOutrCredGer, 14, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regF(i).VlrReincorp, 14, 0);
        --
        vn_fase_arq := 6.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => 'F',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 6.5;
        --
        if i = vt_tab_tp_regF.last then
          exit;
        else
          i := vt_tab_tp_regF.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 7;
    --
    -- G-Créditos Acumulados - Detalhes
    if nvl(vt_tab_tp_regG.count, 0) > 0 then
      --
      vn_fase_arq := 7.1;
      --
      i := nvl(vt_tab_tp_regG.first, 0);
      --
      loop
        --
        vn_fase_arq := 7.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 7.3;
        --
        gl_conteudo := vt_tab_tp_regG(i).TpReg;
        gl_conteudo := gl_conteudo || vt_tab_tp_regG(i).TpDet;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regG(i).NroOrdem, 3, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_regG(i).RazSoc, ' '), 46, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regG(i).CNPJ, 14, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regG(i).NroNota, 6, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regG(i).DtNota, 8, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regG(i).NaturOper, 2, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp_regG(i).DescOutrSit, ' '), 60, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regG(i).VlrOper, 14, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regG(i).NroProc, 8, 0);
        --
        vn_fase_arq := 7.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => 'G',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 7.5;
        --
        if i = vt_tab_tp_regG.last then
          exit;
        else
          i := vt_tab_tp_regG.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 8;
    --
    -- H-Energia Elétrica - Não será processado
    -- I-Transportes - Não será processado
    -- J Comunicações - Não será processado
    -- K-Mudança de Município - Não será processado
    -- L-Valor Adicionado por Município - Não será processado
    --
    -- M-GI/ICMS
    if nvl(vt_tab_tp_regM.count, 0) > 0 then
      --
      vn_fase_arq := 8.1;
      --
      i := nvl(vt_tab_tp_regM.first, 0);
      --
      loop
        --
        vn_fase_arq := 8.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 8.3;
        --
        gl_conteudo := vt_tab_tp_regM(i).TpReg;
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp_regM(i).SiglaLocalUF, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp_regM(i).TpMovto, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regM(i).VlrContabil, 10, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regM(i).VlrContabilNContr, 10, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regM(i).VlrBase, 10, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regM(i).VlrBaseNContr, 10, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regM(i).VlrOutras, 10, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regM(i).VlrPetrEnerg, 10, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regM(i).VlrOutrNContr, 10, 0);
        --
        vn_fase_arq := 8.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => 'M',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 8.5;
        --
        if i = vt_tab_tp_regM.last then
          exit;
        else
          i := vt_tab_tp_regM.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 9;
    --
    -- N-Estoque - Não será processado
    -- P-Mapa Resumo - Estabelecimentos Relacionados - Não será processado
    -- Q-Mapa Resumo - Identificação do Documento - Não será processado
    -- R-Mapa Resumo - Movimento Mensal - Não será processado
    -- S-Mapa Resumo - Estoque - Não será processado
    -- T-Mapa Resumo - Liminares - Não será processado
    -- U-Mapa Resumo - Combustíveis Autorizados por Liminar - Não será processado
    -- O-Produtor Rural - Não será processado
    --
    -- D-Registro Final
    if nvl(vt_tab_tp_regD.count, 0) > 0 then
      --
      vn_fase_arq := 9.1;
      --
      i := nvl(vt_tab_tp_regD.first, 0);
      --
      loop
        --
        vn_fase_arq := 9.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 9.3;
        --
        gl_conteudo := vt_tab_tp_regD(i).TpReg;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regD(i).QtdeTotal, 5, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regD(i).QtdeRegNormal, 5, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regD(i).QtdeRegEstimat, 5, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp_regD(i).QtdeProdutRural, 5, 0);
        --
        vn_fase_arq := 9.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => 'D',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 9.5;
        --
        if i = vt_tab_tp_regD.last then
          exit;
        else
          i := vt_tab_tp_regD.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 10;
    --
    -- Final da montagem das linhas do arquivo texto
    --
    pkb_limpa_vetor_es;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_es fase (' || vn_fase_arq || '): ' || sqlerrm);
  end pkb_monta_estr_arq_gia_es;
  --
  -- Inicio PROCEDURE PRINCIPAL ESPÍRITO SANTO
  --
begin
  --
  vn_fase := 1;
  --
  pkb_limpa_vetor_es;
  --
  vn_fase := 2;
  --
  gv_tipocodarq_cd := '14';
  --
  vn_fase := 3;
  --
  -- 1-Registro Inicial
  vt_tab_tp_ini(1).TpReg    := '1'; -- tipo de registro
  vt_tab_tp_ini(1).DescrReg := 'Registro Inicial';
  --
  vn_fase := 4;
  --
  -- 2-Registro Principal do DIEF
  vt_tab_tp_princ(1).TpReg    := '2'; -- tipo de registro
  vt_tab_tp_princ(1).InscrEst := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0); -- Inscrição Estadual
  vt_tab_tp_princ(1).MesRef   := to_char(gt_row_abertura_gia.dt_fin, 'MM');
  vt_tab_tp_princ(1).AnoRef   := to_char(gt_row_abertura_gia.dt_fin, 'RRRR');
  vt_tab_tp_princ(1).ForApres := 1; -- 1-Original no prazo; 2-Retificadora no prazo; 3-Original fora do prazo; 4-Retificadora fora do prazo.
  --
  vn_fase := 5;
  --
  -- Dados de apuração de ICMS
  for rec in c_apur_icms loop
    exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
    --
    vn_fase := 6;
    --
    vt_tab_tp_princ(1).DebPer        := (nvl(rec.vl_total_debito, 0) * 100);
    vt_tab_tp_princ(1).OutrDebRef03  := (nvl(rec.vl_ajust_debito, 0) * 100);
    vt_tab_tp_princ(1).EstCred       := (nvl(rec.vl_estorno_credito, 0) * 100);
    vt_tab_tp_princ(1).DescOutrDeb   := null;
    vt_tab_tp_princ(1).OutrDebRef05  := (nvl(rec.vl_ajust_debito, 0) * 100);
    vt_tab_tp_princ(1).CredPer       := (nvl(rec.vl_total_credito, 0) * 100);
    vt_tab_tp_princ(1).OutrCredRef10 := (nvl(rec.vl_ajust_credito, 0) * 100);
    vt_tab_tp_princ(1).EstDeb        := (nvl(rec.vl_estorno_debido, 0) * 100);
    vt_tab_tp_princ(1).Deducao       := 0;
    vt_tab_tp_princ(1).DescOutrCred  := null;
    vt_tab_tp_princ(1).OutrCredRef13 := (nvl(rec.vl_ajust_credito, 0) * 100);
    vt_tab_tp_princ(1).SldCredMesAnt := (nvl(rec.vl_saldo_credor_ant, 0) * 100);
    vt_tab_tp_princ(1).ICMSRec       := (nvl(rec.vl_icms_recolher, 0) * 100);
    vt_tab_tp_princ(1).SldCredMesSeg := (nvl(rec.vl_saldo_credor_transp, 0) * 100);
    vt_tab_tp_princ(1).DiferAliq     := 0;
    vt_tab_tp_princ(1).SubstTrib     := 0;
    vt_tab_tp_princ(1).Fundap        := 0;
    vt_tab_tp_princ(1).EstimatSuper  := 0;
    vt_tab_tp_princ(1).EstimatAtac   := 0;
    vt_tab_tp_princ(1).DescOutrICMSA := null;
    vt_tab_tp_princ(1).VlrOutrICMSA  := 0;
    vt_tab_tp_princ(1).DescOutrICMSB := null;
    vt_tab_tp_princ(1).VlrOutrICMSB  := 0;
    vt_tab_tp_princ(1).DescOutrICMSC := null;
    vt_tab_tp_princ(1).VlrOutrICMSC  := 0;
    vt_tab_tp_princ(1).TpDecl        := '0'; -- 0-DIEF Regime Normal; 1-DIEF Regime Estimativa.
  --
  end loop;
  --
  vn_fase := 7;
  --
  -- 3-Registro de Custos e Despesas do DIEF
  begin
    select nvl(ip.vl_folha, 0)
      into vn_vl_folha
      from inf_folha_pgto ip
     where ip.empresa_id = gt_row_abertura_gia.empresa_id
       and ip.dm_st_proc = 3
       and to_date('01/' || ip.mes || '/' || ip.ano, 'dd/mm/yyyy') = trunc(gt_row_abertura_gia.dt_fin, 'mm');
  exception
    when others then
      vn_vl_folha := 0;
  end;
  --
  vn_fase := 8;
  --
  vt_tab_tp_cusdesp(1).TpReg           := '3';
  vt_tab_tp_cusdesp(1).Agua            := 0;
  vt_tab_tp_cusdesp(1).EnergEletr      := 0;
  vt_tab_tp_cusdesp(1).Telefone        := 0;
  vt_tab_tp_cusdesp(1).AlugCondom      := 0;
  vt_tab_tp_cusdesp(1).ProlabHonor     := 0;
  vt_tab_tp_cusdesp(1).TribFed         := 0;
  vt_tab_tp_cusdesp(1).ContribPrevid   := 0;
  vt_tab_tp_cusdesp(1).TribMunic       := 0;
  vt_tab_tp_cusdesp(1).VlrBrutFolPagto := (nvl(vn_vl_folha, 0) * 100);
  vt_tab_tp_cusdesp(1).DescOutrDespA   := null;
  vt_tab_tp_cusdesp(1).VlrOutrDespA    := 0;
  vt_tab_tp_cusdesp(1).DescOutrDespB   := null;
  vt_tab_tp_cusdesp(1).VlrOutrDespB    := 0;
  vt_tab_tp_cusdesp(1).FillerAEsp      := null; -- Espaços em branco
  vt_tab_tp_cusdesp(1).FillerBZer      := 0; -- Preencher com Zeros
  vt_tab_tp_cusdesp(1).FillerCEsp      := null; -- Espaços em branco
  vt_tab_tp_cusdesp(1).FillerDZer      := 0; -- Preencher com Zeros
  vt_tab_tp_cusdesp(1).FillerEEsp      := null; -- Espaços em branco
  vt_tab_tp_cusdesp(1).FillerFZer      := 0; -- Preencher com Zeros
  vt_tab_tp_cusdesp(1).FillerGEsp      := null; -- Espaços em branco
  vt_tab_tp_cusdesp(1).FillerHZer      := 0; -- Preencher com zeros
  --
  vn_fase := 9;
  --
  -- 4-Vencimentos do DIEF
  for rec in c_apur_icms_dt_vencto loop
    exit when c_apur_icms_dt_vencto%notfound or(c_apur_icms_dt_vencto%notfound) is null;
    --
    vn_fase := 10;
    --
    vt_tab_tp_vencto(1).TpReg      := '4';
    vt_tab_tp_vencto(1).CodTrib1   := '1457'; -- Tabela do validador - Código 1457: Demais Produtos
    vt_tab_tp_vencto(1).DtVencto1  := to_char(rec.dt_vencto_obrig, 'DDMMRRRR');
    vt_tab_tp_vencto(1).VlrVencto1 := (nvl(rec.vl_orig_rec, 0) * 100);
    vt_tab_tp_vencto(1).CodTrib2   := 0;
    vt_tab_tp_vencto(1).DtVencto2  := 0;
    vt_tab_tp_vencto(1).VlrVencto2 := 0;
    vt_tab_tp_vencto(1).CodTrib3   := 0;
    vt_tab_tp_vencto(1).DtVencto3  := 0;
    vt_tab_tp_vencto(1).VlrVencto3 := 0;
    vt_tab_tp_vencto(1).CodTrib4   := 0;
    vt_tab_tp_vencto(1).DtVencto4  := 0;
    vt_tab_tp_vencto(1).VlrVencto4 := 0;
    vt_tab_tp_vencto(1).CodTrib5   := 0;
    vt_tab_tp_vencto(1).DtVencto5  := 0;
    vt_tab_tp_vencto(1).VlrVencto5 := 0;
    vt_tab_tp_vencto(1).CodTrib6   := 0;
    vt_tab_tp_vencto(1).DtVencto6  := 0;
    vt_tab_tp_vencto(1).VlrVencto6 := 0;
    vt_tab_tp_vencto(1).CodTrib7   := 0;
    vt_tab_tp_vencto(1).DtVenc7    := 0;
    vt_tab_tp_vencto(1).VlrVencto7 := 0;
    vt_tab_tp_vencto(1).CodTrib8   := 0;
    vt_tab_tp_vencto(1).DtVencto8  := 0;
    vt_tab_tp_vencto(1).VlrVencto8 := 0;
    --
  end loop;
  --
  vn_fase := 11;
  --
  if nvl(vt_tab_tp_vencto.count, 0) = 0 then
    --
    vn_fase := 12;
    --
    vt_tab_tp_vencto(1).TpReg      := '4';
    vt_tab_tp_vencto(1).CodTrib1   := '0000';
    vt_tab_tp_vencto(1).DtVencto1  := '00000000';
    vt_tab_tp_vencto(1).VlrVencto1 := 0;
    vt_tab_tp_vencto(1).CodTrib2   := 0;
    vt_tab_tp_vencto(1).DtVencto2  := 0;
    vt_tab_tp_vencto(1).VlrVencto2 := 0;
    vt_tab_tp_vencto(1).CodTrib3   := 0;
    vt_tab_tp_vencto(1).DtVencto3  := 0;
    vt_tab_tp_vencto(1).VlrVencto3 := 0;
    vt_tab_tp_vencto(1).CodTrib4   := 0;
    vt_tab_tp_vencto(1).DtVencto4  := 0;
    vt_tab_tp_vencto(1).VlrVencto4 := 0;
    vt_tab_tp_vencto(1).CodTrib5   := 0;
    vt_tab_tp_vencto(1).DtVencto5  := 0;
    vt_tab_tp_vencto(1).VlrVencto5 := 0;
    vt_tab_tp_vencto(1).CodTrib6   := 0;
    vt_tab_tp_vencto(1).DtVencto6  := 0;
    vt_tab_tp_vencto(1).VlrVencto6 := 0;
    vt_tab_tp_vencto(1).CodTrib7   := 0;
    vt_tab_tp_vencto(1).DtVenc7    := 0;
    vt_tab_tp_vencto(1).VlrVencto7 := 0;
    vt_tab_tp_vencto(1).CodTrib8   := 0;
    vt_tab_tp_vencto(1).DtVencto8  := 0;
    vt_tab_tp_vencto(1).VlrVencto8 := 0;
    --
  end if;
  --
  vn_fase := 13;
  --
  -- 5-Resumo de Operações do DIEF
  --
  -- Notas fiscais mercantis
  for rec in c_det_cfop loop
    exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
    --
    vn_fase := 14;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vv_cod_st_ipi          := null;
    vn_vl_base_calc_ipi    := 0;
    vn_aliq_ipi            := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_ipi    := 0;
    vn_vl_bc_outra_ipi     := 0;
    vn_ipi_nao_recup       := 0;
    vn_outro_ipi           := 0;
    vn_vl_fcp_icmsst       := 0;
    vn_aliq_fcp_icms       := 0;
    vn_vl_fcp_icms         := 0;
    --
    vn_fase := 15;
    --
    -- 1 - Oper.com crédito do imposto
    -- 2 - Oper.sem crédito do imposto (Isentas ou não Tributadas)
    -- 3 - Oper.sem crédito do imposto (Outras)
    -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
    pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec.itemnf_id,
                                      sn_cfop                => vn_cfop,
                                      sn_vl_operacao         => vn_vl_contabil,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                      sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                      sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                      sv_cod_st_ipi          => vv_cod_st_ipi, -- não utilizado
                                      sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi, -- não utilizado
                                      sn_aliq_ipi            => vn_aliq_ipi, -- não utilizado
                                      sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi, -- não utilizado
                                      sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi, -- não utilizado
                                      sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi, -- não utilizado
                                      sn_ipi_nao_recup       => vn_ipi_nao_recup, -- não utilizado
                                      sn_outro_ipi           => vn_outro_ipi, -- não utilizado
                                      sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                      sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                      sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                      sn_vl_fcp_icms         => vn_vl_fcp_icms);
    --
    vn_fase := 16;
    --
    vn_cfop := fkg_retorna_grupo_cfop(en_cd_cfop => vn_cfop);
    --
    vn_fase := 17;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 18;
      --
      begin
        vb_achou := vt_bi_tab_tp_resoper(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 18.1;
      --
      if not vb_achou then
        --
        vn_fase := 18.2;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).TpReg       := '5';
        vt_bi_tab_tp_resoper(1)(vn_cfop).NroCFOP     := vn_cfop;
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      else
        --
        vn_fase := 18.3;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto + (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := vt_bi_tab_tp_resoper(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      end if;
      --
    end if;
    --
  end loop; -- c_det_cfop
  --
  vn_fase := 19;
  --
  -- Valores de Serviços Contínuos
  for rec in c_det_cfop_sc loop
    exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
    --
    vn_fase := 20;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vn_vl_imp_trib_ipi     := 0;
    --
    vn_fase := 21;
    --
    -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_contabil,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi, -- não utilizado
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 22;
    --
    vn_cfop := fkg_retorna_grupo_cfop(en_cd_cfop => vn_cfop);
    --
    vn_fase := 23;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 24;
      --
      begin
        vb_achou := vt_bi_tab_tp_resoper(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 25;
      --
      if not vb_achou then
        --
        vn_fase := 25.1;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).TpReg       := '5';
        vt_bi_tab_tp_resoper(1)(vn_cfop).NroCFOP     := vn_cfop;
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      else
        --
        vn_fase := 25.2;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto + (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := vt_bi_tab_tp_resoper(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      end if;
      --
    end if;
    --
  end loop; -- c_det_cfop_sc
  --
  vn_fase := 26;
  --
  -- Conhecimentos de Transporte
  for rec in c_det_cfop_ct loop
    exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
    --
    vn_fase := 27;
    --
    vn_cfop               := 0;
    vn_vl_contabil        := 0;
    vv_cod_st_icms        := null;
    vn_vl_base_calc_icms  := 0;
    vn_aliq_icms          := 0;
    vn_vl_imp_trib_icms   := 0;
    vn_vl_imp_trib_icmsst := 0;
    vn_vl_bc_isenta_icms  := 0;
    vn_vl_bc_outra_icms   := 0;
    --
    vn_fase := 28;
    -- recupera os valores de impostos
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_contabil,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 29;
    --
    vn_cfop := fkg_retorna_grupo_cfop(en_cd_cfop => vn_cfop);
    --
    vn_fase := 30;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 31;
      --
      begin
        vb_achou := vt_bi_tab_tp_resoper(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 32;
      --
      if not vb_achou then
        --
        vn_fase := 32.1;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).TpReg       := '5';
        vt_bi_tab_tp_resoper(1)(vn_cfop).NroCFOP     := vn_cfop;
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      else
        --
        vn_fase := 32.2;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto + (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := vt_bi_tab_tp_resoper(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      end if;
      --
    end if;
    --
  end loop; -- c_det_cfop_ct
  --
  vn_fase := 33;
  --
  -- Informações de Cupom Fiscal
  for rec in c_det_cfop_ecf loop
    exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
    --
    vn_fase := 34;
    --
    vn_cfop              := 0;
    vn_vl_contabil       := 0;
    vv_cod_st_icms       := null;
    vn_vl_base_calc_icms := 0;
    vn_aliq_icms         := 0;
    vn_vl_imp_trib_icms  := 0;
    vn_vl_bc_isenta_icms := 0;
    vn_vl_bc_outra_icms  := 0;
    --
    vn_fase := 35;
    --
    -- Recupera valores fiscais (ICMS) do conhecimento de transporte
    pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_cfop                => vn_cfop,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_opr              => vn_vl_contabil,
                                      sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                      sn_vl_icms             => vn_vl_imp_trib_icms,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
    --
    vn_fase := 36;
    --
    vn_cfop := fkg_retorna_grupo_cfop(en_cd_cfop => vn_cfop);
    --
    vn_fase := 37;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 38;
      --
      begin
        vb_achou := vt_bi_tab_tp_resoper(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 39;
      --
      if not vb_achou then
        --
        vn_fase := 39.1;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).TpReg       := '5';
        vt_bi_tab_tp_resoper(1)(vn_cfop).NroCFOP     := vn_cfop;
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      else
        --
        vn_fase := 39.2;
        --
        vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil := vt_bi_tab_tp_resoper(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc    := vt_bi_tab_tp_resoper(1)(vn_cfop).BaseCalc + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto     := vt_bi_tab_tp_resoper(1)(vn_cfop).Imposto +  (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas     := vt_bi_tab_tp_resoper(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_tp_resoper(1)(vn_cfop).Outras      := vt_bi_tab_tp_resoper(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
      end if;
      --
    end if;
    --
  end loop; -- c_det_cfop_ecf
  --
  -- A-Registro Principal da Declaração de Movimento de Café Cru - Não será processado
  -- B-Movimento de Café Cru - Não será processado
  -- C-Certificados de Origem / Aproveitamento - Não será processado
  --
  -- F-Créditos Acumulados - Movimento Mês - Dados de apuração de ICMS - Não será processado
  -- Somente para empresas que geram crédito de exportação ou recebem crédito/transferência de exportação
  -- G-Créditos Acumulados - Detalhes -- Do registro F -- Não será processado
  --
  -- H-Energia Elétrica - Não será processado
  -- I-Transportes - Não será processado
  -- J Comunicações - Não será processado
  -- K-Mudança de Município - Não será processado
  -- L-Valor Adicionado por Município - Não será processado
  --
  -- N-Estoque - Não será processado
  -- P-Mapa Resumo - Estabelecimentos Relacionados - Não será processado
  -- Q-Mapa Resumo - Identificação do Documento - Não será processado
  -- R-Mapa Resumo - Movimento Mensal - Não será processado
  -- S-Mapa Resumo - Estoque - Não será processado
  -- T-Mapa Resumo - Liminares - Não será processado
  -- U-Mapa Resumo - Combustíveis Autorizados por Liminar - Não será processado
  -- O-Produtor Rural - Não será processado
  --
  vn_fase := 40;
  --
  -- D-Registro Final
  vt_tab_tp_regD(1).TpReg           := 'D';
  vt_tab_tp_regD(1).QtdeTotal       := 1;
  vt_tab_tp_regD(1).QtdeRegNormal   := 1;
  vt_tab_tp_regD(1).QtdeRegEstimat  := 0;
  vt_tab_tp_regD(1).QtdeProdutRural := 0;
  --
  vn_fase := 41;
  --
  -- procedimento monta a estrutura do arquivo da GIA - ES
  pkb_monta_estr_arq_gia_es;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_es fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_arq_gia_es;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-RS
------------------------------------------------
procedure pkb_gera_arq_gia_rs is
  --
  -- Variáveis do controle do vetor
  i pls_integer;
  j pls_integer;
  --
  -- Variáveis do processo
  vn_fase  number := 0;
  vb_achou boolean;
  --
  vd_mesref                   number;
  vn_cfop                     cfop.cd%type := 0;
  vn_vl_contabil              number(15, 2) := 0;
  vv_cod_st_icms              cod_st.cod_st%type := null;
  vn_vl_base_calc_icms        imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_icms                imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_icms         imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_base_calc_icmsst      imp_itemnf.vl_base_calc%type := 0;
  vn_vl_imp_trib_icmsst       imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_icms        imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_icms         imp_itemnf.vl_base_calc%type := 0;
  vv_cod_st_ipi               cod_st.cod_st%type := null;
  vn_vl_base_calc_ipi         imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_ipi                 imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_ipi          imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_ipi         imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_ipi          imp_itemnf.vl_base_calc%type := 0;
  vn_ipi_nao_recup            number;
  vn_outro_ipi                number;
  vn_vl_imp_nao_dest_ipi      number;
  vn_vl_fcp_icmsst            number;
  vn_aliq_fcp_icms            number;
  vn_vl_fcp_icms              number;
  vn_tot_vlimptrib_icmsst_ent number := 0;
  vn_tot_vlimptrib_icmsst_sai number := 0;
  --
  vn_vlr_fatur_mes   number(15, 2);
  vn_tipooperacao_cd tipo_operacao.cd%type := null;
  --
  vv_nome      pessoa.nome%type;
  vv_ddd       pessoa.fone%type;
  vv_fone      pessoa.fone%type;
  vn_pessoa_id pessoa.id%type;
  --
  vv_nro_func number := 0;
  --
  vn_Tot_lin_AnexoI    number := 0;
  vn_Tot_lin_AnexoIc   number := 0;
  vn_Tot_lin_AnexoII   number := 0;
  vn_Tot_lin_AnexoIII  number := 0;
  vn_Tot_lin_AnexoIV   number := 0;
  vn_Tot_lin_AnexoV    number := 0;
  vn_Tot_lin_AnexoVa   number := 0;
  vn_Tot_lin_AnexoVb   number := 0;
  vn_Tot_lin_AnexoVc   number := 0;
  vn_Tot_lin_AnexoVI   number := 0;
  vn_Tot_lin_AnexoVII  number := 0;
  vn_Tot_lin_AnexoVIIa number := 0;
  vn_Tot_lin_AnexoVIIb number := 0;
  vn_Tot_lin_AnexoVIIc number := 0;
  vn_Tot_lin_AnexoVIII number := 0;
  vn_Tot_lin_AnexoIX   number := 0;
  vn_Tot_lin_AnexoX    number := 0;
  vn_Tot_lin_AnexoXIV  number := 0;
  vn_Tot_lin_AnexoXV   number := 0;
  vn_Tot_lin_AnexoXVI  number := 0;
  --
  vn_cred_entr    number := 0;
  vn_deb_said     number := 0;
  vv_subst_trib   varchar2(1) := 'N';
  vn_pgto_mes_ref number := 0;
  vv_gera_obs     varchar2(1) := 'N';
  --
  -- Registro Principal - Quadros A, B, C e E
  type tp_princ is record(
    Tp                            varchar2(4),
    Versao                        varchar2(2),
    DtEntg                        varchar2(8),
    IndRet                        varchar(1),
    Diaini                        varchar2(2),
    Diafim                        varchar2(2),
    Referencia                    varchar2(6),
    InscEstad                     varchar2(10),
    Seq                           varchar2(4),
    IdReg                         varchar2(4),
    CredEntr                      number(15),
    CredImport                    number(15),
    CredTransf                    number(15),
    CredPresum                    number(15),
    CredComp                      number(15),
    OutroCredito                  number(15),
    TotCredito                    number(15),
    DebSaida                      number(15),
    DebImport                     number(15),
    DebRespComp                   number(15),
    DebTransf                     number(15),
    DebCompens                    number(15),
    OutroDebito                   number(15),
    TotDebito                     number(15),
    RealizTransST                 varchar2(1),
    SaldoCRTransPerAnt            number(15),
    SaldoDevAcumTranspPerAnt      number(15),
    PagtoMesRef                   number(15),
    DebVencMonOcor                number(15),
    IcmsSubstTribNaoComp          number(15),
    IcmsProp                      number(15),
    TotIcmsRecouTransp            number(15),
    CRnaoCompTranspMesSeg         number(15),
    SaldoCRSubstTribMesSeg        number(15),
    SaldoCredorTranspMesSeg       number(15),
    SaldoDevedorAcumTranspMesSeg  number(15),
    FaturMes                      number(15),
    NroEmpUltDia                  number(6),
    VlrFolhaPagtoMes              number(15),
    OperPrestOrgDestIntEntr       number(15),
    OperPrestOrgDestIntSaid       number(15),
    OperPrestOrgDestOutUfEntr     number(15),
    OperPrestOrgDestOutUfSaid     number(15),
    OperPrestOrgDestOutPaisEntr   number(15),
    OperPrestOrgDestOutPaisSaid   number(15),
    TotEntr                       number(15),
    TotSaida                      number(15),
    PgtoOcorrFatoGeradorIcmsProp  number(15),
    PgtoOcorrFatoGeradorST        number(15),
    TranspSaldoDvdIcmsPropProxMes varchar2(1),
    EstoqueInicialPropTrib        number(16),
    EstoqueInicialIsento          number(16),
    EstoqueInicialPertEst         number(16),
    EstoqueInicialPertTerc        number(16),
    EstoqueFinalPropTrib          number(16),
    EstoqueFinalPropNaoTrib       number(16),
    EstoqueFinalPertEst           number(16),
    EstoqueFinalPertTerc          number(16),
    TotLinhaAnexoI                number(3),
    TotLinhaAnexoIc               number(3),
    TotLinhaAnexoII               number(3),
    TotLinhaAnexoIII              number(3),
    TotLinhaAnexoIV               number(3),
    TotLinhaAnexoV                number(3),
    TotLinhaAnexoVa               number(3),
    TotLinhaAnexoVb               number(3),
    TotLinhaAnexoVc               number(3),
    TotLinhaAnexoVI               number(3),
    TotLinhaAnexoVII              number(3),
    TotLinhaAnexoVIIa             number(3),
    TotLinhaAnexoVIIb             number(3),
    TotLinhaAnexoVIII             number(3),
    TotLinhaAnexoIX               number(3),
    TotLinhaAnexoX                number(3),
    TotLinhaAnexoXIV              number(3),
    TotLinhaAnexoXV               number(3),
    TotLinhaAnexoXVI              number(3),
    IndicSistProp                 varchar2(1),
    IndicSintegra                 varchar2(1),
    IndicInicAtvd                 varchar2(1),
    IndicFimAtvd                  varchar2(1),
    FundoAmpara                   number(15),
    PgtoOcorFtGerICMSProprAmpara  number(15),
    PgtoOcorFtGerICMSSTribAmpara  number(15));
  --
  type t_tab_princ is table of tp_princ index by binary_integer;
  vt_tab_princ t_tab_princ;
  --
  -- Registro OBS
  type tp_obs is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    InscEstad  number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Obs        varchar2(80));
  --
  type t_tab_obs is table of tp_obs index by binary_integer;
  vt_tab_obs t_tab_obs;
  --
  -- Registro Contribuinte
  type tp_Contrib is record(
    Tp              varchar2(4),
    Versao          number(2),
    Diaini          number(2),
    Diafim          number(2),
    Referencia      number(6),
    IncsEst         number(10),
    Sequencia       number(4),
    IdReg           varchar2(4),
    CNPJ            number(14),
    RazSoc          varchar2(50),
    FoneDDD         number(3),
    FoneNro         number(9),
    SelecEntrgCompl varchar2(1),
    CodGia          varchar2(6));
  --
  type t_tab_contrib is table of tp_contrib index by binary_integer;
  vt_tab_contrib t_tab_contrib;
  --
  -- Registro Anexo I - Discriminacao das Entradas
  type tp_AnxI is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    VlrCtb     number(13),
    BaseCalc   number(13),
    Credito    number(13),
    Isentas    number(13),
    Outras     number(13),
    ImportExcl number(16));
  --
  type t_tab_AnxI is table of tp_AnxI index by binary_integer;
  type t_bi_tab_AnxI is table of t_tab_AnxI index by binary_integer;
  vt_bi_tab_AnxI t_bi_tab_AnxI;
  --
  -- Registro Anexo Ic - Importâncias Excluídas/Ajustes do VA - Detalhamento - A partir de 09/2014
  type tp_AnxIc is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    Codigo     number(3),
    Valor      number(13),
    BaseCalc   number(13),
    Espec      varchar2(60));
  --
  type t_tab_AnxIc is table of tp_AnxIc index by binary_integer;
  type t_bi_tab_AnxIc is table of t_tab_AnxIc index by binary_integer;
  vt_bi_tab_AnxIc t_bi_tab_AnxIc;
  --
  -- Registro Anexo II - Discriminacao dos Creditos Recebidos por Transferencias
  type tp_AnxII is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    CGCOrig    number(10),
    Codigo     number(3),
    VlrCred    number(13));
  --
  type t_AnxII is table of tp_AnxII index by binary_integer;
  vt_AnxII t_AnxII;
  --
  -- Registro Anexo III - Creditos Presumidos - Detalhamento
  type tp_AnxIII is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Codigo     number(3),
    VlrCred    number(13),
    ChpLic     number(12));
  --
  type t_AnxIII is table of tp_AnxIII index by binary_integer;
  vt_AnxIII t_AnxIII;
  --
  -- Registro IIIa - Creditos Fiscais - ECF - Detalhamento - Não tem no Compliance - Existia no layout até 08/2014
  --
  -- Registro IV - Creditos Por Compensacao Por Pagto Indevidos
  type tp_AnxIV is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    PerApur    number(10),
    Venc       number(8),
    VlrDev     number(13),
    VlrPag     number(13));
  --
  type t_AnxIV is table of tp_AnxIV index by binary_integer;
  vt_AnxIV t_AnxIV;
  --
  -- Registro V - Discriminacao das Saidas
  type tp_AnxV is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    VlrCont    number(13),
    BaseCalc   number(13),
    Debito     number(13),
    Isenta     number(13),
    Outras     number(13),
    ImportExcl number(16));
  --
  type t_tab_AnxV is table of tp_AnxV index by binary_integer;
  type t_bi_tab_AnxV is table of t_tab_AnxV index by binary_integer;
  vt_bi_tab_AnxV t_bi_tab_AnxV;
  --
  -- Registro V.a - Saidas Isentas ou Nao Tributadas - Detalhamento
  type tp_AnxVa is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    CodIsentas number(3),
    VlrSaida   number(13));
  --
  type t_tab_AnxVa is table of tp_AnxVa index by binary_integer;
  type t_bi_tab_AnxVa is table of t_tab_AnxVa index by binary_integer;
  vt_bi_tab_AnxVa t_bi_tab_AnxVa;
  --
  -- Registro V.b - Outras Saidas - Detalhamento
  type tp_AnxVb is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    CodOutras  number(3),
    VlrSaida   number(13));
  --
  type t_tab_AnxVb is table of tp_AnxVb index by binary_integer;
  type t_bi_tab_AnxVb is table of t_tab_AnxVb index by binary_integer;
  vt_bi_tab_AnxVb t_bi_tab_AnxVb;
  --
  -- Registro V.c - Importâncias Excluídas/Ajustes do VA - Detalhamento - A partir de 09/2014
  type tp_AnxVc is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    Codigo     number(3),
    Valor      number(13),
    Espec      varchar2(60));
  --
  type t_tab_AnxVc is table of tp_AnxVc index by binary_integer;
  type t_bi_tab_AnxVc is table of t_tab_AnxVc index by binary_integer;
  vt_bi_tab_AnxVc t_bi_tab_AnxVc;
  --
  -- Registro VI - Discriminacao dos Creditos Transferidos
  type tp_AnxVI is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    CodOutras  number(3),
    VlrSaida   number(13));
  --
  type t_AnxVI is table of tp_AnxVI index by binary_integer;
  vt_AnxVI t_AnxVI;
  --
  -- Registro VII - Outras Saidas - Detalhamento
  type tp_AnxVII is record(
    Tp          varchar2(4),
    Versao      number(2),
    Diaini      number(2),
    Diafim      number(2),
    Referencia  number(6),
    IncsEst     number(10),
    Sequencia   number(4),
    IdReg       varchar2(4),
    QtdOcor     number(2),
    CrEntrST    number(13),
    OutrosCred  number(13),
    TextoCred   varchar2(60),
    TotCred     number(13),
    DbSaidaST   number(13),
    OutroDeb    number(13),
    TextoOutDeb varchar(60),
    TotDebito   number(13));
  --
  type t_AnxVII is table of tp_AnxVII index by binary_integer;
  vt_AnxVII t_AnxVII;
  --
  -- Registro VII.a - Discriminacao das Operacoes De Entrada com Substituicao Tributaria
  type tp_AnxVIIa is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    BaseCalc   number(13),
    Credito    number(13));
  --
  type t_tab_AnxVIIa is table of tp_AnxVIIa index by binary_integer;
  type t_bi_tab_AnxVIIa is table of t_tab_AnxVIIa index by binary_integer;
  vt_bi_tab_AnxVIIa t_bi_tab_AnxVIIa;
  --
  -- Registro VII.b - Discriminacao das Operacoes De Saida com Substituicao Tributaria
  type tp_AnxVIIb is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    QtdOcor    number(2),
    Cfop       number(4),
    BaseCalc   number(13),
    Debito     number(13));
  --
  type t_tab_AnxVIIb is table of tp_AnxVIIb index by binary_integer;
  type t_bi_tab_AnxVIIb is table of t_tab_AnxVIIb index by binary_integer;
  vt_bi_tab_AnxVIIb t_bi_tab_AnxVIIb;
  --
  -- Registro VIII - Pagamento de ICMS Efetuados no Mes de Referencia
  type tp_AnxVIII is record(
    Tp              varchar2(4),
    Versao          number(2),
    Diaini          number(2),
    Diafim          number(2),
    Referencia      number(6),
    IncsEst         number(10),
    Sequencia       number(4),
    IdReg           varchar2(4),
    QtdOcor         number(2),
    PerOper         number(4),
    Venc            number(8),
    IcmsProp        number(13),
    IcmsST          number(13),
    CGCCentr        number(10),
    ICMSProprAmpara number(13),
    ICMSSTribAmpara number(13));
  --
  type t_AnxVIII is table of tp_AnxVIII index by binary_integer;
  vt_AnxVIII t_AnxVIII;
  --
  -- Registro IX - Discriminacao dos Debitos Vencidos na Ocorrencia do Fato Gerador e Não Pagos
  type tp_AnxIX is record(
    Tp              varchar2(4),
    Versao          number(2),
    Diaini          number(2),
    Diafim          number(2),
    Referencia      number(6),
    IncsEst         number(10),
    Sequencia       number(4),
    IdReg           varchar2(4),
    QtdOcor         number(2),
    DiaVenc         number(2),
    IcmsProp        number(13),
    IcmsST          number(13),
    CGCCentr        number(10),
    ICMSProprAmpara number(13),
    ICMSSTribAmpara number(13));
  --
  type t_AnxIX is table of tp_AnxIX index by binary_integer;
  vt_AnxIX t_AnxIX;
  --
  -- Registro X - Discriminacao ICMS a Recolher, inclusive Saldo Devedor Acumulado
  type tp_AnxX is record(
    Tp              varchar2(4),
    Versao          number(2),
    Diaini          number(2),
    Diafim          number(2),
    Referencia      number(6),
    IncsEst         number(10),
    Sequencia       number(4),
    IdReg           varchar2(4),
    QtdOcor         number(2),
    PerApurDia      number(4),
    Venc            number(8),
    IcmsProp        number(13),
    IcmsST          number(13),
    CGCCentr        number(10),
    ICMSProprAmpara number(13),
    ICMSSTribAmpara number(13));
  --
  type t_AnxX is table of tp_AnxX index by binary_integer;
  vt_AnxX t_AnxX;
  --
  -- Registro XIV - Outros Creditos - Detalhamento
  type tp_AnxXIV is record(
    Tp            varchar2(4),
    Versao        number(2),
    Diaini        number(2),
    Diafim        number(2),
    Referencia    number(6),
    IncsEst       number(10),
    Sequencia     number(4),
    IdReg         varchar2(4),
    QtdOcor       number(2),
    Codigo        number(3),
    VlrCred       number(13),
    Especificacao varchar2(60));
  --
  type t_AnxXIV is table of tp_AnxXIV index by binary_integer;
  vt_AnxXIV t_AnxXIV;
  --
  -- Registro XV - Outros Debitos - Detalhamento
  type tp_AnxXV is record(
    Tp            varchar2(4),
    Versao        number(2),
    Diaini        number(2),
    Diafim        number(2),
    Referencia    number(6),
    IncsEst       number(10),
    Sequencia     number(4),
    IdReg         varchar2(4),
    QtdOcor       number(2),
    Codigo        number(3),
    VlrCred       number(13),
    Especificacao varchar2(60));
  --
  type t_AnxXV is table of tp_AnxXV index by binary_integer;
  vt_AnxXV t_AnxXV;
  --
  -- Registro XVI - Outros Debitos - Detalhamento
  type tp_AnxXVI is record(
    Tp         varchar2(4),
    Versao     number(2),
    Diaini     number(2),
    Diafim     number(2),
    Referencia number(6),
    IncsEst    number(10),
    Sequencia  number(4),
    IdReg      varchar2(4),
    CodNatuz   number(2),
    AtoDeclar  number(8),
    VlrCred    number(13),
    Custos     number(16),
    QtdOcor    number(2),
    CodMunin   number(3),
    VlrServ    number(16));
  --
  type t_AnxXVI is table of tp_AnxXVI index by binary_integer;
  vt_AnxXVI t_AnxXVI;
  --
  cursor c_det_cfop is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper, -- 0-Entrada, 1-Saída
           nf.dm_ind_emit,  -- 0-Emissão Própria, 1-Terceiros
           cod_mod,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           inf.id         itemnf_id,
           inf.cfop_id
      from nota_fiscal nf, 
           mod_fiscal mf, 
           item_nota_fiscal inf
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or 
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65')
       and inf.notafiscal_id  = nf.id
     order by 1, 2;
  --
  cursor c_apur_icms is
    select obr.dt_vencto_obrig, 
           sum(obr.vl_orig_rec) vl_icms_recolher
      from apuracao_icms ai, 
           obrig_rec_apur_icms obr
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and to_date(ai.dt_inicio, 'dd/mm/rrrr') >= gt_row_abertura_gia.dt_ini
       and to_date(ai.dt_fim, 'dd/mm/rrrr')    <= gt_row_abertura_gia.dt_fin
       and obr.apuracaoicms_id  = ai.id
     group by obr.dt_vencto_obrig;
  --
  cursor c_apur_icmsst is
    select obr.dt_vencto_obrig, 
           sum(obr.vl_orig_rec) vl_icms_recol_st
      from per_apur_icms_st       p,
           apuracao_icms_st       ai,
           obrig_rec_apur_icms_st obr
     where p.empresa_id          = gt_row_abertura_gia.empresa_id
       and to_date(p.dt_inicio, 'dd/mm/rrrr') >= gt_row_abertura_gia.dt_ini
       and to_date(p.dt_fim, 'dd/mm/rrrr')    <= gt_row_abertura_gia.dt_fin
       and p.dm_tipo             = 0 -- Real
       and ai.perapuricmsst_id   = p.id
       and ai.dm_situacao        = 3 -- Processada
       and obr.apuracaoicmsst_id = ai.id
     group by obr.dt_vencto_obrig;
  --
  cursor c_det_cfop_ct is
    select ct.id            conhectransp_id,
           ct.dm_ind_oper,
           ct.pessoa_id,
           ct.dt_hr_emissao dt_emiss,
           ct.nro_ct,
           ct.serie         serie_ct,
           ct.subserie      subserie_ct,
           r.id             ctreganal_id,
           r.cfop_id
      from conhec_transp ct, 
           ct_reg_anal r
     where ct.empresa_id      = gt_row_abertura_gia.empresa_id
       and ct.dm_st_proc      = 4 -- Autorizada
       and ((ct.dm_ind_emit = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and ct.dm_arm_cte_terc = 0
       and r.conhectransp_id  = ct.id
     order by 1;
  --
  cursor c_det_cfop_sc is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           r.id           nfregistanalit_id,
           r.cfop_id
      from nota_fiscal nf, 
           mod_fiscal mf, 
           nfregist_analit r
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and  to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('06', '29', '28', '21', '22')
       and r.notafiscal_id    = nf.id
     order by 1;
  --
  -- Cupom Fiscal -- Sempre saída
  cursor c_det_cfop_ecf is
    select r.id         reducaozecf_id,
           r.dt_doc     dt_emiss,
           ramd.id      reganalmovdiaecf_id,
           ramd.cfop_id
      from equip_ecf e, 
           reducao_z_ecf r, 
           reg_anal_mov_dia_ecf ramd
     where e.empresa_id        = gt_row_abertura_gia.empresa_id
       and r.equipecf_id       = e.id
       and r.dm_st_proc        = 1 -- Validada
       and to_date(r.dt_doc, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and ramd.reducaozecf_id = r.id
     order by 1;
  --
  procedure pkb_limpa_vetor_rs is
    --
  begin
    --
    vt_tab_princ.delete;
    vt_tab_obs.delete;
    vt_tab_contrib.delete;
    vt_bi_tab_AnxI.delete;
    vt_bi_tab_AnxIc.delete;
    vt_AnxII.delete;
    vt_AnxIII.delete;
    vt_AnxIV.delete;
    vt_AnxIV.delete;
    vt_bi_tab_AnxV.delete;
    vt_bi_tab_AnxVa.delete;
    vt_bi_tab_AnxVb.delete;
    vt_bi_tab_AnxVc.delete;
    vt_AnxVI.delete;
    vt_AnxVII.delete;
    vt_bi_tab_AnxVIIa.delete;
    vt_bi_tab_AnxVIIb.delete;
    vt_AnxVIII.delete;
    vt_AnxIX.delete;
    vt_AnxX.delete;
    vt_AnxXIV.delete;
    vt_AnxXV.delete;
    vt_AnxXVI.delete;
    --
  end pkb_limpa_vetor_rs;
  --
  -- Procedimento monta a estrutura do arquivo da GIA-RS
  procedure pkb_monta_estr_arq_gia_rs is
    --
    vn_fase_arq   number := 0;
    vn_lin_seq    number := 0;
    vn_qtdocor    number := 0;
    vn_tam_obs    number := 0;
    vn_qtde_AnxI  number := 0;
    vn_qtde_AnxIc number := 0;
    vn_qtde_AnxV  number := 0;
    vn_qtde_AnxVa number := 0;
    vn_qtde_AnxVb number := 0;
    vn_qtde_AnxVc number := 0;
    --
  begin
    --
    vn_fase_arq := 1;
    --
    -- Registro Principal A, B, C e E
    if nvl(vt_tab_princ.count, 0) > 0 then
      --
      vn_fase_arq := 1.1;
      --
      i := nvl(vt_tab_princ.first, 0);
      --
      loop
        --
        vn_fase_arq := 1.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 1.3;
        --
        vn_lin_seq := nvl(vn_lin_seq, 0) + 1;
        --
        gl_conteudo := rpad(vt_tab_princ(i).Tp, 4, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).Versao, 2, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).DtEntg, 8, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_princ(i).IndRet, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).Diaini, 2, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).Diafim, 2, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).Referencia, 6, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).InscEstad, 10, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_princ(i).IdReg, 4, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).CredEntr, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).CredImport, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).CredTransf, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).CredPresum, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).CredComp, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OutroCredito, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotCredito, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).DebSaida, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).DebImport, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).DebRespComp, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).DebTransf, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).DebCompens, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OutroDebito, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotDebito, 15, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_princ(i).RealizTransST, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).SaldoCRTransPerAnt, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).SaldoDevAcumTranspPerAnt, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).PagtoMesRef, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).DebVencMonOcor, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).IcmsSubstTribNaoComp, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).IcmsProp, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotIcmsRecouTransp, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).CRnaoCompTranspMesSeg, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).SaldoCRSubstTribMesSeg, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).SaldoCredorTranspMesSeg, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).SaldoDevedorAcumTranspMesSeg, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).FaturMes, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).NroEmpUltDia, 6, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).VlrFolhaPagtoMes, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OperPrestOrgDestIntEntr, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OperPrestOrgDestIntSaid, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OperPrestOrgDestOutUfEntr, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OperPrestOrgDestOutUfSaid, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OperPrestOrgDestOutPaisEntr, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).OperPrestOrgDestOutPaisSaid, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotEntr, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotSaida, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).PgtoOcorrFatoGeradorIcmsProp, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).PgtoOcorrFatoGeradorST, 15, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_princ(i).TranspSaldoDvdIcmsPropProxMes, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueInicialPropTrib, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueInicialIsento, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueInicialPertEst, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueInicialPertTerc, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueFinalPropTrib, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueFinalPropNaoTrib, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueFinalPertEst, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).EstoqueFinalPertTerc, 16, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoI, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoIc, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoII, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoIII, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoIV, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoV, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVa, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVb, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVc, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVI, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVII, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVIIa, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVIIb, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoVIII, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoIX, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoX, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoXIV, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoXV, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).TotLinhaAnexoXVI, 3, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).IndicSistProp, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).IndicSintegra, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).IndicInicAtvd, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).IndicFimAtvd, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).FundoAmpara, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).PgtoOcorFtGerICMSProprAmpara, 15, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_princ(i).PgtoOcorFtGerICMSSTribAmpara, 15, 0);
        --
        vn_fase_arq := 1.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '1',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 1.5;
        --
        if i = vt_tab_princ.last then
          exit;
        else
          i := vt_tab_princ.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 2;
    --
    -- Registro Observação
    if nvl(vt_tab_obs.count, 0) > 0 then
      --
      vn_fase_arq := 2.1;
      --
      i := nvl(vt_tab_obs.first, 0);
      --
      vn_fase_arq := 2.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        vn_fase_arq := 2.3;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 2.4;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 2.5;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_tab_obs(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_tab_obs(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_tab_obs(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_tab_obs(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_tab_obs(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_tab_obs(i).InscEstad, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_tab_obs(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          vn_tam_obs := 0;
          --
          g2_conteudo := rpad(substr(vt_tab_obs(i).Obs, 1, vn_tam_obs + 80), 80, ' ');
          --
        else
          -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 2.6;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || rpad(substr(vt_tab_obs(i).Obs, vn_tam_obs + 1, vn_tam_obs + 80), 80, ' ');
          --
          vn_tam_obs := vn_tam_obs + 80;
          --
        end if;
        --
        vn_fase_arq := 2.7;
        --
        if nvl(vn_qtdocor, 0) = 50 then -- máximo 50
          --
          vn_fase_arq := 2.8;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '2',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 2.9;
        --
        if i = vt_tab_obs.last then
          --
          vn_fase_arq := 2.10;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 50 then -- anterior a esse teste o registro já foi gravado
            --
            vn_fase_arq := 2.11;
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '2',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_tab_obs.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 3;
    --
    -- Registro Contribuinte
    if nvl(vt_tab_contrib.count, 0) > 0 then
      --
      vn_fase_arq := 3.1;
      --
      i := nvl(vt_tab_contrib.first, 0);
      --
      loop
        --
        vn_fase_arq := 3.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 3.3;
        --
        vn_lin_seq := nvl(vn_lin_seq, 0) + 1;
        --
        gl_conteudo := rpad(vt_tab_contrib(i).Tp, 4, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_contrib(i).Versao, 2, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_contrib(i).Diaini, 2, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_contrib(i).Diafim, 2, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_contrib(i).Referencia, 6, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_contrib(i).IncsEst, 10, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_contrib(i).IdReg, 4, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_contrib(i).CNPJ, 14, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_contrib(i).RazSoc, ' '), 50, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_contrib(i).FoneDDD, 0), 3, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_contrib(i).FoneNro, 0), 9, 0);
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_contrib(i).SelecEntrgCompl, ' '), 1, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_contrib(i).CodGia, ' '), 6, '0');
        --
        vn_fase_arq := 3.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '3',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 3.5;
        --
        if i = vt_tab_contrib.last then
          exit;
        else
          i := vt_tab_contrib.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 4;
    --
    -- Registro Anexo I - Discriminacao das Entradas
    if nvl(vt_bi_tab_AnxI.count, 0) > 0 then
      --
      vn_fase_arq := 4.1;
      --
      i := nvl(vt_bi_tab_AnxI.first, 0);
      --
      loop
        --
        vn_fase_arq := 4.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 4.3;
        --
        begin
          vn_qtde_AnxI := vt_bi_tab_AnxI(i).count;
        exception
          when others then
            vn_qtde_AnxI := 0;
        end;
        --
        vn_fase_arq := 4.4;
        --
        if nvl(vn_qtde_AnxI, 0) > 0 then
          --
          vn_fase_arq := 4.5;
          --
          j := vt_bi_tab_AnxI(i).first;
          --
          vn_fase_arq := 4.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 4.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 4.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxI(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxI(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxI(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxI(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).VlrCtb, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Credito, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Isentas, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Outras, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).ImportExcl, 16, 0);
              --
            else -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 4.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).VlrCtb, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Credito, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Isentas, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).Outras, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxI(i)(j).ImportExcl, 16, 0);
              --
            end if;
            --
            vn_fase_arq := 4.10;
            --
            if nvl(vn_qtdocor, 0) = 10 then -- máximo 10
              --
              vn_fase_arq := 4.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'I',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 4.12;
            --
            if j = vt_bi_tab_AnxI(i).last then
              --
              vn_fase_arq := 4.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'I',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxI(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 4.14;
        --
        if i = vt_bi_tab_AnxI.last then
          exit;
        else
          i := vt_bi_tab_AnxI.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 5;
    --
    -- Registro Anexo Ic - Importâncias Excluídas/Ajustes do VA - Detalhamento
    if nvl(vt_bi_tab_AnxIc.count, 0) > 0 then
      --
      vn_fase_arq := 5.1;
      --
      i := nvl(vt_bi_tab_AnxIc.first, 0);
      --
      loop
        --
        vn_fase_arq := 5.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 5.3;
        --
        begin
          vn_qtde_AnxIc := vt_bi_tab_AnxIc(i).count;
        exception
          when others then
            vn_qtde_AnxIc := 0;
        end;
        --
        vn_fase_arq := 5.4;
        --
        if nvl(vn_qtde_AnxIc, 0) > 0 then
          --
          vn_fase_arq := 5.5;
          --
          j := vt_bi_tab_AnxIc(i).first;
          --
          vn_fase_arq := 5.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 5.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 5.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxIc(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxIc(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxIc(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Codigo, 3, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Valor, 13, 0);
              g2_conteudo := g2_conteudo || rpad(vt_bi_tab_AnxIc(i)(j).Espec, 60, 0);
              --
            else
              -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 5.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Codigo, 3, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxIc(i)(j).Valor, 13, 0);
              g2_conteudo := g2_conteudo || rpad(vt_bi_tab_AnxIc(i)(j).Espec, 60, 0);
              --
            end if;
            --
            vn_fase_arq := 5.10;
            --
            if nvl(vn_qtdocor, 0) = 10 then -- máximo 10
              --
              vn_fase_arq := 5.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'I.c',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 5.12;
            --
            if j = vt_bi_tab_AnxIc(i).last then
              --
              vn_fase_arq := 5.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'I.c',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxIc(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 5.14;
        --
        if i = vt_bi_tab_AnxIc.last then
          exit;
        else
          i := vt_bi_tab_AnxIc.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 6;
    --
    -- Registro Anexo II - Discriminacao dos Creditos Recebidos por Transferencias
    if nvl(vt_AnxII.count, 0) > 0 then
      --
      vn_fase_arq := 6.1;
      --
      i := nvl(vt_AnxII.first, 0);
      --
      vn_fase_arq := 6.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 6.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 6.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxII(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxII(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxII(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxII(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxII(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxII(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxII(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxII(i).CGCOrig, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxII(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxII(i).VlrCred, 13, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 6.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxII(i).CGCOrig, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxII(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxII(i).VlrCred, 13, 0);
          --
        end if;
        --
        vn_fase_arq := 6.6;
        --
        if nvl(vn_qtdocor, 0) = 32 then -- máximo 32
          --
          vn_fase_arq := 6.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'II',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 6.8;
        --
        if i = vt_AnxII.last then
          --
          vn_fase_arq := 6.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 32 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'II',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxII.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 7;
    --
    -- Registro Anexo III - Creditos Presumidos - Detalhamento
    if nvl(vt_AnxIII.count, 0) > 0 then
      --
      vn_fase_arq := 7.1;
      --
      i := nvl(vt_AnxIII.first, 0);
      --
      vn_fase_arq := 7.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 7.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 7.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxIII(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxIII(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIII(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIII(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIII(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIII(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxIII(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxIII(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIII(i).VlrCred, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIII(i).ChpLic, 12, 0);
          --
        else
          -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 7.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxIII(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIII(i).VlrCred, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIII(i).ChpLic, 12, 0);
          --
        end if;
        --
        vn_fase_arq := 7.6;
        --
        if (vd_mesref <= 201408 and nvl(vn_qtdocor, 0) = 53) or -- máximo 53 até 08/2014
           (vd_mesref >= 201409 and nvl(vn_qtdocor, 0) = 30) then -- máximo 30 a partir de 09/2014
          --
          vn_fase_arq := 7.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'III',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 7.8;
        --
        if i = vt_AnxIII.last then
          --
          vn_fase_arq := 7.9;
          --
          if (vd_mesref <= 201408 and nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 53) or -- anterior a esse teste o registro já foi gravado
             (vd_mesref >= 201409 and nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 30) then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'III',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxIII.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    -- Registro III.a - Creditos Fiscais - ECF - Detalhamento - Não tem no Compliance - Existia no Compliance até 08/2014
    --
    vn_fase_arq := 8;
    --
    -- Registro IV - Creditos Por Compensacao Por Pagto Indevidos
    if nvl(vt_AnxIV.count, 0) > 0 then
      --
      vn_fase_arq := 8.1;
      --
      i := nvl(vt_AnxIV.first, 0);
      --
      vn_fase_arq := 8.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 8.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 8.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxIV(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxIV(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIV(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIV(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIV(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIV(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxIV(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxIV(i).PerApur, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIV(i).Venc, 8, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIV(i).VlrDev, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIV(i).VlrPag, 13, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 8.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxIV(i).PerApur, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIV(i).Venc, 8, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIV(i).VlrDev, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIV(i).VlrPag, 13, 0);
          --
        end if;
        --
        vn_fase_arq := 8.6;
        --
        if nvl(vn_qtdocor, 0) = 19 then -- máximo 19
          --
          vn_fase_arq := 8.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'IV',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 8.8;
        --
        if i = vt_AnxIV.last then
          --
          vn_fase_arq := 8.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 19 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'IV',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxIV.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 9;
    --
    -- Registro V - Discriminacao das Saidas
    if nvl(vt_bi_tab_AnxV.count, 0) > 0 then
      --
      vn_fase_arq := 9.1;
      --
      i := nvl(vt_bi_tab_AnxV.first, 0);
      --
      loop
        --
        vn_fase_arq := 9.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 9.3;
        --
        begin
          vn_qtde_AnxV := vt_bi_tab_AnxV(i).count;
        exception
          when others then
            vn_qtde_AnxV := 0;
        end;
        --
        vn_fase_arq := 9.4;
        --
        if nvl(vn_qtde_AnxV, 0) > 0 then
          --
          vn_fase_arq := 9.5;
          --
          j := vt_bi_tab_AnxV(i).first;
          --
          vn_fase_arq := 9.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 9.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 9.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxV(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxV(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxV(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxV(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).VlrCont, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Debito, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Isenta, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Outras, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).ImportExcl, 16, 0);
              --
            else -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 9.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).VlrCont, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Debito, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Isenta, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).Outras, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxV(i)(j).ImportExcl, 16, 0);
              --
            end if;
            --
            vn_fase_arq := 9.10;
            --
            if nvl(vn_qtdocor, 0) = 10 then -- máximo 10
              --
              vn_fase_arq := 9.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'V',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 9.12;
            --
            if j = vt_bi_tab_AnxV(i).last then
              --
              vn_fase_arq := 9.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'V',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxV(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 9.14;
        --
        if i = vt_bi_tab_AnxV.last then
          exit;
        else
          i := vt_bi_tab_AnxV.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 10;
    --
    -- Registro V.a - Saidas Isentas ou Nao Tributadas - Detalhamento
    if nvl(vt_bi_tab_AnxVa.count, 0) > 0 then
      --
      vn_fase_arq := 10.1;
      --
      i := nvl(vt_bi_tab_AnxVa.first, 0);
      --
      loop
        --
        vn_fase_arq := 10.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 10.3;
        --
        begin
          vn_qtde_AnxVa := vt_bi_tab_AnxVa(i).count;
        exception
          when others then
            vn_qtde_AnxVa := 0;
        end;
        --
        vn_fase_arq := 10.4;
        --
        if nvl(vn_qtde_AnxVa, 0) > 0 then
          --
          vn_fase_arq := 10.5;
          --
          j := vt_bi_tab_AnxVa(i).first;
          --
          vn_fase_arq := 10.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 10.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 10.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxVa(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxVa(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxVa(i)(j).Cfop, 4, 0);
              --
              if vt_bi_tab_AnxVa(i)(j).CodIsentas is null then
                g2_conteudo := g2_conteudo || lpad(' ', 3, ' ');
              else
                g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).CodIsentas, 3, 0);
              end if;
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).VlrSaida, 13, 0);
              --
            else
              -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 10.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).Cfop, 4, 0);
              --
              if vt_bi_tab_AnxVa(i)(j).CodIsentas is null then
                g2_conteudo := g2_conteudo || lpad(' ', 3, ' ');
              else
                g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).CodIsentas, 3, 0);
              end if;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVa(i)(j).VlrSaida, 13, 0);
              --
            end if;
            --
            vn_fase_arq := 10.10;
            --
            if nvl(vn_qtdocor, 0) = 42 then -- máximo 42
              --
              vn_fase_arq := 10.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'V.a',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 10.12;
            --
            if j = vt_bi_tab_AnxVa(i).last then
              --
              vn_fase_arq := 10.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 42 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'V.a',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxVa(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 10.14;
        --
        if i = vt_bi_tab_AnxVa.last then
          exit;
        else
          i := vt_bi_tab_AnxVa.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 11;
    --
    -- Registro V.b - Outras Saidas - Detalhamento
    if nvl(vt_bi_tab_AnxVb.count, 0) > 0 then
      --
      vn_fase_arq := 11.1;
      --
      i := nvl(vt_bi_tab_AnxVb.first, 0);
      --
      loop
        --
        vn_fase_arq := 11.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 11.3;
        --
        begin
          vn_qtde_AnxVb := vt_bi_tab_AnxVb(i).count;
        exception
          when others then
            vn_qtde_AnxVb := 0;
        end;
        --
        vn_fase_arq := 11.4;
        --
        if nvl(vn_qtde_AnxVb, 0) > 0 then
          --
          vn_fase_arq := 11.5;
          --
          j := vt_bi_tab_AnxVb(i).first;
          --
          vn_fase_arq := 11.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 11.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 11.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxVb(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxVb(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxVb(i)(j).Cfop, 4, 0);
              --
              if vt_bi_tab_AnxVb(i)(j).CodOutras is null then
                g2_conteudo := g2_conteudo || lpad(' ', 3, ' ');
              else
                g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).CodOutras, 3, 0);
              end if;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).VlrSaida, 13, 0);
              --
            else
              -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 11.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).Cfop, 4, 0);
              --
              if vt_bi_tab_AnxVb(i)(j).CodOutras is null then
                g2_conteudo := g2_conteudo || lpad(' ', 3, ' ');
              else
                g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).CodOutras, 3, 0);
              end if;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVb(i)(j).VlrSaida, 13, 0);
              --
            end if;
            --
            vn_fase_arq := 11.10;
            --
            if nvl(vn_qtdocor, 0) = 42 then -- máximo 42
              --
              vn_fase_arq := 11.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'V.b',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 11.12;
            --
            if j = vt_bi_tab_AnxVb(i).last then
              --
              vn_fase_arq := 11.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 42 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'V.b',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxVb(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 11.14;
        --
        if i = vt_bi_tab_AnxVb.last then
          exit;
        else
          i := vt_bi_tab_AnxVb.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 12;
    --
    -- Registro V.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
    if nvl(vt_bi_tab_AnxVc.count, 0) > 0 then
      --
      vn_fase_arq := 5.1;
      --
      i := nvl(vt_bi_tab_AnxVc.first, 0);
      --
      loop
        --
        vn_fase_arq := 5.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 5.3;
        --
        begin
          vn_qtde_AnxIc := vt_bi_tab_AnxVc(i).count;
        exception
          when others then
            vn_qtde_AnxIc := 0;
        end;
        --
        vn_fase_arq := 5.4;
        --
        if nvl(vn_qtde_AnxIc, 0) > 0 then
          --
          vn_fase_arq := 5.5;
          --
          j := vt_bi_tab_AnxVc(i).first;
          --
          vn_fase_arq := 5.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 5.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 5.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxVc(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxVc(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxVc(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Codigo, 3, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Valor, 13, 0);
              g2_conteudo := g2_conteudo || rpad(vt_bi_tab_AnxVc(i)(j).Espec, 60, 0);
              --
            else
              -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 5.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Codigo, 3, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVc(i)(j).Valor, 13, 0);
              g2_conteudo := g2_conteudo || rpad(vt_bi_tab_AnxVc(i)(j).Espec, 60, 0);
              --
            end if;
            --
            vn_fase_arq := 5.10;
            --
            if nvl(vn_qtdocor, 0) = 10 then -- máximo 10
              --
              vn_fase_arq := 5.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'V.c',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 5.12;
            --
            if j = vt_bi_tab_AnxVc(i).last then
              --
              vn_fase_arq := 5.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'V.c',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxVc(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 5.14;
        --
        if i = vt_bi_tab_AnxVc.last then
          exit;
        else
          i := vt_bi_tab_AnxVc.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    -- Registro VI - Discriminacao dos Creditos Transferidos - nao tem
    --
    vn_fase_arq := 13;
    --
    -- Registro VII - Outras Saidas - Detalhamento
    if nvl(vt_AnxVII.count, 0) > 0 then
      --
      vn_fase_arq := 13.1;
      --
      i := nvl(vt_AnxVII.first, 0);
      --
      vn_fase_arq := 13.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 13.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 13.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxVII(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxVII(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVII(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVII(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVII(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVII(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxVII(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxVII(i).CrEntrST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).OutrosCred, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxVII(i).TextoCred, 60, ' ');
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).TotCred, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).DbSaidaST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).OutroDeb, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxVII(i).TextoOutDeb, 60, ' ');
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).TotDebito, 13, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 13.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).CrEntrST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).OutrosCred, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxVII(i).TextoCred, 60, ' ');
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).TotCred, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).DbSaidaST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).OutroDeb, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxVII(i).TextoOutDeb, 60, ' ');
          g2_conteudo := g2_conteudo || lpad(vt_AnxVII(i).TotDebito, 13, 0);
          --
        end if;
        --
        vn_fase_arq := 13.6;
        --
        if nvl(vn_qtdocor, 0) = 1 then -- máximo 1
          --
          vn_fase_arq := 13.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'VII',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 13.8;
        --
        if i = vt_AnxVII.last then
          --
          vn_fase_arq := 13.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 1 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'VII',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxVII.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 14;
    --
    -- Registro VII.a - Discriminacao das Operacoes De Entrada com Substituicao Tributaria
    if nvl(vt_bi_tab_AnxVIIa.count, 0) > 0 then
      --
      vn_fase_arq := 14.1;
      --
      i := nvl(vt_bi_tab_AnxVIIa.first, 0);
      --
      loop
        --
        vn_fase_arq := 14.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 14.3;
        --
        begin
          vn_qtde_AnxVa := vt_bi_tab_AnxVIIa(i).count;
        exception
          when others then
            vn_qtde_AnxVa := 0;
        end;
        --
        vn_fase_arq := 14.4;
        --
        if nvl(vn_qtde_AnxVa, 0) > 0 then
          --
          vn_fase_arq := 14.5;
          --
          j := vt_bi_tab_AnxVIIa(i).first;
          --
          vn_fase_arq := 14.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 14.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 14.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxVIIa(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxVIIa(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxVIIa(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).Credito, 13, 0);
              --
            else -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 14.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIa(i)(j).Credito, 13, 0);
              --
            end if;
            --
            vn_fase_arq := 14.10;
            --
            if nvl(vn_qtdocor, 0) = 28 then -- máximo 28
              --
              vn_fase_arq := 14.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'VII.a',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 14.12;
            --
            if j = vt_bi_tab_AnxVIIa(i).last then
              --
              vn_fase_arq := 14.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'VII.a',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxVIIa(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 14.14;
        --
        if i = vt_bi_tab_AnxVIIa.last then
          exit;
        else
          i := vt_bi_tab_AnxVIIa.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 15;
    --
    -- Registro VII.b - Discriminacao das Operacoes De Saida com Substituicao Tributaria
    if nvl(vt_bi_tab_AnxVIIb.count, 0) > 0 then
      --
      vn_fase_arq := 15.1;
      --
      i := nvl(vt_bi_tab_AnxVIIb.first, 0);
      --
      loop
        --
        vn_fase_arq := 15.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 15.3;
        --
        begin
          vn_qtde_AnxVb := vt_bi_tab_AnxVIIb(i).count;
        exception
          when others then
            vn_qtde_AnxVb := 0;
        end;
        --
        vn_fase_arq := 15.4;
        --
        if nvl(vn_qtde_AnxVb, 0) > 0 then
          --
          vn_fase_arq := 15.5;
          --
          j := vt_bi_tab_AnxVIIb(i).first;
          --
          vn_fase_arq := 15.6;
          vn_qtdocor  := 0;
          g2_conteudo := null;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 15.7;
            --
            if nvl(vn_qtdocor, 0) = 0 then
              --
              vn_fase_arq := 15.8;
              vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
              --
              gl_conteudo := rpad(vt_bi_tab_AnxVIIb(i)(j).Tp, 4, ' ');
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).Versao, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).Diaini, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).Diafim, 2, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).Referencia, 6, 0);
              gl_conteudo := gl_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).IncsEst, 10, 0);
              gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
              gl_conteudo := gl_conteudo || rpad(vt_bi_tab_AnxVIIb(i)(j).IdReg, 4, ' ');
              --
              vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := lpad(vt_bi_tab_AnxVIIb(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).Debito, 13, 0);
              --
            else -- nvl(vn_qtdocor,0) > 0
              --
              vn_fase_arq := 15.9;
              vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
              --
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).Cfop, 4, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).BaseCalc, 13, 0);
              g2_conteudo := g2_conteudo || lpad(vt_bi_tab_AnxVIIb(i)(j).Debito, 13, 0);
              --
            end if;
            --
            vn_fase_arq := 15.10;
            --
            if nvl(vn_qtdocor, 0) = 28 then -- máximo 28
              --
              vn_fase_arq := 15.11;
              gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
              gl_conteudo := gl_conteudo || g2_conteudo;
              --
              pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                     ev_registrogia_cd => 'VII.b',
                                     el_conteudo       => gl_conteudo);
              --
              vn_qtdocor := 0;
              --
            end if;
            --
            vn_fase_arq := 15.12;
            --
            if j = vt_bi_tab_AnxVIIb(i).last then
              --
              vn_fase_arq := 15.13;
              --
              if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 28 then -- anterior a esse teste o registro já foi gravado
                --
                gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
                gl_conteudo := gl_conteudo || g2_conteudo;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'VII.b',
                                       el_conteudo       => gl_conteudo);
                --
              end if;
              --
              exit;
              --
            else
              j := vt_bi_tab_AnxVIIb(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 15.14;
        --
        if i = vt_bi_tab_AnxVIIb.last then
          exit;
        else
          i := vt_bi_tab_AnxVIIb.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 16;
    --
    -- Registro VIII - Pagamento de ICMS Efetuados no Mes de Referencia
    if nvl(vt_AnxVIII.count, 0) > 0 then
      --
      vn_fase_arq := 16.1;
      --
      i := nvl(vt_AnxVIII.first, 0);
      --
      vn_fase_arq := 16.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 16.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 16.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxVIII(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxVIII(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVIII(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVIII(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVIII(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxVIII(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxVIII(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxVIII(i).PerOper, 4, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).Venc, 8, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).IcmsProp, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).IcmsST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).CGCCentr, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).ICMSProprAmpara, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).ICMSSTribAmpara, 13, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 16.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).PerOper, 4, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).Venc, 8, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).IcmsProp, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).IcmsST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).CGCCentr, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).ICMSProprAmpara, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxVIII(i).ICMSSTribAmpara, 13, 0);
          --
        end if;
        --
        vn_fase_arq := 16.6;
        --
        if nvl(vn_qtdocor, 0) = 17 then -- máximo 10
          --
          vn_fase_arq := 16.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'VIII',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 16.8;
        --
        if i = vt_AnxVIII.last then
          --
          vn_fase_arq := 16.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 17 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'VIII',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxVIII.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 17;
    --
    -- Registro IX - Discriminacao dos Debitos Vencidos na Ocorrencia do Fato Gerador e Não Pagos
    if nvl(vt_AnxIX.count, 0) > 0 then
      --
      vn_fase_arq := 17.1;
      --
      i := nvl(vt_AnxIX.first, 0);
      --
      vn_fase_arq := 17.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        vn_fase_arq := 17.3;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 17.4;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 17.5;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxIX(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxIX(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIX(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIX(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIX(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxIX(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxIX(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxIX(i).DiaVenc, 2, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).IcmsProp, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).IcmsST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).CGCCentr, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).ICMSProprAmpara, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).ICMSSTribAmpara, 13, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 17.6;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).DiaVenc, 2, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).IcmsProp, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).IcmsST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).CGCCentr, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).ICMSProprAmpara, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxIX(i).ICMSSTribAmpara, 13, 0);
          --
        end if;
        --
        vn_fase_arq := 17.7;
        --
        if nvl(vn_qtdocor, 0) = 22 then -- máximo 22
          --
          vn_fase_arq := 17.8;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'IX',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 17.9;
        --
        if i = vt_AnxIX.last then
          --
          vn_fase_arq := 17.10;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 22 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'IX',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxIX.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 18;
    --
    -- Registro X - Discriminacao ICMS a Recolher, inclusive Saldo Devedor Acumulado
    if nvl(vt_AnxX.count, 0) > 0 then
      --
      vn_fase_arq := 18.1;
      --
      i := nvl(vt_AnxX.first, 0);
      --
      vn_fase_arq := 18.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 18.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 18.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxX(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxX(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxX(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxX(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxX(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxX(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxX(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxX(i).Venc, 2, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).IcmsProp, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).IcmsST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).CGCCentr, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).ICMSProprAmpara, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).ICMSSTribAmpara, 13, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 18.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).Venc, 2, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).IcmsProp, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).IcmsST, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).CGCCentr, 10, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).ICMSProprAmpara, 13, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxX(i).ICMSSTribAmpara, 13, 0);
          --
        end if;
        --
        vn_fase_arq := 18.6;
        --
        if nvl(vn_qtdocor, 0) = 17 then -- máximo 17
          --
          vn_fase_arq := 18.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'X',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 18.8;
        --
        if i = vt_AnxX.last then
          --
          vn_fase_arq := 18.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'X',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxX.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 19;
    --
    -- Registro XIV - Outros Creditos - Detalhamento
    if nvl(vt_AnxXIV.count, 0) > 0 then
      --
      vn_fase_arq := 19.1;
      --
      i := nvl(vt_AnxXIV.first, 0);
      --
      vn_fase_arq := 19.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 19.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 19.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxXIV(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxXIV(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXIV(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXIV(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXIV(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXIV(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxXIV(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxXIV(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxXIV(i).VlrCred, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxXIV(i).Especificacao, 60, ' ');
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 19.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxXIV(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxXIV(i).VlrCred, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxXIV(i).Especificacao, 60, ' ');
          --
        end if;
        --
        vn_fase_arq := 19.6;
        --
        if nvl(vn_qtdocor, 0) = 10 then -- máximo 10
          --
          vn_fase_arq := 19.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'XIV',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 19.8;
        --
        if i = vt_AnxXIV.last then
          --
          vn_fase_arq := 19.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'XIV',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxXIV.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 20;
    --
    -- Registro XV - Outros Debitos - Detalhamento
    if nvl(vt_AnxXV.count, 0) > 0 then
      --
      vn_fase_arq := 20.1;
      --
      i := nvl(vt_AnxXV.first, 0);
      --
      vn_fase_arq := 20.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 20.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 20.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxXV(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxXV(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXV(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXV(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXV(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXV(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxXV(i).IdReg, 4, ' ');
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := lpad(vt_AnxXV(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxXV(i).VlrCred, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxXV(i).Especificacao, 60, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 20.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || lpad(vt_AnxXV(i).Codigo, 3, 0);
          g2_conteudo := g2_conteudo || lpad(vt_AnxXV(i).VlrCred, 13, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxXV(i).Especificacao, 60, 0);
          --
        end if;
        --
        vn_fase_arq := 20.6;
        --
        if nvl(vn_qtdocor, 0) = 10 then -- máximo 10
          --
          vn_fase_arq := 20.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'XV',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 20.8;
        --
        if i = vt_AnxXV.last then
          --
          vn_fase_arq := 20.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 10 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'XV',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxXV.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 21;
    --
    -- Registro XVI - Outros Debitos - Detalhamento
    if nvl(vt_AnxXVI.count, 0) > 0 then
      --
      vn_fase_arq := 21.1;
      --
      i := nvl(vt_AnxXVI.first, 0);
      --
      vn_fase_arq := 21.2;
      vn_qtdocor  := 0;
      g2_conteudo := null;
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 21.3;
        --
        if nvl(vn_qtdocor, 0) = 0 then
          --
          vn_fase_arq := 21.4;
          vn_lin_seq  := nvl(vn_lin_seq, 0) + 1;
          --
          gl_conteudo := rpad(vt_AnxXVI(i).Tp, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).Versao, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).Diaini, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).Diafim, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).Referencia, 6, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).IncsEst, 10, 0);
          gl_conteudo := gl_conteudo || lpad(nvl(vn_lin_seq, 0), 4, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxXVI(i).IdReg, 4, ' ');
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).CodNatuz, 2, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).AtoDeclar, 8, 0);
          gl_conteudo := gl_conteudo || lpad(vt_AnxXVI(i).VlrCred, 13, 0);
          gl_conteudo := gl_conteudo || rpad(vt_AnxXVI(i).Custos, 16, 0);
          --
          vn_qtdocor := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := rpad(vt_AnxXVI(i).CodMunin, 3, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxXVI(i).VlrServ, 16, 0);
          --
        else -- nvl(vn_qtdocor,0) > 0
          --
          vn_fase_arq := 21.5;
          vn_qtdocor  := nvl(vn_qtdocor, 0) + 1;
          --
          g2_conteudo := g2_conteudo || rpad(vt_AnxXVI(i).CodMunin, 3, 0);
          g2_conteudo := g2_conteudo || rpad(vt_AnxXVI(i).VlrServ, 16, 0);
          --
        end if;
        --
        vn_fase_arq := 21.6;
        --
        if nvl(vn_qtdocor, 0) = 40 then -- máximo 40
          --
          vn_fase_arq := 21.7;
          gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
          gl_conteudo := gl_conteudo || g2_conteudo;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => 'XVI',
                                 el_conteudo       => gl_conteudo);
          --
          vn_qtdocor := 0;
          --
        end if;
        --
        vn_fase_arq := 21.8;
        --
        if i = vt_AnxXVI.last then
          --
          vn_fase_arq := 21.9;
          --
          if nvl(vn_qtdocor, 0) <> 0 and nvl(vn_qtdocor, 0) <> 40 then -- anterior a esse teste o registro já foi gravado
            --
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtdocor, 0), 2, 0);
            gl_conteudo := gl_conteudo || g2_conteudo;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'XVI',
                                   el_conteudo       => gl_conteudo);
            --
          end if;
          --
          exit;
          --
        else
          i := vt_AnxXVI.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase_arq := 22;
    --
    -- Final da montagem das linhas do arquivo texto
    pkb_limpa_vetor_rs;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_rs fase (' || vn_fase_arq || '): ' || sqlerrm);
  end pkb_monta_estr_arq_gia_rs;
  --
  -- Inicio PROCEDURE PRINCIPAL RIO GRANDE DO SUL
  --
begin
  --
  vn_fase := 1;
  --
  pkb_limpa_vetor_rs;
  --
  vd_mesref := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM');
  --
  vn_fase := 2;
  --
  -- Registro Cabecalho
  vt_tab_princ(1).Tp         := '****';
  vt_tab_princ(1).versao     := '08';
  vt_tab_princ(1).DtEntg     := lpad('0', 8, 0);
  vt_tab_princ(1).indRet     := 'N';
  vt_tab_princ(1).Diaini     := to_char(gt_row_abertura_gia.dt_ini, 'DD');
  vt_tab_princ(1).Diafim     := to_char(gt_row_abertura_gia.dt_fin, 'DD');
  vt_tab_princ(1).Referencia := to_char(gt_row_abertura_gia.dt_ini, 'MMRRRR');
  vt_tab_princ(1).Seq        := 1;
  vt_tab_princ(1).InscEstad  := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 1, 10), 0), 10, 0); -- Inscricao Estadual;
  vt_tab_princ(1).IdReg      := 'ABCE';
  --
  vn_fase := 3;
  --
  -- Observações
  vt_tab_obs(1).Tp           := '****';
  vt_tab_obs(1).Versao       := '08';
  vt_tab_obs(1).Diaini       := to_char(gt_row_abertura_gia.dt_ini, 'DD');
  vt_tab_obs(1).Diafim       := to_char(gt_row_abertura_gia.dt_fin, 'DD');
  vt_tab_obs(1).Referencia   := to_char(gt_row_abertura_gia.dt_ini, 'MMRRRR');
  vt_tab_obs(1).InscEstad    := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 1, 10), 0), 10, 0); -- Inscricao Estadual
  vt_tab_obs(1).Sequencia    := 1;
  vt_tab_obs(1).IdReg        := 'OBS';
  vt_tab_obs(1).QtdOcor      := 1;
  vt_tab_obs(1).Obs          := null;
  --
  vn_fase := 4;
  --
  -- Contribuinte
  vt_tab_contrib(1).Tp         := '****';
  vt_tab_contrib(1).Versao     := '08';
  vt_tab_contrib(1).Diaini     := to_char(gt_row_abertura_gia.dt_ini, 'DD');
  vt_tab_contrib(1).Diafim     := to_char(gt_row_abertura_gia.dt_fin, 'DD');
  vt_tab_contrib(1).Referencia := to_char(gt_row_abertura_gia.dt_ini, 'MMRRRR');
  vt_tab_contrib(1).IncsEst    := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 1, 10), 0), 10, 0); -- Inscricao Estadual
  vt_tab_contrib(1).Sequencia  := 1;
  vt_tab_contrib(1).IdReg      := 'XDC';
  --
  vn_fase := 5;
  --
  begin
    select substr(a.nome, 1, 50),
           substr(a.fone, 1, 2),
           substr(a.fone, 3, 12),
           a.id
      into vv_nome, 
           vv_ddd, 
           vv_fone, 
           vn_pessoa_id
      from empresa em, 
           pessoa a, 
           juridica b
     where em.id       = gt_row_abertura_gia.empresa_id
       and a.id        = em.pessoa_id
       and b.pessoa_id = a.id;
  exception
    when no_data_found then
      vv_ddd       := null;
      vv_nome      := null;
      vv_fone      := null;
      vn_pessoa_id := null;
  end;
  --
  vn_fase := 6;
  --
  vt_tab_contrib(1).cnpj            := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => vn_pessoa_id);
  vt_tab_contrib(1).RazSoc          := vv_nome;
  vt_tab_contrib(1).FoneDDD         := lpad(vv_ddd, 3, 0);
  vt_tab_contrib(1).FoneNro         := lpad(pk_csf.fkg_converte(vv_fone), 9, 0);
  vt_tab_contrib(1).SelecEntrgCompl := 'S'; -- ver ou 'N'
  vt_tab_contrib(1).CodGia          := lpad(gt_row_abertura_gia.dm_tipo_gia, 6, '0');
  --
  vn_fase := 7;
  --
  gv_tipocodarq_cd := '13';
  --
  i                  := 0;
  vn_Tot_lin_AnexoI  := 0;
  vn_Tot_lin_AnexoIc := 0;
  --
  vn_vlr_fatur_mes := 0;
  --
  for rec in c_det_cfop loop
    exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
    --
    vn_fase := 8;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vv_cod_st_ipi          := null;
    vn_vl_base_calc_ipi    := 0;
    vn_aliq_ipi            := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_ipi    := 0;
    vn_vl_bc_outra_ipi     := 0;
    vn_ipi_nao_recup       := 0;
    vn_outro_ipi           := 0;
    vn_vl_fcp_icmsst       := 0;
    vn_aliq_fcp_icms       := 0;
    vn_vl_fcp_icms         := 0;
    --
    vn_fase := 9;
    --
    pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec.itemnf_id,
                                      sn_cfop                => vn_cfop,
                                      sn_vl_operacao         => vn_vl_contabil,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                      sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                      sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                      sv_cod_st_ipi          => vv_cod_st_ipi, -- não utilizado
                                      sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi, -- não utilizado
                                      sn_aliq_ipi            => vn_aliq_ipi, -- não utilizado
                                      sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi, -- não utilizado
                                      sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi, -- não utilizado
                                      sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi, -- não utilizado
                                      sn_ipi_nao_recup       => vn_ipi_nao_recup, -- não utilizado
                                      sn_outro_ipi           => vn_outro_ipi, -- não utilizado
                                      sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                      sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                      sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                      sn_vl_fcp_icms         => vn_vl_fcp_icms);
    --
    vn_fase := 10;
    --
    vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(ev_cfop_cd => vn_cfop);
    --
    if vn_tipooperacao_cd = 10 then -- Vendas
      --
      vn_vlr_fatur_mes := nvl(vn_vlr_fatur_mes, 0) + nvl(vn_vl_contabil, 0);
      --
    end if;
    --
    vn_fase := 10.1;
    --
    if rec.dm_ind_oper = 0 then -- 0-entradas
      --
      vn_fase := 11;
      --
      begin
        vb_achou := vt_bi_tab_AnxI(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 11.1;
      --
      if not vb_achou then
        --
        vn_fase := 11.2;
        --
        -- Anexo I -  Entradas
        vt_bi_tab_AnxI(1)(vn_cfop).Tp         := '****';
        vt_bi_tab_AnxI(1)(vn_cfop).Versao     := '08';
        vt_bi_tab_AnxI(1)(vn_cfop).Diaini     := to_char(gt_row_abertura_gia.dt_ini, 'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Diafim     := to_char(gt_row_abertura_gia.dt_fin, 'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini, 'MMRRRR');
        vt_bi_tab_AnxI(1)(vn_cfop).IncsEst    := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 1, 10), 0), 10, 0); -- Inscricao Estadual;
        vt_bi_tab_AnxI(1)(vn_cfop).Sequencia  := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).IdReg      := 'X01';
        vt_bi_tab_AnxI(1)(vn_cfop).QtdOcor    := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).Cfop       := vn_cfop;
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb     := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc   := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Credito    := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas    := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Outras     := nvl(vn_vl_bc_outra_icms, 0) * 100;
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoI := vn_Tot_lin_AnexoI + 1;
        --
      else
        --
        vn_fase := 11.3;
        --
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb   := vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Credito  := vt_bi_tab_AnxI(1)(vn_cfop).Credito + nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas  := vt_bi_tab_AnxI(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Outras   := vt_bi_tab_AnxI(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl + (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase := 11.4;
      --
      -- Registro Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento - A partir de 09/2014
      if vd_mesref >= 201409
        --vn_cfop in (1556, 1933, 2933)
         and vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
        --
        vn_fase := 11.5;
        --
        begin
          vb_achou := vt_bi_tab_AnxIc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 11.6;
        --
        if not vb_achou then
          --
          vn_fase := 11.7;
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxIc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxIc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxIc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxIc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxIc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).IdReg := 'X01C';
          vt_bi_tab_AnxIc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxIc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxIc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoIc := vn_Tot_lin_AnexoIc + 1;
          --
        else
          --
          vn_fase := 11.8;
          --
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := vt_bi_tab_AnxIc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 11.9;
      --
      vn_cred_entr := vn_cred_entr + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (1949, 2949, 3949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 11.10;
      --
      if nvl(vn_vl_imp_trib_icmsst, 0) > 0 then
        --
        vn_fase := 11.11;
        --
        vn_tot_vlimptrib_icmsst_ent := vn_tot_vlimptrib_icmsst_ent +
                                       vn_vl_imp_trib_icmsst;
        --
        vv_subst_trib := 'S';
        --
        vn_fase := 11.12;
        -- Registro VII.a - Discriminacao das Operacoes De Entrada com Substituicao Tributaria
        begin
          vb_achou := vt_bi_tab_AnxVIIa(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 11.13;
        --
        if not vb_achou then
          --
          vn_fase := 11.14;
          --
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                          'DD');
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                          'DD');
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                              'MMRRRR');
          vt_bi_tab_AnxVIIa(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                   1,
                                                                   10),
                                                            0),
                                                        10,
                                                        0); -- Inscricao Estadual;
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVIIa(1)(vn_cfop).IdReg := 'X07A';
          vt_bi_tab_AnxVIIa(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVIIa(1)(vn_cfop).BaseCalc := (nvl(vn_vl_base_calc_icms,
                                                         0) * 100);
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Credito := (nvl(vn_vl_contabil, 0) * 100);
          --
          vn_Tot_Lin_AnexoVIIa := vn_Tot_Lin_AnexoVIIa + 1;
          --
        else
          --
          vn_fase := 11.15;
          --
          vt_bi_tab_AnxVIIa(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxVIIa(1)(vn_cfop).BaseCalc +
                                                    (nvl(vn_vl_base_calc_icms,
                                                                                       0) * 100);
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Credito := vt_bi_tab_AnxVIIa(1)(vn_cfop)
                                                  .Credito +
                                                   (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
    else
      --
      vn_fase := 12;
      -- Saidas
      begin
        vb_achou := vt_bi_tab_AnxV(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 12.1;
      --
      if not vb_achou then
        --
        vn_fase := 12.2;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).Tp := '****';
        vt_bi_tab_AnxV(1)(vn_cfop).Versao := '08';
        vt_bi_tab_AnxV(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                         'MMRRRR');
        vt_bi_tab_AnxV(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                              1,
                                                              10),
                                                       0),
                                                   10,
                                                   0); -- Inscricao Estadual;
        vt_bi_tab_AnxV(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).IdReg := 'X05';
        vt_bi_tab_AnxV(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).Cfop := vn_cfop;
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := nvl(vn_vl_bc_outra_icms, 0) * 100;
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoV := vn_Tot_lin_AnexoV + 1;
        --
      else
        --
        vn_fase := 12.3;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := vt_bi_tab_AnxV(1)(vn_cfop)
                                             .VlrCont +
                                              (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxV(1)(vn_cfop)
                                              .BaseCalc +
                                               (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Debito +
                                             (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Isenta +
                                             (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Outras +
                                             (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop)
                                                  .ImportExcl +
                                                   (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase := 12.4;
      --
      vn_deb_said := vn_deb_said + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (5949, 6949, 7949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 12.5;
      --  Registro V.a - Saidas Isentas ou Nao Tributadas - Detalhamento
      if nvl(vn_vl_bc_isenta_icms, 0) > 0 then
        --
        vn_fase := 12.6;
        --
        begin
          vb_achou := vt_bi_tab_AnxVa(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 12.7;
        --
        if not vb_achou then
          --
          vn_fase := 12.8;
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVa(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVa(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVa(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVa(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).IdReg := 'X05A';
          vt_bi_tab_AnxVa(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVa(1)(vn_cfop).CodIsentas := 501; -- Outras -- aleatório
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_isenta_icms,
                                                      0) * 100;
          --
          vn_Tot_lin_AnexoVa := vn_Tot_lin_AnexoVa + 1;
          --
        else
          --
          vn_fase := 12.9;
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_isenta_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 12.10;
      -- Registro V.b - Outras Saidas - Detalhamento
      if nvl(vn_vl_bc_outra_icms, 0) > 0 then
        --
        vn_fase := 12.11;
        --
        begin
          vb_achou := vt_bi_tab_AnxVb(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 12.12;
        --
        if not vb_achou then
          --
          vn_fase := 12.13;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVb(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVb(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVb(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVb(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).IdReg := 'X05B';
          vt_bi_tab_AnxVb(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVb(1)(vn_cfop).CodOutras := 999; -- Outras - aleatório
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_outra_icms,
                                                      0) * 100;
          --
          vn_Tot_Lin_AnexoVb := vn_Tot_Lin_AnexoVb + 1;
          --
        else
          --
          vn_fase := 12.14;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_outra_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 12.141;
      --
      -- Registro V.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
      if vd_mesref >= 201409 and vn_cfop in (5949, 6949, 7949) then
        --
        begin
          vb_achou := vt_bi_tab_AnxVc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        if not vb_achou then
          --
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxVc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).IdReg := 'X05C';
          vt_bi_tab_AnxVc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxVc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoVc := vn_Tot_lin_AnexoVc + 1;
          --
        else
          --
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := vt_bi_tab_AnxVc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 12.15;
      -- Registro VII.b - Discriminacao das Operacoes De Saida com Substituicao Tributaria
      if nvl(vn_vl_imp_trib_icmsst, 0) > 0 and substr(vn_cfop, 1, 1) <> 6 then
        --
        vn_fase := 12.16;
        --
        vn_tot_vlimptrib_icmsst_sai := vn_tot_vlimptrib_icmsst_sai +
                                       vn_vl_imp_trib_icmsst;
        --
        vv_subst_trib := 'S';
        --
        vn_fase := 12.17;
        --
        begin
          vb_achou := vt_bi_tab_AnxVIIb(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 12.18;
        --
        if not vb_achou then
          --
          vn_fase := 12.19;
          --
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                          'DD');
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                          'DD');
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                              'MMRRRR');
          vt_bi_tab_AnxVIIb(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                   1,
                                                                   10),
                                                            0),
                                                        10,
                                                        0); -- Inscricao Estadual;
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVIIb(1)(vn_cfop).IdReg := 'X07B';
          vt_bi_tab_AnxVIIb(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVIIb(1)(vn_cfop).BaseCalc := (nvl(vn_vl_base_calc_icms,
                                                         0) * 100);
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Debito := (nvl(vn_vl_contabil, 0) * 100);
          --
          vn_Tot_Lin_AnexoVIIb := vn_Tot_Lin_AnexoVIIb + 1;
          --
        else
          --
          vn_fase := 12.20;
          --
          vt_bi_tab_AnxVIIb(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxVIIb(1)(vn_cfop).BaseCalc +
                                                    (nvl(vn_vl_base_calc_icms,
                                                                                       0) * 100);
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Debito := vt_bi_tab_AnxVIIb(1)(vn_cfop)
                                                 .Debito +
                                                  (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 13;
  -- Registro Conhecimentos de transportes
  for rec in c_det_cfop_ct loop
    exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
    --
    vn_fase := 14;
    --
    vn_cfop              := 0;
    vn_vl_contabil       := 0;
    vv_cod_st_icms       := null;
    vn_vl_base_calc_icms := 0;
    vn_aliq_icms         := 0;
    vn_vl_imp_trib_icms  := 0;
    vn_vl_bc_isenta_icms := 0;
    vn_vl_bc_outra_icms  := 0;
    --
    vn_fase := 15;
    -- recupera os valores de impostos
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_contabil,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 16;
    --
    vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(ev_cfop_cd => vn_cfop);
    --
    if vn_tipooperacao_cd = 10 then
      -- Vendas
      --
      vn_vlr_fatur_mes := nvl(vn_vlr_fatur_mes, 0) + nvl(vn_vl_contabil, 0);
      --
    end if;
    --
    vn_fase := 16.1;
    --
    if rec.dm_ind_oper = 0 then
      --
      vn_fase := 17;
      -- 0-entradas
      begin
        vb_achou := vt_bi_tab_AnxI(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 17.1;
      --
      if not vb_achou then
        --
        vn_fase := 17.2;
        -- Anexo I -  Entradas
        vt_bi_tab_AnxI(1)(vn_cfop).Tp := '****';
        vt_bi_tab_AnxI(1)(vn_cfop).Versao := '08';
        vt_bi_tab_AnxI(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                     'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                     'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                         'MMRRRR');
        vt_bi_tab_AnxI(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                              1,
                                                              10),
                                                       0),
                                                   10,
                                                   0); -- Inscricao Estadual;
        vt_bi_tab_AnxI(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).IdReg := 'X01';
        vt_bi_tab_AnxI(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).Cfop := vn_cfop;
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Credito := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Outras := nvl(vn_vl_bc_outra_icms, 0) * 100;
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoI := vn_Tot_lin_AnexoI + 1;
        --
      else
        --
        vn_fase := 17.3;
        --
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb := vt_bi_tab_AnxI(1)(vn_cfop)
                                            .VlrCtb +
                                             (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxI(1)(vn_cfop)
                                              .BaseCalc +
                                               (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Credito := vt_bi_tab_AnxI(1)(vn_cfop)
                                             .Credito +
                                              nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas := vt_bi_tab_AnxI(1)(vn_cfop)
                                             .Isentas +
                                              (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Outras := vt_bi_tab_AnxI(1)(vn_cfop)
                                            .Outras +
                                             (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop)
                                                  .ImportExcl +
                                                   (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase := 17.4;
      -- Registro Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento - A partir de 09/2014
      if vd_mesref >= 201409 and
         vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
        --
        vn_fase := 17.5;
        --
        begin
          vb_achou := vt_bi_tab_AnxIc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 17.6;
        --
        if not vb_achou then
          --
          vn_fase := 17.7;
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxIc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxIc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxIc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxIc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxIc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).IdReg := 'X01C';
          vt_bi_tab_AnxIc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxIc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxIc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoIc := vn_Tot_lin_AnexoIc + 1;
          --
        else
          --
          vn_fase := 17.8;
          --
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := vt_bi_tab_AnxIc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 17.9;
      --
      vn_cred_entr := vn_cred_entr + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (1949, 2949, 3949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 17.10;
      --
    else
      --
      vn_fase := 18;
      -- Saidas
      begin
        vb_achou := vt_bi_tab_AnxV(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 18.1;
      --
      if not vb_achou then
        --
        vn_fase := 18.2;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).Tp := '****';
        vt_bi_tab_AnxV(1)(vn_cfop).Versao := '08';
        vt_bi_tab_AnxV(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                         'MMRRRR');
        vt_bi_tab_AnxV(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                              1,
                                                              10),
                                                       0),
                                                   10,
                                                   0); -- Inscricao Estadual;
        vt_bi_tab_AnxV(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).IdReg := 'X05';
        vt_bi_tab_AnxV(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).Cfop := vn_cfop;
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := nvl(vn_vl_bc_outra_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := 0;
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoV := vn_Tot_lin_AnexoV + 1;
        --
      else
        --
        vn_fase := 18.3;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := vt_bi_tab_AnxV(1)(vn_cfop)
                                             .VlrCont +
                                              (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxV(1)(vn_cfop)
                                              .BaseCalc +
                                               (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Debito +
                                             (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Isenta +
                                             (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Outras +
                                             (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop)
                                                  .ImportExcl +
                                                   (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase := 18.4;
      --
      vn_deb_said := vn_deb_said + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (5949, 6949, 7949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 18.5;
      --  Registro V.a - Saidas Isentas ou Nao Tributadas - Detalhamento
      if nvl(vn_vl_bc_isenta_icms, 0) > 0 then
        --
        vn_fase := 18.6;
        --
        begin
          vb_achou := vt_bi_tab_AnxVa(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 18.7;
        --
        if not vb_achou then
          --
          vn_fase := 18.8;
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVa(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVa(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVa(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVa(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).IdReg := 'X05A';
          vt_bi_tab_AnxVa(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVa(1)(vn_cfop).CodIsentas := 501; -- Outras -- aleatório
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_isenta_icms,
                                                      0) * 100;
          --
          vn_Tot_lin_AnexoVa := vn_Tot_lin_AnexoVa + 1;
          --
        else
          --
          vn_fase := 18.9;
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_isenta_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 18.10;
      -- Registro V.b - Outras Saidas - Detalhamento
      if nvl(vn_vl_bc_outra_icms, 0) > 0 then
        --
        vn_fase := 18.11;
        --
        begin
          vb_achou := vt_bi_tab_AnxVb(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 18.12;
        --
        if not vb_achou then
          --
          vn_fase := 18.13;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVb(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVb(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVb(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVb(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).IdReg := 'X05B';
          vt_bi_tab_AnxVb(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVb(1)(vn_cfop).CodOutras := 999; -- Outras - aleatório
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_outra_icms,
                                                      0) * 100;
          --
          vn_Tot_Lin_AnexoVb := vn_Tot_Lin_AnexoVb + 1;
          --
        else
          --
          vn_fase := 18.14;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_outra_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 18.15;
      --
      -- Registro V.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
      if vd_mesref >= 201409 and vn_cfop in (5949, 6949, 7949) then
        --
        begin
          vb_achou := vt_bi_tab_AnxVc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        if not vb_achou then
          --
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxVc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).IdReg := 'X05C';
          vt_bi_tab_AnxVc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxVc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoVc := vn_Tot_lin_AnexoVc + 1;
          --
        else
          --
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := vt_bi_tab_AnxVc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 19;
  -- Valor do Servicos Continuos
  for rec in c_det_cfop_sc loop
    exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
    --
    vn_fase := 20;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    vn_fase := 21;
    -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de servico continuo
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_contabil,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi, -- não utilizado
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 22;
    --
    vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(ev_cfop_cd => vn_cfop);
    --
    if vn_tipooperacao_cd = 10 then
      -- Vendas
      --
      vn_vlr_fatur_mes := nvl(vn_vlr_fatur_mes, 0) + nvl(vn_vl_contabil, 0);
      --
    end if;
    --
    vn_fase := 22.1;
    --
    if rec.dm_ind_oper = 0 then
      --
      vn_fase := 23;
      -- 0-entradas
      begin
        vb_achou := vt_bi_tab_AnxI(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 23.1;
      --
      if not vb_achou then
        --
        vn_fase := 23.2;
        -- Anexo I -  Entradas
        vt_bi_tab_AnxI(1)(vn_cfop).Tp := '****';
        vt_bi_tab_AnxI(1)(vn_cfop).Versao := '08';
        vt_bi_tab_AnxI(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                     'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                     'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                         'MMRRRR');
        vt_bi_tab_AnxI(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                              1,
                                                              10),
                                                       0),
                                                   10,
                                                   0); -- Inscricao Estadual;
        vt_bi_tab_AnxI(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).IdReg := 'X01';
        vt_bi_tab_AnxI(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).Cfop := vn_cfop;
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Credito := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Outras := nvl(vn_vl_bc_outra_icms, 0) * 100;
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoI := vn_Tot_lin_AnexoI + 1;
        --
      else
        --
        vn_fase := 23.3;
        --
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb := vt_bi_tab_AnxI(1)(vn_cfop)
                                            .VlrCtb +
                                             (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxI(1)(vn_cfop)
                                              .BaseCalc +
                                               (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Credito := vt_bi_tab_AnxI(1)(vn_cfop)
                                             .Credito +
                                              nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas := vt_bi_tab_AnxI(1)(vn_cfop)
                                             .Isentas +
                                              (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Outras := vt_bi_tab_AnxI(1)(vn_cfop)
                                            .Outras +
                                             (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop)
                                                  .ImportExcl +
                                                   (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase := 23.4;
      -- Registro Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento - A partir de 09/2014
      if vd_mesref >= 201409 and
         vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
        --
        vn_fase := 23.5;
        --
        begin
          vb_achou := vt_bi_tab_AnxIc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 23.6;
        --
        if not vb_achou then
          --
          vn_fase := 23.7;
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxIc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxIc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxIc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxIc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxIc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).IdReg := 'X01C';
          vt_bi_tab_AnxIc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxIc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxIc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoIc := vn_Tot_lin_AnexoIc + 1;
          --
        else
          --
          vn_fase := 23.8;
          --
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := vt_bi_tab_AnxIc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 23.9;
      --
      vn_cred_entr := vn_cred_entr + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (1949, 2949, 3949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 23.10;
      --
      if nvl(vn_vl_imp_trib_icmsst, 0) > 0 then
        --
        vn_fase := 23.11;
        --
        vn_tot_vlimptrib_icmsst_ent := vn_tot_vlimptrib_icmsst_ent +
                                       vn_vl_imp_trib_icmsst;
        --
        vv_subst_trib := 'S';
        --
        vn_fase := 23.12;
        -- Registro VII.a - Discriminacao das Operacoes De Entrada com Substituicao Tributaria
        begin
          vb_achou := vt_bi_tab_AnxVIIa(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 23.13;
        --
        if not vb_achou then
          --
          vn_fase := 23.14;
          --
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                          'DD');
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                          'DD');
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                              'MMRRRR');
          vt_bi_tab_AnxVIIa(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                   1,
                                                                   10),
                                                            0),
                                                        10,
                                                        0); -- Inscricao Estadual;
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Sequencia := 1;
          vt_bi_tab_AnxVIIa(1)(vn_cfop).IdReg := 'X07A';
          vt_bi_tab_AnxVIIa(1)(vn_cfop).QtdOcor := 1;
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVIIa(1)(vn_cfop).BaseCalc := (nvl(vn_vl_base_calc_icms,
                                                         0) * 100);
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Credito := (nvl(vn_vl_contabil, 0) * 100);
          --
          vn_Tot_Lin_AnexoVIIa := vn_Tot_Lin_AnexoVIIa + 1;
          --
        else
          --
          vn_fase := 23.15;
          --
          vt_bi_tab_AnxVIIa(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxVIIa(1)(vn_cfop).BaseCalc +
                                                    (nvl(vn_vl_base_calc_icms,
                                                                                       0) * 100);
          vt_bi_tab_AnxVIIa(1)(vn_cfop).Credito := vt_bi_tab_AnxVIIa(1)(vn_cfop)
                                                  .Credito +
                                                   (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
    else
      --
      vn_fase := 24;
      -- Saidas
      begin
        vb_achou := vt_bi_tab_AnxV(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 24.1;
      --
      if not vb_achou then
        --
        vn_fase := 24.2;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).Tp := '****';
        vt_bi_tab_AnxV(1)(vn_cfop).Versao := '08';
        vt_bi_tab_AnxV(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                         'MMRRRR');
        vt_bi_tab_AnxV(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                              1,
                                                              10),
                                                       0),
                                                   10,
                                                   0); -- Inscricao Estadual;
        vt_bi_tab_AnxV(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).IdReg := 'X05';
        vt_bi_tab_AnxV(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).Cfop := vn_cfop;
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := nvl(vn_vl_bc_outra_icms, 0) * 100;
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoV := vn_Tot_lin_AnexoV + 1;
        --
      else
        --
        vn_fase := 24.3;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := vt_bi_tab_AnxV(1)(vn_cfop)
                                             .VlrCont +
                                              (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxV(1)(vn_cfop)
                                              .BaseCalc +
                                               (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Debito +
                                             (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Isenta +
                                             (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Outras +
                                             (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop)
                                                  .ImportExcl +
                                                   (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase     := 24.4;
      vn_deb_said := vn_deb_said + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (5949, 6949, 7949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 24.5;
      --  Registro V.a - Saidas Isentas ou Nao Tributadas - Detalhamento
      if nvl(vn_vl_bc_isenta_icms, 0) > 0 then
        --
        vn_fase := 24.6;
        --
        begin
          vb_achou := vt_bi_tab_AnxVa(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 24.7;
        --
        if not vb_achou then
          --
          vn_fase := 24.8;
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVa(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVa(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVa(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVa(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).IdReg := 'X05A';
          vt_bi_tab_AnxVa(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVa(1)(vn_cfop).CodIsentas := 501; -- Outras -- aleatório
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_isenta_icms,
                                                      0) * 100;
          --
          vn_Tot_lin_AnexoVa := vn_Tot_lin_AnexoVa + 1;
          --
        else
          --
          vn_fase := 24.9;
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_isenta_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 24.10;
      -- Registro V.b - Outras Saidas - Detalhamento
      if nvl(vn_vl_bc_outra_icms, 0) > 0 then
        --
        vn_fase := 24.11;
        --
        begin
          vb_achou := vt_bi_tab_AnxVb(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 24.12;
        --
        if not vb_achou then
          --
          vn_fase := 24.13;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVb(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVb(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVb(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVb(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).IdReg := 'X05B';
          vt_bi_tab_AnxVb(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVb(1)(vn_cfop).CodOutras := 999; -- Outras - aleatório
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_outra_icms,
                                                      0) * 100;
          --
          vn_Tot_Lin_AnexoVb := vn_Tot_Lin_AnexoVb + 1;
          --
        else
          --
          vn_fase := 24.14;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_outra_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 24.141;
      --
      -- Registro V.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
      if vd_mesref >= 201409 and vn_cfop in (5949, 6949, 7949) then
        --
        begin
          vb_achou := vt_bi_tab_AnxVc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        if not vb_achou then
          --
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxVc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).IdReg := 'X05C';
          vt_bi_tab_AnxVc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxVc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoVc := vn_Tot_lin_AnexoVc + 1;
          --
        else
          --
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := vt_bi_tab_AnxVc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 24.15;
      -- Registro VII.b - Discriminacao das Operacoes De Saida com Substituicao Tributaria
      if nvl(vn_vl_imp_trib_icmsst, 0) > 0 and substr(vn_cfop, 1, 1) <> 6 then
        --
        vn_fase := 24.16;
        --
        vn_tot_vlimptrib_icmsst_sai := vn_tot_vlimptrib_icmsst_sai +
                                       vn_vl_imp_trib_icmsst;
        --
        vv_subst_trib := 'S';
        --
        vn_fase := 24.17;
        --
        begin
          vb_achou := vt_bi_tab_AnxVIIb(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 24.18;
        --
        if not vb_achou then
          --
          vn_fase := 24.19;
          --
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                          'DD');
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                          'DD');
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                              'MMRRRR');
          vt_bi_tab_AnxVIIb(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                   1,
                                                                   10),
                                                            0),
                                                        10,
                                                        0); -- Inscricao Estadual;
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVIIb(1)(vn_cfop).IdReg := 'X07B';
          vt_bi_tab_AnxVIIb(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVIIb(1)(vn_cfop).BaseCalc := (nvl(vn_vl_base_calc_icms,
                                                         0) * 100);
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Debito := (nvl(vn_vl_contabil, 0) * 100);
          --
          vn_Tot_Lin_AnexoVIIb := vn_Tot_Lin_AnexoVIIb + 1;
          --
        else
          --
          vn_fase := 24.20;
          --
          vt_bi_tab_AnxVIIb(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxVIIb(1)(vn_cfop).BaseCalc +
                                                    (nvl(vn_vl_base_calc_icms,
                                                                                       0) * 100);
          vt_bi_tab_AnxVIIb(1)(vn_cfop).Debito := vt_bi_tab_AnxVIIb(1)(vn_cfop)
                                                 .Debito +
                                                  (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 25;
  -- Valor do Cupom Fiscal
  for rec in c_det_cfop_ecf loop
    exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
    --
    vn_fase := 26;
    --
    vn_cfop              := 0;
    vn_vl_contabil       := 0;
    vv_cod_st_icms       := null;
    vn_vl_base_calc_icms := 0;
    vn_aliq_icms         := 0;
    vn_vl_imp_trib_icms  := 0;
    vn_vl_bc_isenta_icms := 0;
    vn_vl_bc_outra_icms  := 0;
    --
    vn_fase := 27;
    -- Recupera valores fiscais (ICMS) do conhecimento de transporte
    pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_cfop                => vn_cfop,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_opr              => vn_vl_contabil,
                                      sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                      sn_vl_icms             => vn_vl_imp_trib_icms,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
    --
    vn_fase := 28;
    --
    vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(ev_cfop_cd => vn_cfop);
    --
    if vn_tipooperacao_cd = 10 then
      -- Vendas
      --
      vn_vlr_fatur_mes := nvl(vn_vlr_fatur_mes, 0) + nvl(vn_vl_contabil, 0);
      --
    end if;
    --
    vn_fase := 28.1;
    --
    if substr(vn_cfop, 1, 1) in (1, 2, 3) then
      --
      vn_fase := 29;
      -- 0-entradas
      begin
        vb_achou := vt_bi_tab_AnxI(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 29.1;
      --
      if not vb_achou then
        --
        vn_fase := 29.2;
        -- Anexo I -  Entradas
        vt_bi_tab_AnxI(1)(vn_cfop).Tp := '****';
        vt_bi_tab_AnxI(1)(vn_cfop).Versao := '08';
        vt_bi_tab_AnxI(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                     'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                     'DD');
        vt_bi_tab_AnxI(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                         'MMRRRR');
        vt_bi_tab_AnxI(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                              1,
                                                              10),
                                                       0),
                                                   10,
                                                   0); -- Inscricao Estadual;
        vt_bi_tab_AnxI(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).IdReg := 'X01';
        vt_bi_tab_AnxI(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxI(1)(vn_cfop).Cfop := vn_cfop;
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Credito := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Outras := nvl(vn_vl_bc_outra_icms, 0) * 100;
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoI := vn_Tot_lin_AnexoI + 1;
        --
      else
        --
        vn_fase := 29.3;
        --
        vt_bi_tab_AnxI(1)(vn_cfop).VlrCtb := vt_bi_tab_AnxI(1)(vn_cfop)
                                            .VlrCtb +
                                             (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxI(1)(vn_cfop)
                                              .BaseCalc +
                                               (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Credito := vt_bi_tab_AnxI(1)(vn_cfop)
                                             .Credito +
                                              nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxI(1)(vn_cfop).Isentas := vt_bi_tab_AnxI(1)(vn_cfop)
                                             .Isentas +
                                              (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxI(1)(vn_cfop).Outras := vt_bi_tab_AnxI(1)(vn_cfop)
                                            .Outras +
                                             (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop)
                                                  .ImportExcl +
                                                   (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxI(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase := 29.4;
      -- Registro Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento - A partir de 09/2014
      if vd_mesref >= 201409 and
         vn_cfop in (1303, 1407, 1556, 1933, 2303, 2557, 2933, 2949) then
        --
        vn_fase := 29.5;
        --
        begin
          vb_achou := vt_bi_tab_AnxIc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 29.6;
        --
        if not vb_achou then
          --
          vn_fase := 29.7;
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxIc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxIc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxIc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxIc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxIc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxIc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).IdReg := 'X01C';
          vt_bi_tab_AnxIc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxIc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxIc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxIc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoIc := vn_Tot_lin_AnexoIc + 1;
          --
        else
          --
          vn_fase := 29.8;
          --
          vt_bi_tab_AnxIc(1)(vn_cfop).Valor := vt_bi_tab_AnxIc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 29.9;
      --
      vn_cred_entr := vn_cred_entr + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (1949, 2949, 3949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 29.10;
      --
    else
      --
      vn_fase := 30;
      -- Saidas
      begin
        vb_achou := vt_bi_tab_AnxV(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 30.1;
      --
      if not vb_achou then
        --
        vn_fase := 30.2;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).Tp := '****';
        vt_bi_tab_AnxV(1)(vn_cfop).Versao := '08';
        vt_bi_tab_AnxV(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                     'DD');
        vt_bi_tab_AnxV(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                         'MMRRRR');
        vt_bi_tab_AnxV(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                              1,
                                                              10),
                                                       0),
                                                   10,
                                                   0); -- Inscricao Estadual;
        vt_bi_tab_AnxV(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).IdReg := 'X05';
        vt_bi_tab_AnxV(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
        vt_bi_tab_AnxV(1)(vn_cfop).Cfop := vn_cfop;
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := nvl(vn_vl_contabil, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := nvl(vn_vl_base_calc_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := nvl(vn_vl_imp_trib_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := nvl(vn_vl_bc_isenta_icms, 0) * 100;
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := nvl(vn_vl_bc_outra_icms, 0) * 100;
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := 0;
        end if;
        --
        vn_Tot_lin_AnexoV := vn_Tot_lin_AnexoV + 1;
        --
      else
        --
        vn_fase := 30.3;
        --
        vt_bi_tab_AnxV(1)(vn_cfop).VlrCont := vt_bi_tab_AnxV(1)(vn_cfop)
                                             .VlrCont +
                                              (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).BaseCalc := vt_bi_tab_AnxV(1)(vn_cfop)
                                              .BaseCalc +
                                               (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Debito := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Debito +
                                             (nvl(vn_vl_imp_trib_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Isenta := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Isenta +
                                             (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_AnxV(1)(vn_cfop).Outras := vt_bi_tab_AnxV(1)(vn_cfop)
                                            .Outras +
                                             (nvl(vn_vl_bc_outra_icms, 0) * 100);
        --
        if vn_cfop in (5949, 6949, 7949) then
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop)
                                                  .ImportExcl +
                                                   (nvl(vn_vl_contabil, 0) * 100);
        else
          vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl := vt_bi_tab_AnxV(1)(vn_cfop).ImportExcl + 0;
        end if;
        --
      end if;
      --
      vn_fase := 30.4;
      --
      vn_deb_said := vn_deb_said + (nvl(vn_vl_imp_trib_icms, 0) * 100);
      if vn_cfop in (5949, 6949, 7949) then
        vv_gera_obs := 'S';
      end if;
      --
      vn_fase := 30.5;
      --  Registro V.a - Saidas Isentas ou Nao Tributadas - Detalhamento
      if nvl(vn_vl_bc_isenta_icms, 0) > 0 then
        --
        vn_fase := 30.6;
        --
        begin
          vb_achou := vt_bi_tab_AnxVa(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 30.7;
        --
        if not vb_achou then
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVa(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVa(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVa(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVa(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVa(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).IdReg := 'X05A';
          vt_bi_tab_AnxVa(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVa(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVa(1)(vn_cfop).CodIsentas := 501; -- Outras -- aleatório
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_isenta_icms,
                                                      0) * 100;
          --
          vn_Tot_lin_AnexoVa := vn_Tot_lin_AnexoVa + 1;
          --
        else
          --
          vn_fase := 30.8;
          --
          vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVa(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_isenta_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 30.9;
      -- Registro V.b - Outras Saidas - Detalhamento
      vn_fase := 30.10;
      --
      if nvl(vn_vl_bc_outra_icms, 0) > 0 then
        --
        vn_fase := 30.11;
        --
        begin
          vb_achou := vt_bi_tab_AnxVb(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 30.12;
        --
        if not vb_achou then
          --
          vn_fase := 30.13;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVb(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVb(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVb(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVb(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVb(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).IdReg := 'X05B';
          vt_bi_tab_AnxVb(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVb(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVb(1)(vn_cfop).CodOutras := 999; -- Outras - aleatório
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := nvl(vn_vl_bc_outra_icms,
                                                      0) * 100;
          --
          vn_Tot_Lin_AnexoVb := vn_Tot_Lin_AnexoVb + 1;
          --
        else
          --
          vn_fase := 30.14;
          --
          vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida := vt_bi_tab_AnxVb(1)(vn_cfop).VlrSaida +
                                                  (nvl(vn_vl_bc_outra_icms,
                                                                                   0) * 100);
          --
        end if;
        --
      end if;
      --
      vn_fase := 30.15;
      --
      -- Registro V.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
      if vd_mesref >= 201409 and vn_cfop in (5949, 6949, 7949) then
        --
        begin
          vb_achou := vt_bi_tab_AnxVc(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        if not vb_achou then
          --
          -- Anexo I.c - Importâncias Excluídas/Ajustes do VA - Detalhamento
          vt_bi_tab_AnxVc(1)(vn_cfop).Tp := '****';
          vt_bi_tab_AnxVc(1)(vn_cfop).Versao := '08';
          vt_bi_tab_AnxVc(1)(vn_cfop).Diaini := to_char(gt_row_abertura_gia.dt_ini,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Diafim := to_char(gt_row_abertura_gia.dt_fin,
                                                        'DD');
          vt_bi_tab_AnxVc(1)(vn_cfop).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                                            'MMRRRR');
          vt_bi_tab_AnxVc(1)(vn_cfop).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                                                 1,
                                                                 10),
                                                          0),
                                                      10,
                                                      0); -- Inscricao Estadual;
          vt_bi_tab_AnxVc(1)(vn_cfop).Sequencia := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).IdReg := 'X05C';
          vt_bi_tab_AnxVc(1)(vn_cfop).QtdOcor := 1; -- montagem na geração da linha do arquivo
          vt_bi_tab_AnxVc(1)(vn_cfop).Cfop := vn_cfop;
          vt_bi_tab_AnxVc(1)(vn_cfop).Codigo := '005'; -- Soma das colunas bc/is.n.trib/outras (preenchimento automatico)
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_AnxVc(1)(vn_cfop).Espec := ' ';
          --
          vn_Tot_lin_AnexoVc := vn_Tot_lin_AnexoVc + 1;
          --
        else
          --
          vt_bi_tab_AnxVc(1)(vn_cfop).Valor := vt_bi_tab_AnxVc(1)(vn_cfop)
                                              .Valor +
                                               (nvl(vn_vl_contabil, 0) * 100);
          --
        end if;
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 31;
  --  Registro VII - Outras Saidas - Detalhamento
  if nvl(vn_tot_vlimptrib_icmsst_ent, 0) <> 0 or
     nvl(vn_tot_vlimptrib_icmsst_sai, 0) <> 0 then
    --
    vn_fase := 32;
    --
    vt_AnxVII(1).Tp := '****';
    vt_AnxVII(1).Versao := '08';
    vt_AnxVII(1).Diaini := to_char(gt_row_abertura_gia.dt_ini, 'DD');
    vt_AnxVII(1).Diafim := to_char(gt_row_abertura_gia.dt_fin, 'DD');
    vt_AnxVII(1).Referencia := to_char(gt_row_abertura_gia.dt_ini, 'MMRRRR');
    vt_AnxVII(1).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                            1,
                                            10),
                                     0),
                                 10,
                                 0); -- Inscricao Estadual;
    vt_AnxVII(1).Sequencia := 1; -- montagem na geração da linha do arquivo
    vt_AnxVII(1).IdReg := 'X07';
    vt_AnxVII(1).QtdOcor := 1; -- montagem na geração da linha do arquivo
    vt_AnxVII(1).CrEntrST := (nvl(vn_tot_vlimptrib_icmsst_ent, 0) * 100);
    vt_AnxVII(1).OutrosCred := 0;
    vt_AnxVII(1).TextoCred := ' ';
    vt_AnxVII(1).TotCred := 0;
    vt_AnxVII(1).DbSaidaST := (nvl(vn_tot_vlimptrib_icmsst_sai, 0) * 100);
    vt_AnxVII(1).OutroDeb := 0;
    vt_AnxVII(1).TextoOutDeb := ' ';
    vt_AnxVII(1).TotDebito := 0;
    vn_Tot_Lin_AnexoVII := 1;
    --
  end if;
  --
  -- Registro Anexo II - Creditos Rec. por Transferencias  (nao tem no Compliance)
  -- Registro Anexo III - Creditos Presumidos - Detalhamento (nao tem no Compliance)
  -- Registro Anexo IIIa - Creditos Fiscais - ECF - Detalhamento (nao tem no Compliance)
  -- Registro Anexo IV - Creditos Por Compensacao Por Pagto Indevidos  (nao tem no Compliance)
  -- Registro Anexo VI - Discriminacao dos Creditos Transferidos (nao tem no Compliance)
  --
  -- Registro Anexo VIII - Pagamento de ICMS Efetuados no Mes de Referencia
  --
  vn_fase := 33;
  --
  i                    := 0;
  vn_Tot_Lin_AnexoVIII := 0;
  --
  for rec in c_apur_icms loop
    exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
    --
    i := i + 1;
    --
    vn_fase := 34;
    --
    vt_AnxVIII(i).Tp := '****';
    vt_AnxVIII(i).Versao := '08';
    vt_AnxVIII(i).Diaini := to_char(gt_row_abertura_gia.dt_ini, 'DD');
    vt_AnxVIII(i).Diafim := to_char(gt_row_abertura_gia.dt_fin, 'DD');
    vt_AnxVIII(i).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                        'MMRRRR');
    vt_AnxVIII(i).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                             1,
                                             10),
                                      0),
                                  10,
                                  0); -- Inscricao Estadual;
    vt_AnxVIII(i).Sequencia := 1; -- montagem na geração da linha do arquivo
    vt_AnxVIII(i).IdReg := 'X08';
    vt_AnxVIII(i).QtdOcor := 1; -- montagem na geração da linha do arquivo
    vt_AnxVIII(i).PerOper := lpad(to_char(gt_row_abertura_gia.dt_ini, 'DD'),
                                  2,
                                  0) ||
                             lpad(to_char(gt_row_abertura_gia.dt_fin, 'DD'),
                                  2,
                                  0);
    vt_AnxVIII(i).Venc := to_char(rec.dt_vencto_obrig, 'DDMMRRRR');
    vt_AnxVIII(i).IcmsProp := (nvl(rec.vl_icms_recolher, 0) * 100);
    vt_AnxVIII(i).IcmsST := 0;
    vt_AnxVIII(i).CGCCentr := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                              1,
                                              10),
                                       0),
                                   10,
                                   0); -- Inscricao Estadual;
    vt_AnxVIII(i).ICMSProprAmpara := 0;
    vt_AnxVIII(i).ICMSSTribAmpara := 0;
    --
    vn_fase := 35;
    --
    vn_pgto_mes_ref      := vn_pgto_mes_ref +
                            (nvl(rec.vl_icms_recolher, 0) * 100); -- referencia 20 registro principal
    vn_Tot_Lin_AnexoVIII := vn_Tot_Lin_AnexoVIII + 1;
    --
    vn_fase := 36;
    --
  end loop;
  --
  vn_fase := 37;
  --
  -- Registro VIII - Pagamento de ICMS Efetuados no Mes de Referencia
  --
  i := 0;
  --
  for rec in c_apur_icmsst loop
    exit when c_apur_icmsst%notfound or(c_apur_icmsst%notfound) is null;
    --
    vn_fase := 38;
    --
    i := i + 1;
    --
    vt_AnxVIII(i).Tp := '****';
    vt_AnxVIII(i).Versao := '08';
    vt_AnxVIII(i).Diaini := to_char(gt_row_abertura_gia.dt_ini, 'DD');
    vt_AnxVIII(i).Diafim := to_char(gt_row_abertura_gia.dt_fin, 'DD');
    vt_AnxVIII(i).Referencia := to_char(gt_row_abertura_gia.dt_ini,
                                        'MMRRRR');
    vt_AnxVIII(i).IncsEst := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                             1,
                                             10),
                                      0),
                                  10,
                                  0); -- Inscricao Estadual;
    vt_AnxVIII(i).Sequencia := 1; -- montagem na geração da linha do arquivo
    vt_AnxVIII(i).IdReg := 'X08';
    vt_AnxVIII(i).QtdOcor := 1; -- montagem na geração da linha do arquivo
    vt_AnxVIII(i).PerOper := lpad(to_char(gt_row_abertura_gia.dt_ini, 'DD'),
                                  2,
                                  0) ||
                             lpad(to_char(gt_row_abertura_gia.dt_fin, 'DD'),
                                  2,
                                  0);
    vt_AnxVIII(i).Venc := to_char(rec.dt_vencto_obrig, 'DDMMRRRR');
    vt_AnxVIII(i).IcmsProp := 0;
    vt_AnxVIII(i).IcmsST := (nvl(rec.vl_icms_recol_st, 0) * 100);
    vt_AnxVIII(i).CGCCentr := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),
                                              1,
                                              10),
                                       0),
                                   10,
                                   0); -- Inscricao Estadual;
    vt_AnxVIII(i).ICMSProprAmpara := 0;
    vt_AnxVIII(i).ICMSSTribAmpara := 0;
    --
    vn_fase := 39;
    --
    vn_pgto_mes_ref      := vn_pgto_mes_ref +
                            (nvl(rec.vl_icms_recol_st, 0) * 100); -- referencia 20 registro principal
    vn_Tot_Lin_AnexoVIII := vn_Tot_Lin_AnexoVIII + 1;
    --
    vn_fase := 40;
    --
  end loop;
  --
  -- Registro Anexo IX - Discriminacao dos Debitos vencidos na Ococrrencia do FAto Gerador e nao Pagos
  -- Registro Anexo X - Discriminacao ICMS a Recolher, inclusive Saldo Devedor Acumulado
  -- Registro Anexo XIV - Outros Creditos - Detalhamento
  -- Registro Anexo XV - Outros Debitos - Detalhamento
  -- Registro Anexo XVI - Operacaoes Intermunicipais
  --
  vn_fase := 41;
  -- continua preenchimento do Regsitro Principal
  vt_tab_princ(1).CredEntr := vn_cred_entr; -- Anexo I
  vt_tab_princ(1).CredImport := 0;
  vt_tab_princ(1).CredTransf := 0; -- Anexo II
  vt_tab_princ(1).CredPresum := 0; -- Anexo III
  vt_tab_princ(1).CredComp := 0; -- Anexo IV
  vt_tab_princ(1).OutroCredito := 0; -- Anexo XIV
  vt_tab_princ(1).TotCredito := vn_cred_entr;
  vt_tab_princ(1).DebSaida := vn_deb_said; -- Anexo V, Va, Vb
  vt_tab_princ(1).DebImport := 0;
  vt_tab_princ(1).DebRespComp := 0;
  vt_tab_princ(1).DebTransf := 0; -- Anexo VI
  vt_tab_princ(1).DebCompens := 0;
  vt_tab_princ(1).OutroDebito := 0; -- -- Anexo XV
  vt_tab_princ(1).TotDebito := vn_deb_said;
  vt_tab_princ(1).RealizTransST := vv_subst_trib; -- Anexo VII, VIIa, VIIb
  vt_tab_princ(1).SaldoCRTransPerAnt := 0;
  vt_tab_princ(1).SaldoDevAcumTranspPerAnt := 0;
  vt_tab_princ(1).PagtoMesRef := vn_pgto_mes_ref; -- Anexo VIII
  vt_tab_princ(1).DebVencMonOcor := 0; -- Anexo IX
  vt_tab_princ(1).IcmsSubstTribNaoComp := 0; -- Anexo X
  vt_tab_princ(1).IcmsProp := 0;
  vt_tab_princ(1).TotIcmsRecouTransp := 0; -- Anexo X
  vt_tab_princ(1).CRnaoCompTranspMesSeg := 0;
  vt_tab_princ(1).SaldoCRSubstTribMesSeg := 0;
  vt_tab_princ(1).SaldoCredorTranspMesSeg := 0;
  vt_tab_princ(1).SaldoDevedorAcumTranspMesSeg := 0;
  vt_tab_princ(1).FaturMes := nvl(vn_vlr_fatur_mes, 0) * 100;
  --
  vn_fase := 42;
  --
  -- Numeros de empregados
  --
  begin
    select nvl(nro_func, 0), nvl(VL_FOLHA, 0) * 100
      into vt_tab_princ(1).NroEmpUltDia,vt_tab_princ(1).VlrFolhaPagtoMes
      from inf_folha_pgto
     where empresa_id = gt_row_abertura_gia.empresa_id
       and dm_st_proc = 1 -- Validado
       and to_date('01/' || mes || '/' || ano, 'dd/mm/yyyy') =
           gt_row_abertura_gia.dt_ini;
  exception
    when others then
      vt_tab_princ(1).NroEmpUltDia := 0;
      vt_tab_princ(1).VlrFolhaPagtoMes := 0;
  end;
  --
  vn_fase := 43;
  --
  vt_tab_princ(1).OperPrestOrgDestIntEntr := 0;
  vt_tab_princ(1).OperPrestOrgDestIntSaid := 0;
  vt_tab_princ(1).OperPrestOrgDestOutUfEntr := 0;
  vt_tab_princ(1).OperPrestOrgDestOutUfSaid := 0;
  vt_tab_princ(1).OperPrestOrgDestOutPaisEntr := 0;
  vt_tab_princ(1).OperPrestOrgDestOutPaisSaid := 0;
  vt_tab_princ(1).TotEntr := 0;
  vt_tab_princ(1).TotSaida := 0;
  vt_tab_princ(1).PgtoOcorrFatoGeradorIcmsProp := 0; -- Anexo VIII
  vt_tab_princ(1).PgtoOcorrFatoGeradorST := 0; -- Anexo VIII
  vt_tab_princ(1).TranspSaldoDvdIcmsPropProxMes := 'S';
  vt_tab_princ(1).EstoqueInicialPropTrib := 0;
  vt_tab_princ(1).EstoqueInicialIsento := 0;
  vt_tab_princ(1).EstoqueInicialPertEst := 0;
  vt_tab_princ(1).EstoqueInicialPertTerc := 0;
  vt_tab_princ(1).EstoqueFinalPropTrib := 0;
  vt_tab_princ(1).EstoqueFinalPropNaoTrib := 0;
  vt_tab_princ(1).EstoqueFinalPertEst := 0;
  vt_tab_princ(1).EstoqueFinalPertTerc := 0;
  vt_tab_princ(1).TotLinhaAnexoI := vn_Tot_lin_AnexoI;
  vt_tab_princ(1).TotLinhaAnexoIc := vn_Tot_lin_AnexoIc;
  vt_tab_princ(1).TotLinhaAnexoII := vn_Tot_lin_AnexoII;
  vt_tab_princ(1).TotLinhaAnexoIII := vn_Tot_lin_AnexoIII;
  vt_tab_princ(1).TotLinhaAnexoIV := vn_Tot_lin_AnexoIV;
  vt_tab_princ(1).TotLinhaAnexoV := vn_Tot_lin_AnexoV;
  vt_tab_princ(1).TotLinhaAnexoVa := vn_Tot_lin_AnexoVa;
  vt_tab_princ(1).TotLinhaAnexoVb := vn_Tot_Lin_AnexoVb;
  vt_tab_princ(1).TotLinhaAnexoVc := vn_Tot_Lin_AnexoVc;
  vt_tab_princ(1).TotLinhaAnexoVI := vn_Tot_Lin_AnexoVI;
  vt_tab_princ(1).TotLinhaAnexoVII := vn_Tot_Lin_AnexoVII;
  vt_tab_princ(1).TotLinhaAnexoVIIa := vn_Tot_Lin_AnexoVIIa;
  vt_tab_princ(1).TotLinhaAnexoVIIb := vn_Tot_Lin_AnexoVIIb;
  vt_tab_princ(1).TotLinhaAnexoVIII := vn_Tot_Lin_AnexoVIII;
  vt_tab_princ(1).TotLinhaAnexoIX := vn_Tot_Lin_AnexoIX;
  vt_tab_princ(1).TotLinhaAnexoX := vn_Tot_Lin_AnexoX;
  vt_tab_princ(1).TotLinhaAnexoXIV := vn_Tot_Lin_AnexoXIV;
  vt_tab_princ(1).TotLinhaAnexoXV := vn_Tot_Lin_AnexoXV;
  vt_tab_princ(1).TotLinhaAnexoXVI := vn_Tot_Lin_AnexoXVI;
  vt_tab_princ(1).IndicSistProp := 'S';
  vt_tab_princ(1).IndicSintegra := 'S';
  vt_tab_princ(1).IndicInicAtvd := 'N';
  vt_tab_princ(1).IndicFimAtvd := 'N';
  vt_tab_princ(1).FundoAmpara := 0;
  vt_tab_princ(1).PgtoOcorFtGerICMSProprAmpara := 0;
  vt_tab_princ(1).PgtoOcorFtGerICMSSTribAmpara := 0;
  --
  vn_fase := 44;
  --
  -- Observações
  if vv_gera_obs = 'S' then
    -- devido ao Anexo I com CFOP 1949, 2949 e 3949, e/ou ao Anexo V com CFOP 5949, 6949 e 7949.
    vt_tab_obs(1).Obs := '.';
  end if;
  --
  vn_fase := 45;
  --
  -- procedimento monta a estrutura do arquivo da GIA - RS
  pkb_monta_estr_arq_gia_rs;
  --
exception
  when others then
    raise_application_error(-20101,
                            'Erro na pkb_gera_arq_gia_rs fase (' || vn_fase ||
                            '): ' || sqlerrm);
end pkb_gera_arq_gia_rs;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-AL
------------------------------------------------
procedure pkb_gera_arq_gia_al is
  --
  -- Variáveis do controle do vetor
  i pls_integer;
  j pls_integer;
  --
  -- Variáveis do processo
  vn_fase     number := 0;
  vb_achou    boolean;
  vn_cont_reg number := 0;
  vn_seq_ocor number := 0;
  --
  vn_cfop                cfop.cd%type := 0;
  vn_vl_contabil         number(15, 2) := 0;
  vv_cod_st_icms         cod_st.cod_st%type := null;
  vn_vl_base_calc_icms   imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_icms           imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_icms    imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_base_calc_icmsst imp_itemnf.vl_base_calc%type := 0;
  vn_vl_imp_trib_icmsst  imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_icms   imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_icms    imp_itemnf.vl_base_calc%type := 0;
  vv_cod_st_ipi          cod_st.cod_st%type := null;
  vn_vl_base_calc_ipi    imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_ipi            imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_ipi     imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_ipi    imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_ipi     imp_itemnf.vl_base_calc%type := 0;
  vn_ipi_nao_recup       number;
  vn_outro_ipi           number;
  vn_vl_imp_nao_dest_ipi number;
  vn_vl_fcp_icmsst       number;
  vn_aliq_fcp_icms       number;
  vn_vl_fcp_icms         number;
  --
  vn_estado_id           estado.id%type;
  vn_tipocodarq_id       tipo_cod_arq.id%type;
  vv_estadotipocodarq_cd estado_tipo_cod_arq.cd%type;
  vn_ICMSCobradoST       imp_itemnf.vl_imp_trib%type := 0;
  vn_Outros_Produtos     imp_itemnf.vl_imp_trib%type := 0;
  --
  vv_ie_empresa          varchar2(9);
  vv_nome_cont           pessoa.nome%type;
  vv_email_cont          pessoa.email%type;
  vv_cpf_cont            varchar2(11);
  vv_num_crc_cont        contador.crc%type;
  vv_fone_cont           pessoa.fone%type;
  --
  vv_email_empr          pessoa.email%type;
  vv_nome_empr           pessoa.email%type;
  vv_cnpj_empr           varchar2(14);
  --
  vv_email_resp          pessoa.email%type;
  vv_fone_resp           pessoa.fone%type;
  vv_cpf_resp            varchar2(11);
  vv_nome_resp           pessoa.nome%type;
  --
  -- TP00 - Cabeçalho do arquivo
  type tab_tp00 is record(
    tipo         varchar2(2),
    sistema      varchar2(3),
    versao       number(1),
    release      number(1),
    sub_release  varchar2(2),
    reservado    varchar2(6),
    CACEAL       varchar2(9),
    tipo_decl    varchar2(1),
    periodo_decl varchar2(1),
    compet_decl  varchar2(6),
    reservado2   varchar2(10));
  --
  type t_tab_tp00 is table of tab_tp00 index by binary_integer;
  vt_tab_tp00 t_tab_tp00;
  --
  -- TP01 - Endereços de Correio Eletrônico
  type tab_tp01 is record(
    tipo              varchar2(2),
    email_contrib     varchar2(60),
    email_contador    varchar2(60),
    email_responsavel varchar2(60),
    telef_contador    varchar2(15),
    telef_resp_legal  varchar2(15));
  --
  type t_tab_tp01 is table of tab_tp01 index by binary_integer;
  vt_tab_tp01 t_tab_tp01;
  --
  -- TP10 - Identificador da declaração
  type tab_tp10 is record(
    tipo                 varchar2(2),
    CACEAL               varchar2(9),
    cpf_cnpj             varchar2(14),
    razao_social         varchar2(40),
    periodo_inicial      varchar2(6),
    periodo_final        varchar2(6),
    data_inicial         varchar2(8),
    data_final           varchar2(8),
    indicador_mov        varchar2(1),
    faixa_recolhimento   varchar2(2),
    qtd_emp_part_rec_enq number(2),
    crc_contador         varchar2(10),
    cpf_contador         varchar2(11),
    nome_contador        varchar2(40),
    cpf_responsavel      varchar2(11),
    nome_responsavel     varchar2(40),
    ind_encerramento     varchar2(1));
  --
  type t_tab_tp10 is table of tab_tp10 index by binary_integer;
  vt_tab_tp10 t_tab_tp10;
  --
  -- TP21 - Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
  type tab_tp21 is record(
    tipo                        varchar2(2),
    periodo_inicial             varchar2(6),
    periodo_final               varchar2(6),
    CFOP                        number(4),
    VlrContabil                 number(14),
    BaseCalculo                 number(14),
    icms_normal_cred            number(14),
    Isentas_nao_trib            number(14),
    Outras                      number(14),
    VlrContMerc_icms_antecipado number(14));
  --
  type t_tab_tp21 is table of tab_tp21 index by binary_integer;
  type t_bi_tab_tp21 is table of t_tab_tp21 index by binary_integer;
  vt_bi_tab_tp21 t_bi_tab_tp21;
  --
  -- TP22 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
  type tab_tp22 is record(
    tipo                        varchar2(2),
    periodo_inicial             varchar2(6),
    periodo_final               varchar2(6),
    CFOP                        number(4),
    VlrContabil                 number(14),
    BaseCalculo                 number(14),
    icms_normal_deb             number(14),
    Isentas_nao_trib            number(14),
    Outras                      number(14),
    VlrContMerc_icms_antecipado number(14));
  --
  type t_tab_tp22 is table of tab_tp22 index by binary_integer;
  type t_bi_tab_tp22 is table of t_tab_tp22 index by binary_integer;
  vt_bi_tab_tp22 t_bi_tab_tp22;
  --
  -- TP23 - Receitas de Saídas Simplificadas
  type tab_tp23 is record(
    tipo                  varchar2(2),
    periodo_inicial       varchar2(6),
    periodo_final         varchar2(6),
    Outras_rec_periodo    number(14),
    rec_bruta_periodo     number(14),
    rec_base_recolhimento number(14));
  --
  type t_tab_tp23 is table of tab_tp23 index by binary_integer;
  type t_bi_tab_tp23 is table of t_tab_tp23 index by binary_integer;
  vt_bi_tab_tp23 t_bi_tab_tp23;
  --
  -- TP24 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Ttransporte e Comunicação
  type tab_tp24 is record(
    tipo                   varchar2(2),
    periodo_inicial        varchar2(6),
    periodo_final          varchar2(6),
    cfop                   number(4),
    VlrContabil            number(14),
    icms_antecipado        number(14),
    Isentas_nao_trib       number(14),
    icms_suspenso_diferido number(14),
    reducao_base_calculo   number(14),
    vendas_canceladas      number(14));
  --
  type t_tab_tp24 is table of tab_tp24 index by binary_integer;
  type t_bi_tab_tp24 is table of t_tab_tp24 index by binary_integer;
  vt_bi_tab_tp24 t_bi_tab_tp24;
  --
  -- TP25 - Totais de Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação adquiridas exclusivamente
  --        dos estados do Sul e Sudeste, exceto Espírito Santo
  type tab_tp25 is record(
    tipo                        varchar2(2),
    periodo_inicial             varchar2(6),
    periodo_final               varchar2(6),
    tipo_operacao               number(1),
    VlrContabil                 number(14),
    BaseCalculo                 number(14),
    icms_normal_cred            number(14),
    Isentas_nao_trib            number(14),
    outras                      number(14),
    VlrContMerc_icms_antecipado number(14));
  --
  type t_tab_tp25 is table of tab_tp25 index by binary_integer;
  type t_bi_tab_tp25 is table of t_tab_tp25 index by binary_integer;
  vt_bi_tab_tp25 t_bi_tab_tp25;
  --
  -- TP31 - Apuração do ICMS
  type tab_tp31 is record(
    tipo                          varchar2(2),
    periodo_inicial               varchar2(6),
    periodo_final                 varchar2(6),
    saldo_credor_periodo_anterior number(14),
    deducoes                      number(14),
    historico_deducoes            varchar2(100),
    saldo_icms_periodo_seguinte   number(14),
    icms_debitado                 number(14),
    total_outros_debitos          number(14),
    estorno_credito               number(14),
    historico_estorno             varchar2(100),
    total_debito                  number(14),
    icms_creditado                number(14),
    total_outros_creditos         number(14),
    estorno_debito                number(14),
    historico_estorno2            varchar2(100),
    total_credito                 number(14));
  --
  type t_tab_tp31 is table of tab_tp31 index by binary_integer;
  type t_bi_tab_tp31 is table of t_tab_tp31 index by binary_integer;
  vt_bi_tab_tp31 t_bi_tab_tp31;
  --
  -- TP32 - Apuração do ICMS
  type tab_tp32 is record(
    tipo                        varchar2(2),
    periodo_inicial             varchar2(6),
    periodo_final               varchar2(6),
    saldo_icms_periodo_anterior number(14),
    deducoes                    number(14),
    historico_deducoes          varchar2(100),
    saldo_icms_periodo_seguinte number(14),
    icms_debitado               number(14),
    total_outros_debitos        number(14),
    estorno_credito             number(14),
    historico_estorno           varchar2(100),
    total_debito                number(14),
    icms_creditado              number(14),
    total_outros_creditos       number(14),
    estorno_debito              number(14),
    historico_estorno2          varchar2(100),
    total_credito               number(14),
    icms_retido_ST              number(14));
  --
  type t_tab_tp32 is table of tab_tp32 index by binary_integer;
  type t_bi_tab_tp32 is table of t_tab_tp32 index by binary_integer;
  vt_bi_tab_tp32 t_bi_tab_tp32;
  --
  -- TP33 - Detalhamento de Outros Débitos e Outros Créditos do ICMS
  type tab_tp33 is record(
    tipo                      varchar2(2),
    periodo_inicial           varchar2(6),
    periodo_final             varchar2(6),
    transf_cred_acumulados    number(14),
    outras_hipoteses          number(14),
    historico                 varchar2(100),
    icms_antecipado           number(14),
    credito_presumido         number(14),
    credito_presumido21       number(14),
    credito_ativo_imobilizado number(14),
    credito_transferencia     number(14),
    icms_importacao           number(14),
    icms_restituicao          number(14),
    outras_hipoteses2         number(14),
    historico2                varchar2(100));
  --
  type t_tab_tp33 is table of tab_tp33 index by binary_integer;
  type t_bi_tab_tp33 is table of t_tab_tp33 index by binary_integer;
  vt_bi_tab_tp33 t_bi_tab_tp33;
  --
  -- TP34 - Transferência de Créditos
  type tab_tp34 is record(
    tipo              varchar2(2),
    periodo_inicial   varchar2(6),
    periodo_final     varchar2(6),
    IE                varchar2(9),
    num_processo      number(14),
    valor             number(14),
    dispositivo_legal varchar2(100));
  --
  type t_tab_tp34 is table of tab_tp34 index by binary_integer;
  type t_bi_tab_tp34 is table of t_tab_tp34 index by binary_integer;
  vt_bi_tab_tp34 t_bi_tab_tp34;
  --
  -- TP35 - Apuração do ICMS Simplificada
  type tab_tp35 is record(
    tipo               varchar2(2),
    periodo_inicial    varchar2(6),
    periodo_final      varchar2(6),
    debito_icms        number(14),
    credito_presumido1 number(14),
    credito_presumido2 number(14),
    abat_antecip_icms  number(14),
    outras_deducoes    number(14),
    imposto_devido     number(14));
  --
  type t_tab_tp35 is table of tab_tp35 index by binary_integer;
  type t_bi_tab_tp35 is table of t_tab_tp35 index by binary_integer;
  vt_bi_tab_tp35 t_bi_tab_tp35;
  --
  -- TP41 - Obrigações Fiscais Apuradas
  type tab_tp41 is record(
    tipo            varchar2(2),
    periodo_inicial varchar2(6),
    periodo_final   varchar2(6),
    codigo_receita  number(5),
    data_vencimento varchar2(8),
    valor_receita   number(14));
  --
  type t_tab_tp41 is table of tab_tp41 index by binary_integer;
  type t_bi_tab_tp41 is table of t_tab_tp41 index by binary_integer;
  vt_bi_tab_tp41 t_bi_tab_tp41;
  --
  -- TP42 - Obrigações Fiscais Pagas
  type tab_tp42 is record(
    tipo               varchar2(2),
    codigo_receita     varchar2(5),
    data_pagamento     varchar2(8),
    valor_total_pago   number(14),
    agente_arrecadador varchar2(3),
    descricao_agente   varchar2(40));
  --
  type t_tab_tp42 is table of tab_tp42 index by binary_integer;
  type t_bi_tab_tp42 is table of t_tab_tp42 index by binary_integer;
  vt_bi_tab_tp42 t_bi_tab_tp42;
  --
  -- TP43 - Entradas Interestaduais de Produtos com Substituição Tributária - Fornecedor inscrito no CACEAL
  type tab_tp43 is record(
    tipo            varchar2(2),
    CACEAL          varchar2(9),
    BaseCalculo     number(14),
    Valor_icms      number(14),
    devolucoes      number(14),
    icms_devolucoes number(14),
    ressarcimentos  number(14));
  --
  type t_tab_tp43 is table of tab_tp43 index by binary_integer;
  type t_bi_tab_tp43 is table of t_tab_tp43 index by binary_integer;
  vt_bi_tab_tp43 t_bi_tab_tp43;
  --
  -- TP44 - Entradas Interestaduais de Produtos com Substituição Tributária - Fornecedor NÃO inscrito no CACEAL
  type tab_tp44 is record(
    tipo            varchar2(2),
    cnpj            varchar2(14),
    tipo_guia_util  varchar2(1),
    BaseCalculo     number(14),
    Valor_icms      number(14),
    devolucoes      number(14),
    icms_devolucoes number(14));
  --
  type t_tab_tp44 is table of tab_tp44 index by binary_integer;
  type t_bi_tab_tp44 is table of t_tab_tp44 index by binary_integer;
  vt_bi_tab_tp44 t_bi_tab_tp44;
  --
  -- TP45 - Relatório de Notas Fiscais
  type tab_tp45 is record(
    tipo                 varchar2(2),
    num_AIDF             number(11),
    modelo               varchar2(2),
    especie              number(3),
    serie                varchar2(3),
    sub_serie            varchar2(3),
    inicio_intervalo     number(6),
    fim_intervalo        number(6),
    qtd_notas_canceladas number(6));
  --
  type t_tab_tp45 is table of tab_tp45 index by binary_integer;
  type t_bi_tab_tp45 is table of t_tab_tp45 index by binary_integer;
  vt_bi_tab_tp45 t_bi_tab_tp45;
  --
  -- TP46 - Relatório de Notas Fiscais Canceladas
  type tab_tp46 is record(
    tipo             varchar2(2),
    num_AIDF         number(11),
    modelo           varchar2(2),
    especie          number(3),
    serie            varchar2(3),
    sub_serie        varchar2(3),
    inicio_intervalo number(6),
    fim_intervalo    number(6));
  --
  type t_tab_tp46 is table of tab_tp46 index by binary_integer;
  type t_bi_tab_tp46 is table of t_tab_tp46 index by binary_integer;
  vt_bi_tab_tp46 t_bi_tab_tp46;
  --
  -- TP61 - Municípios - Operações Internas de Produtos
  type tab_tp61 is record(
    tipo       varchar2(2),
    municipio  varchar2(6),
    produto    varchar2(3),
    quantidade number(14),
    valor      number(14));
  --
  type t_tab_tp61 is table of tab_tp61 index by binary_integer;
  type t_bi_tab_tp61 is table of t_tab_tp61 index by binary_integer;
  vt_bi_tab_tp61 t_bi_tab_tp61;
  --
  -- TP62 - Municípios - Operações Internas de Serviços
  type tab_tp62 is record(
    tipo               varchar2(2),
    municipio          varchar2(6),
    servico            varchar2(3),
    valor              number(14),
    custo_proporcional number(14));
  --
  type t_tab_tp62 is table of tab_tp62 index by binary_integer;
  type t_bi_tab_tp62 is table of t_tab_tp62 index by binary_integer;
  vt_bi_tab_tp62 t_bi_tab_tp62;
  --
  -- TP63 - Operações realizadas por UF - Entradas
  type tab_tp63 is record(
    tipo                varchar2(2),
    UF                  varchar2(2),
    VlrContabil         number(14),
    BaseCalculo         number(14),
    Outras              number(14),
    icms_ST_petroleo_en number(14),
    icms_ST_outros      number(14));
  --
  type t_tab_tp63 is table of tab_tp63 index by binary_integer;
  type t_bi_tab_tp63 is table of t_tab_tp63 index by binary_integer;
  vt_bi_tab_tp63 t_bi_tab_tp63;
  --
  -- TP64 - Operações realizadas por UF - Saídas
  type tab_tp64 is record(
    tipo                  varchar2(2),
    UF                    varchar2(2),
    VlrContabil           number(14),
    VlrContabil_nao_contr number(14),
    BaseCalculo_contr     number(14),
    BaseCalculo_nao_contr number(14),
    outras                number(14),
    icms_retido_st        number(14));
  --
  type t_tab_tp64 is table of tab_tp64 index by binary_integer;
  type t_bi_tab_tp64 is table of t_tab_tp64 index by binary_integer;
  vt_bi_tab_tp64 t_bi_tab_tp64;
  --
  -- TP65 - Estoque e Balanço
  type tab_tp65 is record(
    tipo                          varchar2(2),
    data_balanco                  varchar2(8),
    mercad_trib_inicial           number(14),
    mercad_trib_final             number(14),
    mercad_isentas_nao_trib_inic  number(14),
    mercad_isentas_nao_trib_final number(14),
    mercad_icms_antec_st_inicial  number(14),
    mercad_icms_antec_st_final    number(14),
    outras_mercadorias_inicial    number(14),
    outras_mercadorias_final      number(14),
    indic_crit_apur_lucro_bruto   varchar2(1),
    indic_sist_inventario         varchar2(1),
    indic_metodo_calc_estoque     varchar2(1),
    numero_empregados             number(5),
    outras_receitas               number(14));
  --
  type t_tab_tp65 is table of tab_tp65 index by binary_integer;
  type t_bi_tab_tp65 is table of t_tab_tp65 index by binary_integer;
  vt_bi_tab_tp65 t_bi_tab_tp65;
  --
  -- TP66 - Dados Contábeis
  type tab_tp66 is record(
    tipo                        varchar2(2),
    ativo_circulante_inic       number(14),
    ativo_circulante_final      number(14),
    disponibilidades_inic       number(14),
    disponibilidades_final      number(14),
    clientes_inicial            number(14),
    clientes_final              number(14),
    outras_contas_receber_inic  number(14),
    outras_contas_receber_final number(14),
    ativo_permanente_inici      number(14),
    ativo_permanente_final      number(14),
    ativo_imobilizado_inic      number(14),
    ativo_imobilizado_final     number(14),
    passivo_circulante_inic     number(14),
    passivo_circulante_final    number(14),
    fornecedores_inic           number(14),
    fornecedores_final          number(14),
    emprestimos_financ_inic     number(14),
    emprestimos_financ_final    number(14),
    outras_contas_pagar_inic    number(14),
    outras_contas_pagar_final   number(14),
    patrimonio_liquido_inic     number(14),
    patrimonio_liquido_final    number(14),
    total_passivo_inic          number(14),
    total_passivo_final         number(14),
    lucro_bruto_inic            number(14),
    lucro_bruto_final           number(14),
    lucro_liquido_inic          number(14),
    lucro_liquido_final         number(14));
  --
  type t_tab_tp66 is table of tab_tp66 index by binary_integer;
  type t_bi_tab_tp66 is table of t_tab_tp66 index by binary_integer;
  vt_bi_tab_tp66 t_bi_tab_tp66;
  --
  -- TP67 - Dados do Consumo de Energia
  type tab_tp67 is record(
    tipo           varchar2(2),
    numero_medidor number(8),
    consumo        number(14));
  --
  type t_tab_tp67 is table of tab_tp67 index by binary_integer;
  type t_bi_tab_tp67 is table of t_tab_tp67 index by binary_integer;
  vt_bi_tab_tp67 t_bi_tab_tp67;
  --
  -- TP68 - Outras Despesas no Período
  type tab_tp68 is record(
    tipo           varchar2(2),
    codigo_despesa varchar2(3),
    valor          number(14));
  --
  type t_tab_tp68 is table of tab_tp68 index by binary_integer;
  type t_bi_tab_tp68 is table of t_tab_tp68 index by binary_integer;
  vt_bi_tab_tp68 t_bi_tab_tp68;
  --
  -- TP90 - Totalizador da DAC
  type tab_tp90 is record(
    tipo           varchar2(2),
    qtde_registros number(6));
  --
  type t_tab_tp90 is table of tab_tp90 index by binary_integer;
  vt_tab_tp90 t_tab_tp90;
  --
  -- Cursores
  cursor c_det_cfop is
    select nf.id notafiscal_id,
           nf.dm_ind_oper, -- 0-Entrada, 1-Saída
           nf.dm_ind_emit,  -- 0-Emissão Própria, 1-Terceiros
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie serie_nf,
           inf.id itemnf_id
      from nota_fiscal nf, 
           mod_fiscal mf, 
           item_nota_fiscal inf
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65')
       and inf.notafiscal_id  = nf.id
     order by 1, 2;
  --
  cursor c_det_cfop_ct is
    select ct.id            conhectransp_id,
           ct.dm_ind_oper,
           ct.pessoa_id,
           ct.dt_hr_emissao dt_emiss,
           ct.nro_ct,
           ct.serie         serie_ct,
           ct.subserie      subserie_ct,
           r.id             ctreganal_id,
           ct.dm_ind_emit
      from conhec_transp ct, 
           ct_reg_anal r
     where ct.empresa_id      = gt_row_abertura_gia.empresa_id
       and ct.dm_st_proc      = 4 -- Autorizada
       and ((ct.dm_ind_emit = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr')between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and ct.dm_arm_cte_terc = 0
       and r.conhectransp_id  = ct.id
     order by 1;
  --
  cursor c_det_cfop_sc is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           r.id           nfregistanalit_id
      from nota_fiscal nf, 
           mod_fiscal mf, 
           nfregist_analit r
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('06', '29', '28', '21', '22')
       and r.notafiscal_id    = nf.id
     order by 1;
  --
  -- Query Cupom Fiscal -- Sempre Saída
  cursor c_det_cfop_ecf is
    select r.id     reducaozecf_id,
           r.dt_doc dt_emiss,
           ramd.id  reganalmovdiaecf_id
      from equip_ecf e, 
           reducao_z_ecf r, 
           reg_anal_mov_dia_ecf ramd
     where e.empresa_id        = gt_row_abertura_gia.empresa_id
       and r.equipecf_id       = e.id
       and r.dm_st_proc        = 1 -- Validada
       and to_date(r.dt_doc, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and ramd.reducaozecf_id = r.id
     order by 1;
  --
  cursor c_movtos is
    select nvl(sum(aa.vl_aj_apur), 0) vl_aj_apur
      from apuracao_icms          ai,
           ajust_apuracao_icms    aa,
           cod_aj_saldo_apur_icms ca
     where ai.empresa_id      = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao     = 3 -- Processada
       and ai.dm_tipo         = 0 -- Real
       and to_date(ai.dt_inicio, 'dd/mm/rrrr') >= gt_row_abertura_gia.dt_ini
       and to_date(ai.dt_fim, 'dd/mm/rrrr')    <= gt_row_abertura_gia.dt_fin
       and aa.apuracaoicms_id = ai.id
       and ca.id              = aa.codajsaldoapuricms_id
       and ca.dm_apur         = 0 -- 0-ICMS, 1-ICMS-ST
       and ca.dm_util         = 2; -- Outros créditos
  --
  cursor c_apur_icms is
    select ai.*
      from apuracao_icms ai
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and to_date(ai.dt_inicio, 'dd/mm/rrrr') >= gt_row_abertura_gia.dt_ini
       and to_date(ai.dt_fim, 'dd/mm/rrrr')    <= gt_row_abertura_gia.dt_fin;
  --
  -- Limpar os vetores
  procedure pkb_limpa_vetor_al is
    --
  begin
    --
    vt_tab_tp00.delete;
    vt_tab_tp01.delete;
    vt_tab_tp10.delete;
    vt_bi_tab_tp21.delete;
    vt_bi_tab_tp22.delete;
    vt_bi_tab_tp23.delete;
    vt_bi_tab_tp24.delete;
    vt_bi_tab_tp25.delete;
    vt_bi_tab_tp31.delete;
    vt_bi_tab_tp32.delete;
    vt_bi_tab_tp33.delete;
    vt_bi_tab_tp34.delete;
    vt_bi_tab_tp35.delete;
    vt_bi_tab_tp41.delete;
    vt_bi_tab_tp42.delete;
    vt_bi_tab_tp43.delete;
    vt_bi_tab_tp44.delete;
    vt_bi_tab_tp45.delete;
    vt_bi_tab_tp46.delete;
    vt_bi_tab_tp61.delete;
    vt_bi_tab_tp62.delete;
    vt_bi_tab_tp63.delete;
    vt_bi_tab_tp64.delete;
    vt_bi_tab_tp65.delete;
    vt_bi_tab_tp66.delete;
    vt_bi_tab_tp67.delete;
    vt_bi_tab_tp68.delete;
    vt_tab_tp90.delete;
    --
  end pkb_limpa_vetor_al;
  --
  -- procedimento monta a estrutura do arquivo da GIA-AL
  procedure pkb_monta_estr_arq_gia_al is
    --
    vn_fase_arq  number := 0;
    vn_qtde_tp21 number := 0;
    vn_qtde_tp22 number := 0;
    vn_qtde_tp23 number := 0;
    vn_qtde_tp24 number := 0;
    vn_qtde_tp25 number := 0;
    vn_qtde_tp31 number := 0;
    vn_qtde_tp32 number := 0;
    vn_qtde_tp33 number := 0;
    vn_qtde_tp34 number := 0;
    vn_qtde_tp35 number := 0;
    vn_qtde_tp41 number := 0;
    vn_qtde_tp42 number := 0;
    vn_qtde_tp43 number := 0;
    vn_qtde_tp44 number := 0;
    vn_qtde_tp45 number := 0;
    vn_qtde_tp46 number := 0;
    vn_qtde_tp61 number := 0;
    vn_qtde_tp62 number := 0;
    vn_qtde_tp63 number := 0;
    vn_qtde_tp64 number := 0;
    vn_qtde_tp65 number := 0;
    vn_qtde_tp66 number := 0;
    vn_qtde_tp67 number := 0;
    vn_qtde_tp68 number := 0;
    --
  begin
    --
    vn_fase_arq := 1;
    --
    -- TP00 - Cabeçalho do arquivo
    if nvl(vt_tab_tp00.count, 0) > 0 then
      --
      vn_fase_arq := 1.1;
      --
      i := nvl(vt_tab_tp00.first, 0);
      --
      loop
        --
        vn_fase_arq := 1.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 1.3;
        --
        gl_conteudo := vt_tab_tp00(i).tipo;
        gl_conteudo := gl_conteudo || vt_tab_tp00(i).sistema;
        gl_conteudo := gl_conteudo || vt_tab_tp00(i).versao;
        gl_conteudo := gl_conteudo || vt_tab_tp00(i).release;
        gl_conteudo := gl_conteudo || vt_tab_tp00(i).sub_release;
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).reservado, 6, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).caceal, 9, '0');
        gl_conteudo := gl_conteudo || vt_tab_tp00(i).tipo_decl;
        gl_conteudo := gl_conteudo || vt_tab_tp00(i).periodo_decl;
        gl_conteudo := gl_conteudo || vt_tab_tp00(i).compet_decl;
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).reservado2, 10, ' ');
        --
        vn_fase_arq := 1.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '00',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 1.5;
        --
        if i = vt_tab_tp00.last then
          exit;
        else
          i := vt_tab_tp00.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP00 - Cabeçalho do arquivo
    --
    vn_fase_arq := 2;
    --
    -- TP01 - Endereços de Correio Eletrônico
    if nvl(vt_tab_tp01.count, 0) > 0 then
      --
      vn_fase_arq := 2.1;
      --
      i := nvl(vt_tab_tp01.first, 0);
      --
      loop
        --
        vn_fase_arq := 2.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 2.3;
        --
        gl_conteudo := vt_tab_tp01(i).tipo;
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp01(i).email_contrib, ' '), 60, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp01(i).email_contador, ' '), 60, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp01(i).email_responsavel, ' '), 60, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp01(i).telef_contador, ' '), 15, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp01(i).telef_resp_legal, ' '), 15, ' ');
        --
        vn_fase_arq := 2.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '01',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 2.5;
        --
        if i = vt_tab_tp01.last then
          exit;
        else
          i := vt_tab_tp01.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP01 - Endereços de Correio Eletrônico
    --
    vn_fase_arq := 3;
    --
    -- TP10 - Identificador da declaração
    if nvl(vt_tab_tp10.count, 0) > 0 then
      --
      vn_fase_arq := 3.1;
      --
      i := nvl(vt_tab_tp10.first, 0);
      --
      loop
        --
        vn_fase_arq := 3.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 3.3;
        --
        gl_conteudo := vt_tab_tp10(i).tipo;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).caceal, 9, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).cpf_cnpj, 14, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp10(i).razao_social, 40, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).periodo_inicial, 6, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).periodo_final, 6, ' ');
        gl_conteudo := gl_conteudo || vt_tab_tp10(i).data_inicial;
        gl_conteudo := gl_conteudo || vt_tab_tp10(i).data_final;
        gl_conteudo := gl_conteudo || vt_tab_tp10(i).indicador_mov;
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).faixa_recolhimento, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).qtd_emp_part_rec_enq, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).crc_contador, 10, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).cpf_contador, 11, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp10(i).nome_contador, 40, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp10(i).cpf_responsavel, 11, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp10(i).nome_responsavel, 40, ' ');
        gl_conteudo := gl_conteudo || vt_tab_tp10(i).ind_encerramento;
        --
        vn_fase_arq := 3.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '10',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 3.5;
        --
        if i = vt_tab_tp10.last then
          exit;
        else
          i := vt_tab_tp10.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP10 - Identificador da declaração
    --
    vn_fase_arq := 4;
    --
    -- TP21 - Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transportes e Comunicação
    if nvl(vt_bi_tab_tp21.count, 0) > 0 then
      --
      vn_fase_arq := 4.1;
      --
      i := nvl(vt_bi_tab_tp21.first, 0);
      --
      loop
        --
        vn_fase_arq := 4.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 4.3;
        --
        begin
          vn_qtde_tp21 := vt_bi_tab_tp21(i).count;
        exception
          when others then
            vn_qtde_tp21 := 0;
        end;
        --
        vn_fase_arq := 4.4;
        --
        if nvl(vn_qtde_tp21, 0) > 0 then
          --
          vn_fase_arq := 4.5;
          --
          j := vt_bi_tab_tp21(i).first;
          --
          vn_fase_arq := 4.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 4.7;
            --
            gl_conteudo := vt_bi_tab_tp21(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp21(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp21(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i)(j).CFOP, 0), 4, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i)(j).VlrContabil, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i)(j).BaseCalculo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i)(j).icms_normal_cred, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i)(j).Isentas_nao_trib, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i)(j).Outras, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i)(j).VlrContMerc_icms_antecipado, 0), 14, '0');
            --
            vn_fase_arq := 4.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '21',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 4.9;
            --
            if j = vt_bi_tab_tp21(i).last then
              exit;
            else
              j := vt_bi_tab_tp21(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 4.10;
        --
        if i = vt_bi_tab_tp21.last then
          exit;
        else
          i := vt_bi_tab_tp21.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP21 - Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
    --
    vn_fase_arq := 5;
    --
    -- TP22 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
    if nvl(vt_bi_tab_tp22.count, 0) > 0 then
      --
      vn_fase_arq := 5.1;
      --
      i := nvl(vt_bi_tab_tp22.first, 0);
      --
      loop
        --
        vn_fase_arq := 5.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 5.3;
        --
        begin
          vn_qtde_tp22 := vt_bi_tab_tp22(i).count;
        exception
          when others then
            vn_qtde_tp22 := 0;
        end;
        --
        vn_fase_arq := 5.4;
        --
        if nvl(vn_qtde_tp22, 0) > 0 then
          --
          vn_fase_arq := 5.5;
          --
          j := vt_bi_tab_tp22(i).first;
          --
          vn_fase_arq := 5.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 5.7;
            --
            gl_conteudo := vt_bi_tab_tp22(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp22(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp22(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).CFOP, 0), 4, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).VlrContabil, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).BaseCalculo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).icms_normal_deb, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).Isentas_nao_trib, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).Outras, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).VlrContMerc_icms_antecipado, 0), 14, '0');
            --
            vn_fase_arq := 5.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '22',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 5.9;
            --
            if j = vt_bi_tab_tp22(i).last then
              exit;
            else
              j := vt_bi_tab_tp22(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 5.10;
        --
        if i = vt_bi_tab_tp22.last then
          exit;
        else
          i := vt_bi_tab_tp22.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP22 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
    --
    vn_fase_arq := 6;
    --
    -- TP23 - Receitas de Saídas Simplificadas
    if nvl(vt_bi_tab_tp23.count, 0) > 0 then
      --
      vn_fase_arq := 6.1;
      --
      i := nvl(vt_bi_tab_tp23.first, 0);
      --
      loop
        --
        vn_fase_arq := 6.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 6.3;
        --
        begin
          vn_qtde_tp23 := vt_bi_tab_tp23(i).count;
        exception
          when others then
            vn_qtde_tp23 := 0;
        end;
        --
        vn_fase_arq := 6.4;
        --
        if nvl(vn_qtde_tp23, 0) > 0 then
          --
          vn_fase_arq := 6.5;
          --
          j := vt_bi_tab_tp23(i).first;
          --
          vn_fase_arq := 6.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 6.7;
            --
            gl_conteudo := vt_bi_tab_tp23(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp23(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp23(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).Outras_rec_periodo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).rec_bruta_periodo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).rec_base_recolhimento, 0), 14, '0');
            --
            vn_fase_arq := 6.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '23',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 6.9;
            --
            if j = vt_bi_tab_tp23(i).last then
              exit;
            else
              j := vt_bi_tab_tp23(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 6.10;
        --
        if i = vt_bi_tab_tp23.last then
          exit;
        else
          i := vt_bi_tab_tp23.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP23 - Receitas de Saídas Simplificadas
    --
    vn_fase_arq := 7;
    --
    -- TP24 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
    if nvl(vt_bi_tab_tp24.count, 0) > 0 then
      --
      vn_fase_arq := 7.1;
      --
      i := nvl(vt_bi_tab_tp24.first, 0);
      --
      loop
        --
        vn_fase_arq := 7.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 7.3;
        --
        begin
          vn_qtde_tp24 := vt_bi_tab_tp24(i).count;
        exception
          when others then
            vn_qtde_tp24 := 0;
        end;
        --
        vn_fase_arq := 7.4;
        --
        if nvl(vn_qtde_tp24, 0) > 0 then
          --
          vn_fase_arq := 7.5;
          --
          j := vt_bi_tab_tp24(i).first;
          --
          vn_fase_arq := 7.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 7.7;
            --
            gl_conteudo := vt_bi_tab_tp24(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp24(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp24(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp24(i)(j).CFOP, 0), 4, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp24(i)(j).VlrContabil, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp24(i)(j).icms_antecipado, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp24(i)(j).isentas_nao_trib, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp24(i)(j).icms_suspenso_diferido, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp24(i)(j).reducao_base_calculo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp24(i)(j).vendas_canceladas, 0), 14, '0');
            --
            vn_fase_arq := 7.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '24',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 7.9;
            --
            if j = vt_bi_tab_tp24(i).last then
              exit;
            else
              j := vt_bi_tab_tp24(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 7.10;
        --
        if i = vt_bi_tab_tp24.last then
          exit;
        else
          i := vt_bi_tab_tp24.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP24 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
    --
    vn_fase_arq := 8;
    --
    -- TP25 - Totais de Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
    --        adquiridas exclusivamente dos estados do Sul e Sudeste, exceto Espírito Santo
    if nvl(vt_bi_tab_tp25.count, 0) > 0 then
      --
      vn_fase_arq := 8.1;
      --
      i := nvl(vt_bi_tab_tp25.first, 0);
      --
      loop
        --
        vn_fase_arq := 8.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 8.3;
        --
        begin
          vn_qtde_tp25 := vt_bi_tab_tp25(i).count;
        exception
          when others then
            vn_qtde_tp25 := 0;
        end;
        --
        vn_fase_arq := 8.4;
        --
        if nvl(vn_qtde_tp25, 0) > 0 then
          --
          vn_fase_arq := 8.5;
          --
          j := vt_bi_tab_tp25(i).first;
          --
          vn_fase_arq := 8.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 8.7;
            --
            gl_conteudo := vt_bi_tab_tp25(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp25(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp25(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || vt_bi_tab_tp25(i)(j).tipo_operacao;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp25(i)(j).VlrContabil, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp25(i)(j).BaseCalculo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp25(i)(j).icms_normal_cred, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp25(i)(j).Isentas_nao_trib, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp25(i)(j).Outras, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp25(i)(j).VlrContMerc_icms_antecipado, 0), 14, '0');
            --
            vn_fase_arq := 8.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '25',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 8.9;
            --
            if j = vt_bi_tab_tp25(i).last then
              exit;
            else
              j := vt_bi_tab_tp25(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 8.10;
        --
        if i = vt_bi_tab_tp25.last then
          exit;
        else
          i := vt_bi_tab_tp25.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP25 - Totais de Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
    --        adquiridas exclusivamente dos estados do Sul e Sudeste, exceto Espírito Santo.
    --
    vn_fase_arq := 9;
    --
    -- TP31 - Apuração do ICMS
    if nvl(vt_bi_tab_tp31.count, 0) > 0 then
      --
      vn_fase_arq := 9.1;
      --
      i := nvl(vt_bi_tab_tp31.first, 0);
      --
      loop
        --
        vn_fase_arq := 9.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 9.3;
        --
        begin
          vn_qtde_tp31 := vt_bi_tab_tp31(i).count;
        exception
          when others then
            vn_qtde_tp31 := 0;
        end;
        --
        vn_fase_arq := 9.4;
        --
        if nvl(vn_qtde_tp31, 0) > 0 then
          --
          vn_fase_arq := 9.5;
          --
          j := vt_bi_tab_tp31(i).first;
          --
          vn_fase_arq := 9.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 9.7;
            --
            gl_conteudo := vt_bi_tab_tp31(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp31(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp31(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp31(i)(j).saldo_credor_periodo_anterior, 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).deducoes, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp31(i)(j).historico_deducoes, 0), 100, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).saldo_icms_periodo_seguinte, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).icms_debitado, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).total_outros_debitos, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).estorno_credito, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp31(i)(j).historico_estorno, 0), 100, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).total_debito, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).icms_creditado, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).total_outros_creditos, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).estorno_debito, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp31(i)(j).historico_estorno2, 0), 100, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp31(i)(j).total_credito, 0), 14, '0');
            --
            vn_fase_arq := 9.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '31',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 9.9;
            --
            if j = vt_bi_tab_tp31(i).last then
              exit;
            else
              j := vt_bi_tab_tp31(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 9.10;
        --
        if i = vt_bi_tab_tp31.last then
          exit;
        else
          i := vt_bi_tab_tp31.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP31 - Apuração do ICMS
    --
    vn_fase_arq := 10;
    --
    -- TP32 - Apuração do ICMS
    if nvl(vt_bi_tab_tp32.count, 0) > 0 then
      --
      vn_fase_arq := 10.1;
      --
      i := nvl(vt_bi_tab_tp32.first, 0);
      --
      loop
        --
        vn_fase_arq := 10.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 10.3;
        --
        begin
          vn_qtde_tp32 := vt_bi_tab_tp32(i).count;
        exception
          when others then
            vn_qtde_tp32 := 0;
        end;
        --
        vn_fase_arq := 10.4;
        --
        if nvl(vn_qtde_tp32, 0) > 0 then
          --
          vn_fase_arq := 10.5;
          --
          j := vt_bi_tab_tp32(i).first;
          --
          vn_fase_arq := 10.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 10.7;
            --
            gl_conteudo := vt_bi_tab_tp32(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp32(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp32(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp32(i)(j).saldo_icms_periodo_anterior, 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).deducoes, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp32(i)(j).historico_deducoes, 0), 100, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).saldo_icms_periodo_seguinte, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).icms_debitado, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).total_outros_debitos, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).estorno_credito, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp32(i)(j).historico_estorno, 0), 100, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).total_debito, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).icms_creditado, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).total_outros_creditos, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).estorno_debito, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp32(i)(j).historico_estorno2, 0), 100, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).total_credito, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp32(i)(j).icms_retido_st, 0), 14, '0');
            --
            vn_fase_arq := 10.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '32',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 10.9;
            --
            if j = vt_bi_tab_tp32(i).last then
              exit;
            else
              j := vt_bi_tab_tp32(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 10.10;
        --
        if i = vt_bi_tab_tp32.last then
          exit;
        else
          i := vt_bi_tab_tp32.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP32 - Apuração do ICMS
    --
    vn_fase_arq := 11;
    --
    -- TP33 - Detalhamento de Outros Débitos e Outros Créditos do ICMS
    if nvl(vt_bi_tab_tp33.count, 0) > 0 then
      --
      vn_fase_arq := 11.1;
      --
      i := nvl(vt_bi_tab_tp33.first, 0);
      --
      loop
        --
        vn_fase_arq := 11.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 11.3;
        --
        begin
          vn_qtde_tp33 := vt_bi_tab_tp33(i).count;
        exception
          when others then
            vn_qtde_tp33 := 0;
        end;
        --
        vn_fase_arq := 11.4;
        --
        if nvl(vn_qtde_tp33, 0) > 0 then
          --
          vn_fase_arq := 11.5;
          --
          j := vt_bi_tab_tp33(i).first;
          --
          vn_fase_arq := 11.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 11.7;
            --
            gl_conteudo := vt_bi_tab_tp33(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp33(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp33(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp33(i)(j).transf_cred_acumulados, 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).outras_hipoteses, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp33(i)(j).historico, 0), 100, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).icms_antecipado, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).credito_presumido, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).credito_presumido21, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).credito_ativo_imobilizado, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).credito_transferencia, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).icms_importacao, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).icms_restituicao, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp33(i)(j).outras_hipoteses, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp33(i)(j).historico2, 0), 100, ' ');
            --
            vn_fase_arq := 11.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '33',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 11.9;
            --
            if j = vt_bi_tab_tp33(i).last then
              exit;
            else
              j := vt_bi_tab_tp33(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 11.10;
        --
        if i = vt_bi_tab_tp33.last then
          exit;
        else
          i := vt_bi_tab_tp33.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP33 - Detalhamento de Outros Débitos e Outros Créditos do ICMS
    --
    vn_fase_arq := 12;
    --
    -- TP34 - Transferências de Créditos
    if nvl(vt_bi_tab_tp34.count, 0) > 0 then
      --
      vn_fase_arq := 12.1;
      --
      i := nvl(vt_bi_tab_tp34.first, 0);
      --
      loop
        --
        vn_fase_arq := 12.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 12.3;
        --
        begin
          vn_qtde_tp34 := vt_bi_tab_tp34(i).count;
        exception
          when others then
            vn_qtde_tp34 := 0;
        end;
        --
        vn_fase_arq := 12.4;
        --
        if nvl(vn_qtde_tp34, 0) > 0 then
          --
          vn_fase_arq := 12.5;
          --
          j := vt_bi_tab_tp34(i).first;
          --
          vn_fase_arq := 12.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 12.7;
            --
            gl_conteudo := vt_bi_tab_tp34(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp34(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp34(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp34(i)(j).IE, 9, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp34(i)(j).num_processo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp34(i)(j).valor, 0), 14, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp34(i)(j).dispositivo_legal, 0), 100, ' ');
            --
            vn_fase_arq := 12.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '34',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 12.9;
            --
            if j = vt_bi_tab_tp34(i).last then
              exit;
            else
              j := vt_bi_tab_tp34(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 12.10;
        --
        if i = vt_bi_tab_tp34.last then
          exit;
        else
          i := vt_bi_tab_tp34.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP34 - Transferências de Créditos
    --
    vn_fase_arq := 13;
    --
    -- TP35 - Apuração do ICMS Simplificada
    if nvl(vt_bi_tab_tp35.count, 0) > 0 then
      --
      vn_fase_arq := 13.1;
      --
      i := nvl(vt_bi_tab_tp35.first, 0);
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 13.2;
        --
        begin
          vn_qtde_tp35 := vt_bi_tab_tp35(i).count;
        exception
          when others then
            vn_qtde_tp35 := 0;
        end;
        --
        vn_fase_arq := 13.3;
        --
        if nvl(vn_qtde_tp35, 0) > 0 then
          --
          vn_fase_arq := 13.4;
          --
          j := vt_bi_tab_tp35(i).first;
          --
          vn_fase_arq := 13.5;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 13.6;
            --
            gl_conteudo := vt_bi_tab_tp35(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp35(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp35(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp35(i)(j).debito_icms, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp35(i)(j).credito_presumido1, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp35(i)(j).credito_presumido2, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp35(i)(j).abat_antecip_icms, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp35(i)(j).outras_deducoes, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp35(i)(j).imposto_devido, 0), 14, '0');
            --
            vn_fase_arq := 13.7;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '35',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 13.8;
            --
            if j = vt_bi_tab_tp35(i).last then
              exit;
            else
              j := vt_bi_tab_tp35(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 13.9;
        --
        if i = vt_bi_tab_tp35.last then
          exit;
        else
          i := vt_bi_tab_tp35.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP35 - Apuração do ICMS Simplificada
    --
    vn_fase_arq := 14;
    --
    -- TP41 - Obrigações Fiscais Apuradas
    if nvl(vt_bi_tab_tp41.count, 0) > 0 then
      --
      vn_fase_arq := 14.1;
      --
      i := nvl(vt_bi_tab_tp41.first, 0);
      --
      loop
        --
        vn_fase_arq := 14.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 14.3;
        --
        begin
          vn_qtde_tp41 := vt_bi_tab_tp41(i).count;
        exception
          when others then
            vn_qtde_tp41 := 0;
        end;
        --
        vn_fase_arq := 14.4;
        --
        if nvl(vn_qtde_tp41, 0) > 0 then
          --
          vn_fase_arq := 14.5;
          --
          j := vt_bi_tab_tp41(i).first;
          --
          vn_fase_arq := 14.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 14.7;
            --
            gl_conteudo := vt_bi_tab_tp41(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp41(i)(j).periodo_inicial, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp41(i)(j).periodo_final, 6, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp41(i)(j).codigo_receita, 5, '0');
            gl_conteudo := gl_conteudo || vt_bi_tab_tp41(i)(j).data_vencimento;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp41(i)(j).valor_receita, 14, '0');
            --
            vn_fase_arq := 14.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '41',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 14.9;
            --
            if j = vt_bi_tab_tp41(i).last then
              exit;
            else
              j := vt_bi_tab_tp41(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 14.10;
        --
        if i = vt_bi_tab_tp41.last then
          exit;
        else
          i := vt_bi_tab_tp41.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP41 - Obrigações Fiscais Apuradas
    --
    vn_fase_arq := 15;
    --
    -- TP42 - Obrigações Fiscais Pagas
    if nvl(vt_bi_tab_tp42.count, 0) > 0 then
      --
      vn_fase_arq := 15.1;
      --
      i := nvl(vt_bi_tab_tp42.first, 0);
      --
      loop
        --
        vn_fase_arq := 15.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 15.3;
        --
        begin
          vn_qtde_tp42 := vt_bi_tab_tp42(i).count;
        exception
          when others then
            vn_qtde_tp42 := 0;
        end;
        --
        vn_fase_arq := 15.4;
        --
        if nvl(vn_qtde_tp42, 0) > 0 then
          --
          vn_fase_arq := 15.5;
          --
          j := vt_bi_tab_tp42(i).first;
          --
          vn_fase_arq := 15.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 15.7;
            --
            gl_conteudo := vt_bi_tab_tp42(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp42(i)(j).codigo_receita, 5, '0');
            gl_conteudo := gl_conteudo || vt_bi_tab_tp42(i)(j).data_pagamento;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp42(i)(j).valor_total_pago, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp42(i)(j).agente_arrecadador, 0), 3, '0');
            gl_conteudo := gl_conteudo || rpad(vt_bi_tab_tp42(i)(j).descricao_agente, 40, ' ');
            --
            vn_fase_arq := 15.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '42',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 15.9;
            --
            if j = vt_bi_tab_tp42(i).last then
              exit;
            else
              j := vt_bi_tab_tp42(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 15.10;
        --
        if i = vt_bi_tab_tp42.last then
          exit;
        else
          i := vt_bi_tab_tp42.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP42 - Obrigações Fiscais Pagas
    --
    vn_fase_arq := 16;
    --
    -- TP43 - Entradas Interestaduais de Produtos com Substituição Tributária - Fornecedor inscrito no CACEAL
    if nvl(vt_bi_tab_tp43.count, 0) > 0 then
      --
      vn_fase_arq := 16.1;
      --
      i := nvl(vt_bi_tab_tp43.first, 0);
      --
      loop
        --
        vn_fase_arq := 16.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 16.3;
        --
        begin
          vn_qtde_tp43 := vt_bi_tab_tp43(i).count;
        exception
          when others then
            vn_qtde_tp43 := 0;
        end;
        --
        vn_fase_arq := 16.4;
        --
        if nvl(vn_qtde_tp43, 0) > 0 then
          --
          vn_fase_arq := 16.5;
          --
          j := vt_bi_tab_tp43(i).first;
          --
          vn_fase_arq := 16.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 16.7;
            --
            gl_conteudo := vt_bi_tab_tp43(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp43(i)(j).CACEAL, 9, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp43(i)(j).BaseCalculo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp43(i)(j).Valor_icms, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp43(i)(j).devolucoes, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp43(i)(j).icms_devolucoes, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp43(i)(j).ressarcimentos, 0), 14, '0');
            --
            vn_fase_arq := 16.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '43',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 16.9;
            --
            if j = vt_bi_tab_tp43(i).last then
              exit;
            else
              j := vt_bi_tab_tp43(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 16.10;
        --
        if i = vt_bi_tab_tp43.last then
          exit;
        else
          i := vt_bi_tab_tp43.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP43 - Entradas Interestaduais de Produtos com Substituição Tributária - Fornecedor inscrito no CACEAL
    --
    vn_fase_arq := 17;
    --
    -- TP44 - Entradas Interestaduais de Produtos com Substituição Tributária - Fornecedor NÃO inscrito no CACEAL
    if nvl(vt_bi_tab_tp44.count, 0) > 0 then
      --
      vn_fase_arq := 17.1;
      --
      i := nvl(vt_bi_tab_tp44.first, 0);
      --
      loop
        --
        vn_fase_arq := 17.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 17.3;
        --
        begin
          vn_qtde_tp44 := vt_bi_tab_tp44(i).count;
        exception
          when others then
            vn_qtde_tp44 := 0;
        end;
        --
        vn_fase_arq := 17.4;
        --
        if nvl(vn_qtde_tp44, 0) > 0 then
          --
          vn_fase_arq := 17.5;
          --
          j := vt_bi_tab_tp44(i).first;
          --
          vn_fase_arq := 17.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 17.7;
            --
            gl_conteudo := vt_bi_tab_tp44(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp44(i)(j).cnpj, 0), 14, '0');
            gl_conteudo := gl_conteudo || vt_bi_tab_tp44(i)(j).tipo_guia_util;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp44(i)(j).BaseCalculo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp44(i)(j).valor_icms, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp44(i)(j).devolucoes, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp44(i)(j).icms_devolucoes, 0), 14, '0');
            --
            vn_fase_arq := 17.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '44',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 17.9;
            --
            if j = vt_bi_tab_tp44(i).last then
              exit;
            else
              j := vt_bi_tab_tp44(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 17.10;
        --
        if i = vt_bi_tab_tp44.last then
          exit;
        else
          i := vt_bi_tab_tp44.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP44 - Entradas Interestaduais de Produtos com Substituição Tributária - Fornecedor NÃO inscrito no CACEAL
    --
    vn_fase_arq := 18;
    --
    -- TP45 - Relatório de Notas Fiscais
    if nvl(vt_bi_tab_tp45.count, 0) > 0 then
      --
      vn_fase_arq := 18.1;
      --
      i := nvl(vt_bi_tab_tp45.first, 0);
      --
      loop
        --
        vn_fase_arq := 18.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 18.3;
        --
        begin
          vn_qtde_tp45 := vt_bi_tab_tp45(i).count;
        exception
          when others then
            vn_qtde_tp45 := 0;
        end;
        --
        vn_fase_arq := 18.4;
        --
        if nvl(vn_qtde_tp45, 0) > 0 then
          --
          vn_fase_arq := 18.5;
          --
          j := vt_bi_tab_tp45(i).first;
          --
          vn_fase_arq := 18.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 18.7;
            --
            gl_conteudo := vt_bi_tab_tp45(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp45(i)(j).num_aidf, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp45(i)(j).modelo, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp45(i)(j).especie, 3, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp45(i)(j).serie, 3, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp45(i)(j).sub_serie, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp45(i)(j).inicio_intervalo, 6, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp45(i)(j).fim_intervalo, 6, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp45(i)(j).qtd_notas_canceladas, 6, '0');
            --
            vn_fase_arq := 18.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '45',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 18.9;
            --
            if j = vt_bi_tab_tp45(i).last then
              exit;
            else
              j := vt_bi_tab_tp45(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 18.10;
        --
        if i = vt_bi_tab_tp45.last then
          exit;
        else
          i := vt_bi_tab_tp45.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP45 - Relatório de Notas Fiscais
    --
    vn_fase_arq := 19;
    --
    -- TP46 - Notas Fiscais Canceladas
    if nvl(vt_bi_tab_tp46.count, 0) > 0 then
      --
      vn_fase_arq := 19.1;
      --
      i := nvl(vt_bi_tab_tp46.first, 0);
      --
      loop
        --
        vn_fase_arq := 19.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 19.3;
        --
        begin
          vn_qtde_tp46 := vt_bi_tab_tp46(i).count;
        exception
          when others then
            vn_qtde_tp46 := 0;
        end;
        --
        vn_fase_arq := 19.4;
        --
        if nvl(vn_qtde_tp46, 0) > 0 then
          --
          vn_fase_arq := 19.5;
          --
          j := vt_bi_tab_tp46(i).first;
          --
          vn_fase_arq := 19.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 19.7;
            --
            gl_conteudo := vt_bi_tab_tp46(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp46(i)(j).num_aidf, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp46(i)(j).modelo, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp46(i)(j).especie, 3, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp46(i)(j).serie, 3, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp46(i)(j).sub_serie, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp46(i)(j).inicio_intervalo, 6, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp46(i)(j).fim_intervalo, 6, '0');
            --
            vn_fase_arq := 19.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '46',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 19.9;
            --
            if j = vt_bi_tab_tp46(i).last then
              exit;
            else
              j := vt_bi_tab_tp46(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 19.10;
        --
        if i = vt_bi_tab_tp46.last then
          exit;
        else
          i := vt_bi_tab_tp46.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP46 - Relatório de Notas Fiscais
    --
    vn_fase_arq := 20;
    --
    -- TP61 - Municípios - Operações Internas de Produtos
    if nvl(vt_bi_tab_tp61.count, 0) > 0 then
      --
      vn_fase_arq := 20.1;
      --
      i := nvl(vt_bi_tab_tp61.first, 0);
      --
      loop
        --
        vn_fase_arq := 20.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 20.3;
        --
        begin
          vn_qtde_tp61 := vt_bi_tab_tp61(i).count;
        exception
          when others then
            vn_qtde_tp61 := 0;
        end;
        --
        vn_fase_arq := 20.4;
        --
        if nvl(vn_qtde_tp61, 0) > 0 then
          --
          vn_fase_arq := 20.5;
          --
          j := vt_bi_tab_tp61(i).first;
          --
          vn_fase_arq := 20.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 20.7;
            --
            gl_conteudo := vt_bi_tab_tp61(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp61(i)(j).municipio, 0), 6, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp61(i)(j).produto, 3, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp61(i)(j).quantidade, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp61(i)(j).valor, 0), 14, '0');
            --
            vn_fase_arq := 20.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '61',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 20.9;
            --
            if j = vt_bi_tab_tp61(i).last then
              exit;
            else
              j := vt_bi_tab_tp61(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 20.10;
        --
        if i = vt_bi_tab_tp61.last then
          exit;
        else
          i := vt_bi_tab_tp61.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP61 - Municípios - Operações Internas de Produtos
    --
    vn_fase_arq := 21;
    --
    -- TP62 - Municípios - Operações Internas de Serviços
    if nvl(vt_bi_tab_tp62.count, 0) > 0 then
      --
      vn_fase_arq := 21.1;
      --
      i := nvl(vt_bi_tab_tp62.first, 0);
      --
      loop
        --
        vn_fase_arq := 21.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 21.3;
        --
        begin
          vn_qtde_tp62 := vt_bi_tab_tp62(i).count;
        exception
          when others then
            vn_qtde_tp62 := 0;
        end;
        --
        vn_fase_arq := 21.4;
        --
        if nvl(vn_qtde_tp62, 0) > 0 then
          --
          vn_fase_arq := 21.5;
          --
          j := vt_bi_tab_tp62(i).first;
          --
          vn_fase_arq := 21.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 21.7;
            --
            gl_conteudo := vt_bi_tab_tp62(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp62(i)(j).municipio, 6, '0');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp62(i)(j).servico, 3, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp62(i)(j).valor, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp62(i)(j).custo_proporcional, 0), 14, '0');
            --
            vn_fase_arq := 21.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '62',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 21.9;
            --
            if j = vt_bi_tab_tp62(i).last then
              exit;
            else
              j := vt_bi_tab_tp62(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 21.10;
        --
        if i = vt_bi_tab_tp62.last then
          exit;
        else
          i := vt_bi_tab_tp62.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP62 - Municípios - Operações Internas de Serviços
    --
    vn_fase_arq := 22;
    --
    -- TP63 - Operações realizadas por UF - Entradas
    if nvl(vt_bi_tab_tp63.count, 0) > 0 then
      --
      vn_fase_arq := 22.1;
      --
      i := nvl(vt_bi_tab_tp63.first, 0);
      --
      loop
        --
        vn_fase_arq := 22.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 22.3;
        --
        begin
          vn_qtde_tp63 := vt_bi_tab_tp63(i).count;
        exception
          when others then
            vn_qtde_tp63 := 0;
        end;
        --
        vn_fase_arq := 22.4;
        --
        if nvl(vn_qtde_tp63, 0) > 0 then
          --
          vn_fase_arq := 22.5;
          --
          j := vt_bi_tab_tp63(i).first;
          --
          vn_fase_arq := 22.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 22.7;
            --
            gl_conteudo := vt_bi_tab_tp63(i)(j).tipo;
            gl_conteudo := gl_conteudo || vt_bi_tab_tp63(i)(j).UF;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp63(i)(j).VlrContabil, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp63(i)(j).BaseCalculo, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp63(i)(j).Outras, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp63(i)(j).icms_ST_petroleo_en, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp63(i)(j).icms_st_outros, 0), 14, '0');
            --
            vn_fase_arq := 22.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '63',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 22.9;
            --
            if j = vt_bi_tab_tp63(i).last then
              exit;
            else
              j := vt_bi_tab_tp63(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 22.10;
        --
        if i = vt_bi_tab_tp63.last then
          exit;
        else
          i := vt_bi_tab_tp63.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP63 - Operações realizadas por UF - Entradas
    --
    vn_fase_arq := 23;
    --
    -- TP64 - Operações realizadas por UF - Saídas
    if nvl(vt_bi_tab_tp64.count, 0) > 0 then
      --
      vn_fase_arq := 23.1;
      --
      i := nvl(vt_bi_tab_tp64.first, 0);
      --
      loop
        --
        vn_fase_arq := 23.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 23.3;
        --
        begin
          vn_qtde_tp64 := vt_bi_tab_tp64(i).count;
        exception
          when others then
            vn_qtde_tp64 := 0;
        end;
        --
        vn_fase_arq := 23.4;
        --
        if nvl(vn_qtde_tp64, 0) > 0 then
          --
          vn_fase_arq := 23.5;
          --
          j := vt_bi_tab_tp64(i).first;
          --
          vn_fase_arq := 23.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 23.7;
            --
            gl_conteudo := vt_bi_tab_tp64(i)(j).tipo;
            gl_conteudo := gl_conteudo || vt_bi_tab_tp64(i)(j).UF;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp64(i)(j).VlrContabil, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp64(i)(j).VlrContabil_nao_contr, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp64(i)(j).BaseCalculo_contr, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp64(i)(j).BaseCalculo_nao_contr, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp64(i)(j).outras, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp64(i)(j).icms_retido_st, 0), 14, '0');
            --
            vn_fase_arq := 23.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '64',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 23.9;
            --
            if j = vt_bi_tab_tp64(i).last then
              exit;
            else
              j := vt_bi_tab_tp64(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 23.10;
        --
        if i = vt_bi_tab_tp64.last then
          exit;
        else
          i := vt_bi_tab_tp64.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP64 - Operações realizadas por UF - Saídas
    --
    vn_fase_arq := 24;
    --
    -- TP65 - Estoque e Balanço
    if nvl(vt_bi_tab_tp65.count, 0) > 0 then
      --
      vn_fase_arq := 24.1;
      --
      i := nvl(vt_bi_tab_tp65.first, 0);
      --
      loop
        --
        vn_fase_arq := 24.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 24.3;
        --
        begin
          vn_qtde_tp65 := vt_bi_tab_tp65(i).count;
        exception
          when others then
            vn_qtde_tp65 := 0;
        end;
        --
        vn_fase_arq := 24.4;
        --
        if nvl(vn_qtde_tp65, 0) > 0 then
          --
          vn_fase_arq := 24.5;
          --
          j := vt_bi_tab_tp65(i).first;
          --
          vn_fase_arq := 24.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 24.7;
            --
            gl_conteudo := vt_bi_tab_tp65(i)(j).tipo;
            gl_conteudo := gl_conteudo || vt_bi_tab_tp65(i)(j).data_balanco;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).mercad_trib_inicial, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).mercad_trib_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).mercad_isentas_nao_trib_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).mercad_isentas_nao_trib_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).mercad_icms_antec_st_inicial, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).mercad_icms_antec_st_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).outras_mercadorias_inicial, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).outras_mercadorias_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || vt_bi_tab_tp65(i)(j).indic_crit_apur_lucro_bruto;
            gl_conteudo := gl_conteudo || vt_bi_tab_tp65(i)(j).indic_sist_inventario;
            gl_conteudo := gl_conteudo || vt_bi_tab_tp65(i)(j).indic_metodo_calc_estoque;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).numero_empregados, 0), 5, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp65(i)(j).outras_receitas, 0), 14, '0');
            --
            vn_fase_arq := 24.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '65',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 24.9;
            --
            if j = vt_bi_tab_tp65(i).last then
              exit;
            else
              j := vt_bi_tab_tp65(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 24.10;
        --
        if i = vt_bi_tab_tp65.last then
          exit;
        else
          i := vt_bi_tab_tp65.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP65 - Estoque e Balanço
    --
    vn_fase_arq := 25;
    --
    -- TP66 - Dados Contábeis
    if nvl(vt_bi_tab_tp66.count, 0) > 0 then
      --
      vn_fase_arq := 25.1;
      --
      i := nvl(vt_bi_tab_tp66.first, 0);
      --
      loop
        --
        vn_fase_arq := 25.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 25.3;
        --
        begin
          vn_qtde_tp66 := vt_bi_tab_tp66(i).count;
        exception
          when others then
            vn_qtde_tp66 := 0;
        end;
        --
        vn_fase_arq := 25.4;
        --
        if nvl(vn_qtde_tp66, 0) > 0 then
          --
          vn_fase_arq := 25.5;
          --
          j := vt_bi_tab_tp66(i).first;
          --
          vn_fase_arq := 25.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 25.7;
            --
            gl_conteudo := vt_bi_tab_tp66(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).ativo_circulante_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).ativo_circulante_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).disponibilidades_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).disponibilidades_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).clientes_inicial, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).clientes_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).outras_contas_receber_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).outras_contas_receber_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).ativo_permanente_inici, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).ativo_permanente_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).ativo_imobilizado_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).ativo_imobilizado_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).passivo_circulante_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).passivo_circulante_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).fornecedores_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).fornecedores_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).emprestimos_financ_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).emprestimos_financ_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).outras_contas_pagar_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).outras_contas_pagar_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).patrimonio_liquido_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).patrimonio_liquido_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).total_passivo_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).total_passivo_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).lucro_bruto_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).lucro_bruto_final, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).lucro_liquido_inic, 0), 14, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp66(i)(j).lucro_liquido_final, 0), 14, '0');
            --
            vn_fase_arq := 25.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '66',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 25.9;
            --
            if j = vt_bi_tab_tp66(i).last then
              exit;
            else
              j := vt_bi_tab_tp66(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 25.10;
        --
        if i = vt_bi_tab_tp66.last then
          exit;
        else
          i := vt_bi_tab_tp66.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP66 - Dados Contábeis
    --
    vn_fase_arq := 26;
    --
    -- TP67 - Dados do Consumo de Energia
    if nvl(vt_bi_tab_tp67.count, 0) > 0 then
      --
      vn_fase_arq := 26.1;
      --
      i := nvl(vt_bi_tab_tp67.first, 0);
      --
      loop
        --
        vn_fase_arq := 26.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 26.3;
        --
        begin
          vn_qtde_tp67 := vt_bi_tab_tp67(i).count;
        exception
          when others then
            vn_qtde_tp67 := 0;
        end;
        --
        vn_fase_arq := 26.4;
        --
        if nvl(vn_qtde_tp67, 0) > 0 then
          --
          vn_fase_arq := 26.5;
          --
          j := vt_bi_tab_tp67(i).first;
          --
          vn_fase_arq := 26.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 26.7;
            --
            gl_conteudo := vt_bi_tab_tp67(i)(j).tipo;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp67(i)(j).numero_medidor, 0), 8, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp67(i)(j).consumo, 0), 14, '0');
            --
            vn_fase_arq := 26.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '67',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 26.9;
            --
            if j = vt_bi_tab_tp67(i).last then
              exit;
            else
              j := vt_bi_tab_tp67(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 26.10;
        --
        if i = vt_bi_tab_tp67.last then
          exit;
        else
          i := vt_bi_tab_tp67.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP67 - Dados do Consumo de Energia
    --
    vn_fase_arq := 27;
    --
    -- TP68 - Outras Despesas no Período
    if nvl(vt_bi_tab_tp68.count, 0) > 0 then
      --
      vn_fase_arq := 27.1;
      --
      i := nvl(vt_bi_tab_tp68.first, 0);
      --
      loop
        --
        vn_fase_arq := 27.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 27.3;
        --
        begin
          vn_qtde_tp68 := vt_bi_tab_tp68(i).count;
        exception
          when others then
            vn_qtde_tp68 := 0;
        end;
        --
        vn_fase_arq := 27.4;
        --
        if nvl(vn_qtde_tp68, 0) > 0 then
          --
          vn_fase_arq := 27.5;
          --
          j := vt_bi_tab_tp68(i).first;
          --
          vn_fase_arq := 27.6;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 27.7;
            --
            gl_conteudo := vt_bi_tab_tp68(i)(j).tipo;
            gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp68(i)(j).codigo_despesa, 0), 3, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp68(i)(j).valor, 0), 14, '0');
            --
            vn_fase_arq := 27.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '68',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 27.9;
            --
            if j = vt_bi_tab_tp68(i).last then
              exit;
            else
              j := vt_bi_tab_tp68(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 27.10;
        --
        if i = vt_bi_tab_tp68.last then
          exit;
        else
          i := vt_bi_tab_tp68.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP68 - Outras Despesas no Período
    --
    vn_fase_arq := 28;
    --
    -- TP90 - Totalizador da DAC
    if nvl(vt_tab_tp90.count, 0) > 0 then
      --
      vn_fase_arq := 28.1;
      --
      i := nvl(vt_tab_tp90.first, 0);
      --
      loop
        --
        vn_fase_arq := 28.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 28.3;
        --
        gl_conteudo := lpad(vt_tab_tp90(i).tipo, 2, '99');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp90(i).qtde_registros, 6, 0);
        --
        vn_fase_arq := 28.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '90',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 28.5;
        --
        if i = vt_tab_tp90.last then
          exit;
        else
          i := vt_tab_tp90.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP90 - Rodapé do arquivo
    --
    vn_fase_arq := 29;
    --
    -- Final da montagem das linhas do arquivo texto
    --
    pkb_limpa_vetor_al;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_al fase (' || vn_fase_arq || '): ' || sqlerrm);
  end pkb_monta_estr_arq_gia_al;
  --
begin
  --
  vn_fase := 1;
  --
  gv_tipocodarq_cd := '12'; -- GIA-AL
  --
  pkb_limpa_vetor_al;
  --
  vn_cont_reg := 0;
  vn_cont_reg := vn_cont_reg + 1;
  --
  vn_fase := 2;
  --
  vv_ie_empresa := lpad(nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0), 9, '0');
  --
  -- Registro TP00 - Cabeçalho do arquivo
  vt_tab_tp00(1).tipo        := '00'; -- tipo de arquivo
  vt_tab_tp00(1).sistema     := 'DAC'; --  fixo DAC
  vt_tab_tp00(1).versao      := 2; -- fixo 2
  vt_tab_tp00(1).release     := 2; -- fixo 2
  vt_tab_tp00(1).sub_release := '00'; -- fixo 00
  vt_tab_tp00(1).reservado   := ' '; -- brancos
  vt_tab_tp00(1).CACEAL      := vv_ie_empresa; -- Inscrição Estadual
  --
  if gt_row_abertura_gia.dm_tipo_gia = '01' then -- Normal
    vt_tab_tp00(1).tipo_decl := 'O'; -- O = ORIGINAL / R = RETIFICADORA
  else
    vt_tab_tp00(1).tipo_decl := 'R'; -- O = ORIGINAL / R = RETIFICADORA
  end if;
  --
  vt_tab_tp00(1).periodo_decl := 'M'; -- M = MENSAL / Q = QUADRIMESTRAL / A = ANUAL
  vt_tab_tp00(1).compet_decl  := to_char(gt_row_abertura_gia.dt_ini,  'RRRRMM'); -- RRRRMM
  vt_tab_tp00(1).reservado2   := ' '; -- Brancos
  --
  vn_fase := 3;
  --
  -- Recupera dados do contador
  begin
    select substr(pe.nome, 1, 35),
           substr(pe.email, 1, 40),
           (lpad(f.num_cpf, 9, '0') || lpad(f.dig_cpf, 2, '0')),
           upper(trim(substr(co.crc, 1, 10))),
           pe.fone
      into vv_nome_cont,
           vv_email_cont,
           vv_cpf_cont,
           vv_num_crc_cont,
           vv_fone_cont
      from pessoa           pe,
           contador         co,
           contador_empresa ce,
           fisica           f,
           cidade           cid,
           estado           est
     where ce.empresa_id  = gt_row_abertura_gia.empresa_id
       and ce.dm_situacao = 1 -- Ativo
       and co.id          = ce.contador_id
       and pe.id          = co.pessoa_id
       and f.pessoa_id    = pe.id
       and cid.id         = pe.cidade_id
       and est.id         = cid.estado_id
       and rownum         = 1;
  exception
    when others then
      vv_nome_cont    := ' ';
      vv_email_cont   := ' ';
      vv_cpf_cont     := ' ';
      vv_num_crc_cont := ' ';
      vv_fone_cont    := ' ';
  end;
  --
  vn_fase := 3.1;
  --
  -- Recupera dados da empresa
  begin
    select p.email,
           p.nome,
           (lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') ||
           lpad(j.dig_cnpj, 2, '0'))
      into vv_email_empr, 
           vv_nome_empr, 
           vv_cnpj_empr
      from empresa e, 
           pessoa p, 
           juridica j
     where e.id        = gt_row_abertura_gia.empresa_id
       and p.id        = e.pessoa_id
       and j.pessoa_id = p.id;
  exception
    when others then
      vv_email_empr := ' ';
      vv_nome_empr  := ' ';
      vv_cnpj_empr  := '0';
  end;
  --
  vn_fase := 3.2;
  --
  begin
    select p.email,
           p.fone,
           (lpad(f.num_cpf, 9, '0') || lpad(f.dig_cpf, 2, '0')),
           p.nome
      into vv_email_resp, 
           vv_fone_resp, 
           vv_cpf_resp, 
           vv_nome_resp
      from resp_empresa r, 
           pessoa p, 
           fisica f
     where r.empresa_id = gt_row_abertura_gia.empresa_id
       and p.id         = r.pessoa_id
       and f.pessoa_id  = p.id
       and rownum       = 1;
  exception
    when others then
      vv_email_resp := ' ';
      vv_fone_resp  := ' ';
      vv_cpf_resp   := ' ';
      vv_nome_resp  := ' ';
  end;
  --
  vn_fase := 3.3;
  --
  vn_cont_reg := vn_cont_reg + 1;
  --
  -- Registro TP01 - Endereços de Correio Eletrônico
  vt_tab_tp01(1).tipo              := '01'; -- tipo de arquivo
  vt_tab_tp01(1).email_contrib     := vv_email_empr; -- endereço de correio eletrônico da empresa
  vt_tab_tp01(1).email_contador    := vv_email_cont; -- endereço de correio eletrônico do contador
  vt_tab_tp01(1).email_responsavel := vv_email_resp; -- endereço de correio eletrônico do responsável legal pela empresa
  vt_tab_tp01(1).telef_contador    := vv_fone_cont; -- telefone do contador
  vt_tab_tp01(1).telef_resp_legal  := vv_fone_resp; -- telefone do responsável legal pela empresa
  --
  vn_fase := 4;
  --
  vn_cont_reg := vn_cont_reg + 1;
  --
  -- Registro TP10 - Identificador da declaração
  vt_tab_tp10(1).tipo     := '10'; -- tipo de arquivo
  vt_tab_tp10(1).CACEAL   := vv_ie_empresa; -- Inscrição Estadual
  vt_tab_tp10(1).cpf_cnpj := vv_cnpj_empr; -- CPF ou CNPJ do contribuinte
  --
  vn_fase := 4.1;
  --
  vt_tab_tp10(1).razao_social    := substr(vv_nome_empr, 1, 40); -- Razão Social do contribuinte
  vt_tab_tp10(1).periodo_inicial := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- RRRRMM Periodo fiscal inicial desta declaração
  vt_tab_tp10(1).periodo_final   := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- RRRRMM Periodo fiscal final desta declaração
  --
  vn_fase := 4.2;
  -- 
  vt_tab_tp10(1).data_inicial         := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMMDD'); -- RRRRMM Data do inicio do periodo referente as informações prestadas
  vt_tab_tp10(1).data_final           := to_char(gt_row_abertura_gia.dt_fin, 'RRRRMMDD'); -- RRRRMM Data do final do periodo referente as informações prestadas
  vt_tab_tp10(1).indicador_mov        := 'N'; -- indica se ocorreu movimento na empresa no periodo declarado: S/N
  vt_tab_tp10(1).faixa_recolhimento   := '0'; -- desconsiderar esse campo.
  vt_tab_tp10(1).qtd_emp_part_rec_enq := '1'; -- Quantidade de empresas que participam na composição da Rec Bruta Anual para enquadramento
  --
  vn_fase := 4.3;
  --
  vt_tab_tp10(1).crc_contador := vv_num_crc_cont; -- CRC do contador responsável legal pela empresa
  vt_tab_tp10(1).cpf_contador := vv_cpf_cont; -- CPF do contador responsável legal pela empresa
  --
  vn_fase := 4.4;
  --
  vt_tab_tp10(1).nome_contador  := substr(vv_nome_cont, 1, 40); -- Nome do contador responsável legal pela empresa
  vt_tab_tp10(1).cpf_responsavel := vv_cpf_resp; -- CPF do contador responsável legal pela empresa
  --
  vn_fase := 4.5;
  --
  vt_tab_tp10(1).nome_responsavel := substr(vv_nome_resp, 1, 40); -- Nome do responsável legal pela empresa
  vt_tab_tp10(1).ind_encerramento := 'N'; -- Indica se esta declaração é de encerramento de atividades (S/N)
  --
  vn_fase := 5;
  --
  for rec in c_det_cfop loop
    exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
    --
    vn_fase := 5.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vv_cod_st_ipi          := null;
    vn_vl_base_calc_ipi    := 0;
    vn_aliq_ipi            := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_ipi    := 0;
    vn_vl_bc_outra_ipi     := 0;
    vn_ipi_nao_recup       := 0;
    vn_outro_ipi           := 0;
    vn_vl_fcp_icmsst       := 0;
    vn_aliq_fcp_icms       := 0;
    vn_vl_fcp_icms         := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    vn_ICMSCobradoST       := null;
    vn_Outros_Produtos     := null;
    --
    vn_fase := 5.2;
    --
    -- 1 - Oper.com crédito do imposto
    -- 2 - Oper.sem crédito do imposto (Isentas ou não Tributadas)
    -- 3 - Oper.sem crédito do imposto (Outras)
    -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
    pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec.itemnf_id,
                                      sn_cfop                => vn_cfop,
                                      sn_vl_operacao         => vn_vl_contabil,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                      sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                      sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                      sv_cod_st_ipi          => vv_cod_st_ipi, -- não utilizado
                                      sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi, -- não utilizado
                                      sn_aliq_ipi            => vn_aliq_ipi, -- não utilizado
                                      sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi, -- não utilizado
                                      sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi, -- não utilizado
                                      sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi, -- não utilizado
                                      sn_ipi_nao_recup       => vn_ipi_nao_recup, -- não utilizado
                                      sn_outro_ipi           => vn_outro_ipi, -- não utilizado
                                      sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                      sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                      sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                      sn_vl_fcp_icms         => vn_vl_fcp_icms);
    --
    vn_fase := 5.3;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 5.5;
      --
      if rec.dm_ind_oper = 0 then -- 0-Entradas - Registro TP21
        --
        vn_fase := 5.6;
        --
        begin
          vb_achou := vt_bi_tab_tp21(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 5.7;
        --
        if not vb_achou then
          --
          vn_fase := 5.8;
          --
          vn_cont_reg := vn_cont_reg + 1;
          --
          -- Registro TP21 - Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
          vt_bi_tab_tp21(1)(vn_cfop).tipo                        := '21'; -- Tipo
          vt_bi_tab_tp21(1)(vn_cfop).periodo_inicial             := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
          vt_bi_tab_tp21(1)(vn_cfop).periodo_final               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Final
          vt_bi_tab_tp21(1)(vn_cfop).CFOP                        := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp21(1)(vn_cfop).VlrContabil                 := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo                 := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de cálculo
               vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred            := ((nvl(vn_vl_imp_trib_icms,0) + nvl(vn_vl_fcp_icms, 0)) * 100); -- Valor do imposto -- Inclusão do FCP Atv. 68813
          vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib            := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp21(1)(vn_cfop).Outras                      := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp21(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        else
          --
          vn_fase := 5.9;
          --
          vt_bi_tab_tp21(1)(vn_cfop).VlrContabil                 := vt_bi_tab_tp21(1)(vn_cfop) .VlrContabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo                 := vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
               vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred            := vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred + ((nvl(vn_vl_imp_trib_icms,0) + nvl(vn_vl_fcp_icms, 0)) * 100); -- Valor do imposto -- Inclusão do FCP Atv. 68813
          vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib            := vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp21(1)(vn_cfop).Outras                      := vt_bi_tab_tp21(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp21(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        end if;
        --
      elsif rec.dm_ind_oper = 1 then -- 1-Saídas
        --
        vn_fase := 5.10;
        --
        begin
          vb_achou := vt_bi_tab_tp22(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 5.11;
        --
        if not vb_achou then
          --
          vn_fase := 5.12;
          --
          vn_cont_reg := vn_cont_reg + 1;
          --
          -- Registro TP22 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
          vt_bi_tab_tp22(1)(vn_cfop).tipo                        := '22'; -- tipo do registro
          vt_bi_tab_tp22(1)(vn_cfop).periodo_inicial             := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
          vt_bi_tab_tp22(1)(vn_cfop).periodo_final               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Final
          vt_bi_tab_tp22(1)(vn_cfop).CFOP                        := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras                      := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        else
          --
          vn_fase := 5.13;
          --
          vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := vt_bi_tab_tp22(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras                      := vt_bi_tab_tp22(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        end if;
        --
      end if; -- Indicador de Operação: 0-Entrada, 1-Saída
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_det_cfop
  --
  vn_fase := 6;
  --
  for rec in c_det_cfop_ct loop
    exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
    --
    vn_fase := 6.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    --
    vn_fase := 6.2;
    --
    -- Recupera os valores de impostos
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_contabil,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 6.3;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 6.5;
      --
      if rec.dm_ind_oper = 0 then -- 0-Entradas 
        --
        vn_fase := 6.6;
        --
        begin
          vb_achou := vt_bi_tab_tp21(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 6.7;
        --
        if not vb_achou then
          --
          vn_fase := 6.8;
          --
          vn_cont_reg := vn_cont_reg + 1;
          --
          -- Registro TP21 - Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
          vt_bi_tab_tp21(1)(vn_cfop).tipo                        := '21'; -- Tipo
          vt_bi_tab_tp21(1)(vn_cfop).periodo_inicial             := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
          vt_bi_tab_tp21(1)(vn_cfop).periodo_final               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Final
          vt_bi_tab_tp21(1)(vn_cfop).CFOP                        := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp21(1)(vn_cfop).VlrContabil                 := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo                 := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de cálculo
          vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred            := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib            := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp21(1)(vn_cfop).Outras                      := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp21(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        else
          --
          vn_fase := 6.9;
          --
          vt_bi_tab_tp21(1)(vn_cfop).VlrContabil                 := vt_bi_tab_tp21(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo                 := vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred            := vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib            := vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp21(1)(vn_cfop).Outras                      := vt_bi_tab_tp21(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp21(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        end if;
        --
      elsif rec.dm_ind_oper = 1 then -- 1-Saídas
        --
        vn_fase := 6.10;
        --
        begin
          vb_achou := vt_bi_tab_tp22(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 6.11;
        --
        if not vb_achou then
          --
          vn_fase := 6.12;
          --
          vn_cont_reg := vn_cont_reg + 1;
          --
          -- Registro TP22 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
          vt_bi_tab_tp22(1)(vn_cfop).tipo                        := '22'; -- tipo do registro
          vt_bi_tab_tp22(1)(vn_cfop).periodo_inicial             := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
          vt_bi_tab_tp22(1)(vn_cfop).periodo_final               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Final
          vt_bi_tab_tp22(1)(vn_cfop).CFOP                        := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras                      := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        else
          --
          vn_fase := 6.13;
          --
          vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := vt_bi_tab_tp22(1)(vn_cfop) .VlrContabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras                      := vt_bi_tab_tp22(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        end if;
        --
      end if; -- indicador de operação: 0-entrada, 1-saída
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_det_cfop_ct
  --
  vn_fase := 7;
  --
  for rec in c_det_cfop_sc loop
    exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
    --
    vn_fase := 7.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vn_vl_imp_trib_ipi     := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    vn_ICMSCobradoST       := null;
    vn_Outros_Produtos     := null;
    --
    vn_fase := 7.2;
    -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_contabil,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi, -- não utilizado
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 7.3;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 7.4;
      --
      if rec.dm_ind_oper = 0 then
        -- 0-entradas - registro TP21
        --
        vn_fase := 7.5;
        --
        begin
          vb_achou := vt_bi_tab_tp21(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 7.6;
        --
        if not vb_achou then
          --
          vn_fase := 7.7;
          --
          vn_cont_reg := vn_cont_reg + 1;
          --
          -- Registro TP21 - Entradas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
          vt_bi_tab_tp21(1)(vn_cfop).tipo                        := '21'; -- Tipo
          vt_bi_tab_tp21(1)(vn_cfop).periodo_inicial             := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
          vt_bi_tab_tp21(1)(vn_cfop).periodo_final               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Final
          vt_bi_tab_tp21(1)(vn_cfop).CFOP                        := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp21(1)(vn_cfop).VlrContabil                 := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo                 := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de cálculo
          vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred            := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib            := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp21(1)(vn_cfop).Outras                      := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp21(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        else
          --
          vn_fase := 7.8;
          --
          vt_bi_tab_tp21(1)(vn_cfop).VlrContabil                 := vt_bi_tab_tp21(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo                 := vt_bi_tab_tp21(1)(vn_cfop).BaseCalculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred            := vt_bi_tab_tp21(1)(vn_cfop).icms_normal_cred + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib            := vt_bi_tab_tp21(1)(vn_cfop).Isentas_nao_trib + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp21(1)(vn_cfop).Outras                      := vt_bi_tab_tp21(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp21(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        end if;
        --
      elsif rec.dm_ind_oper = 1 then -- 1-Saídas
        --
        vn_fase := 7.9;
        --
        begin
          vb_achou := vt_bi_tab_tp22(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 7.10;
        --
        if not vb_achou then
          --
          vn_fase := 7.11;
          --
          vn_cont_reg := vn_cont_reg + 1;
          --
          -- Registro TP22 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
          vt_bi_tab_tp22(1)(vn_cfop).tipo                        := '22'; -- tipo do registro
          vt_bi_tab_tp22(1)(vn_cfop).periodo_inicial             := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
          vt_bi_tab_tp22(1)(vn_cfop).periodo_final               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Final
          vt_bi_tab_tp22(1)(vn_cfop).CFOP                        := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras                      := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        else
          --
          vn_fase := 7.12;
          --
          vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := vt_bi_tab_tp22(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras                      := vt_bi_tab_tp22(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
          --
        end if;
        --
      end if; -- indicador de operação: 0-entrada, 1-saída
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop;
  --
  vn_fase := 8;
  --
  -- Dados de ECF
  for rec in c_det_cfop_ecf loop
    exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
    --
    vn_fase := 8.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    vn_fase := 8.2;
    --
    -- Recupera valores fiscais (ICMS) do conhecimento de transporte
    pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_cfop                => vn_cfop,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_opr              => vn_vl_contabil,
                                      sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                      sn_vl_icms             => vn_vl_imp_trib_icms,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
    --
    vn_fase := 8.3;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 8.4;
      --
      begin
        vb_achou := vt_bi_tab_tp22(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 8.5;
      --
      if not vb_achou then
        --
        vn_fase := 8.6;
        --
        vn_cont_reg := vn_cont_reg + 1;
        --
        -- Registro TP22 - Saídas de Mercadorias, Bens e/ou Aquisição de Serviços de Transporte e Comunicação
        vt_bi_tab_tp22(1)(vn_cfop).tipo                        := '22'; -- tipo do registro
        vt_bi_tab_tp22(1)(vn_cfop).periodo_inicial             := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
        vt_bi_tab_tp22(1)(vn_cfop).periodo_final               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Final
        vt_bi_tab_tp22(1)(vn_cfop).CFOP                        := vn_cfop; -- Código fiscal da operação
        vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
        vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
        vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
        vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
        vt_bi_tab_tp22(1)(vn_cfop).Outras                      := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
        vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
        --
      else
        --
        vn_fase := 8.7;
        --
        vt_bi_tab_tp22(1)(vn_cfop).VlrContabil                 := vt_bi_tab_tp22(1)(vn_cfop).VlrContabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
        vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo                 := vt_bi_tab_tp22(1)(vn_cfop).BaseCalculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
        vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb             := vt_bi_tab_tp22(1)(vn_cfop).icms_normal_deb + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
        vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib            := vt_bi_tab_tp22(1)(vn_cfop).Isentas_nao_trib + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
        vt_bi_tab_tp22(1)(vn_cfop).Outras                      := vt_bi_tab_tp22(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
        vt_bi_tab_tp22(1)(vn_cfop).VlrContMerc_icms_antecipado := '0';
        --
      end if;
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop;
  --
  vn_fase := 9;
  --
  if nvl(vt_bi_tab_tp21.count, 0) > 0 or nvl(vt_bi_tab_tp22.count, 0) > 0 then
    --
    vt_tab_tp10(1).indicador_mov := 'S';
    --
  end if;
  --
  vn_fase := 10;
  --
  vn_cont_reg := vn_cont_reg + 1;
  --
  j := 1;
  --
  -- Registro TP23 - Receitas de Saídas Simplificadas
  vt_bi_tab_tp23(1)(j).tipo                  := '23'; -- tipo de registro
  vt_bi_tab_tp23(1)(j).periodo_inicial       := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM');
  vt_bi_tab_tp23(1)(j).periodo_final         := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM');
  vt_bi_tab_tp23(1)(j).outras_rec_periodo    := '0';
  vt_bi_tab_tp23(1)(j).rec_bruta_periodo     := '0';
  vt_bi_tab_tp23(1)(j).rec_base_recolhimento := '0';
  --
  vn_fase := 11;
  --
  for rec in c_apur_icms loop
    exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
    --
    vn_fase := 11.1;
    --
    j := nvl(j, 0) + 1;
    --
    vn_cont_reg := vn_cont_reg + 1;
    --
    -- Registro tipo 31 - Apuração do ICMS
    vt_bi_tab_tp31(1)(j).tipo                          := '31';
    vt_bi_tab_tp31(1)(j).periodo_inicial               := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM');
    vt_bi_tab_tp31(1)(j).periodo_final                 := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM');
    vt_bi_tab_tp31(1)(j).saldo_credor_periodo_anterior := nvl(rec.vl_saldo_credor_ant, 0) * 100;
    vt_bi_tab_tp31(1)(j).deducoes                      := nvl(rec.vl_total_deducao, 0) * 100;
    --
    if nvl(rec.vl_total_deducao, 0) > 0 then
      vt_bi_tab_tp31(1)(j).historico_deducoes := 'Deducoes da apuracao de ICMS';
    else
      vt_bi_tab_tp31(1)(j).historico_deducoes := ' ';
    end if;
    --
    vt_bi_tab_tp31(1)(j).saldo_icms_periodo_seguinte := nvl(rec.vl_saldo_credor_transp, 0) * 100;
    vt_bi_tab_tp31(1)(j).icms_debitado               := (nvl(rec.vl_total_debito, 0) * 100);
    vt_bi_tab_tp31(1)(j).total_outros_debitos        := nvl(rec.vl_total_ajust_deb, 0) * 100;
    vt_bi_tab_tp31(1)(j).estorno_credito             := (nvl(rec.vl_estorno_credito, 0) * 100);
    --
    if nvl(rec.vl_estorno_credito, 0) > 0 then
      vt_bi_tab_tp31(1)(j).historico_estorno := 'Estorno credito da apuracao de ICMS';
    else
      vt_bi_tab_tp31(1)(j).historico_estorno := ' ';
    end if;
    --
    vt_bi_tab_tp31(1)(j).total_debito := (nvl(rec.vl_total_debito, 0) + nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_estorno_credito, 0)) * 100;
    --
    vt_bi_tab_tp31(1)(j).icms_creditado        := (nvl(rec.vl_total_credito, 0) * 100);
    vt_bi_tab_tp31(1)(j).total_outros_creditos := nvl(rec.vl_total_ajust_cred, 0) * 100;
    vt_bi_tab_tp31(1)(j).estorno_debito        := (nvl(rec.vl_estorno_debido, 0) * 100);
    --
    if nvl(rec.vl_estorno_debido, 0) > 0 then
      vt_bi_tab_tp31(1)(j).historico_estorno2 := 'Estorno debito da apuracao de ICMS';
    else
      vt_bi_tab_tp31(1)(j).historico_estorno2 := ' ';
    end if;
    --
    vt_bi_tab_tp31(1)(j).total_credito := (nvl(rec.vl_total_credito, 0) + nvl(rec.vl_total_ajust_cred, 0) + nvl(rec.vl_estorno_debido, 0)) * 100;
    --
    vn_fase := 11.2;
    --
  end loop c_apur_icms;
  --
  vn_fase := 12;
  --
  vn_seq_ocor := 0;
  --
  for rec in c_movtos loop
    exit when c_movtos%notfound or(c_movtos%notfound) is null;
    --
    vn_fase := 12.1;
    --
    vn_seq_ocor := nvl(vn_seq_ocor, 0) + 1;
    --
    vn_fase := 12.2;
    --
    vn_cont_reg := vn_cont_reg + 1;
    --
    -- Registro tipo 33 - Detalhamento de Outros Débitos e Outros Créditos do ICMS
    vt_bi_tab_tp33(1)(vn_seq_ocor).tipo            := '33'; -- tipo do registro
    vt_bi_tab_tp33(1)(vn_seq_ocor).periodo_inicial := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Período Inicial
    vt_bi_tab_tp33(1)(vn_seq_ocor).periodo_inicial := to_char(gt_row_abertura_gia.dt_ini, 'RRRRMM'); -- Periodo Final
    --
    vn_fase := 12.3;
    --
    vt_bi_tab_tp33(1)(vn_seq_ocor).transf_cred_acumulados := 0; -- transferência de Créditos Acumulados
    vt_bi_tab_tp33(1)(vn_seq_ocor).outras_hipoteses       := 0; -- outras hipóteses
    vt_bi_tab_tp33(1)(vn_seq_ocor).historico              := ' ';
    vt_bi_tab_tp33(1)(vn_seq_ocor).icms_antecipado        := nvl(rec.vl_aj_apur, 0); -- ICMS antecipado
    --
    vn_fase := 12.4;
    --
    vt_bi_tab_tp33(1)(vn_seq_ocor).credito_presumido := 0; -- Crédito Presumido
    vt_bi_tab_tp33(1)(vn_seq_ocor).credito_presumido21 := 0; -- Crédito Presumido 21
    vt_bi_tab_tp33(1)(vn_seq_ocor).credito_ativo_imobilizado := 0; -- Credito Ativo Imobilizado
    vt_bi_tab_tp33(1)(vn_seq_ocor).credito_transferencia := 0; -- Credito Transferência
    vt_bi_tab_tp33(1)(vn_seq_ocor).icms_importacao := 0; -- ICMS Importação
    vt_bi_tab_tp33(1)(vn_seq_ocor).icms_restituicao := 0; -- ICMS Restituição
    vt_bi_tab_tp33(1)(vn_seq_ocor).outras_hipoteses2 := 0; -- Outras Hipóteses
    vt_bi_tab_tp33(1)(vn_seq_ocor).historico2 := ' ';
    --
  end loop;
  --
  vn_fase := 13;
  --
  -- TP34 - Transferência de Créditos - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  -- TP41 - Obrigações Fiscais Apuradas - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  -- TP42 - Obrigações Fiscais Pagas - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  -- TP65 - Estoque e Balanço - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  -- TP67 - Dados do Consumo de Energia - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  -- TP68 - Outras Despesas no Período - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  -- TP90 - Totalizador da DAC - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  --
  vn_cont_reg := vn_cont_reg + 1;
  --
  -- Registro tipo 90 - Totalizador da DAC 
  vt_tab_tp90(1).tipo           := '90'; -- Tipo do arquivo
  vt_tab_tp90(1).qtde_registros := vn_cont_reg; -- Quantidade Total de registros
  --
  vn_fase := 14;
  --
  -- Procedimento monta a estrutura do arquivo da GIA - AL
  pkb_monta_estr_arq_gia_al;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_al fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_arq_gia_al;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-BA
------------------------------------------------
procedure pkb_gera_arq_gia_ba is
  --
  -- Variáveis do controle do vetor
  i pls_integer;
  j pls_integer;
  --
  -- Variáveis do processo
  vn_fase  number := 0;
  vb_achou boolean;
  --
  vn_qtde_tp00 number;
  vn_qtde_tp01 number;
  vn_qtde_tp08 number;
  vn_qtde_tp09 number;
  vn_qtde_tp10 number;
  vn_qtde_tp11 number;
  vn_qtde_tp12 number;
  vn_qtde_tp13 number;
  vn_qtde_tp14 number;
  vn_qtde_tp15 number;
  vn_qtde_tp16 number;
  vn_qtde_tp17 number;
  vn_qtde_tp18 number;
  vn_qtde_tp19 number;
  vn_qtde_tp20 number;
  vn_qtde_tp21 number;
  vn_qtde_tp22 number;
  vn_qtde_tp30 number;
  vn_qtde_tp31 number;
  vn_qtde_tp40 number;
  vn_qtde_tp50 number;
  vn_qtde_tp60 number;
  vn_qtde_tp66 number;
  vn_qtde_tp77 number;
  vn_qtde_tp88 number;
  vn_qtde_tp99 number;
  --
  vn_cfop                cfop.cd%type := 0;
  vn_vl_contabil         number(15, 2) := 0;
  vv_cod_st_icms         cod_st.cod_st%type := null;
  vn_vl_base_calc_icms   imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_icms           imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_icms    imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_base_calc_icmsst imp_itemnf.vl_base_calc%type := 0;
  vn_vl_imp_trib_icmsst  imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_icms   imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_icms    imp_itemnf.vl_base_calc%type := 0;
  vv_cod_st_ipi          cod_st.cod_st%type := null;
  vn_vl_base_calc_ipi    imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_ipi            imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_ipi     imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_ipi    imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_ipi     imp_itemnf.vl_base_calc%type := 0;
  vn_ipi_nao_recup       number;
  vn_outro_ipi           number;
  vn_vl_imp_nao_dest_ipi number;
  vn_vl_fcp_icmsst       number;
  vn_aliq_fcp_icms       number;
  vn_vl_fcp_icms         number;
  --
  -- Valores utilizados para Estoque Inicial e Final
  vn_vl_trib             number := 0;
  vn_vl_isenta           number := 0;
  vn_vl_outras           number := 0;
  vn_vl_trib_ini         number := 0;
  vn_vl_isenta_ini       number := 0;
  vn_vl_outras_ini       number := 0;
  vn_vl_trib_fin         number := 0;
  vn_vl_isenta_fin       number := 0;
  vn_vl_outras_fin       number := 0;
  --
  vn_pessoa_id           pessoa.id%type;
  vn_cidade_id           cidade.id%type;
  vn_estado_id           estado.id%type;
  vv_sigla_estado        estado.sigla_estado%type;
  vn_tipocodarq_id       tipo_cod_arq.id%type;
  vv_estadotipocodarq_cd estado_tipo_cod_arq.cd%type;
  vn_ICMSCobradoST       imp_itemnf.vl_imp_trib%type := 0;
  vn_Outros_Produtos     imp_itemnf.vl_imp_trib%type := 0;
  --
  vv_nome                varchar2(35);
  vv_cpf_respons         varchar2(11);
  vv_lograd_resp         varchar2(30);
  vv_uf_resp             varchar2(2);
  vv_num_crc_cont        contador.crc%type;
  vv_num_ie              varchar2(9);
  vv_nome_empr           varchar2(50);
  vv_cnae_empr           varchar2(7);
  vn_tipo_det            number;
  vn_cep_resp            pessoa.cep%type;
  --
  vn_tipooperacao_id     tipo_operacao.id%type := null;
  vn_tipooperacao_cd     tipo_operacao.cd%type := null;
  --
  vn_tipo_detalhamento   number(2);
  --
  vn_dm_ind_ie_dest       nota_fiscal_dest.dm_ind_ie_dest%type;
  vn_vl_tot_debitos_difal number;
  --
  vn_dm_sm_icmsst_ipinrec_bs_out empresa.dm_sm_icmsst_ipinrec_bs_outr%type;
  --
  vn_nro_func inf_folha_pgto.nro_func%type;
  --
  vn_vl_icms_difer imp_itemnf.vl_icms_difer%type := 0;
  --
  vn_vl_khw_cons inf_comp_gia.vl_khw_cons%type := 0;
  --
  -- TP00 - Registro mestre da DMA
  type tab_tp00 is record(
    tipo            varchar2(2),
    id_arquivo      varchar2(5),
    inf_padrao_fixa varchar2(1),
    num_cpf_resp    varchar2(11),
    nome_resp_decl  varchar2(35),
    ano_layout      number(4));
  --
  type t_tab_tp00 is table of tab_tp00 index by binary_integer;
  vt_tab_tp00 t_tab_tp00;
  --
  -- TP01 - Identificação da empresa do DMA
  type tab_tp01 is record(
    tipo                  varchar2(2),
    ano_refer_DMA         number(4),
    mes_refer_DMA         varchar2(2),
    num_ie                varchar2(9),
    inf_decl_retif        varchar2(1),
    inf_decl_baixa_emp    varchar2(1),
    inf_contr_insc_unica  varchar2(1),
    inf_decl_mudanca_cond varchar2(1),
    data_enc_balanco      varchar2(8),
    firma_razao_social    varchar2(50),
    codigo_municipio      varchar2(5),
    codigo_ativ_econ      varchar2(7),
    valor_fixo            varchar2(2),
    inf_dma_consol_per    varchar2(1));
  --
  type t_tab_tp01 is table of tab_tp01 index by binary_integer;
  vt_tab_tp01 t_tab_tp01;
  --
  -- TP08 - Entradas por UF
  type tab_tp08 is record(
    tipo                 varchar2(2),
    ano_refer_DMA        number(4),
    mes_refer_DMA        varchar2(2),
    num_ie               varchar2(9),
    sigla_uf             varchar2(2),
    vl_contabil          number(12),
    base_calculo         number(12),
    vl_outras            number(12),
    vl_icms_st_en_elet   number(12),
    vl_icms_st_prod_serv number(12));
  --
  type t_tab_tp08 is table of tab_tp08 index by binary_integer;
  vt_tab_tp08 t_tab_tp08;
  --
  -- TP09 - Saídas por UF
  type tab_tp09 is record(
    tipo                   varchar2(2),
    ano_refer_DMA          number(4),
    mes_refer_DMA          varchar2(2),
    num_ie                 varchar2(9),
    sigla_uf               varchar2(2),
    vl_contabil_nao_contr  number(12),
    vl_contabil_contr      number(12),
    base_calculo_nao_contr number(12),
    base_calculo_contr     number(12),
    vl_outras              number(12),
    vl_icms_st_aquis_serv  number(12));
  --
  type t_tab_tp09 is table of tab_tp09 index by binary_integer;
  vt_tab_tp09 t_tab_tp09;
  --
  -- TP10 - Entradas por Operação
  type tab_tp10 is record(
    tipo              varchar2(2),
    ano_refer_DMA     number(4),
    mes_refer_DMA     varchar2(2),
    num_ie            varchar2(9),
    status_ent_saida  varchar2(1),
    num_detalhamento  number(1),
    tipo_detalhamento varchar2(2),
    vl_contabil       number(12),
    base_calculo      number(12),
    vl_isentas        number(12),
    vl_outras         number(12));
  --
  type t_tab_tp10 is table of tab_tp10 index by binary_integer;
  type t_bi_tab_tp10 is table of t_tab_tp10 index by binary_integer;
  vt_bi_tab_tp10 t_bi_tab_tp10;
  --
  -- TP11 - Saídas por operação
  type tab_tp11 is record(
    tipo              varchar2(2),
    ano_refer_DMA     number(4),
    mes_refer_DMA     varchar2(2),
    num_ie            varchar2(9),
    status_ent_saida  varchar2(1),
    num_detalhamento  number(1),
    tipo_detalhamento varchar2(2),
    vl_contabil       number(12),
    base_calculo      number(12),
    vl_isentas        number(12),
    vl_outras         number(12));
  --
  type t_tab_tp11 is table of tab_tp11 index by binary_integer;
  type t_bi_tab_tp11 is table of t_tab_tp11 index by binary_integer;
  vt_bi_tab_tp11 t_bi_tab_tp11;
  --
  -- TP12 - Estoque
  type tab_tp12 is record(
    tipo                   varchar2(2),
    ano_refer_DMA          number(4),
    mes_refer_DMA          varchar2(2),
    num_ie                 varchar2(9),
    status_est_inic_final  varchar2(1),
    tipo_natur_estoque     varchar2(2),
    vl_trib_est_inic_final number(12),
    vl_isentas_nao_trib    number(12),
    vl_outras              number(12),
    vl_total               number(12));
  --
  type t_tab_tp12 is table of tab_tp12 index by binary_integer;
  vt_tab_tp12 t_tab_tp12;
  --
  -- TP13 - Valores Fiscais Dedutíveis
  type tab_tp13 is record(
    tipo                      varchar2(2),
    ano_refer_DMA             number(4),
    mes_refer_DMA             varchar2(2),
    num_ie                    varchar2(9),
    status_ent_saida          varchar2(1),
    vl_compras_ativo_imob     number(12),
    vl_aquis_mat_uso_consumo  number(12),
    vl_transf_ativo_imob      number(12),
    vl_transf_mat_uso_consumo number(12),
    vl_ent_retorno            number(12),
    vl_outras                 number(12),
    vl_total_ent_saida        number(12));
  --
  type t_tab_tp13 is table of tab_tp13 index by binary_integer;
  vt_tab_tp13 t_tab_tp13;
  --
  -- TP14 - Apuração de Imposto
  type tab_tp14 is record(
    tipo                           varchar2(2),
    ano_refer_DMA                  number(4),
    mes_refer_DMA                  varchar2(2),
    num_ie                         varchar2(9),
    vl_deb_imp_saidas_trib         number(12),
    vl_deb_imp_outros_debitos      number(12),
    vl_deb_imp_estorno_credito     number(12),
    vl_cred_imp_entradas_trib      number(12),
    vl_cred_imp_outros_creditos    number(12),
    vl_cred_imp_estorno_debito     number(12),
    vl_cred_imp_saldo_cred_per_ant number(12));
  --
  type t_tab_tp14 is table of tab_tp14 index by binary_integer;
  vt_tab_tp14 t_tab_tp14;
  --
  -- TP15 - Apuração de Imposto
  type tab_tp15 is record(
    tipo                           varchar2(2),
    ano_refer_DMA                  number(4),
    mes_refer_DMA                  varchar2(2),
    num_ie                         varchar2(9),
    vl_conta_corrente_deducoes     number(12),
    vl_conta_corrente_imp_recolher number(12),
    vl_total_debito                number(12),
    vl_total_credito               number(12),
    vl_saldo_devedor               number(12),
    vl_saldo_credor                number(12),
    vl_diferencial_aliquota        number(12));
  --
  type t_tab_tp15 is table of tab_tp15 index by binary_integer;
  vt_tab_tp15 t_tab_tp15;
  --
  -- TP16 - Dados de ICMS Substituição Tributária, Importação, Diferimento, Imposto Recolhido
  type tab_tp16 is record(
    tipo                         varchar2(2),
    ano_refer_DMA                number(4),
    mes_refer_DMA                varchar2(2),
    num_ie                       varchar2(9),
    vl_icms_st_antecip           number(12),
    vl_icms_st_retencao          number(12),
    vl_icms_import_indust_comerc number(12),
    vl_icms_import_imob_consumo  number(12),
    vl_diferimento               number(12),
    vl_imposto_recolhido         number(12));
  --
  type t_tab_tp16 is table of tab_tp16 index by binary_integer;
  vt_tab_tp16 t_tab_tp16;
  --
  -- TP17 - Informações Complementares
  type tab_tp17 is record(
    tipo                        varchar2(2),
    ano_refer_DMA               number(4),
    mes_refer_DMA               varchar2(2),
    num_ie                      varchar2(9),
    num_empregados              number(6),
    kwh_consumidos_periodo      number(7),
    vl_recolhido_cofins         number(11),
    vl_icms_cred_ativo_aliq7    number(12),
    vl_icms_cred_ativo_aliq12   number(12),
    vl_icms_cred_ativo_aliq17   number(12),
    vl_icms_cred_mat_uso_aliq7  number(12),
    vl_icms_cred_mat_uso_aliq12 number(12));
  --
  type t_tab_tp17 is table of tab_tp17 index by binary_integer;
  vt_tab_tp17 t_tab_tp17;
  --
  -- TP18 - Dados do Valor de compra alíquota 17%, dados do Crédito fiscal acumulado na exportação de mercadorias
  type tab_tp18 is record(
    tipo                          varchar2(2),
    ano_refer_DMA                 number(4),
    mes_refer_DMA                 varchar2(2),
    num_ie                        varchar2(9),
    vl_icms_cred_est_ext17        number(12),
    vl_saldo_ant_cred_fis_exp     number(12),
    vl_cred_fis_exp_dir_gera_mes  number(12),
    vl_cred_fis_exp_ind_gera_mes  number(12),
    vl_pag_icms_cred_util_mes     number(12),
    vl_transf_estab_cred_util_mes number(12),
    vl_transf_terc_cred_util_mes  number(12));

  --
  type t_tab_tp18 is table of tab_tp18 index by binary_integer;
  vt_tab_tp18 t_tab_tp18;
  --
  -- TP19 - Dados do crédito fiscal acumulado na exportação de mercadorias e do crédito fiscal acumulado em virtude
  --        do diferimento, isenção, redução base de cálculo e outros motivos
  type tab_tp19 is record(
    tipo                           varchar2(2),
    ano_refer_DMA                  number(4),
    mes_refer_DMA                  varchar2(2),
    num_ie                         varchar2(9),
    vl_exp_util_mes_imp_merc_ext   number(12),
    vl_exp_util_mes_decor_den_esp  number(12),
    vl_cred_fis_exp_decor_aut_fis  number(12),
    vl_saldo_ant_dif_isen_out_mot  number(12),
    vl_ger_mes_decor_dif           number(12),
    vl_ger_mes_decor_isencao       number(12),
    vl_ger_mes_decor_red_base_calc number(12));
  --
  type t_tab_tp19 is table of tab_tp19 index by binary_integer;
  vt_tab_tp19 t_tab_tp19;
  --
  -- TP20 - Dados do crédito fiscal acumulado em virtude de diferimento, isenção, redução base de cálculo e outros motivos
  type tab_tp20 is record(
    tipo                          varchar2(2),
    ano_refer_DMA                 number(4),
    mes_refer_DMA                 varchar2(2),
    num_ie                        varchar2(9),
    vl_cred_ger_mes_outros_mot    number(12),
    vl_cred_util_mes_pag_icms     number(12),
    vl_cred_util_mes_imp_merc_ext number(12),
    vl_cred_util_mes_den_esp      number(12),
    vl_cred_util_mes_aut_fis      number(12),
    vl_cred_util_mes_tranf        number(12));
  --
  type t_tab_tp20 is table of tab_tp20 index by binary_integer;
  vt_tab_tp20 t_tab_tp20;
  --
  -- TP21 - Identificação do Responsável pela declaração
  type tab_tp21 is record(
    tipo                    varchar2(2),
    ano_refer_DMA           number(4),
    mes_refer_DMA           varchar2(2),
    num_ie                  varchar2(9),
    num_crc_contab_resp_dma varchar2(7),
    unid_fed_crc_contab     varchar2(2),
    nome_contab_resp_dma    varchar2(35),
    tipo_lograd_end_contab  varchar2(3),
    desc_lograd             varchar2(30),
    unid_fed_endereco       varchar2(2));
  --
  type t_tab_tp21 is table of tab_tp21 index by binary_integer;
  vt_tab_tp21 t_tab_tp21;
  --
  -- TP22 - Identificação do Responsável pela declaração
  type tab_tp22 is record(
    tipo             varchar2(2),
    ano_refer_DMA    number(4),
    mes_refer_DMA    varchar2(2),
    num_ie           varchar2(9),
    bairro_lograd    varchar2(16),
    num_lograd       varchar2(9),
    num_telef_contab varchar2(16),
    num_cep_contab   varchar2(8),
    cod_mun_contab   varchar2(5),
    desc_mun_contab  varchar2(30));
  --
  type t_tab_tp22 is table of tab_tp22 index by binary_integer;
  vt_tab_tp22 t_tab_tp22;
  --
  -- TIPO 30 CS-DMA  - Entradas
  type tab_tp30 is record(
    tipo               varchar2(2),
    ano_refer_DMA      number(4),
    mes_refer_DMA      varchar2(2),
    num_ie             varchar2(9),
    status             varchar2(1),
    cod_munic          varchar2(5),
    vl_bc_icms         number(12),
    vl_bc_Isen_Nt_icms number(12),
    vl_icms            number(12));
  --
  type t_tab_tp30 is table of tab_tp30 index by binary_integer;
  vt_tab_tp30 t_tab_tp30;
  --
  -- TIPO 31 CS-DMA  - Saídas
  type tab_tp31 is record(
    tipo               varchar2(2),
    ano_refer_DMA      number(4),
    mes_refer_DMA      varchar2(2),
    num_ie             varchar2(9),
    status             varchar2(1),
    cod_munic          varchar2(5),
    vl_bc_icms         number(12),
    vl_bc_Isen_Nt_icms number(12),
    vl_icms            number(12));
  --
  type t_tab_tp31 is table of tab_tp31 index by binary_integer;
  vt_tab_tp31 t_tab_tp31;
  --
  -- TIPO 40 - Entradas do Estado OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  type tab_tp40 is record(
    tipo          varchar2(2),
    ano_refer_DMA number(4),
    mes_refer_DMA varchar2(2),
    num_ie        varchar2(9),
    vl_base_calc  number(12),
    vl_isent_nt   number(12),
    vl_outras     number(12));
  --
  type t_tab_tp40 is table of tab_tp40 index by binary_integer;
  vt_tab_tp40 t_tab_tp40;
  --
  -- TIPO 50  - Entradas de Outras Unidades da Federação OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  type tab_tp50 is record(
    tipo          varchar2(2),
    ano_refer_DMA number(4),
    mes_refer_DMA varchar2(2),
    num_ie        varchar2(9),
    vl_base_calc  number(12),
    vl_isent_nt   number(12),
    vl_outras     number(12));
  --
  type t_tab_tp50 is table of tab_tp50 index by binary_integer;
  vt_tab_tp50 t_tab_tp50;
  --
  -- TIPO 60  - Entradas do Exterior OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  type tab_tp60 is record(
    tipo          varchar2(2),
    ano_refer_DMA number(4),
    mes_refer_DMA varchar2(2),
    num_ie        varchar2(9),
    vl_base_calc  number(12),
    vl_isent_nt   number(12),
    vl_outras     number(12));
  --
  type t_tab_tp60 is table of tab_tp60 index by binary_integer;
  vt_tab_tp60 t_tab_tp60;
  --
  -- TIPO 66  - Saídas para o Estado OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  type tab_tp66 is record(
    tipo          varchar2(2),
    ano_refer_DMA number(4),
    mes_refer_DMA varchar2(2),
    num_ie        varchar2(9),
    vl_base_calc  number(12),
    vl_isent_nt   number(12),
    vl_outras     number(12));
  --
  type t_tab_tp66 is table of tab_tp66 index by binary_integer;
  vt_tab_tp66 t_tab_tp66;
  --
  -- TIPO 77  - Saídas para Outras Unidades da Federação OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  type tab_tp77 is record(
    tipo          varchar2(2),
    ano_refer_DMA number(4),
    mes_refer_DMA varchar2(2),
    num_ie        varchar2(9),
    vl_base_calc  number(12),
    vl_isent_nt   number(12),
    vl_outras     number(12));
  --
  type t_tab_tp77 is table of tab_tp77 index by binary_integer;
  vt_tab_tp77 t_tab_tp77;
  --
  -- TIPO 88  - Saídas para o exterior OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  type tab_tp88 is record(
    tipo          varchar2(2),
    ano_refer_DMA number(4),
    mes_refer_DMA varchar2(2),
    num_ie        varchar2(9),
    vl_base_calc  number(12),
    vl_isent_nt   number(12),
    vl_outras     number(12));
  --
  type t_tab_tp88 is table of tab_tp88 index by binary_integer;
  vt_tab_tp88 t_tab_tp88;
  --
  -- TP99 - Rodapé do arquivo
  type tab_tp99 is record(
    tipo           number(2),
    qtde_registros number(5));
  --
  type t_tab_tp99 is table of tab_tp99 index by binary_integer;
  vt_tab_tp99 t_tab_tp99;
  --
  -- Cursores
  --
  cursor c_det_cfop is
    select nf.id notafiscal_id,
           nf.dm_ind_oper, -- 0-Entrada, 1-Saída
           c.tipooperacao_id,
           top.cd tipooperacao_cd,
           nf.dm_ind_emit,  -- 0-Emissão Própria, 1-Terceiros
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie serie_nf,
           inf.id itemnf_id
      from nota_fiscal      nf,
           mod_fiscal       mf,
           item_nota_fiscal inf,
           cfop             c,
           tipo_operacao    top
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65')
       and inf.notafiscal_id  = nf.id
       and c.id               = inf.cfop_id
       and top.id(+)          = c.tipooperacao_id
     order by nf.dm_ind_oper, 
              top.cd;
  --
  cursor c_det_cfop_ct is
    select ct.id conhectransp_id,
           ct.dm_ind_oper,
           ct.pessoa_id,
           ct.dt_hr_emissao  dt_emiss,
           ct.nro_ct,
           ct.serie serie_ct,
           ct.subserie subserie_ct,
           r.id ctreganal_id,
           ct.dm_ind_emit,
           c.tipooperacao_id,
           top.cd tipooperacao_cd
      from conhec_transp ct, 
           ct_reg_anal r, 
           cfop c, 
           tipo_operacao top
     where ct.empresa_id      = gt_row_abertura_gia.empresa_id
       and ct.dm_st_proc      = 4 -- Autorizada
       and ((ct.dm_ind_emit = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and ct.dm_arm_cte_terc = 0
       and r.conhectransp_id  = ct.id
       and c.id               = r.cfop_id
       and top.id(+)          = c.tipooperacao_id
     order by ct.dm_ind_oper, 
              top.cd;
  --
  cursor c_det_cfop_sc is
    select nf.id notafiscal_id,
           nf.dm_ind_oper,
           nf.dm_ind_emit,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie serie_nf,
           r.id nfregistanalit_id,
           c.tipooperacao_id,
           top.cd tipooperacao_cd
      from nota_fiscal     nf,
           mod_fiscal      mf,
           nfregist_analit r,
           cfop            c,
           tipo_operacao   top
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('06', '29', '28', '21', '22')
       and r.notafiscal_id    = nf.id
       and c.id               = r.cfop_id
       and top.id(+)          = c.tipooperacao_id
     order by nf.dm_ind_oper, 
              top.cd;
  --
  -- Cupom Fiscal -- Sempre saída
  cursor c_det_cfop_ecf is
    select r.id reducaozecf_id,
           r.dt_doc dt_emiss,
           ramd.id reganalmovdiaecf_id,
           c.tipooperacao_id,
           top.cd tipooperacao_cd
      from equip_ecf e,
           reducao_z_ecf r,
           reg_anal_mov_dia_ecf ramd,
           cfop c,
           tipo_operacao top
     where e.empresa_id        = gt_row_abertura_gia.empresa_id
       and r.equipecf_id       = e.id
       and r.dm_st_proc        = 1 -- Validada
       and to_date(r.dt_doc, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and ramd.reducaozecf_id = r.id
       and c.id                = ramd.cfop_id
       and top.id(+)           = c.tipooperacao_id
     order by top.cd;
  --
  cursor c_apur_icms is
    select ai.id apuracaoicms_id,
           ai.vl_total_debito,
           ai.vl_ajust_debito,
           ai.vl_total_ajust_deb,
           ai.vl_estorno_credito,
           ai.vl_total_credito,
           ai.vl_ajust_credito,
           ai.vl_total_ajust_cred,
           ai.vl_estorno_debido,
           ai.vl_saldo_credor_ant,
           ai.vl_total_deducao,
           ai.vl_icms_recolher,
           ai.vl_saldo_apurado,
           ai.vl_saldo_credor_transp
      from apuracao_icms ai
     where ai.empresa_id  = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao = 3 -- Processada
       and ai.dm_tipo     = 0 -- Real
       and to_date(ai.dt_inicio, 'dd/mm/rrrr') >= gt_row_abertura_gia.dt_ini
       and to_date(ai.dt_fim, 'dd/mm/rrrr')    <= gt_row_abertura_gia.dt_fin;
  --
  -- Apuração de ICMS-ST Bahia
  cursor c_apur_icmsst is
    select aor.cd, sum(obr.vl_orig_rec) vl_orig_rec
      from per_apur_icms_st       p,
           apuracao_icms_st       ai,
           estado                 est,
           obrig_rec_apur_icms_st obr,
           aj_obrig_rec           aor
     where p.empresa_id          = gt_row_abertura_gia.empresa_id
       and to_date(p.dt_inicio, 'dd/mm/rrrr') >= gt_row_abertura_gia.dt_ini
       and to_date(p.dt_fim, 'dd/mm/rrrr')    <= gt_row_abertura_gia.dt_fin
       and p.dm_tipo             = 0 -- Real
       and ai.perapuricmsst_id   = p.id
       and est.id                = ai.estado_id
       and est.sigla_estado      = 'BA' -- Bahia
       and obr.apuracaoicmsst_id = ai.id
       and aor.id                = obr.ajobrigrec_id
     group by aor.cd
     order by 1;
  --
  cursor c_inv is
    select iv.id inventario_id,
           trunc(iv.dt_inventario, 'mm') dt_inventario,
           nvl(iv.vl_item, 0) vl_item
      from inventario iv
     where iv.empresa_id = gt_row_abertura_gia.empresa_id
       and iv.dm_st_proc = 1
       and ((trunc(iv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(to_date(gt_row_abertura_gia.dt_ini), 'rrrr'), 'rrrr') - 2))) 
             or
            (trunc(iv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(to_date(gt_row_abertura_gia.dt_ini), 'rrrr'), 'rrrr') - 1))))
       and nvl(iv.vl_item, 0) > 0;
  --
  cursor c_cst(en_inventario_id in inventario.id%type) is
    select cs.cod_st,
           nvl(sum(nvl(ic.vl_bc_icms, 0)), 0) vl_bc_icms,
           nvl(sum(nvl(ic.vl_icms, 0)), 0) vl_icms
      from invent_cst ic, 
           cod_st cs
     where ic.inventario_id = en_inventario_id
       and cs.id            = ic.codst_id
     group by cs.cod_st;
  --
  -- Limpar os vetores
  procedure pkb_limpa_vetor_ba is
    --
  begin
    --
    vt_tab_tp00.delete;
    vt_tab_tp01.delete;
    vt_tab_tp08.delete;
    vt_tab_tp09.delete;
    vt_bi_tab_tp10.delete;
    vt_bi_tab_tp11.delete;
    vt_tab_tp12.delete;
    vt_tab_tp13.delete;
    vt_tab_tp14.delete;
    vt_tab_tp15.delete;
    vt_tab_tp16.delete;
    vt_tab_tp17.delete;
    vt_tab_tp18.delete;
    vt_tab_tp19.delete;
    vt_tab_tp20.delete;
    vt_tab_tp21.delete;
    vt_tab_tp22.delete;
    vt_tab_tp30.delete;
    vt_tab_tp31.delete;
    vt_tab_tp40.delete;
    vt_tab_tp50.delete;
    vt_tab_tp60.delete;
    vt_tab_tp66.delete;
    vt_tab_tp77.delete;
    vt_tab_tp88.delete;
    --
    vt_tab_tp99.delete;
    --
    vn_qtde_tp00 := 0;
    vn_qtde_tp01 := 0;
    vn_qtde_tp08 := 0;
    vn_qtde_tp09 := 0;
    vn_qtde_tp10 := 0;
    vn_qtde_tp11 := 0;
    vn_qtde_tp12 := 0;
    vn_qtde_tp13 := 0;
    vn_qtde_tp14 := 0;
    vn_qtde_tp15 := 0;
    vn_qtde_tp16 := 0;
    vn_qtde_tp17 := 0;
    vn_qtde_tp18 := 0;
    vn_qtde_tp19 := 0;
    vn_qtde_tp20 := 0;
    vn_qtde_tp21 := 0;
    vn_qtde_tp22 := 0;
    vn_qtde_tp30 := 0;
    vn_qtde_tp31 := 0;
    vn_qtde_tp40 := 0;
    vn_qtde_tp50 := 0;
    vn_qtde_tp60 := 0;
    vn_qtde_tp66 := 0;
    vn_qtde_tp77 := 0;
    vn_qtde_tp88 := 0;
    vn_qtde_tp99 := 0;
    --
  end pkb_limpa_vetor_ba;
  --
  -- Procedimento monta a estrutura do arquivo da GIA-BA
  procedure pkb_monta_estr_arq_gia_ba is
    --
    vn_fase_arq number := 0;
    --
  begin
    --
    vn_fase_arq := 1;
    --
    -- Tipo 00 - Registro mestre da DMA
    if nvl(vt_tab_tp00.count, 0) > 0 then
      --
      vn_fase_arq := 1.1;
      --
      i := nvl(vt_tab_tp00.first, 0);
      --
      loop
        --
        vn_fase_arq := 1.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 1.3;
        --
        vn_qtde_tp00 := nvl(vn_qtde_tp00, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp00(i).tipo, 2, '00');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).id_arquivo, 5, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).inf_padrao_fixa, 1, 'O');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).num_cpf_resp, 11, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).nome_resp_decl, 35, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp00(i).ano_layout, 4, '0');
        --
        vn_fase_arq := 1.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '00',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 1.5;
        --
        if i = vt_tab_tp00.last then
          exit;
        else
          i := vt_tab_tp00.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 00 - Registro mestre da DMA
    --
    vn_fase_arq := 2;
    --
    -- Tipo 01 - Identificação da empresa do DMA
    if nvl(vt_tab_tp01.count, 0) > 0 then
      --
      vn_fase_arq := 2.1;
      --
      i := nvl(vt_tab_tp01.first, 0);
      --
      loop
        --
        vn_fase_arq := 2.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 2.3;
        --
        vn_qtde_tp01 := nvl(vn_qtde_tp01, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp01(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).num_ie, 9, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).inf_decl_retif, 1, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp01(i).inf_decl_baixa_emp, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).inf_contr_insc_unica, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).inf_decl_mudanca_cond, 1, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).data_enc_balanco, 8, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp01(i).firma_razao_social, 50, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).codigo_municipio, 5, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).codigo_ativ_econ, 7, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).valor_fixo, 2, '00');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp01(i).inf_dma_consol_per, 1, ' ');
        --
        vn_fase_arq := 2.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '01',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 2.5;
        --
        if i = vt_tab_tp01.last then
          exit;
        else
          i := vt_tab_tp01.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 01 - Identificação da empresa do DMA
    --
    vn_fase_arq := 3;
    --
    -- Tipo 08 - Entradas por UF
    if nvl(vt_tab_tp08.count, 0) > 0 then
      --
      vn_fase_arq := 3.1;
      --
      i := nvl(vt_tab_tp08.first, 0);
      --
      loop
        --
        vn_fase_arq := 3.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 3.3;
        --
        vn_qtde_tp08 := nvl(vn_qtde_tp08, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp08(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).num_ie, 9, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).sigla_uf, 2, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).vl_contabil, 12, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).base_calculo, 12, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).vl_outras, 12, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).vl_icms_st_en_elet, 12, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp08(i).vl_icms_st_prod_serv, 12, '0');
        --
        vn_fase_arq := 3.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '08',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 3.5;
        --
        if i = vt_tab_tp08.last then
          exit;
        else
          i := vt_tab_tp08.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 08 - Entradas por UF
    --
    vn_fase_arq := 4;
    --
    -- Tipo 09 - Saídas por UF
    if nvl(vt_tab_tp09.count, 0) > 0 then
      --
      vn_fase_arq := 4.1;
      --
      i := nvl(vt_tab_tp09.first, 0);
      --
      loop
        --
        vn_fase_arq := 4.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 4.3;
        --
        vn_qtde_tp09 := nvl(vn_qtde_tp09, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp09(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp09(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp09(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp09(i).num_ie, 9, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp09(i).sigla_uf, 2, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp09(i).vl_contabil_nao_contr, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp09(i).vl_contabil_contr, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp09(i).base_calculo_nao_contr, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp09(i).base_calculo_contr, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp09(i).vl_outras, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp09(i).vl_icms_st_aquis_serv, 0), 12, '0');
        --
        vn_fase_arq := 4.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '09',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 4.5;
        --
        if i = vt_tab_tp09.last then
          exit;
        else
          i := vt_tab_tp09.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 09 - Saídas por UF
    --
    vn_fase_arq := 5;
    --
    -- Tipo 10 - Entradas por Operação
    if nvl(vt_bi_tab_tp10.count, 0) > 0 then
      --
      vn_fase_arq := 5.1;
      --
      i := nvl(vt_bi_tab_tp10.first, -1);
      --
      loop
        --
        vn_fase_arq := 5.2;
        --
        if nvl(i, 0) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 5.3;
        --
        j := nvl(vt_bi_tab_tp10(i).first, -1);
        --
        loop
          --
          if nvl(j, 0) = -1 then
            exit;
          end if;
          --
          vn_qtde_tp10 := nvl(vn_qtde_tp10, 0) + 1;
          --
          gl_conteudo := lpad(vt_bi_tab_tp10(i)(j).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp10(i)(j).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp10(i)(j).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).num_ie, 0), 9, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).status_ent_saida, 0), 1, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).num_detalhamento, 0), 1, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).tipo_detalhamento, 0), 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).vl_contabil, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).base_calculo, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).vl_isentas, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i)(j).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 5.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '10',
                                 el_conteudo       => gl_conteudo);
          --
          if j = vt_bi_tab_tp10(i).last then
            exit;
          else
            j := vt_bi_tab_tp10(i).next(j);
          end if;
          --
        end loop;
        --
        vn_fase_arq := 5.5;
        --
        if i = vt_bi_tab_tp10.last then
          exit;
        else
          i := vt_bi_tab_tp10.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 10 - Entradas por Operação
    --
    vn_fase_arq := 6;
    --
    -- Tipo 11 - Saídas por operação
    if nvl(vt_bi_tab_tp11.count, 0) > 0 then
      --
      vn_fase_arq := 6.1;
      --
      i := nvl(vt_bi_tab_tp11.first, -1);
      --
      loop
        --
        vn_fase_arq := 6.2;
        --
        if nvl(i, 0) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 6.3;
        --
        j := nvl(vt_bi_tab_tp11(i).first, -1);
        --
        loop
          --
          if nvl(j, 0) = -1 then
            exit;
          end if;
          --
          vn_qtde_tp11 := nvl(vn_qtde_tp11, 0) + 1;
          --
          gl_conteudo := lpad(vt_bi_tab_tp11(i)(j).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp11(i)(j).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp11(i)(j).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).status_ent_saida, 0), 1, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).num_detalhamento, 0), 1, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).tipo_detalhamento, 0), 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).vl_contabil, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).base_calculo, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).vl_isentas, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i)(j).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 6.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '11',
                                 el_conteudo       => gl_conteudo);
          --
          if j = vt_bi_tab_tp11(i).last then
            exit;
          else
            j := vt_bi_tab_tp11(i).next(j);
          end if;
          --
        end loop;
        --
        vn_fase_arq := 6.5;
        --
        if i = vt_bi_tab_tp11.last then
          exit;
        else
          i := vt_bi_tab_tp11.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP11 - Saídas por operação
    --
    vn_fase_arq := 7;
    --
    -- Tipo 12 - Estoque
    if nvl(vt_tab_tp12.count, 0) > 0 then
      --
      vn_fase_arq := 7.1;
      --
      i := nvl(vt_tab_tp12.first, 0);
      --
      loop
        --
        vn_fase_arq := 7.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 7.3;
        --
        vn_qtde_tp12 := nvl(vn_qtde_tp12, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp12(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp12(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp12(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp12(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp12(i).status_est_inic_final, 0), 1, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp12(i).tipo_natur_estoque, 0), 2, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp12(i).vl_trib_est_inic_final, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp12(i).vl_isentas_nao_trib, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp12(i).vl_outras, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp12(i).vl_total, 0), 12, '0');
        --
        vn_fase_arq := 7.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '12',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 7.5;
        --
        if i = vt_tab_tp12.last then
          exit;
        else
          i := vt_tab_tp12.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 12 - Estoque
    --
    vn_fase_arq := 8;
    --
    -- Tipo 13 - Valores Fiscais dedutíveis
    if nvl(vt_tab_tp13.count, 0) > 0 then
      --
      vn_fase_arq := 8.1;
      --
      i := nvl(vt_tab_tp13.first, 0);
      --
      loop
        --
        vn_fase_arq := 8.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 8.3;
        --
        vn_qtde_tp13 := nvl(vn_qtde_tp13, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp13(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp13(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp13(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).status_ent_saida, 0), 1, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).vl_compras_ativo_imob, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).vl_aquis_mat_uso_consumo, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).vl_transf_ativo_imob, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).vl_transf_mat_uso_consumo, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).vl_ent_retorno, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).vl_outras, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp13(i).vl_total_ent_saida, 0), 12, '0');
        --
        vn_fase_arq := 8.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '13',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 8.5;
        --
        if i = vt_tab_tp13.last then
          exit;
        else
          i := vt_tab_tp13.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 13 - Valores Fiscais dedutíveis
    --
    vn_fase_arq := 9;
    --
    -- Tipo 14 - Apuração de Imposto
    if nvl(vt_tab_tp14.count, 0) > 0 then
      --
      vn_fase_arq := 9.1;
      --
      i := nvl(vt_tab_tp14.first, 0);
      --
      loop
        --
        vn_fase_arq := 9.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 9.3;
        --
        vn_qtde_tp14 := nvl(vn_qtde_tp14, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp14(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp14(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp14(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).vl_deb_imp_saidas_trib, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).vl_deb_imp_outros_debitos, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).vl_deb_imp_estorno_credito, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).vl_cred_imp_entradas_trib, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).vl_cred_imp_outros_creditos, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).vl_cred_imp_estorno_debito, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp14(i).vl_cred_imp_saldo_cred_per_ant, 0), 12, '0');
        --
        vn_fase_arq := 9.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '14',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 9.5;
        --
        if i = vt_tab_tp14.last then
          exit;
        else
          i := vt_tab_tp14.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 14 - Apuração de Imposto
    --
    vn_fase_arq := 10;
    --
    -- Tipo 15 - Apuração de Imposto
    if nvl(vt_tab_tp15.count, 0) > 0 then
      --
      vn_fase_arq := 10.1;
      --
      i := nvl(vt_tab_tp15.first, 0);
      --
      loop
        --
        vn_fase_arq := 10.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 10.3;
        --
        vn_qtde_tp15 := nvl(vn_qtde_tp15, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp15(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp15(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp15(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).vl_conta_corrente_deducoes, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).vl_conta_corrente_imp_recolher, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).vl_total_debito, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).vl_total_credito, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).vl_saldo_devedor, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).vl_saldo_credor, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp15(i).vl_diferencial_aliquota, 0), 12, '0');
        --
        vn_fase_arq := 10.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '15',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 10.5;
        --
        if i = vt_tab_tp15.last then
          exit;
        else
          i := vt_tab_tp15.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 15 - Apuração de Imposto
    --
    vn_fase_arq := 11;
    --
    -- Tipo 16 - Dados de ICMS Substituição Tributária, Importação, Diferimento, Imposto Recolhido
    if nvl(vt_tab_tp16.count, 0) > 0 then
      --
      vn_fase_arq := 11.1;
      --
      i := nvl(vt_tab_tp16.first, 0);
      --
      loop
        --
        vn_fase_arq := 11.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 11.3;
        --
        if nvl(vt_tab_tp16(i).vl_icms_st_antecip, 0) > 0 or
           nvl(vt_tab_tp16(i).vl_icms_st_retencao, 0) > 0 or
           nvl(vt_tab_tp16(i).vl_icms_import_indust_comerc, 0) > 0 or
           nvl(vt_tab_tp16(i).vl_icms_import_imob_consumo, 0) > 0 or
           nvl(vt_tab_tp16(i).vl_diferimento, 0) > 0 or
           nvl(vt_tab_tp16(i).vl_imposto_recolhido, 0) > 0 then
          --
          vn_qtde_tp16 := nvl(vn_qtde_tp16, 0) + 1;
          --
          gl_conteudo := lpad(vt_tab_tp16(i).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp16(i).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp16(i).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp16(i).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp16(i).vl_icms_st_antecip, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp16(i).vl_icms_st_retencao, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp16(i).vl_icms_import_indust_comerc, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp16(i).vl_icms_import_imob_consumo, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp16(i).vl_diferimento, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp16(i).vl_imposto_recolhido, 0), 12, '0');
          --
          vn_fase_arq := 11.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '16',
                                 el_conteudo       => gl_conteudo);
          --
        end if;
        --
        vn_fase_arq := 11.5;
        --
        if i = vt_tab_tp16.last then
          exit;
        else
          i := vt_tab_tp16.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 16 - Dados de ICMS Substituição Tributária, Importação, Diferimento, Imposto Recolhido
    --
    vn_fase_arq := 12;
    --
    -- Tipo 17 - Informações Complementares
    if nvl(vt_tab_tp17.count, 0) > 0 then
      --
      vn_fase_arq := 12.1;
      --
      i := nvl(vt_tab_tp17.first, 0);
      --
      loop
        --
        vn_fase_arq := 12.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 12.3;
        --
        vn_qtde_tp17 := nvl(vn_qtde_tp17, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp17(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp17(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp17(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).num_empregados, 0), 6, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).KWH_consumidos_periodo, 0), 7, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).vl_recolhido_cofins, 0), 11, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).vl_icms_cred_ativo_aliq7, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).vl_icms_cred_ativo_aliq12, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).vl_icms_cred_ativo_aliq17, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).vl_icms_cred_mat_uso_aliq7, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp17(i).vl_icms_cred_mat_uso_aliq12, 0), 12, '0');
        --
        vn_fase_arq := 12.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '17',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 12.5;
        --
        if i = vt_tab_tp17.last then
          exit;
        else
          i := vt_tab_tp17.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 17 - Informações Complementares
    --
    vn_fase_arq := 13;
    --
    -- Tipo 18 - Dados do Valor de compra aliquota 17%, dados do Crédito fiscal acumulado na exportação de mercadorias
    if nvl(vt_tab_tp18.count, 0) > 0 then
      --
      vn_fase_arq := 13.1;
      --
      i := nvl(vt_tab_tp18.first, 0);
      --
      loop
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 13.2;
        --
        vn_qtde_tp18 := nvl(vn_qtde_tp18, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp18(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp18(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp18(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).vl_icms_cred_est_ext17, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).vl_saldo_ant_cred_fis_exp, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).vl_cred_fis_exp_dir_gera_mes, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).vl_cred_fis_exp_ind_gera_mes, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).vl_pag_icms_cred_util_mes, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).vl_transf_estab_cred_util_mes, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp18(i).vl_transf_terc_cred_util_mes, 0), 12, '0');
        --
        vn_fase_arq := 13.3;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '18',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 13.4;
        --
        if i = vt_tab_tp18.last then
          exit;
        else
          i := vt_tab_tp18.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 18 - Dados do Valor de compra aliquota 17%, dados do Crédito fiscal acumulado na exportação de mercadorias
    --
    vn_fase_arq := 14;
    --
    -- Tipo 19 - Dados do crédito fiscal acumulado na exportação de mercadorias e do crédito fiscal acumulado em virtude de
    --           diferimento, isenção, redução base de cálculo e outros motivos
    if nvl(vt_tab_tp19.count, 0) > 0 then
      --
      vn_fase_arq := 14.1;
      --
      i := nvl(vt_tab_tp19.first, 0);
      --
      loop
        --
        vn_fase_arq := 14.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 14.3;
        --
        vn_qtde_tp19 := nvl(vn_qtde_tp19, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp19(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp19(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp19(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).vl_exp_util_mes_imp_merc_ext, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).vl_exp_util_mes_decor_den_esp, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).vl_cred_fis_exp_decor_aut_fis, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).vl_saldo_ant_dif_isen_out_mot, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).vl_ger_mes_decor_dif, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).vl_ger_mes_decor_isencao, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp19(i).vl_ger_mes_decor_red_base_calc, 0), 12, '0');
        --
        vn_fase_arq := 14.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '19',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 14.5;
        --
        if i = vt_tab_tp19.last then
          exit;
        else
          i := vt_tab_tp19.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 19 - Dados do crédito fiscal acumulado na exportação de mercadorias e do crédito fiscal acumulado em virtude de
    --                   diferimento, isenção, redução base de cálculo e outros motivos
    --
    vn_fase_arq := 15;
    --
    -- Tipo 20 - Dados do crédito fiscal acumulado em virtude de diferimento, isenção, redução base de cálculo e outros motivos
    if nvl(vt_tab_tp20.count, 0) > 0 then
      --
      vn_fase_arq := 15.1;
      --
      i := nvl(vt_tab_tp20.first, 0);
      --
      loop
        --
        vn_fase_arq := 15.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 15.3;
        --
        vn_qtde_tp20 := nvl(vn_qtde_tp20, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp20(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp20(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp20(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp20(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp20(i).vl_cred_ger_mes_outros_mot, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp20(i).vl_cred_util_mes_pag_icms, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp20(i).vl_cred_util_mes_imp_merc_ext, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp20(i).vl_cred_util_mes_den_esp, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp20(i).vl_cred_util_mes_aut_fis, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp20(i).vl_cred_util_mes_tranf, 0), 12, '0');
        --
        vn_fase_arq := 15.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '20',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 15.5;
        --
        if i = vt_tab_tp20.last then
          exit;
        else
          i := vt_tab_tp20.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 20 - Dados do crédito fiscal acumulado em virtude de diferimento, isenção, redução base de cálculo e outros motivos
    --
    vn_fase_arq := 16;
    --
    -- Tipo 21 - Identificação do Responsável pela declaração
    if nvl(vt_tab_tp21.count, 0) > 0 then
      --
      vn_fase_arq := 16.1;
      --
      i := nvl(vt_tab_tp21.first, 0);
      --
      loop
        --
        vn_fase_arq := 16.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 16.3;
        --
        vn_qtde_tp21 := nvl(vn_qtde_tp21, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp21(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp21(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp21(i).num_crc_contab_resp_dma, 0), 7, '0');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp21(i).unid_fed_crc_contab, 0), 2, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp21(i).nome_contab_resp_dma, 0), 35, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp21(i).tipo_lograd_end_contab, 0), 3, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp21(i).desc_lograd, 0), 30, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp21(i).unid_fed_endereco, 0), 2, ' ');
        --
        vn_fase_arq := 16.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '21',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 16.5;
        --
        if i = vt_tab_tp21.last then
          exit;
        else
          i := vt_tab_tp21.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 21 - Identificação do Responsável pela declaração
    --
    vn_fase_arq := 17;
    --
    -- Tipo 22 - Identificação do Responsável pela declaração
    if nvl(vt_tab_tp22.count, 0) > 0 then
      --
      vn_fase_arq := 17.1;
      --
      i := nvl(vt_tab_tp22.first, 0);
      --
      loop
        --
        vn_fase_arq := 17.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 17.3;
        --
        vn_qtde_tp22 := nvl(vn_qtde_tp22, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp22(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp22(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp22(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp22(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp22(i).bairro_lograd, 0), 16, ' ');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp22(i).num_lograd, 0), 9, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp22(i).num_telef_contab, 0), 16, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp22(i).num_cep_contab, 0), 8, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp22(i).cod_mun_contab, 0), 5, '0');
        gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_tp22(i).desc_mun_contab, 0), 30, ' ');
        --
        vn_fase_arq := 17.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '22',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 17.5;
        --
        if i = vt_tab_tp22.last then
          exit;
        else
          i := vt_tab_tp22.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 22 - Identificação do Responsável pela declaração
    --
    vn_fase_arq := 17.6;
    --
    -- Tipo 30 - CS-DMA - Entradas
    if nvl(vt_tab_tp30.count, 0) > 0 then
      --
      vn_fase_arq := 17.7;
      --
      i := nvl(vt_tab_tp30.first, 0);
      --
      loop
        --
        vn_fase_arq := 17.8;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 17.9;
        --
        vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp30(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp30(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp30(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp30(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || vt_tab_tp30(i).status;
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp30(i).cod_munic, 0), 5, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp30(i).vl_bc_icms, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp30(i).vl_bc_Isen_Nt_icms, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp30(i).vl_icms, 0), 12, '0');
        --
        vn_fase_arq := 17.10;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '30',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 17.11;
        --
        if i = vt_tab_tp30.last then
          exit;
        else
          i := vt_tab_tp30.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 30 - CS-DMA - Entradas
    --
    vn_fase_arq := 17.12;
    --
    -- Tipo 31 - CS-DMA - Saídas
    if nvl(vt_tab_tp31.count, 0) > 0 then
      --
      vn_fase_arq := 17.13;
      --
      i := nvl(vt_tab_tp31.first, 0);
      --
      loop
        --
        vn_fase_arq := 17.14;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 17.15;
        --
        vn_qtde_tp31 := nvl(vn_qtde_tp31, 0) + 1;
        --
        gl_conteudo := lpad(vt_tab_tp31(i).tipo, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp31(i).ano_refer_dma, 4, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp31(i).mes_refer_dma, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp31(i).num_ie, 0), 9, ' ');
        gl_conteudo := gl_conteudo || vt_tab_tp31(i).status;
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp31(i).cod_munic, 0), 5, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp31(i).vl_bc_icms, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp31(i).vl_bc_Isen_Nt_icms, 0), 12, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp31(i).vl_icms, 0), 12, '0');
        --
        vn_fase_arq := 17.16;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '31',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 17.17;
        --
        if i = vt_tab_tp31.last then
          exit;
        else
          i := vt_tab_tp31.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 31 - CS-DMA - Saídas
    --
    vn_fase_arq := 18;
    --
    -- Tipo 40 - Entradas do Estado
    if nvl(vt_tab_tp40.count, 0) > 0 then
      --
      vn_fase_arq := 18.1;
      --
      i := nvl(vt_tab_tp40.first, 0);
      --
      loop
        --
        vn_fase_arq := 18.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 18.3;
        --
        if nvl(vt_tab_tp40(i).vl_base_calc, 0) > 0 or
           nvl(vt_tab_tp40(i).vl_isent_nt, 0) > 0 or
           nvl(vt_tab_tp40(i).vl_outras, 0) > 0 then
          --
          vn_qtde_tp40 := nvl(vn_qtde_tp40, 0) + 1;
          --
          gl_conteudo := lpad(vt_tab_tp40(i).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp40(i).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp40(i).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp40(i).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp40(i).vl_base_calc, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp40(i).vl_isent_nt, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp40(i).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 18.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '40',
                                 el_conteudo       => gl_conteudo);
          --
        end if;
        --
        vn_fase_arq := 18.5;
        --
        if i = vt_tab_tp40.last then
          exit;
        else
          i := vt_tab_tp40.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 40 - Entradas do Estado
    --
    vn_fase_arq := 19;
    --
    -- Tipo 50 - Entradas de Outras Unidades da Federação
    if nvl(vt_tab_tp50.count, 0) > 0 then
      --
      vn_fase_arq := 19.1;
      --
      i := nvl(vt_tab_tp50.first, 0);
      --
      loop
        --
        vn_fase_arq := 19.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 19.3;
        --
        if nvl(vt_tab_tp50(i).vl_base_calc, 0) > 0 or
           nvl(vt_tab_tp50(i).vl_isent_nt, 0) > 0 or
           nvl(vt_tab_tp50(i).vl_outras, 0) > 0 then
          --
          vn_qtde_tp50 := nvl(vn_qtde_tp50, 0) + 1;
          --
          gl_conteudo := lpad(vt_tab_tp50(i).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp50(i).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp50(i).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp50(i).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp50(i).vl_base_calc, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp50(i).vl_isent_nt, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp50(i).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 19.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '50',
                                 el_conteudo       => gl_conteudo);
          --
        end if;
        --
        vn_fase_arq := 19.5;
        --
        if i = vt_tab_tp50.last then
          exit;
        else
          i := vt_tab_tp50.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 50 - Entradas de Outras Unidades da Federação
    --
    vn_fase_arq := 20;
    --
    -- Tipo 60 - Entradas do Exterior
    if nvl(vt_tab_tp60.count, 0) > 0 then
      --
      vn_fase_arq := 20.1;
      --
      i := nvl(vt_tab_tp60.first, 0);
      --
      loop
        --
        vn_fase_arq := 20.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 20.3;
        --
        if nvl(vt_tab_tp60(i).vl_base_calc, 0) > 0 or
           nvl(vt_tab_tp60(i).vl_isent_nt, 0) > 0 or
           nvl(vt_tab_tp60(i).vl_outras, 0) > 0 then
          --
          vn_qtde_tp60 := nvl(vn_qtde_tp60, 0) + 1;
          --
          gl_conteudo := lpad(vt_tab_tp60(i).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp60(i).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp60(i).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp60(i).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp60(i).vl_base_calc, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp60(i).vl_isent_nt, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp60(i).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 20.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '60',
                                 el_conteudo       => gl_conteudo);
          --
        end if;
        --
        vn_fase_arq := 20.5;
        --
        if i = vt_tab_tp60.last then
          exit;
        else
          i := vt_tab_tp60.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 60 - Entradas do Exterior
    --
    vn_fase_arq := 21;
    --
    -- Tipo 66 - Saídas para o Estado
    if nvl(vt_tab_tp66.count, 0) > 0 then
      --
      vn_fase_arq := 21.1;
      --
      i := nvl(vt_tab_tp66.first, 0);
      --
      loop
        --
        vn_fase_arq := 21.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 21.3;
        --
        if nvl(vt_tab_tp66(i).vl_base_calc, 0) > 0 or
           nvl(vt_tab_tp66(i).vl_isent_nt, 0) > 0 or
           nvl(vt_tab_tp66(i).vl_outras, 0) > 0 then
          --
          vn_qtde_tp66 := nvl(vn_qtde_tp66, 0) + 1;
          --
          gl_conteudo := lpad(vt_tab_tp66(i).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp66(i).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp66(i).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp66(i).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp66(i).vl_base_calc, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp66(i).vl_isent_nt, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp66(i).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 21.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '66',
                                 el_conteudo       => gl_conteudo);
          --
        end if;
        --
        vn_fase_arq := 21.5;
        --
        if i = vt_tab_tp66.last then
          exit;
        else
          i := vt_tab_tp66.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 66 - Saídas para o Estado
    --
    vn_fase_arq := 22;
    --
    -- Tipo 77 - Saídas para Outras Unidades da Federação
    if nvl(vt_tab_tp77.count, 0) > 0 then
      --
      vn_fase_arq := 22.1;
      --
      i := nvl(vt_tab_tp77.first, 0);
      --
      loop
        --
        vn_fase_arq := 22.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 22.3;
        --
        if nvl(vt_tab_tp77(i).vl_base_calc, 0) > 0 or
           nvl(vt_tab_tp77(i).vl_isent_nt, 0) > 0 or
           nvl(vt_tab_tp77(i).vl_outras, 0) > 0 then
          --
          vn_qtde_tp77 := nvl(vn_qtde_tp77, 0) + 1;
          --
          gl_conteudo := lpad(vt_tab_tp77(i).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp77(i).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp77(i).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp77(i).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp77(i).vl_base_calc, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp77(i).vl_isent_nt, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp77(i).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 22.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '77',
                                 el_conteudo       => gl_conteudo);
          --
        end if;
        --
        vn_fase_arq := 22.5;
        --
        if i = vt_tab_tp77.last then
          exit;
        else
          i := vt_tab_tp77.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 77 - Saídas para Outras Unidades da Federação
    --
    vn_fase_arq := 23;
    --
    -- Tipo 88 - Saídas para o exterior
    if nvl(vt_tab_tp88.count, 0) > 0 then
      --
      vn_fase_arq := 23.1;
      --
      i := nvl(vt_tab_tp88.first, 0);
      --
      loop
        --
        vn_fase_arq := 23.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 23.3;
        --
        if nvl(vt_tab_tp88(i).vl_base_calc, 0) > 0 or
           nvl(vt_tab_tp88(i).vl_isent_nt, 0) > 0 or
           nvl(vt_tab_tp88(i).vl_outras, 0) > 0 then
          --
          vn_qtde_tp88 := nvl(vn_qtde_tp88, 0) + 1;
          --
          gl_conteudo := lpad(vt_tab_tp88(i).tipo, 2, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp88(i).ano_refer_dma, 4, '0');
          gl_conteudo := gl_conteudo || lpad(vt_tab_tp88(i).mes_refer_dma, 2, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp88(i).num_ie, 0), 9, ' ');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp88(i).vl_base_calc, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp88(i).vl_isent_nt, 0), 12, '0');
          gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp88(i).vl_outras, 0), 12, '0');
          --
          vn_fase_arq := 23.4;
          --
          pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                 ev_registrogia_cd => '88',
                                 el_conteudo       => gl_conteudo);
          --
        end if;
        --
        vn_fase_arq := 23.5;
        --
        if i = vt_tab_tp88.last then
          exit;
        else
          i := vt_tab_tp88.next(i);
        end if;
        --
      end loop;
      --
    end if; -- Tipo 88 - Saídas para o exterior
    --
    vn_fase_arq := 24;
    --
    -- TP99 - Rodapé do arquivo
    if nvl(vt_tab_tp99.count, 0) > 0 then
      --
      vn_fase_arq := 24.1;
      --
      i := nvl(vt_tab_tp99.first, 0);
      --
      loop
        --
        vn_fase_arq := 24.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 24.3;
        --
        vn_qtde_tp99 := nvl(vn_qtde_tp99, 0) + 1;
        --
        /*
        vt_tab_tp99(i).qtde_registros := nvl(vn_qtde_tp00,0) +
                                         nvl(vn_qtde_tp01,0) +
                                         nvl(vn_qtde_tp08,0) +
                                         nvl(vn_qtde_tp09,0) +
                                         nvl(vn_qtde_tp10,0) +
                                         nvl(vn_qtde_tp11,0) +
                                         nvl(vn_qtde_tp12,0) +
                                         nvl(vn_qtde_tp13,0) +
                                         nvl(vn_qtde_tp14,0) +
                                         nvl(vn_qtde_tp15,0) +
                                         nvl(vn_qtde_tp16,0) +
                                         nvl(vn_qtde_tp17,0) +
                                         nvl(vn_qtde_tp18,0) +
                                         nvl(vn_qtde_tp19,0) +
                                         nvl(vn_qtde_tp20,0) +
                                         nvl(vn_qtde_tp21,0) +
                                         nvl(vn_qtde_tp22,0) +
                                         nvl(vn_qtde_tp30,0) +
                                         nvl(vn_qtde_tp31,0) +
                                         nvl(vn_qtde_tp40,0) +
                                         nvl(vn_qtde_tp50,0) +
                                         nvl(vn_qtde_tp60,0) +
                                         nvl(vn_qtde_tp66,0) +
                                         nvl(vn_qtde_tp77,0) +
                                         nvl(vn_qtde_tp88,0) +
                                         nvl(vn_qtde_tp99,0);*/
        --
        vt_tab_tp99(i).qtde_registros := 1;
        --
        gl_conteudo := lpad(vt_tab_tp99(i).tipo, 2, '99');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp99(i).qtde_registros, 5, 0);
        --
        vn_fase_arq := 24.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '99',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 24.5;
        --
        if i = vt_tab_tp99.last then
          exit;
        else
          i := vt_tab_tp99.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP99 - Rodapé do arquivo
    --
    vn_fase_arq := 25;
    --
    -- Final da montagem das linhas do arquivo texto
    --
    pkb_limpa_vetor_ba;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_ba fase (' || vn_fase_arq || '): ' || sqlerrm);
  end pkb_monta_estr_arq_gia_ba;
  --
  function fkg_tipo_detalhamento(en_oper            in number,
                                 en_tipo_det        in number,
                                 en_tipooperacao_cd in tipo_operacao.cd%type)
    return number is
    --
    vv_tipo_detalhamento varchar2(2);
    --
  begin
    --
    if en_oper = 0 then -- Entrada
      --
      if en_tipo_det = 0 then -- Bahia
        --
        if en_tipooperacao_cd = 1 then -- Compras
          vv_tipo_detalhamento := '01';
        elsif en_tipooperacao_cd = 2 then -- Transferência
          vv_tipo_detalhamento := '02';
        elsif en_tipooperacao_cd = 3 then -- Devolução
          vv_tipo_detalhamento := '03';
        elsif en_tipooperacao_cd = 4 then -- Energia Eletrica
          vv_tipo_detalhamento := '04';
        elsif en_tipooperacao_cd = 5 then -- Comunicação
          vv_tipo_detalhamento := '05';
        elsif en_tipooperacao_cd = 6 then -- Transporte
          vv_tipo_detalhamento := '06';
        elsif en_tipooperacao_cd = 7 then -- Ativo Permanente
          vv_tipo_detalhamento := '07';
        elsif en_tipooperacao_cd = 8 then -- Uso e Consumo
          vv_tipo_detalhamento := '08';
        else -- Outras
          vv_tipo_detalhamento := '09';
        end if;
        --
      elsif en_tipo_det = 1 then -- Outros Estados
        --
        if en_tipooperacao_cd = 1 then -- Compras
          vv_tipo_detalhamento := '01';
        elsif en_tipooperacao_cd = 2 then -- Transferência
          vv_tipo_detalhamento := '02';
        elsif en_tipooperacao_cd = 3 then -- Devolução
          vv_tipo_detalhamento := '03';
        elsif en_tipooperacao_cd = 4 then -- Energia Eletrica
          vv_tipo_detalhamento := '04';
        elsif en_tipooperacao_cd = 5 then -- Comunicação
          vv_tipo_detalhamento := '05';
        elsif en_tipooperacao_cd = 6 then -- Transporte
          vv_tipo_detalhamento := '06';
        elsif en_tipooperacao_cd = 7 then -- Ativo Permanente
          vv_tipo_detalhamento := '07';
        elsif en_tipooperacao_cd = 8 then -- Uso e Consumo
          vv_tipo_detalhamento := '08';
        else -- Outras
          vv_tipo_detalhamento := '09';
        end if;
        --
      else
        -- Exterior
        --
        if en_tipooperacao_cd = 1 then -- Compras
          vv_tipo_detalhamento := '01';
        elsif en_tipooperacao_cd = 3 then -- Devolução
          vv_tipo_detalhamento := '02';
        elsif en_tipooperacao_cd = 5 then -- Comunicação
          vv_tipo_detalhamento := '03';
        elsif en_tipooperacao_cd = 7 then -- Ativo Permanente
          vv_tipo_detalhamento := '04';
        elsif en_tipooperacao_cd = 8 then -- Uso e Consumo
          vv_tipo_detalhamento := '05';
        else -- Outras
          vv_tipo_detalhamento := '06';
        end if;
        --
      end if;
      --
    else
      --
      if en_tipo_det = 0 then -- Bahia
        --
        if en_tipooperacao_cd = 10 then -- Vendas
          vv_tipo_detalhamento := '01';
        elsif en_tipooperacao_cd = 2 then -- Transferência
          vv_tipo_detalhamento := '02';
        elsif en_tipooperacao_cd = 3 then -- Devolução
          vv_tipo_detalhamento := '03';
        elsif en_tipooperacao_cd = 4 then -- Energia Eletrica
          vv_tipo_detalhamento := '04';
        elsif en_tipooperacao_cd = 5 then -- Comunicação
          vv_tipo_detalhamento := '05';
        elsif en_tipooperacao_cd = 6 then -- Transporte
          vv_tipo_detalhamento := '06';
        else -- Outras
          vv_tipo_detalhamento := '07';
        end if;
        --
      elsif en_tipo_det = 1 then -- Outros Estados
        --
        if en_tipooperacao_cd = 10 then -- Vendas
          vv_tipo_detalhamento := '01';
        elsif en_tipooperacao_cd = 2 then -- Transferência
          vv_tipo_detalhamento := '02';
        elsif en_tipooperacao_cd = 3 then -- Devolução
          vv_tipo_detalhamento := '03';
        elsif en_tipooperacao_cd = 4 then -- Energia Eletrica
          vv_tipo_detalhamento := '04';
        elsif en_tipooperacao_cd = 5 then -- Comunicação
          vv_tipo_detalhamento := '05';
        elsif en_tipooperacao_cd = 6 then -- Transporte
          vv_tipo_detalhamento := '06';
        else -- Outras
          vv_tipo_detalhamento := '07';
        end if;
        --
      else
        -- Exterior
        --
        if en_tipooperacao_cd = 10 then -- Vendas
          vv_tipo_detalhamento := '01';
        elsif en_tipooperacao_cd = 3 then -- Devolução
          vv_tipo_detalhamento := '02';
        elsif en_tipooperacao_cd = 5 then -- Comunicação
          vv_tipo_detalhamento := '03';
        else -- Outras
          vv_tipo_detalhamento := '04';
        end if;
        --
      end if;
      --
    end if;
    --
    return to_number(vv_tipo_detalhamento);
    --
  end fkg_tipo_detalhamento;
  --
begin
  --
  vn_fase := 1;
  --
  pkb_limpa_vetor_ba;
  --
  vn_fase := 2;
  --
  gv_tipocodarq_cd := '15'; -- DMA-BA
  gn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => gv_tipocodarq_cd);
  --
  --| Recuperando parêmetro que controla a soma dos valores de icms e ipi
  begin
    select e.dm_sm_icmsst_ipinrec_bs_outr
      into vn_dm_sm_icmsst_ipinrec_bs_out
      from empresa e
     where e.id = gt_row_abertura_gia.empresa_id;
  exception
    when others then
      vn_dm_sm_icmsst_ipinrec_bs_out := null;
  end;
  --
  vn_fase := 2.1;
  --
  -- Recupera dados do contador da empresa
  begin
    select substr(pe.nome, 1, 35),
           (lpad(f.num_cpf, 9, '0') || lpad(f.dig_cpf, 2, '0')),
           substr(pe.lograd, 1, 30),
           est.sigla_estado,
           translate(upper(co.crc), 'QWERTYUIOPASDFGHJKLÇZXCVBNM', ' '),
           pe.cep,
           cid.id cidade_id
      into vv_nome,
           vv_cpf_respons,
           vv_lograd_resp,
           vv_uf_resp,
           vv_num_crc_cont,
           vn_cep_resp,
           vn_cidade_id
      from pessoa           pe,
           contador         co,
           contador_empresa ce,
           fisica           f,
           cidade           cid,
           estado           est
     where ce.empresa_id  = gt_row_abertura_gia.empresa_id
       and ce.dm_situacao = 1 -- 0-inativo, 1-ativo
       and co.id          = ce.contador_id
       and pe.id          = co.pessoa_id
       and f.pessoa_id    = pe.id
       and cid.id         = pe.cidade_id
       and est.id         = cid.estado_id
       and rownum         = 1;
  exception
    when others then
      vv_nome         := ' ';
      vv_cpf_respons  := ' ';
      vv_lograd_resp  := ' ';
      vv_uf_resp      := ' ';
      vv_num_crc_cont := ' ';
      vn_cep_resp     := 0;
  end;
  --
  vn_fase := 2.2;
  --
  vv_num_ie := lpad(replace(replace(replace(replace(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), ',', ''), '.', ''), '-', ''), '/', ''), 9, '0');
  --
  vn_fase := 3;
  --
  -- Tipo 00 - Registro mestre da DMA
  vt_tab_tp00(1).tipo            := 00; -- tipo de arquivo
  vt_tab_tp00(1).id_arquivo      := 'DMA  '; --  fixo DMA
  vt_tab_tp00(1).inf_padrao_fixa := 'O'; -- fixo O
  vt_tab_tp00(1).num_cpf_resp    := vv_cpf_respons; --lpad(nvl(pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => gt_row_abertura_gia.pessoa_id), 0), 11, '0'); -- CPF do responsável
  vt_tab_tp00(1).nome_resp_decl  := vv_nome; -- Nome responsável pela declaração
  vt_tab_tp00(1).ano_layout      := 2010; -- fixo 2010
  --
  vn_fase := 4;
  --
  -- Tipo 01 - Identificação da empresa do DMA
  vt_tab_tp01(1).tipo          := 01; -- tipo de arquivo
  vt_tab_tp01(1).ano_refer_dma := to_number(to_char(gt_row_abertura_gia.dt_ini, 'RRRR')); -- ano de referencia da DMA
  vt_tab_tp01(1).mes_refer_dma := to_char(gt_row_abertura_gia.dt_ini, 'MM'); -- mes de referencia da DMA
  vt_tab_tp01(1).num_ie        := vv_num_ie; -- Inscrição Estadual
  --
  vn_fase := 4.1;
  --
  -- Informação se a declaração é uma retificação de outra declaração já prestada
  if gt_row_abertura_gia.dm_tipo_gia = '01' then -- Normal
    vt_tab_tp01(1).inf_decl_retif := 'N';
  else
    vt_tab_tp01(1).inf_decl_retif := 'S';
  end if;
  --
  vn_fase := 4.2;
  --
  vt_tab_tp01(1).inf_decl_baixa_emp    := 'N'; -- Informação se a declaração é por motivo de baixa da empresa
  vt_tab_tp01(1).inf_contr_insc_unica  := 'N'; -- Informação se o contribuinte possui Inscrição Unica
  vt_tab_tp01(1).inf_decl_mudanca_cond := 'N'; -- Informação se a declaração é por motivo de mudança de condição da empresa
  vt_tab_tp01(1).data_enc_balanco      := to_number('3112' || (to_number(to_char(gt_row_abertura_gia.dt_ini, 'RRRR')) - 1)); -- Data de encerramento do balanço
  --
  vn_fase := 4.3;
  --
  -- Recupera dados da empresa
  begin
    select substr(p.nome, 1, 50), 
           p.cidade_id, 
           j.cnae
      into vv_nome_empr, 
           vn_cidade_id, 
           vv_cnae_empr
      from empresa e, 
           pessoa p, 
           juridica j
     where e.id        = gt_row_abertura_gia.empresa_id
       and p.id        = e.pessoa_id
       and j.pessoa_id = p.id;
  exception
    when others then
      vv_nome_empr := ' ';
      vn_cidade_id := null;
      vv_cnae_empr := ' ';
  end;
  --
  vn_fase := 4.4;
  --
  vt_tab_tp01(1).firma_razao_social := vv_nome_empr; -- Firma ou Razão Social
  vt_tab_tp01(1).codigo_municipio   := pk_csf.fkg_cd_cidade_tipo_cod_arq(en_cidade_id     => vn_cidade_id,
                                                                         en_tipocodarq_id => gn_tipocodarq_id); -- Código do Município
  vt_tab_tp01(1).codigo_ativ_econ   := nvl(trim(vv_cnae_empr), '0'); -- Código de Atividade Econômica
  vt_tab_tp01(1).valor_fixo         := '00'; -- Valor Fixo
  vt_tab_tp01(1).inf_dma_consol_per := 'N'; -- Informação se a DMA é uma consolidação de períodos
  --
  vn_fase := 4.5;
  --
  -- Tipo 08 - Entradas por UF
  vt_tab_tp08(99).tipo                 := '08';
  vt_tab_tp08(99).ano_refer_DMA        := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp08(99).mes_refer_DMA        := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp08(99).num_ie               := vv_num_ie;
  vt_tab_tp08(99).sigla_uf             := 'ZZ';
  vt_tab_tp08(99).vl_contabil          := 0;
  vt_tab_tp08(99).base_calculo         := 0;
  vt_tab_tp08(99).vl_outras            := 0;
  vt_tab_tp08(99).vl_icms_st_en_elet   := 0;
  vt_tab_tp08(99).vl_icms_st_prod_serv := 0;
  --
  vn_fase := 4.6;
  --
  -- Tipo 09 - Saídas por UF
  vt_tab_tp09(99).tipo                   := '09';
  vt_tab_tp09(99).ano_refer_DMA          := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp09(99).mes_refer_DMA          := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp09(99).num_ie                 := vv_num_ie;
  vt_tab_tp09(99).sigla_uf               := 'ZZ';
  vt_tab_tp09(99).vl_contabil_nao_contr  := 0;
  vt_tab_tp09(99).vl_contabil_contr      := 0;
  vt_tab_tp09(99).base_calculo_nao_contr := 0;
  vt_tab_tp09(99).base_calculo_contr     := 0;
  vt_tab_tp09(99).vl_outras              := 0;
  vt_tab_tp09(99).vl_icms_st_aquis_serv  := 0;
  --
  vn_fase := 4.7;
  --
  -- Tipo 13 - Valores Fiscais dedutíveis - Entradas
  vt_tab_tp13(1).tipo                      := '13';
  vt_tab_tp13(1).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp13(1).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp13(1).num_ie                    := vv_num_ie;
  vt_tab_tp13(1).status_ent_saida          := 'E';
  vt_tab_tp13(1).vl_compras_ativo_imob     := 0;
  vt_tab_tp13(1).vl_aquis_mat_uso_consumo  := 0;
  vt_tab_tp13(1).vl_transf_ativo_imob      := 0;
  vt_tab_tp13(1).vl_transf_mat_uso_consumo := 0;
  vt_tab_tp13(1).vl_ent_retorno            := 0;
  vt_tab_tp13(1).vl_outras                 := 0;
  vt_tab_tp13(1).vl_total_ent_saida        := 0;
  --
  vn_fase := 4.8;
  --
  -- Tipo 13 - Valores Fiscais dedutíveis - Saídas
  vt_tab_tp13(2).tipo                      := '13';
  vt_tab_tp13(2).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp13(2).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp13(2).num_ie                    := vv_num_ie;
  vt_tab_tp13(2).status_ent_saida          := 'S';
  vt_tab_tp13(2).vl_compras_ativo_imob     := 0;
  vt_tab_tp13(2).vl_aquis_mat_uso_consumo  := 0;
  vt_tab_tp13(2).vl_transf_ativo_imob      := 0;
  vt_tab_tp13(2).vl_transf_mat_uso_consumo := 0;
  vt_tab_tp13(2).vl_ent_retorno            := 0;
  vt_tab_tp13(2).vl_outras                 := 0;
  vt_tab_tp13(2).vl_total_ent_saida        := 0;
  --
  -- Tipo 40 - Entradas do Estado - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  vt_tab_tp40(1).tipo                      := '40';
  vt_tab_tp40(1).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp40(1).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp40(1).num_ie                    := vv_num_ie;
  vt_tab_tp40(1).vl_base_calc              := 0;
  vt_tab_tp40(1).vl_isent_nt               := 0;
  vt_tab_tp40(1).vl_outras                 := 0;
  --
  -- Tipo 50 - Entradas de Outras Unidades da Federação - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  vt_tab_tp50(1).tipo                      := '50';
  vt_tab_tp50(1).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp50(1).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp50(1).num_ie                    := vv_num_ie;
  vt_tab_tp50(1).vl_base_calc              := 0;
  vt_tab_tp50(1).vl_isent_nt               := 0;
  vt_tab_tp50(1).vl_outras                 := 0;
  --
  -- Tipo 60 - Entradas do Exterior - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  vt_tab_tp60(1).tipo                      := '60';
  vt_tab_tp60(1).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp60(1).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp60(1).num_ie                    := vv_num_ie;
  vt_tab_tp60(1).vl_base_calc              := 0;
  vt_tab_tp60(1).vl_isent_nt               := 0;
  vt_tab_tp60(1).vl_outras                 := 0;
  --
  -- Tipo 66 - Saídas para o Estado - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  vt_tab_tp66(1).tipo                      := '66';
  vt_tab_tp66(1).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp66(1).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp66(1).num_ie                    := vv_num_ie;
  vt_tab_tp66(1).vl_base_calc              := 0;
  vt_tab_tp66(1).vl_isent_nt               := 0;
  vt_tab_tp66(1).vl_outras                 := 0;
  --
  -- Tipo 77 - Saídas para Outras Unidades da Federação - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  vt_tab_tp77(1).tipo                      := '77';
  vt_tab_tp77(1).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp77(1).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp77(1).num_ie                    := vv_num_ie;
  vt_tab_tp77(1).vl_base_calc              := 0;
  vt_tab_tp77(1).vl_isent_nt               := 0;
  vt_tab_tp77(1).vl_outras                 := 0;
  --
  -- Tipo 88 - Saídas para o exterior - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
  vt_tab_tp88(1).tipo                      := '88';
  vt_tab_tp88(1).ano_refer_DMA             := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp88(1).mes_refer_DMA             := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp88(1).num_ie                    := vv_num_ie;
  vt_tab_tp88(1).vl_base_calc              := 0;
  vt_tab_tp88(1).vl_isent_nt               := 0;
  vt_tab_tp88(1).vl_outras                 := 0;
  --
  vn_fase := 5;
  --
  -- Tipo 10 - Entradas por Operação
  -- Tipo 11 - Saídas por operação
  for rec in c_det_cfop loop
    exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
    --
    vn_fase := 5.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vv_cod_st_ipi          := null;
    vn_vl_base_calc_ipi    := 0;
    vn_aliq_ipi            := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_ipi    := 0;
    vn_vl_bc_outra_ipi     := 0;
    vn_ipi_nao_recup       := 0;
    vn_outro_ipi           := 0;
    vn_vl_fcp_icmsst       := 0;
    vn_aliq_fcp_icms       := 0;
    vn_vl_fcp_icms         := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    vn_ICMSCobradoST       := null;
    vn_Outros_Produtos     := null;
    --
    vn_fase := 5.2;
    --
    if rec.dm_ind_emit = 0 then
      --
      begin
        select nfd.uf
          into vv_sigla_estado
          from nota_fiscal_dest nfd
         where nfd.notafiscal_id = rec.notafiscal_id;
      exception
        when others then
          vv_sigla_estado := null;
      end;
      --
    else
      --
      begin
        select nfe.uf
          into vv_sigla_estado
          from nota_fiscal_emit nfe
         where nfe.notafiscal_id = rec.notafiscal_id;
      exception
        when others then
          vv_sigla_estado := null;
      end;
      --
    end if;
    --
    vn_fase := 5.21;
    --
    if trim(vv_sigla_estado) is null then
      --
      pkb_dados_pessoa(en_pessoa_id    => rec.pessoa_id,
                       sn_estado_id    => vn_estado_id,
                       sv_sigla_estado => vv_sigla_estado);
      --
    end if;
    --
    if trim(vv_sigla_estado) is null then
      --
      vv_sigla_estado := 'BA';
      --
    end if;
    --
    if nvl(vn_estado_id, 0) <= 0 then
      --
      vn_estado_id := pk_csf.fkg_Estado_id(ev_sigla_estado => vv_sigla_estado);
      --
    end if;
    --
    vn_fase := 5.3;
    --
    -- 1 - Oper.com crédito do imposto
    -- 2 - Oper.sem crédito do imposto (Isentas ou não Tributadas)
    -- 3 - Oper.sem crédito do imposto (Outras)
    -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
    pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec.itemnf_id,
                                      sn_cfop                => vn_cfop,
                                      sn_vl_operacao         => vn_vl_contabil,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                      sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                      sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                      sv_cod_st_ipi          => vv_cod_st_ipi, -- não utilizado
                                      sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi, -- não utilizado
                                      sn_aliq_ipi            => vn_aliq_ipi, -- não utilizado
                                      sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi, -- não utilizado
                                      sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi, -- não utilizado
                                      sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi, -- não utilizado
                                      sn_ipi_nao_recup       => vn_ipi_nao_recup, -- não utilizado
                                      sn_outro_ipi           => vn_outro_ipi, -- não utilizado
                                      sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                      sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                      sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                      sn_vl_fcp_icms         => vn_vl_fcp_icms);
    --
    -- Soma Valor do ICMS-ST Na Observação
    -- Soma o IPI não recuperado na Observação
    if nvl(vn_dm_sm_icmsst_ipinrec_bs_out, 0) = 1 then
      --
      if (nvl(vn_vl_contabil, 0) - nvl(vn_vl_imp_trib_ipi, 0)) = (nvl(vn_vl_base_calc_icms, 0) + nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) then -- VERIFICAÇÃO SE O IPI ESTA NA BASE DE CÁCULO.
        --
        vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0) +
                               nvl(vn_vl_imp_trib_icmsst, 0) +
                               nvl(vn_ipi_nao_recup, 0) +
                               nvl(vn_vl_imp_trib_ipi, 0);
        --
      else
        --
        vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0) +
                               nvl(vn_vl_imp_trib_icmsst, 0) +
                               nvl(vn_ipi_nao_recup, 0);
        --
      end if;
      --
    end if;
    --
    --
    vn_fase := 5.4;
    --
    if vv_sigla_estado = 'BA' then
      --
      vn_tipo_det := 0; -- Estado
      --
    elsif vv_sigla_estado = 'EX' then
      --
      vn_tipo_det := 2; -- Exterior
      --
    else
      --
      vn_tipo_det := 1; -- Outros Estados
      --
    end if;
    --
    vn_fase := 5.5;
    --
    begin
      select t.id, 
             t.cd
        into vn_tipooperacao_id,  
             vn_tipooperacao_cd
        from cfop c, 
             tipo_operacao t
       where c.cd = vn_cfop
         and t.id = c.tipooperacao_id;
    exception
      when others then
        vn_tipooperacao_id := 0;
        vn_tipooperacao_cd := 0;
    end;
    --
    vn_fase := 5.6;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 5.7;
      --
      if rec.dm_ind_oper = 0 then -- 0 - Entradas - Tipo 10 - Entradas por Operação
        --
        vn_fase := 5.8;
        --
        if vv_sigla_estado not in ('BA', 'EX') then -- Somente para outros estados
          --
          vb_achou := false;
          --
          begin
            vb_achou := vt_tab_tp08.exists(vn_estado_id);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 5.9;
          --
          if not vb_achou then
            --
            -- Tipo 08 - Entradas por UF
            vt_tab_tp08(vn_estado_id).tipo                 := '08';
            vt_tab_tp08(vn_estado_id).ano_refer_DMA        := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp08(vn_estado_id).mes_refer_DMA        := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp08(vn_estado_id).num_ie               := vv_num_ie;
            vt_tab_tp08(vn_estado_id).sigla_uf             := vv_sigla_estado;
            vt_tab_tp08(vn_estado_id).vl_contabil          := nvl(vn_vl_contabil, 0) * 100;
            vt_tab_tp08(vn_estado_id).base_calculo         := nvl(vn_vl_base_calc_icms, 0) * 100;
            vt_tab_tp08(vn_estado_id).vl_outras            := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp08(vn_estado_id).vl_icms_st_en_elet   := 0;
            vt_tab_tp08(vn_estado_id).vl_icms_st_prod_serv := nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            vt_tab_tp08(vn_estado_id).vl_contabil          := nvl(vt_tab_tp08(vn_estado_id).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp08(vn_estado_id).base_calculo         := nvl(vt_tab_tp08(vn_estado_id).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp08(vn_estado_id).vl_outras            := nvl(vt_tab_tp08(vn_estado_id).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp08(vn_estado_id).vl_icms_st_prod_serv := nvl(vt_tab_tp08(vn_estado_id).vl_icms_st_prod_serv, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100);
            --
          end if;
          --
          vb_achou := false;
          --
          begin
            vb_achou := vt_tab_tp08.exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 5.10;
          --
          if not vb_achou then
            --
            -- Tipo 08 - Entradas por UF (Totalizador)
            vt_tab_tp08(99).tipo                 := '08';
            vt_tab_tp08(99).ano_refer_DMA        := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp08(99).mes_refer_DMA        := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp08(99).num_ie               := vv_num_ie;
            vt_tab_tp08(99).sigla_uf             := 'ZZ';
            vt_tab_tp08(99).vl_contabil          := nvl(vn_vl_contabil, 0) * 100;
            vt_tab_tp08(99).base_calculo         := nvl(vn_vl_base_calc_icms, 0) * 100;
            vt_tab_tp08(99).vl_outras            := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp08(99).vl_icms_st_en_elet   := 0;
            vt_tab_tp08(99).vl_icms_st_prod_serv := nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            vt_tab_tp08(99).vl_contabil          := nvl(vt_tab_tp08(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp08(99).base_calculo         := nvl(vt_tab_tp08(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp08(99).vl_outras            := nvl(vt_tab_tp08(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp08(99).vl_icms_st_prod_serv := nvl(vt_tab_tp08(99).vl_icms_st_prod_serv, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100);
            --
          end if;
          --
        end if; -- 'BA'
        --
        vn_fase := 5.11;
        --
        --
        vn_tipo_detalhamento := fkg_tipo_detalhamento(en_oper            => rec.dm_ind_oper,
                                                      en_tipo_det        => vn_tipo_det,
                                                      en_tipooperacao_cd => vn_tipooperacao_cd);
        --
        vb_achou := false;
        --
        begin
          vb_achou := vt_bi_tab_tp10(vn_tipo_det).exists(vn_tipo_detalhamento);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 5.12;
        --
        if not vb_achou then
          --
          -- Tipo 10 - Entradas por Operação
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo              := '10';
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).num_ie            := vv_num_ie;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).status_ent_saida  := 'E';
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).num_detalhamento  := vn_tipo_det; 
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento := lpad(vn_tipo_detalhamento, 2, '0');
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil       := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo      := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas        := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras         := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras, 0) + nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        end if;
        --
        vn_fase := 5.13;
        --
        vb_achou := false;
        --
        begin
          --
          vb_achou := vt_bi_tab_tp10(9).exists(99);
          --
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 5.14;
        --
        if not vb_achou then
          --
          -- Tipo 10 - Entradas por Operação (Totalizadores)
          vt_bi_tab_tp10(9)(99).tipo              := '10';
          vt_bi_tab_tp10(9)(99).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp10(9)(99).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp10(9)(99).num_ie            := vv_num_ie;
          vt_bi_tab_tp10(9)(99).status_ent_saida  := 'E';
          vt_bi_tab_tp10(9)(99).num_detalhamento  := 9;
          vt_bi_tab_tp10(9)(99).tipo_detalhamento := '99';
          vt_bi_tab_tp10(9)(99).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp10(9)(99).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp10(9)(99).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp10(9)(99).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp10(9)(99).vl_contabil       := nvl(vt_bi_tab_tp10(9)(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp10(9)(99).base_calculo      := nvl(vt_bi_tab_tp10(9)(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp10(9)(99).vl_isentas        := nvl(vt_bi_tab_tp10(9)(99).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp10(9)(99).vl_outras         := nvl(vt_bi_tab_tp10(9)(99).vl_outras, 0) + nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        end if;
        --
        -- Tipo 40 - Entradas do Estado - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
        if vn_tipo_det = 0 then -- Estado
          --
          vn_fase := 5.141;
          --
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            vt_tab_tp40(1).vl_base_calc := nvl(vt_tab_tp40(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp40(1).vl_isent_nt  := nvl(vt_tab_tp40(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp40(1).vl_outras    := nvl(vt_tab_tp40(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '02' then -- Transferência
            --
            vt_tab_tp13(1).vl_transf_mat_uso_consumo := vt_tab_tp13(1).vl_transf_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Ativo Permanente
            --
            vt_tab_tp13(1).vl_compras_ativo_imob     := vt_tab_tp13(1) .vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '08' then -- Uso e Consumo
            --
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo  := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            vt_tab_tp13(1).vl_outras                 := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        elsif vn_tipo_det = 1 then -- Outros Estado
          --
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            vt_tab_tp50(1).vl_base_calc := nvl(vt_tab_tp50(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp50(1).vl_isent_nt  := nvl(vt_tab_tp50(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp50(1).vl_outras    := nvl(vt_tab_tp50(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '02' then -- Transferência
            --
            vt_tab_tp13(1).vl_transf_mat_uso_consumo := vt_tab_tp13(1).vl_transf_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Ativo Permanente
            --
            vt_tab_tp13(1).vl_compras_ativo_imob     := vt_tab_tp13(1).vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '08' then -- Uso e Consumo
            --
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo  := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            vt_tab_tp13(1).vl_outras                 := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
          end if;
          --
        else
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '06' then -- Outras
            --
            vt_tab_tp60(1).vl_base_calc              := nvl(vt_tab_tp60(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp60(1).vl_isent_nt               := nvl(vt_tab_tp60(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp60(1).vl_outras                 := nvl(vt_tab_tp60(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '04' then -- Ativo Permanente
            --
            vt_tab_tp13(1).vl_compras_ativo_imob     := vt_tab_tp13(1).vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '05' then -- Uso e Consumo
            --
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo  := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '06' then -- Outras
            --
            vt_tab_tp13(1).vl_outras                 := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        end if;
        --
      elsif rec.dm_ind_oper = 1 then -- 1 - Saídas
        --
        vn_fase := 5.15;
        --
        if vv_sigla_estado not in ('BA', 'EX') then
          --
          vn_dm_ind_ie_dest := 1;
          --
          begin
            select dm_ind_ie_dest
              into vn_dm_ind_ie_dest
              from nota_fiscal_dest
             where notafiscal_id = rec.notafiscal_id;
          exception
            when others then
              vn_dm_ind_ie_dest := 1;
          end;
          --
          vb_achou := false;
          --
          begin
            vb_achou := vt_tab_tp09.exists(vn_estado_id);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 5.16;
          --
          if not vb_achou then
            --
            -- Tipo 09 - Saídas por UF
            vt_tab_tp09(vn_estado_id).tipo          := '09';
            vt_tab_tp09(vn_estado_id).ano_refer_DMA := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp09(vn_estado_id).mes_refer_DMA := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp09(vn_estado_id).num_ie        := vv_num_ie;
            vt_tab_tp09(vn_estado_id).sigla_uf      := vv_sigla_estado;
            --
            if vn_dm_ind_ie_dest in (1, 2) then
              --
              vt_tab_tp09(vn_estado_id).vl_contabil_contr  := nvl(vn_vl_contabil, 0) * 100;
              vt_tab_tp09(vn_estado_id).base_calculo_contr := nvl(vn_vl_base_calc_icms, 0) * 100;
              --
            else
              --
              vt_tab_tp09(vn_estado_id).vl_contabil_nao_contr  := nvl(vn_vl_contabil, 0) * 100;
              vt_tab_tp09(vn_estado_id).base_calculo_nao_contr := nvl(vn_vl_base_calc_icms, 0) * 100;
              --
            end if;
            --
            vt_tab_tp09(vn_estado_id).vl_outras             := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp09(vn_estado_id).vl_icms_st_aquis_serv := nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            if vn_dm_ind_ie_dest in (1, 2) then
              --
              vt_tab_tp09(vn_estado_id).vl_contabil_contr  := nvl(vt_tab_tp09(vn_estado_id).vl_contabil_contr, 0) + (nvl(vn_vl_contabil, 0) * 100);
              vt_tab_tp09(vn_estado_id).base_calculo_contr := nvl(vt_tab_tp09(vn_estado_id).base_calculo_contr, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
              --
            else
              --
              vt_tab_tp09(vn_estado_id).vl_contabil_nao_contr  := nvl(vt_tab_tp09(vn_estado_id).vl_contabil_nao_contr, 0) + (nvl(vn_vl_contabil, 0) * 100);
              vt_tab_tp09(vn_estado_id).base_calculo_nao_contr := nvl(vt_tab_tp09(vn_estado_id).base_calculo_nao_contr, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
              --
            end if;
            --
            vt_tab_tp09(vn_estado_id).vl_outras             := nvl(vt_tab_tp09(vn_estado_id).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp09(vn_estado_id).vl_icms_st_aquis_serv := nvl(vt_tab_tp09(vn_estado_id).vl_icms_st_aquis_serv, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100);
            --
          end if;
          --
          vb_achou := false;
          --
          begin
            vb_achou := vt_tab_tp09.exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 5.17;
          --
          if not vb_achou then
            --
            -- Tipo 09 - Saídas por UF (Totalizador)
            vt_tab_tp09(99).tipo          := '09';
            vt_tab_tp09(99).ano_refer_DMA := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp09(99).mes_refer_DMA := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp09(99).num_ie        := vv_num_ie;
            vt_tab_tp09(99).sigla_uf      := 'ZZ';
            --
            if vn_dm_ind_ie_dest in (1, 2) then
              --
              vt_tab_tp09(99).vl_contabil_contr  := nvl(vn_vl_contabil, 0) * 100;
              vt_tab_tp09(99).base_calculo_contr := nvl(vn_vl_base_calc_icms, 0) * 100;
              --
            else
              --
              vt_tab_tp09(99).vl_contabil_nao_contr := nvl(vn_vl_contabil, 0) * 100;
              vt_tab_tp09(99).base_calculo_nao_contr := nvl(vn_vl_base_calc_icms, 0) * 100;
              --
            end if;
            --
            vt_tab_tp09(99).vl_outras             := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp09(99).vl_icms_st_aquis_serv := nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            if vn_dm_ind_ie_dest in (1, 2) then
              --
              vt_tab_tp09(99).vl_contabil_contr  := nvl(vt_tab_tp09(99).vl_contabil_contr, 0) + (nvl(vn_vl_contabil, 0) * 100);
              vt_tab_tp09(99).base_calculo_contr := nvl(vt_tab_tp09(99).base_calculo_contr, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
              --
            else
              --
              vt_tab_tp09(99).vl_contabil_nao_contr  := nvl(vt_tab_tp09(99).vl_contabil_nao_contr, 0) + (nvl(vn_vl_contabil, 0) * 100);
              vt_tab_tp09(99).base_calculo_nao_contr := nvl(vt_tab_tp09(99).base_calculo_nao_contr, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
              --
            end if;
            --
            vt_tab_tp09(99).vl_outras             := nvl(vt_tab_tp09(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp09(99).vl_icms_st_aquis_serv := nvl(vt_tab_tp09(vn_estado_id).vl_icms_st_aquis_serv, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100);
            --
          end if;
          --
        end if; -- 'BA'
        --
        vn_fase := 5.18;
        --
        vn_tipo_detalhamento := fkg_tipo_detalhamento(en_oper            => rec.dm_ind_oper,
                                                      en_tipo_det        => vn_tipo_det,
                                                      en_tipooperacao_cd => vn_tipooperacao_cd);
        --
        vb_achou := false;
        --
        begin
          vb_achou := vt_bi_tab_tp11(vn_tipo_det).exists(vn_tipo_detalhamento);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 5.19;
        --
        if not vb_achou then
          --
          -- Tipo 11 - Saídas por operação
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo              := '11';
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).num_ie            := vv_num_ie;
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).status_ent_saida  := 'S';
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).num_detalhamento  := vn_tipo_det;
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento := lpad(vn_tipo_detalhamento, 2, '0');
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil  := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).base_calculo := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas   := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_outras    := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
          --
        end if;
        --
        vn_fase := 5.20;
        --
        vb_achou := false;
        --
        begin
          vb_achou := vt_bi_tab_tp11(9).exists(99);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 5.21;
        --
        if not vb_achou then
          --
          -- Tipo 11 - Saídas por operação
          vt_bi_tab_tp11(9)(99).tipo              := '11';
          vt_bi_tab_tp11(9)(99).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp11(9)(99).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp11(9)(99).num_ie            := vv_num_ie;
          vt_bi_tab_tp11(9)(99).status_ent_saida  := 'S';
          vt_bi_tab_tp11(9)(99).num_detalhamento  := 9;
          vt_bi_tab_tp11(9)(99).tipo_detalhamento := '99';
          vt_bi_tab_tp11(9)(99).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp11(9)(99).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp11(9)(99).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp11(9)(99).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp11(9)(99).vl_contabil  := nvl(vt_bi_tab_tp11(9)(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp11(9)(99).base_calculo := nvl(vt_bi_tab_tp11(9)(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp11(9)(99).vl_isentas   := nvl(vt_bi_tab_tp11(9)(99).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp11(9)(99).vl_outras    := nvl(vt_bi_tab_tp11(9)(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
          --
        end if;
        --
        if vn_tipo_det = 0 then -- Estado
          --
          vn_fase := 5.211;
          --
          /*
             1 Vendas
             2 Transferências
             3 Devoluções/Anulações
             4 Energia Elétrica
             5 Comunicações
             6 Transportes
             7 Outras
          */
          --
          if vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Outras
            --
            vt_tab_tp66(1).vl_base_calc       := nvl(vt_tab_tp66(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp66(1).vl_isent_nt        := nvl(vt_tab_tp66(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp66(1).vl_outras          := nvl(vt_tab_tp66(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp13(2).vl_outras          := vt_tab_tp13(2).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(2).vl_total_ent_saida := vt_tab_tp13(2).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        elsif vn_tipo_det = 1 then -- Outros Estado
          --
          if vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Outras
            --
            vt_tab_tp77(1).vl_base_calc       := nvl(vt_tab_tp77(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp77(1).vl_isent_nt        := nvl(vt_tab_tp77(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp77(1).vl_outras          := nvl(vt_tab_tp77(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp13(2).vl_outras          := vt_tab_tp13(2).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(2).vl_total_ent_saida := vt_tab_tp13(2).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        else
          --
          if vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '04' then -- Outras
            --
            vt_tab_tp88(1).vl_base_calc       := nvl(vt_tab_tp88(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp88(1).vl_isent_nt        := nvl(vt_tab_tp88(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp88(1).vl_outras          := nvl(vt_tab_tp88(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp13(2).vl_outras          := vt_tab_tp13(2).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(2).vl_total_ent_saida := vt_tab_tp13(2).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        end if;
        --
      end if; -- indicador de operação: 0-entrada, 1-saída
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_det_cfop
  --
  vn_fase := 6;
  --
  for rec in c_det_cfop_ct loop
    exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
    --
    vn_fase := 6.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    --
    vn_fase := 6.2;
    --
    pkb_dados_pessoa(en_pessoa_id    => rec.pessoa_id,
                     sn_estado_id    => vn_estado_id,
                     sv_sigla_estado => vv_sigla_estado);
    --
    vn_fase := 6.3;
    --
    -- Recupera os valores de impostos
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_contabil,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 6.4;
    --
    if vv_sigla_estado = 'BA' then
      vn_tipo_det := 0; -- Estado
    elsif vv_sigla_estado = 'EX' then
      vn_tipo_det := 2; -- Exterior
    else
      vn_tipo_det := 1; -- Outros Estados
    end if;
    --
    vn_fase := 6.5;
    --
    begin
      select t.id, 
             t.cd
        into vn_tipooperacao_id, 
             vn_tipooperacao_cd
        from cfop c, 
             tipo_operacao t
       where c.cd = vn_cfop
         and t.id = c.tipooperacao_id;
    exception
      when others then
        vn_tipooperacao_id := 0;
        vn_tipooperacao_cd := 0;
    end;
    --
    vn_fase := 6.6;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 6.7;
      --
      if rec.dm_ind_oper = 0 then -- 0 - Entradas
        --
        vn_fase := 6.8;
        --
        if vv_sigla_estado not in ('BA', 'EX') then
          --
          vb_achou := false;
          --
          begin
            vb_achou := vt_tab_tp08.exists(vn_estado_id);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 6.9;
          --
          if not vb_achou then
            --
            -- Tipo 08 - Entradas por UF
            vt_tab_tp08(vn_estado_id).tipo                 := '08';
            vt_tab_tp08(vn_estado_id).ano_refer_DMA        := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp08(vn_estado_id).mes_refer_DMA        := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp08(vn_estado_id).num_ie               := vv_num_ie;
            vt_tab_tp08(vn_estado_id).sigla_uf             := vv_sigla_estado;
            vt_tab_tp08(vn_estado_id).vl_contabil          := nvl(vn_vl_contabil, 0) * 100;
            vt_tab_tp08(vn_estado_id).base_calculo         := nvl(vn_vl_base_calc_icms, 0) * 100;
            vt_tab_tp08(vn_estado_id).vl_outras            := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp08(vn_estado_id).vl_icms_st_en_elet   := 0;
            vt_tab_tp08(vn_estado_id).vl_icms_st_prod_serv := 0;
            --
          else
            --
            vt_tab_tp08(vn_estado_id).vl_contabil  := nvl(vt_tab_tp08(vn_estado_id).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp08(vn_estado_id).base_calculo := nvl(vt_tab_tp08(vn_estado_id).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp08(vn_estado_id).vl_outras    := nvl(vt_tab_tp08(vn_estado_id).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          vb_achou := false;
          --
          begin
            --
            vb_achou := vt_tab_tp08.exists(99);
            --
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 6.10;
          --
          if not vb_achou then
            --
            --  Tipo 08 - Entradas por UF (totalizador)
            vt_tab_tp08(99).tipo                 := '08';
            vt_tab_tp08(99).ano_refer_DMA        := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp08(99).mes_refer_DMA        := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp08(99).num_ie               := vv_num_ie;
            vt_tab_tp08(99).sigla_uf             := 'ZZ';
            vt_tab_tp08(99).vl_contabil          := nvl(vn_vl_contabil, 0) * 100;
            vt_tab_tp08(99).base_calculo         := nvl(vn_vl_base_calc_icms, 0) * 100;
            vt_tab_tp08(99).vl_outras            := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp08(99).vl_icms_st_en_elet   := 0;
            vt_tab_tp08(99).vl_icms_st_prod_serv := 0;
            --
          else
            --
            vt_tab_tp08(99).vl_contabil  := nvl(vt_tab_tp08(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp08(99).base_calculo := nvl(vt_tab_tp08(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp08(99).vl_outras    := nvl(vt_tab_tp08(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
        end if; -- 'BA'
        --
        vn_fase := 6.11;
        --
        vn_tipo_detalhamento := fkg_tipo_detalhamento(en_oper            => rec.dm_ind_oper,
                                                      en_tipo_det        => vn_tipo_det,
                                                      en_tipooperacao_cd => vn_tipooperacao_cd);
        --
        vb_achou := false;
        --
        begin
          vb_achou := vt_bi_tab_tp10(vn_tipo_det).exists(vn_tipo_detalhamento);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 6.12;
        --
        if not vb_achou then
          --
          -- Tipo 10 - Entradas por Operação
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo              := '10';
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).num_ie            := vv_num_ie;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).status_ent_saida  := 'E';
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).num_detalhamento  := vn_tipo_det;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento := lpad(vn_tipo_detalhamento, 2, '0');
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil  := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas   := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras    := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
          --
        end if;
        --
        vn_fase := 6.13;
        --
        vb_achou := false;
        --
        begin
          --
          vb_achou := vt_bi_tab_tp10(9).exists(99);
          --
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 6.14;
        --
        if not vb_achou then
          --
          -- Tipo 10 - Entradas por Operação (totalizadores)
          vt_bi_tab_tp10(9)(99).tipo              := '10';
          vt_bi_tab_tp10(9)(99).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp10(9)(99).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp10(9)(99).num_ie            := vv_num_ie;
          vt_bi_tab_tp10(9)(99).status_ent_saida  := 'E';
          vt_bi_tab_tp10(9)(99).num_detalhamento  := 9;
          vt_bi_tab_tp10(9)(99).tipo_detalhamento := '99';
          vt_bi_tab_tp10(9)(99).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp10(9)(99).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp10(9)(99).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp10(9)(99).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp10(9)(99).vl_contabil  := nvl(vt_bi_tab_tp10(9)(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp10(9)(99).base_calculo := nvl(vt_bi_tab_tp10(9)(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp10(9)(99).vl_isentas   := nvl(vt_bi_tab_tp10(9)(99).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp10(9)(99).vl_outras    := nvl(vt_bi_tab_tp10(9)(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
          --
        end if;
        --
        --
        if vn_tipo_det = 0 then -- Estado
          --
          vn_fase := 6.141;
          --
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            -- Tipo 40 - Entradas do Estado - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
            vt_tab_tp40(1).vl_base_calc := nvl(vt_tab_tp40(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp40(1).vl_isent_nt  := nvl(vt_tab_tp40(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp40(1).vl_outras    := nvl(vt_tab_tp40(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '02' then -- Transferência
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_transf_mat_uso_consumo := vt_tab_tp13(1).vl_transf_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Ativo Permanente
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_compras_ativo_imob := vt_tab_tp13(1).vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida    := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '08' then -- Uso e Consumo
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida       := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_outras          := vt_tab_tp13(1) .vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida := vt_tab_tp13(1) .vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        elsif vn_tipo_det = 1 then -- Outros Estado
          --
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            -- Tipo 50 - Entradas de Outras Unidades da Federação
            vt_tab_tp50(1).vl_base_calc := nvl(vt_tab_tp50(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp50(1).vl_isent_nt  := nvl(vt_tab_tp50(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp50(1).vl_outras    := nvl(vt_tab_tp50(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '02' then -- Transferência
            --
            --Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_transf_mat_uso_consumo := vt_tab_tp13(1).vl_transf_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Ativo Permanente
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_compras_ativo_imob := vt_tab_tp13(1).vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida    := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '08' then -- Uso e Consumo
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida       := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            vt_tab_tp13(1).vl_outras          := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        else
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '06' then -- Outras
            --
            -- Tipo 60 - Entradas do Exterior
            vt_tab_tp60(1).vl_base_calc := nvl(vt_tab_tp60(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp60(1).vl_isent_nt  := nvl(vt_tab_tp60(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp60(1).vl_outras    := nvl(vt_tab_tp60(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '04' then -- Ativo Permanente
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_compras_ativo_imob := vt_tab_tp13(1).vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida    := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '05' then -- Uso e Consumo
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida       := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '06' then -- Outras
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_outras          := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
          end if;
          --
        end if;
        --
      end if; -- indicador de operação: 0-entrada, 1-saída
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_det_cfop_ct
  --
  vn_fase := 7;
  --
  for rec in c_det_cfop_sc loop
    exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
    --
    vn_fase := 7.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vn_vl_imp_trib_ipi     := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    vn_ICMSCobradoST       := null;
    vn_Outros_Produtos     := null;
    --
    vn_fase := 7.2;
    --
    pkb_dados_pessoa(en_pessoa_id    => rec.pessoa_id,
                     sn_estado_id    => vn_estado_id,
                     sv_sigla_estado => vv_sigla_estado);
    --
    vn_fase := 7.3;
    --
    -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_contabil,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi, -- não utilizado
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 7.4;
    --
    if vv_sigla_estado = 'BA' then
      vn_tipo_det := 0; -- Estado
    elsif vv_sigla_estado = 'EX' then
      vn_tipo_det := 2; -- Exterior
    else
      vn_tipo_det := 1; -- Outros Estados
    end if;
    --
    vn_fase := 7.5;
    --
    begin
      select t.id, 
             t.cd
        into vn_tipooperacao_id, 
             vn_tipooperacao_cd
        from cfop c, tipo_operacao t
       where c.cd = vn_cfop
         and t.id = c.tipooperacao_id;
    exception
      when others then
        vn_tipooperacao_id := 0;
        vn_tipooperacao_cd := 0;
    end;
    --
    vn_fase := 7.6;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 7.7;
      --
      if rec.dm_ind_oper = 0 then -- 0 - Entradas 
        --
        vn_fase := 7.8;
        --
        if vv_sigla_estado not in ('BA', 'EX') then
          --
          vb_achou := false;
          --
          begin
            vb_achou := vt_tab_tp08.exists(vn_estado_id);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 7.9;
          --
          if not vb_achou then
            --
            -- Tipo 08 - Entradas por UF
            vt_tab_tp08(vn_estado_id).tipo                 := '08';
            vt_tab_tp08(vn_estado_id).ano_refer_DMA        := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp08(vn_estado_id).mes_refer_DMA        := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp08(vn_estado_id).num_ie               := vv_num_ie;
            vt_tab_tp08(vn_estado_id).sigla_uf             := vv_sigla_estado;
            vt_tab_tp08(vn_estado_id).vl_contabil          := nvl(vn_vl_contabil, 0) * 100;
            vt_tab_tp08(vn_estado_id).base_calculo         := nvl(vn_vl_base_calc_icms, 0) * 100;
            vt_tab_tp08(vn_estado_id).vl_outras            := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp08(vn_estado_id).vl_icms_st_en_elet   := 0;
            vt_tab_tp08(vn_estado_id).vl_icms_st_prod_serv := nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            vt_tab_tp08(vn_estado_id).vl_contabil          := nvl(vt_tab_tp08(vn_estado_id).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp08(vn_estado_id).base_calculo         := nvl(vt_tab_tp08(vn_estado_id).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp08(vn_estado_id).vl_outras            := nvl(vt_tab_tp08(vn_estado_id).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp08(vn_estado_id).vl_icms_st_prod_serv := nvl(vt_tab_tp08(vn_estado_id).vl_icms_st_prod_serv, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100);
            --
          end if;
          --
          vb_achou := false;
          --
          begin
            vb_achou := vt_tab_tp08.exists(vn_estado_id);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 7.10;
          --
          if not vb_achou then
            --
            -- Tipo 08 - Entradas por UF (totalizador)
            vt_tab_tp08(99).tipo                 := '08';
            vt_tab_tp08(99).ano_refer_DMA        := vt_tab_tp01(1).ano_refer_dma;
            vt_tab_tp08(99).mes_refer_DMA        := vt_tab_tp01(1).mes_refer_dma;
            vt_tab_tp08(99).num_ie               := vv_num_ie;
            vt_tab_tp08(99).sigla_uf             := 'ZZ';
            vt_tab_tp08(99).vl_contabil          := nvl(vn_vl_contabil, 0) * 100;
            vt_tab_tp08(99).base_calculo         := nvl(vn_vl_base_calc_icms, 0) * 100;
            vt_tab_tp08(99).vl_outras            := nvl(vn_vl_bc_outra_icms, 0) * 100;
            vt_tab_tp08(99).vl_icms_st_en_elet   := 0;
            vt_tab_tp08(99).vl_icms_st_prod_serv := nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            vt_tab_tp08(99).vl_contabil          := nvl(vt_tab_tp08(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp08(99).base_calculo         := nvl(vt_tab_tp08(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp08(99).vl_outras            := nvl(vt_tab_tp08(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tab_tp08(99).vl_icms_st_prod_serv := nvl(vt_tab_tp08(99).vl_icms_st_prod_serv, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100);
            --
          end if;
          --
        end if; -- 'BA'
        --
        vn_fase := 7.11;
        --
        vn_tipo_detalhamento := fkg_tipo_detalhamento(en_oper            => rec.dm_ind_oper,
                                                      en_tipo_det        => vn_tipo_det,
                                                      en_tipooperacao_cd => vn_tipooperacao_cd);
        --
        vb_achou := false;
        --
        begin
          vb_achou := vt_bi_tab_tp10(vn_tipo_det).exists(vn_tipo_detalhamento);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 7.12;
        --
        if not vb_achou then
          --
          -- Tipo 10 - Entradas por Operação
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo              := '10';
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).num_ie            := vv_num_ie;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).status_ent_saida  := 'E';
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).num_detalhamento  := vn_tipo_det;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento := lpad(vn_tipo_detalhamento, 2, '0');
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil  := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas   := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras    := nvl(vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
          --
        end if;
        --
        vn_fase := 7.13;
        --
        vb_achou := false;
        --
        begin
          vb_achou := vt_bi_tab_tp10(9).exists(99);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 7.14;
        --
        if not vb_achou then
          --
          -- Tipo 10 - Entradas por Operação (Totalizadores)
          vt_bi_tab_tp10(9)(99).tipo              := '10';
          vt_bi_tab_tp10(9)(99).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
          vt_bi_tab_tp10(9)(99).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
          vt_bi_tab_tp10(9)(99).num_ie            := vv_num_ie;
          vt_bi_tab_tp10(9)(99).status_ent_saida  := 'E';
          vt_bi_tab_tp10(9)(99).num_detalhamento  := 9;
          vt_bi_tab_tp10(9)(99).tipo_detalhamento := '99';
          vt_bi_tab_tp10(9)(99).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
          vt_bi_tab_tp10(9)(99).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
          vt_bi_tab_tp10(9)(99).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
          vt_bi_tab_tp10(9)(99).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
          --
        else
          --
          vt_bi_tab_tp10(9)(99).vl_contabil  := nvl(vt_bi_tab_tp10(9)(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
          vt_bi_tab_tp10(9)(99).base_calculo := nvl(vt_bi_tab_tp10(9)(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
          vt_bi_tab_tp10(9)(99).vl_isentas   := nvl(vt_bi_tab_tp10(9)(99).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
          vt_bi_tab_tp10(9)(99).vl_outras    := nvl(vt_bi_tab_tp10(9)(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
          --
        end if;
        --
        if vn_tipo_det = 0 then -- Estado
          --
          vn_fase := 7.141;
          --
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            -- Tipo 40 - Entradas do Estado - OPERAÇÕES COM NÃO-INCIDÊNCIA DO ICMS
            vt_tab_tp40(1).vl_base_calc := nvl(vt_tab_tp40(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp40(1).vl_isent_nt  := nvl(vt_tab_tp40(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp40(1).vl_outras    := nvl(vt_tab_tp40(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '02' then -- Transferência
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_transf_mat_uso_consumo := vt_tab_tp13(1).vl_transf_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Ativo Permanente
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_compras_ativo_imob := vt_tab_tp13(1).vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida    := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '08' then -- Uso e Consumo
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida       := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_outras           := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida := vt_tab_tp13(1) .vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        elsif vn_tipo_det = 1 then -- Outros Estado
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            -- Tipo 50 - Entradas de Outras Unidades da Federação
            vt_tab_tp50(1).vl_base_calc := nvl(vt_tab_tp50(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp50(1).vl_isent_nt  := nvl(vt_tab_tp50(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp50(1).vl_outras    := nvl(vt_tab_tp50(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '02' then -- Transferência
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_transf_mat_uso_consumo := vt_tab_tp13(1).vl_transf_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida        := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Ativo Permanente
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_compras_ativo_imob := vt_tab_tp13(1).vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida    := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '08' then -- Uso e Consumo
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida       := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '09' then -- Outras
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_outras          := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida := vt_tab_tp13(1).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        else
          --
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '06' then -- Outras
            --
            -- Tipo 60 - Entradas do Exterior
            vt_tab_tp60(1).vl_base_calc := nvl(vt_tab_tp60(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
            vt_tab_tp60(1).vl_isent_nt  := nvl(vt_tab_tp60(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
            vt_tab_tp60(1).vl_outras    := nvl(vt_tab_tp60(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            --
          end if;
          --
          if vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '04' then -- Ativo Permanente
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_compras_ativo_imob := vt_tab_tp13(1) .vl_compras_ativo_imob + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida    := vt_tab_tp13(1) .vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '05' then -- Uso e Consumo
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_aquis_mat_uso_consumo := vt_tab_tp13(1).vl_aquis_mat_uso_consumo + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida       := vt_tab_tp13(1) .vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          elsif vt_bi_tab_tp10(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '06' then -- Outras
            --
            -- Tipo 13 - Valores Fiscais dedutíveis
            vt_tab_tp13(1).vl_outras          := vt_tab_tp13(1).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
            vt_tab_tp13(1).vl_total_ent_saida := vt_tab_tp13(1) .vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
            --
          end if;
          --
        end if;
        --
      end if; -- indicador de operação: 0-entrada, 1-saída
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_det_cfop_sc
  --
  begin
    select p.id
      into vn_pessoa_id
      from pessoa p, 
           empresa e
     where e.id = gt_row_abertura_gia.empresa_id
       and p.id = e.pessoa_id;
  exception
    when others then
      vn_pessoa_id := 0;
  end;
  --
  vn_fase := 8;
  --
  -- Dados de ECF
  for rec in c_det_cfop_ecf loop
    exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
    --
    vn_fase := 8.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    vn_fase := 8.2;
    --
    pkb_dados_pessoa(en_pessoa_id    => vn_pessoa_id,
                     sn_estado_id    => vn_estado_id,
                     sv_sigla_estado => vv_sigla_estado);
    --
    vn_fase := 8.3;
    --
    -- Recupera valores fiscais (ICMS) do conhecimento de transporte
    pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_cfop                => vn_cfop,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_opr              => vn_vl_contabil,
                                      sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                      sn_vl_icms             => vn_vl_imp_trib_icms,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
    --
    vn_fase := 8.4;
    --
    if vv_sigla_estado = 'BA' then
      vn_tipo_det := 0; -- Estado
    elsif vv_sigla_estado = 'EX' then
      vn_tipo_det := 2; -- Exterior
    else
      vn_tipo_det := 1; -- Outros Estados
    end if;
    --
    vn_fase := 8.5;
    --
    begin
      select t.id, t.cd
        into vn_tipooperacao_id, vn_tipooperacao_cd
        from cfop c, 
             tipo_operacao t
       where c.cd = vn_cfop
         and t.id = c.tipooperacao_id;
    exception
      when others then
        vn_tipooperacao_id := 0;
        vn_tipooperacao_cd := 0;
    end;
    --
    vn_fase := 8.6;
    --
    vb_achou := false;
    --
    begin
      vb_achou := vt_tab_tp09.exists(vn_estado_id);
    exception
      when others then
        vb_achou := false;
    end;
    --
    vn_fase := 5.16;
    --
    if not vb_achou then
      --
      -- Tipo 09 - Saídas por UF - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
      -- Tipo 09 - Saídas por UF
      vt_tab_tp09(vn_estado_id).tipo                   := '09';
      vt_tab_tp09(vn_estado_id).ano_refer_DMA          := vt_tab_tp01(1).ano_refer_dma;
      vt_tab_tp09(vn_estado_id).mes_refer_DMA          := vt_tab_tp01(1).mes_refer_dma;
      vt_tab_tp09(vn_estado_id).num_ie                 := vv_num_ie;
      vt_tab_tp09(vn_estado_id).sigla_uf               := vv_sigla_estado;
      vt_tab_tp09(vn_estado_id).vl_contabil_nao_contr  := 0;
      vt_tab_tp09(vn_estado_id).vl_contabil_contr      := nvl(vn_vl_contabil, 0) * 100;
      vt_tab_tp09(vn_estado_id).base_calculo_nao_contr := 0;
      vt_tab_tp09(vn_estado_id).base_calculo_contr     := nvl(vn_vl_base_calc_icms, 0) * 100;
      vt_tab_tp09(vn_estado_id).vl_outras              := nvl(vn_vl_bc_outra_icms, 0) * 100;
      vt_tab_tp09(vn_estado_id).vl_icms_st_aquis_serv  := 0; -- nvl(vn_vl_imp_trib_icmsst,0) * 100;
      --
    else
      --
      vt_tab_tp09(vn_estado_id).vl_contabil_contr     := nvl(vt_tab_tp09(vn_estado_id).vl_contabil_contr, 0) + (nvl(vn_vl_contabil, 0) * 100);
      vt_tab_tp09(vn_estado_id).base_calculo_contr    := nvl(vt_tab_tp09(vn_estado_id).base_calculo_contr, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
      vt_tab_tp09(vn_estado_id).vl_outras             := nvl(vt_tab_tp09(vn_estado_id).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
      vt_tab_tp09(vn_estado_id).vl_icms_st_aquis_serv := 0; -- vt_tab_tp09(vn_estado_id).vl_icms_st_aquis_serv + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
      --
    end if;
    --
    vb_achou := false;
    --
    begin
      vb_achou := vt_tab_tp09.exists(99);
    exception
      when others then
        vb_achou := false;
    end;
    --
    vn_fase := 5.17;
    --
    if not vb_achou then
      --
      -- Tipo 09 - Saídas por UF (Totalizador)
      vt_tab_tp09(99).tipo                   := '09';
      vt_tab_tp09(99).ano_refer_DMA          := vt_tab_tp01(1).ano_refer_dma;
      vt_tab_tp09(99).mes_refer_DMA          := vt_tab_tp01(1).mes_refer_dma;
      vt_tab_tp09(99).num_ie                 := vv_num_ie;
      vt_tab_tp09(99).sigla_uf               := 'ZZ';
      vt_tab_tp09(99).vl_contabil_nao_contr  := 0;
      vt_tab_tp09(99).vl_contabil_contr      := nvl(vn_vl_contabil, 0);
      vt_tab_tp09(99).base_calculo_nao_contr := 0;
      vt_tab_tp09(99).base_calculo_contr     := nvl(vn_vl_base_calc_icms, 0) * 100;
      vt_tab_tp09(99).vl_outras              := nvl(vn_vl_bc_outra_icms, 0) * 100;
      vt_tab_tp09(99).vl_icms_st_aquis_serv  := 0; -- nvl(vn_vl_imp_trib_icmsst,0) * 100;
      --
    else
      --
      vt_tab_tp09(99).vl_contabil_contr     := nvl(vt_tab_tp09(99).vl_contabil_contr, 0) + (nvl(vn_vl_contabil, 0) * 100);
      vt_tab_tp09(99).base_calculo_contr    := nvl(vt_tab_tp09(99).base_calculo_contr, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
      vt_tab_tp09(99).vl_outras             := nvl(vt_tab_tp09(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
      vt_tab_tp09(99).vl_icms_st_aquis_serv := 0; -- vt_tab_tp09(99).vl_icms_st_aquis_serv + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
      --
    end if;
    --
    vn_tipo_detalhamento := fkg_tipo_detalhamento(en_oper            => 1, -- Saída
                                                  en_tipo_det        => vn_tipo_det,
                                                  en_tipooperacao_cd => vn_tipooperacao_cd);
    --
    vb_achou := false;
    --
    begin
      vb_achou := vt_bi_tab_tp11(vn_tipo_det).exists(vn_tipo_detalhamento);
    exception
      when others then
        vb_achou := false;
    end;
    --
    vn_fase := 8.7;
    --
    if not vb_achou then
      --
      vn_fase := 8.8;
      --
      -- Tipo 11 - Saídas por operação
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo              := '11';
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).num_ie            := vv_num_ie;
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).status_ent_saida  := 'S';
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).num_detalhamento  := vn_tipo_det;
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento := lpad(vn_tipo_detalhamento, 2, '0');
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
      --
    else
      --
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil  := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).base_calculo := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas   := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
      vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_outras    := nvl(vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
      --
    end if;
    --
    vn_fase := 8.9;
    --
    vb_achou := false;
    --
    begin
      vb_achou := vt_bi_tab_tp11(9).exists(99);
    exception
      when others then
        vb_achou := false;
    end;
    --
    vn_fase := 8.10;
    --
    if not vb_achou then
      --
      -- Tipo 11 - Saídas por operação (Totalização)
      vt_bi_tab_tp11(9)(99).tipo              := '11';
      vt_bi_tab_tp11(9)(99).ano_refer_DMA     := vt_tab_tp01(1).ano_refer_dma;
      vt_bi_tab_tp11(9)(99).mes_refer_DMA     := vt_tab_tp01(1).mes_refer_dma;
      vt_bi_tab_tp11(9)(99).num_ie            := vv_num_ie;
      vt_bi_tab_tp11(9)(99).status_ent_saida  := 'S';
      vt_bi_tab_tp11(9)(99).num_detalhamento  := 9;
      vt_bi_tab_tp11(9)(99).tipo_detalhamento := '99';
      vt_bi_tab_tp11(9)(99).vl_contabil       := nvl(vn_vl_contabil, 0) * 100;
      vt_bi_tab_tp11(9)(99).base_calculo      := nvl(vn_vl_base_calc_icms, 0) * 100;
      vt_bi_tab_tp11(9)(99).vl_isentas        := nvl(vn_vl_bc_isenta_icms, 0) * 100;
      vt_bi_tab_tp11(9)(99).vl_outras         := nvl(vn_vl_bc_outra_icms, 0) * 100;
      --
    else
      --
      vt_bi_tab_tp11(9)(99).vl_contabil  := nvl(vt_bi_tab_tp11(9)(99).vl_contabil, 0) + (nvl(vn_vl_contabil, 0) * 100);
      vt_bi_tab_tp11(9)(99).base_calculo := nvl(vt_bi_tab_tp11(9)(99).base_calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
      vt_bi_tab_tp11(9)(99).vl_isentas   := nvl(vt_bi_tab_tp11(9)(99).vl_isentas, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
      vt_bi_tab_tp11(9)(99).vl_outras    := nvl(vt_bi_tab_tp11(9)(99).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
      --
    end if;
    --
    if vn_tipo_det = 0 then -- Estado
      --
      vn_fase := 8.101;
      --
      if vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Outras
        --
        -- Tipo 66 - Saídas para o Estado
        vt_tab_tp66(1).vl_base_calc       := nvl(vt_tab_tp66(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_tab_tp66(1).vl_isent_nt        := nvl(vt_tab_tp66(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_tab_tp66(1).vl_outras          := nvl(vt_tab_tp66(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_tab_tp13(2).vl_outras          := vt_tab_tp13(2).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
        vt_tab_tp13(2).vl_total_ent_saida := vt_tab_tp13(2).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
        --
      end if;
      --
    elsif vn_tipo_det = 1 then -- Outros Estado
      --
      --
      if vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '07' then -- Outras
        --
        -- Tipo 77 - Saídas para Outras Unidades da Federação
        vt_tab_tp77(1).vl_base_calc       := nvl(vt_tab_tp77(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_tab_tp77(1).vl_isent_nt        := nvl(vt_tab_tp77(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_tab_tp77(1).vl_outras          := nvl(vt_tab_tp77(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_tab_tp13(2).vl_outras          := vt_tab_tp13(2).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
        vt_tab_tp13(2).vl_total_ent_saida := vt_tab_tp13(2).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
        --
      end if;
      --
    else
      --
      --
      if vt_bi_tab_tp11(vn_tipo_det)(vn_tipo_detalhamento).tipo_detalhamento = '04' then -- Outras
        --
        -- Tipo 88 - Saídas para o exterior
        vt_tab_tp88(1).vl_base_calc       := nvl(vt_tab_tp88(1).vl_base_calc, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100);
        vt_tab_tp88(1).vl_isent_nt        := nvl(vt_tab_tp88(1).vl_isent_nt, 0) + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_tab_tp88(1).vl_outras          := nvl(vt_tab_tp88(1).vl_outras, 0) + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_tab_tp13(2).vl_outras          := vt_tab_tp13(2).vl_outras + (nvl(vn_vl_contabil, 0) * 100);
        vt_tab_tp13(2).vl_total_ent_saida := vt_tab_tp13(2).vl_total_ent_saida + (nvl(vn_vl_contabil, 0) * 100);
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 9;
  --
  for rec in c_apur_icms loop
    exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
    --
    vn_fase := 9.1;
    --
    -- Tipo 14 - Apuração de Imposto
    vt_tab_tp14(1).tipo                           := '14';
    vt_tab_tp14(1).ano_refer_DMA                  := vt_tab_tp01(1).ano_refer_dma;
    vt_tab_tp14(1).mes_refer_DMA                  := vt_tab_tp01(1).mes_refer_dma;
    vt_tab_tp14(1).num_ie                         := vv_num_ie;
    vt_tab_tp14(1).vl_deb_imp_saidas_trib         := nvl(rec.vl_total_debito, 0) * 100;
    vt_tab_tp14(1).vl_deb_imp_outros_debitos      := (nvl(rec.vl_ajust_debito, 0) + nvl(rec.vl_total_ajust_deb, 0)) * 100;
    vt_tab_tp14(1).vl_deb_imp_estorno_credito     := nvl(rec.vl_estorno_credito, 0) * 100;
    vt_tab_tp14(1).vl_cred_imp_entradas_trib      := nvl(rec.vl_total_credito, 0) * 100;
    vt_tab_tp14(1).vl_cred_imp_outros_creditos    := (nvl(rec.vl_ajust_credito, 0) + nvl(rec.vl_total_ajust_cred, 0)) * 100;
    vt_tab_tp14(1).vl_cred_imp_estorno_debito     := nvl(rec.vl_estorno_debido, 0) * 100;
    vt_tab_tp14(1).vl_cred_imp_saldo_cred_per_ant := nvl(rec.vl_saldo_credor_ant, 0) * 100;
    --
    vn_fase := 9.2;
    --
    -- Tipo 15 - Apuração de Imposto
    vt_tab_tp15(1).tipo                           := '15';
    vt_tab_tp15(1).ano_refer_DMA                  := vt_tab_tp01(1).ano_refer_dma;
    vt_tab_tp15(1).mes_refer_DMA                  := vt_tab_tp01(1).mes_refer_dma;
    vt_tab_tp15(1).num_ie                         := vv_num_ie;
    vt_tab_tp15(1).vl_conta_corrente_deducoes     := nvl(rec.vl_total_deducao, 0) * 100;
    vt_tab_tp15(1).vl_conta_corrente_imp_recolher := nvl(rec.vl_icms_recolher, 0) * 100;
    vt_tab_tp15(1).vl_total_debito                := (nvl(rec.vl_total_debito, 0) + nvl(rec.vl_ajust_debito, 0) + nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_estorno_credito, 0)) * 100;
    vt_tab_tp15(1).vl_total_credito               := (nvl(rec.vl_total_credito, 0) + nvl(rec.vl_ajust_credito, 0) + nvl(rec.vl_total_ajust_cred, 0) + nvl(rec.vl_estorno_debido, 0) + nvl(rec.vl_saldo_credor_ant, 0)) * 100;
    vt_tab_tp15(1).vl_saldo_devedor               := nvl(rec.vl_saldo_apurado, 0) * 100;
    vt_tab_tp15(1).vl_saldo_credor                := nvl(rec.vl_saldo_credor_transp, 0) * 100;
    --
    vn_fase := 9.3;
    --
    /*
    begin
       --
       select sum(nvl(da.vl_dif_aliq,0)) vl_icms
         into vn_vl_tot_debitos_difal
         from nota_fiscal            nf
            , item_nota_fiscal       inf
            , itemnf_dif_aliq        da
        where nf.empresa_id        = gt_row_abertura_gia.empresa_id
          and nf.dm_st_proc        = 4
          and nf.dm_arm_nfe_terc   = 0 -- Não é nota de armazenamento fiscal
          and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                or
               (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                or
               (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                or
               (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
          and inf.notafiscal_id    = nf.id
          and da.itemnf_id         = inf.id;
       --
    exception
       when others then
          vn_vl_tot_debitos_difal := 0;
    end;*/
    --
    --vt_tab_tp15(1).vl_diferencial_aliquota := nvl(vn_vl_tot_debitos_difal,0) * 100;
    --vt_tab_tp15(1).vl_diferencial_aliquota := 0;
    --
    begin
      select nvl(sum(nvl(aa.vl_aj_apur, 0)), 0)
        into vn_vl_tot_debitos_difal
        from ajust_apuracao_icms aa, 
             cod_aj_saldo_apur_icms ca
       where aa.apuracaoicms_id = rec.apuracaoicms_id
         and ca.id              = aa.codajsaldoapuricms_id
         and ca.dm_apur         = 0 -- 0 - ICMS
         and ca.dm_util         = 5; -- 5 - Débitos Especiais
    exception
      when others then
        vn_vl_tot_debitos_difal := 0;
    end;
    --
    vt_tab_tp15(1).vl_diferencial_aliquota := nvl(vn_vl_tot_debitos_difal, 0) * 100;
    --
  end loop;
  --
  vn_fase := 10;
  --
  -- Recupera o valor diferimento
  begin
    select nvl(sum(ii.vl_icms_difer), 0)
      into vn_vl_icms_difer
      from nota_fiscal nf, 
           item_nota_fiscal inf, 
           imp_itemnf ii
     where nf.id              = inf.notafiscal_id
       and inf.id             = ii.itemnf_id
       and nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.dm_arm_nfe_terc = 0 -- Não armazena nfe de terceiro
       and nf.dm_ind_emit     = 1 -- Terceiros
       and nf.dm_ind_oper     = 0 -- Entrada
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin));
  exception
    when others then
      vn_vl_icms_difer := 0;
  end;
  --
  -- Tipo 16 - Dados de ICMS Substituição Tributária, Importação, Diferimento, Imposto Recolhido
  vt_tab_tp16(1).tipo                         := '16';
  vt_tab_tp16(1).ano_refer_DMA                := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp16(1).mes_refer_DMA                := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp16(1).num_ie                       := vv_num_ie;
  vt_tab_tp16(1).vl_icms_st_antecip           := 0;
  vt_tab_tp16(1).vl_icms_st_retencao          := 0;
  vt_tab_tp16(1).vl_icms_import_indust_comerc := 0;
  vt_tab_tp16(1).vl_icms_import_imob_consumo  := 0;
  vt_tab_tp16(1).vl_diferimento               := nvl(vn_vl_icms_difer, 0) * 100;
  vt_tab_tp16(1).vl_imposto_recolhido         := 0;
  --
  vn_fase := 10.1;
  --
  for rec in c_apur_icmsst loop
    exit when c_apur_icmsst%notfound or(c_apur_icmsst%notfound) is null;
    --
    vn_fase := 10.2;
    --
    if trim(rec.cd) = '001' then -- ICMS da substituição tributária pelas entradas
      vt_tab_tp16(1).vl_icms_st_antecip := nvl(rec.vl_orig_rec, 0) * 100;
    elsif trim(rec.cd) = '004' then -- Antecipação do ICMS da importação
      vt_tab_tp16(1).vl_icms_import_indust_comerc := nvl(rec.vl_orig_rec, 0) * 100;
    elsif trim(rec.cd) = '002' then -- ICMS da substituição tributária pelas saídas para o Estado
      vt_tab_tp16(1).vl_icms_st_retencao := nvl(rec.vl_orig_rec, 0) * 100;
    end if;
    --
  end loop;
  --
  vn_fase := 11;
  --
  -- Tipo 17 - Informações Complementares
  vt_tab_tp17(1).tipo          := '17';
  vt_tab_tp17(1).ano_refer_DMA := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp17(1).mes_refer_DMA := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp17(1).num_ie        := vv_num_ie;
  --
  vn_fase := 11.1;
  --
  vn_nro_func := 0;
  --
  -- Números de empregados
  begin
    select nro_func
      into vn_nro_func
      from inf_folha_pgto
     where empresa_id = gt_row_abertura_gia.empresa_id
       and dm_st_proc = 3
       and ('01/' || lpad(mes, 2, '0') || '/' || ano) = to_char(gt_row_abertura_gia.dt_ini, 'dd/mm/yyyy');
  exception
    when others then
      vn_nro_func := 0;
  end;
  --
  vt_tab_tp17(1).num_empregados := vn_nro_func;
  --
  -- Recupera KWH consumidos no período
  begin
    select i.vl_khw_cons
      into vn_vl_khw_cons
      from inf_comp_gia i
     where i.aberturagia_id = gt_row_abertura_gia.id;
  exception
    when others then
      vn_vl_khw_cons := 0;
  end;
  --
  vn_fase := 11.2;
  --
  -- Tipo 17 - Informações Complementares
  vt_tab_tp17(1).KWH_consumidos_periodo      := vn_vl_khw_cons;
  vt_tab_tp17(1).vl_recolhido_cofins         := 0;
  vt_tab_tp17(1).vl_icms_cred_ativo_aliq7    := 0;
  vt_tab_tp17(1).vl_icms_cred_ativo_aliq12   := 0;
  vt_tab_tp17(1).vl_icms_cred_ativo_aliq17   := 0;
  vt_tab_tp17(1).vl_icms_cred_mat_uso_aliq7  := 0;
  vt_tab_tp17(1).vl_icms_cred_mat_uso_aliq12 := 0;
  --
  vn_fase := 12;
  --
  -- Tipo 18 - Dados do Valor de compra aliquota 17%, dados do Crédito fiscal acumulado na exportação de mercadorias
  vt_tab_tp18(1).tipo                          := '18';
  vt_tab_tp18(1).ano_refer_DMA                 := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp18(1).mes_refer_DMA                 := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp18(1).num_ie                        := vv_num_ie;
  vt_tab_tp18(1).vl_icms_cred_est_ext17        := 0;
  vt_tab_tp18(1).vl_saldo_ant_cred_fis_exp     := 0;
  vt_tab_tp18(1).vl_cred_fis_exp_dir_gera_mes  := 0;
  vt_tab_tp18(1).vl_cred_fis_exp_ind_gera_mes  := 0;
  vt_tab_tp18(1).vl_pag_icms_cred_util_mes     := 0;
  vt_tab_tp18(1).vl_transf_estab_cred_util_mes := 0;
  vt_tab_tp18(1).vl_transf_terc_cred_util_mes  := 0;
  --
  vn_fase := 13;
  --
  -- Tipo 19 - Dados do crédito fiscal acumulado na exportação de mercadorias e do crédito fiscal acumulado em virtude
  --           do diferimento, isenção, redução base de cálculo e outros motivos
  -- Tipo 20 - Dados do crédito fiscal acumulado em virtude de diferimento, isenção, redução base de cálculo e outros motivos
  --
  vn_fase := 14;
  --
  -- Tipo 21 - Identificação do Responsável pela declaração
  vt_tab_tp21(1).tipo                    := '21';
  vt_tab_tp21(1).ano_refer_DMA           := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp21(1).mes_refer_DMA           := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp21(1).num_ie                  := vv_num_ie;
  vt_tab_tp21(1).num_crc_contab_resp_dma := substr(vv_num_crc_cont, 2, 7);
  vt_tab_tp21(1).unid_fed_crc_contab     := vv_uf_resp;
  vt_tab_tp21(1).nome_contab_resp_dma    := vv_nome;
  vt_tab_tp21(1).tipo_lograd_end_contab  := 'AV ';
  vt_tab_tp21(1).desc_lograd             := vv_lograd_resp;
  vt_tab_tp21(1).unid_fed_endereco       := vv_uf_resp;
  --
  vn_fase := 15;
  --
  -- Tipo 22 - Identificação do Responsável pela declaração
  vt_tab_tp22(1).tipo             := '22';
  vt_tab_tp22(1).ano_refer_DMA    := vt_tab_tp01(1).ano_refer_dma;
  vt_tab_tp22(1).mes_refer_DMA    := vt_tab_tp01(1).mes_refer_dma;
  vt_tab_tp22(1).num_ie           := vv_num_ie;
  vt_tab_tp22(1).bairro_lograd    := 'SB';
  vt_tab_tp22(1).num_lograd       := 'SN';
  vt_tab_tp22(1).num_telef_contab := '0';
  vt_tab_tp22(1).num_cep_contab   := nvl(vn_cep_resp, 0);
  vt_tab_tp22(1).cod_mun_contab   := pk_csf.fkg_cd_cidade_tipo_cod_arq(en_cidade_id     => vn_cidade_id,
                                                                       en_tipocodarq_id => gn_tipocodarq_id);
  vt_tab_tp22(1).desc_mun_contab := 'SD';
  --
  -- TP99 - Totalizador da DMA
  vt_tab_tp99(1).tipo           := '99'; -- Tipo do arquivo
  vt_tab_tp99(1).qtde_registros := 1; -- Quantidade Total de DMA
  --
  vn_fase := 16;
  --
  if vt_tab_tp01(1).mes_refer_dma = '02' then
    --
    vn_fase := 16.1;
    --
    -- Processo para recuperar os valores de Estoque Inicial e Final
    vn_vl_trib       := 0;
    vn_vl_isenta     := 0;
    vn_vl_outras     := 0;
    vn_vl_trib_ini   := 0;
    vn_vl_isenta_ini := 0;
    vn_vl_outras_ini := 0;
    vn_vl_trib_fin   := 0;
    vn_vl_isenta_fin := 0;
    vn_vl_outras_fin := 0;
    --
    vn_fase := 16.2;
    --
    for r_inv in c_inv loop
      exit when c_inv%notfound or(c_inv%notfound);
      --
      vn_fase := 16.3;
      --
      vn_vl_trib   := 0;
      vn_vl_isenta := 0;
      vn_vl_outras := 0;
      --
      for r_cst in c_cst(en_inventario_id => r_inv.inventario_id) loop
        exit when c_cst%notfound or(c_cst%notfound);
        --
        vn_fase := 16.4;
        --
        -- Valores para Base Tributada
        if r_cst.cod_st in ('00', '10', '20', '70') then -- Se CST 00, 10, 20 e 70, o valor da base de calculo ICMS deve ser levado para base tributada da DMA
          --
          vn_vl_trib := (nvl(vn_vl_trib, 0) + nvl(r_cst.vl_bc_icms, 0));
          --
        elsif r_cst.cod_st in ('51') then -- Se CST 51 e houver valor de ICMS o valor da base de calculo de ICMS deve ser levado para base tributada da DMA
          --
          if nvl(r_cst.vl_icms, 0) <> 0 then
            --
            vn_vl_trib := (nvl(vn_vl_trib, 0) + nvl(r_cst.vl_bc_icms, 0));
            --
          end if;
          --
        elsif r_cst.cod_st in ('90') then -- Se CST 90 e houver valor na base de calculo ICMS o mesmo deve ser levado para base tributada da DMA
          --
          if nvl(r_cst.vl_bc_icms, 0) <> 0 then
            --
            vn_vl_trib := (nvl(vn_vl_trib, 0) + nvl(r_cst.vl_bc_icms, 0));
            --
          end if;
          --
        end if;
        --
        vn_fase := 16.5;
        --
        -- Valores para Base Isenta
        if r_cst.cod_st in ('20', '70') then -- Se CST 20 e 70, a subtração do valor do item pela base de calculo deve ser levada para base isenta da DMA
          --
          vn_vl_isenta := (nvl(vn_vl_isenta, 0) + (nvl(r_inv.vl_item, 0) - nvl(r_cst.vl_bc_icms, 0)));
          --
        elsif r_cst.cod_st in ('40', '41') then -- Se CST 40 e 41, o valor da item deve ser levado para base isenta da DMA
          --
          vn_vl_isenta := (nvl(vn_vl_isenta, 0) + nvl(r_inv.vl_item, 0));
          --
        end if;
        --
        vn_fase := 16.6;
        --
        -- Valores para Base Outras
        if r_cst.cod_st in ('30', '50', '60') then -- Se CST 30, 50 e 60, o valor da item deve ser levado para base outras da DMA
          --
          vn_vl_outras := (nvl(vn_vl_outras, 0) + nvl(r_inv.vl_item, 0));
          --
        elsif r_cst.cod_st in ('51') then -- Se CST 51 e não houver valor de ICMS o valor da item deve ser levado para base outras da DMA
          --
          if nvl(r_cst.vl_icms, 0) = 0 then
            --
            vn_vl_outras := (nvl(vn_vl_outras, 0) + nvl(r_inv.vl_item, 0));
            --
          end if;
          --
        elsif r_cst.cod_st in ('90') then -- Se CST 90 e não houver valor na base de calculo ICMS o valor do item deve ser levado para base outras da DMA
          --
          if nvl(r_cst.vl_bc_icms, 0) = 0 then
            --
            vn_vl_outras := (nvl(vn_vl_outras, 0) + nvl(r_inv.vl_item, 0));
            --
          end if;
          --
        end if;
        --
      end loop;
      --
      vn_fase := 16.7;
      --
      -- Inicial
      if (trunc(r_inv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(gt_row_abertura_gia.dt_ini, 'rrrr'), 'rrrr') - 2))) then
        --
        vn_fase := 16.8;
        --
        vn_vl_trib_ini   := nvl(vn_vl_trib_ini, 0) + nvl(vn_vl_trib, 0);
        vn_vl_isenta_ini := nvl(vn_vl_isenta_ini, 0) + nvl(vn_vl_isenta, 0);
        vn_vl_outras_ini := nvl(vn_vl_outras_ini, 0) + nvl(vn_vl_outras, 0);
        --
      end if;
      --
      vn_fase := 16.9;
      --
      -- Final
      if (trunc(r_inv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(gt_row_abertura_gia.dt_ini, 'rrrr'), 'rrrr') - 1))) then
        --
        vn_fase := 16.10;
        --
        vn_vl_trib_fin   := nvl(vn_vl_trib_fin, 0) + nvl(vn_vl_trib, 0);
        vn_vl_isenta_fin := nvl(vn_vl_isenta_fin, 0) + nvl(vn_vl_isenta, 0);
        vn_vl_outras_fin := nvl(vn_vl_outras_fin, 0) + nvl(vn_vl_outras, 0);
        --
      end if;
      --
    end loop;
    --
    vn_fase := 16.11;
    --
    -- I99
    -- Tipo 12 - Estoque
    vt_tab_tp12(98).tipo          := '12';
    vt_tab_tp12(98).ano_refer_DMA := vt_tab_tp01(1).ano_refer_dma;
    vt_tab_tp12(98).mes_refer_DMA := vt_tab_tp01(1).mes_refer_dma;
    vt_tab_tp12(98).num_ie        := vv_num_ie;
    --
    vn_fase := 16.12;
    --
    -- Tipo 12 - Estoque
    vt_tab_tp12(98).status_est_inic_final  := 'I';
    vt_tab_tp12(98).tipo_natur_estoque     := 99;
    vt_tab_tp12(98).vl_trib_est_inic_final := nvl(vn_vl_trib_ini, 0);
    vt_tab_tp12(98).vl_isentas_nao_trib    := nvl(vn_vl_isenta_ini, 0);
    vt_tab_tp12(98).vl_outras              := nvl(vn_vl_outras_ini, 0);
    vt_tab_tp12(98).vl_total               := (nvl(vn_vl_trib_ini, 0) + nvl(vn_vl_isenta_ini, 0) + nvl(vn_vl_outras_ini, 0));
    --
    vn_fase := 16.13;
    --
    -- I01
    -- Tipo 12 - Estoque
    vt_tab_tp12(99).tipo          := '12';
    vt_tab_tp12(99).ano_refer_DMA := vt_tab_tp01(1).ano_refer_dma;
    vt_tab_tp12(99).mes_refer_DMA := vt_tab_tp01(1).mes_refer_dma;
    vt_tab_tp12(99).num_ie        := vv_num_ie;
    --
    vn_fase := 16.14;
    --
    -- Tipo 12 - Estoque
    vt_tab_tp12(99).status_est_inic_final  := 'I';
    vt_tab_tp12(99).tipo_natur_estoque     := '01';
    vt_tab_tp12(99).vl_trib_est_inic_final := nvl(vn_vl_trib_ini, 0);
    vt_tab_tp12(99).vl_isentas_nao_trib    := nvl(vn_vl_isenta_ini, 0);
    vt_tab_tp12(99).vl_outras              := nvl(vn_vl_outras_ini, 0);
    vt_tab_tp12(99).vl_total               := (nvl(vn_vl_trib_ini, 0) + nvl(vn_vl_isenta_ini, 0) + nvl(vn_vl_outras_ini, 0));
    --
    vn_fase := 16.15;
    --
    -- F99
    -- Tipo 12 - Estoque
    vt_tab_tp12(100).tipo          := '12';
    vt_tab_tp12(100).ano_refer_DMA := vt_tab_tp01(1).ano_refer_dma;
    vt_tab_tp12(100).mes_refer_DMA := vt_tab_tp01(1).mes_refer_dma;
    vt_tab_tp12(100).num_ie        := vv_num_ie;
    --
    vn_fase := 16.16;
    --
    -- Tipo 12 - Estoque
    vt_tab_tp12(100).status_est_inic_final  := 'F';
    vt_tab_tp12(100).tipo_natur_estoque     := 99;
    vt_tab_tp12(100).vl_trib_est_inic_final := nvl(vn_vl_trib_fin, 0);
    vt_tab_tp12(100).vl_isentas_nao_trib    := nvl(vn_vl_isenta_fin, 0);
    vt_tab_tp12(100).vl_outras              := nvl(vn_vl_outras_fin, 0);
    vt_tab_tp12(100).vl_total               := (nvl(vn_vl_trib_fin, 0) + nvl(vn_vl_isenta_fin, 0) + nvl(vn_vl_outras_fin, 0));
    --
    vn_fase := 16.17;
    --
    -- F01
    -- Tipo 12 - Estoque
    vt_tab_tp12(101).tipo          := '12';
    vt_tab_tp12(101).ano_refer_DMA := vt_tab_tp01(1).ano_refer_dma;
    vt_tab_tp12(101).mes_refer_DMA := vt_tab_tp01(1).mes_refer_dma;
    vt_tab_tp12(101).num_ie        := vv_num_ie;
    --
    vn_fase := 16.18;
    --
    -- Tipo 12 - Estoque
    vt_tab_tp12(101).status_est_inic_final  := 'F';
    vt_tab_tp12(101).tipo_natur_estoque     := '01';
    vt_tab_tp12(101).vl_trib_est_inic_final := nvl(vn_vl_trib_fin, 0);
    vt_tab_tp12(101).vl_isentas_nao_trib    := nvl(vn_vl_isenta_fin, 0);
    vt_tab_tp12(101).vl_outras              := nvl(vn_vl_outras_fin, 0);
    vt_tab_tp12(101).vl_total               := (nvl(vn_vl_trib_fin, 0) + nvl(vn_vl_isenta_fin, 0) + nvl(vn_vl_outras_fin, 0));
    --
  end if;
  --
  vn_fase := 99;
  --
  -- Procedimento monta a estrutura do arquivo da GIA - BA
  pkb_monta_estr_arq_gia_ba;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_ba fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_arq_gia_ba;

------------------------------------------------
-- Procedimento de geracao do arquivo da GIA-MG
------------------------------------------------
procedure pkb_gera_arq_gia_mg is
  --
  -- Variáveis do controle do vetor
  i pls_integer;
  j pls_integer;
  --
  -- Variáveis do processo
  vn_fase  number := 0;
  vb_achou boolean;
  --
  vn_cfop                     cfop.cd%type := 0;
  vn_vl_contabil              number(15, 2) := 0;
  vv_cod_st_icms              cod_st.cod_st%type := null;
  vn_vl_base_calc_icms        imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_icms                imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_icms         imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_base_calc_icmsst      imp_itemnf.vl_base_calc%type := 0;
  vn_vl_imp_trib_icmsst       imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_icms        imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_icms         imp_itemnf.vl_base_calc%type := 0;
  vv_cod_st_ipi               cod_st.cod_st%type := null;
  vn_vl_base_calc_ipi         imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_ipi                 imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_ipi          imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_ipi         imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_ipi          imp_itemnf.vl_base_calc%type := 0;
  vn_ipi_nao_recup            number;
  vn_outro_ipi                number;
  vn_vl_imp_nao_dest_ipi      number;
  vn_vl_outro                 number;
  vn_vl_fcp_icmsst            number;
  vn_aliq_fcp_icms            number;
  vn_vl_fcp_icms              number;
  --
  vn_vl_fem                   number;
  vn_vl_reg_111               number;
  vn_vl_reg_113               number;
  vn_vl_reg_114               number;
  --
  vn_nro_func                 number := 0;
  vn_vl_folha                 number := 0;
  vv_substit                  varchar2(1) := null;
  vv_cnae                     varchar2(7) := null;
  vn_Ident_lin                number := 0;
  --
  vn_cred_tot                 number := 0;
  vn_deb_tot                  number := 0;
  vv_versao                   varchar2(2) := null;
  vv_suframa                  nota_fiscal_dest.suframa%type := null;
  vn_tipooperacao_cd          tipo_operacao.cd%type := null;
  vn_loggenerico_id           log_generico.id%type;
  --
  -- Registro 00 - Identificação da DAPI
  type tp_00 is record(
    Tipo          varchar2(2),
    InscEstad     varchar2(13),
    Anoref        varchar2(4),
    Mesref        varchar2(2),
    Diaini        varchar2(2),
    Diafim        varchar2(2),
    Versao        varchar2(2),
    Substituicao  varchar2(1),
    CAE           varchar2(7),
    Desmembr_CAE  varchar2(2),
    Regim_recolh  varchar2(2),
    Regim_fiscal  varchar2(1),
    Dt_lim_pgto   varchar2(8),
    Op_fundese    varchar2(1),
    Dapi_movim    varchar2(1),
    Movim_cafe    varchar2(1),
    CNAEF         varchar2(7),
    Desmemb_CNAEF varchar2(2),
    Termo_Aceite  varchar2(1));
  --
  type t_tab_00 is table of tp_00 index by binary_integer;
  vt_tab_00 t_tab_00;
  --
  -- Registro 10 - Identificacao do DAPI
  type tp_10 is record(
    Tipo      varchar2(2),
    InscEstad varchar2(13),
    Anoref    varchar2(4),
    Mesref    varchar2(2),
    Diafim    varchar2(2),
    Diaini    varchar2(2),
    Ident_lin varchar2(3),
    Ident_Col varchar2(2),
    Vlr_decl  number(15));
  --
  type t_tab_10 is table of tp_10 index by binary_integer;
  type t_bi_tab_10 is table of t_tab_10 index by binary_integer;
  vt_tab_10 t_bi_tab_10;
  --
  -- Registro 22 - Detalhamento 03 (Detalhamento de Estorno de Débito - Campo 90 da DAPI 01)
  type tp_22 is record(
    Tipo           varchar2(2),
    InscEstadContr varchar2(13),
    Anoref         varchar2(4),
    Mesref         varchar2(2),
    Diafim         varchar2(2),
    Diaini         varchar2(2),
    NumNF          varchar2(9),
    SerieNF        varchar2(3),
    DtNF           varchar2(8),
    Vlr            number(15),
    Justif         varchar2(60),
    CodMotivo      varchar2(1));
  --
  type t_tab_22 is table of tp_22 index by binary_integer;
  vt_tab_22 t_tab_22;
  --
  -- Registro 23 - Detalhamento 04 (Detalhamento de Deduções - Campo 98 da DAPI 01)
  type tp_23 is record(
    Tipo                varchar2(2),
    InscEstadContr      varchar2(13),
    Anoref              varchar2(4),
    Mesref              varchar2(2),
    Diafim              varchar2(2),
    Diaini              varchar2(2),
    SaldoIncCultura     number(15),
    IncCulturaPer       number(15),
    TotalDedIncCult     number(15),
    VlrLimIncCult       number(15),
    SaldoCredorIncCul   number(15),
    CompCred            number(15),
    TotalDedPer         number(15),
    UtilizCredRebTransf number(15),
    AliqIncCult         number(15),
    CulturaEstorno      number(15));
  --
  type t_tab_23 is table of tp_23 index by binary_integer;
  vt_tab_23 t_tab_23;
  --
  -- Registro 27 - Detalhamento 08 (Ressarcimento Substituição Tributária - Campo 70 da DAPI 01)
  type tp_27 is record(
    Tipo           varchar2(2),
    InscEstadContr varchar2(13),
    Anoref         varchar2(4),
    Mesref         varchar2(2),
    Diafim         varchar2(2),
    Diaini         varchar2(2),
    MotivoResTrib  varchar2(2),
    NumNFST        varchar2(9),
    SerieNF        varchar2(3),
    DtNF           varchar2(8),
    DtVisto        varchar2(8),
    Vlr            number(15));
  --
  type t_tab_27 is table of tp_27 index by binary_integer;
  type t_bi_tab_27 is table of t_tab_27 index by binary_integer;
  vt_tab_27 t_bi_tab_27;
  --
  -- Registro 29 - Detalhamento 10 (Detalhamento de Estorno de Crédito - Campo 95 da DAPI 01)
  type tp_29 is record(
    Tipo           varchar2(2),
    InscEstadContr varchar2(13),
    Anoref         varchar2(4),
    Mesref         varchar2(2),
    Diafim         varchar2(2),
    Diaini         varchar2(2),
    CodMotEst      varchar2(2),
    AutoInfr       varchar2(13),
    Vlr            number(15));
  --
  type t_tab_29 is table of tp_29 index by binary_integer;
  vt_tab_29 t_tab_29;
  --
  -- Registro 99 - Total de linhas
  type tp_99 is record(
    Tipo      varchar2(2),
    InscEstad varchar2(13),
    Anoref    varchar2(4),
    Mesref    varchar2(2),
    Diafim    varchar2(2),
    Diaini    varchar2(2),
    tot_lin   number(4));
  --
  type t_tab_99 is table of tp_99 index by binary_integer;
  vt_tab_99 t_tab_99;
  --
  cursor c_det_cfop is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper, -- 0-entrada, 1-saida
           nf.dm_ind_emit, -- 0-emiss?o propria, 1-terceiros
           cod_mod,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           inf.nro_item,
           inf.id         itemnf_id
      from nota_fiscal nf,
           mod_fiscal mf,
           item_nota_fiscal inf
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65')
       and inf.notafiscal_id  = nf.id
       and not exists (select 1  -- Antecipação de credito de ICMS
                         from imp_itemnf            ii
                            , inf_prov_docto_fiscal ip
                            , cod_ocor_aj_icms      co
                            , tipo_imposto          ti
                        where ii.itemnf_id             = inf.id
                          and ii.dm_tipo               = 0 -- 0-Imposto / 1-retenção
                          and ti.id                    = ii.tipoimp_id
                          and ti.cd                    = 1 -- ICMS
                          and ip.itemnf_id             = ii.itemnf_id
                          and co.id                    = ip.codocorajicms_id
                          and co.cod_aj                = 'MG10000004')
     order by 1, 2;
  --
  cursor c_apur_icms is
    select sum(ai.vl_total_debito) vl_total_debito,
           sum(vl_estorno_credito) vl_estorno_credito,
           sum(ai.vl_total_credito) vl_total_credito,
           sum(ai.vl_saldo_credor_ant) vl_saldo_credor_ant,
           sum(ai.vl_estorno_debido) vl_estorno_debito,
           sum(ai.vl_total_deducao) vl_total_deducao,
           sum(ai.vl_icms_recolher) vl_icms_recolher,
           sum(ai.vl_saldo_credor_transp) vl_saldo_credor_transp,
           sum(ai.vl_total_ajust_cred) vl_ajust_credito,
           sum(ai.vl_saldo_apurado) vl_saldo_apurado,
           sum(ai.vl_total_ajust_deb) vl_ajust_debito,
           sum(ai.vl_deb_esp) vl_deb_esp
      from apuracao_icms ai
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin;
  --
  cursor c_antecip_cred_icms is
    select sum(nvl(ip.vl_icms,0)) vl_icms_antecip
       from nota_fiscal           nf
          , mod_fiscal            mf
          , item_nota_fiscal      it
          , imp_itemnf            ii
          , tipo_imposto          ti
          , inf_prov_docto_fiscal ip
          , cod_ocor_aj_icms      co
      where nf.empresa_id            = gt_row_abertura_gia.empresa_id
        and nf.dm_arm_nfe_terc       = 0
        and nf.dm_st_proc            = 4 -- Autorizada
        and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
              or
             (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
        and mf.id                    = nf.modfiscal_id
        and mf.cod_mod               = '55'
        and it.notafiscal_id         = nf.id
        and ii.itemnf_id             = it.id
        and ii.dm_tipo               = 0 -- 0-Imposto / 1-retenção
        and ti.id                    = ii.tipoimp_id
        and ti.cd                    = 1 -- ICMS
        and ip.itemnf_id             = ii.itemnf_id
        and co.id                    = ip.codocorajicms_id
        and co.cod_aj                = 'MG10000004';
  --
  cursor c_apur_icms_st is
    select est.sigla_estado,
           ai.*
      from per_apur_icms_st p,
           apuracao_icms_st ai,
           estado est
     where p.empresa_id        = gt_row_abertura_gia.empresa_id
       and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
       and ai.perapuricmsst_id = p.id
       and est.id              = ai.estado_id
     order by 1;
  --
  cursor c_ajust is
    select aai.vl_aj_apur, c.*
      from apuracao_icms          ai,
           ajust_apuracao_icms    aai,
           cod_aj_saldo_apur_icms c
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
       and aai.apuracaoicms_id  = ai.id
       and c.id                 = aai.codajsaldoapuricms_id;
  --
  cursor c_det_cfop_ct is
    select ct.id            conhectransp_id,
           ct.dm_ind_oper,
           ct.pessoa_id,
           ct.dt_hr_emissao dt_emiss,
           ct.nro_ct,
           ct.serie         serie_ct,
           ct.subserie      subserie_ct,
           r.id             ctreganal_id
      from conhec_transp ct,
           ct_reg_anal r
     where ct.empresa_id = gt_row_abertura_gia.empresa_id
       and ct.dm_st_proc = 4 -- Autorizada
       and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent, ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent, ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and ct.dm_arm_cte_terc = 0
       and r.conhectransp_id  = ct.id
     order by 1;
  --
  cursor c_det_cfop_sc is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           r.id           nfregistanalit_id
      from nota_fiscal nf,
           mod_fiscal mf,
           nfregist_analit r
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id           = nf.modfiscal_id
       and mf.cod_mod      in ('06', '29', '28', '21', '22')
       and r.notafiscal_id = nf.id
     order by 1;
  --
  -- Cupom Fiscal -- Sempre saída
  cursor c_det_cfop_ecf is
    select r.id      reducaozecf_id,
           r.dt_doc  dt_emiss,
           ramd.id   reganalmovdiaecf_id,
           e.ecf_mod,
           e.ecf_fab,
           e.ecf_cx
      from equip_ecf e,
           reducao_z_ecf r,
           reg_anal_mov_dia_ecf ramd
     where e.empresa_id  = gt_row_abertura_gia.empresa_id
       and r.equipecf_id = e.id
       and r.dm_st_proc  = 1 -- Validada
       and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and ramd.reducaozecf_id = r.id
     order by 1;
  --
  cursor c_detal_est_deb_cred is
    select s.dm_util, s.cd subitemgia_cd, sum(aaig.vl_aj_apur) vl_aj_apur
      from apuracao_icms          ai,
           ajust_apuracao_icms    aa,
           cod_aj_saldo_apur_icms ca,
           ajust_apur_icms_gia    aaig,
           subitem_gia            s
     where ai.empresa_id             = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao            = 3 -- Processada
       and ai.dm_tipo                = 0 -- 0 - Real, 1 - Simulada
       and trunc(ai.dt_inicio)      >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)         <= gt_row_abertura_gia.dt_fin
       and aa.apuracaoicms_id        = ai.id
       and ca.id                     = aa.codajsaldoapuricms_id
       and ca.dm_apur                = 0 -- 0 - ICMS, 1 - ICMSST
       and aaig.ajustapuracaoicms_id = aa.id
       and s.id                      = aaig.subitemgia_id
     group by s.dm_util, s.cd
     order by s.dm_util, s.cd;
  --
  cursor c_ressarc is
    select r.vl_icms_st,
           nf.nro_nf,
           nf.serie,
           nf.dt_emiss
      from nota_fiscal     nf,
           sit_docto       sd,
           mod_fiscal      mf,
           pessoa          p,
           cidade          cid,
           nfregist_analit r,
           cfop            c
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4
       and nf.dm_arm_nfe_terc = 0 -- Não é nota de armazenamento fiscal
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and sd.id              = nf.sitdocto_id
       and sd.cd              in ('00', '06', '08')
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65', '06', '29', '28', '21', '22')
       and p.id               = nf.pessoa_id
       and cid.id             = p.cidade_id
       and cid.estado_id      = '13' --MG
       and r.notafiscal_id    = nf.id
       and nvl(r.vl_icms_st, 0) > 0
       and c.id               = r.cfop_id
       and c.cd               in (1603, 2603);
  --
  cursor c_suframa(nf number) is
    select a.suframa
      from nota_fiscal_dest a
     where a.notafiscal_id = nf;
  sufr c_suframa%rowtype;
  --
  cursor c_ajust_difal is
    select aai.vl_aj_apur, c.dm_util
      from per_apur_icms_difal    pa,
           apur_icms_difal        ai,
           ajust_apur_icms_difal  aai,
           cod_aj_saldo_apur_icms c
     where pa.empresa_id          = gt_row_abertura_gia.empresa_id
       and trunc(pa.dt_inicio)   >= gt_row_abertura_gia.dt_ini
       and trunc(pa.dt_fim)      <= gt_row_abertura_gia.dt_fin
       and ai.perapuricmsdifal_id = pa.id
       and ai.dm_situacao         = 3 -- Processada
       and aai.apuricmsdifal_id   = ai.id
       and c.id                   = aai.codajsaldoapuricms_id
       and c.dm_apur              = 2; -- ICMS/Difal
  --
  procedure pkb_limpa_vetor_mg is
    --
  begin
    --
    vt_tab_10.delete;
    vt_tab_99.delete;
    vt_tab_22.delete;
    vt_tab_23.delete;
    vt_tab_27.delete;
    vt_tab_29.delete;
    --
  end pkb_limpa_vetor_mg;
  --
  procedure pkb_insere_vetor_tp10(en_Ident_lin in number,
                                  en_iden_col  in number,
                                  en_VlrContab in number) is
    --
    vn_fase_aux number := 0;
    --
  begin
    --
    vn_fase_aux := 1;
    --
    begin
      vb_achou := vt_tab_10(en_Ident_lin).exists(en_iden_col);
    exception
      when others then
        vb_achou := false;
    end;
    --
    vn_fase_aux := 2;
    --
    if not vb_achou then
      --
      vn_fase_aux := 2.1;
      --
      vt_tab_10(en_Ident_lin)(en_iden_col).tipo := '10';
      --
      vn_fase_aux := 2.2;
      --
      vt_tab_10(en_Ident_lin)(en_iden_col).InscEstad := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0); -- Inscricao Estadual;
      --
      vn_fase_aux := 2.3;
      --
      vt_tab_10(en_Ident_lin)(en_iden_col).Anoref := to_char(gt_row_abertura_gia.dt_ini, 'RRRR');
      vt_tab_10(en_Ident_lin)(en_iden_col).Mesref := to_char(gt_row_abertura_gia.dt_ini, 'MM');
      vt_tab_10(en_Ident_lin)(en_iden_col).Diafim := to_char(gt_row_abertura_gia.dt_fin, 'DD');
      --
      vn_fase_aux := 2.4;
      --
      vt_tab_10(en_Ident_lin)(en_iden_col).Diaini := to_char(gt_row_abertura_gia.dt_ini, 'DD');
      vt_tab_10(en_Ident_lin)(en_iden_col).Ident_lin := en_Ident_lin;
      --
      vn_fase_aux := 2.5;
      --
      vt_tab_10(en_Ident_lin)(en_iden_col).Ident_Col := en_iden_col;
      vt_tab_10(en_Ident_lin)(en_iden_col).Vlr_decl := nvl(en_VlrContab, 0) * 100;
      --
    else
      --
      vn_fase_aux := 2.6;
      --
      vt_tab_10(en_Ident_lin)(en_iden_col).Vlr_decl := nvl(vt_tab_10(en_Ident_lin)(en_iden_col).Vlr_decl, 0) + (nvl(en_VlrContab, 0) * 100);
      --
    end if;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_mg.pkb_insere_vetor_tp10 fase (' || vn_fase_aux || '): ' || sqlerrm);
  end pkb_insere_vetor_tp10;
  --
  -- Verificar os valores gerados nos registros 10, 22, 23, 27 e 29
  function fkb_totvl_reg_10 return number is
    --
    vn_totvl     number := 0;
    vn_indice    pls_integer := 0;
    vn_indice_bi pls_integer := 0;
    --
  begin
    --
    vn_indice := nvl(vt_tab_10.first, 0);
    vn_totvl  := 0;
    --
    loop
      --
      if nvl(vn_indice, -1) = -1 then
        exit;
      end if;
      --
      vn_indice_bi := nvl(vt_tab_10(vn_indice).first, 0);
      --
      loop
        --
        if nvl(vn_indice_bi, -1) = -1 then
          exit;
        end if;
        --
        vn_totvl := nvl(vn_totvl, 0) + nvl(vt_tab_10(vn_indice)(vn_indice_bi).vlr_decl, 0);
        --
        if vn_indice_bi = vt_tab_10(vn_indice).last then
          exit;
        else
          vn_indice_bi := vt_tab_10(vn_indice).next(vn_indice_bi);
        end if;
        --
      end loop;
      --
      if vn_indice = vt_tab_10.last then
        exit;
      else
        vn_indice := vt_tab_10.next(vn_indice);
      end if;
      --
    end loop;
    --
    -- "Uma declaração é considerada Sem Movimento quando todos os Campos estiverem zerados ou quando só há valores nos Campos de saldo do período anterior e
    -- de saldo para o período seguinte. Portanto, esses valores somados acima, serão subtraídos aqui para não serem considerados.
    -- 87-sdo anterior, 91-soma vários valores e utiliza o valor do 87-sdo anterior (por isso subtrair novamente o valor), 92-sdo a transportar
    --
    vn_totvl := nvl(vn_totvl, 0) - nvl(vt_tab_10(87)(0).vlr_decl, 0) - nvl(vt_tab_10(87)(0).vlr_decl, 0) - nvl(vt_tab_10(92)(0).vlr_decl, 0);
    --
    if nvl(vn_totvl, 0) < 0 then
      vn_totvl := 0;
    end if;
    --
    return nvl(vn_totvl, 0);
    --
  exception
    when others then
      return 0;
  end fkb_totvl_reg_10;
  --
  function fkb_totvl_reg_22 return number is
    --
    vn_totvl  number := 0;
    vn_indice pls_integer := 0;
    --
  begin
    --
    vn_indice := nvl(vt_tab_22.first, 0);
    vn_totvl  := 0;
    --
    loop
      --
      if nvl(vn_indice, -1) = -1 then
        exit;
      end if;
      --
      vn_totvl := nvl(vn_totvl, 0) + nvl(vt_tab_22(vn_indice).vlr, 0);
      --
      if vn_indice = vt_tab_22.last then
        exit;
      else
        vn_indice := vt_tab_22.next(vn_indice);
      end if;
      --
    end loop;
    --
    return nvl(vn_totvl, 0);
    --
  exception
    when others then
      return 0;
  end fkb_totvl_reg_22;
  --
  function fkb_totvl_reg_23 return number is
    --
    vn_totvl  number := 0;
    vn_indice pls_integer := 0;
    --
  begin
    --
    vn_indice := nvl(vt_tab_23.first, 0);
    vn_totvl  := 0;
    --
    loop
      --
      if nvl(vn_indice, -1) = -1 then
        exit;
      end if;
      --
      vn_totvl := nvl(vn_totvl, 0) + nvl(vt_tab_23(vn_indice).saldoinccultura, 0) + nvl(vt_tab_23(vn_indice).incculturaper, 0) +
                  nvl(vt_tab_23(vn_indice).totaldedinccult, 0) + nvl(vt_tab_23(vn_indice).vlrliminccult, 0) + nvl(vt_tab_23(vn_indice).saldocredorinccul, 0) +
                  nvl(vt_tab_23(vn_indice).compcred, 0) + nvl(vt_tab_23(vn_indice).totaldedper, 0) + nvl(vt_tab_23(vn_indice).utilizcredrebtransf, 0) +
                  nvl(vt_tab_23(vn_indice).aliqinccult, 0) + nvl(vt_tab_23(vn_indice).culturaestorno, 0);
      --
      if vn_indice = vt_tab_23.last then
        exit;
      else
        vn_indice := vt_tab_23.next(vn_indice);
      end if;
      --
    end loop;
    --
    return nvl(vn_totvl, 0);
    --
  exception
    when others then
      return 0;
  end fkb_totvl_reg_23;
  --
  function fkb_totvl_reg_27 return number is
    --
    vn_totvl     number := 0;
    vn_indice    pls_integer := 0;
    vn_indice_bi pls_integer := 0;
    --
  begin
    --
    vn_indice := nvl(vt_tab_27.first, 0);
    vn_totvl  := 0;
    --
    loop
      --
      if nvl(vn_indice, -1) = -1 then
        exit;
      end if;
      --
      vn_indice_bi := nvl(vt_tab_27(vn_indice).first, 0);
      --
      loop
        --
        if nvl(vn_indice_bi, -1) = -1 then
          exit;
        end if;
        --
        vn_totvl := nvl(vn_totvl, 0) + nvl(vt_tab_27(vn_indice)(vn_indice_bi).vlr, 0);
        --
        if vn_indice_bi = vt_tab_27(vn_indice).last then
          exit;
        else
          vn_indice_bi := vt_tab_27(vn_indice).next(vn_indice_bi);
        end if;
        --
      end loop;
      --
      if vn_indice = vt_tab_27.last then
        exit;
      else
        vn_indice := vt_tab_27.next(vn_indice);
      end if;
      --
    end loop;
    --
    return nvl(vn_totvl, 0);
    --
  exception
    when others then
      return 0;
  end fkb_totvl_reg_27;
  --
  function fkb_totvl_reg_29 return number is
    --
    vn_totvl  number := 0;
    vn_indice pls_integer := 0;
    --
  begin
    --
    vn_indice := nvl(vt_tab_29.first, 0);
    vn_totvl  := 0;
    --
    loop
      --
      if nvl(vn_indice, -1) = -1 then
        exit;
      end if;
      --
      vn_totvl := nvl(vn_totvl, 0) + nvl(vt_tab_29(vn_indice).vlr, 0);
      --
      if vn_indice = vt_tab_29.last then
        exit;
      else
        vn_indice := vt_tab_29.next(vn_indice);
      end if;
      --
    end loop;
    --
    return nvl(vn_totvl, 0);
    --
  exception
    when others then
      return 0;
  end fkb_totvl_reg_29;
  --
  --| Função retorna o total em valores, dos registros
  function fkb_total_valor return number is
    --
    vn_totvl number := 0;
    --
  begin
    --
    vn_totvl := nvl(fkb_totvl_reg_10, 0) + nvl(fkb_totvl_reg_22, 0) + nvl(fkb_totvl_reg_23, 0) + nvl(fkb_totvl_reg_27, 0) + nvl(fkb_totvl_reg_29, 0);
    --
    return nvl(vn_totvl, 0);
    --
  exception
    when others then
      return 0;
  end fkb_total_valor;
  --
  -- Funções que retornam a qtde de registros/linhas
  function fkb_qtde_reg_10 return number is
    --
    vn_qtde      number := 0;
    vn_indice    pls_integer := 0;
    vn_indice_bi pls_integer := 0;
    --
  begin
    --
    vn_indice := nvl(vt_tab_10.first, 0);
    vn_qtde   := 0;
    --
    loop
      --
      if nvl(vn_indice, -1) = -1 then
        exit;
      end if;
      --
      vn_indice_bi := nvl(vt_tab_10(vn_indice).first, 0);
      --
      loop
        --
        if nvl(vn_indice_bi, -1) = -1 then
          exit;
        end if;
        --
        vn_qtde := nvl(vn_qtde, 0) + 1;
        --
        if vn_indice_bi = vt_tab_10(vn_indice).last then
          exit;
        else
          vn_indice_bi := vt_tab_10(vn_indice).next(vn_indice_bi);
        end if;
        --
      end loop;
      --
      if vn_indice = vt_tab_10.last then
        exit;
      else
        vn_indice := vt_tab_10.next(vn_indice);
      end if;
      --
    end loop;
    --
    return nvl(vn_qtde, 0);
    --
  exception
    when others then
      return 0;
  end fkb_qtde_reg_10;
  --
  function fkb_qtde_reg_27 return number is
    --
    vn_qtde      number := 0;
    vn_indice    pls_integer := 0;
    vn_indice_bi pls_integer := 0;
    --
  begin
    --
    vn_indice := nvl(vt_tab_27.first, 0);
    vn_qtde   := 0;
    --
    loop
      --
      if nvl(vn_indice, -1) = -1 then
        exit;
      end if;
      --
      vn_indice_bi := nvl(vt_tab_27(vn_indice).first, 0);
      --
      loop
        --
        if nvl(vn_indice_bi, -1) = -1 then
          exit;
        end if;
        --
        vn_qtde := nvl(vn_qtde, 0) + 1;
        --
        if vn_indice_bi = vt_tab_27(vn_indice).last then
          exit;
        else
          vn_indice_bi := vt_tab_27(vn_indice).next(vn_indice_bi);
        end if;
        --
      end loop;
      --
      if vn_indice = vt_tab_27.last then
        exit;
      else
        vn_indice := vt_tab_27.next(vn_indice);
      end if;
      --
    end loop;
    --
    return nvl(vn_qtde, 0);
    --
  exception
    when others then
      return 0;
  end fkb_qtde_reg_27;
  --
  --| Função retorna o total de registros
  function fkb_qtde_total_linha return number is
    --
    vn_qtde_total number := 0;
    --
  begin
    --
    vn_qtde_total := nvl(vt_tab_00.count, 0) + fkb_qtde_reg_10 + nvl(vt_tab_22.count, 0) + nvl(vt_tab_23.count, 0) + fkb_qtde_reg_27 + nvl(vt_tab_29.count, 0) + 1;
    --
    return nvl(vn_qtde_total, 0);
    --
  exception
    when others then
      return 0;
  end fkb_qtde_total_linha;
  --
  -- Procedimento monta a estrutura do arquivo da GIA-MG
  --
  procedure pkb_monta_estr_arq_gia_mg is
    --
    vn_fase_arq   number := 0;
    vn_qtde_linha number := 0;
    vn_qtde_tab10 number := 0;
    vn_qtde_tab27 number := 0;
    --
  begin
    --
    vn_fase_arq := 1;
    --
    -- TP00 - Identificação da DAPI
    if nvl(vt_tab_00.count, 0) > 0 then
      --
      vn_fase_arq := 1.1;
      --
      i := nvl(vt_tab_00.first, 0);
      --
      loop
        --
        vn_fase_arq := 1.2;
        --
        if nvl(i, -1) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 1.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := rpad(vt_tab_00(i).Tipo, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).InscEstad, 13, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Anoref, 4, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Mesref, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Diafim, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Diaini, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Versao, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Substituicao, 1, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).CAE, 7, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Desmembr_CAE, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Regim_recolh, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Regim_fiscal, 1, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Dt_lim_pgto, 8, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Op_fundese, 1, ' ');
        --
        vn_fase_arq := 1.4;
        --
        -- Verificar se houveram valores maiores que zero nos registros, para identificar a movimentação
        -- gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Dapi_movim, 1, ' ');
        if nvl(fkb_total_valor, 0) > 0 then
          --
          gl_conteudo := gl_conteudo || 'S'; -- dapi_movim
          --
        else
          --
          gl_conteudo := gl_conteudo || 'N'; -- dapi_movim
          --
        end if;
        --
        vn_fase_arq := 1.5;
        --
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Movim_cafe, 1, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).CNAEF, 7, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Desmemb_CNAEF, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).Termo_Aceite, 1, 'N');
        --
        vn_fase_arq := 1.6;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '00',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 1.7;
        --
        if i = vt_tab_00.last then
          exit;
        else
          i := vt_tab_00.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 1.8;
      --
    end if; -- TP00 - Identificação da DAPI
    --
    vn_fase_arq := 2;
    --
    -- TP10 - Identificacao do DAPI
    if nvl(vt_tab_10.count, 0) > 0 then
      --
      vn_fase_arq := 2.1;
      --
      i := nvl(vt_tab_10.first, 0);
      --
      loop
        --
        vn_fase_arq := 2.2;
        --
        if nvl(i, -1) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 2.3;
        --
        begin
          --
          vn_qtde_tab10 := vt_tab_10(i).count;
          --
        exception
          when others then
            vn_qtde_tab10 := 0;
        end;
        --
        vn_fase_arq := 2.4;
        --
        if nvl(vn_qtde_tab10, 0) > 0 then
          --
          vn_fase_arq := 2.5;
          --
          j := vt_tab_10(i).first;
          --
          vn_fase_arq := 2.6;
          --
          loop
            --
            if nvl(j, -1) = -1 then
              exit;
            end if;
            --
            vn_fase_arq := 2.7;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := lpad(vt_tab_10(i)(j).Tipo, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_10(i)(j).InscEstad, 13, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_10(i)(j).Anoref, 4, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_10(i)(j).Mesref, 0), 2, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_10(i)(j).Diafim, 0), 2, '0');
            gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_10(i)(j).Diaini, 0), 2, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_10(i)(j).Ident_lin, 0), 3, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_10(i)(j).Ident_Col, 0), 2, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_10(i)(j).Vlr_decl, 0), 15, '0');
            --
            vn_fase_arq := 2.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '10',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 2.9;
            --
            if j = vt_tab_10(i).last then
              exit;
            else
              j := vt_tab_10(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 2.10;
        --
        if i = vt_tab_10.last then
          exit;
        else
          i := vt_tab_10.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 2.11;
      --
    end if; -- TP10 - Identificacao do DAPI
    --
    vn_fase_arq := 3;
    --
    -- TP22 - Detalhamento 03 (Detalhamento de Estorno de Débito - Campo 90 da DAPI 01)
    if nvl(vt_tab_22.count, 0) > 0 then
      --
      vn_fase_arq := 3.1;
      --
      i := nvl(vt_tab_22.first, 0);
      --
      loop
        --
        vn_fase_arq := 3.2;
        --
        if nvl(i, -1) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 3.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := rpad(vt_tab_22(i).Tipo, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).InscEstadContr, 13, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Anoref, 4, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Mesref, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Diafim, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Diaini, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_22(i).NumNF, 9, 0);
        gl_conteudo := gl_conteudo || lpad(vt_tab_22(i).SerieNF, 3, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).DtNF, 8, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_22(i).Vlr, 15, 0);
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Justif, 60, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).CodMotivo, 1, ' ');
        --
        vn_fase_arq := 3.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '22',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 3.5;
        --
        if i = vt_tab_22.last then
          exit;
        else
          i := vt_tab_22.next(i);
        end if;
        --
        vn_fase_arq := 3.6;
        --
      end loop;
      --
    end if; -- TP22 - Detalhamento 03 (Detalhamento de Estorno de Débito - Campo 90 da DAPI 01)
    --
    vn_fase_arq := 4;
    --
    -- TP23 - Detalhamento 04 (Detalhamento de Deduções - Campo 98 da DAPI 01)
    if nvl(vt_tab_23.count, 0) > 0 then
      --
      vn_fase_arq := 4.1;
      --
      i := nvl(vt_tab_23.first, 0);
      --
      loop
        --
        vn_fase_arq := 4.2;
        --
        if nvl(i, -1) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 4.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := rpad(vt_tab_23(i).Tipo, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_23(i).InscEstadContr, 13, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_23(i).Anoref, 4, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_23(i).Mesref, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_23(i).Diafim, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_23(i).Diaini, 2, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).SaldoIncCultura, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).IncCulturaPer, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).TotalDedIncCult, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).VlrLimIncCult, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).SaldoCredorIncCul, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).CompCred, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).TotalDedPer, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).UtilizCredRebTransf, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).AliqIncCult, 0), 15, 0);
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_23(i).CulturaEstorno, 0), 15, 0);
        --
        vn_fase_arq := 4.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '23',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 4.5;
        --
        if i = vt_tab_23.last then
          exit;
        else
          i := vt_tab_23.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 4.6;
      --
    end if; -- TP23 - Detalhamento 04 (Detalhamento de Deduções - Campo 98 da DAPI 01)
    --
    vn_fase_arq := 5;
    --
    -- TP27 - Detalhamento 08 (Ressarcimento Substituição Tributária - Campo 70 da DAPI 01)
    if nvl(vt_tab_27.count, 0) > 0 then
      --
      vn_fase_arq := 5.1;
      --
      i := nvl(vt_tab_27.first, 0);
      --
      loop
        --
        vn_fase_arq := 5.2;
        --
        if nvl(i, -1) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 5.3;
        --
        begin
          --
          vn_qtde_tab27 := vt_tab_27(i).count;
          --
        exception
          when others then
            vn_qtde_tab27 := 0;
        end;
        --
        vn_fase_arq := 5.4;
        --
        if nvl(vn_qtde_tab27, 0) > 0 then
          --
          vn_fase_arq := 5.5;
          --
          j := vt_tab_27(i).first;
          --
          vn_fase_arq := 5.6;
          --
          loop
            --
            if nvl(j, -1) = -1 then
              exit;
            end if;
            --
            vn_fase_arq := 5.7;
            --
            gl_conteudo := rpad(vt_tab_27(i)(j).Tipo, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_27(i)(j).InscEstadContr, 13, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_27(i)(j).Anoref, 4, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_27(i)(j).Mesref, 2, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_27(i)(j).Diafim, 2, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_27(i)(j).Diaini, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_27(i)(j).MotivoResTrib, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_27(i)(j).NumNFST, 9, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_27(i)(j).SerieNF, 3, 0);
            gl_conteudo := gl_conteudo || rpad(vt_tab_27(i)(j).DtNF, 8, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_27(i)(j).DtVisto, 8, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_27(i)(j).Vlr, 15, 0);
            --
            vn_fase_arq := 5.8;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '27',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 5.9;
            --
            if j = vt_tab_27(i).last then
              exit;
            else
              j := vt_tab_27(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 5.10;
        --
        if i = vt_tab_27.last then
          exit;
        else
          i := vt_tab_27.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 5.11;
      --
    end if; -- TP27 - Detalhamento 08 (Ressarcimento Substituição Tributária - Campo 70 da DAPI 01)
    --
    vn_fase_arq := 6;
    --
    -- TP29 - Detalhamento 10 (Detalhamento de Estorno de Crédito - Campo 95 da DAPI 01)
    if nvl(vt_tab_29.count, 0) > 0 then
      --
      vn_fase_arq := 6.1;
      --
      i := nvl(vt_tab_29.first, 0);
      --
      loop
        --
        vn_fase_arq := 6.2;
        --
        if nvl(i, -1) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 6.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := rpad(vt_tab_29(i).Tipo, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_29(i).InscEstadContr, 13, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_29(i).Anoref, 4, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_29(i).Mesref, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_29(i).Diafim, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_29(i).Diaini, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_29(i).CodMotEst, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_29(i).AutoInfr, 13, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_29(i).Vlr, 15, 0);
        gl_conteudo := gl_conteudo || lpad(' ', 20, ' ');
        --
        vn_fase_arq := 6.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '29',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 6.5;
        --
        if i = vt_tab_29.last then
          exit;
        else
          i := vt_tab_29.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 6.6;
      --
    end if; -- TP29 - Detalhamento 10 (Detalhamento de Estorno de Crédito - Campo 95 da DAPI 01)
    --
    vn_fase_arq := 7;
    --
    -- TP99 - Total de linhas
    if nvl(vt_tab_99.count, 0) > 0 then
      --
      vn_fase_arq := 7.1;
      --
      i := nvl(vt_tab_99.first, 0);
      --
      loop
        --
        vn_fase_arq := 7.2;
        --
        if nvl(i, -1) = -1 then
          exit;
        end if;
        --
        vn_fase_arq := 7.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := rpad(vt_tab_99(i).Tipo, 2, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_99(i).InscEstad, 13, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_99(i).Anoref, 4, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_99(i).Mesref, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_99(i).Diafim, 2, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_99(i).Diaini, 2, '0');
        gl_conteudo := gl_conteudo || lpad(vn_qtde_linha, 4, 0);
        --
        vn_fase_arq := 7.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '99',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 7.5;
        --
        if i = vt_tab_99.last then
          exit;
        else
          i := vt_tab_99.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 7.8;
      --
    end if; -- TP99 - Total de linhas
    --
    vn_fase_arq := 8;
    --
    -- Final da montagem das linhas do arquivo texto
    --
    pkb_limpa_vetor_mg;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_mg.pkb_monta_estr_arq_gia_mg fase (' || vn_fase_arq || '): ' || sqlerrm);
  end pkb_monta_estr_arq_gia_mg;
  --
  -- Função para retornar identificador de linha
  function fkb_recup_ident_lin(en_cfop        in number,
                               ev_cd_tipooper in varchar2) return number is
    --
    vn_Ident_lin number;
    --
  begin
    --
    if substr(en_cfop, 1, 1) = 1 then
      -- Operações de entrada dentro do estado
      --
      if ev_cd_tipooper = 1 then -- Compras
        vn_Ident_lin := 16;
      elsif ev_cd_tipooper = 2 then -- Transferências
        vn_Ident_lin := 17;
      elsif ev_cd_tipooper = 3 then -- Devolução
        vn_Ident_lin := 18;
      elsif ev_cd_tipooper = 4 then -- Energia Elétrica
        vn_Ident_lin := 19;
      elsif ev_cd_tipooper = 5 then -- Comunicação
        vn_Ident_lin := 20;
      elsif ev_cd_tipooper = 6 then -- Transporte
        vn_Ident_lin := 21;
      elsif ev_cd_tipooper = 7 then -- Ativo Permanente
        vn_Ident_lin := 22;
      elsif ev_cd_tipooper = 8 then -- Uso e Consumo
        vn_Ident_lin := 23;
      elsif ev_cd_tipooper = 9 then -- Outras
        vn_Ident_lin := 24;
      else
        vn_Ident_lin := 24;
      end if;
      --
    -- Operações de entrada de outros estados
    elsif substr(en_cfop, 1, 1) = 2 then
      --
      if ev_cd_tipooper = 1 then -- Compras
        vn_Ident_lin := 26;
      elsif ev_cd_tipooper = 2 then -- Transferências
        vn_Ident_lin := 27;
      elsif ev_cd_tipooper = 3 then -- Devolução
        vn_Ident_lin := 28;
      elsif ev_cd_tipooper = 4 then -- Energia Elétrica
        vn_Ident_lin := 29;
      elsif ev_cd_tipooper = 5 then -- Comunicação
        vn_Ident_lin := 30;
      elsif ev_cd_tipooper = 6 then -- Transporte
        vn_Ident_lin := 31;
      elsif ev_cd_tipooper = 7 then -- Ativo Permanente
        vn_Ident_lin := 32;
      elsif ev_cd_tipooper = 8 then -- Uso e Consumo
        vn_Ident_lin := 33;
      elsif ev_cd_tipooper = 9 then -- Outras
        vn_Ident_lin := 34;
      else
        vn_Ident_lin := 34;
      end if;
      --
    -- Operações de entrada do exterior
    elsif substr(en_cfop, 1, 1) = 3 then
      --
      if ev_cd_tipooper = 1 then -- Compras
        vn_Ident_lin := 36;
      elsif ev_cd_tipooper = 3 then -- Devolução
        vn_Ident_lin := 37;
      elsif ev_cd_tipooper = 11 then -- Com/Transp/Energia
        vn_Ident_lin := 38;
      elsif ev_cd_tipooper = 7 then -- Ativo Permanente
        vn_Ident_lin := 39;
      elsif ev_cd_tipooper = 8 then -- Uso e Consumo
        vn_Ident_lin := 40;
      elsif ev_cd_tipooper = 9 then -- Outras
        vn_Ident_lin := 41;
      else
        vn_Ident_lin := 41;
      end if;
      --
    -- Operações saída dentro do estado
    elsif substr(en_cfop, 1, 1) = 5 then
      --
      if ev_cd_tipooper = 10 then -- Vendas
        vn_Ident_lin := 44;
      elsif ev_cd_tipooper = 2 then -- Transferências
        vn_Ident_lin := 45;
      elsif ev_cd_tipooper = 3 then -- Devolução
        vn_Ident_lin := 46;
      elsif ev_cd_tipooper = 4 then -- Energia Elétrica
        vn_Ident_lin := 47;
      elsif ev_cd_tipooper = 5 then -- Comunicação
        vn_Ident_lin := 48;
      elsif ev_cd_tipooper = 6 then -- Transporte
        vn_Ident_lin := 49;
      elsif ev_cd_tipooper = 9 then -- Outras
        vn_Ident_lin := 50;
      else
        vn_Ident_lin := 50;
      end if;
      --
    -- Operações saída de outros estados
    elsif substr(en_cfop, 1, 1) = 6 then
      --
      if ev_cd_tipooper = 10 then -- Vendas
        vn_Ident_lin := 52;
      elsif ev_cd_tipooper = 2 then -- Transferências
        vn_Ident_lin := 53;
      elsif ev_cd_tipooper = 3 then -- Devolução
        vn_Ident_lin := 54;
      elsif ev_cd_tipooper = 4 then -- Energia Elétrica
        vn_Ident_lin := 55;
      elsif ev_cd_tipooper = 5 then -- Comunicação
        vn_Ident_lin := 56;
      elsif ev_cd_tipooper = 6 then -- Transporte
        vn_Ident_lin := 57;
      elsif ev_cd_tipooper = 9 then -- Outras
        vn_Ident_lin := 58;
      else
        vn_Ident_lin := 58;
      end if;
      --
    -- Operações saída exterior
    elsif substr(en_cfop, 1, 1) = 7 then
      --
      if ev_cd_tipooper = 10 then -- Vendas
        vn_Ident_lin := 60;
      elsif ev_cd_tipooper = 3 then -- Devolução
        vn_Ident_lin := 61;
      elsif ev_cd_tipooper = 11 then -- Com/Transp/Energia
        vn_Ident_lin := 62;
      elsif ev_cd_tipooper = 9 then -- Outras
        vn_Ident_lin := 63;
      else
        vn_Ident_lin := 63;
      end if;
      --
    end if;
    --
    return nvl(vn_Ident_lin, 0);
    --
  exception
    when others then
      return 0;
  end fkb_recup_ident_lin;
  --
  -- Início PROCEDURE PRINCIPAL MINAS GERAIS
  --
begin
  --
  vn_fase := 1;
  --
  gv_tipocodarq_cd := '11';
  --
  pkb_limpa_vetor_mg;
  --
  vn_vl_reg_111 := 0;
  vn_vl_reg_113 := 0;
  vn_vl_reg_114 := 0;
  --
  vn_fase := 2;
  --
  -- Registro 00 - Identificação da DAPI
  vt_tab_00(1).Tipo      := '00';
  vt_tab_00(1).InscEstad := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0); -- Inscricao Estadual;
  vt_tab_00(1).anoref    := to_char(gt_row_abertura_gia.dt_ini, 'RRRR');
  vt_tab_00(1).mesref    := to_char(gt_row_abertura_gia.dt_ini, 'MM');
  vt_tab_00(1).diaini    := to_char(gt_row_abertura_gia.dt_ini, 'DD');
  vt_tab_00(1).diafim    := to_char(gt_row_abertura_gia.dt_fin, 'DD');
  --
  vn_fase := 3;
  --
  begin
    select cd
      into vv_versao
      from versao_gia a
     where a.id = gt_row_abertura_gia.versaogia_id;
  exception
    when no_data_found then
      vv_versao := null;
  end;
  --
  vt_tab_00(1).Versao := vv_versao;
  --
  vn_fase := 4;
  --
  if gt_row_abertura_gia.dm_tipo_gia = '01' then -- Normal
    vv_substit := 'N';
  elsif gt_row_abertura_gia.dm_tipo_gia = '02' then -- Substituída
    vv_substit := 'S';
  end if;
  --
  vt_tab_00(1).Substituicao := vv_substit;
  --
  vn_fase := 5;
  --
  begin
    select cnae
      into vv_cnae
      from juridica a,
           empresa b,
           pessoa c
     where b.pessoa_id = c.id
       and a.pessoa_id = c.id
       and b.id        = gt_row_abertura_gia.empresa_id;
  exception
    when no_data_found then
      vv_cnae := '0';
  end;
  --
  vn_fase := 6;
  --
  vt_tab_00(1).CAE           := lpad('0', 7, '0');
  vt_tab_00(1).Desmembr_CAE  := substr(lpad('0', 7, '0'), 6, 2);
  vt_tab_00(1).Regim_recolh  := pk_csf_gia.fkg_regtribgia_cd(en_regtribgia_id => gt_row_abertura_gia.regtribgia_id);
  vt_tab_00(1).Regim_fiscal  := 'N';
  vt_tab_00(1).Dt_lim_pgto   := '00000000';
  vt_tab_00(1).Op_fundese    := 'N';
  vt_tab_00(1).Dapi_movim    := 'S'; -- Esse valor poderá ser alterado na montagem do registro de acordo com os valores gerados no arquivo
  vt_tab_00(1).Movim_cafe    := 'N';
  vt_tab_00(1).CNAEF         := lpad(vv_cnae, 7, '0');
  vt_tab_00(1).Desmemb_CNAEF := '00'; -- Criar campo na juridica
  vt_tab_00(1).Termo_Aceite  := 'N';
  --
  vn_fase := 7;
  --
  vn_vl_outro := 0;
  --
  -- Registro 10 - Identificacao do DAPI - Valor
  for rec in c_det_cfop
   loop
      exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
      --
      vn_fase := 7.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      vn_vl_fcp_icmsst       := 0;
      vn_aliq_fcp_icms       := 0;
      vn_vl_fcp_icms         := 0;
      --
      vn_fase := 7.2;
      --
      pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec.itemnf_id,
                                        sn_cfop                => vn_cfop,
                                        sn_vl_operacao         => vn_vl_contabil,
                                        sv_cod_st_icms         => vv_cod_st_icms,
                                        sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                        sn_aliq_icms           => vn_aliq_icms,
                                        sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                        sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                        sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                        sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                        sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                        sv_cod_st_ipi          => vv_cod_st_ipi, -- não utilizado
                                        sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi, -- não utilizado
                                        sn_aliq_ipi            => vn_aliq_ipi, -- não utilizado
                                        sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi, -- não utilizado
                                        sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi, -- não utilizado
                                        sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi, -- não utilizado
                                        sn_ipi_nao_recup       => vn_ipi_nao_recup, -- não utilizado
                                        sn_outro_ipi           => vn_outro_ipi, -- não utilizado
                                        sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                        sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                        sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                        sn_vl_fcp_icms         => vn_vl_fcp_icms);
      --
      vn_fase := 7.3;
      --
      vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(vn_cfop);
      --
      vn_fase := 7.31;
      --
      if vn_cfop in (1501, 2501, 7501) then
         vn_vl_reg_111 := nvl(vn_vl_reg_111,0) + nvl(vn_vl_contabil,0);
      end if;
      --
      vn_fase := 7.32;
      --
      if vn_cfop in (7101, 7102, 7105, 7106, 7127) then
         vn_vl_reg_113 := nvl(vn_vl_reg_113,0) + nvl(vn_vl_contabil,0);
      end if;
      --
      vn_fase := 7.33;
      --
      if vn_cfop in (5501, 5502, 6501, 6502) then
         vn_vl_reg_114 := nvl(vn_vl_reg_114,0) + nvl(vn_vl_contabil,0);
      end if;
      --
      vn_fase := 7.4;
      --
      if nvl(vn_tipooperacao_cd,0) <= 0 then
         --
         gv_resumo := 'Não informado o "Tipo de Operação", para o CFOP ' || vn_cfop
                      || ', da Nota Fiscal Número ' || rec.nro_nf
                      || ' Série ' || rec.serie_nf
                      || ' Operação ' || pk_csf.fkg_dominio( 'NOTA_FISCAL.DM_IND_OPER', rec.dm_ind_oper)
                      || ' Emitente ' || pk_csf.fkg_dominio( 'NOTA_FISCAL.DM_IND_EMIT', rec.dm_ind_emit)
                      || ' Item ' || rec.nro_item;
         --
         pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                          ev_mensagem       => gv_mensagem,
                                          ev_resumo         => gv_resumo,
                                          en_tipo_log       => erro_de_validacao,
                                          en_referencia_id  => gn_referencia_id,
                                          ev_obj_referencia => gv_obj_referencia,
                                          en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                          en_dm_impressa    => 1);
         --
      end if;
      --
      vn_fase := 7.5;
      --
      vn_Ident_lin := fkb_recup_ident_lin (en_cfop        => vn_cfop,
                                           ev_cd_tipooper => vn_tipooperacao_cd);
      --
      vn_fase := 7.6;
      --
      if vn_Ident_lin in (22, 23, 32, 33, 39, 40) then
         --
         pkb_insere_vetor_tp10(71, 0, vn_vl_imp_trib_icms);
         -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
         --
         pkb_insere_vetor_tp10(72, 0, vn_vl_imp_trib_icms);
         --
         vn_vl_outro := nvl(vn_vl_outro,0) + nvl(vn_vl_imp_trib_icms,0);
         --
         vn_vl_base_calc_icms := 0;
         vn_vl_imp_trib_icms := 0;
         --
      end if;
      --
      vn_fase := 7.7;
      --
      if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 43) then
         --
         vn_fase := 7.8;
         --
         pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
         pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
         pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
         pkb_insere_vetor_tp10(vn_Ident_lin, 4, 0); -- Imposto Sem Aprov. Credito
         pkb_insere_vetor_tp10(vn_Ident_lin, 5, vn_vl_bc_isenta_icms); -- Isentas
         pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Não Tributadas
         pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Parcela Base Cálculo Reduzida
         pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Diferidas
         pkb_insere_vetor_tp10(vn_Ident_lin, 9, 0); -- Suspensas
         pkb_insere_vetor_tp10(vn_Ident_lin, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
         pkb_insere_vetor_tp10(vn_Ident_lin, 11, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi) ); -- Outras
         --
         vn_fase := 7.9;
         --
         pkb_insere_vetor_tp10(43, 1, vn_vl_contabil); -- Valores Contábeis
         pkb_insere_vetor_tp10(43, 2, vn_vl_base_calc_icms); -- Base Cálculo
         pkb_insere_vetor_tp10(43, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
         pkb_insere_vetor_tp10(43, 4, 0); -- Imposto Sem Aprov. Credito
         pkb_insere_vetor_tp10(43, 5, vn_vl_bc_isenta_icms); -- Isentas
         pkb_insere_vetor_tp10(43, 6, 0); -- Não Tributadas
         pkb_insere_vetor_tp10(43, 7, 0); -- Parcela Base Cálculo Reduzida
         pkb_insere_vetor_tp10(43, 8, 0); -- Diferidas
         pkb_insere_vetor_tp10(43, 9, 0); -- Suspensas
         pkb_insere_vetor_tp10(43, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
         pkb_insere_vetor_tp10(43, 11, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi) ); -- Outras
         --
         vn_fase := 7.10;
         --
         -- Soma valores dentro do estado (subtotal)
         if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 24) then
            --
            vn_fase := 7.11;
            --
            pkb_insere_vetor_tp10(25, 1, vn_vl_contabil); -- Valores Contábeis
            pkb_insere_vetor_tp10(25, 2, vn_vl_base_calc_icms); -- Base Cálculo
            pkb_insere_vetor_tp10(25, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
            pkb_insere_vetor_tp10(25, 4, 0); -- Imposto Sem Aprov. Credito
            pkb_insere_vetor_tp10(25, 5, vn_vl_bc_isenta_icms); -- Isentas
            pkb_insere_vetor_tp10(25, 6, 0); -- Não Tributadas
            pkb_insere_vetor_tp10(25, 7, 0); -- Parcela Base Cálculo Reduzida
            pkb_insere_vetor_tp10(25, 8, 0); -- Diferidas
            pkb_insere_vetor_tp10(25, 9, 0); -- Suspensas
            pkb_insere_vetor_tp10(25, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
            pkb_insere_vetor_tp10(25, 11, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi)); -- Outras
            --
          -- Soma valores fora do estado (subtotal)
         elsif (vn_Ident_lin >= 26) and (vn_Ident_lin <= 34) then
            --
            vn_fase := 7.12;
            --
            pkb_insere_vetor_tp10(35, 1, vn_vl_contabil); -- Valores Contábeis
            pkb_insere_vetor_tp10(35, 2, vn_vl_base_calc_icms); -- Base Cálculo
            pkb_insere_vetor_tp10(35, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
            pkb_insere_vetor_tp10(35, 4, 0); -- Imposto Sem Aprov. Credito
            pkb_insere_vetor_tp10(35, 5, vn_vl_bc_isenta_icms); -- Isentas
            pkb_insere_vetor_tp10(35, 6, 0); -- Não Tributadas
            pkb_insere_vetor_tp10(35, 7, 0); -- Parcela Base Cálculo Reduzida
            pkb_insere_vetor_tp10(35, 8, 0); -- Diferidas
            pkb_insere_vetor_tp10(35, 9, 0); -- Suspensas
            pkb_insere_vetor_tp10(35, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
            pkb_insere_vetor_tp10(35, 11, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi)); -- Outras
            --
          -- Soma valores exterior (subtotal)
         elsif (vn_Ident_lin >= 36) and (vn_Ident_lin <= 41) then
            --
            vn_fase := 7.13;
            --
            pkb_insere_vetor_tp10(42, 1, vn_vl_contabil); -- Valores Contábeis
            pkb_insere_vetor_tp10(42, 2, vn_vl_base_calc_icms); -- Base Cálculo
            pkb_insere_vetor_tp10(42, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
            pkb_insere_vetor_tp10(42, 4, 0); -- Imposto Sem Aprov. Credito
            pkb_insere_vetor_tp10(42, 5, vn_vl_bc_isenta_icms); -- Isentas
            pkb_insere_vetor_tp10(42, 6, 0); -- Não Tributadas
            pkb_insere_vetor_tp10(42, 7, 0); -- Parcela Base Cálculo Reduzida
            pkb_insere_vetor_tp10(42, 8, 0); -- Diferidas
            pkb_insere_vetor_tp10(42, 9, 0); -- Suspensas
            pkb_insere_vetor_tp10(42, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
            pkb_insere_vetor_tp10(42, 11, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi)); -- Outras
            --
         end if;
         --
      else
         --
         vn_fase := 7.14;
         --
         pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
         pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
         pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
         pkb_insere_vetor_tp10(vn_Ident_lin, 4, vn_vl_bc_isenta_icms); -- Isentas
         pkb_insere_vetor_tp10(vn_Ident_lin, 5, 0); -- Não Tributadas
         pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Parcela Base Cálculo Reduzida
         pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Diferidas
         pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Suspensas
         pkb_insere_vetor_tp10(vn_Ident_lin, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
         pkb_insere_vetor_tp10(vn_Ident_lin, 10, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi) ); -- Outras
         --
         vn_fase := 7.15;
         --
         pkb_insere_vetor_tp10(65, 1, vn_vl_contabil); -- Valores Contábeis
         pkb_insere_vetor_tp10(65, 2, vn_vl_base_calc_icms); -- Base Cálculo
         pkb_insere_vetor_tp10(65, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
         pkb_insere_vetor_tp10(65, 4, vn_vl_bc_isenta_icms); -- Isentas
         pkb_insere_vetor_tp10(65, 5, 0); -- Não Tributadas
         pkb_insere_vetor_tp10(65, 6, 0); -- Parcela Base Cálculo Reduzida
         pkb_insere_vetor_tp10(65, 7, 0); -- Diferidas
         pkb_insere_vetor_tp10(65, 8, 0); -- Suspensas
         pkb_insere_vetor_tp10(65, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
         pkb_insere_vetor_tp10(65, 10, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi) ); -- Outras
         --
         vn_fase := 7.16;
         --
         -- Soma valores dentro do estado (subtotal)
         if (vn_Ident_lin >= 44) and (vn_Ident_lin <= 50) then
            --
            vn_fase := 7.17;
            --
            pkb_insere_vetor_tp10(51, 1, vn_vl_contabil); -- Valores Contábeis
            pkb_insere_vetor_tp10(51, 2, vn_vl_base_calc_icms); -- Base Cálculo
            pkb_insere_vetor_tp10(51, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
            pkb_insere_vetor_tp10(51, 4, vn_vl_bc_isenta_icms); -- Isentas
            pkb_insere_vetor_tp10(51, 5, 0); -- Não Tributadas
            pkb_insere_vetor_tp10(51, 6, 0); -- Parcela Base Cálculo Reduzida
            pkb_insere_vetor_tp10(51, 7, 0); -- Diferidas
            pkb_insere_vetor_tp10(51, 8, 0); -- Suspensas
            pkb_insere_vetor_tp10(51, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
            pkb_insere_vetor_tp10(51, 10, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi)); -- Outras
            --
         -- Soma valores fora do estado (subtotal)
         elsif (vn_Ident_lin >= 52) and (vn_Ident_lin <= 58) then
            --
            vn_fase := 7.18;
            --
            pkb_insere_vetor_tp10(59, 1, vn_vl_contabil); -- Valores Contábeis
            pkb_insere_vetor_tp10(59, 2, vn_vl_base_calc_icms); -- Base Cálculo
            pkb_insere_vetor_tp10(59, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
            pkb_insere_vetor_tp10(59, 4, vn_vl_bc_isenta_icms); -- Isentas
            pkb_insere_vetor_tp10(59, 5, 0); -- Não Tributadas
            pkb_insere_vetor_tp10(59, 6, 0); -- Parcela Base Cálculo Reduzida
            pkb_insere_vetor_tp10(59, 7, 0); -- Diferidas
            pkb_insere_vetor_tp10(59, 8, 0); -- Suspensas
            pkb_insere_vetor_tp10(59, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
            pkb_insere_vetor_tp10(59, 10, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi)); -- Outras
            --
         -- Soma valores exterior (subtotal)
         elsif (vn_Ident_lin >= 60) and (vn_Ident_lin <= 63) then
            --
            vn_fase := 7.19;
            --
            pkb_insere_vetor_tp10(64, 1, vn_vl_contabil); -- Valores Contábeis
            pkb_insere_vetor_tp10(64, 2, vn_vl_base_calc_icms); -- Base Cálculo
            pkb_insere_vetor_tp10(64, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
            pkb_insere_vetor_tp10(64, 4, vn_vl_bc_isenta_icms); -- Isentas
            pkb_insere_vetor_tp10(64, 5, 0); -- Não Tributadas
            pkb_insere_vetor_tp10(64, 6, 0); -- Parcela Base Cálculo Reduzida
            pkb_insere_vetor_tp10(64, 7, 0); -- Diferidas
            pkb_insere_vetor_tp10(64, 8, 0); -- Suspensas
            pkb_insere_vetor_tp10(64, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
            pkb_insere_vetor_tp10(64, 10, (vn_vl_bc_outra_icms + vn_ipi_nao_recup + vn_outro_ipi + vn_vl_imp_trib_ipi)); -- Outras
            --
         end if;
         --
      end if;
      --
      vn_fase := 7.20;
      --
      -- Trata SUFRAMA
      open c_suframa(rec.notafiscal_id);
      fetch c_suframa into sufr;
         if c_suframa%found then
            vv_suframa := nvl(sufr.suframa,0);
         else
            vv_suframa := vv_suframa;
         end if;
      close c_suframa;
      --
   end loop; -- c_det_cfop
  --
  -- Insere os Subtotais por registro
  --
  vn_fase := 8;
  --
  -- Registro 10 - Identificacao do DAPI - Valor Impostos
  for rec in c_det_cfop_ct loop
    exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
    --
    vn_fase := 8.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    vn_fase := 8.2;
    --
    -- Recupera os valores de impostos
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_contabil,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 8.3;
    --
    vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(vn_cfop);
    --
    vn_fase := 8.4;
    --
    if nvl(vn_tipooperacao_cd, 0) <= 0 then
      --
      gv_resumo := 'Não informado o "Tipo de Operação", para o CFOP ' || vn_cfop || ', do Conhec. Transp. Número ' || rec.nro_ct ||
                   ' Série ' || rec.serie_ct || ' Operação ' || pk_csf.fkg_dominio('CONHEC_TRANSP.DM_IND_OPER', rec.dm_ind_oper);
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => erro_de_validacao,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
      --
    end if;
    --
    vn_fase := 8.5;
    --
    vn_Ident_lin := fkb_recup_ident_lin(en_cfop        => vn_cfop,
                                        ev_cd_tipooper => vn_tipooperacao_cd);
    --
    vn_fase := 8.6;
    --
    if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 43) then
      --
      vn_fase := 8.7;
      --
      pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(vn_Ident_lin, 4, 0); -- Imposto Sem Aprov. Credito
      pkb_insere_vetor_tp10(vn_Ident_lin, 5, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Diferidas
      pkb_insere_vetor_tp10(vn_Ident_lin, 9, 0); -- Suspensas
      pkb_insere_vetor_tp10(vn_Ident_lin, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(vn_Ident_lin, 11, vn_vl_bc_outra_icms); -- Outras
      --
      vn_fase := 8.8;
      --
      pkb_insere_vetor_tp10(43, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(43, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(43, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(43, 4, 0); -- Imposto Sem Aprov. Credito
      pkb_insere_vetor_tp10(43, 5, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(43, 6, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(43, 7, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(43, 8, 0); -- Diferidas
      pkb_insere_vetor_tp10(43, 9, 0); -- Suspensas
      pkb_insere_vetor_tp10(43, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(43, 11, vn_vl_bc_outra_icms); -- Outras
      --
      vn_fase := 8.9;
      --
      -- Soma valores dentro do estado (subtotal)
      if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 24) then
        --
        vn_fase := 8.10;
        --
        pkb_insere_vetor_tp10(25, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(25, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(25, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(25, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(25, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(25, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(25, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(25, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(25, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(25, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(25, 11, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores fora do estado (subtotal)
      elsif (vn_Ident_lin >= 26) and (vn_Ident_lin <= 34) then
        --
        vn_fase := 8.11;
        --
        pkb_insere_vetor_tp10(35, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(35, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(35, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(35, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(35, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(35, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(35, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(35, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(35, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(35, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(35, 11, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores exterior (subtotal)
      elsif (vn_Ident_lin >= 36) and (vn_Ident_lin <= 41) then
        --
        vn_fase := 8.12;
        --
        pkb_insere_vetor_tp10(42, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(42, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(42, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(42, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(42, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(42, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(42, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(42, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(42, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(42, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(42, 11, vn_vl_bc_outra_icms); -- Outras
        --
      end if;
      --
    else
      --
      vn_fase := 8.13;
      --
      pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(vn_Ident_lin, 4, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(vn_Ident_lin, 5, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Diferidas
      pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Suspensas
      pkb_insere_vetor_tp10(vn_Ident_lin, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(vn_Ident_lin, 10, vn_vl_bc_outra_icms); -- Outras
      --
      --
      vn_fase := 8.14;
      --
      pkb_insere_vetor_tp10(65, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(65, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(65, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(65, 4, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(65, 5, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(65, 6, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(65, 7, 0); -- Diferidas
      pkb_insere_vetor_tp10(65, 8, 0); -- Suspensas
      pkb_insere_vetor_tp10(65, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(65, 10, vn_vl_bc_outra_icms); -- Outras
      --
      vn_fase := 8.15;
      --
      -- Soma valores dentro do estado (subtotal)
      if (vn_Ident_lin >= 44) and (vn_Ident_lin <= 50) then
        --
        vn_fase := 8.16;
        --
        pkb_insere_vetor_tp10(51, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(51, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(51, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(51, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(51, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(51, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(51, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(51, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(51, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(51, 10, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores fora do estado (subtotal)
      elsif (vn_Ident_lin >= 52) and (vn_Ident_lin <= 58) then
        --
        vn_fase := 8.17;
        --
        pkb_insere_vetor_tp10(59, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(59, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(59, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(59, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(59, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(59, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(59, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(59, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(59, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(59, 10, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores exterior (subtotal)
      elsif (vn_Ident_lin >= 60) and (vn_Ident_lin <= 63) then
        --
        vn_fase := 8.18;
        --
        pkb_insere_vetor_tp10(64, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(64, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(64, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(64, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(64, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(64, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(64, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(64, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(64, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(64, 10, vn_vl_bc_outra_icms); -- Outras
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  -- Insere os Subtotais por registro impostos
  --
  vn_fase := 9;
  --
  -- Registro 10 - Identificacao do DAPI - Valor do Serviços Contínuos
  for rec in c_det_cfop_sc loop
    exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
    --
    vn_fase := 9.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vn_Ident_lin           := 0;
    --
    vn_fase := 9.2;
    --
    -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviços contínuos
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_contabil,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi, -- não utilizado
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 9.3;
    --
    vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(vn_cfop);
    --
    vn_fase := 9.4;
    --
    if nvl(vn_tipooperacao_cd, 0) <= 0 then
      --
      gv_resumo := 'Não informado o "Tipo de Operação", para o CFOP ' || vn_cfop || ', da Nota Fiscal de Serviço Continuo Número ' ||
                   rec.nro_nf || ' Série ' || rec.serie_nf || ' Operação ' || pk_csf.fkg_dominio('NOTA_FISCAL.DM_IND_OPER', rec.dm_ind_oper);
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => erro_de_validacao,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
      --
    end if;
    --
    vn_fase := 9.5;
    --
    vn_Ident_lin := fkb_recup_ident_lin(en_cfop        => vn_cfop,
                                        ev_cd_tipooper => vn_tipooperacao_cd);
    --
    vn_fase := 9.6;
    --
    if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 43) then
      --
      vn_fase := 9.7;
      --
      pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(vn_Ident_lin, 4, 0); -- Imposto Sem Aprov. Credito
      pkb_insere_vetor_tp10(vn_Ident_lin, 5, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Diferidas
      pkb_insere_vetor_tp10(vn_Ident_lin, 9, 0); -- Suspensas
      pkb_insere_vetor_tp10(vn_Ident_lin, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(vn_Ident_lin, 11, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
      --
      vn_fase := 9.8;
      --
      pkb_insere_vetor_tp10(43, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(43, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(43, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(43, 4, 0); -- Imposto Sem Aprov. Credito
      pkb_insere_vetor_tp10(43, 5, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(43, 6, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(43, 7, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(43, 8, 0); -- Diferidas
      pkb_insere_vetor_tp10(43, 9, 0); -- Suspensas
      pkb_insere_vetor_tp10(43, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(43, 11, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
      --
      vn_fase := 9.9;
      --
      -- Soma valores dentro do estado (subtotal)
      if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 24) then
        --
        vn_fase := 9.10;
        --
        pkb_insere_vetor_tp10(25, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(25, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(25, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(25, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(25, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(25, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(25, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(25, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(25, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(25, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(25, 11, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
        --
      -- Soma valores fora do estado (subtotal)
      elsif (vn_Ident_lin >= 26) and (vn_Ident_lin <= 34) then
        --
        vn_fase := 9.11;
        --
        pkb_insere_vetor_tp10(35, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(35, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(35, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(35, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(35, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(35, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(35, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(35, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(35, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(35, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(35, 11, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
        --
      -- Soma valores exterior (subtotal)
      elsif (vn_Ident_lin >= 36) and (vn_Ident_lin <= 41) then
        --
        vn_fase := 9.12;
        --
        pkb_insere_vetor_tp10(42, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(42, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(42, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(42, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(42, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(42, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(42, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(42, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(42, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(42, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(42, 11, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
        --
      end if;
      --
    else
      --
      vn_fase := 9.13;
      --
      pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(vn_Ident_lin, 4, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(vn_Ident_lin, 5, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Diferidas
      pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Suspensas
      pkb_insere_vetor_tp10(vn_Ident_lin, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(vn_Ident_lin, 10, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
      --
      vn_fase := 9.14;
      --
      pkb_insere_vetor_tp10(65, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(65, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(65, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(65, 4, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(65, 5, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(65, 6, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(65, 7, 0); -- Diferidas
      pkb_insere_vetor_tp10(65, 8, 0); -- Suspensas
      pkb_insere_vetor_tp10(65, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(65, 10, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
      --
      vn_fase := 9.15;
      --
      -- Soma valores dentro do estado (subtotal)
      if (vn_Ident_lin >= 44) and (vn_Ident_lin <= 50) then
        --
        vn_fase := 9.16;
        --
        pkb_insere_vetor_tp10(51, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(51, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(51, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(51, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(51, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(51, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(51, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(51, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(51, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(51, 10, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
        --
      -- Soma valores fora do estado (subtotal)
      elsif (vn_Ident_lin >= 52) and (vn_Ident_lin <= 58) then
        --
        vn_fase := 9.17;
        --
        pkb_insere_vetor_tp10(59, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(59, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(59, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(59, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(59, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(59, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(59, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(59, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(59, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(59, 10, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
        --
      -- Soma valores exterior (subtotal)
      elsif (vn_Ident_lin >= 60) and (vn_Ident_lin <= 63) then
        --
        vn_fase := 9.18;
        --
        pkb_insere_vetor_tp10(64, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(64, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(64, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(64, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(64, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(64, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(64, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(64, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(64, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(64, 10, (vn_vl_bc_outra_icms + vn_vl_imp_trib_ipi)); -- Outras
        --
      end if;
      --
    end if;
    --
    vn_fase := 9.19;
    --
    -- Trata SUFRAMA
    open c_suframa(rec.notafiscal_id);
    fetch c_suframa
      into sufr;
    if c_suframa%found then
      vv_suframa := nvl(sufr.suframa, 0);
    else
      vv_suframa := vv_suframa;
    end if;
    close c_suframa;
    --
  end loop;
  --
  -- Insere os Subtotais por registro - Servicos Continuo
  --
  vn_fase := 10;
  --
  -- Registro 10 - Valor do conhecimento de transporte
  for rec in c_det_cfop_ecf loop
    exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
    --
    vn_fase := 10.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vn_Ident_lin           := 0;
    --
    vn_fase := 10.2;
    --
    -- Recupera valores fiscais (ICMS) do conhecimento de transporte
    pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_cfop                => vn_cfop,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_opr              => vn_vl_contabil,
                                      sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                      sn_vl_icms             => vn_vl_imp_trib_icms,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
    --
    vn_fase := 10.3;
    --
    vn_tipooperacao_cd := pk_csf.fkg_cd_tipooper_conf_cfop(vn_cfop);
    --
    vn_fase := 10.4;
    --
    if nvl(vn_tipooperacao_cd, 0) <= 0 then
      --
      gv_resumo := 'Não informado o "Tipo de Operação", para o CFOP ' || vn_cfop || ', da Cupom Fiscal Modelo ' || rec.ECF_MOD ||
                   ' Série Fabricação ' || rec.ECF_FAB || ' Caixa ' || rec.ECF_CX || ' Data ' || to_char(rec.dt_emiss, 'dd/mm/rrrr');
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => erro_de_validacao,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
      --
    end if;
    --
    vn_fase := 10.5;
    --
    vn_Ident_lin := fkb_recup_ident_lin(en_cfop        => vn_cfop,
                                        ev_cd_tipooper => vn_tipooperacao_cd);
    --
    vn_fase := 10.6;
    --
    if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 43) then
      --
      vn_fase := 10.7;
      --
      pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(vn_Ident_lin, 4, 0); -- Imposto Sem Aprov. Credito
      pkb_insere_vetor_tp10(vn_Ident_lin, 5, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Diferidas
      pkb_insere_vetor_tp10(vn_Ident_lin, 9, 0); -- Suspensas
      pkb_insere_vetor_tp10(vn_Ident_lin, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(vn_Ident_lin, 11, vn_vl_bc_outra_icms); -- Outras
      --
      vn_fase := 10.8;
      --
      pkb_insere_vetor_tp10(43, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(43, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(43, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(43, 4, 0); -- Imposto Sem Aprov. Credito
      pkb_insere_vetor_tp10(43, 5, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(43, 6, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(43, 7, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(43, 8, 0); -- Diferidas
      pkb_insere_vetor_tp10(43, 9, 0); -- Suspensas
      pkb_insere_vetor_tp10(43, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(43, 11, vn_vl_bc_outra_icms); -- Outras
      --
      vn_fase := 10.9;
      --
      -- Soma valores dentro do estado (subtotal)
      if (vn_Ident_lin >= 16) and (vn_Ident_lin <= 24) then
        --
        vn_fase := 10.10;
        --
        pkb_insere_vetor_tp10(25, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(25, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(25, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(25, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(25, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(25, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(25, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(25, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(25, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(25, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(25, 11, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores fora do estado (subtotal)
      elsif (vn_Ident_lin >= 26) and (vn_Ident_lin <= 34) then
        --
        vn_fase := 10.11;
        --
        pkb_insere_vetor_tp10(35, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(35, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(35, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(35, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(35, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(35, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(35, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(35, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(35, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(35, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(35, 11, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores exterior (subtotal)
      elsif (vn_Ident_lin >= 36) and (vn_Ident_lin <= 41) then
        --
        vn_fase := 10.12;
        --
        pkb_insere_vetor_tp10(42, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(42, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(42, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(42, 4, 0); -- Imposto Sem Aprov. Credito
        pkb_insere_vetor_tp10(42, 5, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(42, 6, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(42, 7, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(42, 8, 0); -- Diferidas
        pkb_insere_vetor_tp10(42, 9, 0); -- Suspensas
        pkb_insere_vetor_tp10(42, 10, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(42, 11, vn_vl_bc_outra_icms); -- Outras
        --
      end if;
      --
    else
      --
      vn_fase := 10.13;
      --
      pkb_insere_vetor_tp10(vn_Ident_lin, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(vn_Ident_lin, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(vn_Ident_lin, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(vn_Ident_lin, 4, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(vn_Ident_lin, 5, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(vn_Ident_lin, 6, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(vn_Ident_lin, 7, 0); -- Diferidas
      pkb_insere_vetor_tp10(vn_Ident_lin, 8, 0); -- Suspensas
      pkb_insere_vetor_tp10(vn_Ident_lin, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(vn_Ident_lin, 10, vn_vl_bc_outra_icms); -- Outras
      --
      vn_fase := 10.14;
      --
      pkb_insere_vetor_tp10(65, 1, vn_vl_contabil); -- Valores Contábeis
      pkb_insere_vetor_tp10(65, 2, vn_vl_base_calc_icms); -- Base Cálculo
      pkb_insere_vetor_tp10(65, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
      pkb_insere_vetor_tp10(65, 4, vn_vl_bc_isenta_icms); -- Isentas
      pkb_insere_vetor_tp10(65, 5, 0); -- Não Tributadas
      pkb_insere_vetor_tp10(65, 6, 0); -- Parcela Base Cálculo Reduzida
      pkb_insere_vetor_tp10(65, 7, 0); -- Diferidas
      pkb_insere_vetor_tp10(65, 8, 0); -- Suspensas
      pkb_insere_vetor_tp10(65, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
      pkb_insere_vetor_tp10(65, 10, vn_vl_bc_outra_icms); -- Outras
      --
      vn_fase := 10.15;
      --
      -- Soma valores dentro do estado (subtotal)
      if (vn_Ident_lin >= 44) and (vn_Ident_lin <= 50) then
        --
        vn_fase := 10.16;
        --
        pkb_insere_vetor_tp10(51, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(51, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(51, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(51, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(51, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(51, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(51, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(51, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(51, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(51, 10, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores fora do estado (subtotal)
      elsif (vn_Ident_lin >= 52) and (vn_Ident_lin <= 58) then
        --
        vn_fase := 10.17;
        --
        pkb_insere_vetor_tp10(59, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(59, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(59, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(59, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(59, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(59, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(59, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(59, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(59, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(59, 10, vn_vl_bc_outra_icms); -- Outras
        --
      -- Soma valores exterior (subtotal)
      elsif (vn_Ident_lin >= 60) and (vn_Ident_lin <= 63) then
        --
        vn_fase := 10.18;
        --
        pkb_insere_vetor_tp10(64, 1, vn_vl_contabil); -- Valores Contábeis
        pkb_insere_vetor_tp10(64, 2, vn_vl_base_calc_icms); -- Base Cálculo
        pkb_insere_vetor_tp10(64, 3, vn_vl_imp_trib_icms); -- Imposto Creditado
        pkb_insere_vetor_tp10(64, 4, vn_vl_bc_isenta_icms); -- Isentas
        pkb_insere_vetor_tp10(64, 5, 0); -- Não Tributadas
        pkb_insere_vetor_tp10(64, 6, 0); -- Parcela Base Cálculo Reduzida
        pkb_insere_vetor_tp10(64, 7, 0); -- Diferidas
        pkb_insere_vetor_tp10(64, 8, 0); -- Suspensas
        pkb_insere_vetor_tp10(64, 9, vn_vl_imp_trib_icmsst); -- Substituição Tributária
        pkb_insere_vetor_tp10(64, 10, vn_vl_bc_outra_icms); -- Outras
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  -- Quadro VI - Outros Creditos / Debitos
  --
  -- **** Créditos ****
  --
  vn_fase := 11;
  --
  pkb_insere_vetor_tp10(66, 0, 0);
  --
  -- Outros Créditos Presumido
  --
  vn_fase := 12;
  --
  pkb_insere_vetor_tp10(67, 0, 0);
  --
  -- Crédito Extemporâneo
  --
  vn_fase := 13;
  --
  pkb_insere_vetor_tp10(68, 0, 0);
  --
  vn_fase := 14;
  --
  -- Diferencial de Alíquota
  --
  pkb_insere_vetor_tp10(69, 0, 0);
  --
  vn_fase := 15;
  --
  pkb_insere_vetor_tp10(70, 0, 0);
  --
  -- Outros
  --
  pkb_insere_vetor_tp10(71, 0, 0);
  --
  vn_fase := 16;
  --
  -- Total
  --
  pkb_insere_vetor_tp10(72, 0, 0);
  --
  -- **** Débitos ****
  --
  vn_fase := 17;
  --
  -- Créditos Transferidos
  --
  vn_fase := 18;
  --
  pkb_insere_vetor_tp10(73, 0, 0);
  --
  -- Outros
  --
  vn_fase := 19;
  --
  pkb_insere_vetor_tp10(74, 0, 0);
  --
  vn_fase := 20;
  --
  -- Total
  --
  pkb_insere_vetor_tp10(75, 0, 0);
  --
  vn_fase := 21;
  --
  -- Ajuste da Apuração do ICMS
  for rec in c_ajust loop
    exit when c_ajust%notfound or(c_ajust%notfound) is null;
    --
    /*
      0 - Outros débitos
      1 - Estorno de créditos
      2 - Outros créditos
      3 - Estorno de débitos
      4 - Deduções do imposto apurado
      5 - Débitos Especiais
    */
    --
    vn_fase := 21.1;
    --
    -- 0 - Outros Débitos
    if rec.dm_util = 0 then
      --
      -- De acordo com a nova emenda os valores deverão ser lançados no campo 74.1(125 do arquivo)
      -- pkb_insere_vetor_tp10(74, 0, rec.vl_aj_apur);
      -- pkb_insere_vetor_tp10(125, 0, rec.vl_aj_apur);
      --
      -- De acordo com a nova emenda a partir do período de referencia 05/2019,
      -- os campos 71.1 e 74.1 estarão desabilitados e como o campo 125 corresponde ao campo
      -- 74.1 o mesmo será desabilitado.
      pkb_insere_vetor_tp10(125, 0, 0);
      --
    -- 2-Outros créditos
    elsif rec.dm_util = 2 then
      --
      if rec.cod_aj_apur = 'MG020002' then
        --
        -- Apuração do ICMS; Outros créditos; referentes ao Valor total do crédito presumido.
        pkb_insere_vetor_tp10(67, 0, rec.vl_aj_apur);
      else
        pkb_insere_vetor_tp10(71, 0, rec.vl_aj_apur);
      end if;
      --
    -- 3 - Estorno de Débitos
  /*  elsif rec.dm_util = 3 then
      --
      pkb_insere_vetor_tp10(71, 0, rec.vl_aj_apur);*/ --- 69016
      --
    -- 5 - Débitos Especiais
    elsif rec.dm_util = 5 then
      --
      if rec.cod_aj_apur = 'MG050099' then
        --
        -- Apuração do ICMS; Débito Especial; ICMS Diferença de Alíquota - outros
        pkb_insere_vetor_tp10(100, 0, rec.vl_aj_apur);
        --
      end if;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 22;
  --
  pkb_insere_vetor_tp10(124, 0, 0); -- campo 71.1
  pkb_insere_vetor_tp10(125, 0, 0); -- campo 74.1
  --
  -- Ajuste da Apuração do ICMS/DIFAL
  /*for rec in c_ajust_difal loop
     exit when c_ajust_difal%notfound or (c_ajust_difal%notfound) is null;
     --
     \*
       0 - Outros débitos
       1 - Estorno de créditos
       2 - Outros créditos
       3 - Estorno de débitos
       4 - Deduções do imposto apurado
       5 - Débitos Especiais
     *\
     --
     vn_fase := 22.1;
     --
     if rec.dm_util = 0 then -- 0-Outros débitos
        --
        pkb_insere_vetor_tp10(125, 0, rec.vl_aj_apur); -- campo 74.1
        --
     elsif rec.dm_util = 2 then -- 2-Outros créditos
           --
           pkb_insere_vetor_tp10(124, 0, rec.vl_aj_apur); -- campo 71.1
           --
     end if;
     --
  end loop;*/
  --
  -- Quadro VII - ICMS Substituição Tributária - NÃO MONTADO - CASO NECESSÁRIO VERIFICAR VERSÃO ANTERIOR A 26/05/2014
  --
  pkb_insere_vetor_tp10(91, 0, 0);
  pkb_insere_vetor_tp10(92, 0, 0);
  pkb_insere_vetor_tp10(93, 0, 0);
  pkb_insere_vetor_tp10(94, 0, 0);
  pkb_insere_vetor_tp10(95, 0, 0);
  pkb_insere_vetor_tp10(96, 0, 0);
  pkb_insere_vetor_tp10(97, 0, 0);
  pkb_insere_vetor_tp10(98, 0, 0);
  pkb_insere_vetor_tp10(99, 0, 0);
  --
  pkb_insere_vetor_tp10(100, 0, 0);
  pkb_insere_vetor_tp10(101, 0, 0);
  pkb_insere_vetor_tp10(102, 0, 0);
  pkb_insere_vetor_tp10(103, 0, 0);
  pkb_insere_vetor_tp10(105, 0, 0);
  pkb_insere_vetor_tp10(123, 0, 0); -- 104.1
  --
  pkb_insere_vetor_tp10(130, 0, 0); -- 99.1
  pkb_insere_vetor_tp10(131, 0, 0); -- 99.2
  pkb_insere_vetor_tp10(132, 0, 0); -- 104.2
  pkb_insere_vetor_tp10(133, 0, 0); -- 104.3
  --
  -- Quadro VIII - Apuracao de ICMS no periodo
  --
  vn_fase := 23;
  --
  for rec in c_apur_icms loop
    exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
    --
    vn_fase := 23.1;
    --
    -- **** Creditos ****
    --
    -- Saldo Credor Periodo Anterior
    pkb_insere_vetor_tp10(87, 0, nvl(rec.vl_saldo_credor_ant, 0));
    --
    vn_fase := 23.2;
    --
    -- Por entradas
    pkb_insere_vetor_tp10(88, 0, (rec.vl_total_credito - nvl(vn_vl_outro, 0)));
    --
    vn_fase := 23.3;
    --
    -- Outros Creditos
    pkb_insere_vetor_tp10(89, 0, (rec.vl_ajust_credito + nvl(vn_vl_outro, 0)));
    --
    vn_fase := 23.4;
    --
    -- Total do Credito
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    pkb_insere_vetor_tp10(72, 0, rec.vl_ajust_credito);
    --
    vn_fase := 23.5;
    --
    -- Estorno de Debitos
    pkb_insere_vetor_tp10(90, 0, rec.vl_estorno_debito);
    --
    vn_fase := 23.6;
    --
    -- Estorno FEM
    pkb_insere_vetor_tp10(120, 0, 0);
    --
    vn_fase := 23.7;
    --
    -- Total
    vn_cred_tot := nvl(rec.vl_saldo_credor_ant, 0) + (rec.vl_total_credito - nvl(vn_vl_outro, 0)) +
                      (rec.vl_ajust_credito + nvl(vn_vl_outro, 0)) + nvl(rec.vl_estorno_debito, 0);
    --
    vn_fase := 23.8;
    --
    pkb_insere_vetor_tp10(91, 0, vn_cred_tot); -- somar    87 - 120
    --
    vn_fase := 23.9;
    --
    -- Saldo Credor Periodo Seguinte
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    pkb_insere_vetor_tp10(92, 0, rec.vl_saldo_credor_transp);
    --
    -- **** Débitos ****
    --
    vn_fase := 23.9;
    --
    -- Por saídas
    pkb_insere_vetor_tp10(93, 0, rec.vl_total_debito);
    --
    vn_fase := 23.10;
    --
    -- Outros Débitos
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    pkb_insere_vetor_tp10(94, 0, rec.vl_ajust_debito);
    --
    -- Total débito
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    pkb_insere_vetor_tp10(75, 0, rec.vl_ajust_debito);
    --
    vn_fase := 23.11;
    --
    -- Estorno de Créditos
    pkb_insere_vetor_tp10(95, 0, rec.vl_estorno_credito);
    --
    vn_fase := 23.12;
    --
    -- Total
    vn_deb_tot := nvl(rec.vl_total_debito, 0) + nvl(rec.vl_ajust_debito, 0) + nvl(rec.vl_estorno_credito, 0);
    --
    vn_fase := 23.13;
    --
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    pkb_insere_vetor_tp10(96, 0, vn_deb_tot);
    --
    vn_fase := 23.14;
    --
    -- Saldo Devedor apurado
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    pkb_insere_vetor_tp10(97, 0, rec.vl_saldo_apurado);
    --
    vn_fase := 23.15;
    --
    -- Deduções
    pkb_insere_vetor_tp10(98, 0, rec.vl_total_deducao);
    --
    -- Quadro IX - Obrigacoes do Periodo
    --
    -- **** Obrigacoes a Recolher **** --
    --
    vn_fase := 23.16;
    --
    -- ICMS a recolher no periodo
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    --pkb_insere_vetor_tp10(99, 0, rec.vl_icms_recolher);
    --
    vn_fase := 23.17;
    --
    -- Diferencial da alíquota
    pkb_insere_vetor_tp10(100, 0, 0);
    --
    vn_fase := 23.18;
    --
    -- ST - por Entradas
    pkb_insere_vetor_tp10(101, 0, 0);
    --
    vn_fase := 23.19;
    --
    -- ST - por Saidas
    pkb_insere_vetor_tp10(102, 0, 0);
    --
    vn_fase := 23.20;
    --
    -- Servições de Transporte de respons. remetente
    pkb_insere_vetor_tp10(103, 0, 0);
    --
    vn_fase := 23.21;
    --
    -- Outros
    pkb_insere_vetor_tp10(104, 0, 0);
    --
    vn_fase := 23.22;
    --
    -- Total ICMS
    -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
    pkb_insere_vetor_tp10(105, 0, rec.vl_icms_recolher + rec.VL_DEB_ESP);
    --
    vn_fase := 23.23;
    --
    -- Total FEM
    pkb_insere_vetor_tp10(121, 0, 0);
    --
    -- **** Recolhimento efetuados Entradas/Saídas **** --
    --
    vn_fase := 23.24;
    --
	-- Leitura dos valores de Antecipação de Crédito de ICMS
    for rec_ant in c_antecip_cred_icms loop
      exit when c_antecip_cred_icms%notfound or(c_antecip_cred_icms%notfound) is null;
      --
      -- Importacao
      pkb_insere_vetor_tp10(106, 0, 0);
      --
      vn_fase := 23.25;
      --
      -- Debito Extemporaneo
      pkb_insere_vetor_tp10(107, 0, 0);
      --
      vn_fase := 23.26;
      --
      -- ST
      pkb_insere_vetor_tp10(108, 0, 0);
      --
      vn_fase := 23.27;
      --
      -- Outros
      --
      pkb_insere_vetor_tp10(109, 0, rec_ant.vl_icms_antecip);
      --
      vn_fase := 23.28;
      --
      -- Total ICMS antecipado
      pkb_insere_vetor_tp10(110, 0, rec_ant.vl_icms_antecip);
      --
	end loop;
    --
    vn_fase := 23.29;
    --
    -- Total FEM antecipado
    pkb_insere_vetor_tp10(122, 0, 0);
    --
    vn_fase := 23.30;
    --
    -- Exportação Ind. Comercial Exportadora
    pkb_insere_vetor_tp10(111, 0, vn_vl_reg_111);
    --
    vn_fase := 23.31;
    --
    -- Saída Suframa
    pkb_insere_vetor_tp10(112, 0, vv_suframa);
    --
    vn_fase := 23.32;
    --
    -- Exportação direta pelo produtor remetente
    pkb_insere_vetor_tp10(113, 0, vn_vl_reg_113);
    --
    vn_fase := 23.33;
    --
    -- Remessa Exportação
    pkb_insere_vetor_tp10(114, 0, vn_vl_reg_114);
    --
    -- Quadro XI - Informaçoes Econômicas
    --
    vn_fase := 23.34;
    --
    -- Números de empregados
    --
    begin
      select nro_func, vl_folha
        into vn_nro_func, vn_vl_folha
        from inf_folha_pgto
       where empresa_id = gt_row_abertura_gia.empresa_id
         and dm_st_proc = 3
         and to_date('01/' || mes || '/' || ano, 'dd/mm/yyyy') = trunc(gt_row_abertura_gia.dt_fin, 'dd');
    exception
      when others then
        vn_nro_func := 0;
        vn_vl_folha := 0;
    end;
    --
    vn_fase := 23.35;
    --
    pkb_insere_vetor_tp10(115, 0, vn_nro_func);
    --
    vn_fase := 23.36;
    --
    -- Valor folha pagto
    pkb_insere_vetor_tp10(116, 0, vn_vl_folha);
    --
    vn_fase := 23.37;
    -- Cofins
    pkb_insere_vetor_tp10(117, 0, 0);
    --
    vn_fase := 23.38;
    --
    -- Energia Elétrica
    pkb_insere_vetor_tp10(118, 0, 0);
    --
    vn_fase := 23.39;
    --
    -- Recolhimento efetivo - campo 104.1
    pkb_insere_vetor_tp10(123, 0, 0);
    --
  end loop;
  --
  --
  -- Registro 20 - Detalhamento de Creditos Recebido - cpo 66 - DAPI 1 - nao implementar
  -- Registro 21 - Detalhamento de Creditos Tranferidos - cpo 73 - DAPI 1 - nao implementar
  --
  vn_fase := 24;
  --
  i := 0;
  --
  for rec in c_detal_est_deb_cred loop
    exit when c_detal_est_deb_cred%notfound or(c_detal_est_deb_cred%notfound) is null;
    --
    vn_fase := 24.1;
    --
    i := i + 1;
    --
    if nvl(rec.vl_aj_apur, 0) > 0 then
      --
      -- Estorno de débitos
      if rec.dm_util = 3 then
        --
        vn_fase := 24.2;
        --
        -- Registro  22 - Detalhamento 03 (Detalhamento de Estorno de Débito - Campo 90 da DAPI 01)
        vt_tab_22(i).Tipo           := '22';
        vt_tab_22(i).InscEstadContr := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0); -- Inscricao Estadual;
        vt_tab_22(i).Anoref         := to_char(gt_row_abertura_gia.dt_ini, 'RRRR');
        vt_tab_22(i).Mesref         := to_char(gt_row_abertura_gia.dt_ini, 'MM');
        vt_tab_22(i).Diafim         := to_char(gt_row_abertura_gia.dt_fin, 'DD');
        vt_tab_22(i).Diaini         := to_char(gt_row_abertura_gia.dt_ini, 'DD');
        vt_tab_22(i).NumNF          := '0';
        vt_tab_22(i).SerieNF        := '0';
        vt_tab_22(i).DtNF           := '00000000';
        vt_tab_22(i).Vlr            := nvl(rec.vl_aj_apur, 0) * 100;
        vt_tab_22(i).Justif         := ' ';
        vt_tab_22(i).CodMotivo      := to_number(substr(rec.subitemgia_cd, 3, 2));
        --
      -- Estorno de créditos
      elsif rec.dm_util = 1 then
        --
        vn_fase := 24.3;
        --
        -- Registro 29 - Detalhamento 10 (Detalhamento de Estorno de Crédito - Campo 95 da DAPI 01)
        vt_tab_29(i).Tipo           := '29';
        vt_tab_29(i).InscEstadContr := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0);
        vt_tab_29(i).Anoref         := to_char(gt_row_abertura_gia.dt_ini, 'RRRR');
        vt_tab_29(i).Mesref         := to_char(gt_row_abertura_gia.dt_ini, 'MM');
        vt_tab_29(i).Diafim         := to_char(gt_row_abertura_gia.dt_fin, 'DD');
        vt_tab_29(i).Diaini         := to_char(gt_row_abertura_gia.dt_ini, 'DD');
        vt_tab_29(i).CodMotEst      := trim(substr(rec.subitemgia_cd, 3, 2));
        vt_tab_29(i).AutoInfr       := '0';
        vt_tab_29(i).Vlr            := nvl(rec.vl_aj_apur, 0) * 100;
        --
      end if;
      --
    end if;
    --
  end loop; -- c_detal_est_deb_cred
  --
  -- Registro 23 - Detalhamento 04 (Detalhamento de Deduções - Campo 98 da DAPI 01) - Implementar com valores zerados
  -- Registro 24 - Detalhamento 05 (Campo Compensação de Saldo entre Estabelecimentos da mesma empresa da DAPI 01) - Não implementar
  -- Registro 25 - Detalhamento 06 (Incentivo à cultura - DAPI 01) - Não implementar
  --
  vn_fase := 25;
  --
  i := 0;
  --
  for rec in c_ressarc loop
    exit when c_ressarc%notfound or(c_ressarc%notfound) is null;
    --
    vn_fase := 25.1;
    --
    i := i + 1;
    --
    -- Registro 27 - Detalhamento 08 (Ressarcimento Substituição Tributária - Campo 70 da DAPI 01)
    vt_tab_27(1)(i).Tipo           := '27';
    vt_tab_27(1)(i).InscEstadContr := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0);
    vt_tab_27(1)(i).Anoref         := to_char(gt_row_abertura_gia.dt_ini, 'RRRR');
    vt_tab_27(1)(i).Mesref         := to_char(gt_row_abertura_gia.dt_ini, 'MM');
    vt_tab_27(1)(i).Diafim         := to_char(gt_row_abertura_gia.dt_fin, 'DD');
    vt_tab_27(1)(i).Diaini         := to_char(gt_row_abertura_gia.dt_ini, 'DD');
    vt_tab_27(1)(i).MotivoResTrib  := '2'; -- 1-Ressarcimento ICMS, 2-Abatimento de ICMS ST por RE
    vt_tab_27(1)(i).NumNFST        := rec.nro_nf;
    vt_tab_27(1)(i).SerieNF        := rec.serie;
    vt_tab_27(1)(i).DtNF           := to_char(rec.dt_emiss, 'RRRRDDMM');
    vt_tab_27(1)(i).DtVisto        := to_char(rec.dt_emiss, 'RRRRDDMM');
    vt_tab_27(1)(i).Vlr            := nvl(rec.vl_icms_st, 0) * 100;
    --
  end loop; -- c_ressarc
  --
  vn_fase := 26;
  --
  -- Quadro VII - ICMS Substituição Tributária
  --
  begin
    select sum(orai.vl_orig_rec)
      into vn_vl_fem
      from per_apur_icms_st       p,
           apuracao_icms_st       ai,
           obrig_rec_apur_icms_st orai,
           aj_obrig_rec           a
     where p.empresa_id           = gt_row_abertura_gia.empresa_id
       and trunc(p.dt_inicio)    >= gt_row_abertura_gia.dt_ini
       and trunc(p.dt_fim)       <= gt_row_abertura_gia.dt_fin
       and ai.perapuricmsst_id    = p.id
       and orai.apuracaoicmsst_id = ai.id
       and a.id                   = orai.ajobrigrec_id
       and a.cd                   = '006'; -- ICMS resultante da alíquota adicional dos itens incluídos no Fundo de Combate à Pobreza
  exception
    when others then
      vn_vl_fem := 0;
  end;
  --
  vn_fase := 27;
  --
  pkb_insere_vetor_tp10(119, 0, nvl(vn_vl_fem, 0)); -- Fundo de erradicação da misieria FEM
  pkb_insere_vetor_tp10(121, 0, nvl(vn_vl_fem, 0)); -- Total do FEM
  --
  pkb_insere_vetor_tp10(76, 0, 0);
  pkb_insere_vetor_tp10(77, 0, 0);
  pkb_insere_vetor_tp10(78, 0, 0);
  pkb_insere_vetor_tp10(79, 0, 0);
  pkb_insere_vetor_tp10(80, 0, 0);
  pkb_insere_vetor_tp10(81, 0, 0);
  pkb_insere_vetor_tp10(82, 0, 0);
  pkb_insere_vetor_tp10(83, 0, 0);
  pkb_insere_vetor_tp10(84, 0, 0);
  pkb_insere_vetor_tp10(85, 0, 0);
  pkb_insere_vetor_tp10(86, 0, 0);
  --
  vn_fase := 28;
  --
  for rec in c_apur_icms_st loop
    exit when c_apur_icms_st%notfound or(c_apur_icms_st%notfound) is null;
    --
    vn_fase := 28.1;
    --
    -- Por Saída
    if rec.sigla_estado = 'MG' then
      --
      vn_fase := 28.2;
      --
      pkb_insere_vetor_tp10(76, 0, nvl(rec.vl_base_calc_icms_st, 0)); -- Base de cálculo ICMS-ST
      pkb_insere_vetor_tp10(77, 0, ((nvl(rec.vl_retencao_st, 0) + nvl(rec.vl_out_deb_st, 0)) - nvl(rec.vl_outro_cred_st, 0))); -- Valor retido ICMS-ST
      pkb_insere_vetor_tp10(78, 0, nvl(rec.vl_saldo_cred_ant_st, 0)); -- Saldo credor ICMS-ST período anterior
      pkb_insere_vetor_tp10(79, 0, 0); -- Restituição ICMS-ST
      pkb_insere_vetor_tp10(80, 0, nvl(rec.vl_devol_st, 0)); -- Devolução
      pkb_insere_vetor_tp10(81, 0, nvl(rec.vl_saldo_cred_st_transp, 0)); -- Saldo credor para o período seguinte
      pkb_insere_vetor_tp10(82, 0, (nvl(rec.vl_icms_recol_st, 0) - nvl(vn_vl_fem, 0))); -- ICMS-ST a recolher
      --
      pkb_insere_vetor_tp10(102, 0, (nvl(rec.vl_icms_recol_st, 0) - nvl(vn_vl_fem, 0))); -- Substitução tributária - por saídas
      -- Obs.: Esse campo está sendo refeito no final da rotina com o processo de totalizador
      pkb_insere_vetor_tp10(105, 0, (nvl(rec.vl_icms_recol_st, 0) - nvl(vn_vl_fem, 0))); -- Total do ICMS
      --
    else
      --
      vn_fase := 28.3;
      --
      pkb_insere_vetor_tp10(83, 0, nvl(rec.vl_base_calc_icms_st, 0)); -- Base de cálculo ICMS-ST
      pkb_insere_vetor_tp10(84, 0, nvl(rec.vl_retencao_st, 0)); -- Valor retido ICMS-ST
      --
    end if;
    --
    vn_fase := 28.4;
    --
    -- Por Entradas
    pkb_insere_vetor_tp10(85, 0, 0); -- Base de cálculo ICMS-ST
    pkb_insere_vetor_tp10(86, 0, 0); -- Valor retido ICMS-ST
  --
  end loop; -- c_apur_icms_st
  --
  vn_fase := 29;
  --
  -- Registro 10 - Identificacao do DAPI - Campos não identificados
  pkb_insere_vetor_tp10(126, 0, 0); -- Outros débitos de ST - campo 77.1
  pkb_insere_vetor_tp10(127, 0, 0); -- Fundo de Errad. da Miséria a recolher - campo 98.1
  pkb_insere_vetor_tp10(128, 0, 0); -- Fundo de Errad. da Miséria a recolher - campo 82.2
  pkb_insere_vetor_tp10(129, 0, 0); -- Total FEM Op. Própria - campo 105.2
  --
  -- Registro 10 - Identificacao do DAPI - Campos não identificados
  -- Campos incluídos a partir da versão 9.00.00. Deverão ser representados pelos números abaixo:
  pkb_insere_vetor_tp10(130, 0, 0); -- Correspondente ao valor do Campo 99.1 (quadro IX) - deverá vir da tela/portal
  pkb_insere_vetor_tp10(131, 0, 0); -- Correspondente ao valor do Campo 99.2(quadro IX) - diferença do campo 99 - 99.1.
  pkb_insere_vetor_tp10(132, 0, 0); -- Correspondente ao valor do Campo 104.2 (quadro IX)
  pkb_insere_vetor_tp10(133, 0, 0); -- Correspondente ao valor do Campo 104.3 (quadro IX) - diferença do campo 104.1 - 104.2.
  --
  -- Registro 10 - Identificacao do DAPI - Totalizadores
  -- Os valores somados são divididos por 100, devido a rotina pkb_insere_vetor_tp10, que acumula os valores multiplicando por 100.
  --
  vn_fase := 30;
  --
  -- Campo 72. Obs.: Este campo está sendo alimentado nos cursores c_apur_icms e c_det_cfop (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- C072 = C066 + C067 + C068 + C069 + C070 + C071 + C071.1(124)
  vt_tab_10(72)(0).vlr_decl := 0;
  pkb_insere_vetor_tp10(72, 0, ((nvl(vt_tab_10(66)(0).vlr_decl, 0) + nvl(vt_tab_10(67)(0).vlr_decl, 0) + nvl(vt_tab_10(68)(0).vlr_decl, 0) +
                        nvl(vt_tab_10(69)(0).vlr_decl, 0) + nvl(vt_tab_10(70)(0).vlr_decl, 0) + nvl(vt_tab_10(71)(0).vlr_decl, 0) + nvl(vt_tab_10(124)(0).vlr_decl, 0)) / 100));
  --
  vn_fase := 31;
  --
  -- Campo 75. Obs.: Este campo está sendo alimentado no cursor c_apur_icms (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- C075 = C073 + C074 + C074.1(125)
  vt_tab_10(75)(0).vlr_decl := 0;
  pkb_insere_vetor_tp10(75, 0, ((nvl(vt_tab_10(73)(0).vlr_decl, 0) + nvl(vt_tab_10(74)(0).vlr_decl, 0) + nvl(vt_tab_10(125)(0).vlr_decl, 0)) / 100));
  --
  vn_fase := 32;
  --
  -- Campo 94. Obs.: Este campo está sendo alimentado no cursor c_apur_icms (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- C094 = C075
  vt_tab_10(94)(0).vlr_decl := 0;
  pkb_insere_vetor_tp10(94, 0, (nvl(vt_tab_10(75)(0).vlr_decl, 0) / 100));
  --
  vn_fase := 33;
  -- Campo 96. Obs.: Este campo está sendo alimentado no cursor c_apur_icms (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- C096 = C093 + C094 + C095
  vt_tab_10(96)(0).vlr_decl := 0;
  pkb_insere_vetor_tp10(96, 0, ((nvl(vt_tab_10(93)(0).vlr_decl, 0) + nvl(vt_tab_10(94)(0).vlr_decl, 0) + nvl(vt_tab_10(95)(0).vlr_decl, 0)) / 100));
  --
  vn_fase := 34;
  --
  -- Campo 92. Obs.: Este campo está sendo alimentado no cursor c_apur_icms (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- Saldo Credor Periodo Seguinte: SE C091 > C096 then C092 = C091 - C096 SENÃO C092 = 0,00 FIM
  vt_tab_10(92)(0).vlr_decl := 0;
  if nvl(vt_tab_10(91)(0).vlr_decl, 0) > nvl(vt_tab_10(96)(0).vlr_decl, 0) then
    pkb_insere_vetor_tp10(92, 0, ((nvl(vt_tab_10(91)(0).vlr_decl, 0) - nvl(vt_tab_10(96)(0).vlr_decl, 0)) / 100));
  else
    pkb_insere_vetor_tp10(92, 0, 0);
  end if;
  --
  vn_fase := 35;
  --
  -- Campo 97. Obs.: Este campo está sendo alimentado no cursor c_apur_icms (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- SE C091 > C096 then C097 = 0,00 SENÃO C097 = C096 - C091 FIM
  vt_tab_10(97)(0).vlr_decl := 0;
  if nvl(vt_tab_10(91)(0).vlr_decl, 0) > nvl(vt_tab_10(96)(0).vlr_decl, 0) then
    pkb_insere_vetor_tp10(97, 0, 0);
  else
    pkb_insere_vetor_tp10(97, 0, ((nvl(vt_tab_10(96)(0).vlr_decl, 0) - nvl(vt_tab_10(91)(0).vlr_decl, 0)) / 100));
  end if;
  --
  vn_fase := 36;
  --
  -- Campo 99. Obs.: Este campo está sendo alimentado no cursor c_apur_icms (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- C099 = C097 - C098
  --vt_tab_10(99)(0).vlr_decl := 0;
  pkb_insere_vetor_tp10(99, 0, ((nvl(vt_tab_10(97)(0).vlr_decl, 0) - nvl(vt_tab_10(98)(0).vlr_decl, 0)) / 100));
  --
  vn_fase := 37;
  --
  -- Informar número 131 Correspondente ao valor do Campo 99.2(quadro IX) - diferença do campo 99 - 99.1.
  vt_tab_10(131)(0).vlr_decl := 0;
  pkb_insere_vetor_tp10(131, 0, ((nvl(vt_tab_10(99)(0).vlr_decl, 0) - nvl(vt_tab_10(130)(0).vlr_decl, 0)) / 100));
  --
  vn_fase := 38;
  --
  -- Informar número 133 Correspondente ao valor do Campo 104.3 (quadro IX) - diferença do campo 104.1 (123) - 104.2 (132).
  vt_tab_10(133)(0).vlr_decl := 0;
  pkb_insere_vetor_tp10(133, 0, ((nvl(vt_tab_10(123)(0).vlr_decl, 0) - nvl(vt_tab_10(132)(0).vlr_decl, 0)) / 100));
  --
  vn_fase := 39;
  --
  -- Campo 105. Obs.: Este campo está sendo alimentado nos cursores c_apur_icms e c_apur_icms_st (acima), porém no docto de leiaute temos esse campo como totalizador.
  -- C105 = C099 + C100 + C101 + C102 + C103 + C104 + C0104.1(123)
  vt_tab_10(105)(0).vlr_decl := 0;
  --pkb_insere_vetor_tp10(105, 0, ((nvl(vt_tab_10(99)(0).vlr_decl,0) + nvl(vt_tab_10(100)(0).vlr_decl,0) + nvl(vt_tab_10(101)(0).vlr_decl,0) +
  --                                nvl(vt_tab_10(102)(0).vlr_decl,0) + nvl(vt_tab_10(103)(0).vlr_decl,0) + nvl(vt_tab_10(123)(0).vlr_decl,0)) / 100));
  -- O campo 105 deve ser igual a soma dos campos: C105 = 99.2(131), 100, 101, 102, 103, 104 e 104.3(133).
  pkb_insere_vetor_tp10(105, 0, ((nvl(vt_tab_10(131)(0).vlr_decl, 0) + nvl(vt_tab_10(100)(0).vlr_decl, 0) + nvl(vt_tab_10(101)(0).vlr_decl, 0) +
                        nvl(vt_tab_10(102)(0).vlr_decl, 0) + nvl(vt_tab_10(103)(0).vlr_decl, 0) + nvl(vt_tab_10(104)(0).vlr_decl, 0) + nvl(vt_tab_10(133)(0).vlr_decl, 0)) / 100));
  --
  vn_fase := 40;
  --
  -- Registro 28 - Detalhamento 09 (Ressarcimento ICMS - Campo 79 da DAPI 01) - Não implementar
  -- Registro 29 - Detalhamento 10 (Detalhamento de Estorno de Crédito - Campo 95 da DAPI 01) - Não implementar
  -- Registro 33 - Movimento de Café - DAPI 1 - Não implementar
  -- Resgitro 34 - Utilização de Crédito - Campo Utilização de Crédito recebido em transferência da DAPI Modelo 01 - Não implementar
  -- Registro 35 - Remetente de Crédito - Detalhamento do Campo Utilização de Crédito Recebido em Transferência da DAPI Modelo 01 - Não implementar
  --
  vn_fase := 99;
  --
  -- Registro 99 - Total de linhas
  vt_tab_99(1).Tipo      := '99';
  vt_tab_99(1).InscEstad := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0);
  vt_tab_99(1).Anoref    := to_char(gt_row_abertura_gia.dt_ini, 'RRRR');
  vt_tab_99(1).Mesref    := to_char(gt_row_abertura_gia.dt_ini, 'MM');
  vt_tab_99(1).Diafim    := to_char(gt_row_abertura_gia.dt_fin, 'DD');
  vt_tab_99(1).Diaini    := to_char(gt_row_abertura_gia.dt_ini, 'DD');
  vt_tab_99(1).tot_lin   := fkb_qtde_total_linha;
  --
  --
  vn_fase := 99.1;
  --
  -- Procedimento monta a estrutura do arquivo da GIA - MS
  pkb_monta_estr_arq_gia_mg;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_mg fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_arq_gia_mg;

------------------------------------------------
-- Procedimento de geracao do arquivo da GIA-MS
------------------------------------------------
procedure pkb_gera_arq_gia_ms is
   --
   -- variaveis do controle do vetor
   i pls_integer;
   j pls_integer;
   k pls_integer;
   -- variaveis do processo
   vn_fase                number := 0;
   vb_achou               boolean;
   --
   vn_cfop                cfop.cd%type := 0;
   vn_vl_contabil         number(15, 2) := 0;
   vv_cod_st_icms         cod_st.cod_st%type := null;
   vn_vl_base_calc_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_icms           imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_icms    imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_base_calc_icmsst imp_itemnf.vl_base_calc%type := 0;
   vn_vl_imp_trib_icmsst  imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_icms    imp_itemnf.vl_base_calc%type := 0;
   vv_cod_st_ipi          cod_st.cod_st%type := null;
   vn_vl_base_calc_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_ipi            imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_ipi     imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_ipi     imp_itemnf.vl_base_calc%type := 0;
   vn_ipi_nao_recup       number;
   vn_outro_ipi           number;
   vn_vl_imp_nao_dest_ipi number;
   vn_vl_fcp_icmsst       number;
   vn_aliq_fcp_icms       number;
   vn_vl_fcp_icms         number;
   --
   vn_aux_est             number(2);
   vv_tipogia_cod         varchar2(1) := null;
   vn_sigl_uf             varchar2(2) := null;
   vv_TipoPess            varchar2(2) := null;
   vv_dm_tp_pessoa        pessoa.dm_tipo_pessoa%type := null;
   vv_NFE_inscestDest     varchar2(9) := null;
   vv_NFE_CNPJ            varchar2(14) := null;
   vn_aliq_aux            number;
   --
   -- TP 00 - Cabecalho de GIA
   type tp_00 is record(
      contrib_InscEstad  varchar2(9),
      gia_anoref         varchar2(4),
      gia_mesiref        varchar2(2),
      gia_mesfref        varchar2(2),
      tipogia_cod        varchar2(1),
      gia_tiponum        varchar2(2),
      gia_tipogiasubsttt varchar2(1),
      gia_anoST          varchar2(4),
      gia_mesIST         varchar2(2),
      gia_mesFST         varchar2(2),
      gia_tipogiaST      varchar2(1),
      gia_formaEntrST    varchar2(1),
      gia_anomudanca     varchar2(4),
      gia_mesmudanca     varchar2(2),
      justif_codigo      varchar2(1)
      );
   --
   type t_tab_00 is table of tp_00 index by binary_integer;
   vt_tab_00 t_tab_00;
   --
   -- TP 01 - Operacoes Entrada e Saida
   type tp_01 is record(
      Contrib_InscEstad   varchar2(9),
      Gia_anoref          varchar2(4),
      Gia_mesiref         varchar2(2),
      Gia_mesfref         varchar2(2),
      Tipogia_cod         number(1),
      Gia_tiponum         number(2),
      Cfop_codigo         number(4),
      CargaTribLiquida    number(5),
      Uf_sigla            varchar2(2),
      Valorcontabil       number(15),
      BaseCalcIntegral    number(15),
      Imposto             number(15),
      IsentaNaoTribut     number(15),
      Outras              number(15),
      BaseCalcSubstTrib   number(15),
      ImpostoRetSubstTrib number(15)
      );
   --
   type t_tab_01 is table of tp_01 index by binary_integer;
   type t_bi_tab_01 is table of t_tab_01 index by binary_integer;
   type t_tri_tab_01 is table of t_bi_tab_01 index by binary_integer;
   vt_tab_01 t_tri_tab_01;
   --
   -- TP 02 - Apuracao de ICMS
   type tp_02 is record(
      Contrib_InscEstad      varchar2(9),
      Gia_anoref             varchar2(4),
      Gia_mesiref            varchar2(2),
      Gia_mesfref            varchar2(2),
      Tipogia_cod            number(1),
      Gia_tiponum            number(2),
      SaidPrestDebImpost     number(15),
      OutrosDeb              number(15),
      EstornoCredSaidBCeCP   number(15),
      EstornoCred            number(15),
      TotalDeb               number(15),
      EntrAquisCredImposto   number(15),
      SaldoCredorExAnterior  number(15),
      OutrosCred             number(15),
      EstornoDeb             number(15),
      TotalCred              number(15),
      SaldoDevedor           number(15),
      SaldoCredor            number(15),
      Deducoes               number(15),
      ImpostoRecolher        number(15),
      SaldoCredorTransportar number(15),
      SaldoCredorTransferir  number(15)
      );
   --
   type t_tab_02 is table of tp_02 index by binary_integer;
   vt_tab_02 t_tab_02;
   --
   -- TP 03 - Apuracao de ICMS Substituicao Tributaria
   type tp_03 is record(
      Contrib_InscEstad   varchar2(9),
      Gia_anoref          varchar2(4),
      Gia_mesiref         varchar2(2),
      Gia_mesfref         varchar2(2),
      Tipogia_cod         number(1),
      Gia_tiponum         number(2),
      BaseCalcSubsTrib    number(15),
      ICMSST              number(15),
      SaldoCredor_Ant     number(15),
      Devolucoes          number(15),
      ImpostoRecolher     number(15),
      SaldoCredorTransp   number(15),
      OutrosCred          number(15),
      BaseCalcSTTransp    number(15),
      ImpostoDevidoTransp number(15)
      );
   --
   type t_tab_03 is table of tp_03 index by binary_integer;
   vt_tab_03 t_tab_03;
   --
   -- TP 04 - Diferencial De Aliquotas
   type tp_04 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      AliquotaX          number(5),
      AliquotaY          number(5),
      BaseCalculoX       number(15),
      BaseCalculoY       number(15),
      ICMSApuradoX       number(15),
      ICMSApuradoY       number(15)
      );
   --
   type t_tab_04 is table of tp_04 index by binary_integer;
   vt_tab_04 t_tab_04;
   --
   -- TP 05 - Estoque
   type tp_05 is record(
      Contrib_InscEstad      varchar2(9),
      Gia_anoref             varchar2(4),
      Gia_mesiref            varchar2(2),
      Gia_mesfref            varchar2(2),
      Tipogia_cod            number(1),
      Gia_tiponum            number(2),
      Estq_inic_trib         number(13),
      Estq_inic_int          number(13),
      Estq_inic_outr         number(13),
      Estq_inic_strib        number(13),
      Estq_fim_trib          number(13),
      Estq_fim_int           number(13),
      Estq_fim_outr          number(13),
      Estq_fim_strib         number(13),
      Justif_estq_inic_trib  varchar2(30),
      Justif_estq_inic_int   varchar2(30),
      Justif_estq_inic_outr  varchar2(30),
      Justif_estq_inic_strib varchar2(30),
      Justif_estq_fim_trib   varchar2(30),
      Justif_estq_fim_int    varchar2(30),
      Justif_estq_fim_outr   varchar2(30),
      Justif_estq_fim_strib  varchar2(30),
      Desc_justif_inic_trib  varchar2(30),
      Desc_justif_inic_int   varchar2(30),
      Desc_justif_inic_outr  varchar2(30),
      Desc_justif_inic_strib varchar2(30),
      Desc_justif_fim_trib   varchar2(30),
      Desc_justif_fim_int    varchar2(30),
      Desc_justif_fim_outr   varchar2(30),
      Desc_justif_fim_strib  varchar2(30)
      );
   --
   type t_tab_05 is table of tp_05 index by binary_integer;
   vt_tab_05 t_tab_05;
   --
   -- TP 08 - Geração de Emprego
   type tp_08 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      Qtd_func           number(7),
      Desp_FolhaPagto    number(13),
      EncargosTrab       number(13)
      );
   --
   type t_tab_08 is table of tp_08 index by binary_integer;
   vt_tab_08 t_tab_08;
   --
   -- TP 09 - Balanço Patrimonial Ativo
   type tp_09 is record(
      Contrib_InscEstad      varchar2(9),
      Gia_anoref             varchar2(4),
      Gia_mesiref            varchar2(2),
      Gia_mesfref            varchar2(2),
      Tipogia_cod            number(1),
      Gia_tiponum            number(2),
      DataBalanco            varchar2(8),
      Circulante             number(15),
      Disponib_circ          number(15),
      ContasReceber_circ     number(15),
      EstoqueMercadoria_circ number(15),
      OutrosEstoques_circ    number(15),
      OutrasContasAivoCirc   number(15),
      RealizLongoPrazo       number(15),
      ContasReceber_lprazo   number(15),
      OutrasContasRealiz     number(15),
      Permanente             number(15),
      Investimentos          number(15),
      ImobilizadoLiquido     number(15),
      Diferido               number(15),
      TotalGeralAtivo        number(15)
      );
   --
   type t_tab_09 is table of tp_09 index by binary_integer;
   vt_tab_09 t_tab_09;
   --
   -- TP 10 - Balanco Patrimonial Passivo
   type tp_10 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      Circulante         number(15),
      Fornecedores       number(15),
      EmprestFinanc      number(15),
      OutContasAtivCirc  number(15),
      ExigLongPrazo      number(15),
      ResultadoExerFut   number(15),
      PatrimLiq          number(15),
      CapitalSocial      number(15),
      OutContasPatrLiq   number(15),
      TotGeralPassivo    number(15)
      );
   --
   type t_tab_10 is table of tp_10 index by binary_integer;
   vt_tab_10 t_tab_10;
   --
   -- TP 11 - Demostrativo do Resultado do Exercicio
   type tp_11 is record(
      Contrib_InscEstad      varchar2(9),
      Gia_anoref             varchar2(4),
      Gia_mesiref            varchar2(2),
      Gia_mesfref            varchar2(2),
      Tipogia_cod            number(1),
      Gia_tiponum            number(2),
      ReceitaBrutaVendaServ  number(13),
      DevolAbatImposto       number(13),
      ReceitaLiqVendaServ    number(13),
      CustoMercVend          number(13),
      LucroBruto             number(13),
      DespesasOper           number(13),
      LucroPrejOper          number(13),
      ReceitaNaoOper         number(13),
      DespesaNaoOper         number(13),
      SaldoCorrecMonet       number(13),
      ResultAntIR            number(13),
      ProvImpostoRenda       number(13),
      ResultAposIR           number(13),
      ParticContribuicao     number(13),
      LucroPrejuizo          number(13)
      );
   --
   type t_tab_11 is table of tp_11 index by binary_integer;
   vt_tab_11 t_tab_11;
   --
   -- TP 12 - TP 12 - Movimentação Financeira
   type tp_12 is record(
      Contrib_InscEstad      varchar2(9),
      Gia_anoref             varchar2(4),
      Gia_mesiref            varchar2(2),
      Gia_mesfref            varchar2(2),
      Tipogia_cod            number(1),
      Gia_tiponum            number(2),
      ReceitasServico        number(13),
      EmprestBancario        number(13),
      AumentoCapitalDin      number(13),
      ReceitasFinanc         number(13),
      OutrosIngressRec       number(13),
      TotIngrRecurso         number(13),
      ProLabore              number(13),
      ComissaoSalaOrden      number(13),
      EncargosSociais        number(13),
      HonorariosContab       number(13),
      CombustivelLubr        number(13),
      TribFederal            number(13),
      TribEstadual           number(13),
      TribMunicipal          number(13),
      AguaTelefone           number(13),
      Energia                number(13),
      AluguelCond            number(13),
      ServicoProfis          number(13),
      Seguro                 number(13),
      PagtosEmprestimo       number(13),
      DespesasBancarias      number(13),
      OutrasDespesasPagtos   number(13),
      TotalSaidaRecurso      number(13),
      SaldoCaixaInicio       number(13),
      SaldoCaixaFim          number(13),
      SaldoBancoInicio       number(13),
      SaldoBancoFim          number(13),
      FornecPagarInicio      number(13),
      FornecPagarFim         number(13),
      DuplicataRecInicio     number(13),
      DuplicataRecFim        number(13),
      DtInic                 varchar2(8),
      DtFim                  varchar2(8)
      );
   --
   type t_tab_12 is table of tp_12 index by binary_integer;
   vt_tab_12 t_tab_12;
   --
   -- TP 13 - Apuração de ICMS por Compensação
   type tp_13 is record(
      Contrib_InscEstad   varchar2(9),
      Gia_anoref          varchar2(4),
      Gia_mesiref         varchar2(2),
      Gia_mesfref         varchar2(2),
      Tipogia_cod         number(1),
      Gia_tiponum         number(2),
      Credito             number(15),
      SaldoCredPerAnt     number(15),
      SaldoCredProp       number(15),
      SaldoCredRecebTranf number(15),
      Debito              number(15),
      ImpostoRecProprio   number(15),
      ImpostoRecRecbTrans number(15),
      SaldoCredorTransp   number(15),
      ImpostoRec          number(15)
      );
   --
   type t_tab_13 is table of tp_13 index by binary_integer;
   vt_tab_13 t_tab_13;
   --
   -- TP 14 - Apuração do Saldo da Estimativa
   type tp_14 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      EstimMesInicio     number(2),
      EstimAnoRef        varchar2(4),
      EstimMesFim        varchar2(2),
      SomaImpRec         number(15),
      SomaEstimLanc      number(15),
      SomaEstimRecol     number(15),
      SaldoEstimTransp   number(15)
      );
   --
   type t_tab_14 is table of tp_14 index by binary_integer;
   vt_tab_14 t_tab_14;
   --
   -- TP 15 - ICMS Cobrado por Substituição Tributaria nas Operações Interestaduais
   type tp_15 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      TipoMovCod         varchar2(1),
      UfCod              varchar2(2),
      Petroleo           number(13),
      Energia            number(13),
      Outros             number(13)
      );
   --
   type t_tab_15 is table of tp_15 index by binary_integer;
   type t_bi_tab_15 is table of t_tab_15 index by binary_integer;
   type t_tri_tab_15 is table of t_bi_tab_15 index by binary_integer;
   vt_tab_15 t_tri_tab_15;
   --
   --
   -- TP 21  - Nota Fiscal de Entrada
   type tp_21 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      NFE_num            varchar2(8),
      NFE_serie          varchar2(3),
      NFE_seq            number(4),
      NFE_dt             varchar2(8),
      UF_cod             varchar2(2),
      NFE_inscestRem     varchar2(9),
      NFE_CNPJ           varchar2(14),
      NFE_total          number(13)
      );
   --
   type t_tab_21 is table of tp_21 index by binary_integer;
   vt_tab_21 t_tab_21;
   --
   --
   -- TP 22  - Nota Fiscal de Saida
   type tp_22 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      NFS_num            varchar2(8),
      NFS_serie          varchar2(3),
      NFS_dt             varchar2(8),
      UF_cod             varchar2(2),
      TipoPessCod        varchar2(2),
      NFE_inscestDest    varchar2(9),
      NFE_CNPJ           varchar2(14),
      NFE_total          number(13)
      );
   --
   type t_tab_22 is table of tp_22 index by binary_integer;
   vt_tab_22 t_tab_22;
   --
   -- TP 51  - Apuração ICMS - Outros Créditos
   type tp_51 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      Credito_cod        number(2),
      Valor              number(15)
      );
   --
   type t_tab_51 is table of tp_51 index by binary_integer;
   vt_tab_51 t_tab_51;
   --
   -- TP 52  - Apuração ICMS - Deduções
   type tp_52 is record(
      Contrib_InscEstad  varchar2(9),
      Gia_anoref         varchar2(4),
      Gia_mesiref        varchar2(2),
      Gia_mesfref        varchar2(2),
      Tipogia_cod        number(1),
      Gia_tiponum        number(2),
      Debito_cod         number(2),
      Valor              number(15),
      NumCertificado     varchar2(40)
      );
   --
   type t_tab_52 is table of tp_52 index by binary_integer;
   vt_tab_52 t_tab_52;
   --
   cursor c_det_cfop is
      select nf.id notafiscal_id,
             nf.dm_ind_oper, -- 0-entrada, 1-saida
             nf.dm_ind_emit, -- 0-emissão propria, 1-terceiros
             cod_mod,
             nf.pessoa_id,
             nf.dt_emiss,
             nf.nro_nf,
             nf.serie serie_nf,
             inf.id itemnf_id
        from nota_fiscal      nf
           , mod_fiscal       mf
           , item_nota_fiscal inf
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('01', '1B', '04', '55', '65')
         and inf.notafiscal_id  = nf.id
       order by 1, 2;
   --
   cursor c_det_cfop_ct is
      select ct.id          conhectransp_id
           , ct.dm_ind_emit
           , ct.dm_ind_oper
           , ct.pessoa_id
           , ct.dt_hr_emissao dt_emiss
           , ct.nro_ct
           , ct.serie
           , mf.cod_mod
           , r.id ctreganal_id
        from conhec_transp  ct
           , ct_reg_anal    r
           , mod_fiscal mf
       where ct.empresa_id      = gt_row_abertura_gia.empresa_id
         and ct.dm_st_proc      = 4
         and ct.dm_arm_cte_terc = 0
         and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and r.conhectransp_id  = ct.id
         and mf.id              = ct.modfiscal_id
       order by 1;
   --
   cursor c_det_cfop_sc is
      select nf.id       notafiscal_id
           , nf.dm_ind_emit
           , nf.dm_ind_oper
           , nf.pessoa_id
           , nf.dt_emiss
           , nf.nro_nf
           , nf.serie
           , mf.cod_mod
           , r.id nfregistanalit_id
        from nota_fiscal     nf
           , mod_fiscal      mf
           , nfregist_analit r
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_st_proc      = 4
         and nf.dm_arm_nfe_terc = 0
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('06', '29', '28', '21', '22')
         and r.notafiscal_id    = nf.id
       order by 1;
   --
   -- query cupom fiscal
   cursor c_det_cfop_ecf is
      select r.id      reducaozecf_id
           , r.dt_doc  dt_emiss
           , ramd.id   reganalmovdiaecf_id
           , r.num_coo_fin
        from equip_ecf             e
           , mod_fiscal            mf
           , reducao_z_ecf         r
           , reg_anal_mov_dia_ecf  ramd
       where e.empresa_id          = gt_row_abertura_gia.empresa_id
         and mf.id                 = e.modfiscal_id
         and r.equipecf_id         = e.id
         and r.dm_st_proc          = 1 -- Validada
         and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
         and ramd.reducaozecf_id   = r.id
       order by 1;
   --
   cursor c_apur_icms is
      select ai.*
        from apuracao_icms ai
       where ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and ai.dm_situacao       = 3 -- Processada
         and ai.dm_tipo           = 0 -- Real
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
       order by 1;
   --
   cursor c_apur_icmsst is
      select p.id
           , sum(ai.VL_SALDO_CRED_ANT_ST) VL_SALDO_CRED_ANT_ST
           , sum(ai.VL_DEVOL_ST) VL_DEVOL_ST
           , sum(ai.VL_RESSARC_ST) VL_RESSARC_ST
           , sum(ai.VL_OUTRO_CRED_ST) VL_OUTRO_CRED_ST
           , sum(ai.VL_AJ_CREDITO_ST) VL_AJ_CREDITO_ST
           , sum(ai.VL_RETENCAO_ST) VL_RETENCAO_ST
           , sum(ai.VL_OUT_DEB_ST) VL_OUT_DEB_ST
           , sum(ai.VL_AJUST_DEB_ST) VL_AJUST_DEB_ST
           , sum(ai.VL_SALDO_DEV_ANT_ST) VL_SALDO_DEV_ANT_ST
           , sum(ai.VL_DEDUCAO_ST) VL_DEDUCAO_ST
           , sum(ai.VL_ICMS_RECOL_ST) VL_ICMS_RECOL_ST
           , sum(ai.VL_SALDO_CRED_ST_TRANSP) VL_SALDO_CRED_ST_TRANSP
           , sum(ai.VL_DEB_ESP_ST) VL_DEB_ESP_ST
           , sum(ai.VL_BASE_CALC_ICMS_ST) VL_BASE_CALC_ICMS_ST
        from per_apur_icms_st p,
             apuracao_icms_st ai
       where p.empresa_id        = gt_row_abertura_gia.empresa_id
         and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
         and p.dm_tipo           = 0 -- Real
         and ai.perapuricmsst_id = p.id
         and ai.dm_situacao      = 3 -- Processada
       group by p.id;
   --
   cursor c_ajust_icms is
      select aaig.id
           , s.cd      codsubitem
           , aaig.vl_aj_apur
        from apuracao_icms ai
           , ajust_apuracao_icms aai
           , ajust_apur_icms_gia aaig
           , subitem_gia s
       where ai.empresa_id             = gt_row_abertura_gia.empresa_id
         and ai.dm_situacao            = 3 -- Processada
         and ai.dm_tipo                = 0 -- Real
         and trunc(ai.dt_inicio)      >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)         <= gt_row_abertura_gia.dt_fin
         and aai.apuracaoicms_id       = ai.id
         and aaig.ajustapuracaoicms_id = aai.id
         and s.id                      = aaig.subitemgia_id
       order by 1;
   --
   -- Limpar os vetores
   procedure pkb_limpa_vetor_ms is
   --
   begin
      --
      vt_tab_00.delete;
      vt_tab_01.delete;
      vt_tab_02.delete;
      vt_tab_03.delete;
      vt_tab_04.delete;
      vt_tab_05.delete;
      vt_tab_08.delete;
      vt_tab_09.delete;
      vt_tab_10.delete;
      vt_tab_11.delete;
      vt_tab_12.delete;
      vt_tab_13.delete;
      vt_tab_14.delete;
      vt_tab_15.delete;
      vt_tab_21.delete;
      vt_tab_22.delete;
      vt_tab_51.delete;
      vt_tab_52.delete;
      --
   end pkb_limpa_vetor_ms;
   --
   -- procedimento monta a estrutura do arquivo da GIA-MS
   --
   procedure pkb_monta_estr_arq_gia_ms is
      --
      vn_fase_arq    number := 0;
      vn_qtde_tab01  number := 0;
      vn_qtde_tab15  number := 0;
      --
   begin
      --
      vn_fase_arq := 1;
      -- TP 00 - Cabecalho do arquivo
      if nvl(vt_tab_00.count, 0) > 0 then
         --
         vn_fase_arq := 1.1;
         --
         i := nvl(vt_tab_00.first, 0);
         --
         loop
            --
            vn_fase_arq := 1.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 1.3;
            --
            gl_conteudo := rpad(vt_tab_00(i).contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_00(i).tipogia_cod, 1, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_00(i).gia_tiponum, 2, '00');
            --
            if trim(vt_tab_00(i).gia_tipogiasubsttt) is not null then
               gl_conteudo := gl_conteudo || lpad(vt_tab_00(i).gia_tipogiasubsttt, 1, ' ');
            else
               gl_conteudo := gl_conteudo || '0';
            end if;
            --
            if trim(vt_tab_00(i).gia_anoST) is not null then
               gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_anoST, 4, ' ');
            else
               gl_conteudo := gl_conteudo || '    ';
            end if;
            --
            if trim(vt_tab_00(i).gia_mesIST) is not null then
               gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_mesIST, 2, ' ');
            else
               gl_conteudo := gl_conteudo || '  ';
            end if;
            --
            if trim(vt_tab_00(i).gia_mesFST) is not null then
               gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_mesFST, 2, ' ');
            else
               gl_conteudo := gl_conteudo || '  ';
            end if;
            --
            if trim(vt_tab_00(i).gia_tipogiaST) is not null then
               gl_conteudo := gl_conteudo || lpad(vt_tab_00(i).gia_tipogiaST, 1, ' ');
            else
               gl_conteudo := gl_conteudo || '0';
            end if;
            --
            if trim(vt_tab_00(i).gia_formaEntrST) is not null then
               gl_conteudo := gl_conteudo || lpad(vt_tab_00(i).gia_formaEntrST, 1, ' ');
            else
               gl_conteudo := gl_conteudo || '0';
            end if;
            --
            if trim(vt_tab_00(i).gia_anomudanca) is not null then
               gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_anomudanca, 4, ' ');
            else
               gl_conteudo := gl_conteudo || '    ';
            end if;
            --
            if trim(vt_tab_00(i).gia_mesmudanca) is not null then
               gl_conteudo := gl_conteudo || rpad(vt_tab_00(i).gia_mesmudanca, 2, ' ');
            else
               gl_conteudo := gl_conteudo || '  ';
            end if;
            --
            if trim(vt_tab_00(i).justif_codigo) is not null then
               gl_conteudo := gl_conteudo || lpad(vt_tab_00(i).justif_codigo, 1, ' ');
            else
               gl_conteudo := gl_conteudo || '0';
            end if;
            --
            vn_fase_arq := 1.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '00',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 1.5;
            --
            if i = vt_tab_00.last then
               exit;
            else
               i := vt_tab_00.next(i);
            end if;
            --
         end loop;
         --
      end if; -- Cabecalho do gia
      --
      vn_fase_arq := 2;
      -- TP 01 - Operacoes Entrada e Saida
      if nvl(vt_tab_01.count, 0) > 0 then
         --
         vn_fase_arq := 2.1;
         --
         i := nvl(vt_tab_01.first,0);
         --
         loop
            --
            vn_fase_arq := 2.2;
            --
            if nvl(i,-1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 2.3;
            -- conta o j
            begin
               vn_qtde_tab01 := vt_tab_01(i).count;
            exception
               when others then
                  vn_qtde_tab01 := 0;
            end;
            --
            vn_fase_arq := 2.4;
            --
            if nvl(vn_qtde_tab01,0) > 0 then
               --
               vn_fase_arq := 2.5;
               --
               j := vt_tab_01(i).first;
               --
               vn_fase_arq := 2.6;
               --
               loop
                  --
                  vn_fase_arq := 2.7;
                  --
                  if nvl(j,-1) = -1 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 2.8;
                  -- conta k
                  begin
                     vn_qtde_tab01 := vt_tab_01(i)(j).count;
                  exception
                     when others then
                        vn_qtde_tab01 := 0;
                  end;
                  --
                  vn_fase_arq := 2.9;
                  --
                  if nvl(vn_qtde_tab01,0) > 0 then
                     --
                     vn_fase_arq := 2.10;
                     --
                     k := vt_tab_01(i)(j).first;
                     --
                     vn_fase_arq := 2.11;
                     --
                     loop
                        --
                        vn_fase_arq := 2.12;
                        --
                        if nvl(k,-1) = -1 then
                           exit;
                        end if;
                        --
                        vn_fase_arq := 2.13;
                        --
                        gl_conteudo := rpad(vt_tab_01(i)(j)(k).contrib_InscEstad,9,' ');
                        gl_conteudo := gl_conteudo || rpad(vt_tab_01(i)(j)(k).gia_anoref, 4, ' ');
                        gl_conteudo := gl_conteudo || rpad(vt_tab_01(i)(j)(k).gia_mesiref, 2, ' ');
                        gl_conteudo := gl_conteudo || rpad(vt_tab_01(i)(j)(k).gia_mesfref, 2, ' ');
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).tipogia_cod, 1, 0);
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).gia_tiponum, 2, 0);
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).Cfop_codigo,4, 0);
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).CargaTribLiquida,5, 0);
                        gl_conteudo := gl_conteudo || rpad(vt_tab_01(i)(j)(k).Uf_sigla,2, ' ' );
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).Valorcontabil,15, 0);
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).BaseCalcIntegral,15, 0);
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).Imposto,15, 0);
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).IsentaNaoTribut,15, 0);
                        --
                        if nvl(vt_tab_01(i)(j)(k).Outras,0) < 0 then
                           gl_conteudo := gl_conteudo || '-' || lpad(vt_tab_01(i)(j)(k).Outras * -1,14, 0);
                        else
                           gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).Outras,15, 0);
                        end if;
                        --
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).BaseCalcSubstTrib,15, 0);
                        gl_conteudo := gl_conteudo || lpad(vt_tab_01(i)(j)(k).ImpostoRetSubstTrib,15, 0);
                        --
                        vn_fase_arq := 2.14;
                        --
                        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                               ev_registrogia_cd => '01',
                                               el_conteudo       => gl_conteudo);
                        --
                        vn_fase_arq := 2.15;
                        --
                        if k = vt_tab_01(i)(j).last then
                           exit;
                        else
                           k := vt_tab_01(i)(j).next(k);
                        end if;
                        --
                     end loop;
                     --
                  end if;
                  --
                  vn_fase_arq := 2.16;
                  -- encerra j
                  if j = vt_tab_01(i).last then
                     exit;
                  else
                     j := vt_tab_01(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 2.17;
            -- encerra o i
            if i = vt_tab_01.last then
               exit;
            else
               i := vt_tab_01.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 01 - Operacoes Entrada e Saida
      --
      vn_fase_arq := 3;
      -- TP 02 - Apuracao de ICMS
      if nvl(vt_tab_02.count, 0) > 0 then
         --
         vn_fase_arq := 3.1;
         --
         i := nvl(vt_tab_02.first, 0);
         --
         loop
            --
            vn_fase_arq := 3.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 3.3;
            --
            gl_conteudo := rpad(vt_tab_02(i).contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_02(i).gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_02(i).gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_02(i).gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).tipogia_cod, 1, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).gia_tiponum, 2, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).SaidPrestDebImpost , 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).OutrosDeb, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).EstornoCredSaidBCeCP, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).EstornoCred, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).TotalDeb, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).EntrAquisCredImposto, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).SaldoCredorExAnterior, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).OutrosCred, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).EstornoDeb, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).TotalCred, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).SaldoDevedor, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).SaldoCredor, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).Deducoes, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).ImpostoRecolher, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).SaldoCredorTransportar, 15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_02(i).SaldoCredorTransferir, 15, 0);
            --
            vn_fase_arq := 3.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '02',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 3.5;
            --
            if i = vt_tab_02.last then
               exit;
            else
               i := vt_tab_02.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 02 - Apuracao de ICMS
      --
      vn_fase_arq := 4;
      -- TP 03 - Apuracao de ICMS Substituicao Tributaria
      if nvl(vt_tab_03.count, 0) > 0 then
         --
         vn_fase_arq := 4.1;
         --
         i := nvl(vt_tab_03.first, 0);
         --
         loop
            --
            vn_fase_arq := 4.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 4.3;
            --
            gl_conteudo := rpad(vt_tab_03(i).contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_03(i).gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_03(i).gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_03(i).gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).tipogia_cod, 1, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).gia_tiponum, 2, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).BaseCalcSubsTrib,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).ICMSST,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).SaldoCredor_Ant,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).Devolucoes,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).ImpostoRecolher,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).SaldoCredorTransp,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).OutrosCred,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).BaseCalcSTTransp,15, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_03(i).ImpostoDevidoTransp,15, 0);
            --
            vn_fase_arq := 4.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '03',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 4.5;
            --
            if i = vt_tab_03.last then
               exit;
            else
               i := vt_tab_03.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 03 - Apuracao de ICMS Substituicao Tributaria
      --
      vn_fase_arq := 5;
      --
      -- TP 08 - Geração de Emprego
      --
      if nvl(vt_tab_08.count, 0) > 0 then
         --
         vn_fase_arq := 5.1;
         --
         i := nvl(vt_tab_08.first, 0);
         --
         loop
            --
            vn_fase_arq := 5.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 5.3;
            --
            gl_conteudo := rpad(vt_tab_08(i).Contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_08(i).Gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_08(i).Gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_08(i).Gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_08(i).Tipogia_cod, 1, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_08(i).Gia_tiponum, 2, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_08(i).Qtd_func,7,0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_08(i).Desp_FolhaPagto,13,0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_08(i).EncargosTrab,13,0);
            --
            vn_fase_arq := 5.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '08',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 5.5;
            --
            if i = vt_tab_08.last then
               exit;
            else
               i := vt_tab_08.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 08 - Gerac?o de Emprego
      --
      vn_fase_arq := 6;
      --
      -- TP 15 - ICMS Cobrado por Substituic?o Tributaria nas Operac?es Interestaduais
      --
      if nvl(vt_tab_15.count, 0) > 0 then
         --
         vn_fase_arq := 6.1;
         --
         begin
            vn_qtde_tab15 := vt_tab_15(i) (j).count;
         exception
            when others then
               vn_qtde_tab15 := 0;
         end;
         --
         vn_fase_arq := 6.2;
         --
         if nvl(vn_qtde_tab15, 0) > 0 then
            --
            k := vt_tab_15(i) (j).first;
            --
            vn_fase_arq := 6.3;
            --
            loop
               --
               if nvl(k, -1) = -1 then
                  exit;
               end if;
               --
               vn_fase_arq := 6.4;
               --
               gl_conteudo := rpad(vt_tab_15(i)(j)(k).Contrib_InscEstad,9,' ');
               gl_conteudo := gl_conteudo || rpad(vt_tab_15(i)(j)(k).Gia_anoref, 4, ' ');
               gl_conteudo := gl_conteudo || rpad(vt_tab_15(i)(j)(k).Gia_mesiref, 2, ' ');
               gl_conteudo := gl_conteudo || rpad(vt_tab_15(i)(j)(k).Gia_mesfref, 2, ' ');
               gl_conteudo := gl_conteudo || lpad(vt_tab_15(i)(j)(k).Tipogia_cod, 1, 0);
               gl_conteudo := gl_conteudo || lpad(vt_tab_15(i)(j)(k).Gia_tiponum, 2, 0);
               gl_conteudo := gl_conteudo || rpad(vt_tab_15(i)(j)(k).TipoMovCod, 1, ' ');
               gl_conteudo := gl_conteudo || rpad(vt_tab_15(i)(j)(k).UfCod,2, ' ');
               gl_conteudo := gl_conteudo || rpad(vt_tab_15(i)(j)(k).Petroleo,13,0);
               gl_conteudo := gl_conteudo || lpad(vt_tab_15(i)(j)(k).Energia,13,0);
               gl_conteudo := gl_conteudo || lpad(vt_tab_15(i)(j)(k).Outros,13,0);
               --
               vn_fase_arq := 6.5;
               --
               pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                      ev_registrogia_cd => '15',
                                      el_conteudo       => gl_conteudo);
               --
               vn_fase_arq := 6.6;
               --
               if k = vt_tab_15(i) (j).last then
                  exit;
               else
                  k := vt_tab_15(i) (j).next(k);
               end if;
               --
            end loop;
            --
         end if;
         --
      end if; -- TP 15 - ICMS Cobrado por Substituic?o Tributaria nas Operac?es Interestaduais
      --
      vn_fase_arq := 7;
      --
      -- TP 21  - Nota Fiscal de Entrada
      --
      if nvl(vt_tab_21.count, 0) > 0 then
         --
         vn_fase_arq := 7.1;
         --
         i := nvl(vt_tab_21.first, 0);
         --
         loop
            --
            vn_fase_arq := 7.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 7.3;
            --
            gl_conteudo := rpad(vt_tab_21(i).Contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).Gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).Gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).Gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_21(i).Tipogia_cod, 1, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_21(i).Gia_tiponum, 2, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).NFE_num, 8, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).NFE_serie, 3, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_21(i).NFE_seq, 4,0);
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).NFE_dt, 8, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).UF_cod, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).NFE_inscestRem,9, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_21(i).NFE_CNPJ, 14, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_21(i).NFE_total, 13, '0');
            --
            vn_fase_arq := 7.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '21',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 7.5;
            --
            if i = vt_tab_21.last then
               exit;
            else
               i := vt_tab_21.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 21  - Nota Fiscal de Entrada
      --
      vn_fase_arq := 8;
      --
      -- TP 22  - Nota Fiscal de Saida
      --
      if nvl(vt_tab_22.count, 0) > 0 then
         --
         vn_fase_arq := 8.1;
         --
         i := nvl(vt_tab_22.first, 0);
         --
         loop
            --
            vn_fase_arq := 8.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 8.3;
            --
            gl_conteudo := rpad(vt_tab_22(i).Contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).Gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_22(i).Tipogia_cod, 1, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_22(i).Gia_tiponum, 2, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).NFS_num, 8, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).NFS_serie, 3, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_22(i).NFS_dt, 8, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).UF_cod, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).TipoPessCod, 2,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).NFE_inscestDest, 9, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_22(i).NFE_CNPJ, 14, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_22(i).NFE_total, 13, '0');
            --
            vn_fase_arq := 8.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '22',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 8.5;
            --
            if i = vt_tab_22.last then
               exit;
            else
               i := vt_tab_22.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 22  - Nota Fiscal de Saida
      --
      vn_fase_arq := 9;
      --
      -- TP 51  - Apurac?o ICMS - Outros Creditos
      --
      if nvl(vt_tab_51.count, 0) > 0 then
         --
         vn_fase_arq := 9.1;
         --
         i := nvl(vt_tab_51.first, 0);
         --
         loop
            --
            vn_fase_arq := 9.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 9.3;
            --
            gl_conteudo := rpad(vt_tab_51(i).Contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_51(i).Gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_51(i).Gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_51(i).Gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_51(i).Tipogia_cod, 1, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_51(i).Gia_tiponum, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_51(i).Credito_cod, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_51(i).Valor, 15, '0');
            --
            vn_fase_arq := 9.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '51',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 9.5;
            --
            if i = vt_tab_51.last then
               exit;
            else
               i := vt_tab_51.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 51 - Apuração ICMS - Outros Créditos
      --
      vn_fase_arq := 10;
      --
      -- TP 52  - Apuração ICMS - Deduções
      --
      if nvl(vt_tab_52.count, 0) > 0 then
         --
         vn_fase_arq := 10.1;
         --
         i := nvl(vt_tab_52.first, 0);
         --
         loop
            --
            vn_fase_arq := 10.2;
            --
            if nvl(i, -1) = -1 then
               exit;
            end if;
            --
            vn_fase_arq := 10.3;
            --
            gl_conteudo := rpad(vt_tab_52(i).Contrib_InscEstad,9,' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_52(i).Gia_anoref, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_52(i).Gia_mesiref, 2, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_52(i).Gia_mesfref, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_52(i).Tipogia_cod, 1, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_52(i).Gia_tiponum, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_52(i).Debito_cod, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_52(i).Valor, 15, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_52(i).NumCertificado,40,' ');
            --
            vn_fase_arq := 10.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '52',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 10.5;
            --
            if i = vt_tab_52.last then
               exit;
            else
               i := vt_tab_52.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP 52 - Apuração ICMS - Deduções
      --
      vn_fase_arq := 11;
      --
      -- Final da montagem das linhas do arquivo texto
      --
      pkb_limpa_vetor_ms;
      --
   exception
      when others then
         raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_ms fase_arq ('||vn_fase_arq||'): '||sqlerrm);
   end pkb_monta_estr_arq_gia_ms;
   --
   -- Inicio PROCEDURE PRINCIPAL MATO GROSSO DO SUL
   --
begin
   --
   vn_fase := 1;
   --
   gv_tipocodarq_cd := '6';
   --
   pkb_limpa_vetor_ms;
   --
   vn_fase := 2;
   --
   -- Registro Tipo 1 - Cabeçalho do arquivo
   --
   vt_tab_00(1).contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
   -- Ver se Gia e mensal ou anual
   vt_tab_00(1).gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
   vt_tab_00(1).gia_mesiref       := '00'; -- A = mes inicial -  M = 00
   vt_tab_00(1).gia_mesfref       := to_char(gt_row_abertura_gia.dt_fin,'MM'); -- A = mes final  - M = 00
   --
   vn_fase := 2.1;
   --
   if gt_row_abertura_gia.dm_tipo_gia = '01' then -- Normal
      vv_tipogia_cod := '1';
   elsif gt_row_abertura_gia.dm_tipo_gia = '02' then -- Substitutiva
         vv_tipogia_cod := '3';
   end if;
   --
   vn_fase := 2.2;
   --
   vt_tab_00(1).tipogia_cod  := vv_tipogia_cod;
   vt_tab_00(1).gia_tiponum  := '00';
   --
   if gt_row_abertura_gia.dm_tipo_gia = '02' then -- Substitutiva/Retificadora
      vt_tab_00(1).gia_tipogiasubsttt := '1'; -- 1-Normal, 2-Encerramento, 3-Retificadora, 4-Sem Novimento
      vt_tab_00(1).gia_anoST          := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
      vt_tab_00(1).gia_mesIST         := '00';
      vt_tab_00(1).gia_mesFST         := to_char(gt_row_abertura_gia.dt_fin,'MM');
      vt_tab_00(1).gia_tipogiaST      := '1'; -- 1-Normal, 2-Encerramento, 3-Retificadora, 4-Sem Novimento
      vt_tab_00(1).gia_formaEntrST    := '1'; -- 1-Mensal, 2-Anual
   else
      vt_tab_00(1).gia_tipogiasubsttt := ' '; -- 1-Normal, 2-Encerramento, 3-Retificadora, 4-Sem Novimento
      vt_tab_00(1).gia_anoST          := ' ';
      vt_tab_00(1).gia_mesIST         := ' ';
      vt_tab_00(1).gia_mesFST         := ' ';
      vt_tab_00(1).gia_tipogiaST      := ' ';
      vt_tab_00(1).gia_formaEntrST    := ' '; -- 1-Mensal, 2-Anual
   end if;
   --
   vt_tab_00(1).gia_anomudanca  := lpad(' ',4,' ');
   vt_tab_00(1).gia_mesmudanca  := lpad(' ',2,' ');
   vt_tab_00(1).justif_codigo   := ' '; -- 1-Reativacao de Atividades, 2-Inicio de Atividade apos periodo, 3-Mudanca na forma de entrega
   --
   vn_fase := 3;
   -- Registro TP 01 - Entrada e Saida
   for rec in c_det_cfop loop
      exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
      --
      vn_fase := 3.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      vn_vl_fcp_icmsst       := 0;
      vn_aliq_fcp_icms       := 0;
      vn_vl_fcp_icms         := 0;
      --
      vn_fase := 3.2;
      --
      pk_csf_api.pkb_vlr_fiscal_item_nf( en_itemnf_id           => rec.itemnf_id
                                       , sn_cfop                => vn_cfop
                                       , sn_vl_operacao         => vn_vl_contabil
                                       , sv_cod_st_icms         => vv_cod_st_icms
                                       , sn_vl_base_calc_icms   => vn_vl_base_calc_icms
                                       , sn_aliq_icms           => vn_aliq_icms
                                       , sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms
                                       , sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst
                                       , sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst
                                       , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                       , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                       , sv_cod_st_ipi          => vv_cod_st_ipi -- não utilizado
                                       , sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi -- não utilizado
                                       , sn_aliq_ipi            => vn_aliq_ipi -- não utilizado
                                       , sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi -- não utilizado
                                       , sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi -- não utilizado
                                       , sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi -- não utilizado
                                       , sn_ipi_nao_recup       => vn_ipi_nao_recup -- não utilizado
                                       , sn_outro_ipi           => vn_outro_ipi -- não utilizado
                                       , sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi
                                       , sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst
                                       , sn_aliq_fcp_icms       => vn_aliq_fcp_icms
                                       , sn_vl_fcp_icms         => vn_vl_fcp_icms
                                       );
      --
      vn_fase := 3.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         begin
            select est.sigla_estado sigl, est.id
              into vn_sigl_uf, vn_aux_est
              from pessoa p
                 , cidade cid
                 , estado est
             where p.id   = rec.pessoa_id
               and cid.id = p.cidade_id
               and est.id = cid.estado_id;
         exception
            when others then
               vn_sigl_uf := ' ';
               vn_aux_est := 1;
         end;
         --
         vn_fase := 3.4;
         vn_aliq_aux := nvl(vn_aliq_icms,0) * 100;
         --
         begin
            vb_achou := vt_tab_01(vn_aux_est)(vn_cfop).exists(vn_aliq_aux);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 3.5;
         --
         if not vb_achou then
            --
            vn_fase := 3.6;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual -- Inscrição Estadual
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Tipogia_cod       := vv_tipogia_cod;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_tiponum       := 01;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Cfop_codigo       := vn_cfop;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).CargaTribLiquida  := nvl(vn_aliq_icms,0) * 100;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Uf_sigla          := vn_sigl_uf;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := (nvl(vn_vl_bc_outra_icms,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := (nvl(vn_vl_base_calc_icmsst,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := round(nvl(vn_vl_imp_trib_icmsst,0) * 100,2);
            --
         else
            --
            vn_fase := 3.7;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto + (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib + (nvl(vn_vl_base_calc_icmsst,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
         vn_fase := 3.8;
         --
         if nvl(vn_vl_imp_trib_icmsst,0) > 0 then
            --
            vn_fase := 3.9;
            --
            -- TP 15 - ICMS Cobrado por Substituição Tributaria nas Operações Interestaduais - Entrada
            begin
               vb_achou := vt_tab_15(1)(rec.dm_ind_oper).exists(vn_aux_est);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 3.10;
            --
            if not vb_achou then
               --
               vn_fase := 3.11;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Tipogia_cod       := vv_tipogia_cod;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_tiponum       := '15';
               --
               if rec.dm_ind_oper = 0 then
                  vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).TipoMovCod     := 'E'; -- E - Entrada / S - Saida
               else
                  vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).TipoMovCod     := 'S'; -- E - Entrada / S - Saida
               end if;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).UfCod             := vn_sigl_uf;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros            := nvl(vn_vl_imp_trib_icmsst,0)*100;
               --
            else
               --
               vn_fase := 3.12;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros            := nvl(vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros,0) + (nvl(vn_vl_imp_trib_icmsst,0)*100);
               --
            end if;
            --
         end if;
         --
         vn_fase := 3.13;
         -- TP 21  - Nota Fiscal de Entrada
         if rec.dm_ind_oper = 0 then
            --
            vn_fase := 3.14;
            --
            vt_tab_21(rec.notafiscal_id).Contrib_InscEstad  := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
            vt_tab_21(rec.notafiscal_id).Gia_anoref         := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_21(rec.notafiscal_id).Gia_mesiref        := '00'; -- A = mes inicial -  M = 00
            vt_tab_21(rec.notafiscal_id).Gia_mesfref        := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_21(rec.notafiscal_id).Tipogia_cod        := vv_tipogia_cod;
            vt_tab_21(rec.notafiscal_id).Gia_tiponum        := '21';
            vt_tab_21(rec.notafiscal_id).NFE_num            := rec.nro_nf;
            vt_tab_21(rec.notafiscal_id).NFE_serie          := rec.serie_nf;
            vt_tab_21(rec.notafiscal_id).NFE_seq            := 1;
            vt_tab_21(rec.notafiscal_id).NFE_dt             := to_char(rec.dt_emiss,'rrrrmmdd');
            vt_tab_21(rec.notafiscal_id).UF_cod             := vn_sigl_uf;
            --
            vn_fase := 3.15;
            --
            if vn_sigl_uf = 'MS' then
               vt_tab_21(rec.notafiscal_id).NFE_inscestRem   := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
               vt_tab_21(rec.notafiscal_id).NFE_CNPJ         := ' ';
            else
               vt_tab_21(rec.notafiscal_id).NFE_inscestRem   := ' ';
               vt_tab_21(rec.notafiscal_id).NFE_CNPJ         := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
            end if;
            --
            vt_tab_21(rec.notafiscal_id).NFE_total          := nvl(vn_vl_contabil,0)*100;
            --
         else
            --
            vn_fase := 3.16;
            -- TP 22  - Nota Fiscal de Saida
            vt_tab_22(rec.notafiscal_id).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
            vt_tab_22(rec.notafiscal_id).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_22(rec.notafiscal_id).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
            vt_tab_22(rec.notafiscal_id).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_22(rec.notafiscal_id).Tipogia_cod       := vv_tipogia_cod;
            vt_tab_22(rec.notafiscal_id).Gia_tiponum       := '22';
            vt_tab_22(rec.notafiscal_id).NFS_num           := rec.nro_nf;
            vt_tab_22(rec.notafiscal_id).NFS_serie         := rec.serie_nf;
            vt_tab_22(rec.notafiscal_id).NFS_dt            := to_char(rec.dt_emiss,'rrrrmmdd');
            vt_tab_22(rec.notafiscal_id).UF_cod            := vn_sigl_uf;
            --
            vn_fase := 3.17;
            --
            begin
               select k.dm_tipo_pessoa
                 into vv_dm_tp_pessoa
                 from pessoa k
                where id = rec.pessoa_id;
            exception
               when others then
                  vv_dm_tp_pessoa := null;
            end;
            --
            vn_fase := 3.18;
            --
            if vv_dm_tp_pessoa = 0 then
               vv_TipoPess := 'PF'; -- fisica
               vv_NFE_inscestDest := ' ';
               vv_NFE_CNPJ := ' ';
            elsif vv_dm_tp_pessoa = 1 then
                  vv_TipoPess := 'CI';  -- juridica
                  if vn_sigl_uf = 'MS' then
                     vv_NFE_inscestDest := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => rec.pessoa_id),1,9),0),9,0); -- Inscrição Estadual
                     vv_NFE_CNPJ := ' ';
                  else
                     vv_NFE_inscestDest := ' ';
                     vv_NFE_CNPJ := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
                  end if;
            end if;
            --
            vn_fase := 3.19;
            --
            vt_tab_22(rec.notafiscal_id).TipoPessCod        := vv_TipoPess;
            vt_tab_22(rec.notafiscal_id).NFE_inscestDest    := vv_NFE_inscestDest;
            vt_tab_22(rec.notafiscal_id).NFE_CNPJ           := vv_NFE_CNPJ;
            vt_tab_22(rec.notafiscal_id).NFE_total          := nvl(vn_vl_contabil,0)*100;
            --
         end if;
         --
      end if;
      --
   end loop;
   --
   vn_fase := 4;
   -- COnhecimento de Transporte
   -- Registro TP 01 - Entrada e Saida
   for rec in c_det_cfop_ct loop
      exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
      --
      vn_fase := 4.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 4.2;
      -- recupera os valores de impostos
      pk_csf_ct.pkb_vlr_fiscal_ct ( en_ctreganal_id        => rec.ctreganal_id
                                             , sv_cod_st_icms         => vv_cod_st_icms
                                             , sn_cfop                => vn_cfop
                                             , sn_aliq_icms           => vn_aliq_icms
                                             , sn_vl_opr              => vn_vl_contabil
                                             , sn_vl_bc_icms          => vn_vl_base_calc_icms
                                             , sn_vl_icms             => vn_vl_imp_trib_icms
                                             , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                             , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                             );
      --
      vn_fase := 4.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         begin
            select est.sigla_estado sigl, est.id
              into vn_sigl_uf, vn_aux_est
              from pessoa p
                 , cidade cid
                 , estado est
             where p.id   = rec.pessoa_id
               and cid.id = p.cidade_id
               and est.id = cid.estado_id;
         exception
            when others then
               vn_sigl_uf   := ' ';
               vn_aux_est   := 1;
         end;
         --
         vn_fase := 4.4;
         vn_aliq_aux := nvl(vn_aliq_icms,0) * 100;
         --
         begin
            vb_achou := vt_tab_01(vn_aux_est)(vn_cfop).exists(vn_aliq_aux);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 4.5;
         --
         if not vb_achou then
            --
            vn_fase := 4.6;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual -- Inscrição Estadual
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Tipogia_cod       := vv_tipogia_cod;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_tiponum       := 01;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Cfop_codigo       := vn_cfop;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).CargaTribLiquida  := nvl(vn_aliq_icms,0) * 100;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Uf_sigla          := vn_sigl_uf;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := (nvl(vn_vl_bc_outra_icms,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := (nvl(vn_vl_base_calc_icmsst,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := round(nvl(vn_vl_imp_trib_icmsst,0) * 100,2);
            --
         else
            --
            vn_fase := 4.7;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto + (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib + (nvl(vn_vl_base_calc_icmsst,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
         vn_fase := 4.8;
         --
         if nvl(vn_vl_imp_trib_icmsst,0) > 0 then
            --
            vn_fase := 4.9;
            -- TP 15 - ICMS Cobrado por Substituição Tributaria nas Operações Interestaduais - Entrada
            begin
               vb_achou := vt_tab_15(1)(rec.dm_ind_oper).exists(vn_aux_est);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 4.10;
            --
            if not vb_achou then
               --
               vn_fase := 4.11;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Tipogia_cod       := vv_tipogia_cod;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_tiponum       := '15';
               --
               if rec.dm_ind_oper = 0 then
                  vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).TipoMovCod     := 'E'; -- E - Entrada / S - Saida
               else
                  vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).TipoMovCod     := 'S'; -- E - Entrada / S - Saida
               end if;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).UfCod             := vn_sigl_uf;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros            := nvl(vn_vl_imp_trib_icmsst,0)*100;
               --
            else
               --
               vn_fase := 4.12;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros            := nvl(vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros,0) + (nvl(vn_vl_imp_trib_icmsst,0)*100);
            end if;
            --
         end if;
         --
         vn_fase := 4.13;
         -- TP 21  - Nota Fiscal de Entrada
         if rec.dm_ind_oper = 0 then
            --
            vn_fase := 4.14;
            --
            vt_tab_21(rec.conhectransp_id).Contrib_InscEstad  := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
            vt_tab_21(rec.conhectransp_id).Gia_anoref         := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_21(rec.conhectransp_id).Gia_mesiref        := '00'; -- A = mes inicial -  M = 00
            vt_tab_21(rec.conhectransp_id).Gia_mesfref        := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_21(rec.conhectransp_id).Tipogia_cod        := vv_tipogia_cod;
            vt_tab_21(rec.conhectransp_id).Gia_tiponum        := '21';
            vt_tab_21(rec.conhectransp_id).NFE_num            := rec.nro_ct;
            vt_tab_21(rec.conhectransp_id).NFE_serie          := rec.serie;
            vt_tab_21(rec.conhectransp_id).NFE_seq            := 1;
            vt_tab_21(rec.conhectransp_id).NFE_dt             := to_char(rec.dt_emiss,'rrrrmmdd');
            vt_tab_21(rec.conhectransp_id).UF_cod             := vn_sigl_uf;
            --
            vn_fase := 4.15;
            --
            if vn_sigl_uf = 'MS' then
               vt_tab_21(rec.conhectransp_id).NFE_inscestRem   := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
               vt_tab_21(rec.conhectransp_id).NFE_CNPJ         := ' ';
            else
               vt_tab_21(rec.conhectransp_id).NFE_inscestRem   := ' ';
               vt_tab_21(rec.conhectransp_id).NFE_CNPJ         := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
            end if;
            --
            vt_tab_21(rec.conhectransp_id).NFE_total          := nvl(vn_vl_contabil,0)*100;
            --
         else
            -- TP 22  - Nota Fiscal de Saida
            vn_fase := 4.16;
            --
            vt_tab_22(rec.conhectransp_id).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
            vt_tab_22(rec.conhectransp_id).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_22(rec.conhectransp_id).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
            vt_tab_22(rec.conhectransp_id).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_22(rec.conhectransp_id).Tipogia_cod       := vv_tipogia_cod;
            vt_tab_22(rec.conhectransp_id).Gia_tiponum       := '22';
            vt_tab_22(rec.conhectransp_id).NFS_num           := rec.nro_ct;
            vt_tab_22(rec.conhectransp_id).NFS_serie         := rec.serie;
            vt_tab_22(rec.conhectransp_id).NFS_dt            := to_char(rec.dt_emiss,'rrrrmmdd');
            vt_tab_22(rec.conhectransp_id).UF_cod            := vn_sigl_uf;
            --
            vn_fase := 4.17;
            --
            begin
               select k.dm_tipo_pessoa
                 into vv_dm_tp_pessoa
                 from pessoa k
                where id = rec.pessoa_id;
            exception
               when others then
                  vv_dm_tp_pessoa := null;
            end;
            --
            vn_fase := 4.18;
            --
            if vv_dm_tp_pessoa = 0 then
               vv_TipoPess := 'PF'; -- fisica
               vv_NFE_inscestDest := ' ';
               vv_NFE_CNPJ := ' ';
            elsif vv_dm_tp_pessoa = 1 then
                  vv_TipoPess := 'CI';  -- juridica
                  if vn_sigl_uf = 'MS' then
                     vv_NFE_inscestDest := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => rec.pessoa_id),1,9),0),9,0); -- Inscrição Estadual
                     vv_NFE_CNPJ := ' ';
                  else
                     vv_NFE_inscestDest := ' ';
                     vv_NFE_CNPJ := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
                  end if;
            end if;
            --
            vn_fase := 4.19;
            --
            vt_tab_22(rec.conhectransp_id).TipoPessCod        := vv_TipoPess;
            vt_tab_22(rec.conhectransp_id).NFE_inscestDest    := vv_NFE_inscestDest;
            vt_tab_22(rec.conhectransp_id).NFE_CNPJ           := vv_NFE_CNPJ;
            vt_tab_22(rec.conhectransp_id).NFE_total          := nvl(vn_vl_contabil,0)*100;
            --
         end if;
         --
      end if;
      --
   end loop;
   --
   vn_fase := 5;
   -- Nota Fiscal Serviço Continuo
   for rec in c_det_cfop_sc loop
      exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
      --
      vn_fase := 5.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 5.2;
      --
      -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
      pk_csf_api.pkb_vlr_fiscal_nfsc ( en_nfregistanalit_id   => rec.nfregistanalit_id
                                     , sv_cod_st_icms         => vv_cod_st_icms
                                     , sn_cfop                => vn_cfop
                                     , sn_aliq_icms           => vn_aliq_icms
                                     , sn_vl_operacao         => vn_vl_contabil
                                     , sn_vl_bc_icms          => vn_vl_base_calc_icms
                                     , sn_vl_icms             => vn_vl_imp_trib_icms
                                     , sn_vl_bc_icmsst        => vn_vl_base_calc_icmsst
                                     , sn_vl_icms_st          => vn_vl_imp_trib_icmsst
                                     , sn_vl_ipi              => vn_vl_imp_trib_ipi
                                     , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                     , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                     );
      --
      vn_fase := 5.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         begin
            select est.sigla_estado sigl, est.id
              into vn_sigl_uf, vn_aux_est
              from pessoa p
                 , cidade cid
                 , estado est
             where p.id   = rec.pessoa_id
               and cid.id = p.cidade_id
               and est.id = cid.estado_id;
         exception
            when others then
               vn_sigl_uf := ' ';
               vn_aux_est := 1;
         end;
         --
         vn_fase := 5.4;
         vn_aliq_aux := nvl(vn_aliq_icms,0) * 100;
         --
         begin
            vb_achou := vt_tab_01(vn_aux_est)(vn_cfop).exists(vn_aliq_aux);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 5.5;
         --
         if not vb_achou then
            --
            vn_fase := 5.6;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual -- Inscrição Estadual
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Tipogia_cod       := vv_tipogia_cod;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_tiponum       := 01;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Cfop_codigo       := vn_cfop;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).CargaTribLiquida  := nvl(vn_aliq_icms,0) * 100;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Uf_sigla          := vn_sigl_uf;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := (nvl(vn_vl_bc_outra_icms,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := (nvl(vn_vl_base_calc_icmsst,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := round(nvl(vn_vl_imp_trib_icmsst,0) * 100,2);
            --
         else
            --
            vn_fase := 5.7;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto + (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib + (nvl(vn_vl_base_calc_icmsst,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
         vn_fase := 5.8;
         --
         if nvl(vn_vl_imp_trib_icmsst,0) > 0 then
            --
            vn_fase := 5.9;
            --
            -- TP 15 - ICMS Cobrado por Substituição Tributaria nas Operações Interestaduais - Entrada
            begin
               vb_achou := vt_tab_15(1)(rec.dm_ind_oper).exists(vn_aux_est);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 5.10;
            --
            if not vb_achou then
               --
               vn_fase := 5.11;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Tipogia_cod       := vv_tipogia_cod;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Gia_tiponum       := '15';
               --
               if rec.dm_ind_oper = 0 then
                  vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).TipoMovCod        := 'E'; -- E - Entrada / S - Saida
               else
                  vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).TipoMovCod        := 'S'; -- E - Entrada / S - Saida
               end if;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).UfCod             := vn_sigl_uf;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros            := nvl(vn_vl_imp_trib_icmsst,0)*100;
               --
            else
               --
               vn_fase := 5.12;
               --
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros            := nvl(vt_tab_15(1)(rec.dm_ind_oper)(vn_aux_est).Outros,0) + (nvl(vn_vl_imp_trib_icmsst,0)*100);
               --
            end if;
            --
         end if;
         --
         vn_fase := 5.13;
         -- TP 21  - Nota Fiscal de Entrada
         if rec.dm_ind_oper = 0 then
            --
            vn_fase := 5.14;
            --
            vt_tab_21(rec.notafiscal_id).Contrib_InscEstad  := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
            vt_tab_21(rec.notafiscal_id).Gia_anoref         := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_21(rec.notafiscal_id).Gia_mesiref        := '00'; -- A = mes inicial -  M = 00
            vt_tab_21(rec.notafiscal_id).Gia_mesfref        := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_21(rec.notafiscal_id).Tipogia_cod        := vv_tipogia_cod;
            vt_tab_21(rec.notafiscal_id).Gia_tiponum        := '21';
            vt_tab_21(rec.notafiscal_id).NFE_num            := rec.nro_nf;
            vt_tab_21(rec.notafiscal_id).NFE_serie          := rec.serie;
            vt_tab_21(rec.notafiscal_id).NFE_seq            := 1;
            vt_tab_21(rec.notafiscal_id).NFE_dt             := to_char(rec.dt_emiss,'rrrrmmdd');
            vt_tab_21(rec.notafiscal_id).UF_cod             := vn_sigl_uf;
            --
            vn_fase := 5.15;
            --
            if vn_sigl_uf = 'MS' then
               vt_tab_21(rec.notafiscal_id).NFE_inscestRem   := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
               vt_tab_21(rec.notafiscal_id).NFE_CNPJ         := ' ';
            else
               vt_tab_21(rec.notafiscal_id).NFE_inscestRem   := ' ';
               vt_tab_21(rec.notafiscal_id).NFE_CNPJ         := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
            end if;
            --
            vt_tab_21(rec.notafiscal_id).NFE_total          := nvl(vn_vl_contabil,0)*100;
            --
         else
            --
            vn_fase := 5.16;
            -- TP 22  - Nota Fiscal de Saida
            vt_tab_22(rec.notafiscal_id).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
            vt_tab_22(rec.notafiscal_id).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_22(rec.notafiscal_id).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
            vt_tab_22(rec.notafiscal_id).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_22(rec.notafiscal_id).Tipogia_cod       := vv_tipogia_cod;
            vt_tab_22(rec.notafiscal_id).Gia_tiponum       := '22';
            vt_tab_22(rec.notafiscal_id).NFS_num           := rec.nro_nf;
            vt_tab_22(rec.notafiscal_id).NFS_serie         := rec.serie;
            vt_tab_22(rec.notafiscal_id).NFS_dt            := to_char(rec.dt_emiss,'rrrrmmdd');
            vt_tab_22(rec.notafiscal_id).UF_cod            := vn_sigl_uf;
            --
            vn_fase := 5.17;
            --
            begin
               select k.dm_tipo_pessoa
                 into vv_dm_tp_pessoa
                 from pessoa k
                where id = rec.pessoa_id;
            exception
               when others then
                  vv_dm_tp_pessoa := null;
            end;
            --
            vn_fase := 5.18;
            --
            if vv_dm_tp_pessoa = 0 then
               vv_TipoPess := 'PF'; -- fisica
               vv_NFE_inscestDest := ' ';
               vv_NFE_CNPJ := ' ';
            elsif vv_dm_tp_pessoa = 1 then
                  vv_TipoPess := 'CI';  -- juridica
                  if vn_sigl_uf = 'MS' then
                     vv_NFE_inscestDest := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => rec.pessoa_id),1,9),0),9,0); -- Inscrição Estadual
                     vv_NFE_CNPJ := ' ';
                  else
                     vv_NFE_inscestDest := ' ';
                     vv_NFE_CNPJ := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
                  end if;
            end if;
            --
            vn_fase := 5.19;
            --
            vt_tab_22(rec.notafiscal_id).TipoPessCod        := vv_TipoPess;
            vt_tab_22(rec.notafiscal_id).NFE_inscestDest    := vv_NFE_inscestDest;
            vt_tab_22(rec.notafiscal_id).NFE_CNPJ           := vv_NFE_CNPJ;
            vt_tab_22(rec.notafiscal_id).NFE_total          := nvl(vn_vl_contabil,0)*100;
            --
         end if;
         --
      end if;
      --
   end loop;
   --
   vn_fase := 6;
   -- Cupom Fiscal - ECF
   for rec in c_det_cfop_ecf loop
      exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
      --
      vn_fase := 6.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 6.2;
      --
      -- Recupera valores fiscais (ICMS) do conhecimento de transporte
      pk_csf_api_ecf.pkb_vlr_fiscal_ecf ( en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id
                                        , sv_cod_st_icms         => vv_cod_st_icms
                                        , sn_cfop                => vn_cfop
                                        , sn_aliq_icms           => vn_aliq_icms
                                        , sn_vl_opr              => vn_vl_contabil
                                        , sn_vl_bc_icms          => vn_vl_base_calc_icms
                                        , sn_vl_icms             => vn_vl_imp_trib_icms
                                        , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                        , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                        );
      --
      vn_fase := 6.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         begin
            select est.sigla_estado sigl
                 , est.id
              into vn_sigl_uf
                 , vn_aux_est
              from empresa e
                 , pessoa  p
                 , cidade  cid
                 , estado  est
             where e.id   = gt_row_abertura_gia.empresa_id
               and p.id   = e.pessoa_id
               and cid.id = p.cidade_id
               and est.id = cid.estado_id;
         exception
            when others then
               vn_sigl_uf := ' ';
               vn_aux_est := 1;
         end;
         --
         vn_fase := 6.4;
         vn_aliq_aux := nvl(vn_aliq_icms,0) * 100;
         --
         begin
            vb_achou := vt_tab_01(vn_aux_est)(vn_cfop).exists(vn_aliq_aux);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 6.5;
         --
         if not vb_achou then
            --
            vn_fase := 6.6;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual -- Inscrição Estadual
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Tipogia_cod       := vv_tipogia_cod;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Gia_tiponum       := 01;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Cfop_codigo       := vn_cfop;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).CargaTribLiquida  := nvl(vn_aliq_icms,0) * 100;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Uf_sigla          := vn_sigl_uf;
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := (nvl(vn_vl_bc_outra_icms,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := (nvl(vn_vl_base_calc_icmsst,0) * 100);
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := round(nvl(vn_vl_imp_trib_icmsst,0) * 100,2);
            --
         else
            --
            vn_fase := 6.7;
            --
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil     := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Valorcontabil + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral  := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcIntegral + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto           := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Imposto + (nvl(vn_vl_imp_trib_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut   := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).IsentaNaoTribut + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras            := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).Outras + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).BaseCalcSubstTrib + (nvl(vn_vl_base_calc_icmsst,0) * 100);
            vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib := vt_tab_01(vn_aux_est)(vn_cfop)(vn_aliq_aux).ImpostoRetSubstTrib + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
         vn_fase := 6.8;
         --
         if nvl(vn_vl_imp_trib_icmsst,0) > 0 then
            --
            vn_fase := 6.9;
            --
            -- TP 15 - ICMS Cobrado por Substituição Tributaria nas Operações Interestaduais - Entrada
            begin
               vb_achou := vt_tab_15(1)(1).exists(vn_aux_est);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 6.10;
            --
            if not vb_achou then
               --
               vn_fase := 6.11;
               --
               vt_tab_15(1)(1)(vn_aux_est).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
               vt_tab_15(1)(1)(vn_aux_est).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
               vt_tab_15(1)(1)(vn_aux_est).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
               vt_tab_15(1)(1)(vn_aux_est).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
               vt_tab_15(1)(1)(vn_aux_est).Tipogia_cod       := vv_tipogia_cod;
               vt_tab_15(1)(1)(vn_aux_est).Gia_tiponum       := '15';
               --
               vt_tab_15(1)(1)(vn_aux_est).TipoMovCod        := 'S'; -- E - Entrada / S - Saida
               --
               vt_tab_15(1)(1)(vn_aux_est).UfCod             := vn_sigl_uf;
               vt_tab_15(1)(1)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(1)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(1)(vn_aux_est).Outros            := nvl(vn_vl_imp_trib_icmsst,0)*100;
               --
            else
               --
               vn_fase := 6.12;
               --
               vt_tab_15(1)(1)(vn_aux_est).Petroleo          := 0;
               vt_tab_15(1)(1)(vn_aux_est).Energia           := 0;
               vt_tab_15(1)(1)(vn_aux_est).Outros            := nvl(vt_tab_15(1)(1)(vn_aux_est).Outros,0) + (nvl(vn_vl_imp_trib_icmsst,0)*100);
               --
            end if;
            --
         end if;
         --
         vn_fase := 6.13;
         -- TP 22  - Nota Fiscal de Saida
         vt_tab_22(rec.reducaozecf_id).Contrib_InscEstad := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
         vt_tab_22(rec.reducaozecf_id).Gia_anoref        := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
         vt_tab_22(rec.reducaozecf_id).Gia_mesiref       := '00'; -- A = mes inicial -  M = 00
         vt_tab_22(rec.reducaozecf_id).Gia_mesfref       := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
         vt_tab_22(rec.reducaozecf_id).Tipogia_cod       := vv_tipogia_cod;
         vt_tab_22(rec.reducaozecf_id).Gia_tiponum       := '22';
         vt_tab_22(rec.reducaozecf_id).NFS_num           := rec.num_coo_fin;
         vt_tab_22(rec.reducaozecf_id).NFS_serie         := ' ';
         vt_tab_22(rec.reducaozecf_id).NFS_dt            := to_char(rec.dt_emiss,'rrrrmmdd');
         vt_tab_22(rec.reducaozecf_id).UF_cod            := vn_sigl_uf;
         --
         vn_fase := 6.14;
         --
         vv_TipoPess := 'PF'; -- fisica
         --
         vn_fase := 6.15;
         --
         vt_tab_22(rec.reducaozecf_id).TipoPessCod        := vv_TipoPess;
         vt_tab_22(rec.reducaozecf_id).NFE_inscestDest    := ' ';
         vt_tab_22(rec.reducaozecf_id).NFE_CNPJ           := ' ';
         vt_tab_22(rec.reducaozecf_id).NFE_total          := nvl(vn_vl_contabil,0)*100;
         --
      end if;
      --
   end loop;
   --
   vn_fase := 7;
   --
   for rec in c_apur_icms loop
      exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
      --
      vn_fase := 7.1;
      -- TP 02 - Apuracao de ICMS
      vt_tab_02(rec.id).Contrib_InscEstad      := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
      vt_tab_02(rec.id).Gia_anoref             := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
      vt_tab_02(rec.id).Gia_mesiref            := '00'; -- A = mes inicial -  M = 00
      vt_tab_02(rec.id).Gia_mesfref            := to_char(gt_row_abertura_gia.dt_ini,'MM');
      vt_tab_02(rec.id).Tipogia_cod            := vv_tipogia_cod;
      vt_tab_02(rec.id).Gia_tiponum            := '02';
      vt_tab_02(rec.id).SaidPrestDebImpost     := nvl(rec.vl_total_debito,0)*100;
      vt_tab_02(rec.id).OutrosDeb              := 0;
      vt_tab_02(rec.id).EstornoCredSaidBCeCP   := nvl(rec.vl_estorno_credito,0)*100;
      vt_tab_02(rec.id).EstornoCred            := nvl(rec.vl_estorno_credito,0)*100;
      vt_tab_02(rec.id).TotalDeb               := nvl(rec.vl_total_debito,0)*100;
      vt_tab_02(rec.id).EntrAquisCredImposto   := nvl(rec.vl_total_credito,0)*100;
      vt_tab_02(rec.id).SaldoCredorExAnterior  := nvl(rec.vl_saldo_credor_ant,0)*100;
      vt_tab_02(rec.id).OutrosCred             := 0;
      vt_tab_02(rec.id).EstornoDeb             := nvl(rec.vl_estorno_debido,0)*100;
      vt_tab_02(rec.id).TotalCred              := nvl(rec.vl_total_credito,0)*100;
      vt_tab_02(rec.id).SaldoDevedor           := 0;
      vt_tab_02(rec.id).SaldoCredor            := 0;
      vt_tab_02(rec.id).Deducoes               := nvl(rec.vl_total_deducao,0)*100;
      vt_tab_02(rec.id).ImpostoRecolher        := nvl(rec.vl_icms_recolher,0)*100;
      vt_tab_02(rec.id).SaldoCredorTransportar := nvl(rec.vl_saldo_credor_transp,0)*100;
      vt_tab_02(rec.id).SaldoCredorTransferir  := 0;
      --
   end loop;
   --
   vn_fase := 8;
   --
   for rec in c_apur_icmsst loop
      exit when c_apur_icmsst%notfound or(c_apur_icmsst%notfound) is null;
      --
      vn_fase := 8.1;
      -- TP 03 - Apuracao de ICMS Substituicao Tributaria
      vt_tab_03(rec.id).Contrib_InscEstad   := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
      vt_tab_03(rec.id).Gia_anoref          := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
      vt_tab_03(rec.id).Gia_mesiref         := '00'; -- A = mes inicial -  M = 00
      vt_tab_03(rec.id).Gia_mesfref         := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
      vt_tab_03(rec.id).Tipogia_cod         := vv_tipogia_cod;
      vt_tab_03(rec.id).Gia_tiponum         := '03';
      vt_tab_03(rec.id).BaseCalcSubsTrib    := nvl(rec.vl_base_calc_icms_st,0)*100;
      vt_tab_03(rec.id).ICMSST              := nvl(rec.vl_retencao_st,0)*100;
      vt_tab_03(rec.id).SaldoCredor_Ant     := nvl(rec.vl_saldo_cred_ant_st,0)*100;
      vt_tab_03(rec.id).Devolucoes          := nvl(rec.vl_saldo_dev_ant_st,0)*100;
      vt_tab_03(rec.id).ImpostoRecolher     := nvl(rec.vl_icms_recol_st,0)*100;
      vt_tab_03(rec.id).SaldoCredorTransp   := nvl(rec.vl_saldo_cred_st_transp,0)*100;
      vt_tab_03(rec.id).OutrosCred          := nvl(rec.vl_outro_cred_st,0)*100;
      vt_tab_03(rec.id).BaseCalcSTTransp    := nvl(rec.VL_BASE_CALC_ICMS_ST,0) * 100;
      vt_tab_03(rec.id).ImpostoDevidoTransp := '0';
      --
   end loop;
   --
   vn_fase := 9;
   --
   for rec in c_ajust_icms loop
      exit when c_ajust_icms%notfound or (c_ajust_icms%notfound) is null;
      --
      vn_fase := 9.1;
      --
      if to_number(rec.codsubitem) <= 14 then
         --
         vn_fase := 9.2;
         -- TP 51  - Apuração ICMS - Outros Créditos
         vt_tab_51(rec.id).Contrib_InscEstad  := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
         vt_tab_51(rec.id).Gia_anoref         := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
         vt_tab_51(rec.id).Gia_mesiref        := '00';  -- A = mes inicial -  M = 00
         vt_tab_51(rec.id).Gia_mesfref        := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
         vt_tab_51(rec.id).Tipogia_cod        := vv_tipogia_cod;
         vt_tab_51(rec.id).Gia_tiponum        := '51';
         vt_tab_51(rec.id).Credito_cod        := rec.codsubitem;
         vt_tab_51(rec.id).Valor              := nvl(rec.vl_aj_apur,0) * 100;
         --
      else
         --
         vn_fase := 9.3;
         -- TP 52  - Apuração ICMS - Deduções
         vt_tab_52(rec.id).Contrib_InscEstad  := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
         vt_tab_52(rec.id).Gia_anoref         := to_char(gt_row_abertura_gia.dt_ini,'RRRR');
         vt_tab_52(rec.id).Gia_mesiref        := '00'; -- A = mes inicial -  M = 00
         vt_tab_52(rec.id).Gia_mesfref        := to_char(gt_row_abertura_gia.dt_ini,'MM'); -- A = mes final  - M = 00
         vt_tab_52(rec.id).Tipogia_cod        := vv_tipogia_cod;
         vt_tab_52(rec.id).Gia_tiponum        := '52';
         vt_tab_52(rec.id).Debito_cod         := rec.codsubitem;
         vt_tab_52(rec.id).Valor              := nvl(rec.vl_aj_apur,0) * 100;
         vt_tab_52(rec.id).NumCertificado     := ' ';
         --
      end if;
      --
   end loop;
   --
   vn_fase := 10;
   -- procedimento monta a estrutura do arquivo da GIA - MS
   pkb_monta_estr_arq_gia_ms;
   --
exception
   when others then
      raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_ms fase ('||vn_fase||'): '||sqlerrm);
end pkb_gera_arq_gia_ms;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-PE
------------------------------------------------
procedure pkb_gera_arq_gia_pe is
   --
   -- variáveis do controle do vetor
   i pls_integer;
   -- variáveis do processo
   vn_fase                number := 0;
   vb_achou               boolean;
   --
   vv_nome                pessoa.nome%type;
   vv_email               pessoa.email%type;
   vv_nome_empr           pessoa.nome%type;
   --
   vn_cfop                cfop.cd%type := 0;
   vn_vl_contabil         number(15, 2) := 0;
   vv_cod_st_icms         cod_st.cod_st%type := null;
   vn_vl_base_calc_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_icms           imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_icms    imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_base_calc_icmsst imp_itemnf.vl_base_calc%type := 0;
   vn_vl_imp_trib_icmsst  imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_icms    imp_itemnf.vl_base_calc%type := 0;
   vv_cod_st_ipi          cod_st.cod_st%type := null;
   vn_vl_base_calc_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_ipi            imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_ipi     imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_ipi     imp_itemnf.vl_base_calc%type := 0;
   vn_ipi_nao_recup       number;
   vn_outro_ipi           number;
   vn_vl_imp_nao_dest_ipi number;
   vn_vl_fcp_icmsst       number;
   vn_aliq_fcp_icms       number;
   vn_vl_fcp_icms         number;
   --
   vv_ibge_estado         estado.ibge_estado%type;
   vv_sigla_estado        estado.sigla_estado%type;
   vv_cpf_respons         varchar2(11);
   --
   vn_seq                 number := 0;
   --
   -- Cabeçalho do arquivo (0)
   type tab_tp_0 is record(
      seq         number(6),
      tip_reg     number(1),
      sistema     varchar2(5),
      versao      number(2),
      release     number(2),
      tipo_versao varchar2(1),
      dat         varchar2(8),
      hora        varchar2(8)
      );
   --
   type t_tab_tp_0 is table of tab_tp_0 index by binary_integer;
   vt_tab_tp_0 t_tab_tp_0;
   --
   -- Cabeçalho de GIA (1)
   type tab_tp_1 is record(
      seq                number(6),
      tip_reg            number(1),
      reg_verif          varchar2(6),
      inscr_contr        varchar2(14),
      cnpj_cpf_contr     varchar2(14),
      exercicio          number(4),
      Indicador          varchar2(1),
      razao_social_contr varchar2(46),
      cpf_respons        varchar2(11),
      nome_respons       varchar2(40),
      telef_contr        varchar2(14),
      email_contr        varchar2(40)
      );
   --
   type t_tab_tp_1 is table of tab_tp_1 index by binary_integer;
   vt_tab_tp_1 t_tab_tp_1;
   --
   -- Totais dos Quadros I - Entradas e II - Saídas (2)
   type tab_tp_2 is record(
      seq                number(6),
      tip_reg            number(1),
      VlrContabil        number(15),
      BaseCalculo        number(15),
      Outras             number(15),
      Petr_energia       number(15),
      Outros_prod        number(15),
      VlrCont_nao_contr  number(15),
      VlrCont_contr      number(15),
      BaseCalc_nao_contr number(15),
      BaseCalc_contr     number(15),
      Outras2            number(15),
      ICMS_cobr_subst    number(15)
      );
   --
   type t_tab_tp_2 is table of tab_tp_2 index by binary_integer;
   vt_tab_tp_2 t_tab_tp_2;
   --
   -- Entradas de Mercadorias, Bens e/ou Aquisição de Serviços - Quadro I (3)
   type tab_tp_3 is record(
      seq            number(6),
      tip_reg        number(1),
      estado         varchar2(2),
      VlrContabil    number(11),
      VlrBaseCalculo number(11),
      Outras         number(11),
      Energia        number(11),
      Outros_prod    number(11)
      );
   --
   type t_tab_tp_3 is table of tab_tp_3 index by binary_integer;
   vt_tab_tp_3 t_tab_tp_3;
   --
   -- Saídas de Mercadorias, Bens e/ou Prestação de Serviços - Quadro II (4)
   type tab_tp_4 is record(
      seq                 number(6),
      tip_reg             number(1),
      UF                  varchar2(2),
      VlrContNaoContr     number(11),
      VlrContContr        number(11),
      VlrBaseCalcNaoContr number(11),
      VlrBaseCalcContr    number(11),
      VlrOutrasOper       number(11),
      VlrSbtTrib          number(11)
      );
   --
   type t_tab_tp_4 is table of tab_tp_4 index by binary_integer;
   vt_tab_tp_4 t_tab_tp_4;
   --
   -- Rodapé do arquivo (9)
   type tab_tp_9 is record(
      seq         number(6),
      tip_reg     number(1),
      qtd_gia     number(6),
      qtd_reg     number(6)
      );
   --
   type t_tab_tp_9 is table of tab_tp_9 index by binary_integer;
   vt_tab_tp_9 t_tab_tp_9;
   --
   -- CURSORES
   --
   cursor c_det_cfop is
      select nf.id notafiscal_id,
             nf.dm_ind_oper, -- 0-Entrada, 1-Saída
             nf.dm_ind_emit,  -- 0-Emissão Própria, 1-Terceiros
             nf.pessoa_id,
             nf.dt_emiss,
             nf.nro_nf,
             nf.serie serie_nf,
             inf.id itemnf_id
        from nota_fiscal      nf
           , mod_fiscal       mf
           , item_nota_fiscal inf
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('01', '1B', '04', '55', '65')
         and inf.notafiscal_id  = nf.id
       order by 1;
   --
   cursor c_det_cfop_ct is
      select ct.id conhectransp_id,
             ct.dm_ind_oper,
             ct.pessoa_id,
             ct.dt_hr_emissao dt_emiss,
             ct.nro_ct,
             ct.serie serie_ct,
             ct.subserie subserie_ct,
             r.id ctreganal_id
        from conhec_transp ct
           , ct_reg_anal   r
       where ct.empresa_id      = gt_row_abertura_gia.empresa_id
         and ct.dm_st_proc      = 4 -- Autorizada
         and ct.dm_arm_cte_terc = 0
         and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and r.conhectransp_id  = ct.id
       order by 1;
   --
   cursor c_det_cfop_sc is
      select nf.id notafiscal_id,
             nf.dm_ind_oper,
             nf.pessoa_id,
             nf.dt_emiss,
             nf.nro_nf,
             nf.serie serie_nf,
             r.id nfregistanalit_id
        from nota_fiscal     nf
           , mod_fiscal      mf
           , nfregist_analit r
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_st_proc      = 4 -- Autorizada
         and nf.dm_arm_nfe_terc = 0
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('06', '29', '28', '21', '22')
         and r.notafiscal_id    = nf.id
       order by 1;
   --
   -- query cupom fiscal -- sempre saída
   cursor c_det_cfop_ecf is
      select r.id     reducaozecf_id,
             r.dt_doc dt_emiss,
             ramd.id  reganalmovdiaecf_id
        from equip_ecf            e
           , reducao_z_ecf        r
           , reg_anal_mov_dia_ecf ramd
       where e.empresa_id          = gt_row_abertura_gia.empresa_id
         and r.equipecf_id         = e.id
         and r.dm_st_proc          = 1 -- Validada
         and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
         and ramd.reducaozecf_id   = r.id
       order by 1;
   --
   -- Limpar os vetores
   procedure pkb_limpa_vetor_pe is
      --
   begin
      --
      vt_tab_tp_0.delete;
      vt_tab_tp_1.delete;
      vt_tab_tp_2.delete;
      vt_tab_tp_3.delete;
      vt_tab_tp_4.delete;
      vt_tab_tp_9.delete;
      --
   end pkb_limpa_vetor_pe;
   --
   -- procedimento monta a estrutura do arquivo da GIA-PE
   --
   procedure pkb_monta_estr_arq_gia_pe is
      --
      vn_fase_arq    number := 0;
      --
   begin
      --
      vn_fase_arq := 1;
      --
      vn_seq := 0;
      -- Cabeçalho do arquivo (0)
      if nvl(vt_tab_tp_0.count, 0) > 0 then
         --
         vn_fase_arq := 1.1;
         --
         i := nvl(vt_tab_tp_0.first, 0);
         --
         loop
            --
            vn_fase_arq := 1.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 1.3;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            gl_conteudo := lpad(vn_seq, 6, '0' ); --verificar
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_0(i).tip_reg, 1, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp_0(i).sistema, 5, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_0(i).versao, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_0(i).release, 2, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp_0(i).tipo_versao, 1, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_0(i).dat, 8, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_0(i).hora, 8, '0');
            --
            vn_fase_arq := 1.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '0',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 1.5;
            --
            if i = vt_tab_tp_0.last then
               exit;
            else
               i := vt_tab_tp_0.next(i);
            end if;
            --
         end loop;
         --
      end if;
      --
      vn_fase_arq := 2;
      --
      -- Cabeçalho de GIA (1)
      if nvl(vt_tab_tp_1.count, 0) > 0 then
         --
         vn_fase_arq := 2.1;
         --
         i := nvl(vt_tab_tp_1.first, 0);
         --
         loop
            --
            vn_fase_arq := 2.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 2.3;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            gl_conteudo := lpad(vn_seq, 6, '0'); -- verificar
            gl_conteudo := gl_conteudo || vt_tab_tp_1(i).tip_reg;
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_1(i).reg_verif, 6, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp_1(i).inscr_contr, 14, ' '); -- verificar
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp_1(i).cnpj_cpf_contr, 14, ' '); -- verificar
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_1(i).exercicio, 4, '0');
            gl_conteudo := gl_conteudo || vt_tab_tp_1(i).Indicador; -- (N-original / S-substituta)
            gl_conteudo := gl_conteudo || rpad(upper(vt_tab_tp_1(i).razao_social_contr), 46, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp_1(i).cpf_respons, 11, ' ');
            gl_conteudo := gl_conteudo || rpad(upper(vt_tab_tp_1(i).nome_respons), 40, ' ');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp_1(i).telef_contr, 14, '0');
            gl_conteudo := gl_conteudo || lpad(upper(vt_tab_tp_1(i).email_contr), 40, ' ');
            --
            vn_fase_arq := 2.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '1',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 2.5;
            --
            if i = vt_tab_tp_1.last then
               exit;
            else
               i := vt_tab_tp_1.next(i);
            end if;
            --
         end loop;
         --
      end if;
      --
      vn_fase_arq := 3;
      --
      -- Totais dos Quadros I - Entradas e II - Saídas (2)
      if nvl(vt_tab_tp_2.count, 0) > 0 then
         --
         vn_fase_arq := 3.1;
         --
         i := nvl(vt_tab_tp_2.first, 0);
         --
         loop
            --
            vn_fase_arq := 3.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 3.3;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            gl_conteudo := lpad(vn_seq, 6, '0');
            gl_conteudo := gl_conteudo || vt_tab_tp_2(i).tip_reg;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).VlrContabil,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).BaseCalculo,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).Outras,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).Petr_energia,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).Outros_prod,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).VlrCont_nao_contr,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).VlrCont_contr,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).BaseCalc_nao_contr,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).BaseCalc_contr,0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).Outras, 0),15,'0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_2(i).ICMS_cobr_subst,0),15,'0');
            --
            vn_fase_arq := 3.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '2',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 3.5;
            --
            if i = vt_tab_tp_2.last then
               exit;
            else
               i := vt_tab_tp_2.next(i);
            end if;
            --
         end loop;
         --
      end if;
      --
      vn_fase_arq := 4;
      --
      -- Entradas de Mercadorias, Bens e/ou Aquisição de Serviços - Quadro I (3)
      if nvl(vt_tab_tp_3.count, 0) > 0 then
         --
         vn_fase_arq := 4.1;
         --
         i := nvl(vt_tab_tp_3.first, 0);
         --
         loop
            --
            vn_fase_arq := 4.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 4.3;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            gl_conteudo := lpad(vn_seq, 6, '0');
            gl_conteudo := gl_conteudo || vt_tab_tp_3(i).tip_reg;
            gl_conteudo := gl_conteudo || vt_tab_tp_3(i).estado;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_3(i).VlrContabil, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_3(i).VlrBaseCalculo, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_3(i).Outras, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_3(i).Energia, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_3(i).Outros_prod, 0), 11, '0');
            --
            vn_fase_arq := 4.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '3',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 4.5;
            --
            if i = vt_tab_tp_3.last then
               exit;
            else
               i := vt_tab_tp_3.next(i);
            end if;
            --
         end loop;
         --
      end if;
      --
      vn_fase_arq := 5;
      --
      -- Saídas de Mercadorias, Bens e/ou Prestação de Serviços - Quadro II (4)
      if nvl(vt_tab_tp_4.count, 0) > 0 then
         --
         vn_fase_arq := 5.1;
         --
         i := nvl(vt_tab_tp_4.first, 0);
         --
         loop
            --
            vn_fase_arq := 5.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 5.3;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            gl_conteudo := lpad(vn_seq, 6, '0');
            gl_conteudo := gl_conteudo || vt_tab_tp_4(i).tip_reg;
            gl_conteudo := gl_conteudo || vt_tab_tp_4(i).UF;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_4(i).VlrContNaoContr, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_4(i).VlrContContr, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_4(i).VlrBaseCalcNaoContr, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_4(i).VlrBaseCalcContr, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_4(i).VlrOutrasOper, 0), 11, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_4(i).VlrSbtTrib, 0), 11, '0');
            --
            vn_fase_arq := 5.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '4',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 5.5;
            --
            if i = vt_tab_tp_4.last then
               exit;
            else
               i := vt_tab_tp_4.next(i);
            end if;
            --
         end loop;
         --
      end if;
      --
      vn_fase_arq := 6;
      --
      -- Rodapé do arquivo (9)
      if nvl(vt_tab_tp_9.count,0) > 0 then
         --
         vn_fase_arq := 6.1;
         --
         i := nvl(vt_tab_tp_9.first, 0);
         --
         loop
            --
            vn_fase_arq := 6.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 6.3;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            gl_conteudo := lpad(vn_seq, 6, '0');
            gl_conteudo := gl_conteudo || vt_tab_tp_9(i).tip_reg;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_9(i).qtd_gia, 0), 6, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp_9(i).qtd_reg, 0), 6, '0');
            --
            vn_fase_arq := 6.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '9',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 6.5;
            --
            if i = vt_tab_tp_9.last then
               exit;
            else
               i := vt_tab_tp_9.next(i);
            end if;
            --
         end loop;
         --
      end if;
      --
      vn_fase_arq := 7;
      --
      -- Final da montagem das linhas do arquivo texto
      --
      pkb_limpa_vetor_pe;
      --
   exception
      when others then
         raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_pe fase ('||vn_fase_arq||'): '||sqlerrm);
   end pkb_monta_estr_arq_gia_pe;
   --
   -- Inicio PROCEDURE PRINCIPAL PE
   --
begin
   --
   vn_fase := 1;
   --
   gv_tipocodarq_cd := '4'; -- GIA-PE
   --
   pkb_limpa_vetor_pe;
   --
   vn_fase := 2;
   --
   vn_seq := 1;
   --
   -- Registro TP0000- Cabeçalho do arquivo
   --
   vt_tab_tp_0(1).seq     := vn_seq; -- Sequencial -- verificar colocar contador
   vt_tab_tp_0(1).tip_reg := '0'; -- tipo de registro
   vt_tab_tp_0(1).sistema := 'GIA'; -- sistema
   vt_tab_tp_0(1).versao  := 00;
   vt_tab_tp_0(1).release := 00; -- release
   vt_tab_tp_0(1).tipo_versao := ' '; -- tipo de versao
   vt_tab_tp_0(1).dat := to_char(gt_row_abertura_gia.dt_fin, 'RRRRMMDD');
   vt_tab_tp_0(1).hora := to_char(gt_row_abertura_gia.dt_fin, 'hh24:mm:dd');
   --
   vn_fase := 3;
   --
   -- Registro TP0110- Cabeçalho de GIA
   vn_seq := nvl(vn_seq,0) + 1;
   --
   begin
      select substr(pe.nome, 1, 40),
             substr(pe.email, 1, 40),
             (lpad(f.num_cpf, 9, '0') || lpad(f.dig_cpf, 2, '0'))
        into vv_nome
           , vv_email
           , vv_cpf_respons
        from pessoa pe
           , contador co
           , contador_empresa ce
           , fisica f
       where ce.empresa_id  = gt_row_abertura_gia.empresa_id
         and ce.dm_situacao = 1 -- 0-inativo, 1-ativo
         and co.id          = ce.contador_id
         and pe.id          = co.pessoa_id
         and f.pessoa_id    = pe.id
         and rownum         = 1;
   exception
      when others then
         vv_nome        := ' ';
         vv_email       := ' ';
         vv_cpf_respons := ' ';
   end;
   --
   vn_fase := 3.1;
   --
   vt_tab_tp_1(1).seq            := vn_seq; -- sequencial -- verificar colocar contador
   vt_tab_tp_1(1).tip_reg        := 1; -- tipo de registro
   vt_tab_tp_1(1).reg_verif      := '000000'; -- registro verificador
   vt_tab_tp_1(1).inscr_contr    := lpad(nvl(substr(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id),1,9),0),9,0); -- Inscrição Estadual
   vt_tab_tp_1(1).cnpj_cpf_contr := pk_csf.fkg_cnpj_ou_cpf_empresa(gt_row_abertura_gia.empresa_id); -- verificar
   vt_tab_tp_1(1).exercicio      := to_char(gt_row_abertura_gia.dt_ini, 'RRRR'); -- to_number(sysdate, 'RRRR');
   --
   vn_fase := 3.2;
   --
   if gt_row_abertura_gia.dm_tipo_gia = '01' then
      vt_tab_tp_1(1).Indicador  := 'N';
   else
      vt_tab_tp_1(1).Indicador  := 'S';
   end if;
   --
   vn_fase := 3.3;
   --
   begin
      select p.nome
        into vv_nome_empr
        from empresa e
           , pessoa p
       where e.id = gt_row_abertura_gia.empresa_id
         and p.id = e.pessoa_id;
   exception
      when others then
         vv_nome_empr := null;
   end;
   --
   vn_fase := 3.4;
   --
   vt_tab_tp_1(1).razao_social_contr := substr(vv_nome_empr, 1, 45);
   vt_tab_tp_1(1).cpf_respons        := vv_cpf_respons;
   vt_tab_tp_1(1).nome_respons       := vv_nome;
   vt_tab_tp_1(1).telef_contr        := '00000000000000';
   vt_tab_tp_1(1).email_contr        := substr(vv_email, 1, 40);
   --
   vn_fase := 4;
   -- Totais dos Quadros I - Entradas e II - Saídas (2)
   for rec in c_det_cfop loop
      exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
      --
      vn_fase := 4.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      vn_vl_fcp_icmsst       := 0;
      vn_aliq_fcp_icms       := 0;
      vn_vl_fcp_icms         := 0;
      --
      vn_fase := 4.2;
      -- 1 - Oper.com crédito do imposto
      -- 2 - Oper.sem crédito do imposto (Isentas ou não Tributadas)
      -- 3 - Oper.sem crédito do imposto (Outras)
      -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
      pk_csf_api.pkb_vlr_fiscal_item_nf ( en_itemnf_id           => rec.itemnf_id
                                        , sn_cfop                => vn_cfop
                                        , sn_vl_operacao         => vn_vl_contabil
                                        , sv_cod_st_icms         => vv_cod_st_icms
                                        , sn_vl_base_calc_icms   => vn_vl_base_calc_icms
                                        , sn_aliq_icms           => vn_aliq_icms
                                        , sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms
                                        , sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst
                                        , sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst
                                        , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                        , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                        , sv_cod_st_ipi          => vv_cod_st_ipi -- não utilizado
                                        , sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi -- não utilizado
                                        , sn_aliq_ipi            => vn_aliq_ipi -- não utilizado
                                        , sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi -- não utilizado
                                        , sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi -- não utilizado
                                        , sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi -- não utilizado
                                        , sn_ipi_nao_recup       => vn_ipi_nao_recup -- não utilizado
                                        , sn_outro_ipi           => vn_outro_ipi -- não utilizado
                                        , sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi
                                        , sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst
                                        , sn_aliq_fcp_icms       => vn_aliq_fcp_icms
                                        , sn_vl_fcp_icms         => vn_vl_fcp_icms
                                        );
      --
      vn_fase := 4.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 4.4;
         --
         begin
            vb_achou := vt_tab_tp_2.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 4.5;
         --
         if not vb_achou then
            --
            vn_fase := 4.6;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            vt_tab_tp_2(1).seq                := vn_seq;
            vt_tab_tp_2(1).tip_reg            := 2;
            vt_tab_tp_2(1).VlrContabil        := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalculo        := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras             := nvl(vn_vl_bc_outra_icms,0) * 100;
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vn_vl_imp_trib_ipi,0) * 100;
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras2            := nvl(vn_vl_bc_isenta_icms,0) * 100;
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vn_vl_imp_trib_icmsst,0) * 100;
            --
         else
            --
            vn_fase := 4.7;
            --
            vt_tab_tp_2(1).VlrContabil        := nvl(vt_tab_tp_2(1).VlrContabil,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalculo        := nvl(vt_tab_tp_2(1).BaseCalculo,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras             := nvl(vt_tab_tp_2(1).Outras,0) + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vt_tab_tp_2(1).Outros_prod,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vt_tab_tp_2(1).VlrCont_contr,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vt_tab_tp_2(1).BaseCalc_contr,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras2            := nvl(vt_tab_tp_2(1).Outras2,0) + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vt_tab_tp_2(1).ICMS_cobr_subst,0) + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
         vn_fase := 4.8;
         --
         begin
            select est.ibge_estado
                 , est.sigla_estado
              into vv_ibge_estado
                 , vv_sigla_estado
              from pessoa  p
                 , cidade  cid
                 , estado  est
             where p.id    = rec.pessoa_id
               and cid.id  = p.cidade_id
               and est.id  = cid.estado_id;
         exception
            when others then
               vv_ibge_estado := null;
               vv_sigla_estado := ' ';
         end;
         --
         vn_fase := 4.9;
         --
         if trim(vv_sigla_estado) not in ('EX', 'PE') then
            --
            if rec.dm_ind_oper = 0 then -- entrada
               -- Entradas de Mercadorias, Bens e/ou Aquisição de Serviços - Quadro I (3)
               vn_fase := 4.10;
               --
               begin
                  vb_achou := vt_tab_tp_3.exists(vv_ibge_estado);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 4.11;
               --
               if not vb_achou then
                  --
                  vn_fase := 4.12;
                  --
                  vn_seq := nvl(vn_seq,0) + 1;
                  --
                  vt_tab_tp_3(vv_ibge_estado).seq            := vn_seq;
                  vt_tab_tp_3(vv_ibge_estado).tip_reg        := 3;
                  vt_tab_tp_3(vv_ibge_estado).estado         := vv_sigla_estado;
                  vt_tab_tp_3(vv_ibge_estado).VlrContabil    := nvl(vn_vl_contabil,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo := nvl(vn_vl_base_calc_icms,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).Outras         := nvl(vn_vl_bc_outra_icms,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).Energia        := 0;
                  vt_tab_tp_3(vv_ibge_estado).Outros_prod    := nvl(vn_vl_imp_trib_ipi,0) * 100;
                  --
               else
                  --
                  vn_fase := 4.13;
                  --
                  vt_tab_tp_3(vv_ibge_estado).VlrContabil    := nvl(vt_tab_tp_3(vv_ibge_estado).VlrContabil,0) + (nvl(vn_vl_contabil,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo := nvl(vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).Outras         := nvl(vt_tab_tp_3(vv_ibge_estado).Outras,0) + (nvl(vn_vl_bc_outra_icms,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).Energia        := 0;
                  vt_tab_tp_3(vv_ibge_estado).Outros_prod    := nvl(vt_tab_tp_3(vv_ibge_estado).Outros_prod,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
                  --
               end if;
               --
            else -- Saídas de Mercadorias, Bens e/ou Prestação de Serviços - Quadro II (4)
               --
               vn_fase := 4.14;
               --
               begin
                  vb_achou := vt_tab_tp_4.exists(vv_ibge_estado);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 4.15;
               --
               if not vb_achou then
                  --
                  vn_fase := 4.16;
                  --
                  vn_seq := nvl(vn_seq,0) + 1;
                  --
                  vt_tab_tp_4(vv_ibge_estado).seq                  := vn_seq;
                  vt_tab_tp_4(vv_ibge_estado).tip_reg              := 4;
                  vt_tab_tp_4(vv_ibge_estado).UF                   := vv_sigla_estado;
                  vt_tab_tp_4(vv_ibge_estado).VlrContNaoContr      := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrContContr         := nvl(vn_vl_contabil,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcNaoContr  := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr     := nvl(vn_vl_base_calc_icms,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper        := nvl(vn_vl_imp_trib_ipi,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib           := nvl(vn_vl_imp_trib_icmsst,0) * 100;
                  --
               else
                  --
                  vn_fase := 4.17;
                  --
                  vt_tab_tp_4(vv_ibge_estado).VlrContNaoContr      := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrContContr         := nvl(vt_tab_tp_4(vv_ibge_estado).VlrContContr,0) + (nvl(vn_vl_contabil,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcNaoContr  := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr     := nvl(vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper        := nvl(vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib           := nvl(vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib,0) + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
                  --
               end if;
               --
            end if;
            --
         end if;
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- c_det_cfop
   --
   vn_fase := 5;
   --
   for rec in c_det_cfop_ct loop
      exit when c_det_cfop_ct%notfound or (c_det_cfop_ct%notfound) is null;
      --
      vn_fase := 5.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 5.2;
      --
      -- recupera os valores de impostos
      pk_csf_ct.pkb_vlr_fiscal_ct ( en_ctreganal_id      => rec.ctreganal_id
                                             , sv_cod_st_icms       => vv_cod_st_icms
                                             , sn_cfop              => vn_cfop
                                             , sn_aliq_icms         => vn_aliq_icms
                                             , sn_vl_opr            => vn_vl_contabil
                                             , sn_vl_bc_icms        => vn_vl_base_calc_icms
                                             , sn_vl_icms           => vn_vl_imp_trib_icms
                                             , sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms
                                             , sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms
                                             );
      --
      vn_fase := 5.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 5.4;
         --
         begin
            vb_achou := vt_tab_tp_2.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 5.5;
         --
         if not vb_achou then
            --
            vn_fase := 5.6;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            vt_tab_tp_2(1).seq                := vn_seq;
            vt_tab_tp_2(1).tip_reg            := 2;
            vt_tab_tp_2(1).VlrContabil        := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalculo        := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras             := nvl(vn_vl_bc_outra_icms,0) * 100;
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vn_vl_imp_trib_ipi,0) * 100;
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras2            := nvl(vn_vl_bc_isenta_icms,0) * 100;
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vn_vl_imp_trib_icmsst,0) * 100;
            --
         else
            --
            vn_fase := 5.7;
            --
            vt_tab_tp_2(1).VlrContabil        := nvl(vt_tab_tp_2(1).VlrContabil,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalculo        := nvl(vt_tab_tp_2(1).BaseCalculo,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras             := nvl(vt_tab_tp_2(1).Outras,0) + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vt_tab_tp_2(1).Outros_prod,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vt_tab_tp_2(1).VlrCont_contr,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vt_tab_tp_2(1).BaseCalc_contr,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras2            := nvl(vt_tab_tp_2(1).Outras2,0) + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vt_tab_tp_2(1).ICMS_cobr_subst,0) + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
         vn_fase := 5.8;
         --
         begin
            select est.ibge_estado
                 , est.sigla_estado
              into vv_ibge_estado
                 , vv_sigla_estado
              from pessoa  p
                 , cidade  cid
                 , estado  est
             where p.id    = rec.pessoa_id
               and cid.id  = p.cidade_id
               and est.id  = cid.estado_id;
         exception
            when others then
               vv_ibge_estado := null;
               vv_sigla_estado := ' ';
         end;
         --
         vn_fase := 5.9;
         --
         if trim(vv_sigla_estado) not in ('EX', 'PE') then
            --
            if rec.dm_ind_oper = 0 then -- entrada
               -- Entradas de Mercadorias, Bens e/ou Aquisição de Serviços - Quadro I (3)
               vn_fase := 5.10;
               --
               begin
                  vb_achou := vt_tab_tp_3.exists(vv_ibge_estado);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 5.11;
               --
               if not vb_achou then
                  --
                  vn_fase := 5.12;
                  --
                  vn_seq := nvl(vn_seq,0) + 1;
                  --
                  vt_tab_tp_3(vv_ibge_estado).seq            := vn_seq;
                  vt_tab_tp_3(vv_ibge_estado).tip_reg        := 3;
                  vt_tab_tp_3(vv_ibge_estado).estado         := vv_sigla_estado;
                  vt_tab_tp_3(vv_ibge_estado).VlrContabil    := nvl(vn_vl_contabil,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo := nvl(vn_vl_base_calc_icms,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).Outras         := nvl(vn_vl_bc_outra_icms,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).Energia        := 0;
                  vt_tab_tp_3(vv_ibge_estado).Outros_prod    := nvl(vn_vl_imp_trib_ipi,0) * 100;
                  --
               else
                  --
                  vn_fase := 5.13;
                  --
                  vt_tab_tp_3(vv_ibge_estado).VlrContabil    := nvl(vt_tab_tp_3(vv_ibge_estado).VlrContabil,0) + (nvl(vn_vl_contabil,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo := nvl(vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).Outras         := nvl(vt_tab_tp_3(vv_ibge_estado).Outras,0) + (nvl(vn_vl_bc_outra_icms,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).Energia        := 0;
                  vt_tab_tp_3(vv_ibge_estado).Outros_prod    := nvl(vt_tab_tp_3(vv_ibge_estado).Outros_prod,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
                  --
               end if;
               --
            else -- Saídas de Mercadorias, Bens e/ou Prestação de Serviços - Quadro II (4)
               --
               vn_fase := 5.14;
               --
               begin
                  vb_achou := vt_tab_tp_4.exists(vv_ibge_estado);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 5.15;
               --
               if not vb_achou then
                  --
                  vn_fase := 5.16;
                  --
                  vn_seq := nvl(vn_seq,0) + 1;
                  --
                  vt_tab_tp_4(vv_ibge_estado).seq                  := vn_seq;
                  vt_tab_tp_4(vv_ibge_estado).tip_reg              := 4;
                  vt_tab_tp_4(vv_ibge_estado).UF                   := vv_sigla_estado;
                  vt_tab_tp_4(vv_ibge_estado).VlrContNaoContr      := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrContContr         := nvl(vn_vl_contabil,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcNaoContr  := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr     := nvl(vn_vl_base_calc_icms,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper        := nvl(vn_vl_imp_trib_ipi,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib           := nvl(vn_vl_imp_trib_icmsst,0) * 100;
                  --
               else
                  --
                  vn_fase := 5.17;
                  --
                  vt_tab_tp_4(vv_ibge_estado).VlrContNaoContr      := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrContContr         := nvl(vt_tab_tp_4(vv_ibge_estado).VlrContContr,0) + (nvl(vn_vl_contabil,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcNaoContr  := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr     := nvl(vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper        := nvl(vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib           := nvl(vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib,0) + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
                  --
               end if;
               --
            end if;
            --
         end if;
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- c_det_cfop_ct
   --
   vn_fase := 6;
   -- Valores de Serviços Contínuos
   for rec in c_det_cfop_sc loop
      exit when c_det_cfop_sc%notfound or (c_det_cfop_sc%notfound) is null;
      --
      vn_fase := 6.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 6.2;
      --
      -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
      pk_csf_api.pkb_vlr_fiscal_nfsc ( en_nfregistanalit_id => rec.nfregistanalit_id
                                     , sv_cod_st_icms       => vv_cod_st_icms
                                     , sn_cfop              => vn_cfop
                                     , sn_aliq_icms         => vn_aliq_icms
                                     , sn_vl_operacao       => vn_vl_contabil
                                     , sn_vl_bc_icms        => vn_vl_base_calc_icms
                                     , sn_vl_icms           => vn_vl_imp_trib_icms
                                     , sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst
                                     , sn_vl_icms_st        => vn_vl_imp_trib_icmsst
                                     , sn_vl_ipi            => vn_vl_imp_trib_ipi -- não utilizado
                                     , sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms
                                     , sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms
                                     );
      --
      vn_fase := 6.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 6.4;
         --
         begin
            vb_achou := vt_tab_tp_2.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 6.5;
         --
         if not vb_achou then
            --
            vn_fase := 6.6;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            vt_tab_tp_2(1).seq                := vn_seq;
            vt_tab_tp_2(1).tip_reg            := 2;
            vt_tab_tp_2(1).VlrContabil        := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalculo        := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras             := nvl(vn_vl_bc_outra_icms,0) * 100;
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vn_vl_imp_trib_ipi,0) * 100;
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras2            := nvl(vn_vl_bc_isenta_icms,0) * 100;
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vn_vl_imp_trib_icmsst,0) * 100;
            --
         else
            --
            vn_fase := 6.7;
            --
            vt_tab_tp_2(1).VlrContabil        := nvl(vt_tab_tp_2(1).VlrContabil,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalculo        := nvl(vt_tab_tp_2(1).BaseCalculo,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras             := nvl(vt_tab_tp_2(1).Outras,0) + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vt_tab_tp_2(1).Outros_prod,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vt_tab_tp_2(1).VlrCont_contr,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vt_tab_tp_2(1).BaseCalc_contr,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras2            := nvl(vt_tab_tp_2(1).Outras2,0) + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vt_tab_tp_2(1).ICMS_cobr_subst,0) + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
         vn_fase := 6.8;
         --
         begin
            select est.ibge_estado
                 , est.sigla_estado
              into vv_ibge_estado
                 , vv_sigla_estado
              from pessoa  p
                 , cidade  cid
                 , estado  est
             where p.id    = rec.pessoa_id
               and cid.id  = p.cidade_id
               and est.id  = cid.estado_id;
         exception
            when others then
               vv_ibge_estado := null;
               vv_sigla_estado := null;
         end;
         --
         vn_fase := 6.9;
         --
         if trim(vv_sigla_estado) not in ('EX', 'PE') then
            --
            if rec.dm_ind_oper = 0 then -- entrada
               -- Entradas de Mercadorias, Bens e/ou Aquisição de Serviços - Quadro I (3)
               vn_fase := 6.10;
               --
               begin
                  vb_achou := vt_tab_tp_3.exists(vv_ibge_estado);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 6.11;
               --
               if not vb_achou then
                  --
                  vn_fase := 6.12;
                  --
                  vn_seq := nvl(vn_seq,0) + 1;
                  --
                  vt_tab_tp_3(vv_ibge_estado).seq            := vn_seq;
                  vt_tab_tp_3(vv_ibge_estado).tip_reg        := 3;
                  vt_tab_tp_3(vv_ibge_estado).estado         := vv_sigla_estado;
                  vt_tab_tp_3(vv_ibge_estado).VlrContabil    := nvl(vn_vl_contabil,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo := nvl(vn_vl_base_calc_icms,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).Outras         := nvl(vn_vl_bc_outra_icms,0) * 100;
                  vt_tab_tp_3(vv_ibge_estado).Energia        := 0;
                  vt_tab_tp_3(vv_ibge_estado).Outros_prod    := nvl(vn_vl_imp_trib_ipi,0) * 100;
                  --
               else
                  --
                  vn_fase := 6.13;
                  --
                  vt_tab_tp_3(vv_ibge_estado).VlrContabil    := nvl(vt_tab_tp_3(vv_ibge_estado).VlrContabil,0) + (nvl(vn_vl_contabil,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo := nvl(vt_tab_tp_3(vv_ibge_estado).VlrBaseCalculo,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).Outras         := nvl(vt_tab_tp_3(vv_ibge_estado).Outras,0) + (nvl(vn_vl_bc_outra_icms,0) * 100);
                  vt_tab_tp_3(vv_ibge_estado).Energia        := 0;
                  vt_tab_tp_3(vv_ibge_estado).Outros_prod    := nvl(vt_tab_tp_3(vv_ibge_estado).Outros_prod,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
                  --
               end if;
               --
            else -- Saídas de Mercadorias, Bens e/ou Prestação de Serviços - Quadro II (4)
               --
               vn_fase := 6.14;
               --
               begin
                  vb_achou := vt_tab_tp_4.exists(vv_ibge_estado);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 6.15;
               --
               if not vb_achou then
                  --
                  vn_fase := 6.16;
                  --
                  vn_seq := nvl(vn_seq,0) + 1;
                  --
                  vt_tab_tp_4(vv_ibge_estado).seq                  := vn_seq;
                  vt_tab_tp_4(vv_ibge_estado).tip_reg              := 4;
                  vt_tab_tp_4(vv_ibge_estado).UF                   := vv_sigla_estado;
                  vt_tab_tp_4(vv_ibge_estado).VlrContNaoContr      := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrContContr         := nvl(vn_vl_contabil,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcNaoContr  := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr     := nvl(vn_vl_base_calc_icms,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper        := nvl(vn_vl_imp_trib_ipi,0) * 100;
                  vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib           := nvl(vn_vl_imp_trib_icmsst,0) * 100;
                  --
               else
                  --
                  vn_fase := 6.17;
                  --
                  vt_tab_tp_4(vv_ibge_estado).VlrContNaoContr      := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrContContr         := nvl(vt_tab_tp_4(vv_ibge_estado).VlrContContr,0) + (nvl(vn_vl_contabil,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcNaoContr  := 0;
                  vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr     := nvl(vt_tab_tp_4(vv_ibge_estado).VlrBaseCalcContr,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper        := nvl(vt_tab_tp_4(vv_ibge_estado).VlrOutrasOper,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
                  vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib           := nvl(vt_tab_tp_4(vv_ibge_estado).VlrSbtTrib,0) + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
                  --
               end if;
               --
            end if;
            --
         end if;
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- fim c_det_cfop_sc
   --
   vn_fase := 7;
   -- Informações de Cupom Fiscal
   for rec in c_det_cfop_ecf loop
      exit when c_det_cfop_ecf%notfound or (c_det_cfop_ecf%notfound) is null;
      --
      vn_fase := 7.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 7.2;
      --
      -- Recupera valores fiscais (ICMS) do conhecimento de transporte
      pk_csf_api_ecf.pkb_vlr_fiscal_ecf ( en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id
                                        , sv_cod_st_icms         => vv_cod_st_icms
                                        , sn_cfop                => vn_cfop
                                        , sn_aliq_icms           => vn_aliq_icms
                                        , sn_vl_opr              => vn_vl_contabil
                                        , sn_vl_bc_icms          => vn_vl_base_calc_icms
                                        , sn_vl_icms             => vn_vl_imp_trib_icms
                                        , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                        , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                        );
      --
      vn_fase := 7.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 7.4;
         --
         begin
            vb_achou := vt_tab_tp_2.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 7.5;
         --
         if not vb_achou then
            --
            vn_fase := 7.6;
            --
            vn_seq := nvl(vn_seq,0) + 1;
            --
            vt_tab_tp_2(1).seq                := vn_seq;
            vt_tab_tp_2(1).tip_reg            := 2;
            vt_tab_tp_2(1).VlrContabil        := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalculo        := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras             := nvl(vn_vl_bc_outra_icms,0) * 100;
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vn_vl_imp_trib_ipi,0) * 100;
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vn_vl_contabil,0) * 100;
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vn_vl_base_calc_icms,0) * 100;
            vt_tab_tp_2(1).Outras2            := nvl(vn_vl_bc_isenta_icms,0) * 100;
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vn_vl_imp_trib_icmsst,0) * 100;
            --
         else
            --
            vn_fase := 7.7;
            --
            vt_tab_tp_2(1).VlrContabil        := nvl(vt_tab_tp_2(1).VlrContabil,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalculo        := nvl(vt_tab_tp_2(1).BaseCalculo,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras             := nvl(vt_tab_tp_2(1).Outras,0) + (nvl(vn_vl_bc_outra_icms,0) * 100);
            vt_tab_tp_2(1).Petr_energia       := 0;
            vt_tab_tp_2(1).Outros_prod        := nvl(vt_tab_tp_2(1).Outros_prod,0) + (nvl(vn_vl_imp_trib_ipi,0) * 100);
            vt_tab_tp_2(1).VlrCont_nao_contr  := 0;
            vt_tab_tp_2(1).VlrCont_contr      := nvl(vt_tab_tp_2(1).VlrCont_contr,0) + (nvl(vn_vl_contabil,0) * 100);
            vt_tab_tp_2(1).BaseCalc_nao_contr := 0;
            vt_tab_tp_2(1).BaseCalc_contr     := nvl(vt_tab_tp_2(1).BaseCalc_contr,0) + (nvl(vn_vl_base_calc_icms,0) * 100);
            vt_tab_tp_2(1).Outras2            := nvl(vt_tab_tp_2(1).Outras2,0) + (nvl(vn_vl_bc_isenta_icms,0) * 100);
            vt_tab_tp_2(1).ICMS_cobr_subst    := nvl(vt_tab_tp_2(1).ICMS_cobr_subst,0) + (nvl(vn_vl_imp_trib_icmsst,0) * 100);
            --
         end if;
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- final c_det_cfop_ecf
   --
   vn_fase := 8;
   --| Rodapé do arquivo (9)
   vn_seq := nvl(vn_seq,0) + 1;
   --
   vt_tab_tp_9(1).seq      := vn_seq;
   vt_tab_tp_9(1).tip_reg  := 9;
   vt_tab_tp_9(1).qtd_gia  := 1;
   vt_tab_tp_9(1).qtd_reg  := nvl(vt_tab_tp_0.count,0) + nvl(vt_tab_tp_1.count,0) + nvl(vt_tab_tp_2.count,0) + nvl(vt_tab_tp_3.count,0) + nvl(vt_tab_tp_4.count,0) + 1;
   --
   vn_fase := 9;
   -- procedimento monta a estrutura do arquivo da GIA - PE
   pkb_monta_estr_arq_gia_pe;
   --
exception
   when others then
      raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_pe fase ('||vn_fase||'): '||sqlerrm);
end pkb_gera_arq_gia_pe;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-PR
------------------------------------------------
procedure pkb_gera_arq_gia_pr is
   --
   -- variáveis do controle do vetor
   i                      pls_integer;
   -- variáveis do processo
   vn_fase                number := 0;
   --
   vn_cfop                cfop.cd%type := 0;
   vn_vl_contabil         number(15, 2) := 0;
   vv_cod_st_icms         cod_st.cod_st%type := null;
   vn_vl_base_calc_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_icms           imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_icms    imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_base_calc_icmsst imp_itemnf.vl_base_calc%type := 0;
   vn_vl_imp_trib_icmsst  imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_icms    imp_itemnf.vl_base_calc%type := 0;
   vv_cod_st_ipi          cod_st.cod_st%type := null;
   vn_vl_base_calc_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_ipi            imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_ipi     imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_ipi     imp_itemnf.vl_base_calc%type := 0;
   vn_ipi_nao_recup       number;
   vn_outro_ipi           number;
   vn_vl_imp_nao_dest_ipi number;
   vn_vl_fcp_icmsst       number;
   vn_aliq_fcp_icms       number;
   vn_vl_fcp_icms         number;
   vv_insc_est            varchar2(10);
   vv_dt_ref              varchar2(6);
   --
   vn_invent              number := 0;
   vn_nro_func            number := 0;
   vn_vl_folha            number := 0;
   vv_crc                 varchar2(10) := 0;
   --
   v_vlr_ctb_02 number := 0;
   v_vlr_ctb_04 number := 0;
   v_vlr_ctb_06 number := 0;
   v_vlr_ctb_10 number := 0;
   v_vlr_ctb_11 number := 0;
   v_vlr_ctb_13 number := 0;
   v_vlr_ctb_14 number := 0;
   v_vlr_ctb_15 number := 0;
   v_vlr_ctb_16 number := 0;
   v_vlr_ctb_17 number := 0;
   v_vlr_ctb_18 number := 0;
   v_vlr_ctb_19 number := 0;
   v_vlr_ctb_20 number := 0;
   v_vlr_ctb_31 number := 0;
   v_vlr_ctb_33 number := 0;
   v_vlr_ctb_34 number := 0;
   v_vlr_ctb_35 number := 0;
   v_vlr_ctb_36 number := 0;
   v_vlr_ctb_39 number := 0;
   v_vlr_ctb_51 number := 0;
   v_vlr_ctb_52 number := 0;
   v_vlr_ctb_53 number := 0;
   v_vlr_ctb_54 number := 0;
   v_vlr_ctb_55 number := 0;
   v_vlr_ctb_56 number := 0;
   v_vlr_ctb_57 number := 0;
   v_vlr_ctb_58 number := 0;
   v_vlr_ctb_59 number := 0;
   v_vlr_ctb_60 number := 0;
   v_vlr_ctb_61 number := 0;
   v_vlr_ctb_62 number := 0;
   v_vlr_ctb_63 number := 0;
   v_vlr_ctb_64 number := 0;
   v_vlr_ctb_65 number := 0;
   v_vlr_ctb_66 number := 0;
   v_vlr_ctb_67 number := 0;
   v_vlr_ctb_68 number := 0;
   v_vlr_ctb_69 number := 0;
   v_vlr_ctb_70 number := 0;
   v_vlr_ctb_80 number := 0;
   v_vlr_ctb_90 number := 0;
   --
   v_vlr_bsc_21 number := 0;
   v_vlr_bsc_23 number := 0;
   v_vlr_bsc_24 number := 0;
   v_vlr_bsc_25 number := 0;
   v_vlr_bsc_26 number := 0;
   v_vlr_bsc_27 number := 0;
   v_vlr_bsc_28 number := 0;
   v_vlr_bsc_29 number := 0;
   v_vlr_bsc_30 number := 0;
   v_vlr_bsc_40 number := 0;
   v_vlr_bsc_41 number := 0;
   v_vlr_bsc_43 number := 0;
   v_vlr_bsc_44 number := 0;
   v_vlr_bsc_45 number := 0;
   v_vlr_bsc_46 number := 0;
   v_vlr_bsc_49 number := 0;
   v_vlr_bsc_50 number := 0;
   v_idx number := 0;
   --
   -- TP 01 - Cabeçalho de GIA
   type tab_cab_gia is record(
      tip_reg            number(1),
      inscr_est          number(10),
      dt_ref             number(6),
      tip_gia            number(2),
      crc_contab         varchar2(10),
      vlr_estoque        number(15),
      nro_funcion        number(5),
      folha_pagto        number(15),
      qtd_linhas         number(2) );
   --
   type t_tab_cab_gia is table of tab_cab_gia index by binary_integer;
   vt_tab_cab_gia t_tab_cab_gia;
   --
   -- TP 02 - Valores das Gias
   type tab_vlr_linha is record(
      tip_reg            number(1),
      inscr_est          number(10),
      dt_ref             number(6),
      tip_gia            number(2),
      linha              varchar2(02),
      vlr_linha          number );
   --
   type t_tab_vlr_linha is table of tab_vlr_linha index by binary_integer;
   vt_bi_tab_vlr_linha t_tab_vlr_linha;
   --
   cursor c_det_cfop is
      select nf.id notafiscal_id,
             nf.dm_ind_oper, -- 0-Entrada, 1-Saída
             nf.dm_ind_emit,  -- 0-Emissão Própria, 1-Terceiros
             cod_mod,
             nf.pessoa_id,
             nf.dt_emiss,
             nf.nro_nf,
             nf.serie serie_nf,
             inf.id itemnf_id
        from nota_fiscal      nf
           , mod_fiscal       mf
           , item_nota_fiscal inf
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('01', '1B', '04', '55', '65')
         and inf.notafiscal_id  = nf.id
       order by 1, 2;
   --
   -- Item 26/27
   cursor c_det_cfop_sc is
      select nf.id notafiscal_id,
             nf.dm_ind_emit,
             nf.dm_ind_oper,
             nf.pessoa_id,
             nf.dt_emiss,
             nf.nro_nf,
             mf.cod_mod,
             r.id nfregistanalit_id
        from nota_fiscal     nf
           , mod_fiscal      mf
           , nfregist_analit r
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_st_proc      = 4
         and nf.dm_arm_nfe_terc = 0
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('06', '29', '28', '21', '22')
         and r.notafiscal_id    = nf.id
       order by 1;
   --
    cursor c_det_cfop_ct is
      select ct.id conhectransp_id,
             ct.dm_ind_oper,
             ct.pessoa_id,
             ct.dt_hr_emissao dt_emiss,
             ct.nro_ct,
             ct.serie serie_ct,
             ct.subserie subserie_ct,
             r.id ctreganal_id
        from conhec_transp ct
           , ct_reg_anal   r
       where ct.empresa_id      = gt_row_abertura_gia.empresa_id
         and ct.dm_st_proc      = 4 -- Autorizada
         and ct.dm_arm_cte_terc = 0
         and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and r.conhectransp_id  = ct.id
       order by 1;
   --
    cursor c_det_cfop_ecf is
      select r.id     reducaozecf_id,
             r.dt_doc dt_emiss,
             ramd.id  reganalmovdiaecf_id
        from equip_ecf            e
           , reducao_z_ecf        r
           , reg_anal_mov_dia_ecf ramd
       where e.empresa_id          = gt_row_abertura_gia.empresa_id
         and r.equipecf_id         = e.id
         and r.dm_st_proc          = 1 -- Validada
         and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
         and ramd.reducaozecf_id   = r.id
       order by 1;
   --
   cursor c_apur_icms is
      select vl_total_debito, vl_estorno_credito, vl_saldo_credor_transp,
             vl_saldo_credor_ant, vl_estorno_debido, ai.vl_ajust_debito,
             vl_total_credito
        from apuracao_icms       ai
           , obrig_rec_apur_icms obr
       where ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and ai.dm_situacao       = 3 -- Processada
         and ai.dm_tipo           = 0 -- Real
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
         and obr.apuracaoicms_id  = ai.id;
   --
   -- Limpar os vetores
   procedure pkb_limpa_vetor_pr is
   begin
      --
      vt_tab_cab_gia.delete;
      vt_bi_tab_vlr_linha.delete;
      --
   end pkb_limpa_vetor_pr;
   --
   -- Incluir os registros nos vetores do Registro 2
   procedure pkb_insere_vetor( v_idx       in number
                             , v_tip_reg   in number
                             , v_inscr_est in number
                             , v_dt_ref    in number
                             , v_tip_gia   in number
                             , v_linha     in number
                             , v_vlr_linha in number )
   is
   begin
      --
      vt_bi_tab_vlr_linha(v_idx).tip_reg    := v_tip_reg;   -- Tipo de registro
      vt_bi_tab_vlr_linha(v_idx).inscr_est  := v_inscr_est; -- Inscrição Estadual
      vt_bi_tab_vlr_linha(v_idx).dt_ref     := v_dt_ref;    -- Ano/Mes referencia GIA
      vt_bi_tab_vlr_linha(v_idx).tip_gia    := v_tip_gia;   -- Tipo GIA
      vt_bi_tab_vlr_linha(v_idx).linha      := v_linha;     -- Nro Linha GIA
      vt_bi_tab_vlr_linha(v_idx).vlr_linha  := v_vlr_linha; -- Valor Linha GIA
      --
      vt_tab_cab_gia(1).qtd_linhas := nvl(vt_tab_cab_gia(1).qtd_linhas,0) + 1;
      --
   exception
      when others then
         null;
   end;
   --
   -- procedimento monta a estrutura do arquivo da GIA-PR
   --
   procedure pkb_monta_estr_arq_gia_pr is
      --
      vn_fase_arq  number := 0;
      --
   begin
      --
      vn_fase_arq := 1;
      -- TP 01 - Cabeçalho do arquivo
      if nvl(vt_tab_cab_gia.count, 0) > 0 then
         --
         vn_fase_arq := 1.1;
         --
         i := nvl(vt_tab_cab_gia.first, 0);
         --
         loop
            --
            vn_fase_arq := 1.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 1.3;
            --
            gl_conteudo := vt_tab_cab_gia(i).tip_reg;
            gl_conteudo := gl_conteudo || lpad(vt_tab_cab_gia(i).inscr_est, 10, 0);
            gl_conteudo := gl_conteudo || rpad(vt_tab_cab_gia(i).dt_ref, 6, 0);
            gl_conteudo := gl_conteudo || lpad(vt_tab_cab_gia(i).tip_gia, 2, 0);
            gl_conteudo := gl_conteudo || rpad(vt_tab_cab_gia(i).crc_contab, 10, ' ');
            gl_conteudo := gl_conteudo || lpad(to_char(nvl(vt_tab_cab_gia(i).vlr_estoque,0)*100), 15, 0);
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cab_gia(i).nro_funcion,0), 5, 0);
            gl_conteudo := gl_conteudo || lpad(to_char(nvl(vt_tab_cab_gia(i).folha_pagto,0)*100), 15, 0);
            gl_conteudo := gl_conteudo || rpad(nvl(vt_tab_cab_gia(i).qtd_linhas,0), 2, 0);
            --
            vn_fase_arq := 1.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '1',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 1.5;
            --
            if i = vt_tab_cab_gia.last then
               exit;
            else
               i := vt_tab_cab_gia.next(i);
            end if;
            --
         end loop;
         --
      end if; -- Cabeçalho do gia
      --
      vn_fase_arq := 2;
      -- Cabeçalho de GIA
      if nvl(vt_bi_tab_vlr_linha.count,0) > 0 then
         --
         vn_fase_arq := 2.1;
         --
         i := nvl(vt_bi_tab_vlr_linha.first, 0);
         --
         loop
            --
            vn_fase_arq := 2.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 2.3;
            --
            gl_conteudo := vt_bi_tab_vlr_linha(i).tip_reg;
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_vlr_linha(i).inscr_est, 10, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_vlr_linha(i).dt_ref, 6, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_vlr_linha(i).tip_gia, 2, 0);
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_vlr_linha(i).linha, 2, '0');
            -- Multiplica o valor para ficar com os 2 últimos digitos para o centavos, pois no caso de zeros a direita o zero some com to_char
            gl_conteudo := gl_conteudo || lpad(to_char(vt_bi_tab_vlr_linha(i).vlr_linha*100), 15, 0);
            --
            vn_fase_arq := 2.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '2',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 2.5;
            --
            if i = vt_bi_tab_vlr_linha.last then
               exit;
            else
               i := vt_bi_tab_vlr_linha.next(i);
            end if;
            --
         end loop;
         --
      end if; -- Cabeçalho de GIA
      --
      vn_fase_arq := 3;
      --
      -- Final da montagem das linhas do arquivo texto
      --
      pkb_limpa_vetor_pr;
      --
   exception
      when others then
         raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_pr fase ('||vn_fase_arq||'): '||sqlerrm);
   end pkb_monta_estr_arq_gia_pr;
   --
   -- Início PROCEDURE PRINCIPAL PARANA
   --
begin
   --
   vn_fase := 1;
   --
   gv_tipocodarq_cd := '3';
   --
   pkb_limpa_vetor_pr;
   --
   vn_fase := 2;
   --
   -- Registro Tipo 1 - Cabeçalho do arquivo
   --
   vt_tab_cab_gia(1).tip_reg     := '1'; -- tipo de registro
   vt_tab_cab_gia(1).inscr_est   := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0);-- Inscrição Estadual
   vt_tab_cab_gia(1).dt_ref      := to_char(gt_row_abertura_gia.DT_FIN,'RRRRMM');
   -- Tipo da Gia Se GIA 01-Normal = 43, se GIA de 02-Substitutiva/Retificação = 51
   if gt_row_abertura_gia.dm_tipo_gia = '01' then
      vt_tab_cab_gia(1).tip_gia := 43; -- gt_row_abertura_gia.dm_tipo_gia;
   elsif gt_row_abertura_gia.dm_tipo_gia = '02' then
         vt_tab_cab_gia(1).tip_gia := 51; -- gt_row_abertura_gia.dm_tipo_gia;
   else
      vt_tab_cab_gia(1).tip_gia := 01; -- gt_row_abertura_gia.dm_tipo_gia;
   end if;
   --
   vn_fase := 3;
   --
   begin
      select SUBSTR(translate(replace(replace(a.crc,'-',''),'/',''), 'ABCDEFGHIJKLMNOPQRSTUVXZWY', ' '), 2, 7)
        into vv_crc
        from contador         a
           , contador_empresa b
       where a.id         = b.contador_id
         and b.empresa_id = gt_row_abertura_gia.empresa_id
         and rownum       = 1;
   exception
      when others then
         vv_crc := null;
   end;
   --
   vn_fase := 4;
   --
   vt_tab_cab_gia(1).crc_contab := vv_crc;  -- Crc Contabilista
   --
   vn_fase := 5;
   --
   begin
      select sum(nvl(a.vl_item,0))
        into vn_invent
        from inventario a
       where a.empresa_id   = gt_row_abertura_gia.empresa_id
         and a.dt_ref between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin;
   exception
      when others then
         vn_invent := 0;
   end;
   --
   vn_fase := 6;
   --
   vt_tab_cab_gia(1).vlr_estoque := vn_invent;  -- Valor do Estoque
   --
   vn_fase := 7;
   --
   begin
      select nvl(ip.nro_func,0)
           , nvl(ip.vl_folha,0)
        into vn_nro_func
           , vn_vl_folha
        from inf_folha_pgto ip
       where ip.empresa_id = gt_row_abertura_gia.empresa_id
         and ip.dm_st_proc = 3
         and to_date('01/'||ip.mes||'/'||ip.ano,'dd/mm/yyyy') = trunc(gt_row_abertura_gia.dt_fin,'mm');
   exception
      when others then
         vn_nro_func := 0;
         vn_vl_folha := 0;
   end;
   --
   vn_fase := 8;
   --
   vt_tab_cab_gia(1).nro_funcion := vn_nro_func;  -- Nro de Funcionarios
   vt_tab_cab_gia(1).folha_pagto := vn_vl_folha;  -- Folha de Pagamento
   vt_tab_cab_gia(1).qtd_linhas  := 0;            -- Qtd de Linhas do Arquivo com tipo de Registro 2
   --
   vn_fase := 9;
   --
   -- Registro TP 01 - Cabeçalho
   for rec in c_det_cfop loop
      exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
      --
      vn_fase := 10;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      vn_vl_fcp_icmsst       := 0;
      vn_aliq_fcp_icms       := 0;
      vn_vl_fcp_icms         := 0;
      --
      vn_fase := 11;
      -- 1 - Oper.com crédito do imposto
      -- 2 - Oper.sem crédito do imposto (Isentas ou não Tributadas)
      -- 3 - Oper.sem crédito do imposto (Outras)
      -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
      pk_csf_api.pkb_vlr_fiscal_item_nf( en_itemnf_id           => rec.itemnf_id
                                       , sn_cfop                => vn_cfop
                                       , sn_vl_operacao         => vn_vl_contabil
                                       , sv_cod_st_icms         => vv_cod_st_icms
                                       , sn_vl_base_calc_icms   => vn_vl_base_calc_icms
                                       , sn_aliq_icms           => vn_aliq_icms
                                       , sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms
                                       , sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst
                                       , sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst
                                       , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                       , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                       , sv_cod_st_ipi          => vv_cod_st_ipi -- não utilizado
                                       , sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi -- não utilizado
                                       , sn_aliq_ipi            => vn_aliq_ipi -- não utilizado
                                       , sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi -- não utilizado
                                       , sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi -- não utilizado
                                       , sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi -- não utilizado
                                       , sn_ipi_nao_recup       => vn_ipi_nao_recup -- não utilizado
                                       , sn_outro_ipi           => vn_outro_ipi -- não utilizado
                                       , sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi
                                       , sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst
                                       , sn_aliq_fcp_icms       => vn_aliq_fcp_icms
                                       , sn_vl_fcp_icms         => vn_vl_fcp_icms
                                       );
      --
      vn_fase := 12;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 13;
         --
         if substr(vn_cfop, 1, 1) not in (1, 5) then
            vn_vl_base_calc_icmsst := 0;
         end if;
         --
         vn_fase := 14;
         --
         if rec.dm_ind_oper = '0' then
            --
            -- 0 - entradas
            --
            vn_fase := 15;
            --
            if rec.cod_mod = '04'  then -- produtor Rural
               --
               vn_fase := 15.1;
               -- 04 -- Valor Total dos Produtos Primarios
               v_vlr_ctb_04 := v_vlr_ctb_04 + vn_vl_contabil;
               --
            end if;
            --
            vn_fase := 15.2;
            --
            if vn_cfop in (1101, 1102, 1111, 1113, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1151, 1152, 1154, 1201, 1202,
                           1203, 1204, 1206, 1208, 1209, 1351, 1352, 1353, 1354, 1355, 1356, 1501, 1503, 1504, 1651, 1658, 1660, 1932) then
               --
               vn_fase := 15.3;
               -- 11 -- Valor Entrada de Mercadorias e Serviços do Estado
               v_vlr_ctb_11 := v_vlr_ctb_11 + vn_vl_contabil - vn_vl_imp_trib_icmsst;
               --
               vn_fase := 15.4;
               -- 21 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços do Estado
               v_vlr_bsc_21 := v_vlr_bsc_21 + vn_vl_base_calc_icms - vn_vl_imp_trib_icmsst;
               --
            elsif vn_cfop in (2101, 2102, 2111, 2113, 2116, 2117, 2118, 2120, 2121, 2122, 2124, 2123, 2124, 2125, 2126, 2151, 2152, 2154, 2201,
                              2202, 2203, 2204, 2206, 2208, 2209, 2351, 2352, 2353, 2354, 2355, 2356, 2501, 2503, 2504, 2651, 2658, 2660, 2932 ) then
                  --
                  vn_fase := 15.5;
                  -- 13 -- Valor Entrada de Mercadorias e Serviços de Outros Estados
                  -- Detalhes Interestaduais
                  v_vlr_ctb_13 := v_vlr_ctb_13 + vn_vl_contabil - vn_vl_imp_trib_icmsst;
                  --
                  vn_fase := 15.6;
                  -- 23 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços de Outros Estados
                  v_vlr_bsc_23 := v_vlr_bsc_23 + vn_vl_base_calc_icms - vn_vl_imp_trib_icmsst;
                  --
            elsif vn_cfop in (3101, 3102, 3126, 3127, 3201, 3202, 3206, 3211, 3351, 3352, 3353, 3354, 3355, 3356, 3503, 3651, 3930, 3949) then
                  --
                  vn_fase := 15.7;
                  -- 14 -- Valor Entrada de Mercadorias e Serviços no Exterior
                  v_vlr_ctb_14 := v_vlr_ctb_14 + vn_vl_contabil;
                  --
                  vn_fase := 15.8;
                  -- 24 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços no Exterior
                  v_vlr_bsc_24 := v_vlr_bsc_24 + vn_vl_base_calc_icms;
                  --
            elsif vn_cfop in (1401, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1414, 1415, 1652, 1653, 1659, 1661, 1662, 2401, 2403, 2406, 2407,
                              2408, 2409, 2410, 2411, 2414, 2415, 2652, 2653, 2659, 2661, 2662, 3652, 3653 ) then
                  --
                  vn_fase := 15.9;
                  -- 15 -- Valor Entrada de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_ctb_15 := v_vlr_ctb_15 + vn_vl_imp_trib_icmsst;
                  --
                  vn_fase := 15.10;
                  -- 25 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_bsc_25 := v_vlr_bsc_25 + vn_vl_base_calc_icmsst;
                  --
            elsif vn_cfop in (1551, 1552, 1553, 1554, 1555, 1556, 1557, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 3551, 3553, 3554, 3555, 3556) then
                  --
                  vn_fase := 15.11;
                  -- 16 -- Ativo Imobilizado - Valor Contábil
                  v_vlr_ctb_16 := v_vlr_ctb_16 + vn_vl_contabil;
                  --
                  vn_fase := 15.12;
                  -- 26 -- Ativo Imobilizado - base de cálculo
                  v_vlr_bsc_26 := v_vlr_bsc_26 + vn_vl_base_calc_icms;
                  --
            else
               --
               vn_fase := 15.13;
               -- 19 -- Cfops nao classificados anteriormente
               v_vlr_ctb_19 := v_vlr_ctb_19 + vn_vl_contabil;
               --
               vn_fase := 15.14;
               -- 29 -- Cfops nao classificados anteriormente
               v_vlr_bsc_29 := v_vlr_bsc_29 + vn_vl_base_calc_icms;
               --
            end if;
            --
         else  --  1-Saida - registro
            --
            -- Quadro 08 - Valores Fiscais: Valor Contábil - Saídas
            -- (5.101, 5102,5103,5104,5105, 5106, 5.109 a 5.120, 5.122 a 5.125, 5.151 a 5.153, 5.155, 5.156, 5.201, 5.202, 5.205 a 5.210,
            --  5.251 a 5.258, 5.301 a 5.307, 5.351 a 5.357, 5.359, 5.501, 5.502, 5.503, 5.651, 5.658, 5.660 e 5.932)
            --
            vn_fase := 16;
            --
            if substr(vn_cfop,1,2) in (51,52,53) or
               vn_cfop in (5501,5502,5503,5651,5658,5660,5932)  then
               --
               vn_fase := 16.1;
               -- 31 -- Valor Saída de Mercadorias e Serviços do Estado
               v_vlr_ctb_31 := v_vlr_ctb_31 + vn_vl_contabil - vn_vl_imp_trib_icmsst;
               --
               vn_fase := 16.2;
               -- 41 -- Valor Base de Cálculo Saída de Mercadorias e Serviços do Estado
               v_vlr_bsc_41 := v_vlr_bsc_41 + vn_vl_base_calc_icms - vn_vl_imp_trib_icmsst;
               --
            elsif substr(vn_cfop,1,2) in (61,62,63) or -- 6.101 a 6.120, 6.122 a 6.125, 6.151 a 6.153, 6.155, 6.156, 6.201, 6.202, 6.205 a 6.210,
                                                       -- 6.251 a 6.258, 6.301 a 6.307, 6.351 a 6.357, 6.359, 6.501, 6.502, 6.503, 6.651, 6.658, 6.660 e 6.932
                  vn_cfop in (6501, 6502, 6503, 6651, 6658, 6660 , 6932) then
                  --
                  vn_fase := 16.3;
                  -- 33 -- Valor Saída de Mercadorias e Serviços de Outros Estados
                  v_vlr_ctb_33 := v_vlr_ctb_33 + vn_vl_contabil - vn_vl_imp_trib_icmsst;
                  --
                  vn_fase := 16.4;
                  -- 43 -- Valor Base de Cálculo Saída de Mercadorias e Serviços de Outros Estados
                  v_vlr_bsc_43 := v_vlr_bsc_43 + vn_vl_base_calc_icms - vn_vl_imp_trib_icmsst;
                  --
            elsif (substr(vn_cfop,1,1) = 7 and vn_cfop not in (7551,7553,7556)) then
                  --
                  vn_fase := 16.5;
                  -- 34 -- Valor Saída de Mercadorias e Serviços no Exterior
                  v_vlr_ctb_34 := v_vlr_ctb_34 + vn_vl_contabil;
                  --
                  vn_fase := 16.6;
                  -- 44 -- Valor Base de Cálculo Saída de Mercadorias e Serviços no Exterior
                  v_vlr_bsc_44 := v_vlr_bsc_44 + vn_vl_base_calc_icms;
                  --
            elsif substr(vn_cfop,1,2) in (54,56,64,66) then
                  --
                  vn_fase := 16.7;
                  -- 35 -- Valor Saída de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_ctb_35 := v_vlr_ctb_35 + vn_vl_imp_trib_icmsst;
                  --
                  vn_fase := 16.8;
                  -- 45 -- Valor Base de Cálculo Saída de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_bsc_45 := v_vlr_bsc_45 + vn_vl_base_calc_icmsst;
                  --
            elsif substr(vn_cfop,1,2) in (55,65,75) then
                  --
                  vn_fase := 16.9;
                  -- 36 -- Ativo Imobilizado - Valor contabil
                  v_vlr_ctb_36 := v_vlr_ctb_36 + vn_vl_contabil;
                  --
                  vn_fase := 16.10;
                  -- 46 -- Ativo Imobilizado - base de calculo
                  v_vlr_bsc_46 := v_vlr_bsc_46 + vn_vl_base_calc_icms;
                  --
            else
               --
               vn_fase := 16.11;
               -- 39 -- Cfops nao classificados anteriormente
               v_vlr_ctb_39 := v_vlr_ctb_39 + vn_vl_contabil;
               --
               vn_fase := 16.12;
               -- 49 -- Cfops nao classificados anteriormente
               v_vlr_bsc_49 := v_vlr_bsc_49 + vn_vl_base_calc_icms;
               --
            end if;
            --
         end if; -- indicador de operação: 0-entrada, 1-saída
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- c_det_cfop
   --
   vn_fase := 17;
   -- 02 -- Valores das despesas efetivamente pagas no mês de referência
   v_vlr_ctb_02 := v_vlr_ctb_02 + 0;
   --
   vn_fase := 18;
   -- 10 -- Preenchimento automatico
   v_vlr_ctb_10 := v_vlr_ctb_10 + 0;
   --
   vn_fase := 19;
   -- 20 -- Preechimento Automático
   v_vlr_ctb_20 := v_vlr_ctb_20 + 0;
   --
   vn_fase := 20;
   -- 30 -- Preenchimento Automático -- não preenchido
   --
   vn_fase := 21;
   -- Quadro 09 - Débitos ICMS
   --
   for rec in c_apur_icms loop
      exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
      --
      vn_fase := 22;
      -- 51 -- Saídas com Débitos ICMS
      v_vlr_ctb_51 := v_vlr_ctb_51 + rec.vl_total_debito;
      --
      vn_fase := 22.1;
      -- 52 -- Outros Débitos de ICMS
      v_vlr_ctb_52 := v_vlr_ctb_52 + rec.vl_ajust_debito;
      --
      vn_fase := 22.2;
      -- 53 -- Estornos de Créditos de ICMS
      v_vlr_ctb_53 := v_vlr_ctb_53 + rec.vl_estorno_credito;
      --
      vn_fase := 22.3;
      -- 54 -- Prestações Interestaduais
      v_vlr_ctb_54 := v_vlr_ctb_54 + 0;
      --
      vn_fase := 22.4;
      -- 55 -- Saldos Credores
      v_vlr_ctb_55 := v_vlr_ctb_55 + 0;
      --
      vn_fase := 22.5;
      -- 56 -- Estorno de Créditos Ativo Imobilizado
      v_vlr_ctb_56 := v_vlr_ctb_56 + 0;
      --
      vn_fase := 22.6;
      -- 57 -- CFOP 5.606
      v_vlr_ctb_57 := v_vlr_ctb_57 + 0;
      --
      vn_fase := 22.7;
      -- 58 -- Imposto Dilatado
      v_vlr_ctb_58 := v_vlr_ctb_58 + 0;
      --
      vn_fase := 22.8;
      -- 59 -- créditos acumulados CISCRED
      v_vlr_ctb_59 := v_vlr_ctb_59 + 0;
      --
      vn_fase := 22.9;
      -- 60 -- Preenchimento Automático
      v_vlr_ctb_60 := v_vlr_ctb_60 + 0;
      --
      -- Quadro 10 - Créditos ICMS
      --
      vn_fase := 22.10;
      -- 61 -- Saldo Credor Mes Anterior
      v_vlr_ctb_61 := v_vlr_ctb_61 + rec.vl_saldo_credor_ant;
      --
      vn_fase := 22.11;
      -- 62 -- Entrada de Credito
      v_vlr_ctb_62 := v_vlr_ctb_62 + rec.vl_total_credito;
      --
      vn_fase := 22.12;
      -- 63 -- Outros Créditos de ICMS
      v_vlr_ctb_63 := v_vlr_ctb_63 + 0;
      --
      vn_fase := 22.13;
      -- 64 -- Estorno Débito
      v_vlr_ctb_64 := v_vlr_ctb_64 + rec.vl_estorno_debido;
      --
      vn_fase := 22.14;
      -- 65 -- Saldos Credores
      v_vlr_ctb_65 := v_vlr_ctb_65 + 0;
      --
      vn_fase := 22.15;
      -- 66 -- Estorno de Créditos Ativo Imobilizado
      v_vlr_ctb_66 := v_vlr_ctb_66 + 0;
      --
      vn_fase := 22.16;
      -- 67 -- CFOP 5.606
      v_vlr_ctb_67 := v_vlr_ctb_67 + 0;
      --
      vn_fase := 22.17;
      -- 68 -- Imposto Dilatado
      v_vlr_ctb_68 := v_vlr_ctb_68 + 0;
      --
      vn_fase := 22.18;
      -- 69 -- créditos acumulados CISCRED
      v_vlr_ctb_69 := v_vlr_ctb_69 + 0;
      --
      vn_fase := 22.19;
      -- 70 -- Preenchimento Automático
      v_vlr_ctb_70 := v_vlr_ctb_70 + 0;
      --
   end loop; -- Débitos de ICMS
   --
   vn_fase := 23;
   -- Valores de Serviços EE e Comunicacao
   for rec in c_det_cfop_sc loop
      exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
      --
      vn_fase := 24;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vn_vl_imp_trib_ipi     := 0;
      --
      vn_fase := 25;
      -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo -- EE e Comunicacao
      pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                     sv_cod_st_icms       => vv_cod_st_icms,
                                     sn_cfop              => vn_cfop,
                                     sn_aliq_icms         => vn_aliq_icms,
                                     sn_vl_operacao       => vn_vl_contabil,
                                     sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                     sn_vl_icms           => vn_vl_imp_trib_icms,
                                     sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                     sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                     sn_vl_ipi            => vn_vl_imp_trib_ipi, -- não utilizado
                                     sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                     sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
      --
      vn_fase := 26;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 27;
         --
         if rec.dm_ind_oper = 0 then -- 0 - Entradas
            --
            vn_fase := 28;
            --
            if rec.cod_mod in ('06','28','29') then  -- EE
               if vn_cfop in (1153, 1207, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 2153, 2207, 2251, 2253, 2254, 2255, 2256, 2257, 3207, 3251) then --or
                  --(vn_cfop >= 3207 or vn_cfop <= 3251) then
                  --
                  vn_fase := 28.1;
                  -- 17 -- Energia Elétrica - Valor Contabil
                  v_vlr_ctb_17 := v_vlr_ctb_17 + vn_vl_contabil;
                  --
                  vn_fase := 28.2;
                  -- 27 -- Energia Elétrica - Base de Cálculo
                  v_vlr_bsc_27 := v_vlr_bsc_27 + vn_vl_base_calc_icms;
                  --
               end if;
               --
            elsif rec.cod_mod in ('21','22') then -- Comunicacao
                  if vn_cfop in (1205, 1301, 1302, 1303, 1304, 1305, 1306, 2205, 2301, 2302, 2303, 2304, 2305, 2306, 3205, 3301) then -- or
                     --(vn_cfop >= 3205 or vn_cfop <= 3301) then
                     --
                     vn_fase := 28.3;
                     -- 18 -- Serviço de Comunicação - Valor Contabil
                     v_vlr_ctb_18 := v_vlr_ctb_18 + vn_vl_contabil;
                     --
                     vn_fase := 28.4;
                     -- 28 -- Serviços de Comunicação - Base de Cálculo
                     v_vlr_bsc_28 := v_vlr_bsc_28 + vn_vl_base_calc_icms;
                     --
                  end if;
                  --
            end if;
            --
         end if;
         --
      end if;
      --
   end loop; -- SC
   --
   vn_fase := 29;
   --
   for rec in c_det_cfop_ct loop
      exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
      --
      vn_fase := 30;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      --
      vn_fase := 31;
      --
      -- recupera os valores de impostos
      pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                             sv_cod_st_icms       => vv_cod_st_icms,
                                             sn_cfop              => vn_cfop,
                                             sn_aliq_icms         => vn_aliq_icms,
                                             sn_vl_opr            => vn_vl_contabil,
                                             sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                             sn_vl_icms           => vn_vl_imp_trib_icms,
                                             sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                             sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
      --
      vn_fase := 32;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 33;
         --
         if rec.dm_ind_oper = '0' then
            --
            -- 0 - entradas
            --
            vn_fase := 34;
            --
            if vn_cfop in (1101, 1102, 1111, 1113, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1151, 1152, 1154, 1201, 1202,
                           1203, 1204, 1206, 1208, 1209, 1351, 1352, 1353, 1354, 1355, 1356, 1501, 1503, 1504, 1651, 1658, 1660, 1932) then
               --
               vn_fase := 34.1;
               -- 11 -- Valor Entrada de Mercadorias e Serviços do Estado
               v_vlr_ctb_11 := v_vlr_ctb_11 + vn_vl_contabil;
               --
               vn_fase := 34.2;
               -- 21 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços do Estado
               v_vlr_bsc_21 := v_vlr_bsc_21 + vn_vl_base_calc_icms;
               --
            elsif vn_cfop in (2101, 2102, 2111, 2113, 2116, 2117, 2118, 2120, 2121, 2122, 2124, 2123, 2124, 2125, 2126, 2151, 2152, 2154, 2201,
                              2202, 2203, 2204, 2206, 2208, 2209, 2351, 2352, 2353, 2354, 2355, 2356, 2501, 2503, 2504, 2651, 2658, 2660, 2932 ) then
                  --
                  vn_fase := 34.3;
                  -- 13 -- Valor Entrada de Mercadorias e Serviços de Outros Estados
                  -- Detalhes Interestaduais
                  v_vlr_ctb_13 := v_vlr_ctb_13 + vn_vl_contabil;
                  --
                  vn_fase := 34.4;
                  -- 23 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços de Outros Estados
                  v_vlr_bsc_23 := v_vlr_bsc_23 + vn_vl_base_calc_icms;
                  --
            elsif vn_cfop in (3101, 3102, 3126, 3127, 3201, 3202, 3206, 3211, 3351, 3352, 3353, 3354, 3355, 3356, 3503, 3651, 3930, 3949) then
                  --
                  vn_fase := 34.5;
                  -- 14 -- Valor Entrada de Mercadorias e Serviços no Exterior
                  v_vlr_ctb_14 := v_vlr_ctb_14 + vn_vl_contabil;
                  --
                  vn_fase := 34.6;
                  -- 24 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços no Exterior
                  v_vlr_bsc_24 := v_vlr_bsc_24 + vn_vl_base_calc_icms;
                  --
            elsif vn_cfop in (1401, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1414, 1415, 1652, 1653, 1659, 1661, 1662, 2401, 2403, 2406, 2407,
                              2408, 2409, 2410, 2411, 2414, 2415, 2652, 2653, 2659, 2661, 2662, 3652, 3653 ) then
                  --
                  vn_fase := 34.7;
                  -- 15 -- Valor Entrada de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_ctb_15 := v_vlr_ctb_15 + 0;
                  --
                  vn_fase := 34.8;
                  -- 25 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_bsc_25 := v_vlr_bsc_25 + 0;
                  --
            elsif vn_cfop in (1551, 1552, 1553, 1554, 1555, 1556, 1557, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 3551, 3553, 3554, 3555, 3556) then
                  --
                  vn_fase := 34.9;
                  -- 16 -- Ativo Imobilizado - Valor Contábil
                  v_vlr_ctb_16 := v_vlr_ctb_16 + vn_vl_contabil;
                  --
                  vn_fase := 34.10;
                  -- 26 -- Ativo Imobilizado - base de cálculo
                  v_vlr_bsc_26 := v_vlr_bsc_26 + vn_vl_base_calc_icms;
                  --
            else
               --
               vn_fase := 34.11;
               -- 19 -- Cfops nao classificados anteriormente
               v_vlr_ctb_19 := v_vlr_ctb_19 + vn_vl_contabil;
               --
               vn_fase := 34.12;
               -- 29 -- Cfops nao classificados anteriormente
               v_vlr_bsc_29 := v_vlr_bsc_29 + vn_vl_base_calc_icms;
               --
            end if;
            --
         else  --  1-Saida - registro
            --
            -- Quadro 08 - Valores Fiscais: Valor Contábil - Saídas
            -- (5.101, 5102,5103,5104,5105, 5106, 5.109 a 5.120, 5.122 a 5.125, 5.151 a 5.153, 5.155, 5.156, 5.201, 5.202, 5.205 a 5.210,
            --  5.251 a 5.258, 5.301 a 5.307, 5.351 a 5.357, 5.359, 5.501, 5.502, 5.503, 5.651, 5.658, 5.660 e 5.932)
            --
            vn_fase := 35;
            --
            if substr(vn_cfop,1,2) in (51,52,53) or
               vn_cfop in (5501,5502,5503,5651,5658,5660,5932)  then
               --
               vn_fase := 35.1;
               -- 31 -- Valor Saída de Mercadorias e Serviços do Estado
               v_vlr_ctb_31 := v_vlr_ctb_31 + vn_vl_contabil;
               --
               vn_fase := 35.2;
               -- 41 -- Valor Base de Cálculo Saída de Mercadorias e Serviços do Estado
               v_vlr_bsc_41 := v_vlr_bsc_41 + vn_vl_base_calc_icms;
               --
            elsif substr(vn_cfop,1,2) in (61,62,63) or -- 6.101 a 6.120, 6.122 a 6.125, 6.151 a 6.153, 6.155, 6.156, 6.201, 6.202, 6.205 a 6.210,
                                                       -- 6.251 a 6.258, 6.301 a 6.307, 6.351 a 6.357, 6.359, 6.501, 6.502, 6.503, 6.651, 6.658, 6.660 e 6.932
                  vn_cfop in (6501, 6502, 6503, 6651, 6658, 6660 , 6932) then
                  --
                  vn_fase := 35.3;
                  -- 33 -- Valor Saída de Mercadorias e Serviços de Outros Estados
                  v_vlr_ctb_33 := v_vlr_ctb_33 + vn_vl_contabil;
                  --
                  vn_fase := 35.4;
                  -- 43 -- Valor Base de Cálculo Saída de Mercadorias e Serviços de Outros Estados
                  v_vlr_bsc_43 := v_vlr_bsc_43 + vn_vl_base_calc_icms;
                  --
            elsif (substr(vn_cfop,1,1) = 7 and vn_cfop not in (7551,7553,7556)) then
                  --
                  vn_fase := 35.5;
                  -- 34 -- Valor Saída de Mercadorias e Serviços no Exterior
                  v_vlr_ctb_34 := v_vlr_ctb_34 + vn_vl_contabil;
                  --
                  vn_fase := 35.6;
                  -- 44 -- Valor Base de Cálculo Saída de Mercadorias e Serviços no Exterior
                  v_vlr_bsc_44 := v_vlr_bsc_44 + vn_vl_base_calc_icms;
                  --
            elsif substr(vn_cfop,1,2) in (54,56,64,66) then
                  --
                  vn_fase := 35.7;
                  -- 35 -- Valor Saída de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_ctb_35 := v_vlr_ctb_35 + 0;
                  --
                  vn_fase := 35.8;
                  -- 45 -- Valor Base de Cálculo Saída de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_bsc_45 := v_vlr_bsc_45 + 0;
                  --
            elsif substr(vn_cfop,1,2) in (55,65,75) then
                  --
                  vn_fase := 35.9;
                  -- 36 -- Ativo Imobilizado - Valor contabil
                  v_vlr_ctb_36 := v_vlr_ctb_36 + vn_vl_contabil;
                  --
                  vn_fase := 35.10;
                  -- 46 -- Ativo Imobilizado - base de calculo
                  v_vlr_bsc_46 := v_vlr_bsc_46 + vn_vl_base_calc_icms;
                  --
            else
               --
               vn_fase := 35.11;
               -- 39 -- Cfops nao classificados anteriormente
               v_vlr_ctb_39 := v_vlr_ctb_39 + vn_vl_contabil;
               --
               vn_fase := 35.12;
               -- 49 -- Cfops nao classificados anteriormente
               v_vlr_bsc_49 := v_vlr_bsc_49 + vn_vl_base_calc_icms;
               --
            end if;
            --
         end if; -- indicador de operação: 0-entrada, 1-saída
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- c_det_cfop_ct
   --
   vn_fase := 36;
   --
   for rec in c_det_cfop_ecf loop
     exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
      --
      vn_fase := 37;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      --
      vn_fase := 38;
      --
      -- Recupera valores fiscais (ICMS) do conhecimento de transporte
      pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                        sv_cod_st_icms         => vv_cod_st_icms,
                                        sn_cfop                => vn_cfop,
                                        sn_aliq_icms           => vn_aliq_icms,
                                        sn_vl_opr              => vn_vl_contabil,
                                        sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                        sn_vl_icms             => vn_vl_imp_trib_icms,
                                        sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                        sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
      --
      vn_fase := 39;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 40;
         --
         if substr(vn_cfop,1,1) in (1, 2, 3) then
            --
            vn_fase := 41;
            --
            if vn_cfop in (1101, 1102, 1111, 1113, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1151, 1152, 1154, 1201, 1202,
                           1203, 1204, 1206, 1208, 1209, 1351, 1352, 1353, 1354, 1355, 1356, 1501, 1503, 1504, 1651, 1658, 1660, 1932) then
               --
               vn_fase := 41.1;
               -- 11 -- Valor Entrada de Mercadorias e Serviços do Estado
               v_vlr_ctb_11 := v_vlr_ctb_11 + vn_vl_contabil;
               --
               vn_fase := 41.2;
               -- 21 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços do Estado
               v_vlr_bsc_21 := v_vlr_bsc_21 + vn_vl_base_calc_icms;
               --
            elsif vn_cfop in (2101, 2102, 2111, 2113, 2116, 2117, 2118, 2120, 2121, 2122, 2124, 2123, 2124, 2125, 2126, 2151, 2152, 2154, 2201,
                              2202, 2203, 2204, 2206, 2208, 2209, 2351, 2352, 2353, 2354, 2355, 2356, 2501, 2503, 2504, 2651, 2658, 2660, 2932 ) then
                  --
                  vn_fase := 41.3;
                  -- 13 -- Valor Entrada de Mercadorias e Serviços de Outros Estados
                  -- Detalhes Interestaduais
                  v_vlr_ctb_13 := v_vlr_ctb_13 + vn_vl_contabil;
                  --
                  vn_fase := 41.4;
                  -- 23 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços de Outros Estados
                  v_vlr_bsc_23 := v_vlr_bsc_23 + vn_vl_base_calc_icms;
                  --
            elsif vn_cfop in (3101, 3102, 3126, 3127, 3201, 3202, 3206, 3211, 3351, 3352, 3353, 3354, 3355, 3356, 3503, 3651, 3930, 3949) then
                  --
                  vn_fase := 41.5;
                  -- 14 -- Valor Entrada de Mercadorias e Serviços no Exterior
                  v_vlr_ctb_14 := v_vlr_ctb_14 + vn_vl_contabil;
                  --
                  vn_fase := 41.6;
                  -- 24 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços no Exterior
                  v_vlr_bsc_24 := v_vlr_bsc_24 + vn_vl_base_calc_icms;
                  --
            elsif vn_cfop in (1401, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1414, 1415, 1652, 1653, 1659, 1661, 1662, 2401, 2403, 2406, 2407,
                              2408, 2409, 2410, 2411, 2414, 2415, 2652, 2653, 2659, 2661, 2662, 3652, 3653 ) then
                  --
                  vn_fase := 41.7;
                  -- 15 -- Valor Entrada de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_ctb_15 := v_vlr_ctb_15 + 0;
                  --
                  vn_fase := 41.8;
                  -- 25 -- Valor Base de Cálculo Entrada de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_bsc_25 := v_vlr_bsc_25 + 0;
                  --
            elsif vn_cfop in (1551, 1552, 1553, 1554, 1555, 1556, 1557, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 3551, 3553, 3554, 3555, 3556) then
                  --
                  vn_fase := 41.9;
                  -- 16 -- Ativo Imobilizado - Valor Contábil
                  v_vlr_ctb_16 := v_vlr_ctb_16 + vn_vl_contabil;
                  --
                  vn_fase := 41.10;
                  -- 26 -- Ativo Imobilizado - base de cálculo
                  v_vlr_bsc_26 := v_vlr_bsc_26 + vn_vl_base_calc_icms;
                  --
            else
               --
               vn_fase := 41.11;
               -- 19 -- Cfops nao classificados anteriormente
               v_vlr_ctb_19 := v_vlr_ctb_19 + vn_vl_contabil;
               --
               vn_fase := 41.12;
               -- 29 -- Cfops nao classificados anteriormente
               v_vlr_bsc_29 := v_vlr_bsc_29 + vn_vl_base_calc_icms;
               --
            end if;
            --
         else  --  1-Saida - registro
            --
            -- Quadro 08 - Valores Fiscais: Valor Contábil - Saídas
            -- (5.101, 5102,5103,5104,5105, 5106, 5.109 a 5.120, 5.122 a 5.125, 5.151 a 5.153, 5.155, 5.156, 5.201, 5.202, 5.205 a 5.210,
            --  5.251 a 5.258, 5.301 a 5.307, 5.351 a 5.357, 5.359, 5.501, 5.502, 5.503, 5.651, 5.658, 5.660 e 5.932)
            --
            vn_fase := 42;
            --
            if substr(vn_cfop,1,2) in (51,52,53) or
               vn_cfop in (5501,5502,5503,5651,5658,5660,5932)  then
               --
               vn_fase := 42.1;
               -- 31 -- Valor Saída de Mercadorias e Serviços do Estado
               v_vlr_ctb_31 := v_vlr_ctb_31 + vn_vl_contabil;
               --
               vn_fase := 42.2;
               -- 41 -- Valor Base de Cálculo Saída de Mercadorias e Serviços do Estado
               v_vlr_bsc_41 := v_vlr_bsc_41 + vn_vl_base_calc_icms;
               --
            elsif substr(vn_cfop,1,2) in (61,62,63) or -- 6.101 a 6.120, 6.122 a 6.125, 6.151 a 6.153, 6.155, 6.156, 6.201, 6.202, 6.205 a 6.210,
                                                       -- 6.251 a 6.258, 6.301 a 6.307, 6.351 a 6.357, 6.359, 6.501, 6.502, 6.503, 6.651, 6.658, 6.660 e 6.932
                  vn_cfop in (6501, 6502, 6503, 6651, 6658, 6660 , 6932) then
                  --
                  vn_fase := 42.3;
                  -- 33 -- Valor Saída de Mercadorias e Serviços de Outros Estados
                  v_vlr_ctb_33 := v_vlr_ctb_33 + vn_vl_contabil;
                  --
                  vn_fase := 42.4;
                  -- 43 -- Valor Base de Cálculo Saída de Mercadorias e Serviços de Outros Estados
                  v_vlr_bsc_43 := v_vlr_bsc_43 + vn_vl_base_calc_icms;
                  --
            elsif (substr(vn_cfop,1,1) = 7 and vn_cfop not in (7551,7553,7556)) then
                  --
                  vn_fase := 42.5;
                  -- 34 -- Valor Saída de Mercadorias e Serviços no Exterior
                  v_vlr_ctb_34 := v_vlr_ctb_34 + vn_vl_contabil;
                  --
                  vn_fase := 42.6;
                  -- 44 -- Valor Base de Cálculo Saída de Mercadorias e Serviços no Exterior
                  v_vlr_bsc_44 := v_vlr_bsc_44 + vn_vl_base_calc_icms;
                  --
            elsif substr(vn_cfop,1,2) in (54,56,64,66) then
                  --
                  vn_fase := 42.7;
                  -- 35 -- Valor Saída de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_ctb_35 := v_vlr_ctb_35 + 0;
                  --
                  vn_fase := 42.8;
                  -- 45 -- Valor Base de Cálculo Saída de Mercadorias e Serviços do Estado e Outras UFs
                  v_vlr_bsc_45 := v_vlr_bsc_45 + 0;
                  --
            elsif substr(vn_cfop,1,2) in (55,65,75) then
                  --
                  vn_fase := 42.9;
                  -- 36 -- Ativo Imobilizado - Valor contabil
                  v_vlr_ctb_36 := v_vlr_ctb_36 + vn_vl_contabil;
                  --
                  vn_fase := 42.10;
                  -- 46 -- Ativo Imobilizado - base de calculo
                  v_vlr_bsc_46 := v_vlr_bsc_46 + vn_vl_base_calc_icms;
                  --
            else
               --
               vn_fase := 42.11;
               -- 39 -- Cfops nao classificados anteriormente
               v_vlr_ctb_39 := v_vlr_ctb_39 + vn_vl_contabil;
               --
               vn_fase := 42.12;
               -- 49 -- Cfops nao classificados anteriormente
               v_vlr_bsc_49 := v_vlr_bsc_49 + vn_vl_base_calc_icms;
               --
            end if;
            --
         end if; -- indicador de cfop: 1,2,3-entrada, 5,6,7-saída
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- c_det_cfop_ecf
   --
   vn_fase := 43;
   -- preenche vetores
   begin
      --
      vv_insc_est := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0);-- Inscrição Estadual
      vv_dt_ref   := to_char(gt_row_abertura_gia.dt_fin,'RRRRMM');
      --
      vn_fase := 43.1;
      --
      -- pkb_insere_vetor( v_idx, v_tip_reg, v_inscr_est, v_dt_ref, v_tip_gia, v_linha, v_vlr_linha )
      --
      if nvl(v_vlr_ctb_02,0) <> 0 then
         pkb_insere_vetor(1, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '02', v_vlr_ctb_02 );
      end if;
      --
      vn_fase := 43.2;
      --
      if nvl(v_vlr_ctb_04,0) <> 0 then
         pkb_insere_vetor(2, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '04', v_vlr_ctb_04 );
      end if;
      --
      vn_fase := 43.3;
      --
      if nvl(v_vlr_ctb_06,0) <> 0 then
         pkb_insere_vetor(3, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '06', v_vlr_ctb_06 );
      end if;
      --
      vn_fase := 43.4;
      --
      if nvl(v_vlr_ctb_10,0) <> 0 then
         pkb_insere_vetor(4, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '10', v_vlr_ctb_10 );
      end if;
      --
      vn_fase := 43.5;
      --
      if nvl(v_vlr_ctb_11,0) <> 0 then
         pkb_insere_vetor(5, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '11', v_vlr_ctb_11 );
      end if;
      --
      vn_fase := 43.6;
      --
      if nvl(v_vlr_ctb_13,0) <> 0 then
         pkb_insere_vetor(6, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '13', v_vlr_ctb_13 );
      end if;
      --
      vn_fase := 43.7;
      --
      if nvl(v_vlr_ctb_14,0) <> 0 then
         pkb_insere_vetor(7, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '14', v_vlr_ctb_14 );
      end if;
      --
      vn_fase := 43.8;
      --
      if nvl(v_vlr_ctb_15,0) <> 0 then
         pkb_insere_vetor(8, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '15', v_vlr_ctb_15 );
      end if;
      --
      vn_fase := 43.9;
      --
      if nvl(v_vlr_ctb_16,0) <> 0 then
         pkb_insere_vetor(9, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '16', v_vlr_ctb_16 );
      end if;
      --
      vn_fase := 43.10;
      --
      if nvl(v_vlr_ctb_17,0) <> 0 then
         pkb_insere_vetor(10, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '17', v_vlr_ctb_17 );
      end if;
      --
      vn_fase := 43.11;
      --
      if nvl(v_vlr_ctb_18,0) <> 0 then
         pkb_insere_vetor(11, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '18', v_vlr_ctb_18 );
      end if;
      --
      vn_fase := 43.12;
      --
      if nvl(v_vlr_ctb_19,0) <> 0 then
         pkb_insere_vetor(12, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '19', v_vlr_ctb_19 );
      end if;
      --
      vn_fase := 43.13;
      --
      if nvl(v_vlr_ctb_20,0) <> 0 then
         pkb_insere_vetor(13, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '20', v_vlr_ctb_20 );
      end if;
      --
      vn_fase := 43.14;
      --
      if nvl(v_vlr_bsc_21,0) <> 0 then
         pkb_insere_vetor(14, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '21', v_vlr_bsc_21 );
      end if;
      --
      vn_fase := 43.15;
      --
      if nvl(v_vlr_bsc_23,0) <> 0 then
         pkb_insere_vetor(15, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '23', v_vlr_bsc_23 );
      end if;
      --
      vn_fase := 43.16;
      --
      if nvl(v_vlr_bsc_24,0) <> 0 then
         pkb_insere_vetor(16, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '24', v_vlr_bsc_24 );
      end if;
      --
      vn_fase := 43.17;
      --
      if nvl(v_vlr_bsc_25,0) <> 0 then
         pkb_insere_vetor(17, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '25', v_vlr_bsc_25 );
      end if;
      --
      vn_fase := 43.18;
      --
      if nvl(v_vlr_bsc_26,0) <> 0 then
         pkb_insere_vetor(18, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '26', v_vlr_bsc_26 );
      end if;
      --
      vn_fase := 43.19;
      --
      if nvl(v_vlr_bsc_27,0) <> 0 then
         pkb_insere_vetor(19, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '27', v_vlr_bsc_27 );
      end if;
      --
      vn_fase := 43.20;
      --
      if nvl(v_vlr_bsc_28,0) <> 0 then
         pkb_insere_vetor(20, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '28', v_vlr_bsc_28 );
      end if;
      --
      vn_fase := 43.21;
      --
      if nvl(v_vlr_bsc_29,0) <> 0 then
         pkb_insere_vetor(21, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '29', v_vlr_bsc_29 );
      end if;
      --
      vn_fase := 43.22;
      --
      if nvl(v_vlr_bsc_30,0) <> 0 then
         pkb_insere_vetor(22, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '30', v_vlr_bsc_30 );
      end if;
      --
      vn_fase := 43.23;
      --
      if nvl(v_vlr_ctb_31,0) <> 0 then
         pkb_insere_vetor(23, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '31', v_vlr_ctb_31 );
      end if;
      --
      vn_fase := 43.24;
      --
      if nvl(v_vlr_ctb_33,0) <> 0 then
         pkb_insere_vetor(24, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '33', v_vlr_ctb_33 );
      end if;
      --
      vn_fase := 43.25;
      --
      if nvl(v_vlr_ctb_34,0) <> 0 then
         pkb_insere_vetor(25, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '34', v_vlr_ctb_34 );
      end if;
      --
      vn_fase := 43.26;
      --
      if nvl(v_vlr_ctb_35,0) <> 0 then
         pkb_insere_vetor(26, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '35', v_vlr_ctb_35 );
      end if;
      --
      vn_fase := 43.27;
      --
      if nvl(v_vlr_ctb_36,0) <> 0 then
         pkb_insere_vetor(27, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '36', v_vlr_ctb_36 );
      end if;
      --
      vn_fase := 43.28;
      --
      if nvl(v_vlr_ctb_39,0) <> 0 then
         pkb_insere_vetor(28, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '39', v_vlr_ctb_39 );
      end if;
      --
      vn_fase := 43.29;
      --
      if nvl(v_vlr_bsc_40,0) <> 0 then
         pkb_insere_vetor(29, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '40', v_vlr_bsc_40 ); -- preenchimento automatico
      end if;
      --
      vn_fase := 43.30;
      --
      if nvl(v_vlr_bsc_41,0) <> 0 then
         pkb_insere_vetor(30, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '41', v_vlr_bsc_41 );
      end if;
      --
      vn_fase := 43.31;
      --
      if nvl(v_vlr_bsc_43,0) <> 0 then
         pkb_insere_vetor(31, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '43', v_vlr_bsc_43 );
      end if;
      --
      vn_fase := 43.32;
      --
      if nvl(v_vlr_bsc_44,0) <> 0 then
         pkb_insere_vetor(32, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '44', v_vlr_bsc_44 );
      end if;
      --
      vn_fase := 43.33;
      --
      if nvl(v_vlr_bsc_45,0) <> 0 then
         pkb_insere_vetor(33, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '45', v_vlr_bsc_45 );
      end if;
      --
      vn_fase := 43.34;
      --
      if nvl(v_vlr_bsc_46,0) <> 0 then
         pkb_insere_vetor(34, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '46', v_vlr_bsc_46 );
      end if;
      --
      vn_fase := 43.35;
      --
      if nvl(v_vlr_bsc_49,0) <> 0 then
         pkb_insere_vetor(35, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '49', v_vlr_bsc_49 );
      end if;
      --
      vn_fase := 43.36;
      --
      if nvl(v_vlr_bsc_50,0) <> 0 then
         pkb_insere_vetor(36, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '50', v_vlr_bsc_50 ); -- preenchimento automatico
      end if;
      --
      vn_fase := 43.37;
      --
      if nvl(v_vlr_ctb_51,0) <> 0 then
         pkb_insere_vetor(37, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '51', v_vlr_ctb_51 );
      end if;
      --
      vn_fase := 43.38;
      --
      if nvl(v_vlr_ctb_52,0) <> 0 then
         pkb_insere_vetor(38, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '52', v_vlr_ctb_52 );
      end if;
      --
      vn_fase := 43.39;
      --
      if nvl(v_vlr_ctb_53,0) <> 0 then
         pkb_insere_vetor(39, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '53', v_vlr_ctb_53 );
      end if;
      --
      vn_fase := 43.40;
      --
      if nvl(v_vlr_ctb_54,0) <> 0 then
         pkb_insere_vetor(40, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '54', v_vlr_ctb_54 );
      end if;
      --
      vn_fase := 43.41;
      --
      if nvl(v_vlr_ctb_55,0) <> 0 then
         pkb_insere_vetor(41, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '55', v_vlr_ctb_55 );
      end if;
      --
      vn_fase := 43.42;
      --
      if nvl(v_vlr_ctb_56,0) <> 0 then
         pkb_insere_vetor(42, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '56', v_vlr_ctb_56 );
      end if;
      --
      vn_fase := 43.43;
      --
      if nvl(v_vlr_ctb_57,0) <> 0 then
         pkb_insere_vetor(43, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '57', v_vlr_ctb_57 );
      end if;
      --
      vn_fase := 43.44;
      --
      if nvl(v_vlr_ctb_58,0) <> 0 then
         pkb_insere_vetor(44, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '58', v_vlr_ctb_58 );
      end if;
      --
      vn_fase := 43.45;
      --
      if nvl(v_vlr_ctb_59,0) <> 0 then
         pkb_insere_vetor(45, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '59', v_vlr_ctb_59 );
      end if;
      --
      vn_fase := 43.46;
      --
      if nvl(v_vlr_ctb_60,0) <> 0 then
         pkb_insere_vetor(46, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '60', v_vlr_ctb_60 );
      end if;
      --
      vn_fase := 43.47;
      --
      if nvl(v_vlr_ctb_61,0) <> 0 then
         pkb_insere_vetor(47, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '61', v_vlr_ctb_61 );
      end if;
      --
      vn_fase := 43.48;
      --
      if nvl(v_vlr_ctb_62,0) <> 0 then
         pkb_insere_vetor(48, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '62', v_vlr_ctb_62 );
      end if;
      --
      vn_fase := 43.49;
      --
      if nvl(v_vlr_ctb_63,0) <> 0 then
         pkb_insere_vetor(49, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '63', v_vlr_ctb_63 );
      end if;
      --
      vn_fase := 43.50;
      --
      if nvl(v_vlr_ctb_64,0) <> 0 then
         pkb_insere_vetor(50, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '64', v_vlr_ctb_64 );
      end if;
      --
      vn_fase := 43.51;
      --
      if nvl(v_vlr_ctb_65,0) <> 0 then
         pkb_insere_vetor(51, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '65', v_vlr_ctb_65 );
      end if;
      --
      vn_fase := 43.52;
      --
      if nvl(v_vlr_ctb_66,0) <> 0 then
         pkb_insere_vetor(52, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '66', v_vlr_ctb_66 );
      end if;
      --
      vn_fase := 43.53;
      --
      if nvl(v_vlr_ctb_67,0) <> 0 then
         pkb_insere_vetor(53, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '67', v_vlr_ctb_67 );
      end if;
      --
      vn_fase := 43.54;
      --
      if nvl(v_vlr_ctb_68,0) <> 0 then
         pkb_insere_vetor(54, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '68', v_vlr_ctb_68 );
      end if;
      --
      vn_fase := 43.55;
      --
      if nvl(v_vlr_ctb_69,0) <> 0 then
         pkb_insere_vetor(55, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '69', v_vlr_ctb_69 );
      end if;
      --
      vn_fase := 43.56;
      --
      if nvl(v_vlr_ctb_70,0) <> 0 then
         pkb_insere_vetor(56, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '70', v_vlr_ctb_70 ); -- preenchimento automatico
      end if;
      --
      vn_fase := 43.57;
      --
      if nvl(v_vlr_ctb_80,0) <> 0 then
         pkb_insere_vetor(57, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '80', v_vlr_ctb_80 ); -- preenchimento automatico - Saldo Credor
      end if;
      --
      vn_fase := 43.58;
      --
      if nvl(v_vlr_ctb_90,0) <> 0 then
         pkb_insere_vetor(58, '2', vv_insc_est, vv_dt_ref, vt_tab_cab_gia(1).tip_gia, '90', v_vlr_ctb_90 ); -- preenchimento automatico - Saldo Devedor
      end if;
      --
   exception
      when others then
         raise_application_error(-20101, 'Problemas ao gerar vetores - fase ('||vn_fase||'): '||sqlerrm);
   end;
   --
   vn_fase := 44;
   -- procedimento monta a estrutura do arquivo da GIA - PR
   pkb_monta_estr_arq_gia_pr;
   --
exception
   when others then
      raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_pr fase ('||vn_fase||'): '||sqlerrm);
end pkb_gera_arq_gia_pr;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-RJ
------------------------------------------------
procedure pkb_gera_arq_gia_rj is
   --
   -- variáveis do controle do vetor
   i   pls_integer;
   j   pls_integer;
   -- variáveis do processo
   vn_fase                    number := 0;
   vb_achou                   boolean;
   --
   vv_nome                    pessoa.nome%type;
   vv_ddd                     pessoa.fone%type;
   vv_fone                    pessoa.fone%type;
   vv_email                   pessoa.email%type;
   vn_est_id_empresa          estado.id%type;
   --
   vn_soma_vl_trailer         number := 0;
   vn_soma_bc_st              number := 0;
   vn_soma_vlimp_st           number := 0;
   vn_seq_ocor                number := 0;
   --
   vn_vl_saldo_credor_ant     apuracao_icms.vl_saldo_credor_ant%type;
   vn_vl_saldo_cred_ant_st    apuracao_icms_st.vl_saldo_cred_ant_st%type;
   --
   vn_cfop                    cfop.cd%type := 0;
   vn_vl_contabil             number(15,2) := 0;
   vv_cod_st_icms             cod_st.cod_st%type := null;
   vn_vl_base_calc_icms       imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_icms               imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_icms        imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_base_calc_icmsst     imp_itemnf.vl_base_calc%type := 0;
   vn_vl_imp_trib_icmsst      imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_icms       imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_icms        imp_itemnf.vl_base_calc%type := 0;
   vv_cod_st_ipi              cod_st.cod_st%type := null;
   vn_vl_base_calc_ipi        imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_ipi                imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_ipi         imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_ipi        imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_ipi         imp_itemnf.vl_base_calc%type := 0;
   vn_ipi_nao_recup           number;
   vn_outro_ipi               number;
   vn_vl_imp_nao_dest_ipi     number;
   vn_vl_fcp_icmsst           number;
   vn_aliq_fcp_icms           number;
   vn_vl_fcp_icms             number;
   --
   vn_estado_id               estado.id%type;
   vn_cidade_id               cidade.id%type;
   vn_tipocodarq_id           tipo_cod_arq.id%type;
   vv_estadotipocodarq_cd     estado_tipo_cod_arq.cd%type;
   vv_cidadetipocodarq_cd     cidade_tipo_cod_arq.cd%type;
   vv_valortipoparam_cd       valor_tipo_param.cd%type := null;
   vn_ICMSCobradoST           imp_itemnf.vl_imp_trib%type := 0;
   vn_Outros_Produtos         imp_itemnf.vl_imp_trib%type := 0;
   vv_cnpj_dest               varchar2(14);
   vn_aux_est                 number(2);
   --
   vn_vlrcontnaocontr         number := 0;
   vn_vlrbasecalcnaocontr     number := 0;
   vn_vlrcontcontr            number := 0;
   vn_vlrbasecalccontr        number := 0;
   vv_suframa                 juridica.suframa%type;
   --
   -- TP0000-Registro Header
   type tab_tp0000 is record ( tp          number(4)
                             , DataHoraGer varchar2(14)
                             , IndGerador  varchar2(1)
                             , VersaoAplic varchar2(10)
                             );
   --
   type t_tab_tp0000 is table of tab_tp0000 index by binary_integer;
   vt_tab_tp0000 t_tab_tp0000;
   --
   -- TP0110-Identificador da declaração
   type tab_tp0110 is record ( tp                number(4)
                             , IdentDecl         number(15)
                             , IE                varchar(8)
                             , AnoRefer          number(4)
                             , MesRefer          number(2)
                             , IndRetif          varchar2(1)
                             , IndPeriod         varchar2(1)
                             , NomRepres         varchar2(64)
                             , DDDRepres         varchar2(4)
                             , TelRepres         varchar2(8)
                             , NomContab         varchar2(64)
                             , CorrEletr         varchar2(40)
                             , DDDContab         varchar2(4)
                             , TelContab         varchar2(8)
                             , VlrSdoAnt         number(15)
                             , VlrSdoAntST       number(15)
                             , Obs               varchar2(255)
                             , ObsST             varchar2(255)
                             , VlrSdoAntSCE      number(15)
                             , VlrCredEnerSCE    number(15)
                             , VlrEstProvSCE     number(15)
                             , VlrProvSCE        number(15)
                             , IndSemMovOperProp varchar2(1)
                             , IndSemMovST       varchar2(1)
                             , IndSemMovOutrICMS varchar2(1)
                             , IndSemMovAlcZFM   varchar2(1)
                             );
   --
   type t_tab_tp0110 is table of tab_tp0110 index by binary_integer;
   vt_tab_tp0110 t_tab_tp0110;
   --
   -- TP0120-Movimentação de entradas
   type tab_tp0120 is record ( tp               number(4)
                             , IdentDecl        number(15)
                             , CFOP             number(4)
                             , VlrContabil      number(15)
                             , VlrBaseCalculo   number(15)
                             , VlrImposto       number(15)
                             , VlrOperIsentas   number(15)
                             , VlrOutrasOper    number(15)
                             , VlrBaseCalculoST number(15)
                             , VlrImpRetidoST   number(15)
                             );
   --
   type t_tab_tp0120 is table of tab_tp0120 index by binary_integer;
   type t_bi_tab_tp0120 is table of t_tab_tp0120 index by binary_integer;
   vt_bi_tab_tp0120 t_bi_tab_tp0120;
   --
   -- TP0130-Movimentação de saídas
   type tab_tp0130 is record ( tp               number(4)
                             , IdentDecl        number(15)
                             , CFOP             number(4)
                             , VlrContabil      number(15)
                             , VlrBaseCalculo   number(15)
                             , VlrImposto       number(15)
                             , VlrOperIsentas   number(15)
                             , VlrOutrasOper    number(15)
                             , VlrBaseCalculoST number(15)
                             , VlrImpRetidoST   number(15)
                             );
   --
   type t_tab_tp0130 is table of tab_tp0130 index by binary_integer;
   type t_bi_tab_tp0130 is table of t_tab_tp0130 index by binary_integer;
   vt_bi_tab_tp0130 t_bi_tab_tp0130;
   --
   -- TP0140-Movimentação de outros débitos
   type tab_tp0140 is record ( tp          number(4)
                             , IdentDecl   number(15)
                             , SeqOcor     number(5)
                             , VlrOutroDeb number(15)
                             , DescrCompl  varchar2(150)
                             , VlrCompl1   varchar2(120)
                             , VlrCompl2   varchar2(120)
                             , VlrCompl3   varchar2(120)
                             , VlrCompl4   varchar2(120)
                             , VlrCompl5   varchar2(120)
                             );
   --
   type t_tab_tp0140 is table of tab_tp0140 index by binary_integer;
   type t_bi_tab_tp0140 is table of t_tab_tp0140 index by binary_integer;
   vt_bi_tab_tp0140 t_bi_tab_tp0140;
   --
   -- TP0150-Movimentação de estornos de créditos
   type tab_tp0150 is record ( tp           number(4)
                             , IdentDecl    number(15)
                             , SeqOcor      number(5)
                             , VlrEstorCred number(15)
                             , DescrCompl   varchar2(150)
                             , VlrCompl1    varchar2(120)
                             , VlrCompl2    varchar2(120)
                             , VlrCompl3    varchar2(120)
                             , VlrCompl4    varchar2(120)
                             , VlrCompl5    varchar2(120)
                             );
   --
   type t_tab_tp0150 is table of tab_tp0150 index by binary_integer;
   type t_bi_tab_tp0150 is table of t_tab_tp0150 index by binary_integer;
   vt_bi_tab_tp0150 t_bi_tab_tp0150;
   --
   -- TP0160-Movimentação de outros créditos
   type tab_tp0160 is record ( tp           number(4)
                             , IdentDecl    number(15)
                             , SeqOcor      number(5)
                             , VlrOutroCred number(15)
                             , DescrCompl   varchar2(150)
                             , VlrCompl1    varchar2(120)
                             , VlrCompl2    varchar2(120)
                             , VlrCompl3    varchar2(120)
                             , VlrCompl4    varchar2(120)
                             , VlrCompl5    varchar2(120)
                             );
   --
   type t_tab_tp0160 is table of tab_tp0160 index by binary_integer;
   type t_bi_tab_tp0160 is table of t_tab_tp0160 index by binary_integer;
   vt_bi_tab_tp0160 t_bi_tab_tp0160;
   --
   -- TP0170-Movimentação de estornos de débitos
   type tab_tp0170 is record ( tp          number(4)
                             , IdentDecl   number(15)
                             , SeqOcor     number(5)
                             , VlrEstorDeb number(15)
                             , DescrCompl  varchar2(150)
                             , VlrCompl1   varchar2(120)
                             , VlrCompl2   varchar2(120)
                             , VlrCompl3   varchar2(120)
                             , VlrCompl4   varchar2(120)
                             , VlrCompl5   varchar2(120)
                             );
   --
   type t_tab_tp0170 is table of tab_tp0170 index by binary_integer;
   type t_bi_tab_tp0170 is table of t_tab_tp0170 index by binary_integer;
   vt_bi_tab_tp0170 t_bi_tab_tp0170;
   --
   -- TP0180-Movimentação de deduções
   type tab_tp0180 is record ( tp         number(4)
                             , IdentDecl  number(15)
                             , SeqOcor    number(5)
                             , VlrDeducao number(15)
                             , DescrCompl varchar2(150)
                             , VlrCompl1  varchar2(120)
                             , VlrCompl2  varchar2(120)
                             , VlrCompl3  varchar2(120)
                             , VlrCompl4  varchar2(120)
                             , VlrCompl5  varchar2(120)
                             );
   --
   type t_tab_tp0180 is table of tab_tp0180 index by binary_integer;
   type t_bi_tab_tp0180 is table of t_tab_tp0180 index by binary_integer;
   vt_bi_tab_tp0180 t_bi_tab_tp0180;
   --
   -- TP0190-Movimentação de operações com prazo especial
   type tab_tp0190 is record ( tp          number(4)
                             , IdentDecl   number(15)
                             , SeqOcor     number(5)
                             , VlrPrazoEsp number(15)
                             , DescrCompl  varchar2(150)
                             , VlrCompl1   varchar2(120)
                             , VlrCompl2   varchar2(120)
                             , VlrCompl3   varchar2(120)
                             , VlrCompl4   varchar2(120)
                             , VlrCompl5   varchar2(120)
                             );
   --
   type t_tab_tp0190 is table of tab_tp0190 index by binary_integer;
   type t_bi_tab_tp0190 is table of t_tab_tp0190 index by binary_integer;
   vt_bi_tab_tp0190 t_bi_tab_tp0190;
   --
   -- TP0200-Movimentação de outros icms devido
   type tab_tp0200 is record ( tp         number(4)
                             , IdentDecl  number(15)
                             , SeqOcor    number(5)
                             , VlrLancto  number(15)
                             , DescrCompl varchar2(150)
                             , VlrCompl1  varchar2(120)
                             , VlrCompl2  varchar2(120)
                             , VlrCompl3  varchar2(120)
                             , VlrCompl4  varchar2(120)
                             , VlrCompl5  varchar2(120)
                             );
   --
   type t_tab_tp0200 is table of tab_tp0200 index by binary_integer;
   type t_bi_tab_tp0200 is table of t_tab_tp0200 index by binary_integer;
   vt_bi_tab_tp0200 t_bi_tab_tp0200;
   --
   -- TP0210-Movimentações de entrada interestaduais
   type tab_tp0210 is record ( tp            number(4)
                             , IdentDecl     number(15)
                             , UF            varchar2(3)
                             , VlrContabil   number(15)
                             , VlrBaseCalc   number(15)
                             , VlrOutrasOper number(15)
                             , VlrPetrEner   number(15)
                             , VlrOutrProd   number(15)
                             );
   --
   type t_tab_tp0210 is table of tab_tp0210 index by binary_integer;
   type t_bi_tab_tp0210 is table of t_tab_tp0210 index by binary_integer;
   vt_bi_tab_tp0210 t_bi_tab_tp0210;
   --
   -- TP0220-Movimentações de saída interestaduais
   type tab_tp0220 is record ( tp                  number(4)
                             , IdentDecl           number(15)
                             , UF                  varchar2(3)
                             , VlrContNaoContr     number(15)
                             , VlrContContr        number(15)
                             , VlrBaseCalcNaoContr number(15)
                             , VlrBaseCalcContr    number(15)
                             , VlrOutrasOper       number(15)
                             , VlrImpCobradoST     number(15)
                             );
   --
   type t_tab_tp0220 is table of tab_tp0220 index by binary_integer;
   type t_bi_tab_tp0220 is table of t_tab_tp0220 index by binary_integer;
   vt_bi_tab_tp0220 t_bi_tab_tp0220;
   --
   -- TP0230-Movimentações de saída para ZFM/ALC
   type tab_tp0230 is record ( tp              number(4)
                             , IdentDecl       number(15)
                             , CodLocal        number(8)
                             , NroSerNF        varchar2(3)
                             , NroSubSerNF     varchar2(2)
                             , NroNF           number(6)
                             , DataEmissao     varchar2(14)
                             , VlrNF           number(15)
                             , VlrIsenta       number(15)
                             , NroCNPJ         number(14)
                             , NroInscrSuframa number(9)
                             );
   --
   type t_tab_tp0230 is table of tab_tp0230 index by binary_integer;
   type t_bi_tab_tp0230 is table of t_tab_tp0230 index by binary_integer;
   vt_bi_tab_tp0230 t_bi_tab_tp0230;
   --
   -- TP0240-Movimentação de SCE compensado entre estabelecimento - Não será gerado
   -- TP0250-Movimentação de SCE compensado do próprio - Não será gerado
   -- TP0260-Movimentação de SCE recebido - Não será gerado
   -- TP0270-Movimentação de SCE transferido - Não será gerado
   --
   -- Cursores
   cursor c_det_cfop is
   select nf.id    notafiscal_id
        , nf.dm_ind_oper -- 0-Entrada, 1-Saída
        , nf.dm_ind_emit  -- 0-Emissão Própria, 1-Terceiros
        , nf.pessoa_id
        , nf.dt_emiss
        , nf.nro_nf
        , nf.serie serie_nf
        , inf.id   itemnf_id
     from nota_fiscal      nf
        , mod_fiscal       mf
        , item_nota_fiscal inf
    where nf.empresa_id      = gt_row_abertura_gia.empresa_id
      and nf.dm_arm_nfe_terc = 0
      and nf.dm_st_proc      = 4 -- Autorizada
      and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('01', '1B', '04', '55', '65')
      and inf.notafiscal_id  = nf.id
    order by 1, 2;
   --
   cursor c_det_cfop_ct is
   select ct.id          conhectransp_id
        , ct.dm_ind_oper
        , ct.pessoa_id
        , ct.dt_hr_emissao dt_emiss
        , ct.nro_ct
        , ct.serie serie_ct
        , ct.subserie subserie_ct
        , r.id ctreganal_id
     from conhec_transp  ct
        , ct_reg_anal    r
    where ct.empresa_id      = gt_row_abertura_gia.empresa_id
      and ct.dm_st_proc      = 4 -- Autorizada
      and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      and ct.dm_arm_cte_terc = 0
      and r.conhectransp_id  = ct.id
    order by 1;
   --
   cursor c_det_cfop_sc is
   select nf.id       notafiscal_id
        , nf.dm_ind_oper
        , nf.pessoa_id
        , nf.dt_emiss
        , nf.nro_nf
        , nf.serie serie_nf
        , r.id nfregistanalit_id
     from nota_fiscal     nf
        , mod_fiscal      mf
        , nfregist_analit r
    where nf.empresa_id      = gt_row_abertura_gia.empresa_id
      and nf.dm_st_proc      = 4 -- Autorizada
      and nf.dm_arm_nfe_terc = 0
      and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('06', '29', '28', '21', '22')
      and r.notafiscal_id    = nf.id
    order by 1;
   --
   -- query cupom fiscal -- sempre saída
   cursor c_det_cfop_ecf is
   select r.id      reducaozecf_id
        , r.dt_doc  dt_emiss
        , ramd.id   reganalmovdiaecf_id
     from equip_ecf             e
        , reducao_z_ecf         r
        , reg_anal_mov_dia_ecf  ramd
    where e.empresa_id          = gt_row_abertura_gia.empresa_id
      and r.equipecf_id         = e.id
      and r.dm_st_proc          = 1 -- Validada
      and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
      and ramd.reducaozecf_id   = r.id
    order by 1;
   --
   cursor c_movtos (en_estado_id in number) is
   select '1'
        , sg.cd
        , ca.dm_util
        , sg.seq_ocor cod_seq_ocor
        , decode(trim(substr(ag.flegal,1,150)), null, trim(substr(sg.descr,1,150)), trim(substr(ag.flegal,1,150))) descr_compl
        , decode(trim(ag.compl_dados_1), null, trim(substr(ag.flegal,1,120)), trim(substr(ag.compl_dados_1,1,120))) vl_compl_1
        , decode(trim(ag.compl_dados_2), null, trim(substr(ag.descr_ocor,1,120)), trim(substr(ag.compl_dados_2,1,120))) vl_compl_2
        , trim(substr(ag.compl_dados_3,1,120)) vl_compl_3
        , nvl(sum(aa.vl_aj_apur),0) vl_aj_apur
     from apuracao_icms          ai
        , ajust_apuracao_icms    aa
        , cod_aj_saldo_apur_icms ca
        , ajust_apur_icms_gia    ag
        , subitem_gia            sg
    where ai.empresa_id           = gt_row_abertura_gia.empresa_id
      and ai.dm_situacao          = 3 -- 0-Aberto, 1-Calculada, 2-Erro no cálculo, 3-Processada, 4-Erro de validação
      and ai.dm_tipo              = 0 -- 0-Real, 1-Simulada
      and trunc(ai.dt_inicio)    >= gt_row_abertura_gia.dt_ini
      and trunc(ai.dt_fim)       <= gt_row_abertura_gia.dt_fin
      and aa.apuracaoicms_id      = ai.id
      and ca.id                   = aa.codajsaldoapuricms_id
      and ca.dm_apur              = 0 -- 0-icms, 1-icmsst
      and ag.ajustapuracaoicms_id = aa.id
      and sg.id                   = ag.subitemgia_id
      and sg.estado_id            = en_estado_id
    group by sg.cd
        , ca.dm_util
        , sg.seq_ocor
        , decode(trim(substr(ag.flegal,1,150)), null, trim(substr(sg.descr,1,150)), trim(substr(ag.flegal,1,150)))
        , decode(trim(ag.compl_dados_1), null, trim(substr(ag.flegal,1,120)), trim(substr(ag.compl_dados_1,1,120)))
        , decode(trim(ag.compl_dados_2), null, trim(substr(ag.descr_ocor,1,120)), trim(substr(ag.compl_dados_2,1,120)))
        , trim(substr(ag.compl_dados_3,1,120))
   union
   select '2'
        , sg.cd
        , ca.dm_util
        , sg.seq_ocor cod_seq_ocor
        , decode(trim(substr(sg.flegal,1,150)), null, trim(substr(sg.descr,1,150)), trim(substr(sg.flegal,1,150))) descr_compl
        , decode(trim(ag.compl_dados_1), null, trim(substr(sg.flegal,1,120)), trim(substr(ag.compl_dados_1, 1, 120))) vl_compl_1 --trim(substr(sg.flegal,1,120)) vl_compl_1
        , decode(trim(ag.compl_dados_2), null, trim(substr(sg.descr,1,120)), trim(substr(ag.compl_dados_2, 1, 120))) vl_compl_2  --trim(substr(sg.descr,1,120)) vl_compl_2
        , decode(trim(ag.compl_dados_3), null, null, trim(substr(ag.compl_dados_3, 1, 120))) vl_compl_3
        , nvl(sum(aa.vl_aj_apur),0) vl_aj_apur
     from per_apur_icms_st          p
        , apuracao_icms_st          ai
        , ajust_apuracao_icms_st    aa
        , cod_aj_saldo_apur_icms    ca
        , ajust_apur_icmsst_gia     ag
        , subitem_gia               sg
    where p.empresa_id              = gt_row_abertura_gia.empresa_id
      and trunc(p.dt_inicio)       >= gt_row_abertura_gia.dt_ini
      and trunc(p.dt_fim)          <= gt_row_abertura_gia.dt_fin
      and p.dm_tipo                 = 0 -- 0-Real, 1-Simulada
      and ai.perapuricmsst_id       = p.id
      and ai.dm_situacao            = 3 -- 0-Aberto, 1-Calculada, 2-Erro no cálculo, 3-Processada, 4-Erro de validação
      and aa.apuracaoicmsst_id      = ai.id
      and ca.id                     = aa.codajsaldoapuricms_id
      and ca.dm_apur                = 1 -- 0-icms, 1-icmsst
      and ag.ajustapuracaoicmsst_id = aa.id
      and sg.id                     = ag.subitemgia_id
      and sg.estado_id              = en_estado_id
    group by sg.cd
        , ca.dm_util
        , sg.seq_ocor
        , decode(trim(substr(sg.flegal,1,150)), null, trim(substr(sg.descr,1,150)), trim(substr(sg.flegal,1,150)))
        , decode (trim(ag.compl_dados_1), null, trim(substr(sg.flegal,1,120)), trim(substr(ag.compl_dados_1, 1, 120)))
        , decode (trim(ag.compl_dados_2), null, trim(substr(sg.descr,1,120)), trim(substr(ag.compl_dados_2, 1, 120)))
        , decode (trim(ag.compl_dados_3), null, null, trim(substr(ag.compl_dados_3, 1, 120)))
   union
   select '3'
        , sg.cd
        , ca.dm_util
        , sg.seq_ocor cod_seq_ocor
        , decode(trim(substr(ai.flegal,1,150)), null, trim(substr(sg.descr,1,150)), trim(substr(ai.flegal,1,150))) descr_compl
        , trim(substr(ai.flegal,1,120)) vl_compl_1
        , trim(substr(ai.descr_ocor,1,120)) vl_compl_2
        , null vl_compl_3
        , nvl(sum(aj.vl_aj_apur),0) vl_aj_apur
     from subapur_icms           si
        , ajust_subapur_icms     aj
        , cod_aj_saldo_apur_icms ca
        , ajust_subapur_icms_gia ai
        , subitem_gia            sg
    where si.empresa_id          = gt_row_abertura_gia.empresa_id
      and si.dm_situacao         = 3 -- 0-Aberto, 1-Calculada, 2-Erro no cálculo, 3-Processada, 4-Erro de validação
      and trunc(si.dt_ini)      >= gt_row_abertura_gia.dt_ini
      and trunc(si.dt_fin)      <= gt_row_abertura_gia.dt_fin
      and aj.subapuricms_id      = si.id
      and ca.id                  = aj.codajsaldoapuricms_id
      and ca.dm_apur             = 0 -- 0-icms, 1-icmsst
      and ai.ajustsubapuricms_id = aj.id
      and sg.id                  = ai.subitemgia_id
      and sg.estado_id           = en_estado_id
      and substr(sg.cd,1,3)      = 'O35' -- O35-Outros ICMS devidos
    group by sg.cd
        , ca.dm_util
        , sg.seq_ocor
        , decode(trim(substr(ai.flegal,1,150)), null, trim(substr(sg.descr,1,150)), trim(substr(ai.flegal,1,150)))
        , trim(substr(ai.flegal,1,120))
        , trim(substr(ai.descr_ocor,1,120))
    order by 1, 2;
   --
   procedure pkb_limpa_vetor_rj
   is
      --
   begin
      --
      vt_tab_tp0000.delete;
      vt_tab_tp0110.delete;
      vt_bi_tab_tp0120.delete;
      vt_bi_tab_tp0130.delete;
      vt_bi_tab_tp0140.delete;
      vt_bi_tab_tp0150.delete;
      vt_bi_tab_tp0160.delete;
      vt_bi_tab_tp0170.delete;
      vt_bi_tab_tp0180.delete;
      vt_bi_tab_tp0190.delete;
      vt_bi_tab_tp0200.delete;
      vt_bi_tab_tp0210.delete;
      vt_bi_tab_tp0220.delete;
      vt_bi_tab_tp0230.delete;
      --
   end pkb_limpa_vetor_rj;
   --
   -- procedimento monta a estrutura do arquivo da GIA-RJ
   procedure pkb_monta_estr_arq_gia_rj
   is
      --
      vn_fase_arq    number := 0;
      vn_qtde_linha  number := 0;
      vv_filler      varchar2(1) := null;
      vn_qtde_tp0120 number := 0;
      vn_qtde_tp0130 number := 0;
      vn_qtde_tp0140 number := 0;
      vn_qtde_tp0150 number := 0;
      vn_qtde_tp0160 number := 0;
      vn_qtde_tp0170 number := 0;
      vn_qtde_tp0180 number := 0;
      vn_qtde_tp0190 number := 0;
      vn_qtde_tp0200 number := 0;
      vn_qtde_tp0210 number := 0;
      vn_qtde_tp0220 number := 0;
      vn_qtde_tp0230 number := 0;
      --
   begin
      --
      vn_fase_arq := 1;
      -- TP0000-Header do arquivo
      if nvl(vt_tab_tp0000.count,0) > 0 then
         --
         vn_fase_arq := 1.1;
         --
         i := nvl(vt_tab_tp0000.first,0);
         --
         loop
            --
            vn_fase_arq := 1.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 1.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
            --
            gl_conteudo := lpad(vt_tab_tp0000(i).tp, 4, '0');
            gl_conteudo := gl_conteudo || vt_tab_tp0000(i).DataHoraGer;
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0000(i).IndGerador, 1, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0000(i).VersaoAplic, 10, ' ');
            gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 816, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
            --
            vn_fase_arq := 1.4;
            --
            pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                   , ev_registrogia_cd => '0000'
                                   , el_conteudo       => gl_conteudo
                                   );
            --
            vn_fase_arq := 1.5;
            --
            if i = vt_tab_tp0000.last then
               exit;
            else
               i := vt_tab_tp0000.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0000-Header do arquivo
      --
      vn_fase_arq := 2;
      -- TP0110-Identificador da declaração
      if nvl(vt_tab_tp0110.count,0) > 0 then
         --
         vn_fase_arq := 2.1;
         --
         i := nvl(vt_tab_tp0110.first,0);
         --
         loop
            --
            vn_fase_arq := 2.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 2.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
            --
            gl_conteudo := lpad(vt_tab_tp0110(i).tp, 4, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp0110(i).IdentDecl, 15, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp0110(i).IE, 8, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp0110(i).AnoRefer, 4, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp0110(i).MesRefer, 2, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).IndRetif, 1, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).IndPeriod, 1, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).NomRepres, 64, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).DDDRepres, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).TelRepres, 8, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).NomContab, 64, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).CorrEletr, 40, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).DDDContab, 4, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).TelContab, 8, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp0110(i).VlrSdoAnt,0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp0110(i).VlrSdoAntST,0), 15, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).Obs, 255, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).ObsST, 255, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp0110(i).VlrSdoAntSCE,0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp0110(i).VlrCredEnerSCE,0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp0110(i).VlrEstProvSCE,0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp0110(i).VlrProvSCE,0), 15, '0');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).IndSemMovOperProp, 1, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).IndSemMovST, 1, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).IndSemMovOutrICMS, 1, ' ');
            gl_conteudo := gl_conteudo || rpad(vt_tab_tp0110(i).IndSemMovAlcZFM, 1, ' ');
            gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 14, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
            --
            vn_fase_arq := 2.4;
            --
            pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                   , ev_registrogia_cd => '0110'
                                   , el_conteudo       => gl_conteudo
                                   );
            --
            vn_fase_arq := 2.5;
            --
            if i = vt_tab_tp0110.last then
               exit;
            else
               i := vt_tab_tp0110.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0110-Identificador da declaração
      --
      vn_fase_arq := 3;
      -- TP0120-Movimentação de entradas
      if nvl(vt_bi_tab_tp0120.count,0) > 0 then
         --
         vn_fase_arq := 3.1;
         --
         i := nvl(vt_bi_tab_tp0120.first,0);
         --
         loop
            --
            vn_fase_arq := 3.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 3.3;
            --
            begin
               --
               vn_qtde_tp0120 := vt_bi_tab_tp0120(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0120 := 0;
            end;
            --
            vn_fase_arq := 3.4;
            --
            if nvl(vn_qtde_tp0120,0) > 0 then
               --
               vn_fase_arq := 3.5;
               --
               j := vt_bi_tab_tp0120(i).first;
               --
               vn_fase_arq := 3.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 3.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0120(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0120(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0120(i)(j).CFOP, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0120(i)(j).VlrContabil,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0120(i)(j).VlrBaseCalculo,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0120(i)(j).VlrImposto,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0120(i)(j).VlrOperIsentas,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0120(i)(j).VlrOutrasOper,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0120(i)(j).VlrBaseCalculoST,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0120(i)(j).VlrImpRetidoST,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 717, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 3.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0120'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 3.9;
                  --
                  if j = vt_bi_tab_tp0120(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0120(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 3.10;
            --
            if i = vt_bi_tab_tp0120.last then
               exit;
            else
               i := vt_bi_tab_tp0120.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0120-Movimentação de entradas
      --
      vn_fase_arq := 4;
      -- TP0130-Movimentação de saídas
      if nvl(vt_bi_tab_tp0130.count,0) > 0 then
         --
         vn_fase_arq := 4.1;
         --
         i := nvl(vt_bi_tab_tp0130.first,0);
         --
         loop
            --
            vn_fase_arq := 4.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 4.3;
            --
            begin
               --
               vn_qtde_tp0130 := vt_bi_tab_tp0130(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0130 := 0;
            end;
            --
            vn_fase_arq := 4.4;
            --
            if nvl(vn_qtde_tp0130,0) > 0 then
               --
               vn_fase_arq := 4.5;
               --
               j := vt_bi_tab_tp0130(i).first;
               --
               vn_fase_arq := 4.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 4.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0130(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0130(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0130(i)(j).CFOP, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0130(i)(j).VlrContabil,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0130(i)(j).VlrBaseCalculo,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0130(i)(j).VlrImposto,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0130(i)(j).VlrOperIsentas,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0130(i)(j).VlrOutrasOper,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0130(i)(j).VlrBaseCalculoST,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0130(i)(j).VlrImpRetidoST,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 717, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 4.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0130'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 4.9;
                  --
                  if j = vt_bi_tab_tp0130(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0130(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 4.10;
            --
            if i = vt_bi_tab_tp0130.last then
               exit;
            else
               i := vt_bi_tab_tp0130.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0130-Movimentação de saídas
      --
      vn_fase_arq := 5;
      -- TP0140-Movimentação de outros débitos
      if nvl(vt_bi_tab_tp0140.count,0) > 0 then
         --
         vn_fase_arq := 5.1;
         --
         i := nvl(vt_bi_tab_tp0140.first,0);
         --
         loop
            --
            vn_fase_arq := 5.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 5.3;
            --
            begin
               --
               vn_qtde_tp0140 := vt_bi_tab_tp0140(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0140 := 0;
            end;
            --
            vn_fase_arq := 5.4;
            --
            if nvl(vn_qtde_tp0140,0) > 0 then
               --
               vn_fase_arq := 5.5;
               --
               j := vt_bi_tab_tp0140(i).first;
               --
               vn_fase_arq := 5.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 5.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0140(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0140(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0140(i)(j).SeqOcor, 5, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0140(i)(j).VlrOutroDeb,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0140(i)(j).DescrCompl,' '), 150, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0140(i)(j).VlrCompl1,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0140(i)(j).VlrCompl2,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0140(i)(j).VlrCompl3,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0140(i)(j).VlrCompl4,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0140(i)(j).VlrCompl5,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 56, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 5.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0140'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 5.9;
                  --
                  if j = vt_bi_tab_tp0140(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0140(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 5.10;
            --
            if i = vt_bi_tab_tp0140.last then
               exit;
            else
               i := vt_bi_tab_tp0140.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0140-Movimentação de outros débitos
      --
      vn_fase_arq := 6;
      -- TP0150-Movimentação de estornos de créditos
      if nvl(vt_bi_tab_tp0150.count,0) > 0 then
         --
         vn_fase_arq := 6.1;
         --
         i := nvl(vt_bi_tab_tp0150.first,0);
         --
         loop
            --
            vn_fase_arq := 6.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 6.3;
            --
            begin
               --
               vn_qtde_tp0150 := vt_bi_tab_tp0150(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0150 := 0;
            end;
            --
            vn_fase_arq := 6.4;
            --
            if nvl(vn_qtde_tp0150,0) > 0 then
               --
               vn_fase_arq := 6.5;
               --
               j := vt_bi_tab_tp0150(i).first;
               --
               vn_fase_arq := 6.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 6.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0150(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0150(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0150(i)(j).SeqOcor, 5, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0150(i)(j).VlrEstorCred,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0150(i)(j).DescrCompl,' '), 150, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0150(i)(j).VlrCompl1,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0150(i)(j).VlrCompl2,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0150(i)(j).VlrCompl3,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0150(i)(j).VlrCompl4,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0150(i)(j).VlrCompl5,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 56, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 6.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0150'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 6.9;
                  --
                  if j = vt_bi_tab_tp0150(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0150(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 6.10;
            --
            if i = vt_bi_tab_tp0150.last then
               exit;
            else
               i := vt_bi_tab_tp0150.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0150-Movimentação de estornos de créditos
      --
      vn_fase_arq := 7;
      -- TP0160-Movimentação de outros créditos
      if nvl(vt_bi_tab_tp0160.count,0) > 0 then
         --
         vn_fase_arq := 7.1;
         --
         i := nvl(vt_bi_tab_tp0160.first,0);
         --
         loop
            --
            vn_fase_arq := 7.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 7.3;
            --
            begin
               --
               vn_qtde_tp0160 := vt_bi_tab_tp0160(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0160 := 0;
            end;
            --
            vn_fase_arq := 7.4;
            --
            if nvl(vn_qtde_tp0160,0) > 0 then
               --
               vn_fase_arq := 7.5;
               --
               j := vt_bi_tab_tp0160(i).first;
               --
               vn_fase_arq := 7.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 7.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0160(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0160(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0160(i)(j).SeqOcor, 5, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0160(i)(j).VlrOutroCred,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0160(i)(j).DescrCompl,' '), 150, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0160(i)(j).VlrCompl1,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0160(i)(j).VlrCompl2,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0160(i)(j).VlrCompl3,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0160(i)(j).VlrCompl4,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0160(i)(j).VlrCompl5,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 56, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 7.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0160'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 7.9;
                  --
                  if j = vt_bi_tab_tp0160(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0160(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 7.10;
            --
            if i = vt_bi_tab_tp0160.last then
               exit;
            else
               i := vt_bi_tab_tp0160.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0160-Movimentação de outros créditos
      --
      vn_fase_arq := 8;
      -- TP0170-Movimentação de estornos de débitos
      if nvl(vt_bi_tab_tp0170.count,0) > 0 then
         --
         vn_fase_arq := 8.1;
         --
         i := nvl(vt_bi_tab_tp0170.first,0);
         --
         loop
            --
            vn_fase_arq := 8.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 8.3;
            --
            begin
               --
               vn_qtde_tp0170 := vt_bi_tab_tp0170(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0170 := 0;
            end;
            --
            vn_fase_arq := 8.4;
            --
            if nvl(vn_qtde_tp0170,0) > 0 then
               --
               vn_fase_arq := 8.5;
               --
               j := vt_bi_tab_tp0170(i).first;
               --
               vn_fase_arq := 8.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 8.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0170(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0170(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0170(i)(j).SeqOcor, 5, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0170(i)(j).VlrEstorDeb,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0170(i)(j).DescrCompl,' '), 150, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0170(i)(j).VlrCompl1,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0170(i)(j).VlrCompl2,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0170(i)(j).VlrCompl3,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0170(i)(j).VlrCompl4,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0170(i)(j).VlrCompl5,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 56, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 8.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0170'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 8.9;
                  --
                  if j = vt_bi_tab_tp0170(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0170(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 8.10;
            --
            if i = vt_bi_tab_tp0170.last then
               exit;
            else
               i := vt_bi_tab_tp0170.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0170-Movimentação de estornos de débitos
      --
      vn_fase_arq := 9;
      -- TP0180-Movimentação de deduções
      if nvl(vt_bi_tab_tp0180.count,0) > 0 then
         --
         vn_fase_arq := 9.1;
         --
         i := nvl(vt_bi_tab_tp0180.first,0);
         --
         loop
            --
            vn_fase_arq := 9.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 9.3;
            --
            begin
               --
               vn_qtde_tp0180 := vt_bi_tab_tp0180(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0180 := 0;
            end;
            --
            vn_fase_arq := 9.4;
            --
            if nvl(vn_qtde_tp0180,0) > 0 then
               --
               vn_fase_arq := 9.5;
               --
               j := vt_bi_tab_tp0180(i).first;
               --
               vn_fase_arq := 9.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 9.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0180(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0180(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0180(i)(j).SeqOcor, 5, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0180(i)(j).VlrDeducao,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0180(i)(j).DescrCompl,' '), 150, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0180(i)(j).VlrCompl1,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0180(i)(j).VlrCompl2,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0180(i)(j).VlrCompl3,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0180(i)(j).VlrCompl4,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0180(i)(j).VlrCompl5,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 56, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 9.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0180'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 9.9;
                  --
                  if j = vt_bi_tab_tp0180(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0180(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 9.10;
            --
            if i = vt_bi_tab_tp0180.last then
               exit;
            else
               i := vt_bi_tab_tp0180.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0180-Movimentação de deduções
      --
      vn_fase_arq := 10;
      -- TP0190-Movimentação de operações com prazo especial
      if nvl(vt_bi_tab_tp0190.count,0) > 0 then
         --
         vn_fase_arq := 10.1;
         --
         i := nvl(vt_bi_tab_tp0190.first,0);
         --
         loop
            --
            vn_fase_arq := 10.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 10.3;
            --
            begin
               --
               vn_qtde_tp0190 := vt_bi_tab_tp0190(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0190 := 0;
            end;
            --
            vn_fase_arq := 10.4;
            --
            if nvl(vn_qtde_tp0190,0) > 0 then
               --
               vn_fase_arq := 10.5;
               --
               j := vt_bi_tab_tp0190(i).first;
               --
               vn_fase_arq := 10.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 10.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0190(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0190(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0190(i)(j).SeqOcor, 5, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0190(i)(j).VlrPrazoEsp,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0190(i)(j).DescrCompl,' '), 150, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0190(i)(j).VlrCompl1,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0190(i)(j).VlrCompl2,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0190(i)(j).VlrCompl3,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0190(i)(j).VlrCompl4,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0190(i)(j).VlrCompl5,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 56, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 10.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0190'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 10.9;
                  --
                  if j = vt_bi_tab_tp0190(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0190(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 10.10;
            --
            if i = vt_bi_tab_tp0190.last then
               exit;
            else
               i := vt_bi_tab_tp0190.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0190-Movimentação de operações com prazo especial
      --
      vn_fase_arq := 11;
      -- TP0200-Movimentação de outros icms devido
      if nvl(vt_bi_tab_tp0200.count,0) > 0 then
         --
         vn_fase_arq := 11.1;
         --
         i := nvl(vt_bi_tab_tp0200.first,0);
         --
         loop
            --
            vn_fase_arq := 11.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 11.3;
            --
            begin
               --
               vn_qtde_tp0200 := vt_bi_tab_tp0200(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0200 := 0;
            end;
            --
            vn_fase_arq := 11.4;
            --
            if nvl(vn_qtde_tp0200,0) > 0 then
               --
               vn_fase_arq := 11.5;
               --
               j := vt_bi_tab_tp0200(i).first;
               --
               vn_fase_arq := 11.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 11.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0200(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0200(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0200(i)(j).SeqOcor, 5, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0200(i)(j).VlrLancto,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0200(i)(j).DescrCompl,' '), 150, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0200(i)(j).VlrCompl1,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0200(i)(j).VlrCompl2,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0200(i)(j).VlrCompl3,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0200(i)(j).VlrCompl4,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0200(i)(j).VlrCompl5,' '), 120, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 56, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 11.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0200'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 11.9;
                  --
                  if j = vt_bi_tab_tp0200(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0200(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 11.10;
            --
            if i = vt_bi_tab_tp0200.last then
               exit;
            else
               i := vt_bi_tab_tp0200.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0200-Movimentação de outros icms devido
      --
      vn_fase_arq := 12;
      -- TP0210-Movimentações de entrada interestaduais
      if nvl(vt_bi_tab_tp0210.count,0) > 0 then
         --
         vn_fase_arq := 12.1;
         --
         i := nvl(vt_bi_tab_tp0210.first,0);
         --
         loop
            --
            vn_fase_arq := 12.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 12.3;
            --
            begin
               --
               vn_qtde_tp0210 := vt_bi_tab_tp0210(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0210 := 0;
            end;
            --
            vn_fase_arq := 12.4;
            --
            if nvl(vn_qtde_tp0210,0) > 0 then
               --
               vn_fase_arq := 12.5;
               --
               j := vt_bi_tab_tp0210(i).first;
               --
               vn_fase_arq := 12.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 12.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0210(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0210(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0210(i)(j).UF, 3, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0210(i)(j).VlrContabil,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0210(i)(j).VlrBaseCalc,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0210(i)(j).VlrOutrasOper,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0210(i)(j).VlrPetrEner,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0210(i)(j).VlrOutrProd,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 748, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 12.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0210'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 12.9;
                  --
                  if j = vt_bi_tab_tp0210(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0210(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 12.10;
            --
            if i = vt_bi_tab_tp0210.last then
               exit;
            else
               i := vt_bi_tab_tp0210.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0210-Movimentações de entrada interestaduais
      --
      vn_fase_arq := 13;
      -- TP0220-Movimentações de saída interestaduais
      if nvl(vt_bi_tab_tp0220.count,0) > 0 then
         --
         vn_fase_arq := 13.1;
         --
         i := nvl(vt_bi_tab_tp0220.first,0);
         --
         loop
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 13.2;
            --
            begin
               --
               vn_qtde_tp0220 := vt_bi_tab_tp0220(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0220 := 0;
            end;
            --
            vn_fase_arq := 13.3;
            --
            if nvl(vn_qtde_tp0220,0) > 0 then
               --
               vn_fase_arq := 13.4;
               --
               j := vt_bi_tab_tp0220(i).first;
               --
               vn_fase_arq := 13.5;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 13.6;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0220(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0220(i)(j).IdentDecl, 15, '0');
                  gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp0220(i)(j).UF, 3, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0220(i)(j).VlrContNaoContr,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0220(i)(j).VlrContContr,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0220(i)(j).VlrBaseCalcNaoContr,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0220(i)(j).VlrBaseCalcContr,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0220(i)(j).VlrOutrasOper,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0220(i)(j).VlrImpCobradoST,0), 15, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 733, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 13.7;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0220'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 13.8;
                  --
                  if j = vt_bi_tab_tp0220(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0220(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 13.9;
            --
            if i = vt_bi_tab_tp0220.last then
               exit;
            else
               i := vt_bi_tab_tp0220.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0220-Movimentações de saída interestaduais
      --
      vn_fase_arq := 14;
      -- TP0230-Movimentações de saída para ZFM/ALC
      if nvl(vt_bi_tab_tp0230.count,0) > 0 then
         --
         vn_fase_arq := 14.1;
         --
         i := nvl(vt_bi_tab_tp0230.first,0);
         --
         loop
            --
            vn_fase_arq := 14.2;
            --
            if nvl(i,0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 14.3;
            --
            begin
               --
               vn_qtde_tp0230 := vt_bi_tab_tp0230(i).count;
               --
            exception
               when others then
                  vn_qtde_tp0230 := 0;
            end;
            --
            vn_fase_arq := 14.4;
            --
            if nvl(vn_qtde_tp0230,0) > 0 then
               --
               vn_fase_arq := 14.5;
               --
               j := vt_bi_tab_tp0230(i).first;
               --
               vn_fase_arq := 14.6;
               --
               loop
                  --
                  if nvl(j,0) = 0 then
                     exit;
                  end if;
                  --
                  vn_fase_arq := 14.7;
                  --
                  vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
                  --
                  gl_conteudo := lpad(vt_bi_tab_tp0230(i)(j).tp, 4, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0230(i)(j).IdentDecl, 0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0230(i)(j).CodLocal, 0), 8, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0230(i)(j).NroSerNF, ' '), 3, ' ');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0230(i)(j).NroSubSerNF,' '), 2, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0230(i)(j).NroNF, 0), 6, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vt_bi_tab_tp0230(i)(j).DataEmissao,' '), 14, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0230(i)(j).VlrNF,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0230(i)(j).VlrIsenta,0), 15, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0230(i)(j).NroCNPJ, 0), 14, '0');
                  gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp0230(i)(j).NroInscrSuframa, 0), 9, '0');
                  gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 740, ' ');
                  gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0), 5, '0');
                  --
                  vn_fase_arq := 14.8;
                  --
                  pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                                         , ev_registrogia_cd => '0230'
                                         , el_conteudo       => gl_conteudo
                                         );
                  --
                  vn_fase_arq := 14.9;
                  --
                  if j = vt_bi_tab_tp0230(i).last then
                     exit;
                  else
                     j := vt_bi_tab_tp0230(i).next(j);
                  end if;
                  --
               end loop;
               --
            end if;
            --
            vn_fase_arq := 14.10;
            --
            if i = vt_bi_tab_tp0230.last then
               exit;
            else
               i := vt_bi_tab_tp0230.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP0230-Movimentações de saída para ZFM/ALC
      --
      vn_fase_arq := 15;
      -- TP0240-Movimentação de SCE compensado entre estabelecimento - Não será gerado
      -- TP0250-Movimentação de SCE compensado do próprio - Não será gerado
      -- TP0260-Movimentação de SCE recebido - Não será gerado
      -- TP0270-Movimentação de SCE transferido - Não será gerado
      --
      vn_fase_arq := 16;
      -- TP9999-Trailler do arquivo
      vn_qtde_linha := nvl(vn_qtde_linha,0) + 1;
      --
      gl_conteudo := '9999'; -- Tipo do registro
      gl_conteudo := gl_conteudo || lpad((nvl(vn_soma_vl_trailer,0) * 100), 25, '0'); -- somatório de todos os valores monetários informados
      gl_conteudo := gl_conteudo || lpad('1', 5, '0'); -- total das declarações
      gl_conteudo := gl_conteudo || lpad(vn_qtde_linha, 5, '0'); -- total de registros (header + registros + trailer)
      gl_conteudo := gl_conteudo || rpad(nvl(vv_filler,' '), 806, ' ');
      gl_conteudo := gl_conteudo || lpad(nvl(vn_qtde_linha,0),5,'0');
      --
      vn_fase_arq := 17;
      --
      pkb_armaz_estr_arq_gia ( ev_tipocodarq_cd  => gv_tipocodarq_cd
                             , ev_registrogia_cd => '9999'
                             , el_conteudo       => gl_conteudo
                             );
      --
      vn_fase_arq := 18;
      --
      -- Final da montagem das linhas do arquivo texto
      --
      pkb_limpa_vetor_rj;
      --
   exception
      when others then
         raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_rj fase ('||vn_fase_arq||'): '||sqlerrm);
   end pkb_monta_estr_arq_gia_rj;
   --
begin
   --
   vn_fase := 1;
   --
   gv_tipocodarq_cd := '2'; -- GIA-RJ
   --
   pkb_limpa_vetor_rj;
   --
   vn_fase := 1.1;
   --
   -- Registro TP0000-Header do arquivo
   vt_tab_tp0000(1).tp          := '0000'; -- Tipo de registro
   vt_tab_tp0000(1).DataHoraGer := to_char(sysdate, 'RRRRMMDDhh24miss'); -- Data e hora da geração do arquivo
   vt_tab_tp0000(1).IndGerador  := 'N'; -- Indicador de Gerador da SEFAZ-RJ - Valor fixo: S/N
   --
   vn_fase := 1.2;
   vt_tab_tp0000(1).VersaoAplic := rpad(pk_csf_gia.fkg_versaogia_cd(en_versaogia_id => gt_row_abertura_gia.versaogia_id),10,' '); -- Versão do aplicativo gerador
   --
   vn_fase := 2;
   -- Registro TP0110-Identificador da declaração
   vt_tab_tp0110(1).tp        := '0110'; -- Tipo do registro
   vt_tab_tp0110(1).IdentDecl := gt_row_abertura_gia.id; -- Identificador da declaração
   --
   vn_fase := 2.1;
   vt_tab_tp0110(1).IE := lpad(nvl(pk_csf.fkg_inscr_est_empresa ( en_empresa_id => gt_row_abertura_gia.empresa_id ), 0), 8, '0'); -- Inscrição Estadual
   --
   vn_fase := 2.2;
   vt_tab_tp0110(1).AnoRefer  := to_char(gt_row_abertura_gia.dt_fin, 'RRRR'); -- Ano de referência
   vt_tab_tp0110(1).MesRefer  := to_char(gt_row_abertura_gia.dt_fin, 'MM'); -- Mês de referência
   --
   vn_fase := 2.3;
   if gt_row_abertura_gia.dm_tipo_gia in ('01','03') then -- 01-Normal, 03-Coligida
      vt_tab_tp0110(1).IndRetif := 'N'; -- Indicador de retificadora S/N
   elsif gt_row_abertura_gia.dm_tipo_gia in ('02') then -- 02-Substitutiva
         vt_tab_tp0110(1).IndRetif := 'S'; -- Indicador de retificadora S/N
   else
      vt_tab_tp0110(1).IndRetif := 'N'; -- Indicador de retificadora S/N
   end if;
   --
   vn_fase := 2.4;
   vt_tab_tp0110(1).IndPeriod := 'M'; -- Indicador de periodicidade
   --
   vn_fase := 2.5;
   --
   begin
      select pe.nome
           , substr(trim(replace(pe.fone, ' ', '')),1,2)
           , trim(substr(trim(replace(pe.fone, ' ', '')),3,8))
           , substr(pe.email,1,40)
        into vv_nome
           , vv_ddd
           , vv_fone
           , vv_email
        from pessoa           pe
           , contador         co
           , contador_empresa ce
       where ce.empresa_id  = gt_row_abertura_gia.empresa_id
         and ce.dm_situacao = 1 -- 0-inativo, 1-ativo
         and co.id          = ce.contador_id
         and pe.id          = co.pessoa_id
         and rownum         = 1;
   exception
      when others then
         vv_nome  := null;
         vv_ddd   := null;
         vv_fone  := null;
         vv_email := null;
   end;
   --
   vn_fase := 2.6;
   --
   vt_tab_tp0110(1).NomContab := nvl(vv_nome,' '); -- Nome do contabilista
   vt_tab_tp0110(1).CorrEletr := nvl(vv_email,' '); -- Correio eletrônico
   vt_tab_tp0110(1).DDDContab := nvl(vv_ddd,' '); -- DDD do contabilista
   vt_tab_tp0110(1).TelContab := nvl(vv_fone,' '); -- Telefone do contabilista
   --
   vn_fase := 2.7;
   --
   begin
      select p.nome
           , substr(trim(replace(p.fone, ' ', '')),1,2)
           , trim(substr(trim(replace(p.fone, ' ', '')),3,8))
        into vv_nome
           , vv_ddd
           , vv_fone
        from resp_empresa  re
           , qualif_assin  qa
           , pessoa        p
       where re.empresa_id = gt_row_abertura_gia.empresa_id
         and to_char(gt_row_abertura_gia.dt_fin, 'rrrr') between to_char(re.dt_inicial, 'rrrr') and to_char(nvl(re.dt_final, re.dt_inicial), 'rrrr')
         and qa.id         = re.qualifassin_id
         and qa.cod_assin  = '205' -- Administrador
         and p.id          = re.pessoa_id
         and rownum        = 1;
   exception
      when others then
         vv_nome  := null;
         vv_ddd   := null;
         vv_fone  := null;
   end;
   --
   vn_fase := 2.8;
   --
   vt_tab_tp0110(1).NomRepres := nvl(vv_nome,' '); -- Nome do representante legal
   vt_tab_tp0110(1).DDDRepres := nvl(vv_ddd,' '); -- DDD do representante legal
   vt_tab_tp0110(1).TelRepres := nvl(vv_fone,' '); -- Telefone do representante legal
   --
   vn_fase := 2.9;
   --
   begin
      select nvl(ai.vl_saldo_credor_ant,0)
        into vn_vl_saldo_credor_ant
        from apuracao_icms ai
       where ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and ai.dm_situacao       = 3 -- Processada
         and ai.dm_tipo           = 0 -- Real
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin;
   exception
      when others then
         vn_vl_saldo_credor_ant := 0;
   end;
   --
   vn_fase := 2.10;
   --
   if nvl(vn_vl_saldo_credor_ant,0) > 0 then
      vt_tab_tp0110(1).VlrSdoAnt := (nvl(vn_vl_saldo_credor_ant,0) * 100); -- Valor do saldo anterior
   else
      vt_tab_tp0110(1).VlrSdoAnt := 0; -- Valor do saldo anterior -- não pode ser negativo
   end if;
   --
   vn_fase := 2.11;
   --
   vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_saldo_credor_ant,0);
   --
   vn_fase := 2.12;
   --
   begin  -- soma somente de RJ
      select nvl(sum(nvl(ai.vl_saldo_cred_ant_st,0)),0)
        into vn_vl_saldo_cred_ant_st
        from per_apur_icms_st p
           , apuracao_icms_st ai
           , estado           est
       where p.empresa_id        = gt_row_abertura_gia.empresa_id
         and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
         and p.dm_tipo           = 0 -- Real
         and ai.perapuricmsst_id = p.id
         and ai.dm_situacao      = 3 -- Processada
         and est.id              = ai.estado_id
         and est.sigla_estado    = 'RJ';
   exception
      when others then
         vn_vl_saldo_cred_ant_st := 0;
   end;
   --
   vn_fase := 2.13;
   --
   if nvl(vn_vl_saldo_cred_ant_st,0) > 0 then
      vt_tab_tp0110(1).VlrSdoAntST := (nvl(vn_vl_saldo_cred_ant_st,0) * 100);
   else
      vt_tab_tp0110(1).VlrSdoAntST := 0;
   end if;
   --
   vn_fase := 2.14;
   --
   vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_saldo_cred_ant_st,0);
   --
   vn_fase := 2.15;
   --
   vt_tab_tp0110(1).Obs               := ' '; -- Observação
   vt_tab_tp0110(1).ObsST             := ' '; -- Observação ST
   vt_tab_tp0110(1).VlrSdoAntSCE      := 0; -- Valor do saldo anterior SCE
   vt_tab_tp0110(1).VlrCredEnerSCE    := 0; -- Valor do crédito de energia SCE
   vt_tab_tp0110(1).VlrEstProvSCE     := 0; -- Valor do estorno de provisão SCE
   vt_tab_tp0110(1).VlrProvSCE        := 0; -- Valor de provisão SCE
   vt_tab_tp0110(1).IndSemMovOperProp := 'S'; -- Indicador sem movto de operações próprias - início com S, e no processo alterar para N caso tenha movto
   vt_tab_tp0110(1).IndSemMovST       := 'S'; -- Indicador sem movto de substituição tributária - início com S, e no processo alterar para N caso tenha movto
   vt_tab_tp0110(1).IndSemMovOutrICMS := 'S'; -- Indicador sem movto de outros ICMS - início com S, e no processo alterar para N caso tenha movto
   vt_tab_tp0110(1).IndSemMovAlcZFM   := 'S'; -- Indicador sem movto de ALC/ZFM - início com S, e no processo alterar para N caso tenha movto
   --
   vn_fase := 3;
   -- Registro TP0120 - Movimentação de entradas -- Notas Fiscal modelos 01, 1B, 04 e 55
   -- Registro TP0130 - Movimentação de saídas -- Notas Fiscal modelos 01, 1B, 04 e 55
   for rec in c_det_cfop loop
      exit when c_det_cfop%notfound or (c_det_cfop%notfound) is null;
      --
      vn_fase := 3.1;
      --
      vn_cfop                    := 0;
      vn_vl_contabil             := 0;
      vv_cod_st_icms             := null;
      vn_vl_base_calc_icms       := 0;
      vn_aliq_icms               := 0;
      vn_vl_imp_trib_icms        := 0;
      vn_vl_base_calc_icmsst     := 0;
      vn_vl_imp_trib_icmsst      := 0;
      vn_vl_bc_isenta_icms       := 0;
      vn_vl_bc_outra_icms        := 0;
      vv_cod_st_ipi              := null;
      vn_vl_base_calc_ipi        := 0;
      vn_aliq_ipi                := 0;
      vn_vl_imp_trib_ipi         := 0;
      vn_vl_bc_isenta_ipi        := 0;
      vn_vl_bc_outra_ipi         := 0;
      vn_ipi_nao_recup           := 0;
      vn_outro_ipi               := 0;
      vn_vl_fcp_icmsst           := 0;
      vn_aliq_fcp_icms           := 0;
      vn_vl_fcp_icms             := 0;
      --
      vn_estado_id               := null;
      vn_cidade_id               := null;
      vn_tipocodarq_id           := null;
      vv_estadotipocodarq_cd     := null;
      vv_cidadetipocodarq_cd     := null;
      vv_valortipoparam_cd       := null;
      vn_ICMSCobradoST           := null;
      vn_Outros_Produtos         := null;
      vv_cnpj_dest               := null;
      --
      vn_fase := 3.2;
      -- 1 - Oper.com crédito do imposto
      -- 2 - Oper.sem crédito do imposto (Isentas ou não Tributadas)
      -- 3 - Oper.sem crédito do imposto (Outras)
      -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
      pk_csf_api.pkb_vlr_fiscal_item_nf ( en_itemnf_id           => rec.itemnf_id
                                        , sn_cfop                => vn_cfop
                                        , sn_vl_operacao         => vn_vl_contabil
                                        , sv_cod_st_icms         => vv_cod_st_icms
                                        , sn_vl_base_calc_icms   => vn_vl_base_calc_icms
                                        , sn_aliq_icms           => vn_aliq_icms
                                        , sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms
                                        , sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst
                                        , sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst
                                        , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                        , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                        , sv_cod_st_ipi          => vv_cod_st_ipi -- não utilizado
                                        , sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi -- não utilizado
                                        , sn_aliq_ipi            => vn_aliq_ipi -- não utilizado
                                        , sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi -- não utilizado
                                        , sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi -- não utilizado
                                        , sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi -- não utilizado
                                        , sn_ipi_nao_recup       => vn_ipi_nao_recup -- não utilizado
                                        , sn_outro_ipi           => vn_outro_ipi -- não utilizado
                                        , sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi
                                        , sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst
                                        , sn_aliq_fcp_icms       => vn_aliq_fcp_icms
                                        , sn_vl_fcp_icms         => vn_vl_fcp_icms
                                        );
      --
      vn_fase := 3.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 3.4;
         --
         if substr(vn_cfop,1,1) not in (1,5) then
            vn_vl_base_calc_icmsst := 0;
         end if;
         --
         vn_fase := 3.5;
         --
         if rec.dm_ind_oper = 0 then -- 0-entradas - registro TP0120
            --
            vn_fase := 3.6;
            --
            begin
               vb_achou := vt_bi_tab_tp0120(1).exists(vn_cfop);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 3.7;
            --
            if not vb_achou then
               --
               vn_fase := 3.8;
               --
               vt_bi_tab_tp0120(1)(vn_cfop).tp               := '0120'; -- tipo do registro
               vt_bi_tab_tp0120(1)(vn_cfop).IdentDecl        := gt_row_abertura_gia.id; -- Identificador da declaração
               vt_bi_tab_tp0120(1)(vn_cfop).CFOP             := vn_cfop; -- Código fiscal da operação
               vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil      := (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto       := ((nvl(vn_vl_imp_trib_icms,0) + nvl(vn_vl_fcp_icms,0)) * 100); -- Valor do imposto + FCP
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas   := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper    := (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculoST := (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImpRetidoST   := ((nvl(vn_vl_imp_trib_icmsst,0) + nvl(vn_vl_fcp_icmsst,0)) * 100); -- Valor do imposto retido ST + FCP
               --
            else
               --
               vn_fase := 3.9;
               --
               vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil      := vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil      + (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo   := vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo   + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto       := vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto       + ((nvl(vn_vl_imp_trib_icms,0) + nvl(vn_vl_fcp_icms,0)) * 100); -- Valor do imposto + FCP
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas   := vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas   + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper    := vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper    + (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculoST := vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculoST + (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImpRetidoST   := vt_bi_tab_tp0120(1)(vn_cfop).VlrImpRetidoST   + ((nvl(vn_vl_imp_trib_icmsst,0) + nvl(vn_vl_fcp_icmsst,0)) * 100); -- Valor do imposto retido ST + FCP
               --
            end if;
            --
            vn_fase := 3.10;
            vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_imp_trib_icms,0) + nvl(vn_vl_fcp_icms,0)
                                                            + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_base_calc_icmsst,0)
                                                            + nvl(vn_vl_imp_trib_icmsst,0) + nvl(vn_vl_fcp_icmsst,0);
            vn_soma_bc_st    := nvl(vn_soma_bc_st,0) + nvl(vn_vl_base_calc_icmsst,0);
            vn_soma_vlimp_st := nvl(vn_soma_vlimp_st,0) + nvl(vn_vl_imp_trib_icmsst,0);
            --
         elsif rec.dm_ind_oper = 1 then -- 1-saídas - registro TP0130
               --
               vn_fase := 3.11;
               --
               begin
                  vb_achou := vt_bi_tab_tp0130(1).exists(vn_cfop);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 3.12;
               --
               if not vb_achou then
                  --
                  vn_fase := 3.13;
                  --
                  vt_bi_tab_tp0130(1)(vn_cfop).tp               := '0130'; -- tipo do registro
                  vt_bi_tab_tp0130(1)(vn_cfop).IdentDecl        := gt_row_abertura_gia.id; -- Identificador da declaração
                  vt_bi_tab_tp0130(1)(vn_cfop).CFOP             := vn_cfop; -- Código fiscal da operação
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      := (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       := ((nvl(vn_vl_imp_trib_icms,0) + nvl(vn_vl_fcp_icms,0)) * 100); -- Valor do imposto + FCP
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    := (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST := (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   := ((nvl(vn_vl_imp_trib_icmsst,0) + nvl(vn_vl_fcp_icmsst,0)) * 100); -- Valor do imposto retido ST + FCP
                  --
               else
                  --
                  vn_fase := 3.14;
                  --
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      := vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      + (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   := vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       := vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       + ((nvl(vn_vl_imp_trib_icms,0) + nvl(vn_vl_fcp_icms,0)) * 100); -- Valor do imposto + FCP
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   := vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    := vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    + (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST := vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST + (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   := vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   + ((nvl(vn_vl_imp_trib_icmsst,0) + nvl(vn_vl_fcp_icmsst,0)) * 100); -- Valor do imposto retido ST
                  --
               end if;
               --
               vn_fase := 3.15;
               vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_imp_trib_icms,0)
                                                               + nvl(vn_vl_fcp_icms,0) + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_vl_bc_outra_icms,0)
                                                               + nvl(vn_vl_base_calc_icmsst,0) + nvl(vn_vl_imp_trib_icmsst,0) + nvl(vn_vl_fcp_icmsst,0);
               vn_soma_bc_st    := nvl(vn_soma_bc_st,0) + nvl(vn_vl_base_calc_icmsst,0);
               vn_soma_vlimp_st := nvl(vn_soma_vlimp_st,0) + nvl(vn_vl_imp_trib_icmsst,0);
               --
         end if; -- indicador de operação: 0-entrada, 1-saída
         --
         vn_fase := 3.16;
         --
         -- Montar registros das movimentações de entrada e saída interestaduais - TP0210 e TP0220
         -- Montar registros das movimentações de saída para ZFM/ALC - TP0230
         --
         if substr(vn_cfop, 1, 1) in (2, 6) then
            --
            vn_fase := 3.17;
            --
            begin
               select est.id
                    , cid.id
                 into vn_estado_id
                    , vn_cidade_id
                 from pessoa p
                    , cidade cid
                    , estado est
                where p.id   = rec.pessoa_id
                  and cid.id = p.cidade_id
                  and est.id = cid.estado_id;
            exception
               when others then
                  vn_estado_id := null;
                  vn_cidade_id := null;
            end;
            --
            vn_fase := 3.18;
            --
            vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id ( ev_cd => '2' );  -- Tipo de arquivo GIA-RJ
            --
            vn_fase := 3.19;
            -- Pega o código do estado para o Tipo de Arquivo GIA-RJ
            vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq ( en_estado_id => vn_estado_id
                                                                        , en_tipocodarq_id => vn_tipocodarq_id
                                                                        );
            --
            vn_fase := 3.20;
            -- Auxilitar para utilizar o código do estado da GIA e gerar o arquivo ordenado por ele
            vn_aux_est := to_number(vv_estadotipocodarq_cd);
            --
            vn_fase := 3.21;
            --
            if vv_estadotipocodarq_cd is not null
               and vv_estadotipocodarq_cd <> '33' then -- não é RJ
               --
               vn_fase := 3.22;
               -- verifica se o participante é contribuindo de ICMS -- para o processo de saída
               vv_valortipoparam_cd := pk_csf.fkg_pessoa_valortipoparam_cd ( ev_tipoparam_cd => '5'
                                                                           , en_pessoa_id    => rec.pessoa_id
                                                                           );
               --
               vn_fase := 3.23;
               --
               if vv_valortipoparam_cd is null then -- participante não é contribuinte de icms
                  --
                  vn_fase := 3.24;
                  vn_vlrcontnaocontr     := nvl(vn_vl_contabil,0);
                  vn_vlrbasecalcnaocontr := nvl(vn_vl_base_calc_icms,0);
                  vn_vlrcontcontr        := 0;
                  vn_vlrbasecalccontr    := 0;
                  --
               else -- vv_valortipoparam_cd is not null -- participante é contribuinte de icms
                  --
                  vn_fase := 3.25;
                  vn_vlrcontnaocontr     := 0;
                  vn_vlrbasecalcnaocontr := 0;
                  vn_vlrcontcontr        := nvl(vn_vl_contabil,0);
                  vn_vlrbasecalccontr    := nvl(vn_vl_base_calc_icms,0);
                  --
               end if;
               --
               vn_fase := 3.26;
               --
               if rec.dm_ind_emit = 0 then -- Emissão Própria
                  vn_icmscobradost := fkg_vlr_icmsst_conf_cfop( vn_cfop, nvl(vn_vl_imp_trib_icmsst,0));
               end if;
               --
               vn_fase := 3.27;
               --
               vn_outros_produtos := fkg_vlr_icmsst_conf_cfop( vn_cfop, nvl(vn_vl_imp_trib_icmsst,0));
               --
               vn_fase := 3.28;
               --
               if rec.dm_ind_oper = 0 then -- 0-entradas - registro TP0210
                  --
                  vn_fase := 3.29;
                  --
                  begin
                     vb_achou := vt_bi_tab_tp0210(1).exists(vn_aux_est);
                  exception
                     when others then
                        vb_achou := false;
                  end;
                  --
                  vn_fase := 3.30;
                  --
                  if not vb_achou then
                     --
                     vn_fase := 3.31;
                     --
                     vt_bi_tab_tp0210(1)(vn_aux_est).tp            := '0210'; -- Tipo de registro
                     vt_bi_tab_tp0210(1)(vn_aux_est).IdentDecl     := gt_row_abertura_gia.id; -- Identificador da declaração
                     vt_bi_tab_tp0210(1)(vn_aux_est).UF            := vv_estadotipocodarq_cd; -- Código da UF
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   := (nvl(vn_vl_contabil,0) * 100); -- Valor Contábil
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper := ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrPetrEner   := 0; -- Valor de petróleo e energia
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrProd   := (nvl(vn_outros_produtos,0) * 100); -- Valor de outros produtos
                     --
                  else
                     --
                     vn_fase := 3.32;
                     --
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   + (nvl(vn_vl_contabil,0) * 100); -- Valor Contábil
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper := vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper + ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrProd   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrProd   + (nvl(vn_outros_produtos,0) * 100); -- Valor de outros produtos
                     --
                  end if;
                  --
                  vn_fase := 3.33;
                  vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0)
                                                                  + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_outros_produtos,0);
                  --
               elsif rec.dm_ind_oper = 1 then -- 1-saídas - registro TP0220
                     --
                     vn_fase := 3.34;
                     --
                     begin
                        vb_achou := vt_bi_tab_tp0220(1).exists(vn_aux_est);
                     exception
                        when others then
                           vb_achou := false;
                     end;
                     --
                     vn_fase := 3.35;
                     --
                     if not vb_achou then
                        --
                        vn_fase := 3.36;
                        --
                        vt_bi_tab_tp0220(1)(vn_aux_est).tp                  := '0220'; -- Tipo de registro
                        vt_bi_tab_tp0220(1)(vn_aux_est).IdentDecl           := gt_row_abertura_gia.id; -- Identificador da declaração
                        vt_bi_tab_tp0220(1)(vn_aux_est).UF                  := vv_estadotipocodarq_cd; -- Código da UF
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     := (nvl(vn_vlrcontnaocontr,0) * 100); -- Valor contábil não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        := (nvl(vn_vlrcontcontr,0) * 100); -- Valor contábil contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr := (nvl(vn_vlrbasecalcnaocontr,0) * 100); -- Valor da base de cálculo não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    := (nvl(vn_vlrbasecalccontr,0) * 100); -- Valor da base de cálculo contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       := ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrImpCobradoST     := ((nvl(vn_icmscobradost,0) + nvl(vn_vl_fcp_icmsst,0)) * 100); -- Valor do imposto cobrado ST + FCP
                        --
                     else
                        --
                        vn_fase := 3.37;
                        --
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     := vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     + (nvl(vn_vlrcontnaocontr,0) * 100); -- Valor contábil não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        := vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        + (nvl(vn_vlrcontcontr,0) * 100); -- Valor contábil contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr := vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr + (nvl(vn_vlrbasecalcnaocontr,0) * 100); -- Valor da base de cálculo não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    := vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    + (nvl(vn_vlrbasecalccontr,0) * 100); -- Valor da base de cálculo contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       := vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       + ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrImpCobradoST     := vt_bi_tab_tp0220(1)(vn_aux_est).VlrImpCobradoST     + ((nvl(vn_icmscobradost,0) + nvl(vn_vl_fcp_icmsst,0)) * 100); -- Valor do imposto cobrado ST + FCP
                        --
                     end if;
                     --
                     vn_fase := 3.38;
                     vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vlrcontnaocontr,0) + nvl(vn_vlrcontcontr,0) + nvl(vn_vlrbasecalcnaocontr,0)
                                                                     + nvl(vn_vlrbasecalccontr,0) + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)
                                                                     + nvl(vn_icmscobradost,0) + nvl(vn_vl_fcp_icmsst,0);
                     --
               end if;
               --
               vn_fase := 3.39;
               --
               -- Montagem do registro das movimentações de saída para ZFM/ALC - TP0230
               -- Estados que permitem SUFRAMA
               -- 11 RO Rondonia / 12 AC Acre / 13 AM Amazonas / 14 RR Roraima / 16 AP Amapa
               if vv_estadotipocodarq_cd in ('11', '12', '13', '14', '16')
                  and vn_cfop not in (6107, 6108)
                  and nvl(vn_vl_imp_trib_icms,0) <= 0 -- Somente isento de imposto
                  then
                  --
                  vn_fase := 3.40;
                  --
                  vv_cnpj_dest := pk_csf.fkg_cnpjcpf_pessoa_id ( en_pessoa_id => rec.pessoa_id );
                  --
                  vn_fase := 3.41;
                  --
                  vv_suframa := pk_csf_gia.fkg_suframa_pessoa_id(rec.pessoa_id); -- Número de inscrição SUFRAMA
                  --
                  if length(vv_cnpj_dest) = 14 and
                     vv_suframa is not null then
                     --
                     vn_fase := 3.42;
                     --
                     vv_cidadetipocodarq_cd := pk_csf.fkg_cd_cidade_tipo_cod_arq ( en_cidade_id     => vn_cidade_id
                                                                                 , en_tipocodarq_id => vn_tipocodarq_id
                                                                                 );
                     --
                     vn_fase := 3.43;
                     --
                     begin
                        vb_achou := vt_bi_tab_tp0230(1).exists(rec.notafiscal_id);
                     exception
                        when others then
                           vb_achou := false;
                     end;
                     --
                     vn_fase := 3.44;
                     --
                     if not vb_achou then
                        --
                        vn_fase := 3.45;
                        --
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).tp              := '0230'; -- Tipo de registro
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).IdentDecl       := gt_row_abertura_gia.id; -- Identificador da declaração
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).CodLocal        := vv_cidadetipocodarq_cd; -- Código da localidade
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroSerNF        := rec.serie_nf; -- Número de série da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroSubSerNF     := null; -- Número de subsérie da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroNF           := rec.nro_nf; -- Número da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).DataEmissao     := to_char(rec.dt_emiss, 'rrrrmmddhh24miss'); -- Data de emissão
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrNF           := (nvl(vn_vl_contabil,0) * 100); -- Valor da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrIsenta       := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de isenta
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroCNPJ         := vv_cnpj_dest; -- Número do cnpj
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroInscrSuframa := vv_suframa; -- Número de inscrição SUFRAMA
                        --
                     else
                        --
                        vn_fase := 3.46;
                        --
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrNF     := vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrNF     + (nvl(vn_vl_contabil,0) * 100); -- Valor da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrIsenta := vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrIsenta + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de isenta
                        --
                     end if;
                     --
                     vn_fase := 3.47;
                     vt_tab_tp0110(1).IndSemMovAlcZFM := 'N'; -- Indicador sem movto de ALC/ZFM
                     vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_bc_isenta_icms,0);
                     --
                  end if; -- cnpj com 14 posições
                  --
               end if; -- estado que permite Suframa
               --
            end if; -- estado <> RJ
            --
         end if; -- substr(vn_cfop, 1, 1) in (2, 6) then
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- c_det_cfop
   --
   vn_fase := 4;
   --
   for rec in c_det_cfop_ct loop
      exit when c_det_cfop_ct%notfound or (c_det_cfop_ct%notfound) is null;
      --
      vn_fase := 4.1;
      --
      vn_cfop                    := 0;
      vn_vl_contabil             := 0;
      vv_cod_st_icms             := null;
      vn_vl_base_calc_icms       := 0;
      vn_aliq_icms               := 0;
      vn_vl_imp_trib_icms        := 0;
      vn_vl_imp_trib_icmsst      := 0;
      vn_vl_bc_isenta_icms       := 0;
      vn_vl_bc_outra_icms        := 0;
      --
      vn_estado_id               := null;
      vn_cidade_id               := null;
      vn_tipocodarq_id           := null;
      vv_estadotipocodarq_cd     := null;
      vv_cidadetipocodarq_cd     := null;
      vv_valortipoparam_cd       := null;
      vv_cnpj_dest               := null;
      --
      vn_fase := 4.2;
      -- recupera os valores de impostos
      pk_csf_ct.pkb_vlr_fiscal_ct ( en_ctreganal_id      => rec.ctreganal_id
                                             , sv_cod_st_icms       => vv_cod_st_icms
                                             , sn_cfop              => vn_cfop
                                             , sn_aliq_icms         => vn_aliq_icms
                                             , sn_vl_opr            => vn_vl_contabil
                                             , sn_vl_bc_icms        => vn_vl_base_calc_icms
                                             , sn_vl_icms           => vn_vl_imp_trib_icms
                                             , sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms
                                             , sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms
                                             );
      --
      vn_fase := 4.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 4.4;
         --
         if rec.dm_ind_oper = 0 then -- 0-entradas - registro TP0120
            --
            vn_fase := 4.5;
            --
            begin
               vb_achou := vt_bi_tab_tp0120(1).exists(vn_cfop);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 4.6;
            --
            if not vb_achou then
               --
               vn_fase := 4.7;
               --
               vt_bi_tab_tp0120(1)(vn_cfop).tp               := '0120'; -- tipo do registro
               vt_bi_tab_tp0120(1)(vn_cfop).IdentDecl        := gt_row_abertura_gia.id; -- Identificador da declaração
               vt_bi_tab_tp0120(1)(vn_cfop).CFOP             := vn_cfop; -- Código fiscal da operação
               vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil      := (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto       := (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas   := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper    := (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculoST := 0; -- Valor da base de cálculo ST
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImpRetidoST   := 0; -- Valor do imposto retido ST
               --
            else
               --
               vn_fase := 4.8;
               --
               vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil    := vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil    + (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo := vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto     := vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto     + (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas := vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper  := vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper  + (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
               --
            end if;
            --
            vn_fase := 4.9;
            vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_imp_trib_icms,0)
                                                            + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_vl_bc_outra_icms,0);
            --
         elsif rec.dm_ind_oper = 1 then -- 1-saídas - registro TP0130
               --
               vn_fase := 4.10;
               --
               begin
                  vb_achou := vt_bi_tab_tp0130(1).exists(vn_cfop);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 4.11;
               --
               if not vb_achou then
                  --
                  vn_fase := 4.12;
                  --
                  vt_bi_tab_tp0130(1)(vn_cfop).tp               := '0130'; -- tipo do registro
                  vt_bi_tab_tp0130(1)(vn_cfop).IdentDecl        := gt_row_abertura_gia.id; -- Identificador da declaração
                  vt_bi_tab_tp0130(1)(vn_cfop).CFOP             := vn_cfop; -- Código fiscal da operação
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      := (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       := (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    := (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST := 0; -- Valor da base de cálculo ST
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   := 0; -- Valor do imposto retido ST
                  --
               else
                  --
                  vn_fase := 4.13;
                  --
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil    := vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil    + (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo := vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto     := vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto     + (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas := vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper  := vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper  + (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
                  --
               end if;
               --
               vn_fase := 4.14;
               vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_imp_trib_icms,0)
                                                               + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_vl_bc_outra_icms,0);
               --
         end if; -- indicador de operação: 0-entrada, 1-saída
         --
         vn_fase := 4.15;
         --
         -- Montar registros das movimentações de entrada e saída interestaduais - TP0210 e TP0220
         -- Montar registros das movimentações de saída para ZFM/ALC - TP0230
         --
         if substr(vn_cfop, 1, 1) in (2, 6) then
            --
            vn_fase := 4.16;
            --
            begin
               select est.id
                    , cid.id
                 into vn_estado_id
                    , vn_cidade_id
                 from pessoa p
                    , cidade cid
                    , estado est
                where p.id   = rec.pessoa_id
                  and cid.id = p.cidade_id
                  and est.id = cid.estado_id;
            exception
               when others then
                  vn_estado_id := null;
                  vn_cidade_id := null;
            end;
            --
            vn_fase := 4.17;
            --
            vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id ( ev_cd => '2' );  -- Tipo de arquivo GIA-RJ
            --
            vn_fase := 4.18;
            -- Pega o código do estado para o Tipo de Arquivo GIA-RJ
            vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq ( en_estado_id => vn_estado_id
                                                                        , en_tipocodarq_id => vn_tipocodarq_id
                                                                        );
            --
            vn_fase := 4.19;
            -- Auxilitar para utilizar o código do estado da GIA e gerar o arquivo ordenado por ele
            vn_aux_est := to_number(vv_estadotipocodarq_cd);
            --
            vn_fase := 4.20;
            --
            if vv_estadotipocodarq_cd is not null
               and vv_estadotipocodarq_cd <> '33' then -- não é RJ
               --
               vn_fase := 4.21;
               -- verifica se o participante é contribuindo de ICMS -- para o processo de saída
               vv_valortipoparam_cd := pk_csf.fkg_pessoa_valortipoparam_cd ( ev_tipoparam_cd => '5'
                                                                           , en_pessoa_id    => rec.pessoa_id
                                                                           );
               --
               vn_fase := 4.22;
               --
               if vv_valortipoparam_cd is null then -- participante não é contribuinte de icms
                  --
                  vn_fase := 4.23;
                  vn_vlrcontnaocontr     := nvl(vn_vl_contabil,0);
                  vn_vlrbasecalcnaocontr := nvl(vn_vl_base_calc_icms,0);
                  vn_vlrcontcontr        := 0;
                  vn_vlrbasecalccontr    := 0;
                  --
               else -- vv_valortipoparam_cd is not null -- participante é contribuinte de icms
                  --
                  vn_fase := 4.24;
                  vn_vlrcontnaocontr     := 0;
                  vn_vlrbasecalcnaocontr := 0;
                  vn_vlrcontcontr        := nvl(vn_vl_contabil,0);
                  vn_vlrbasecalccontr    := nvl(vn_vl_base_calc_icms,0);
                  --
               end if;
               --
               vn_fase := 4.25;
               --
               if rec.dm_ind_oper = 0 then -- 0-entradas - registro TP0210
                  --
                  vn_fase := 4.26;
                  --
                  begin
                     vb_achou := vt_bi_tab_tp0210(1).exists(vn_aux_est);
                  exception
                     when others then
                        vb_achou := false;
                  end;
                  --
                  vn_fase := 4.27;
                  --
                  if not vb_achou then
                     --
                     vn_fase := 4.28;
                     --
                     vt_bi_tab_tp0210(1)(vn_aux_est).tp            := '0210'; -- Tipo de registro
                     vt_bi_tab_tp0210(1)(vn_aux_est).IdentDecl     := gt_row_abertura_gia.id; -- Identificador da declaração
                     vt_bi_tab_tp0210(1)(vn_aux_est).UF            := vv_estadotipocodarq_cd; -- Código da UF
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   := (nvl(vn_vl_contabil,0) * 100); -- Valor Contábil
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper := ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrPetrEner   := 0; -- Valor de petróleo e energia
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrProd   := 0; -- Valor de outros produtos
                     --
                  else
                     --
                     vn_fase := 4.29;
                     --
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   + (nvl(vn_vl_contabil,0) * 100); -- Valor Contábil
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper := vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper + ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                     --
                  end if;
                  --
                  vn_fase := 4.30;
                  vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_bc_outra_icms,0)
                                                                  + nvl(vn_vl_bc_isenta_icms,0);
                  --
               elsif rec.dm_ind_oper = 1 then -- 1-saídas - registro TP0220
                     --
                     vn_fase := 4.31;
                     --
                     begin
                        vb_achou := vt_bi_tab_tp0220(1).exists(vn_aux_est);
                     exception
                        when others then
                           vb_achou := false;
                     end;
                     --
                     vn_fase := 4.32;
                     --
                     if not vb_achou then
                        --
                        vn_fase := 4.33;
                        --
                        vt_bi_tab_tp0220(1)(vn_aux_est).tp                  := '0220'; -- Tipo de registro
                        vt_bi_tab_tp0220(1)(vn_aux_est).IdentDecl           := gt_row_abertura_gia.id; -- Identificador da declaração
                        vt_bi_tab_tp0220(1)(vn_aux_est).UF                  := vv_estadotipocodarq_cd; -- Código da UF
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     := (nvl(vn_vlrcontnaocontr,0) * 100); -- Valor contábil não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        := (nvl(vn_vlrcontcontr,0) * 100); -- Valor contábil contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr := (nvl(vn_vlrbasecalcnaocontr,0) * 100); -- Valor da base de cálculo não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    := (nvl(vn_vlrbasecalccontr,0) * 100); -- Valor da base de cálculo contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       := ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrImpCobradoST     := 0; -- Valor do imposto cobrado ST
                        --
                     else
                        --
                        vn_fase := 4.34;
                        --
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     := vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     + (nvl(vn_vlrcontnaocontr,0) * 100); -- Valor contábil não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        := vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        + (nvl(vn_vlrcontcontr,0) * 100); -- Valor contábil contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr := vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr + (nvl(vn_vlrbasecalcnaocontr,0) * 100); -- Valor da base de cálculo não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    := vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    + (nvl(vn_vlrbasecalccontr,0) * 100); -- Valor da base de cálculo contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       := vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       + ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                        --
                     end if;
                     --
                     vn_fase := 4.35;
                     vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vlrcontnaocontr,0) + nvl(vn_vlrcontcontr,0) + nvl(vn_vlrbasecalcnaocontr,0)
                                                                     + nvl(vn_vlrbasecalccontr,0) + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0);
                     --
               end if;
               --
               vn_fase := 4.36;
               --
               -- Montagem do registro das movimentações de saída para ZFM/ALC - TP0230
               -- Estados que permitem SUFRAMA
               -- 11 RO Rondonia / 12 AC Acre / 13 AM Amazonas / 14 RR Roraima / 16 AP Amapa
               if vv_estadotipocodarq_cd in ('11', '12', '13', '14', '16')
                  and vn_cfop not in (6107, 6108)
                  and nvl(vn_vl_imp_trib_icms,0) <= 0 -- Somente isento de imposto
                  then
                  --
                  vn_fase := 4.37;
                  --
                  vv_cnpj_dest := pk_csf.fkg_cnpjcpf_pessoa_id ( en_pessoa_id => rec.pessoa_id );
                  --
                  vn_fase := 4.38;
                  --
                  vv_suframa := pk_csf_gia.fkg_suframa_pessoa_id(rec.pessoa_id); -- Número de inscrição SUFRAMA
                  --
                  if length(vv_cnpj_dest) = 14 and
                     vv_suframa is not null then
                     --
                     vn_fase := 4.39;
                     --
                     vv_cidadetipocodarq_cd := pk_csf.fkg_cd_cidade_tipo_cod_arq ( en_cidade_id     => vn_cidade_id
                                                                                 , en_tipocodarq_id => vn_tipocodarq_id
                                                                                 );
                     --
                     vn_fase := 4.40;
                     --
                     begin
                        vb_achou := vt_bi_tab_tp0230(1).exists(rec.conhectransp_id);
                     exception
                        when others then
                           vb_achou := false;
                     end;
                     --
                     vn_fase := 4.41;
                     --
                     if not vb_achou then
                        --
                        vn_fase := 4.42;
                        --
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).tp              := '0230'; -- Tipo de registro
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).IdentDecl       := gt_row_abertura_gia.id; -- Identificador da declaração
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).CodLocal        := vv_cidadetipocodarq_cd; -- Código da localidade
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).NroSerNF        := rec.serie_ct; -- Número de série da nota fiscal/conhecimento de transporte
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).NroSubSerNF     := rec.subserie_ct; -- Número de subsérie da nota fiscal/conhecimento de transporte
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).NroNF           := rec.nro_ct; -- Número da nota fiscal/conhecimento de transporte
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).DataEmissao     := to_char(rec.dt_emiss, 'rrrrmmddhh24miss'); -- Data de emissão
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).VlrNF           := (nvl(vn_vl_contabil,0) * 100); -- Valor da nota fiscal/conhecimento de transporte
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).VlrIsenta       := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de isenta
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).NroCNPJ         := vv_cnpj_dest; -- Número do cnpj
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).NroInscrSuframa := vv_suframa; -- Número de inscrição SUFRAMA
                        --
                     else
                        --
                        vn_fase := 4.43;
                        --
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).VlrNF     := vt_bi_tab_tp0230(1)(rec.conhectransp_id).VlrNF     + (nvl(vn_vl_contabil,0) * 100); -- Valor da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.conhectransp_id).VlrIsenta := vt_bi_tab_tp0230(1)(rec.conhectransp_id).VlrIsenta + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de isenta
                        --
                     end if;
                     --
                     vn_fase := 4.44;
                     vt_tab_tp0110(1).IndSemMovAlcZFM := 'N'; -- Indicador sem movto de ALC/ZFM
                     vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_bc_isenta_icms,0);
                     --
                  end if; -- cnpj com 14 posições
                  --
               end if; -- estado que permite Suframa
               --
            end if; -- estado <> RJ
            --
         end if; -- substr(vn_cfop, 1, 1) in (2, 6)
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- c_det_cfop_ct
   --
   vn_fase := 5;
   -- Valores de Serviços Contínuos
   for rec in c_det_cfop_sc loop
      exit when c_det_cfop_sc%notfound or (c_det_cfop_sc%notfound) is null;
      --
      vn_fase := 5.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vn_vl_imp_trib_ipi     := 0;
      --
      vn_estado_id               := null;
      vn_cidade_id               := null;
      vn_tipocodarq_id           := null;
      vv_estadotipocodarq_cd     := null;
      vv_cidadetipocodarq_cd     := null;
      vv_valortipoparam_cd       := null;
      vn_ICMSCobradoST           := null;
      vn_Outros_Produtos         := null;
      vv_cnpj_dest               := null;
      --
      vn_fase := 5.2;
      -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
      pk_csf_api.pkb_vlr_fiscal_nfsc ( en_nfregistanalit_id => rec.nfregistanalit_id
                                     , sv_cod_st_icms       => vv_cod_st_icms
                                     , sn_cfop              => vn_cfop
                                     , sn_aliq_icms         => vn_aliq_icms
                                     , sn_vl_operacao       => vn_vl_contabil
                                     , sn_vl_bc_icms        => vn_vl_base_calc_icms
                                     , sn_vl_icms           => vn_vl_imp_trib_icms
                                     , sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst
                                     , sn_vl_icms_st        => vn_vl_imp_trib_icmsst
                                     , sn_vl_ipi            => vn_vl_imp_trib_ipi -- não utilizado
                                     , sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms
                                     , sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms
                                     );
      --
      vn_fase := 5.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 5.4;
         --
         if rec.dm_ind_oper = 0 then -- 0-entradas - registro TP0120
            --
            vn_fase := 5.5;
            --
            begin
               vb_achou := vt_bi_tab_tp0120(1).exists(vn_cfop);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 5.6;
            --
            if not vb_achou then
               --
               vn_fase := 5.7;
               --
               vt_bi_tab_tp0120(1)(vn_cfop).tp               := '0120'; -- tipo do registro
               vt_bi_tab_tp0120(1)(vn_cfop).IdentDecl        := gt_row_abertura_gia.id; -- Identificador da declaração
               vt_bi_tab_tp0120(1)(vn_cfop).CFOP             := vn_cfop; -- Código fiscal da operação
               vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil      := (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto       := (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas   := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper    := (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculoST := (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImpRetidoST   := (nvl(vn_vl_imp_trib_icmsst,0) * 100); -- Valor do imposto retido ST
               --
            else
               --
               vn_fase := 5.8;
               --
               vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil      := vt_bi_tab_tp0120(1)(vn_cfop).VlrContabil      + (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo   := vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculo   + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto       := vt_bi_tab_tp0120(1)(vn_cfop).VlrImposto       + (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas   := vt_bi_tab_tp0120(1)(vn_cfop).VlrOperIsentas   + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
               vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper    := vt_bi_tab_tp0120(1)(vn_cfop).VlrOutrasOper    + (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
               vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculoST := vt_bi_tab_tp0120(1)(vn_cfop).VlrBaseCalculoST + (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
               vt_bi_tab_tp0120(1)(vn_cfop).VlrImpRetidoST   := vt_bi_tab_tp0120(1)(vn_cfop).VlrImpRetidoST   + (nvl(vn_vl_imp_trib_icmsst,0) * 100); -- Valor do imposto retido ST
               --
            end if;
            --
            vn_fase := 5.9;
            vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_imp_trib_icms,0)
                                                            + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_base_calc_icmsst,0)
                                                            + nvl(vn_vl_imp_trib_icmsst,0);
            vn_soma_bc_st    := nvl(vn_soma_bc_st,0) + nvl(vn_vl_base_calc_icmsst,0);
            vn_soma_vlimp_st := nvl(vn_soma_vlimp_st,0) + nvl(vn_vl_imp_trib_icmsst,0);
            --
         elsif rec.dm_ind_oper = 1 then -- 1-saídas - registro TP0130
               --
               vn_fase := 5.10;
               --
               begin
                  vb_achou := vt_bi_tab_tp0130(1).exists(vn_cfop);
               exception
                  when others then
                     vb_achou := false;
               end;
               --
               vn_fase := 5.11;
               --
               if not vb_achou then
                  --
                  vn_fase := 5.12;
                  --
                  vt_bi_tab_tp0130(1)(vn_cfop).tp               := '0130'; -- tipo do registro
                  vt_bi_tab_tp0130(1)(vn_cfop).IdentDecl        := gt_row_abertura_gia.id; -- Identificador da declaração
                  vt_bi_tab_tp0130(1)(vn_cfop).CFOP             := vn_cfop; -- Código fiscal da operação
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      := (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       := (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    := (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST := (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   := (nvl(vn_vl_imp_trib_icmsst,0) * 100); -- Valor do imposto retido ST
                  --
               else
                  --
                  vn_fase := 5.13;
                  --
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      := vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      + (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   := vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       := vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       + (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   := vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    := vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    + (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST := vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST + (nvl(vn_vl_base_calc_icmsst,0) * 100); -- Valor da base de cálculo ST
                  vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   := vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   + (nvl(vn_vl_imp_trib_icmsst,0) * 100); -- Valor do imposto retido ST
                  --
               end if;
               --
               vn_fase := 5.14;
               vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_imp_trib_icms,0)
                                                               + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_base_calc_icmsst,0)
                                                               + nvl(vn_vl_imp_trib_icmsst,0);
               vn_soma_bc_st    := nvl(vn_soma_bc_st,0) + nvl(vn_vl_base_calc_icmsst,0);
               vn_soma_vlimp_st := nvl(vn_soma_vlimp_st,0) + nvl(vn_vl_imp_trib_icmsst,0);
               --
         end if; -- indicador de operação: 0-entrada, 1-saída
         --
         vn_fase := 5.15;
         --
         -- Montar registros das movimentações de entrada e saída interestaduais - TP0210 e TP0220
         -- Montar registros das movimentações de saída para ZFM/ALC - TP0230
         --
         if substr(vn_cfop, 1, 1) in (2, 6) then
            --
            vn_fase := 5.16;
            --
            begin
               select est.id
                    , cid.id
                 into vn_estado_id
                    , vn_cidade_id
                 from pessoa p
                    , cidade cid
                    , estado est
                where p.id   = rec.pessoa_id
                  and cid.id = p.cidade_id
                  and est.id = cid.estado_id;
            exception
               when others then
                  vn_estado_id := null;
                  vn_cidade_id := null;
            end;
            --
            vn_fase := 5.17;
            --
            vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id ( ev_cd => '2' );  -- Tipo de arquivo GIA-RJ
            --
            vn_fase := 5.18;
            -- Pega o código do estado para o Tipo de Arquivo GIA-RJ
            vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq ( en_estado_id => vn_estado_id
                                                                        , en_tipocodarq_id => vn_tipocodarq_id
                                                                        );
            --
            vn_fase := 5.19;
            -- Auxilitar para utilizar o código do estado da GIA e gerar o arquivo ordenado por ele
            vn_aux_est := to_number(vv_estadotipocodarq_cd);
            --
            vn_fase := 5.20;
            --
            if vv_estadotipocodarq_cd is not null
               and vv_estadotipocodarq_cd <> '33' then -- não é RJ
               --
               vn_fase := 5.21;
               -- verifica se o participante é contribuinte de ICMS -- para o processo de saída
               vv_valortipoparam_cd := pk_csf.fkg_pessoa_valortipoparam_cd ( ev_tipoparam_cd => '5'
                                                                           , en_pessoa_id    => rec.pessoa_id
                                                                           );
               --
               vn_fase := 5.22;
               --
               if vv_valortipoparam_cd is null then -- participante não é contribuinte de icms
                  --
                  vn_fase := 5.23;
                  vn_vlrcontnaocontr     := nvl(vn_vl_contabil,0);
                  vn_vlrbasecalcnaocontr := nvl(vn_vl_base_calc_icms,0);
                  vn_vlrcontcontr        := 0;
                  vn_vlrbasecalccontr    := 0;
                  --
               else -- vv_valortipoparam_cd is not null -- participante é contribuinte de icms
                  --
                  vn_fase := 5.24;
                  vn_vlrcontnaocontr     := 0;
                  vn_vlrbasecalcnaocontr := 0;
                  vn_vlrcontcontr        := nvl(vn_vl_contabil,0);
                  vn_vlrbasecalccontr    := nvl(vn_vl_base_calc_icms,0);
                  --
               end if;
               --
               vn_fase := 5.25;
               --
               if substr(vn_cfop, 1, 1) = '6' -- Somente CFOP do Grupo 6
                  then
                  vn_icmscobradost := nvl(vn_vl_imp_trib_icmsst,0);
               else
                  vn_icmscobradost := 0;
               end if;
               --
               vn_fase := 5.26;
               --
               if substr(vn_cfop, 1, 1) = '2' -- Somente CFOP do Grupo 2
                  then
                  vn_Outros_Produtos := nvl(vn_vl_imp_trib_icmsst,0);
               else
                  vn_Outros_Produtos := 0;
               end if;
               --
               vn_fase := 5.27;
               --
               if rec.dm_ind_oper = 0 then -- 0-entradas - registro TP0210
                  --
                  vn_fase := 5.28;
                  --
                  begin
                     vb_achou := vt_bi_tab_tp0210(1).exists(vn_aux_est);
                  exception
                     when others then
                        vb_achou := false;
                  end;
                  --
                  vn_fase := 5.29;
                  --
                  if not vb_achou then
                     --
                     vn_fase := 5.30;
                     --
                     vt_bi_tab_tp0210(1)(vn_aux_est).tp            := '0210'; -- Tipo de registro
                     vt_bi_tab_tp0210(1)(vn_aux_est).IdentDecl     := gt_row_abertura_gia.id; -- Identificador da declaração
                     vt_bi_tab_tp0210(1)(vn_aux_est).UF            := vv_estadotipocodarq_cd; -- Código da UF
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   := (nvl(vn_vl_contabil,0) * 100); -- Valor Contábil
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper := ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrPetrEner   := 0; -- Valor de petróleo e energia
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrProd   := (nvl(vn_outros_produtos,0) * 100); -- Valor de outros produtos
                     --
                  else
                     --
                     vn_fase := 5.31;
                     --
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrContabil   + (nvl(vn_vl_contabil,0) * 100); -- Valor Contábil
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrBaseCalc   + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper := vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrasOper + ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                     vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrProd   := vt_bi_tab_tp0210(1)(vn_aux_est).VlrOutrProd   + (nvl(vn_outros_produtos,0) * 100); -- Valor de outros produtos
                     --
                  end if;
                  --
                  vn_fase := 5.32;
                  vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0)
                                                                  + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_outros_produtos,0);
                  --
               elsif rec.dm_ind_oper = 1 then -- 1-saídas - registro TP0220
                     --
                     vn_fase := 5.33;
                     --
                     begin
                        vb_achou := vt_bi_tab_tp0220(1).exists(vn_aux_est);
                     exception
                        when others then
                           vb_achou := false;
                     end;
                     --
                     vn_fase := 5.34;
                     --
                     if not vb_achou then
                        --
                        vn_fase := 5.35;
                        --
                        vt_bi_tab_tp0220(1)(vn_aux_est).tp                  := '0220'; -- Tipo de registro
                        vt_bi_tab_tp0220(1)(vn_aux_est).IdentDecl           := gt_row_abertura_gia.id; -- Identificador da declaração
                        vt_bi_tab_tp0220(1)(vn_aux_est).UF                  := vv_estadotipocodarq_cd; -- Código da UF
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     := (nvl(vn_vlrcontnaocontr,0) * 100); -- Valor contábil não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        := (nvl(vn_vlrcontcontr,0) * 100); -- Valor contábil contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr := (nvl(vn_vlrbasecalcnaocontr,0) * 100); -- Valor da base de cálculo não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    := (nvl(vn_vlrbasecalccontr,0) * 100); -- Valor da base de cálculo contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       := ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrImpCobradoST     := (nvl(vn_icmscobradost,0) * 100); -- Valor do imposto cobrado ST
                        --
                     else
                        --
                        vn_fase := 5.36;
                        --
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     := vt_bi_tab_tp0220(1)(vn_aux_est).VlrContNaoContr     + (nvl(vn_vlrcontnaocontr,0) * 100); -- Valor contábil não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        := vt_bi_tab_tp0220(1)(vn_aux_est).VlrContContr        + (nvl(vn_vlrcontcontr,0) * 100); -- Valor contábil contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr := vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcNaoContr + (nvl(vn_vlrbasecalcnaocontr,0) * 100); -- Valor da base de cálculo não contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    := vt_bi_tab_tp0220(1)(vn_aux_est).VlrBaseCalcContr    + (nvl(vn_vlrbasecalccontr,0) * 100); -- Valor da base de cálculo contribuinte
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       := vt_bi_tab_tp0220(1)(vn_aux_est).VlrOutrasOper       + ((nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)) * 100); -- Valor de outras operações
                        vt_bi_tab_tp0220(1)(vn_aux_est).VlrImpCobradoST     := vt_bi_tab_tp0220(1)(vn_aux_est).VlrImpCobradoST     + (nvl(vn_icmscobradost,0) * 100); -- Valor do imposto cobrado ST
                        --
                     end if;
                     --
                     vn_fase := 5.37;
                     vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vlrcontnaocontr,0) + nvl(vn_vlrcontcontr,0) + nvl(vn_vlrbasecalcnaocontr,0)
                                                                     + nvl(vn_vlrbasecalccontr,0) + nvl(vn_vl_bc_outra_icms,0) + nvl(vn_vl_bc_isenta_icms,0)
                                                                     + nvl(vn_icmscobradost,0);
                     --
               end if;
               --
               vn_fase := 5.38;
               --
               -- Montagem do registro das movimentações de saída para ZFM/ALC - TP0230
               -- Estados que permitem SUFRAMA
               -- 11 RO Rondonia / 12 AC Acre / 13 AM Amazonas / 14 RR Roraima / 16 AP Amapa
               if vv_estadotipocodarq_cd in ('11', '12', '13', '14', '16')
                  and vn_cfop not in (6107, 6108)
                  and nvl(vn_vl_imp_trib_icms,0) <= 0 -- Somente isento de imposto
                  then
                  --
                  vn_fase := 5.39;
                  --
                  vv_cnpj_dest := pk_csf.fkg_cnpjcpf_pessoa_id ( en_pessoa_id => rec.pessoa_id );
                  --
                  vn_fase := 5.40;
                  --
                  vv_suframa := pk_csf_gia.fkg_suframa_pessoa_id(rec.pessoa_id); -- Número de inscrição SUFRAMA
                  --
                  if length(vv_cnpj_dest) = 14 and
                     vv_suframa is not null then
                     --
                     vn_fase := 5.41;
                     --
                     vv_cidadetipocodarq_cd := pk_csf.fkg_cd_cidade_tipo_cod_arq ( en_cidade_id      => vn_cidade_id
                                                                                 , en_tipocodarq_id  => vn_tipocodarq_id
                                                                                 );
                     --
                     vn_fase := 5.42;
                     --
                     begin
                        vb_achou := vt_bi_tab_tp0230(1).exists(rec.notafiscal_id);
                     exception
                        when others then
                           vb_achou := false;
                     end;
                     --
                     vn_fase := 5.43;
                     --
                     if not vb_achou then
                        --
                        vn_fase := 5.44;
                        --
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).tp              := '0230'; -- Tipo de registro
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).IdentDecl       := gt_row_abertura_gia.id; -- Identificador da declaração
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).CodLocal        := vv_cidadetipocodarq_cd; -- Código da localidade
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroSerNF        := rec.serie_nf; -- Número de série da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroSubSerNF     := null; -- Número de subsérie da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroNF           := rec.nro_nf; -- Número da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).DataEmissao     := to_char(rec.dt_emiss, 'rrrrmmddhh24miss'); -- Data de emissão
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrNF           := (nvl(vn_vl_contabil,0) * 100); -- Valor da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrIsenta       := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de isenta
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroCNPJ         := vv_cnpj_dest; -- Número do cnpj
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).NroInscrSuframa := vv_suframa; -- Número de inscrição SUFRAMA
                        --
                     else
                        --
                        vn_fase := 5.45;
                        --
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrNF     := vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrNF     + (nvl(vn_vl_contabil,0) * 100); -- Valor da nota fiscal
                        vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrIsenta := vt_bi_tab_tp0230(1)(rec.notafiscal_id).VlrIsenta + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de isenta
                        --
                     end if;
                     --
                     vn_fase := 5.46;
                     vt_tab_tp0110(1).IndSemMovAlcZFM := 'N'; -- Indicador sem movto de ALC/ZFM
                     vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_bc_isenta_icms,0);
                     --
                  end if; -- cnpj com 14 posições
                  --
               end if; -- estado que permite Suframa
               --
            end if; -- estado <> RJ
            --
         end if; -- substr(vn_cfop, 1, 1) in (2, 6) then
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- fim c_det_cfop_sc
   --
   vn_fase := 6;
   -- Informações de Cupom Fiscal
   for rec in c_det_cfop_ecf loop
      exit when c_det_cfop_ecf%notfound or (c_det_cfop_ecf%notfound) is null;
      --
      vn_fase := 6.1;
      --
      vn_cfop              := 0;
      vn_vl_contabil       := 0;
      vv_cod_st_icms       := null;
      vn_vl_base_calc_icms := 0;
      vn_aliq_icms         := 0;
      vn_vl_imp_trib_icms  := 0;
      vn_vl_bc_isenta_icms := 0;
      vn_vl_bc_outra_icms  := 0;
      --
      vn_fase := 6.2;
      -- Recupera valores fiscais (ICMS) do conhecimento de transporte
      pk_csf_api_ecf.pkb_vlr_fiscal_ecf ( en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id
                                        , sv_cod_st_icms         => vv_cod_st_icms
                                        , sn_cfop                => vn_cfop
                                        , sn_aliq_icms           => vn_aliq_icms
                                        , sn_vl_opr              => vn_vl_contabil
                                        , sn_vl_bc_icms          => vn_vl_base_calc_icms
                                        , sn_vl_icms             => vn_vl_imp_trib_icms
                                        , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                        , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                        );
      --
      vn_fase := 6.3;
      --
      if trim(vv_cod_st_icms) is not null then
         --
         vn_fase := 6.4;
         -- registro TP0130 -- sempre saída
         begin
            vb_achou := vt_bi_tab_tp0130(1).exists(vn_cfop);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 6.5;
         --
         if not vb_achou then
            --
            vn_fase := 6.6;
            --
            vt_bi_tab_tp0130(1)(vn_cfop).tp               := '0130'; -- tipo do registro
            vt_bi_tab_tp0130(1)(vn_cfop).IdentDecl        := gt_row_abertura_gia.id; -- Identificador da declaração
            vt_bi_tab_tp0130(1)(vn_cfop).CFOP             := vn_cfop; -- Código fiscal da operação
            vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil      := (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
            vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo   := (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto       := (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
            vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas   := (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
            vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper    := (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
            vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculoST := 0; -- Valor da base de cálculo ST
            vt_bi_tab_tp0130(1)(vn_cfop).VlrImpRetidoST   := 0; -- Valor do imposto retido ST
            --
         else
            --
            vn_fase := 6.7;
            --
            vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil    := vt_bi_tab_tp0130(1)(vn_cfop).VlrContabil    + (nvl(vn_vl_contabil,0) * 100); -- Valor contábil
            vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo := vt_bi_tab_tp0130(1)(vn_cfop).VlrBaseCalculo + (nvl(vn_vl_base_calc_icms,0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto     := vt_bi_tab_tp0130(1)(vn_cfop).VlrImposto     + (nvl(vn_vl_imp_trib_icms,0) * 100); -- Valor do imposto
            vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas := vt_bi_tab_tp0130(1)(vn_cfop).VlrOperIsentas + (nvl(vn_vl_bc_isenta_icms,0) * 100); -- Valor de operações isentas
            vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper  := vt_bi_tab_tp0130(1)(vn_cfop).VlrOutrasOper  + (nvl(vn_vl_bc_outra_icms,0) * 100); -- Valor de outras operações
            --
         end if; -- indicador de operação: 0-entrada, 1-saída
         --
         vn_fase := 6.8;
         vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(vn_vl_contabil,0) + nvl(vn_vl_base_calc_icms,0) + nvl(vn_vl_imp_trib_icms,0)
                                                         + nvl(vn_vl_bc_isenta_icms,0) + nvl(vn_vl_bc_outra_icms,0);
         --
      end if; -- trim(vv_cod_st_icms) is not null then
      --
   end loop; -- final c_det_cfop_ecf
   --
   vn_fase := 7;
   --
   -- Montagem dos registros:
   -- TP0140 - Movimentação de outros débitos               -- dm_util = 0-Outros débitos
   -- TP0150 - Movimentação de estornos de créditos         -- dm_util = 1-Estorno de créditos
   -- TP0160 - Movimentação de outros créditos              -- dm_util = 2-Outros créditos
   -- TP0170 - Movimentação de estornos de débitos          -- dm_util = 3-Estorno de débitos
   -- TP0180 - Movimentação de deduções                     -- dm_util = 4-Deduções do imposto apurado
   -- TP0190 - Movimentação de operações com prazo especial -- não será gerado
   -- TP0200 - Movimentação de outros icms devido           -- dm_util = 5-Débitos especiais
   --
   vn_seq_ocor := 0;
   --
   vn_est_id_empresa := pk_csf.fkg_Estado_id(trim(pk_csf.fkg_sigla_estado_empresa ( en_empresa_id => gt_row_abertura_gia.empresa_id )));
   --
   for rec in c_movtos ( en_estado_id => vn_est_id_empresa ) loop
      exit when c_movtos%notfound or (c_movtos%notfound) is null;
      --
      vn_fase := 7.1;
      --
      vn_seq_ocor := nvl(vn_seq_ocor,0) + 1;
      --
      if rec.dm_util = 0 then -- outros débitos
         --
         vn_fase := 7.2;
         --
         vt_bi_tab_tp0140(1)(vn_seq_ocor).tp          := '0140'; -- tipo do registro
         vt_bi_tab_tp0140(1)(vn_seq_ocor).IdentDecl   := gt_row_abertura_gia.id; -- Identificador da declaração
         vt_bi_tab_tp0140(1)(vn_seq_ocor).SeqOcor     := rec.cod_seq_ocor; -- vn_seq_ocor; -- Sequencial da ocorrência
         vt_bi_tab_tp0140(1)(vn_seq_ocor).VlrOutroDeb := (nvl(rec.vl_aj_apur,0) * 100); -- Valor de outro débito
         vt_bi_tab_tp0140(1)(vn_seq_ocor).DescrCompl  := pk_csf.fkg_converte(rec.descr_compl); -- Descrição complementar
         vt_bi_tab_tp0140(1)(vn_seq_ocor).VlrCompl1   := pk_csf.fkg_converte(rec.vl_compl_1); -- Valor complementar 1
         vt_bi_tab_tp0140(1)(vn_seq_ocor).VlrCompl2   := pk_csf.fkg_converte(rec.vl_compl_2); -- Valor complementar 2
         vt_bi_tab_tp0140(1)(vn_seq_ocor).VlrCompl3   := null; -- Valor complementar 3
         vt_bi_tab_tp0140(1)(vn_seq_ocor).VlrCompl4   := null; -- Valor complementar 4
         vt_bi_tab_tp0140(1)(vn_seq_ocor).VlrCompl5   := null; -- Valor complementar 5
         --
      elsif rec.dm_util = 1 then -- estorno de créditos
            --
            vn_fase := 7.3;
            --
            vt_bi_tab_tp0150(1)(vn_seq_ocor).tp           := '0150'; -- tipo do registro
            vt_bi_tab_tp0150(1)(vn_seq_ocor).IdentDecl    := gt_row_abertura_gia.id; -- Identificador da declaração
            vt_bi_tab_tp0150(1)(vn_seq_ocor).SeqOcor      := rec.cod_seq_ocor; -- vn_seq_ocor; -- Sequencial da ocorrência
            vt_bi_tab_tp0150(1)(vn_seq_ocor).VlrEstorCred := (nvl(rec.vl_aj_apur,0) * 100); -- Valor de estorno de crédito
            vt_bi_tab_tp0150(1)(vn_seq_ocor).DescrCompl   := pk_csf.fkg_converte(rec.descr_compl); -- Descrição complementar
            vt_bi_tab_tp0150(1)(vn_seq_ocor).VlrCompl1    := pk_csf.fkg_converte(rec.vl_compl_1); -- Valor complementar 1
            vt_bi_tab_tp0150(1)(vn_seq_ocor).VlrCompl2    := pk_csf.fkg_converte(rec.vl_compl_2); -- Valor complementar 2
            vt_bi_tab_tp0150(1)(vn_seq_ocor).VlrCompl3    := null; -- Valor complementar 3
            vt_bi_tab_tp0150(1)(vn_seq_ocor).VlrCompl4    := null; -- Valor complementar 4
            vt_bi_tab_tp0150(1)(vn_seq_ocor).VlrCompl5    := null; -- Valor complementar 5
            --
      elsif rec.dm_util = 2 then -- outros créditos
            --
            vn_fase := 7.4;
            --
            vt_bi_tab_tp0160(1)(vn_seq_ocor).tp           := '0160'; -- tipo do registro
            vt_bi_tab_tp0160(1)(vn_seq_ocor).IdentDecl    := gt_row_abertura_gia.id; -- Identificador da declaração
            vt_bi_tab_tp0160(1)(vn_seq_ocor).SeqOcor      := rec.cod_seq_ocor; -- vn_seq_ocor; -- Sequencial da ocorrência
            vt_bi_tab_tp0160(1)(vn_seq_ocor).VlrOutroCred := (nvl(rec.vl_aj_apur,0) * 100); -- Valor de outros créditos
            vt_bi_tab_tp0160(1)(vn_seq_ocor).DescrCompl   := pk_csf.fkg_converte(rec.descr_compl); -- Descrição complementar
            vt_bi_tab_tp0160(1)(vn_seq_ocor).VlrCompl1    := pk_csf.fkg_converte(rec.vl_compl_1); -- Valor complementar 1
            vt_bi_tab_tp0160(1)(vn_seq_ocor).VlrCompl2    := pk_csf.fkg_converte(rec.vl_compl_2); -- Valor complementar 2
            vt_bi_tab_tp0160(1)(vn_seq_ocor).VlrCompl3    := null; -- Valor complementar 3
            vt_bi_tab_tp0160(1)(vn_seq_ocor).VlrCompl4    := null; -- Valor complementar 4
            vt_bi_tab_tp0160(1)(vn_seq_ocor).VlrCompl5    := null; -- Valor complementar 5
            --
      elsif rec.dm_util = 3 then -- estorno de débitos
            --
            vn_fase := 7.5;
            --
            vt_bi_tab_tp0170(1)(vn_seq_ocor).tp          := '0170'; -- tipo do registro
            vt_bi_tab_tp0170(1)(vn_seq_ocor).IdentDecl   := gt_row_abertura_gia.id; -- Identificador da declaração
            vt_bi_tab_tp0170(1)(vn_seq_ocor).SeqOcor     := rec.cod_seq_ocor; -- vn_seq_ocor; -- Sequencial da ocorrência
            vt_bi_tab_tp0170(1)(vn_seq_ocor).VlrEstorDeb := (nvl(rec.vl_aj_apur,0) * 100); -- Valor de estorno de débito
            vt_bi_tab_tp0170(1)(vn_seq_ocor).DescrCompl  := pk_csf.fkg_converte(rec.descr_compl); -- Descrição complementar
            vt_bi_tab_tp0170(1)(vn_seq_ocor).VlrCompl1   := pk_csf.fkg_converte(rec.vl_compl_1); -- Valor complementar 1
            vt_bi_tab_tp0170(1)(vn_seq_ocor).VlrCompl2   := pk_csf.fkg_converte(rec.vl_compl_2); -- Valor complementar 2
            vt_bi_tab_tp0170(1)(vn_seq_ocor).VlrCompl3   := null; -- Valor complementar 3
            vt_bi_tab_tp0170(1)(vn_seq_ocor).VlrCompl4   := null; -- Valor complementar 4
            vt_bi_tab_tp0170(1)(vn_seq_ocor).VlrCompl5   := null; -- Valor complementar 5
            --
      elsif rec.dm_util = 4 then -- deduções
            --
            vn_fase := 7.6;
            --
            vt_bi_tab_tp0180(1)(vn_seq_ocor).tp         := '0180'; -- tipo do registro
            vt_bi_tab_tp0180(1)(vn_seq_ocor).IdentDecl  := gt_row_abertura_gia.id; -- Identificador da declaração
            vt_bi_tab_tp0180(1)(vn_seq_ocor).SeqOcor    := rec.cod_seq_ocor; -- vn_seq_ocor; -- Sequencial da ocorrência
            vt_bi_tab_tp0180(1)(vn_seq_ocor).VlrDeducao := (nvl(rec.vl_aj_apur,0) * 100); -- Valor de deduções
            vt_bi_tab_tp0180(1)(vn_seq_ocor).DescrCompl := pk_csf.fkg_converte(rec.descr_compl); -- Descrição complementar
            vt_bi_tab_tp0180(1)(vn_seq_ocor).VlrCompl1  := pk_csf.fkg_converte(rec.vl_compl_1); -- Valor complementar 1
            vt_bi_tab_tp0180(1)(vn_seq_ocor).VlrCompl2  := pk_csf.fkg_converte(rec.vl_compl_2); -- Valor complementar 2
            vt_bi_tab_tp0180(1)(vn_seq_ocor).VlrCompl3  := null; -- Valor complementar 3
            vt_bi_tab_tp0180(1)(vn_seq_ocor).VlrCompl4  := null; -- Valor complementar 4
            vt_bi_tab_tp0180(1)(vn_seq_ocor).VlrCompl5  := null; -- Valor complementar 5
            --
      elsif rec.dm_util = 5 then -- débitos especiais -- será gerado para os registros de Outros ICMS devido
            --
            vn_fase := 7.7;
            --
            vt_bi_tab_tp0200(1)(vn_seq_ocor).tp         := '0200'; -- tipo do registro
            vt_bi_tab_tp0200(1)(vn_seq_ocor).IdentDecl  := gt_row_abertura_gia.id; -- Identificador da declaração
            vt_bi_tab_tp0200(1)(vn_seq_ocor).SeqOcor    := rec.cod_seq_ocor; -- vn_seq_ocor; -- Sequencial da ocorrência
            vt_bi_tab_tp0200(1)(vn_seq_ocor).VlrLancto  := (nvl(rec.vl_aj_apur,0) * 100); -- Valor do lançamento
            vt_bi_tab_tp0200(1)(vn_seq_ocor).DescrCompl := pk_csf.fkg_converte(rec.descr_compl); -- Descrição complementar
            vt_bi_tab_tp0200(1)(vn_seq_ocor).VlrCompl1  := pk_csf.fkg_converte(rec.vl_compl_1); -- Valor complementar 1
            vt_bi_tab_tp0200(1)(vn_seq_ocor).VlrCompl2  := pk_csf.fkg_converte(rec.vl_compl_2); -- Valor complementar 2
            vt_bi_tab_tp0200(1)(vn_seq_ocor).VlrCompl3  := pk_csf.fkg_converte(rec.vl_compl_3); -- Valor complementar 3
            vt_bi_tab_tp0200(1)(vn_seq_ocor).VlrCompl4  := null; -- Valor complementar 4
            vt_bi_tab_tp0200(1)(vn_seq_ocor).VlrCompl5  := null; -- Valor complementar 5
            --
      else
         --
         vn_fase := 7.8;
         vn_seq_ocor := nvl(vn_seq_ocor,0) - 1;
         --
      end if;
      --
      vn_fase := 7.9;
      vn_soma_vl_trailer := nvl(vn_soma_vl_trailer,0) + nvl(rec.vl_aj_apur,0);
      --
   end loop;
   --
   -- Montagem do registro TP0240 - Movimentação de SCE compensado entre estabelecimento - Não será gerado
   -- Montagem do registro TP0250 - Movimentação de SCE compensado do próprio - Não será gerado
   -- Montagem do registro TP0260 - Movimentação de SCE recebido - Não será gerado
   -- Montagem do registro TP0270 - Movimentação de SCE transferido - Não será gerado
   --
   vn_fase := 8;
   --
   if nvl(vt_bi_tab_tp0120.count,0) > 0 or -- TP0120-Movimentação de entradas
      nvl(vt_bi_tab_tp0130.count,0) > 0 or -- TP0130-Movimentação de saídas
      nvl(vt_bi_tab_tp0140.count,0) > 0 or -- TP0140-Movimentação de outros débitos
      nvl(vt_bi_tab_tp0150.count,0) > 0 or -- TP0150-Movimentação de estornos de créditos
      nvl(vt_bi_tab_tp0160.count,0) > 0 or -- TP0160-Movimentação de outros créditos
      nvl(vt_bi_tab_tp0170.count,0) > 0 or -- TP0170-Movimentação de estornos de débitos
      nvl(vt_bi_tab_tp0180.count,0) > 0 or -- TP0180-Movimentação de deduções
      nvl(vt_bi_tab_tp0190.count,0) > 0 then -- TP0190-Movimentação de operações com prazo especial
      vt_tab_tp0110(1).IndSemMovOperProp := 'N'; -- Indicador de movimentações de operações próprias
   end if;
   --
   vn_fase := 9;
   --
   if nvl(vn_soma_bc_st,0) > 0 or -- Valores referentes a base de cálculo de substituição tributária - ST
      nvl(vn_soma_vlimp_st,0) > 0 then -- Valores referentes ao valor de imposto de substituição tributária - ST
      vt_tab_tp0110(1).IndSemMovST := 'N'; -- Indicador de movimentações de ST
   end if;
   --
   vn_fase := 10;
   --
   if nvl(vt_bi_tab_tp0200.count,0) > 0 then -- TP0200-Movimentação de outros icms devido
      vt_tab_tp0110(1).IndSemMovOutrICMS := 'N'; -- Indicador de movimentações de outros icms
   end if;
   --
   vn_fase := 11;
   --
   if nvl(vt_bi_tab_tp0230.count,0) > 0 then -- TP0230-Movimentações de saída para ZFM/ALC
      vt_tab_tp0110(1).IndSemMovAlcZFM := 'N'; -- Indicador de movimentações ZFM/ALC
   end if;
   --
   vn_fase := 12;
   -- procedimento monta a estrutura do arquivo da GIA - RJ
   pkb_monta_estr_arq_gia_rj;
   --
exception
   when others then
      raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_rj fase ('||vn_fase||'): '||sqlerrm);
end pkb_gera_arq_gia_rj;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-RN
------------------------------------------------
procedure pkb_gera_arq_gia_rn is
   --
   -- variáveis do controle do vetor
   i pls_integer;
   -- variáveis do processo
   vn_fase                number := 0;
   vb_achou               boolean;
   --
   vn_cfop                cfop.cd%type := 0;
   vn_vl_contabil         number(15, 2) := 0;
   vv_cod_st_icms         cod_st.cod_st%type := null;
   vn_vl_base_calc_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_icms           imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_icms    imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_base_calc_icmsst imp_itemnf.vl_base_calc%type := 0;
   vn_vl_imp_trib_icmsst  imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_icms   imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_icms    imp_itemnf.vl_base_calc%type := 0;
   vv_cod_st_ipi          cod_st.cod_st%type := null;
   vn_vl_base_calc_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_aliq_ipi            imp_itemnf.aliq_apli%type := 0;
   vn_vl_imp_trib_ipi     imp_itemnf.vl_imp_trib%type := 0;
   vn_vl_bc_isenta_ipi    imp_itemnf.vl_base_calc%type := 0;
   vn_vl_bc_outra_ipi     imp_itemnf.vl_base_calc%type := 0;
   vn_ipi_nao_recup       number;
   vn_outro_ipi           number;
   vn_vl_imp_nao_dest_ipi number;
   vn_vl_fcp_icmsst       number;
   vn_aliq_fcp_icms       number;
   vn_vl_fcp_icms         number;
   --
   vn_vlr_ctb_ent         number := 0;
   vn_Base_Calculo_ent    number := 0;
   vn_Imp_creditado_ent   number := 0;
   vn_VlContOper_ST_ent   number := 0;
   --
   vn_vlr_ctb_sai         number := 0;
   vn_Base_Calculo_sai    number := 0;
   vn_Imp_creditado_sai   number := 0;
   vn_VlContOper_ST_sai   number := 0;
   --
   -- TP01 - Cabeçalho
   type tab_tp01 is record(
      MesRefer          number(2),
      AnoRefer          number(4),
      IE                number(9),
      GIM               varchar2(1));
   --
   type t_tab_tp01 is table of tab_tp01 index by binary_integer;
   vt_tab_tp01 t_tab_tp01;
   --
   -- TP02 - Entradas do Estado
   type tab_tp02 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_creditado     number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp02 is table of tab_tp02 index by binary_integer;
   vt_bi_tab_tp02 t_tab_tp02;
   --
   -- TP03 - Entradas de Outros Estados
   type tab_tp03 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_creditado     number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp03 is table of tab_tp03 index by binary_integer;
   vt_bi_tab_tp03 t_tab_tp03;
   --
   -- TP04 - Entradas do Exterior
   type tab_tp04 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_creditado     number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp04 is table of tab_tp04 index by binary_integer;
   vt_bi_tab_tp04 t_tab_tp04;
   --
   -- TP05 - Totais de Entradas
   type tab_tp05 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_creditado     number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp05 is table of tab_tp05 index by binary_integer;
   vt_bi_tab_tp05 t_tab_tp05;
   --
   -- TP06 - Saídas para o Estado
   type tab_tp06 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_debitado      number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp06 is table of tab_tp06 index by binary_integer;
   vt_bi_tab_tp06 t_tab_tp06;
   --
   -- TP07 - Saídas para Outros Estados
   type tab_tp07 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_debitado      number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp07 is table of tab_tp07 index by binary_integer;
   vt_bi_tab_tp07 t_tab_tp07;
   --
   -- TP08 - Saídas para o Exterior
   type tab_tp08 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_debitado      number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp08 is table of tab_tp08 index by binary_integer;
   vt_bi_tab_tp08 t_tab_tp08;
   --
   -- TP09 - Totais das Saídas
   type tab_tp09 is record(
      VlContabeis       number(15),
      Base_calculo      number(15),
      Imp_debitado      number(15),
      VlContOper_ST     number(15));
   --
   type t_tab_tp09 is table of tab_tp09 index by binary_integer;
   vt_bi_tab_tp09 t_tab_tp09;
   --
   -- TP10 - Débito do Imposto
   type tab_tp10 is record(
      Saidas_deb_imp   number(15),
      outros_debitos   number(15),
      estorno_creditos number(15),
      total            number(15));
   --
   type t_tab_tp10 is table of tab_tp10 index by binary_integer;
   vt_bi_tab_tp10 t_tab_tp10;
   --
   -- TP11 - Crédito do Imposto
   type tab_tp11 is record(
      entradas_cred_imp  number(15),
      outros_creditos    number(15),
      estorno_debitos    number(15),
      subtotal           number(15),
      saldo_credor       number(15),
      total              number(15));
   --
   type t_tab_tp11 is table of tab_tp11 index by binary_integer;
   vt_bi_tab_tp11 t_tab_tp11;
   --
   -- TP12 - Apuração dos Saldos
   type tab_tp12 is record(
      saldo_devedor         number(15),
      deducoes              number(15),
      imp_recolher          number(15),
      saldo_credor_per_seg  number(15));
   --
   type t_tab_tp12 is table of tab_tp12 index by binary_integer;
   vt_bi_tab_tp12 t_tab_tp12;
   --
   -- TP13 - ICMS do Período (Normal / Substituição)
   type tab_tp13 is record(
      A              number(15),
      B              number(15));
   --
   type t_tab_tp13 is table of tab_tp13 index by binary_integer;
   vt_bi_tab_tp13 t_tab_tp13;
   --
   -- TP14 - ICMS do Período (Substituido pelas Saidas - Prestação de Serviço / Mercadorias)
   type tab_tp14 is record(
      A              number(15),
      B              number(15));
   --
   type t_tab_tp14 is table of tab_tp14 index by binary_integer;
   vt_bi_tab_tp14 t_tab_tp14;
   --
   -- TP15 - ICMS do Período (Substituido pelas Entradas)
   type tab_tp15 is record(
      A              number(15),
      B              number(15));
   --
   type t_tab_tp15 is table of tab_tp15 index by binary_integer;
   vt_bi_tab_tp15 t_tab_tp15;
   --
   -- TP16 - ICMS do Período (Ativo Permanente: Crédito Normal/Consumo)
   type tab_tp16 is record(
      A              number(15),
      B              number(15));
   --
   type t_tab_tp16 is table of tab_tp16 index by binary_integer;
   vt_bi_tab_tp16 t_tab_tp16;
   --
   -- TP17 - ICMS do Período (Serviço de Transporte / Diferença de Alíquotas)
   type tab_tp17 is record(
      A              number(15),
      B              number(15));
   --
   type t_tab_tp17 is table of tab_tp17 index by binary_integer;
   vt_bi_tab_tp17 t_tab_tp17;
   --
   -- TP18 - ICMS do Período (Diferimento: Importação / Regime Especial)
   type tab_tp18 is record(
      A              number(15),
      B              number(15));
   --
   type t_tab_tp18 is table of tab_tp18 index by binary_integer;
   vt_bi_tab_tp18 t_tab_tp18;
   --
   -- TP19 - ICMS do Período (FECOP - Normal / Substituto)
   type tab_tp19 is record(
      A              number(15),
      B              number(15));
   --
   type t_tab_tp19 is table of tab_tp19 index by binary_integer;
   vt_bi_tab_tp19 t_tab_tp19;
   --
   -- TP20 - Estoque
   type tab_tp20 is record(
      mes            number(2),
      ano            number(4),
      valor          number(15));
   --
   type t_tab_tp20 is table of tab_tp20 index by binary_integer;
   vt_bi_tab_tp20 t_tab_tp20;
   --
   -- TP21 - Detalhamentos dos Débitos e Créditos
   type tab_tp21 is record(
      nr_campo       number(2),
      descricao      varchar2(30),
      valor          number(15));
   --
   type t_tab_tp21 is table of tab_tp21 index by binary_integer;
   vt_bi_tab_tp21 t_tab_tp21;
   --
   -- TP22 - Observações
   type tab_tp22 is record(
      nr_campo       number(2),
      observacao     varchar2(30));
   --
   type t_tab_tp22 is table of tab_tp22 index by binary_integer;
   vt_bi_tab_tp22 t_tab_tp22;
   --
   -- Cursores
   --
   cursor c_det_cfop is
      select nf.id notafiscal_id,
             nf.dm_ind_oper, -- 0-entrada, 1-saida
             nf.dm_ind_emit, -- 0-emiss?o propria, 1-terceiros
             cod_mod,
             nf.pessoa_id,
             nf.dt_emiss,
             nf.nro_nf,
             nf.serie serie_nf,
             inf.id itemnf_id
        from nota_fiscal      nf
           , mod_fiscal       mf
           , item_nota_fiscal inf
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('01', '1B', '04', '55', '65')
         and inf.notafiscal_id  = nf.id
       order by 1, 2;
   --
   cursor c_det_cfop_sc is
      select nf.id       notafiscal_id
           , nf.dm_ind_emit
           , nf.pessoa_id
           , nf.dt_emiss
           , nf.nro_nf
           , r.id nfregistanalit_id
        from nota_fiscal     nf
           , mod_fiscal      mf
           , nfregist_analit r
       where nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and nf.dm_st_proc      = 4
         and nf.dm_arm_nfe_terc = 0
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and mf.id              = nf.modfiscal_id
         and mf.cod_mod        in ('06', '29', '28', '21', '22')
         and r.notafiscal_id    = nf.id
       order by 1;
   --
   cursor c_det_cfop_ct is
      select ct.id conhectransp_id,
             ct.dm_ind_oper,
             ct.pessoa_id,
             ct.dt_hr_emissao dt_emiss,
             ct.nro_ct,
             ct.serie serie_ct,
             ct.subserie subserie_ct,
             r.id ctreganal_id
        from conhec_transp ct
           , ct_reg_anal   r
       where ct.empresa_id      = gt_row_abertura_gia.empresa_id
         and ct.dm_st_proc      = 4 -- Autorizada
         and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
         and ct.dm_arm_cte_terc = 0
         and r.conhectransp_id  = ct.id
       order by 1;
   --
   cursor c_det_cfop_ecf is
      select r.id      reducaozecf_id
           , r.dt_doc  dt_emiss
           , ramd.id   reganalmovdiaecf_id
        from equip_ecf            e
           , reducao_z_ecf        r
           , reg_anal_mov_dia_ecf ramd
       where e.empresa_id          = gt_row_abertura_gia.empresa_id
         and r.equipecf_id         = e.id
         and r.dm_st_proc          = 1 -- Validada
         and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
         and ramd.reducaozecf_id   = r.id
       order by 1;
   --
   cursor c_apur_icms is
      select ai.*
        from apuracao_icms ai
       where ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and ai.dm_situacao       = 3 -- Processada
         and ai.dm_tipo           = 0 -- Real
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin;
   --
   cursor c_ajust is
      select pk_csf.fkg_dominio('COD_AJ_SALDO_APUR_ICMS.DM_UTIL', casai.dm_util) descr
           , casai.dm_util
           , sum(aai.vl_aj_apur) vl_aj_apur
        from apuracao_icms          ai
           , ajust_apuracao_icms    aai
           , cod_aj_saldo_apur_icms casai
       where ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and ai.dm_situacao       = 3 -- Processada
         and ai.dm_tipo           = 0 -- Real
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
         and aai.apuracaoicms_id  = ai.id
         and casai.id             = CODAJSALDOAPURICMS_ID
         and casai.dm_apur        = 0 -- icms
         and casai.dm_util       <> 5
       group by pk_csf.fkg_dominio('COD_AJ_SALDO_APUR_ICMS.DM_UTIL', casai.dm_util)
           , casai.dm_util;
   --
   procedure pkb_limpa_vetor_rn is
      --
   begin
      --
      vt_tab_tp01.delete;
      vt_bi_tab_tp02.delete;
      vt_bi_tab_tp03.delete;
      vt_bi_tab_tp04.delete;
      vt_bi_tab_tp05.delete;
      vt_bi_tab_tp06.delete;
      vt_bi_tab_tp07.delete;
      vt_bi_tab_tp08.delete;
      vt_bi_tab_tp09.delete;
      vt_bi_tab_tp10.delete;
      vt_bi_tab_tp11.delete;
      vt_bi_tab_tp12.delete;
      vt_bi_tab_tp13.delete;
      vt_bi_tab_tp14.delete;
      vt_bi_tab_tp15.delete;
      vt_bi_tab_tp16.delete;
      vt_bi_tab_tp17.delete;
      vt_bi_tab_tp18.delete;
      vt_bi_tab_tp19.delete;
      vt_bi_tab_tp20.delete;
      vt_bi_tab_tp21.delete;
      vt_bi_tab_tp22.delete;
      --
   end pkb_limpa_vetor_rn;
   --
   -- procedimento monta a estrutura do arquivo da GIA-RN
   --
   procedure pkb_monta_estr_arq_gia_rn is
      --
      vn_fase_arq    number := 0;
      vn_qtde_linha  number := 0;
      --
   begin
      --
      vn_fase_arq := 1;
      --
      -- TP01 - Cabeçalho
      if nvl(vt_tab_tp01.count, 0) > 0 then
         --
         vn_fase_arq := 1.1;
         --
         i := nvl(vt_tab_tp01.first, 0);
         --
         loop
            --
            vn_fase_arq := 1.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 1.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).MesRefer, 2, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).AnoRefer, 4, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).IE, 9, '0');
            gl_conteudo := gl_conteudo || lpad(vt_tab_tp01(i).GIM, 1, ' ');
            --
            vn_fase_arq := 1.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '1',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 1.5;
            --
            if i = vt_tab_tp01.last then
               exit;
            else
               i := vt_tab_tp01.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP01 - Cabeçalho
      --
      vn_fase_arq := 2;
      --
      -- TP02 - Entradas do Estado
      if nvl(vt_bi_tab_tp02.count, 0) > 0 then
         --
         vn_fase_arq := 2.1;
         --
         i := nvl(vt_bi_tab_tp02.first, 0);
         --
         loop
            --
            vn_fase_arq := 2.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 2.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp02(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp02(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp02(i).Imp_creditado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp02(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 2.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '2',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 2.5;
            --
            if i = vt_bi_tab_tp02.last then
               exit;
            else
               i := vt_bi_tab_tp02.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP02 - Entradas do Estado
      --
      vn_fase_arq := 3;
      --
      -- TP03 - Entradas de Outros Estados
      if nvl(vt_bi_tab_tp03.count, 0) > 0 then
         --
         vn_fase_arq := 3.1;
         --
         i := nvl(vt_bi_tab_tp03.first, 0);
         --
         loop
            --
            vn_fase_arq := 3.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 3.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp03(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp03(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp03(i).Imp_creditado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp03(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 3.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '3',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 3.5;
            --
            if i = vt_bi_tab_tp03.last then
               exit;
            else
               i := vt_bi_tab_tp03.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP03 - Entradas de Outros Estados
      --
      vn_fase_arq := 4;
      --
      -- TP04 - Entradas do Exterior
      if nvl(vt_bi_tab_tp04.count, 0) > 0 then
         --
         vn_fase_arq := 4.1;
         --
         i := nvl(vt_bi_tab_tp04.first, 0);
         --
         loop
            --
            vn_fase_arq := 4.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 4.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp04(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp04(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp04(i).Imp_creditado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp04(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 4.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '4',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 4.5;
            --
            if i = vt_bi_tab_tp04.last then
               exit;
            else
               i := vt_bi_tab_tp04.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP04 - Entradas do Exterior
      --
      vn_fase_arq := 5;
      --
      -- TP05 - Totais das Entradas
      if nvl(vt_bi_tab_tp05.count, 0) > 0 then
         --
         vn_fase_arq := 5.1;
         --
         i := nvl(vt_bi_tab_tp05.first, 0);
         --
         loop
            --
            vn_fase_arq := 5.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 5.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp05(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp05(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp05(i).Imp_creditado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp05(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 5.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '5',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 5.5;
            --
            if i = vt_bi_tab_tp05.last then
               exit;
            else
               i := vt_bi_tab_tp05.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP05 - Totais das Entradas
      --
      vn_fase_arq := 6;
      --
      -- TP16 - Saídas para o Estado
      if nvl(vt_bi_tab_tp06.count, 0) > 0 then
         --
         vn_fase_arq := 6.1;
         --
         i := nvl(vt_bi_tab_tp06.first, 0);
         --
         loop
            --
            vn_fase_arq := 6.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 6.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp06(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp06(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp06(i).Imp_debitado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp06(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 6.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '6',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 6.5;
            --
            if i = vt_bi_tab_tp06.last then
               exit;
            else
               i := vt_bi_tab_tp06.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP06 - Saídas para o Estado
      --
      vn_fase_arq := 7;
      --
      -- TP07 - Saídas para Outros Estados
      if nvl(vt_bi_tab_tp07.count, 0) > 0 then
         --
         vn_fase_arq := 7.1;
         --
         i := nvl(vt_bi_tab_tp07.first, 0);
         --
         loop
            --
            vn_fase_arq := 7.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 7.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp07(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp07(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp07(i).Imp_debitado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp07(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 7.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '7',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 7.5;
            --
            if i = vt_bi_tab_tp07.last then
               exit;
            else
               i := vt_bi_tab_tp07.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP07 - Saídas para Outros Estados
      --
      vn_fase_arq := 8;
      --
      -- TP08 - Saídas para o Exterior
      if nvl(vt_bi_tab_tp08.count, 0) > 0 then
         --
         vn_fase_arq := 8.1;
         --
         i := nvl(vt_bi_tab_tp08.first, 0);
         --
         loop
            --
            vn_fase_arq := 8.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 8.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp08(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp08(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp08(i).Imp_debitado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp08(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 8.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '8',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 8.5;
            --
            if i = vt_bi_tab_tp08.last then
               exit;
            else
               i := vt_bi_tab_tp08.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP08 - Saídas para o Exterior
      --
      vn_fase_arq := 9;
      --
      -- TP09 - Totais de saída
      if nvl(vt_bi_tab_tp09.count, 0) > 0 then
         --
         vn_fase_arq := 9.1;
         --
         i := nvl(vt_bi_tab_tp09.first, 0);
         --
         loop
            --
            vn_fase_arq := 9.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 9.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp09(i).VlContabeis, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp09(i).Base_calculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp09(i).Imp_debitado, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp09(i).VlContOper_ST, 0), 15, '0');
            --
            vn_fase_arq := 9.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '9',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 9.5;
            --
            if i = vt_bi_tab_tp09.last then
               exit;
            else
               i := vt_bi_tab_tp09.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP09 - Totais de Saída
      --
      vn_fase_arq := 10;
      --
      -- TP10 - Débito do Imposto
      if nvl(vt_bi_tab_tp10.count, 0) > 0 then
         --
         vn_fase_arq := 10.1;
         --
         i := nvl(vt_bi_tab_tp10.first, 0);
         --
         loop
            --
            vn_fase_arq := 10.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 10.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i).saidas_deb_imp, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i).outros_debitos, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i).estorno_creditos, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp10(i).total, 0), 15, '0');
            --
            vn_fase_arq := 10.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '10',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 10.5;
            --
            if i = vt_bi_tab_tp10.last then
               exit;
            else
               i := vt_bi_tab_tp10.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP10 - Débito do imposto
      --
      vn_fase_arq := 11;
      --
      -- TP11 - Crédito do Imposto
      if nvl(vt_bi_tab_tp11.count, 0) > 0 then
         --
         vn_fase_arq := 11.1;
         --
         i := nvl(vt_bi_tab_tp11.first, 0);
         --
         loop
            --
            vn_fase_arq := 11.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 11.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i).entradas_cred_imp, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i).outros_creditos, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i).estorno_debitos, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i).subtotal, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i).saldo_credor, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp11(i).total, 0), 15, '0');
            --
            vn_fase_arq := 11.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '11',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 11.5;
            --
            if i = vt_bi_tab_tp11.last then
               exit;
            else
               i := vt_bi_tab_tp11.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP11 - Crédito do Imposto
      --
      vn_fase_arq := 12;
      --
      -- TP12 - Apuração dos Saldos
      if nvl(vt_bi_tab_tp12.count, 0) > 0 then
         --
         vn_fase_arq := 12.1;
         --
         i := nvl(vt_bi_tab_tp12.first, 0);
         --
         loop
            --
            vn_fase_arq := 12.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 12.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp12(i).saldo_devedor, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp12(i).deducoes, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp12(i).imp_recolher, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp12(i).saldo_credor_per_seg, 0), 15, '0');
            --
            vn_fase_arq := 12.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '12',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 12.5;
            --
            if i = vt_bi_tab_tp12.last then
               exit;
            else
               i := vt_bi_tab_tp12.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP12 - Apuração dos Saldos
      --
      vn_fase_arq := 13;
      --
      -- TP13 - ICMS do Período (Normal / Substituição)
      if nvl(vt_bi_tab_tp13.count, 0) > 0 then
         --
         vn_fase_arq := 13.1;
         --
         i := nvl(vt_bi_tab_tp13.first, 0);
         --
         loop
            --
            vn_fase_arq := 13.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 13.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp13(i).A, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp13(i).B, 0), 15, '0');
            --
            vn_fase_arq := 13.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '13',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 13.5;
            --
            if i = vt_bi_tab_tp13.last then
               exit;
            else
               i := vt_bi_tab_tp13.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP13 - ICMS do Período (Normal / Substituição)
      --
      vn_fase_arq := 14;
      --
      -- TP14 - ICMS do Período (Substituto pelas Saídas - Prestações de Serviço / Mercadoria)
      if nvl(vt_bi_tab_tp14.count, 0) > 0 then
         --
         vn_fase_arq := 14.1;
         --
         i := nvl(vt_bi_tab_tp14.first, 0);
         --
         loop
            --
            vn_fase_arq := 14.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 14.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp14(i).A, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp14(i).B, 0), 15, '0');
            --
            vn_fase_arq := 14.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '14',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 14.5;
            --
            if i = vt_bi_tab_tp14.last then
               exit;
            else
               i := vt_bi_tab_tp14.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP14 - ICMS do Período (Substituto pelas Saídas - Prestações de Serviço / Mercadoria)
      --
      vn_fase_arq := 15;
      -- TP15 - ICMS do Período (Substituto pelas Entradas)
      if nvl(vt_bi_tab_tp15.count, 0) > 0 then
         --
         vn_fase_arq := 15.1;
         --
         i := nvl(vt_bi_tab_tp15.first, 0);
         --
         loop
            --
            vn_fase_arq := 15.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 15.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp15(i).A, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp15(i).B, 0), 15, '0');
            --
            vn_fase_arq := 15.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '15',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 15.5;
            --
            if i = vt_bi_tab_tp15.last then
               exit;
            else
               i := vt_bi_tab_tp15.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP15 - ICMS do Período (Substituto pelas Entradas)
      --
      vn_fase_arq := 16;
      -- TP16 - ICMS do Período (Ativo Permanente: Crédito Normal/Consumo)
      if nvl(vt_bi_tab_tp16.count, 0) > 0 then
         --
         vn_fase_arq := 16.1;
         --
         i := nvl(vt_bi_tab_tp16.first, 0);
         --
         loop
            --
            vn_fase_arq := 16.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 16.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp16(i).A, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp16(i).B, 0), 15, '0');
            --
            vn_fase_arq := 16.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '16',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 16.5;
            --
            if i = vt_bi_tab_tp16.last then
               exit;
            else
               i := vt_bi_tab_tp16.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP16 - ICMS do Período (Ativo Permanente: Crédito Normal/Consumo)
      --
      vn_fase_arq := 17;
      -- TP17 - ICMS do Período (Serviço de Transporte / Diferença de Alíquotas)
      if nvl(vt_bi_tab_tp17.count, 0) > 0 then
         --
         vn_fase_arq := 17.1;
         --
         i := nvl(vt_bi_tab_tp17.first, 0);
         --
         loop
            --
            vn_fase_arq := 17.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 17.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp17(i).A, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp17(i).B, 0), 15, '0');
            --
            vn_fase_arq := 17.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '17',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 17.5;
            --
            if i = vt_bi_tab_tp17.last then
               exit;
            else
               i := vt_bi_tab_tp17.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP17 - ICMS do Período (Serviço de Transporte / Diferença de Alíquotas)
      --
      vn_fase_arq := 18;
      -- TP18 - ICMS do Período (Diferimento: Importação / Regime Especial)
      if nvl(vt_bi_tab_tp18.count, 0) > 0 then
         --
         vn_fase_arq := 18.1;
         --
         i := nvl(vt_bi_tab_tp18.first, 0);
         --
         loop
            --
            vn_fase_arq := 18.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 18.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp18(i).A, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp18(i).B, 0), 15, '0');
            --
            vn_fase_arq := 18.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '18',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 18.5;
            --
            if i = vt_bi_tab_tp18.last then
               exit;
            else
               i := vt_bi_tab_tp18.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP18 - ICMS do Período (Diferimento: Importação / Regime Especial)
      --
      vn_fase_arq := 19;
      -- TP19 - ICMS do Período (FECOP - Normal / Substituto)
      if nvl(vt_bi_tab_tp19.count, 0) > 0 then
         --
         vn_fase_arq := 19.1;
         --
         i := nvl(vt_bi_tab_tp19.first, 0);
         --
         loop
            --
            vn_fase_arq := 19.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 19.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp19(i).A, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp19(i).B, 0), 15, '0');
            --
            vn_fase_arq := 19.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '19',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 19.5;
            --
            if i = vt_bi_tab_tp19.last then
               exit;
            else
               i := vt_bi_tab_tp19.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP19 - ICMS do Período (FECOP - Normal / Substituto)
      --
      vn_fase_arq := 20;
      -- TP20 - Estoque
      if nvl(vt_bi_tab_tp20.count, 0) > 0 then
         --
         vn_fase_arq := 20.1;
         --
         i := nvl(vt_bi_tab_tp20.first, 0);
         --
         loop
            --
            vn_fase_arq := 20.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 20.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp20(i).mes, 0), 2, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp20(i).ano, 0), 4, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp20(i).valor, 0), 15, '0');
            --
            vn_fase_arq := 20.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '20',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 20.5;
            --
            if i = vt_bi_tab_tp20.last then
               exit;
            else
               i := vt_bi_tab_tp20.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP20 - Estoque
      --
      vn_fase_arq := 21;
      -- TP21 - Detalhamentos dos Débitos e Créditos
      if nvl(vt_bi_tab_tp21.count, 0) > 0 then
         --
         vn_fase_arq := 21.1;
         --
         i := nvl(vt_bi_tab_tp21.first, 0);
         --
         loop
            --
            vn_fase_arq := 21.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 21.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i).nr_campo, 0), 2, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i).descricao, 0), 30, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp21(i).valor, 0), 15, '0');
            --
            vn_fase_arq := 21.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '21',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 21.5;
            --
            if i = vt_bi_tab_tp21.last then
               exit;
            else
               i := vt_bi_tab_tp21.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP21 - Detalhamentos dos Débitos e Créditos
      --
      vn_fase_arq := 22;
      -- TP22 - Observações -  3 linhas
      if nvl(vt_bi_tab_tp22.count, 0) > 0 then
         --
         vn_fase_arq := 22.1;
         --
         i := nvl(vt_bi_tab_tp22.first, 0);
         --
         loop
            --
            vn_fase_arq := 22.2;
            --
            if nvl(i, 0) = 0 then
               exit;
            end if;
            --
            vn_fase_arq := 22.3;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i).nr_campo, 0), 2, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i).observacao, 0), 30, ' ');
            --
            vn_fase_arq := 22.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '22',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 22.5;
            --
            if i = vt_bi_tab_tp22.last then
               exit;
            else
               i := vt_bi_tab_tp22.next(i);
            end if;
            --
         end loop;
         --
      end if; -- TP22 - Observações
      --
      vn_fase_arq := 23;
      -- Final da montagem das linhas do arquivo texto
      --
      pkb_limpa_vetor_rn;
      --
   exception
      when others then
         raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_rn fase ('||vn_fase_arq||'): '||sqlerrm);
   end pkb_monta_estr_arq_gia_rn;
   --
   -- INICIO PROCEDIMENTO GIA RN
   --
begin
   --
   vn_fase := 1;
   --
   gv_tipocodarq_cd := '9'; -- GIA-RN
   --
   pkb_limpa_vetor_rn;
   --
   vn_fase := 2;
   --
   -- Registro TP01 - Cabeçalho
   vt_tab_tp01(1).MesRefer := to_char(gt_row_abertura_gia.dt_fin, 'MM'); -- Mês de referência
   vt_tab_tp01(1).AnoRefer := to_char(gt_row_abertura_gia.dt_fin, 'RRRR'); -- Ano de referência
   vt_tab_tp01(1).IE       := lpad(nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0), 9, '0'); -- IE
   vt_tab_tp01(1).gim      := 'N'; -- GIM Zerada (S/N) -- verificar com Leandro
   --
   vn_fase := 2.1;
   --
   vn_vlr_ctb_ent       := 0;
   vn_Base_Calculo_ent  := 0;
   vn_Imp_creditado_ent := 0;
   vn_VlContOper_ST_ent := 0;
   vn_vlr_ctb_sai       := 0;
   vn_Base_Calculo_sai  := 0;
   vn_Imp_creditado_sai := 0;
   vn_VlContOper_ST_sai := 0;
   --
   vn_fase := 2.2;
   -- inicia os registros obrigatórios mesmo com zero
   vt_bi_tab_tp02(1).VlContabeis   := 0;
   vt_bi_tab_tp02(1).Base_Calculo  := 0;
   vt_bi_tab_tp02(1).Imp_creditado := 0;
   vt_bi_tab_tp02(1).VlContOper_ST := 0;
   --
   vt_bi_tab_tp03(1).VlContabeis   := 0;
   vt_bi_tab_tp03(1).Base_Calculo  := 0;
   vt_bi_tab_tp03(1).Imp_creditado := 0;
   vt_bi_tab_tp03(1).VlContOper_ST := 0;
   --
   vt_bi_tab_tp04(1).VlContabeis   := 0;
   vt_bi_tab_tp04(1).Base_Calculo  := 0;
   vt_bi_tab_tp04(1).Imp_creditado := 0;
   vt_bi_tab_tp04(1).VlContOper_ST := 0;
   --
   vt_bi_tab_tp06(1).VlContabeis   := 0;
   vt_bi_tab_tp06(1).Base_Calculo  := 0;
   vt_bi_tab_tp06(1).Imp_debitado  := 0;
   vt_bi_tab_tp06(1).VlContOper_ST := 0;
   --
   vt_bi_tab_tp07(1).VlContabeis   := 0;
   vt_bi_tab_tp07(1).Base_Calculo  := 0;
   vt_bi_tab_tp07(1).Imp_debitado  := 0;
   vt_bi_tab_tp07(1).VlContOper_ST := 0;
   --
   vt_bi_tab_tp08(1).VlContabeis   := 0;
   vt_bi_tab_tp08(1).Base_Calculo  := 0;
   vt_bi_tab_tp08(1).Imp_debitado  := 0;
   vt_bi_tab_tp08(1).VlContOper_ST := 0;
   --
   vn_fase := 3;
   --
   for rec in c_det_cfop loop
      exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
      --
      vn_fase := 3.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      vn_vl_fcp_icmsst       := 0;
      vn_aliq_fcp_icms       := 0;
      vn_vl_fcp_icms         := 0;
      --
      vn_fase := 3.2;
      --
      pk_csf_api.pkb_vlr_fiscal_item_nf( en_itemnf_id           => rec.itemnf_id
                                       , sn_cfop                => vn_cfop
                                       , sn_vl_operacao         => vn_vl_contabil
                                       , sv_cod_st_icms         => vv_cod_st_icms
                                       , sn_vl_base_calc_icms   => vn_vl_base_calc_icms
                                       , sn_aliq_icms           => vn_aliq_icms
                                       , sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms
                                       , sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst
                                       , sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst
                                       , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                       , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                       , sv_cod_st_ipi          => vv_cod_st_ipi -- não utilizado
                                       , sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi -- não utilizado
                                       , sn_aliq_ipi            => vn_aliq_ipi -- não utilizado
                                       , sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi -- não utilizado
                                       , sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi -- não utilizado
                                       , sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi -- não utilizado
                                       , sn_ipi_nao_recup       => vn_ipi_nao_recup -- não utilizado
                                       , sn_outro_ipi           => vn_outro_ipi -- não utilizado
                                       , sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi
                                       , sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst
                                       , sn_aliq_fcp_icms       => vn_aliq_fcp_icms
                                       , sn_vl_fcp_icms         => vn_vl_fcp_icms
                                       );
      --
      vn_fase := 3.3;
      --
      -- Verifica Entradas do Estado - 2º registro
      if substr(vn_cfop,1,1) = 1 then
         --
         vn_fase := 3.4;
         --
         begin
            vb_achou := vt_bi_tab_tp02.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 3.5;
         --
         if not vb_achou then
            --
            vn_fase := 3.6;
            vt_bi_tab_tp02(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         else
            --
            vn_fase := 3.7;
            vt_bi_tab_tp02(1).VlContabeis   := nvl(vt_bi_tab_tp02(1).VlContabeis,0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := nvl(vt_bi_tab_tp02(1).Base_Calculo,0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := nvl(vt_bi_tab_tp02(1).Imp_creditado,0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := nvl(vt_bi_tab_tp02(1).VlContOper_ST,0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         end if;
         --
         vn_fase := 3.8;
         --
         vn_vlr_ctb_ent        := nvl(vn_vlr_ctb_ent,0) + vt_bi_tab_tp02(1).VlContabeis;
         vn_Base_Calculo_ent   := nvl(vn_Base_Calculo_ent,0) + vt_bi_tab_tp02(1).Base_Calculo;
         vn_Imp_creditado_ent  := nvl(vn_Imp_creditado_ent,0) + vt_bi_tab_tp02(1).Imp_creditado;
         vn_VlContOper_ST_ent  := nvl(vn_VlContOper_ST_ent,0) +  vt_bi_tab_tp02(1).VlContOper_ST;
         --
      elsif substr(vn_cfop,1,1) = 2 then -- Verifica Entradas de Outros Estados - 3º registro
            --
            vn_fase := 3.9;
            --
            begin
               vb_achou := vt_bi_tab_tp03.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 3.10;
            --
            if not vb_achou then
               --
               vn_fase := 3.11;
               vt_bi_tab_tp03(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 3.12;
               vt_bi_tab_tp03(1).VlContabeis   := nvl(vt_bi_tab_tp03(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := nvl(vt_bi_tab_tp03(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := nvl(vt_bi_tab_tp03(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := nvl(vt_bi_tab_tp03(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 3.13;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp03(1).VlContabeis;
            vn_Base_Calculo_ent  := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp03(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp03(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp03(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 3 then -- Verifica Entradas do Exterior -- 4º registro
            --
            vn_fase := 3.14;
            --
            begin
               vb_achou := vt_bi_tab_tp04.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 3.15;
            --
            if not vb_achou then
               --
               vn_fase := 3.16;
               vt_bi_tab_tp04(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 3.17;
               vt_bi_tab_tp04(1).VlContabeis   := nvl(vt_bi_tab_tp04(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := nvl(vt_bi_tab_tp04(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := nvl(vt_bi_tab_tp04(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := nvl(vt_bi_tab_tp04(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 3.18;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp04(1).VlContabeis;
            vn_Base_Calculo_ent := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp04(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp04(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp04(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 5 then -- Verifica Saídas para o Estado - 6º registro
            --
            vn_fase := 3.19;
            --
            begin
               vb_achou := vt_bi_tab_tp06.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 3.20;
            --
            if not vb_achou then
               --
               vn_fase := 3.21;
               vt_bi_tab_tp06(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 3.22;
               vt_bi_tab_tp06(1).VlContabeis   := nvl(vt_bi_tab_tp06(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := nvl(vt_bi_tab_tp06(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := nvl(vt_bi_tab_tp06(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := nvl(vt_bi_tab_tp06(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 3.23;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp06(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp06(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp06(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) + vt_bi_tab_tp06(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 6 then -- Saídas para Outros Estados - 7º registro
            --
            vn_fase := 3.24;
            --
            begin
               vb_achou := vt_bi_tab_tp07.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 3.25;
            --
            if not vb_achou then
               --
               vn_fase := 3.26;
               vt_bi_tab_tp07(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 3.27;
               vt_bi_tab_tp07(1).VlContabeis   := nvl(vt_bi_tab_tp07(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := nvl(vt_bi_tab_tp07(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := nvl(vt_bi_tab_tp07(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := nvl(vt_bi_tab_tp07(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 3.28;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp07(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp07(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp07(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp07(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 7 then -- Saídas para o Exterior -- 8º registro
            --
            vn_fase := 3.29;
            --
            begin
               vb_achou := vt_bi_tab_tp08.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 3.30;
            --
            if not vb_achou then
               --
               vn_fase := 3.31;
               vt_bi_tab_tp08(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 3.32;
               vt_bi_tab_tp08(1).VlContabeis   := nvl(vt_bi_tab_tp08(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := nvl(vt_bi_tab_tp08(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := nvl(vt_bi_tab_tp08(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := nvl(vt_bi_tab_tp08(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 3.33;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp08(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp08(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp08(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp08(1).VlContOper_ST;
            --
      end if;
      --
   end loop; -- c_det_cfop
   --
   vn_fase := 4;
   --
   for rec in c_det_cfop_ct loop
      exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
      --
      vn_fase := 4.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 4.2;
      -- recupera os valores de impostos
      pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                             sv_cod_st_icms       => vv_cod_st_icms,
                                             sn_cfop              => vn_cfop,
                                             sn_aliq_icms         => vn_aliq_icms,
                                             sn_vl_opr            => vn_vl_contabil,
                                             sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                             sn_vl_icms           => vn_vl_imp_trib_icms,
                                             sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                             sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
      --
      vn_fase := 4.3;
      -- Verifica Entradas do Estado - 2º registro
      if substr(vn_cfop,1,1) = 1 then
         --
         vn_fase := 4.4;
         --
         begin
            vb_achou := vt_bi_tab_tp02.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 4.5;
         --
         if not vb_achou then
            --
            vn_fase := 4.6;
            vt_bi_tab_tp02(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         else
            --
            vn_fase := 4.7;
            vt_bi_tab_tp02(1).VlContabeis   := nvl(vt_bi_tab_tp02(1).VlContabeis,0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := nvl(vt_bi_tab_tp02(1).Base_Calculo,0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := nvl(vt_bi_tab_tp02(1).Imp_creditado,0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := nvl(vt_bi_tab_tp02(1).VlContOper_ST,0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         end if;
         --
         vn_fase := 4.8;
         --
         vn_vlr_ctb_ent        := nvl(vn_vlr_ctb_ent,0) + vt_bi_tab_tp02(1).VlContabeis;
         vn_Base_Calculo_ent   := nvl(vn_Base_Calculo_ent,0) + vt_bi_tab_tp02(1).Base_Calculo;
         vn_Imp_creditado_ent  := nvl(vn_Imp_creditado_ent,0) + vt_bi_tab_tp02(1).Imp_creditado;
         vn_VlContOper_ST_ent  := nvl(vn_VlContOper_ST_ent,0) +  vt_bi_tab_tp02(1).VlContOper_ST;
         --
      elsif substr(vn_cfop,1,1) = 2 then -- Verifica Entradas de Outros Estados - 3º registro
            --
            vn_fase := 4.9;
            --
            begin
               vb_achou := vt_bi_tab_tp03.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 4.10;
            --
            if not vb_achou then
               --
               vn_fase := 4.11;
               vt_bi_tab_tp03(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 4.12;
               vt_bi_tab_tp03(1).VlContabeis   := nvl(vt_bi_tab_tp03(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := nvl(vt_bi_tab_tp03(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := nvl(vt_bi_tab_tp03(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := nvl(vt_bi_tab_tp03(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 4.13;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp03(1).VlContabeis;
            vn_Base_Calculo_ent  := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp03(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp03(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp03(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 3 then -- Verifica Entradas do Exterior -- 4º registro
            --
            vn_fase := 4.14;
            --
            begin
               vb_achou := vt_bi_tab_tp04.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 4.15;
            --
            if not vb_achou then
               --
               vn_fase := 4.16;
               vt_bi_tab_tp04(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 4.17;
               vt_bi_tab_tp04(1).VlContabeis   := nvl(vt_bi_tab_tp04(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := nvl(vt_bi_tab_tp04(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := nvl(vt_bi_tab_tp04(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := nvl(vt_bi_tab_tp04(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 4.18;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp04(1).VlContabeis;
            vn_Base_Calculo_ent := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp04(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp04(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp04(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 5 then -- Verifica Saídas para o Estado - 6º registro
            --
            vn_fase := 4.19;
            --
            begin
               vb_achou := vt_bi_tab_tp06.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 4.20;
            --
            if not vb_achou then
               --
               vn_fase := 4.21;
               vt_bi_tab_tp06(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 4.22;
               vt_bi_tab_tp06(1).VlContabeis   := nvl(vt_bi_tab_tp06(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := nvl(vt_bi_tab_tp06(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := nvl(vt_bi_tab_tp06(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := nvl(vt_bi_tab_tp06(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 4.23;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp06(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp06(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp06(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) + vt_bi_tab_tp06(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 6 then -- Saídas para Outros Estados - 7º registro
            --
            vn_fase := 4.24;
            --
            begin
               vb_achou := vt_bi_tab_tp07.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 4.25;
            --
            if not vb_achou then
               --
               vn_fase := 4.26;
               vt_bi_tab_tp07(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 4.27;
               vt_bi_tab_tp07(1).VlContabeis   := nvl(vt_bi_tab_tp07(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := nvl(vt_bi_tab_tp07(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := nvl(vt_bi_tab_tp07(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := nvl(vt_bi_tab_tp07(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 4.28;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp07(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp07(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp07(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp07(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 7 then -- Saídas para o Exterior -- 8º registro
            --
            vn_fase := 4.29;
            --
            begin
               vb_achou := vt_bi_tab_tp08.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 4.30;
            --
            if not vb_achou then
               --
               vn_fase := 4.31;
               vt_bi_tab_tp08(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 4.32;
               vt_bi_tab_tp08(1).VlContabeis   := nvl(vt_bi_tab_tp08(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := nvl(vt_bi_tab_tp08(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := nvl(vt_bi_tab_tp08(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := nvl(vt_bi_tab_tp08(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 4.33;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp08(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp08(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp08(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp08(1).VlContOper_ST;
            --
      end if;
      --
   end loop; -- c_det_cfop_ct
   --
   vn_fase := 5;
   --
   for rec in c_det_cfop_sc loop
      exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
      --
      vn_fase := 5.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 5.2;
      -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
      pk_csf_api.pkb_vlr_fiscal_nfsc ( en_nfregistanalit_id   => rec.nfregistanalit_id
                                     , sv_cod_st_icms         => vv_cod_st_icms
                                     , sn_cfop                => vn_cfop
                                     , sn_aliq_icms           => vn_aliq_icms
                                     , sn_vl_operacao         => vn_vl_contabil
                                     , sn_vl_bc_icms          => vn_vl_base_calc_icms
                                     , sn_vl_icms             => vn_vl_imp_trib_icms
                                     , sn_vl_bc_icmsst        => vn_vl_base_calc_icmsst
                                     , sn_vl_icms_st          => vn_vl_imp_trib_icmsst
                                     , sn_vl_ipi              => vn_vl_imp_trib_ipi
                                     , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                     , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                     );
      --
      vn_fase := 5.3;
      -- Verifica Entradas do Estado - 2º registro
      if substr(vn_cfop,1,1) = 1 then
         --
         vn_fase := 5.4;
         --
         begin
            vb_achou := vt_bi_tab_tp02.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 5.5;
         --
         if not vb_achou then
            --
            vn_fase := 5.6;
            vt_bi_tab_tp02(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         else
            --
            vn_fase := 5.7;
            vt_bi_tab_tp02(1).VlContabeis   := nvl(vt_bi_tab_tp02(1).VlContabeis,0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := nvl(vt_bi_tab_tp02(1).Base_Calculo,0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := nvl(vt_bi_tab_tp02(1).Imp_creditado,0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := nvl(vt_bi_tab_tp02(1).VlContOper_ST,0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         end if;
         --
         vn_fase := 5.8;
         --
         vn_vlr_ctb_ent        := nvl(vn_vlr_ctb_ent,0) + vt_bi_tab_tp02(1).VlContabeis;
         vn_Base_Calculo_ent   := nvl(vn_Base_Calculo_ent,0) + vt_bi_tab_tp02(1).Base_Calculo;
         vn_Imp_creditado_ent  := nvl(vn_Imp_creditado_ent,0) + vt_bi_tab_tp02(1).Imp_creditado;
         vn_VlContOper_ST_ent  := nvl(vn_VlContOper_ST_ent,0) +  vt_bi_tab_tp02(1).VlContOper_ST;
         --
      elsif substr(vn_cfop,1,1) = 2 then -- Verifica Entradas de Outros Estados - 3º registro
            --
            vn_fase := 5.9;
            --
            begin
               vb_achou := vt_bi_tab_tp03.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 5.10;
            --
            if not vb_achou then
               --
               vn_fase := 5.11;
               vt_bi_tab_tp03(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 5.12;
               vt_bi_tab_tp03(1).VlContabeis   := nvl(vt_bi_tab_tp03(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := nvl(vt_bi_tab_tp03(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := nvl(vt_bi_tab_tp03(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := nvl(vt_bi_tab_tp03(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 5.13;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp03(1).VlContabeis;
            vn_Base_Calculo_ent  := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp03(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp03(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp03(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 3 then -- Verifica Entradas do Exterior -- 4º registro
            --
            vn_fase := 5.14;
            --
            begin
               vb_achou := vt_bi_tab_tp04.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 5.15;
            --
            if not vb_achou then
               --
               vn_fase := 5.16;
               vt_bi_tab_tp04(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 5.17;
               vt_bi_tab_tp04(1).VlContabeis   := nvl(vt_bi_tab_tp04(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := nvl(vt_bi_tab_tp04(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := nvl(vt_bi_tab_tp04(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := nvl(vt_bi_tab_tp04(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 5.18;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp04(1).VlContabeis;
            vn_Base_Calculo_ent := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp04(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp04(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp04(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 5 then -- Verifica Saídas para o Estado - 6º registro
            --
            vn_fase := 5.19;
            --
            begin
               vb_achou := vt_bi_tab_tp06.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 5.20;
            --
            if not vb_achou then
               --
               vn_fase := 5.21;
               vt_bi_tab_tp06(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 5.22;
               vt_bi_tab_tp06(1).VlContabeis   := nvl(vt_bi_tab_tp06(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := nvl(vt_bi_tab_tp06(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := nvl(vt_bi_tab_tp06(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := nvl(vt_bi_tab_tp06(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 5.23;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp06(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp06(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp06(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) + vt_bi_tab_tp06(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 6 then -- Saídas para Outros Estados - 7º registro
            --
            vn_fase := 5.24;
            --
            begin
               vb_achou := vt_bi_tab_tp07.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 5.25;
            --
            if not vb_achou then
               --
               vn_fase := 5.26;
               vt_bi_tab_tp07(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 5.27;
               vt_bi_tab_tp07(1).VlContabeis   := nvl(vt_bi_tab_tp07(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := nvl(vt_bi_tab_tp07(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := nvl(vt_bi_tab_tp07(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := nvl(vt_bi_tab_tp07(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 5.28;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp07(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp07(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp07(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp07(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 7 then -- Saídas para o Exterior -- 8º registro
            --
            vn_fase := 5.29;
            --
            begin
               vb_achou := vt_bi_tab_tp08.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 5.30;
            --
            if not vb_achou then
               --
               vn_fase := 5.31;
               vt_bi_tab_tp08(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 5.32;
               vt_bi_tab_tp08(1).VlContabeis   := nvl(vt_bi_tab_tp08(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := nvl(vt_bi_tab_tp08(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := nvl(vt_bi_tab_tp08(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := nvl(vt_bi_tab_tp08(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 5.33;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp08(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp08(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp08(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp08(1).VlContOper_ST;
            --
      end if;
      --
   end loop;
   --
   vn_fase := 6;
   --
   for rec in c_det_cfop_ecf loop
      exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
      --
      vn_fase := 6.1;
      --
      vn_cfop                := 0;
      vn_vl_contabil         := 0;
      vv_cod_st_icms         := null;
      vn_vl_base_calc_icms   := 0;
      vn_aliq_icms           := 0;
      vn_vl_imp_trib_icms    := 0;
      vn_vl_base_calc_icmsst := 0;
      vn_vl_imp_trib_icmsst  := 0;
      vn_vl_bc_isenta_icms   := 0;
      vn_vl_bc_outra_icms    := 0;
      vv_cod_st_ipi          := null;
      vn_vl_base_calc_ipi    := 0;
      vn_aliq_ipi            := 0;
      vn_vl_imp_trib_ipi     := 0;
      vn_vl_bc_isenta_ipi    := 0;
      vn_vl_bc_outra_ipi     := 0;
      vn_ipi_nao_recup       := 0;
      vn_outro_ipi           := 0;
      --
      vn_fase := 6.2;
      -- Recupera valores fiscais (ICMS) do conhecimento de transporte
      pk_csf_api_ecf.pkb_vlr_fiscal_ecf ( en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id
                                        , sv_cod_st_icms         => vv_cod_st_icms
                                        , sn_cfop                => vn_cfop
                                        , sn_aliq_icms           => vn_aliq_icms
                                        , sn_vl_opr              => vn_vl_contabil
                                        , sn_vl_bc_icms          => vn_vl_base_calc_icms
                                        , sn_vl_icms             => vn_vl_imp_trib_icms
                                        , sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms
                                        , sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms
                                        );
      --
      vn_fase := 6.3;
      -- Verifica Entradas do Estado - 2º registro
      if substr(vn_cfop,1,1) = 1 then
         --
         vn_fase := 6.4;
         --
         begin
            vb_achou := vt_bi_tab_tp02.exists(1);
         exception
            when others then
               vb_achou := false;
         end;
         --
         vn_fase := 6.5;
         --
         if not vb_achou then
            --
            vn_fase := 6.6;
            vt_bi_tab_tp02(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         else
            --
            vn_fase := 6.7;
            vt_bi_tab_tp02(1).VlContabeis   := nvl(vt_bi_tab_tp02(1).VlContabeis,0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
            vt_bi_tab_tp02(1).Base_Calculo  := nvl(vt_bi_tab_tp02(1).Base_Calculo,0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
            vt_bi_tab_tp02(1).Imp_creditado := nvl(vt_bi_tab_tp02(1).Imp_creditado,0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
            vt_bi_tab_tp02(1).VlContOper_ST := nvl(vt_bi_tab_tp02(1).VlContOper_ST,0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
            --
         end if;
         --
         vn_fase := 6.8;
         --
         vn_vlr_ctb_ent        := nvl(vn_vlr_ctb_ent,0) + vt_bi_tab_tp02(1).VlContabeis;
         vn_Base_Calculo_ent   := nvl(vn_Base_Calculo_ent,0) + vt_bi_tab_tp02(1).Base_Calculo;
         vn_Imp_creditado_ent  := nvl(vn_Imp_creditado_ent,0) + vt_bi_tab_tp02(1).Imp_creditado;
         vn_VlContOper_ST_ent  := nvl(vn_VlContOper_ST_ent,0) +  vt_bi_tab_tp02(1).VlContOper_ST;
         --
      elsif substr(vn_cfop,1,1) = 2 then -- Verifica Entradas de Outros Estados - 3º registro
            --
            vn_fase := 6.9;
            --
            begin
               vb_achou := vt_bi_tab_tp03.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 6.10;
            --
            if not vb_achou then
               --
               vn_fase := 6.11;
               vt_bi_tab_tp03(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 6.12;
               vt_bi_tab_tp03(1).VlContabeis   := nvl(vt_bi_tab_tp03(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp03(1).Base_Calculo  := nvl(vt_bi_tab_tp03(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp03(1).Imp_creditado := nvl(vt_bi_tab_tp03(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp03(1).VlContOper_ST := nvl(vt_bi_tab_tp03(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 6.13;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp03(1).VlContabeis;
            vn_Base_Calculo_ent  := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp03(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp03(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp03(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 3 then -- Verifica Entradas do Exterior -- 4º registro
            --
            vn_fase := 6.14;
            --
            begin
               vb_achou := vt_bi_tab_tp04.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 6.15;
            --
            if not vb_achou then
               --
               vn_fase := 6.16;
               vt_bi_tab_tp04(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 6.17;
               vt_bi_tab_tp04(1).VlContabeis   := nvl(vt_bi_tab_tp04(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp04(1).Base_Calculo  := nvl(vt_bi_tab_tp04(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp04(1).Imp_creditado := nvl(vt_bi_tab_tp04(1).Imp_creditado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp04(1).VlContOper_ST := nvl(vt_bi_tab_tp04(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 6.18;
            --
            vn_vlr_ctb_ent       := nvl(vn_vlr_ctb_ent, 0) + vt_bi_tab_tp04(1).VlContabeis;
            vn_Base_Calculo_ent := nvl(vn_Base_Calculo_ent, 0) + vt_bi_tab_tp04(1).Base_Calculo;
            vn_Imp_creditado_ent := nvl(vn_Imp_creditado_ent, 0) + vt_bi_tab_tp04(1).Imp_creditado;
            vn_VlContOper_ST_ent := nvl(vn_VlContOper_ST_ent, 0) +  vt_bi_tab_tp04(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 5 then -- Verifica Saídas para o Estado - 6º registro
            --
            vn_fase := 6.19;
            --
            begin
               vb_achou := vt_bi_tab_tp06.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 6.20;
            --
            if not vb_achou then
               --
               vn_fase := 6.21;
               vt_bi_tab_tp06(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 6.22;
               vt_bi_tab_tp06(1).VlContabeis   := nvl(vt_bi_tab_tp06(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp06(1).Base_Calculo  := nvl(vt_bi_tab_tp06(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp06(1).Imp_debitado  := nvl(vt_bi_tab_tp06(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp06(1).VlContOper_ST := nvl(vt_bi_tab_tp06(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 6.23;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp06(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp06(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp06(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) + vt_bi_tab_tp06(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 6 then -- Saídas para Outros Estados - 7º registro
            --
            vn_fase := 6.24;
            --
            begin
               vb_achou := vt_bi_tab_tp07.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 6.25;
            --
            if not vb_achou then
               --
               vn_fase := 6.26;
               vt_bi_tab_tp07(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 6.27;
               vt_bi_tab_tp07(1).VlContabeis   := nvl(vt_bi_tab_tp07(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp07(1).Base_Calculo  := nvl(vt_bi_tab_tp07(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp07(1).Imp_debitado  := nvl(vt_bi_tab_tp07(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp07(1).VlContOper_ST := nvl(vt_bi_tab_tp07(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 6.28;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp07(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp07(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp07(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp07(1).VlContOper_ST;
            --
      elsif substr(vn_cfop,1,1) = 7 then -- Saídas para o Exterior -- 8º registro
            --
            vn_fase := 6.29;
            --
            begin
               vb_achou := vt_bi_tab_tp08.exists(1);
            exception
               when others then
                  vb_achou := false;
            end;
            --
            vn_fase := 6.30;
            --
            if not vb_achou then
               --
               vn_fase := 6.31;
               vt_bi_tab_tp08(1).VlContabeis   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            else
               --
               vn_fase := 6.32;
               vt_bi_tab_tp08(1).VlContabeis   := nvl(vt_bi_tab_tp08(1).VlContabeis, 0) + (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
               vt_bi_tab_tp08(1).Base_Calculo  := nvl(vt_bi_tab_tp08(1).Base_Calculo, 0) + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de calculo
               vt_bi_tab_tp08(1).Imp_debitado  := nvl(vt_bi_tab_tp08(1).Imp_debitado, 0) + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Imposto creditado
               vt_bi_tab_tp08(1).VlContOper_ST := nvl(vt_bi_tab_tp08(1).VlContOper_ST, 0) + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor Contábil das Operações p/ ST
               --
            end if;
            --
            vn_fase := 6.33;
            --
            vn_vlr_ctb_sai       := nvl(vn_vlr_ctb_sai, 0) + vt_bi_tab_tp08(1).VlContabeis;
            vn_Base_Calculo_sai  := nvl(vn_Base_Calculo_sai, 0) + vt_bi_tab_tp08(1).Base_Calculo;
            vn_Imp_creditado_sai := nvl(vn_Imp_creditado_sai, 0) + vt_bi_tab_tp08(1).Imp_debitado;
            vn_VlContOper_ST_sai := nvl(vn_VlContOper_ST_sai, 0) +  vt_bi_tab_tp08(1).VlContOper_ST;
            --
      end if;
      --
   end loop;
   --
   vn_fase := 7;
   -- Totais de Entradas - 5º Registro (somar 1 ao 3)
   vt_bi_tab_tp05(1).VlContabeis   := nvl(vn_vlr_ctb_ent,0);
   vt_bi_tab_tp05(1).Base_Calculo  := nvl(vn_Base_Calculo_ent,0);
   vt_bi_tab_tp05(1).Imp_creditado := nvl(vn_Imp_creditado_ent,0);
   vt_bi_tab_tp05(1).VlContOper_ST := nvl(vn_VlContOper_ST_ent,0);
   --
   vn_fase := 7.1;
   -- Totais de Saídas - 5º Registro (somar 5 ao 7) -- ver vanessa
   vt_bi_tab_tp09(1).VlContabeis   := nvl(vn_vlr_ctb_sai,0);
   vt_bi_tab_tp09(1).Base_Calculo  := nvl(vn_Base_Calculo_sai,0);
   vt_bi_tab_tp09(1).Imp_debitado  := nvl(vn_Imp_creditado_sai,0);
   vt_bi_tab_tp09(1).VlContOper_ST := nvl(vn_VlContOper_ST_sai,0);
   --
   vn_fase := 8;
   -- Registro TP10 - Débito do Imposto
   for rec in c_apur_icms loop
      exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
      --
      vn_fase := 8.1;
      -- Registro TP10 - Debito do imposto
      vt_bi_tab_tp10(1).saidas_deb_imp   := ( nvl(rec.VL_TOTAL_DEBITO,0) * 100 );
      vt_bi_tab_tp10(1).outros_debitos   := ( nvl(rec.VL_AJUST_DEBITO,0) + nvl(rec.VL_TOTAL_AJUST_DEB,0) ) * 100;
      vt_bi_tab_tp10(1).Estorno_Creditos := (nvl(rec.vl_estorno_credito,0)*100);
      vt_bi_tab_tp10(1).total            := nvl(vt_bi_tab_tp10(1).saidas_deb_imp,0) + nvl(vt_bi_tab_tp10(1).outros_debitos,0) + nvl(vt_bi_tab_tp10(1).Estorno_Creditos,0);
      --
      vn_fase := 8.2;
      -- Registro TP11 - Credito do imposto
      vt_bi_tab_tp11(1).entradas_cred_imp := (nvl(rec.vl_total_credito, 0) * 100); -- Por saídas com crédito do imposto
      vt_bi_tab_tp11(1).outros_creditos   := ( nvl(rec.VL_AJUST_CREDITO, 0) + nvl(rec.VL_TOTAL_AJUST_CRED, 0) ) * 100; -- Valor de outros créditos
      vt_bi_tab_tp11(1).estorno_debitos   := (nvl(rec.vl_estorno_debido, 0) * 100); -- Valor de estorno de débito
      vt_bi_tab_tp11(1).subtotal          := nvl(vt_bi_tab_tp11(1).entradas_cred_imp ,0) + nvl(vt_bi_tab_tp11(1).outros_creditos,0) + nvl(vt_bi_tab_tp11(1).estorno_debitos,0); -- Subtotal
      vt_bi_tab_tp11(1).saldo_credor      := (nvl(rec.vl_saldo_credor_ant, 0) * 100);  -- Saldo Credor
      vt_bi_tab_tp11(1).total             := nvl(vt_bi_tab_tp11(1).subtotal,0) + nvl(vt_bi_tab_tp11(1).saldo_credor,0); -- Total
      --
      vn_fase := 8.3;
      -- Registro TP12 - Apuração dos Saldos
      vt_bi_tab_tp12(1).saldo_devedor         := (nvl(rec.vl_saldo_apurado,0)* 100); -- Saldo devedor
      vt_bi_tab_tp12(1).Deducoes              := (nvl(rec.vl_total_deducao, 0) * 100); -- Deduções
      vt_bi_tab_tp12(1).imp_recolher          := (nvl(rec.vl_icms_recolher,0) * 100); -- Imposto a recolher
      vt_bi_tab_tp12(1).saldo_credor_per_seg  := nvl(rec.VL_SALDO_CREDOR_TRANSP,0) * 100; -- Saldo credor p/ período seguinte
      --
   end loop;
   --
   vn_fase := 9;
   -- Registro TP13 - ICMS do Período (Normal / Substituição)
   vt_bi_tab_tp13(1).a  := 0;
   vt_bi_tab_tp13(1).b  := 0;
   --
   vn_fase := 10;
   -- Registro TP14 - ICMS do Período (Substituto pelas Saídas - Prestação de Serviço/Mercadorias)
   vt_bi_tab_tp14(1).a  := 0;
   vt_bi_tab_tp14(1).b  := 0;
   --
   vn_fase := 11;
   -- Registro TP15 - ICMS do Período (Substituto pelas Entradas)
   vt_bi_tab_tp15(1).a  := 0;
   vt_bi_tab_tp15(1).b  := 0;
   --
   vn_fase := 12;
   -- Registro TP16 - ICMS do Período (Ativo Permanente: Crédito Normal/Consumo)
   vt_bi_tab_tp16(1).a  := 0;
   vt_bi_tab_tp16(1).b  := 0;
   --
   vn_fase := 13;
   -- Registro TP17 - ICMS do Período (Serviço de Transporte / Diferença de Alíquotas)
   vt_bi_tab_tp17(1).a  := 0;
   vt_bi_tab_tp17(1).b  := 0;
   --
   vn_fase := 14;
   -- Registro TP18 - ICMS do Período (Diferimento: Importação / Regime Especial)
   vt_bi_tab_tp18(1).a  := 0;
   vt_bi_tab_tp18(1).b  := 0;
   --
   vn_fase := 15;
   -- Registro TP19 - ICMS do Período (FECOP - Normal / Substituto)
   vt_bi_tab_tp19(1).a  := 0;
   vt_bi_tab_tp19(1).b  := 0;
   --
   vn_fase := 16;
   -- Registro TP20 - Estoque
   begin
      select to_char(a.dt_ref, 'MM')
           , to_char(a.dt_ref, 'RRRR')
           , sum( nvl(a.vl_item,0) * 100 )
        into vt_bi_tab_tp20(1).mes
           , vt_bi_tab_tp20(1).ano
           , vt_bi_tab_tp20(1).valor
        from inventario a
       where a.empresa_id    = gt_row_abertura_gia.empresa_id
         and trunc(a.dt_ref) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       group by to_char(a.dt_ref, 'MM')
              , to_char(a.dt_ref, 'RRRR');
   exception
      when others then
         vt_bi_tab_tp20(1).mes    := to_char(gt_row_abertura_gia.dt_fin, 'MM'); -- mês
         vt_bi_tab_tp20(1).ano    := to_char(gt_row_abertura_gia.dt_fin, 'RRRR'); -- ano
         vt_bi_tab_tp20(1).valor  := 0; -- valor
   end;
   --
   vn_fase := 17;
   -- Registro TP21 - Detalhamento dos Débitos e Créditos (LEANDRO IRÁ AJUDAR NESSA INFORMAÇÃO)
   i := 0;
   --
   for rec in c_ajust loop
      exit when c_ajust%notfound or (c_ajust%notfound) is null;
      --
      vn_fase := 17.1;
      --
      i := i + 1;
      --
      if rec.dm_util = 0 then -- Outros débitos
         vt_bi_tab_tp21(i).nr_campo   := '43';
      elsif rec.dm_util = 1 then -- Estorno de créditos
            vt_bi_tab_tp21(i).nr_campo   := '58';
      elsif rec.dm_util = 2 then -- Outros créditos
            vt_bi_tab_tp21(i).nr_campo   := '48';
      elsif rec.dm_util = 3 then -- Estorno de débitos
            vt_bi_tab_tp21(i).nr_campo   := '63';
      elsif rec.dm_util = 4 then -- Deduções do imposto apurado
            vt_bi_tab_tp21(i).nr_campo   := '68';
      end if;
      --
      vn_fase := 17.2;
      --
      vt_bi_tab_tp21(i).descricao  := trim(substr(rec.descr, 1, 30)); -- descrição -- ver tabela Leandro
      vt_bi_tab_tp21(i).valor      := nvl(rec.vl_aj_apur,0) * 100; -- valor
      --
   end loop;
   --
   vn_fase := 18;
   -- Registro TP22 - Observações
   vt_bi_tab_tp22(1).nr_campo   := '75'; -- Número do campo
   vt_bi_tab_tp22(1).observacao := ' '; -- Observação
   --
   vn_fase := 19;
   -- Registro TP22 - Observações
   vt_bi_tab_tp22(2).nr_campo   := '75'; -- Número do campo
   vt_bi_tab_tp22(2).observacao := ' '; -- Observação
   --
   vn_fase := 20;
   -- Registro TP22 - Observações
   vt_bi_tab_tp22(3).nr_campo   := '75'; -- Número do campo
   vt_bi_tab_tp22(3).observacao := ' '; -- Observação
   --
   vn_fase := 21;
   -- procedimento monta a estrutura do arquivo da GIA - RN
   pkb_monta_estr_arq_gia_rn;
   --
exception
   when others then
      raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_rn fase ('||vn_fase||'): '||sqlerrm);
end pkb_gera_arq_gia_rn;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-SC
------------------------------------------------
procedure pkb_gera_arq_gia_sc is
  --
  vn_loggenerico_id  log_generico.id%type;
  --
  -- Variáveis do Controle do Vetor
  i pls_integer;
  j pls_integer;
  k number := 0;
  --
  -- Variáveis do Processo
  vn_fase  number := 0;
  vb_achou boolean;
  --
  vv_nome                       pessoa.nome%type;
  vn_cpf                        number := 0;
  --
  vn_cfop                       cfop.cd%type := 0;
  vn_vl_contabil                number(15, 2) := 0;
  vv_cod_st_icms                cod_st.cod_st%type := null;
  vn_vl_base_calc_icms          imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_icms                  imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_icms           imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_base_calc_icmsst        imp_itemnf.vl_base_calc%type := 0;
  vn_vl_imp_trib_icmsst         imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_icms          imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_icms           imp_itemnf.vl_base_calc%type := 0;
  vv_cod_st_ipi                 cod_st.cod_st%type := null;
  vn_vl_base_calc_ipi           imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_ipi                   imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_ipi            imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_ipi           imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_ipi            imp_itemnf.vl_base_calc%type := 0;
  vn_ipi_nao_recup              number;
  vn_outro_ipi                  number;
  vn_vl_imp_nao_dest_ipi        number;
  vn_vl_fcp_icmsst              number;
  vn_aliq_fcp_icms              number;
  vn_vl_fcp_icms                number;
  vn_vl_dif_aliq                itemnf_dif_aliq.vl_dif_aliq%type := 0;
  vn_vl_dif_aliq20              itemnf_dif_aliq.vl_dif_aliq%type := 0;
  vn_vl_dif_aliq30              itemnf_dif_aliq.vl_dif_aliq%type := 0;
  vn_vl_dif_aliq40              itemnf_dif_aliq.vl_dif_aliq%type := 0;
  vl_bc_icms_st_ent             nfregist_analit.vl_bc_icms_st%type := 0;
  vl_icms_st_ent                nfregist_analit.vl_icms_st%type := 0;
  vl_bc_icms_st_sai             nfregist_analit.vl_bc_icms_st%type := 0;
  vl_icms_st_sai                nfregist_analit.vl_icms_st%type := 0;
  --
  vn_estado_id                  estado.id%type;
  vn_tipocodarq_id              tipo_cod_arq.id%type;
  vv_estadotipocodarq_cd        estado_tipo_cod_arq.cd%type;
  vv_valortipoparam_cd          valor_tipo_param.cd%type := null;
  vn_ICMSCobradoST              imp_itemnf.vl_imp_trib%type := 0;
  vn_Outros_Produtos            imp_itemnf.vl_imp_trib%type := 0;
  vn_aux_est                    number(2);
  --
  vn_vlrcontnaocontr            number := 0;
  vn_vlrbasecalcnaocontr        number := 0;
  vn_vlrcontcontr               number := 0;
  vn_vlrbasecalccontr           number := 0;
  --
  vn_tot_vl_contabil_ent        number(15, 2) := 0;
  vn_tot_vl_base_calc_icms_ent  imp_itemnf.vl_base_calc%type := 0;
  vn_tot_vl_imp_trib_icms_ent   imp_itemnf.vl_imp_trib%type := 0;
  vn_tot_vl_bc_isenta_icms_ent  imp_itemnf.vl_base_calc%type := 0;
  vn_tot_vl_bc_outra_icms_ent   imp_itemnf.vl_base_calc%type := 0;
  --
  vn_tot_vl_contabil_sai        number(15, 2) := 0;
  vn_tot_vl_base_calc_icms_sai  imp_itemnf.vl_base_calc%type := 0;
  vn_tot_vl_imp_trib_icms_sai   imp_itemnf.vl_imp_trib%type := 0;
  vn_tot_vl_bc_isenta_icms_sai  imp_itemnf.vl_base_calc%type := 0;
  vn_tot_vl_bc_outra_icms_sai   imp_itemnf.vl_base_calc%type := 0;
  --
  vn_deb_dif_aliq_ap            number(15, 2) := 0; -- debito diferencial de aliquota ativo permanente
  vn_deb_equip_import_ap        number(15, 2) := 0; -- debito máquina/equipamentos importados para ativo permanente
  vv_sigla_estado               estado.sigla_estado%type;
  --
  vn_vl_operacao                nfregist_analit.vl_operacao%type := 0;
  vn_vl_ipi                     nfregist_analit.vl_ipi%type := 0;
  vn_vl_bc_icms                 nfregist_analit.vl_bc_icms%type := 0;
  vn_vl_icms                    nfregist_analit.vl_icms%type := 0;
  vn_vl_bc_icms_st              nfregist_analit.vl_bc_icms_st%type := 0;
  vn_vl_icms_st                 nfregist_analit.vl_icms_st%type := 0;
  vn_vl_icms_cfop               nfregist_analit.vl_icms%type := 0;
  --
  vn_vl_saldo_cred_ant_st       number(15, 2) := 0;
  vn_vl_devol_st                number(15, 2) := 0;
  vn_vl_ressarc_st              number(15, 2) := 0;
  vn_vl_outro_cred              number(15, 2) := 0;
  vn_vl_icms_recol_st           number(15, 2) := 0;
  vn_vl_saldo_cred_st_transp    number(15, 2) := 0;
  --
  vn_vl_aj_apur                 ajust_apuracao_icms.vl_aj_apur%type;
  --
  vn_valor_apura_dcip           apura_dcip.valor%type := 0;
  vn_param_difal                param_efd_icms_ipi.dm_lcto_difal%type;
  --
  vv_tp35_020_conteudo          det_dime.conteudo%type;
  vv_tp35_030_conteudo          det_dime.conteudo%type;
  --
  vn_tp30_020_vl_aj_apur        ajust_apuracao_icms.vl_aj_apur%type := 0;
  vn_tp30_060_vl_aj_apur        ajust_apuracao_icms.vl_aj_apur%type := 0;
  vn_tp30_130_vl_aj_apur        ajust_apuracao_icms.vl_aj_apur%type := 0;
  vn_tp30_150_vl_aj_apur        ajust_apuracao_icms.vl_aj_apur%type := 0;
  --
  vn_tp30_075_valor             ajust_apuracao_icms.vl_aj_apur%type := 0;
  vn_tp32_105_valor             ajust_apuracao_icms.vl_aj_apur%type := 0;
  --
  vn_reg_neg_pos                number := 0;
  vn_icms_sub_tri               number := 0;
  --
  vn_vl_09_010                  number := 0;
  vn_vl_09_011                  number := 0;
  vn_vl_09_020                  number := 0;
  vn_vl_09_030                  number := 0;
  vn_vl_09_040                  number := 0;
  vn_vl_09_050                  number := 0;
  vn_vl_09_060                  number := 0;
  vn_vl_09_070                  number := 0;
  vn_vl_09_080                  number := 0;
  vn_vl_09_090                  number := 0;
  vn_vl_09_100                  number := 0;
  vn_vl_09_110                  number := 0;
  vn_vl_09_120                  number := 0;
  vn_vl_09_130                  number := 0;
  vn_vl_09_999                  number := 0;
  vn_vl_09_140                  number := 0;
  vn_vl_09_150                  number := 0;
  vn_vl_09_998                  number := 0;
  vn_vl_09_160                  number := 0;
  vn_vl_09_170                  number := 0;
  vn_vl_09_180                  number := 0;
  vn_vl_09_190                  number := 0;
  --
  vn_matriz                     number := 0;
  vn_filial                     number := 0;
  vv_cod_receita                varchar2(100);
  vn_erro_registro              number := 0;
  --
  -- TP20 - Dados do Contabilista / Responsável
  type tab_tp20 is record(
    tp_reg     number(2),
    quadro     varchar2(2),
    cpf        number(11),
    nom_contab varchar2(50),
    DataHora   number(14));
  --
  type t_tab_tp20 is table of tab_tp20 index by binary_integer;
  vt_tab_tp20 t_tab_tp20;
  --
  -- TP21 - Dados iniciais
  type tab_tp21 is record(
    tp_reg          number(2),
    quadro          number(2),
    num_inscr       number(9),
    nom_contr       varchar2(50),
    per_ref_decl    number(6),
    tp_decl         number(1),
    reg_apur        number(1),
    porte_emp       number(1),
    apur_consol     number(1),
    apur_central    number(1),
    transf_cred_per number(1),
    cred_pres       number(1),
    cred_incent_fis number(1),
    movimento       number(1),
    subst_trib      number(1),
    escr_contabil   number(1),
    qte_trab_ativ   number(5));
  --
  type t_tab_tp21 is table of tab_tp21 index by binary_integer;
  vt_tab_tp21 t_tab_tp21;
  --
  -- TP22 - Valores Fiscais Entradas
  type tab_tp22 is record(
    tp_reg         number(2),
    quadro         varchar2(2),
    cfop           number(5),
    valor_contabil number(17),
    base_calculo   number(17),
    imp_creditado  number(17),
    isentas        number(17),
    outras         number(17),
    bc_imp_ret     number(17),
    imp_ret        number(17),
    dif_aliq       number(17));
  --
  type t_tab_tp22 is table of tab_tp22 index by binary_integer;
  type t_bi_tab_tp22 is table of t_tab_tp22 index by binary_integer;
  vt_bi_tab_tp22 t_bi_tab_tp22;
  --
  -- TP23 - Valores Fiscais Saídas
  type tab_tp23 is record(
    tp_reg         number(2),
    quadro         varchar2(2),
    cfop           number(5),
    valor_contabil number(17),
    base_calculo   number(17),
    imp_debitado   number(17),
    isentas        number(17),
    outras         number(17),
    bc_imp_ret     number(17),
    imp_ret        number(17),
    brancos        number(17));
  --
  type t_tab_tp23 is table of tab_tp23 index by binary_integer;
  type t_bi_tab_tp23 is table of t_tab_tp23 index by binary_integer;
  vt_bi_tab_tp23 t_bi_tab_tp23;
  --
  -- TP24 - Resumo dos Valores Fiscais
  type tab_tp24 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp24 is table of tab_tp24 index by binary_integer;
  vt_tab_tp24 t_tab_tp24;
  --
  -- TP25 - Resumo da Apuração dos Débitos
  type tab_tp25 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp25 is table of tab_tp25 index by binary_integer;
  vt_tab_tp25 t_tab_tp25;
  --
  -- TP26 - Resumo da Apuração dos Créditos
  type tab_tp26 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp26 is table of tab_tp26 index by binary_integer;
  vt_tab_tp26 t_tab_tp26;
  --
  -- TP30 - Cálculo do Imposto a Pagar ou Saldo Credor
  type tab_tp30 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp30 is table of tab_tp30 index by binary_integer;
  vt_tab_tp30 t_tab_tp30;
  --
  -- TP31 - Débitos Específicos (compensáveis ou não após o recolhimento)
  type tab_tp31 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp31 is table of tab_tp31 index by binary_integer;
  vt_tab_tp31 t_tab_tp31;
  --
  -- TP32 - Informações sobre Substituição Tributária
  type tab_tp32 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp32 is table of tab_tp32 index by binary_integer;
  vt_tab_tp32 t_tab_tp32;
  --
  -- TP33 - Discriminação dos Pagamentos do Imposto e dos Débitos Específicos
  type tab_tp33 is record(
    tp_reg        number(2),
    quadro        varchar2(2),
    orig_recol    number(1),
    cod_rec       number(4),
    dt_vencto     date,
    valor         number(17),
    classe_vencto number(5),
    nro_acord     number(15));
  --
  type t_tab_tp33 is table of tab_tp33 index by binary_integer;
  vt_tab_tp33 t_tab_tp33;
  --
  -- TP35 - Demonstrativo da Apuração do Imposto Devido pela Apropriação de Crédito Presumido em Substituição aos Créditos pelas Entradas (DAICP)
  type tab_tp35 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp35 is table of tab_tp35 index by binary_integer;
  vt_tab_tp35 t_tab_tp35;
  --
  -- TP41 - Demonstrativo de Créditos Acumulados
  type tab_tp41 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp41 is table of tab_tp41 index by binary_integer;
  vt_tab_tp41 t_tab_tp41;
  --
  -- TP42 - Débitos por Reserva de Crédito Acumulado
  type tab_tp42 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp42 is table of tab_tp42 index by binary_integer;
  vt_tab_tp42 t_tab_tp42;
  --
  -- TP46 - Créditos por Autorizações Especiais
  type tab_tp46 is record(
    tp_reg number(2),
    quadro varchar2(2),
    seq    number(3),
    ident  number(15),
    valor  number(17),
    orig   number(2));
  --
  type t_tab_tp46 is table of tab_tp46 index by binary_integer;
  vt_tab_tp46 t_tab_tp46;
  --
  -- TP49 - Entradas por Unidade da Federação
  type tab_tp49 is record(
    tp_reg           number(2),
    quadro           varchar2(2),
    sigla_UF         varchar2(2),
    valor_contabil   number(17),
    base_calculo     number(17),
    outras           number(17),
    petroleo_energia number(17),
    outros_prod      number(17));
  --
  type t_tab_tp49 is table of tab_tp49 index by binary_integer;
  type t_bi_tab_tp49 is table of t_tab_tp49 index by binary_integer;
  vt_bi_tab_tp49 t_bi_tab_tp49;
  --
  -- TP50 - Saídas por Unidade da Federação
  type tab_tp50 is record(
    tp_reg               number(2),
    quadro               number(2),
    sigla_UF             varchar2(2),
    vlr_cont_nao_contr   number(17),
    vlr_cont_contr       number(17),
    base_calc_nao_contr  number(17),
    base_calc_contr      number(17),
    outras               number(17),
    icms_cobr_subst_trib number(17));
  --
  type t_tab_tp50 is table of tab_tp50 index by binary_integer;
  type t_bi_tab_tp50 is table of t_tab_tp50 index by binary_integer;
  vt_bi_tab_tp50 t_bi_tab_tp50;
  --
  -- TP80 - Resumo do Livro Registro de Inventário e Receita Bruta
  type tab_tp80 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp80 is table of tab_tp80 index by binary_integer;
  vt_tab_tp80 t_tab_tp80;
  --
  -- TP81 - Ativo
  type tab_tp81 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp81 is table of tab_tp81 index by binary_integer;
  vt_tab_tp81 t_tab_tp81;
  --
  -- TP82 - Passivo
  type tab_tp82 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp82 is table of tab_tp82 index by binary_integer;
  vt_tab_tp82 t_tab_tp82;
  --
  -- TP83  -  Demonstração de Resultados
  type tab_tp83 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp83 is table of tab_tp83 index by binary_integer;
  vt_tab_tp83 t_tab_tp83;
  --
  -- TP84  -  Detalhamento das Despesas
  type tab_tp84 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp84 is table of tab_tp84 index by binary_integer;
  vt_tab_tp84 t_tab_tp84;
  --
  -- TP90 - Resumo do Livro Registro de Inventário e Receita Bruta (Encerramento de Atividades)
  type tab_tp90 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp90 is table of tab_tp90 index by binary_integer;
  vt_tab_tp90 t_tab_tp90;
  --
  -- TP91 - Ativo (Encerramento de Atividades)
  type tab_tp91 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp91 is table of tab_tp91 index by binary_integer;
  vt_tab_tp91 t_tab_tp91;
  --
  -- TP92 - Passivo (Encerramento de Atividades)
  type tab_tp92 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp92 is table of tab_tp92 index by binary_integer;
  vt_tab_tp92 t_tab_tp92;
  --
  -- TP93 - Demonstração de Resultados (Encerramento de Atividades)
  type tab_tp93 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp93 is table of tab_tp93 index by binary_integer;
  vt_tab_tp93 t_tab_tp93;
  --
  -- TP94 - Detalhamento das Despesas (Encerramento de Atividades)
  type tab_tp94 is record(
    tp_reg number(2),
    quadro varchar2(2),
    item   number(3),
    valor  number(17));
  --
  type t_tab_tp94 is table of tab_tp94 index by binary_integer;
  vt_tab_tp94 t_tab_tp94;
  --
  -- TP98 - Encerramento da Declaração
  type tab_tp98 is record(
    tp_reg  number(2),
    quadro  varchar2(2),
    qte_reg number(5));
  --
  type t_tab_tp98 is table of tab_tp98 index by binary_integer;
  vt_tab_tp98 t_tab_tp98;
  --
  -- TP99 - Fechamento do Arquivo
  type tab_tp99 is record(
    tp_reg        number(2),
    quadro        varchar2(2),
    qte_reg       number(5),
    qte_decl_icms number(5));
  --
  type t_tab_tp99 is table of tab_tp99 index by binary_integer;
  vt_tab_tp99 t_tab_tp99;
  --
  vn_qtde_tp20    number;
  vn_qtde_tp21    number;
  vn_qtde_tp22    number;
  vn_qtde_tp23    number;
  vn_qtde_tp24    number;
  vn_qtde_tp25    number;
  vn_qtde_tp26    number;
  vn_qtde_tp30    number;
  vn_qtde_tp31    number;
  vn_qtde_tp32    number;
  vn_qtde_tp33    number;
  vn_qtde_tp35    number;
  vn_qtde_tp41    number;
  vn_qtde_tp42    number;
  vn_qtde_tp46    number;
  vn_qtde_tp49    number;
  vn_qtde_tp50    number;
  vn_qtde_tp80    number;
  vn_qtde_tp81    number;
  vn_qtde_tp82    number;
  vn_qtde_tp83    number;
  vn_qtde_tp84    number;
  vn_qtde_tp90    number;
  vn_qtde_tp91    number;
  vn_qtde_tp92    number;
  vn_qtde_tp93    number;
  vn_qtde_tp94    number;
  --
  -- Cursores
  cursor c_det_cfop is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper, -- 0 - Entrada, 1 - Saída
           nf.dm_ind_emit, -- 0 - Emissão Própria, 1 - Terceiros
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           inf.id         itemnf_id,
           inf.cfop,
           nf.dm_id_dest
      from nota_fiscal nf,
           mod_fiscal mf,
           item_nota_fiscal inf
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ((nf.dm_ind_emit   = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65')
       and inf.notafiscal_id  = nf.id
     order by 1, 2;
  --
  cursor c_det_cfop_ct is
    select ct.id            conhectransp_id,
           ct.dm_ind_oper,
           ct.pessoa_id,
           ct.dt_hr_emissao dt_emiss,
           ct.nro_ct,
           ct.serie         serie_ct,
           ct.subserie      subserie_ct,
           r.id             ctreganal_id
      from conhec_transp ct,
           ct_reg_anal r
     where ct.empresa_id      = gt_row_abertura_gia.empresa_id
       and ct.dm_st_proc      = 4 -- Autorizada
       and ct.dm_arm_cte_terc = 0
       and ((ct.dm_ind_emit   = 1 and trunc(nvl(ct.dt_sai_ent, ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit   = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit   = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit   = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent, ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and r.conhectransp_id  = ct.id
     order by 1;
  --
  cursor c_det_cfop_sc is
    select nf.id          notafiscal_id,
           nf.dm_ind_oper,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           nf.serie       serie_nf,
           r.id           nfregistanalit_id
      from nota_fiscal nf,
           mod_fiscal mf,
           nfregist_analit r
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit   = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('06', '29', '28', '21', '22')
       and r.notafiscal_id    = nf.id
     order by 1;
  --
  cursor c_det_cfop_es is
    select sum(nvl(r.vl_bc_icms_st, 0)) vl_bc_icms_st,
           sum(nvl(r.vl_icms_st, 0)) vl_icms_st,
           c.cd
      from nota_fiscal nf,
           mod_fiscal mf,
           nfregist_analit r,
           cfop c
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit   = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit   = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('55', '01')
       and r.notafiscal_id    = nf.id
       and r.cfop_id          = c.id
     group by c.cd
     order by c.cd;
  --
  -- Query Cupom Fiscal - Sempre Saída
  cursor c_det_cfop_ecf is
    select r.id     reducaozecf_id,
           r.dt_doc dt_emiss,
           ramd.id  reganalmovdiaecf_id
      from equip_ecf e,
           reducao_z_ecf r,
           reg_anal_mov_dia_ecf ramd
     where e.empresa_id        = gt_row_abertura_gia.empresa_id
       and r.equipecf_id       = e.id
       and r.dm_st_proc        = 1 -- Validada
       and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and ramd.reducaozecf_id = r.id
     order by 1;
  --
  cursor c_apur_icms is
    select ai.*
      from apuracao_icms ai
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
     order by 1;
  --
  cursor c_ajust_apuracao(en_apuracaoicms_id in ajust_apuracao_icms.id%type) is
    select c.cod_aj_apur,
           nvl(sum(a.vl_aj_apur), 0) vl_aj_apur
      from cod_aj_saldo_apur_icms c,
           ajust_apuracao_icms a
     where a.codajsaldoapuricms_id = c.id
       and a.apuracaoicms_id       = en_apuracaoicms_id
       and c.cod_aj_apur           in ('SC000002', 'SC020055', 'SC020054', 'SC000001', 'SC020065') -- Códigos de Ajustes
     group by c.cod_aj_apur;
  --
  cursor c_infor_fiscal(en_cfop in cfop.cd%type) is
    select cfop,
           sum(vl_icms) vl_icms
     from (select distinct inf.cfop,
                 ip.id,
                 co.cod_aj,
                 ip.vl_icms
            from nota_fiscal nf,
                 item_nota_fiscal inf,
                 mod_fiscal mf,
                 nfinfor_fiscal ninf,
                 inf_prov_docto_fiscal ip,
                 cod_ocor_aj_icms co
            where nf.empresa_id      = gt_row_abertura_gia.empresa_id
              and nf.dm_st_proc      = 4 -- Autorizada
              and nf.dm_arm_nfe_terc = 0
              and inf.cfop           = en_cfop
              and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                    or
                   (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                    or
                   (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                    or
                   (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
              and mf.id              = nf.modfiscal_id
              and mf.cod_mod         in ('55', '01')
              and nf.id              = ninf.notafiscal_id
              and ninf.id            = ip.nfinforfisc_id
              and co.id              = ip.codocorajicms_id
              and inf.notafiscal_id  = nf.id)
    group by cfop;
  --
  /*cursor c_obrig_rec_apur_icms(en_apuracaoicms_id in ajust_apuracao_icms.id%type) is
    select o.origproc_id origem_rec,
           o.cod_rec cod_receita,
           to_char(o.dt_vencto_obrig, 'DDMMRRRR') data_venc,
           o.vl_orig_rec vlr,
           o.descr_proc
      from obrig_rec_apur_icms o
     where o.apuracaoicms_id = en_apuracaoicms_id;*/
  --
  cursor c_obrig_rec_apur_icms is
    select ai.empresa_id,
           decode(aj.cd,
                  '000', '1',
                  '001', '1',
                  aj.cd) origem_rec,
           substr(cru.cod_rec, 1, 4) cod_receita,
           to_char(o.dt_vencto_obrig, 'DDMMRRRR') data_venc,
           to_char(o.dt_vencto_obrig, 'DD') dia_venc,
           o.vl_orig_rec vlr,
           o.descr_proc,
           1 tb_row
      from apuracao_icms ai,
           obrig_rec_apur_icms o,
           aj_obrig_rec        aj,
           cod_rec_uf         cru
     where o.apuracaoicms_id = ai.id
       and o.ajobrigrec_id   = aj.id
       and cru.id         (+)= o.codrecuf_id
       and ai.empresa_id     = gt_row_abertura_gia.empresa_id
       and ai.dt_inicio      = gt_row_abertura_gia.dt_ini
    union
    select p.empresa_id,
           decode(aor.cd,
                 '002', '2',
                 aor.cd) origem_rec,
           substr(cru.cod_rec, 1, 4) cod_receita,
           to_char(orai.dt_vencto_obrig, 'DDMMRRRR') data_venc,
           to_char(orai.dt_vencto_obrig, 'DD') dia_venc,
           ast.vl_icms_recol_st vlr,
           orai.descr_proc,
           2 tb_row
      from apuracao_icms_st       ast,
           per_apur_icms_st       p,
           obrig_rec_apur_icms_st orai,
           aj_obrig_rec           aor,
           estado                    e,
           cod_rec_uf              cru  
     where ast.perapuricmsst_id = p.id
       and orai.ajobrigrec_id   = aor.id
       and ast.id               = orai.apuracaoicmsst_id
       and ast.estado_id        = e.id
       and e.sigla_estado       = 'SC'
       and cru.id            (+)= orai.codrecuf_id 
       and p.empresa_id         = gt_row_abertura_gia.empresa_id
       and p.dt_inicio          = gt_row_abertura_gia.dt_ini
    union
    select gt_row_abertura_gia.empresa_id empresa_id,
           '3' origem_rec,
           null cod_receita,
           null data_venc,
           null dia_venc,
           to_number(d.conteudo) vlr,
           null descr_proc,
           3 tb_row
      from det_dime d,
           registro_dime r,
           quadro_dime q,
           item_dime i
     where d.aberturagia_id   = gt_row_abertura_gia.id
       and d.registrodime_id  = r.id
       and d.quadrodime_id    = q.id
       and d.itemdime_id      = i.id
       and d.conteudo         is not null
       --and nvl(d.conteudo, 0) > 0
       and r.codigo           = 35
       and i.codigo           = 199;
  --
  cursor c_apur_dcip is
    select ap.*
      from abertura_dcip ab,
           apura_dcip ap
     where ab.id             = ap.aberturadcip_id
       and ap.dm_situacao    = 3 -- Validado
       and ab.dm_tp_process  = 'A' -- Apuração DCIP
       and ab.empresa_id     = gt_row_abertura_gia.empresa_id
       and trunc(ab.dt_ini) >= gt_row_abertura_gia.dt_ini
       and trunc(ab.dt_fin) <= gt_row_abertura_gia.dt_fin
     order by 1;
  --
  cursor c_cfop_item(en_itemnf_id item_nota_fiscal.id%type) is
     select ida.vl_dif_aliq,
            inf.cfop,
            inf.id
       from nota_fiscal nf,
            item_nota_fiscal inf,
            itemnf_dif_aliq ida
      where inf.id = en_itemnf_id
        and nf.id  = inf.notafiscal_id
        and inf.id = ida.itemnf_id;
  --
  cursor c_det_dime is
     select r.codigo    registro,
            q.codigo    quadro,
            i.codigo    item,
            i.descricao,
            d.conteudo
       from det_dime d,
            registro_dime r,
            quadro_dime q,
            item_dime i
      where d.aberturagia_id  = gt_row_abertura_gia.id
        and d.registrodime_id = r.id
        and d.quadrodime_id   = q.id
        and d.itemdime_id     = i.id
      order by r.id,
               i.codigo;
  --
  cursor c_inf_comp_dime is
     select det.infcompdime_id inf_comp_id,
            q.codigo cod_quadro,
            q.descricao descr_quadro,
            i.id id_item,
            i.codigo cod_item,
            i.descricao descr_item,
            det.vl
       from inf_comp_dime inf,
            det_inf_comp_dime det,
            quadro_dime q,
            item_dime i
      where inf.empresa_id     = gt_row_abertura_gia.empresa_id
        and inf.dt_ini         = gt_row_abertura_gia.dt_ini
        and inf.dt_fin         = gt_row_abertura_gia.dt_fin
        and inf.dm_situacao    = 4 -- Validado
        and det.infcompdime_id = inf.id
        and det.quadrodime_id  = q.id
        and det.itemdime_id    = i.id
      order by cod_quadro,
               cod_item;
  --
  -- Função para verificar se existe valor alfanúmerico
  function fkg_verifica_conteudo(en_valor in varchar)
    return varchar is
  --
  vv_conteudo char(1);
  --
  begin
    --
    begin
      select case
               when trim(translate(en_valor, '0123456789-,.', ' ')) is null then
                'N'
               else
                'A'
             end
        into vv_conteudo
        from dual;
    exception
      when others then
        vv_conteudo := 'A';
    end;
    --
    return vv_conteudo;
    --
  end fkg_verifica_conteudo;
  --
  -- Função para contar a quantidade de caracteres
  function fkg_verifica_tamanho(en_tamanho in varchar)
    return varchar is
  --
  vv_tamanho char(1);
  --
  begin
    --
    begin
      select length(en_tamanho)
        into vv_tamanho
        from dual;
    exception
      when others then
        vv_tamanho := null;
    end;
    --
    return vv_tamanho;
    --
  end fkg_verifica_tamanho;
  --
  -- Limpar os vetores
  procedure pkb_limpa_vetor_sc is
  --
  begin
    --
    vt_tab_tp20.delete;
    vt_tab_tp21.delete;
    vt_bi_tab_tp22.delete;
    vt_bi_tab_tp23.delete;
    vt_tab_tp24.delete;
    vt_tab_tp25.delete;
    vt_tab_tp26.delete;
    vt_tab_tp30.delete;
    vt_tab_tp31.delete;
    vt_tab_tp32.delete;
    vt_tab_tp33.delete;
    vt_tab_tp41.delete;
    vt_tab_tp42.delete;
    vt_tab_tp46.delete;
    vt_bi_tab_tp49.delete;
    vt_bi_tab_tp50.delete;
    vt_tab_tp80.delete;
    vt_tab_tp81.delete;
    vt_tab_tp82.delete;
    vt_tab_tp83.delete;
    vt_tab_tp84.delete;
    vt_tab_tp90.delete;
    vt_tab_tp91.delete;
    vt_tab_tp92.delete;
    vt_tab_tp93.delete;
    vt_tab_tp94.delete;
    vt_tab_tp98.delete;
    vt_tab_tp99.delete;
    --
  end pkb_limpa_vetor_sc;
  --
  -- Procedimento Monta a Estrutura do Arquivo da GIA-SC
  procedure pkb_monta_estr_arq_gia_sc is
    --
    vn_fase_arq     number := 0;
    vn_qtde_linha   number := 0;
    vn_qtde_tp20    number := 0;
    vn_qtde_tp21    number := 0;
    vn_qtde_tp22    number := 0;
    vn_qtde_tp23    number := 0;
    vn_qtde_tp24    number := 0;
    vn_qtde_tp25    number := 0;
    vn_qtde_tp26    number := 0;
    vn_qtde_tp30    number := 0;
    vn_qtde_tp31    number := 0;
    vn_qtde_tp32    number := 0;
    vn_qtde_tp33    number := 0;
    vn_qtde_tp35    number := 0;
    vn_qtde_tp41    number := 0;
    vn_qtde_tp42    number := 0;
    vn_qtde_tp46    number := 0;
    vn_qtde_tp49    number := 0;
    vn_qtde_tp50    number := 0;
    vn_qtde_tp80    number := 0;
    vn_qtde_tp81    number := 0;
    vn_qtde_tp82    number := 0;
    vn_qtde_tp83    number := 0;
    vn_qtde_tp84    number := 0;
    vn_qtde_tp90    number := 0;
    vn_qtde_tp91    number := 0;
    vn_qtde_tp92    number := 0;
    vn_qtde_tp93    number := 0;
    vn_qtde_tp94    number := 0;
    --
  begin
    --
    vn_fase_arq := 1;
    --
    -- TP20 - Dados do Contabilista / Responsável
    if nvl(vt_tab_tp20.count, 0) > 0 then
      --
      vn_fase_arq := 1.1;
      --
      i := nvl(vt_tab_tp20.first, 0);
      --
      loop
        --
        vn_fase_arq := 1.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 1.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp20(i).tp_reg, 2, '20');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp20(i).quadro, 2, '00');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp20(i).cpf, 11, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp20(i).nom_contab, 50, ' ');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp20(i).DataHora, 14, ' ');
        --
        vn_fase_arq := 1.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '20',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 1.5;
        --
        if i = vt_tab_tp20.last then
          exit;
        else
          i := vt_tab_tp20.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP20 - Dados do Contabilista / Responsável
    --
    vn_fase_arq := 2;
    --
    -- TP21 - Dados iniciais
    if nvl(vt_tab_tp21.count, 0) > 0 then
      --
      vn_fase_arq := 2.1;
      --
      i := nvl(vt_tab_tp21.first, 0);
      --
      loop
        --
        vn_fase_arq := 2.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 2.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp21(i).tp_reg, 2, '21');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).quadro, 2, '00');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).num_inscr, 9, '0');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp21(i).nom_contr, 50, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).per_ref_decl, 6, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).tp_decl, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).reg_apur, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).porte_emp, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).apur_consol, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).apur_central, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).transf_cred_per, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).cred_pres, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).cred_incent_fis, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).movimento, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).subst_trib, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).escr_contabil, 1, '0');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp21(i).qte_trab_ativ, 5, '0');
        --
        vn_fase_arq := 2.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '21',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 2.5;
        --
        if i = vt_tab_tp21.last then
          exit;
        else
          i := vt_tab_tp21.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP21 - Dados iniciais
    --
    vn_fase_arq := 3;
    --
    -- TP22 - Valores Fiscais Entradas
    if nvl(vt_bi_tab_tp22.count, 0) > 0 then
      --
      vn_fase_arq := 3.1;
      --
      i := nvl(vt_bi_tab_tp22.first, 0);
      --
      loop
        --
        vn_fase_arq := 3.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 3.3;
        --
        begin
          vn_qtde_tp22 := vt_bi_tab_tp22(i).count;
        exception
          when others then
            vn_qtde_tp22 := 0;
        end;
        --
        vn_fase_arq := 3.4;
        --
        if nvl(vn_qtde_tp22, 0) > 0 then
          --
          vn_fase_arq := 3.5;
          --
          j := vt_bi_tab_tp22(i).first;
          --
          vn_fase_arq := 3.6;
          --
          loop
            --
            vn_fase_arq := 3.7;
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 3.8;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := lpad(vt_bi_tab_tp22(i)(j).tp_reg, 2, '22');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp22(i)(j).quadro, 2, '01');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp22(i)(j).CFOP, 5, 0);
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).Valor_Contabil, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).Base_Calculo, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).Imp_creditado, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).Isentas, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).Outras, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).bc_imp_ret, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).imp_ret, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp22(i)(j).dif_aliq, 0), 17, '0');
            --
            vn_fase_arq := 3.9;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '22',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 3.10;
            --
            if j = vt_bi_tab_tp22(i).last then
              exit;
            else
              j := vt_bi_tab_tp22(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 3.11;
        --
        if i = vt_bi_tab_tp22.last then
          exit;
        else
          i := vt_bi_tab_tp22.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP22 - Valores Fiscais Entradas
    --
    vn_fase_arq := 4;
    --
    -- TP23 - Valores Fiscais Saídas
    if nvl(vt_bi_tab_tp23.count, 0) > 0 then
      --
      vn_fase_arq := 4.1;
      --
      i := nvl(vt_bi_tab_tp23.first, 0);
      --
      loop
        --
        vn_fase_arq := 4.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 4.3;
        --
        begin
          vn_qtde_tp23 := vt_bi_tab_tp23(i).count;
        exception
          when others then
            vn_qtde_tp23 := 0;
        end;
        --
        vn_fase_arq := 4.4;
        --
        if nvl(vn_qtde_tp23, 0) > 0 then
          --
          vn_fase_arq := 4.5;
          --
          j := vt_bi_tab_tp23(i).first;
          --
          vn_fase_arq := 4.6;
          --
          loop
            --
            vn_fase_arq := 4.7;
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 4.8;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := lpad(vt_bi_tab_tp23(i)(j).tp_reg, 2, '23');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp23(i)(j).quadro, 2, '02');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp23(i)(j).CFOP, 5, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).Valor_Contabil, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).Base_Calculo, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).Imp_debitado, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).Isentas, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).Outras, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).bc_imp_ret, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).imp_ret, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp23(i)(j).brancos, 0), 17, '0');
            --
            vn_fase_arq := 4.9;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '23',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 4.10;
            --
            if j = vt_bi_tab_tp23(i).last then
              exit;
            else
              j := vt_bi_tab_tp23(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 4.11;
        --
        if i = vt_bi_tab_tp23.last then
          exit;
        else
          i := vt_bi_tab_tp23.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP23 - Valores Fiscais Saídas
    --
    vn_fase_arq := 5;
    --
    -- TP24 - Resumo dos Valores Fiscais
    if nvl(vt_tab_tp24.count, 0) > 0 then
      --
      vn_fase_arq := 5.1;
      --
      i := nvl(vt_tab_tp24.first, 0);
      --
      loop
        --
        vn_fase_arq := 5.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 5.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp24(i).tp_reg, 2, '24');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp24(i).quadro, 2, '03');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp24(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp24(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 5.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '24',
                               el_conteudo       => gl_conteudo);
        --
        if i = vt_tab_tp24.last then
          exit;
        else
          i := vt_tab_tp24.next(i);
        end if;
        --
      end loop;
      --
    end if; -- TP24 - Resumo dos Valores Fiscais
    --
    vn_fase_arq := 6;
    --
    -- TP25 - Resumo da Apuração dos Débitos
    if nvl(vt_tab_tp25.count, 0) > 0 then
      --
      vn_fase_arq := 6.1;
      --
      i := nvl(vt_tab_tp25.first, 0);
      --
      loop
        --
        vn_fase_arq := 6.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 6.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp25(i).tp_reg, 2, '25');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp25(i).quadro, 2, '04');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp25(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp25(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 6.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '25',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 6.5;
        --
        if i = vt_tab_tp25.last then
          exit;
        else
          i := vt_tab_tp25.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 6.6;
      --
    end if; -- TP25 - Resumo da Apuração dos Débitos
    --
    vn_fase_arq := 7;
    --
    -- TP26 - Resumo da Apuração dos Créditos
    if nvl(vt_tab_tp26.count, 0) > 0 then
      --
      vn_fase_arq := 7.1;
      --
      i := nvl(vt_tab_tp26.first, 0);
      --
      loop
        --
        vn_fase_arq := 7.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 7.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp26(i).tp_reg, 2, '26');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp26(i).quadro, 2, '05');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp26(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp26(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 7.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '26',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 7.5;
        --
        if i = vt_tab_tp26.last then
          exit;
        else
          i := vt_tab_tp26.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 7.6;
      --
    end if; -- TP26 - Resumo da Apuração dos Créditos
    --
    vn_fase_arq := 8;
    --
    -- TP30 - Cálculo do Imposto a Pagar ou Saldo Credor
    if nvl(vt_tab_tp30.count, 0) > 0 then
      --
      vn_fase_arq := 8.1;
      --
      i := nvl(vt_tab_tp30.first, 0);
      --
      loop
        --
        vn_fase_arq := 8.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 8.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp30(i).tp_reg, 2, '30');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp30(i).quadro, 2, '09');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp30(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp30(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 8.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '30',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 8.5;
        --
        if i = vt_tab_tp30.last then
          exit;
        else
          i := vt_tab_tp30.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 8.6;
      --
    end if; -- TP30 - Cálculo do Imposto a Pagar ou Saldo Credor
    --
    vn_fase_arq := 9;
    --
   vn_fase_arq := 10;
   --
   -- TP31 - Débitos Específicos (compensáveis ou não após o recolhimento)
   if nvl(vt_tab_tp31.count, 0) > 0 then
      --
      vn_fase_arq := 10.1;
      --
      i := nvl(vt_tab_tp31.first, 0);
      --
      loop
        --
        vn_fase_arq := 10.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 10.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp31(i).tp_reg, 2, '31');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp31(i).quadro, 2, '09');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp31(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp31(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 10.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '31',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 10.5;
        --
        if i = vt_tab_tp31.last then
          exit;
        else
          i := vt_tab_tp31.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 10.6;
      --
    end if; -- TP31 - Débitos Específicos (compensáveis ou não após o recolhimento)
    --
    vn_fase_arq := 11;
    --
    -- TP32 - Informações sobre Substituição Tributária
    if nvl(vt_tab_tp32.count, 0) > 0 then
      --
      vn_fase_arq := 11.1;
      --
      i := nvl(vt_tab_tp32.first, 0);
      --
      loop
        --
        vn_fase_arq := 11.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 11.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp32(i).tp_reg, 2, '32');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp32(i).quadro, 2, '11');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp32(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp32(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 11.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '32',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 11.5;
        --
        if i = vt_tab_tp32.last then
          exit;
        else
          i := vt_tab_tp32.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 11.6;
      --
    end if; -- TP32 - Informações sobre Substituição Tributária
    --
    vn_fase_arq := 12;
    --
    -- TP33 - Discriminação dos Pagamentos do Imposto e dos Débitos Específicos
    if nvl(vt_tab_tp33.count, 0) > 0 then
      --
      vn_fase_arq := 12.1;
      --
      i := nvl(vt_tab_tp33.first, 0);
      --
      loop
        --
        vn_fase_arq := 12.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 12.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp33(i).tp_reg, 2, '33');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp33(i).quadro, 2, '11');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp33(i).orig_recol, 1, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp33(i).cod_rec, 0), 4, '0');
        gl_conteudo := gl_conteudo || lpad(to_char(vt_tab_tp33(i).dt_vencto, 'DDMMRRRR'), 8, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp33(i).valor, 0), 17, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp33(i).classe_vencto, 0), 5, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp33(i).nro_acord, 0), 15, '0');
        --
        vn_fase_arq := 12.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '33',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 12.5;
        --
        if i = vt_tab_tp33.last then
          exit;
        else
          i := vt_tab_tp33.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 12.6;
      --
    end if; -- TP33 - Discriminação dos Pagamentos do Imposto e dos Débitos Específicos
    --
    vn_fase_arq := 13;
    --
    -- TP35 - Demonstrativo da Apuração do Imposto Devido pela Apropriação de Crédito Presumido em Substituição aos Créditos pelas Entradas (DAICP)
    if nvl(vt_tab_tp35.count, 0) > 0 then
      --
      vn_fase_arq := 13.1;
      --
      i := nvl(vt_tab_tp35.first, 0);
      --
      loop
        --
        vn_fase_arq := 13.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 13.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp35(i).tp_reg, 2, '35');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp35(i).quadro, 2, '14');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp35(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp35(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 13.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '35',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 13.5;
        --
        if i = vt_tab_tp35.last then
          exit;
        else
          i := vt_tab_tp35.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 13.6;
      --
    end if; -- TP35 - Demonstrativo da Apuração do Imposto Devido pela Apropriação de Crédito Presumido em Substituição aos Créditos pelas Entradas (DAICP)
    --
    vn_fase_arq := 14;
    --
     -- TP46 - Créditos por Autorizações Especiais
    if nvl(vt_tab_tp46.count, 0) > 0 then
       --
       vn_fase_arq := 9.1;
       --
       i := nvl(vt_tab_tp46.first, 0);
       --
       loop
         --
         vn_fase_arq := 9.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase_arq := 9.3;
         --
         vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
         --
         gl_conteudo := null;
         gl_conteudo := lpad(vt_tab_tp46(i).tp_reg, 2, '46');
         gl_conteudo := gl_conteudo || lpad(vt_tab_tp46(i).quadro, 2, '46');
         gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp46(i).seq, 0), 3, '0');
         gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp46(i).ident, 0), 15, '0');
         gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp46(i).valor, 0), 17, '0');
         gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp46(i).orig, 0), 2, '0');
         --
         vn_fase_arq := 9.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => '46',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase_arq := 9.5;
         --
         if i = vt_tab_tp46.last then
           exit;
         else
           i := vt_tab_tp46.next(i);
         end if;
         --
       end loop;
       --
       vn_fase_arq := 9.6;
       --
     end if; -- TP46 - Créditos por Autorizações Especiais
     --
    vn_fase_arq := 14;
    --
    -- TP49 - Entradas por Unidade da Federação
    if nvl(vt_bi_tab_tp49.count, 0) > 0 then
      --
      vn_fase_arq := 14.1;
      --
      i := nvl(vt_bi_tab_tp49.first, 0);
      --
      loop
        --
        vn_fase_arq := 14.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 14.3;
        --
        begin
          vn_qtde_tp49 := vt_bi_tab_tp49(i).count;
        exception
          when others then
            vn_qtde_tp49 := 0;
        end;
        --
        vn_fase_arq := 14.4;
        --
        if nvl(vn_qtde_tp49, 0) > 0 then
          --
          vn_fase_arq := 14.5;
          --
          j := vt_bi_tab_tp49(i).first;
          --
          vn_fase_arq := 14.6;
          --
          loop
            --
            vn_fase_arq := 14.7;
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 14.8;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := lpad(vt_bi_tab_tp49(i)(j).tp_reg, 2, '49');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp49(i)(j).quadro, 2, '49');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp49(i)(j).sigla_UF, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp49(i)(j).Valor_Contabil, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp49(i)(j).Base_Calculo, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp49(i)(j).Outras, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp49(i)(j).petroleo_energia, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp49(i)(j).outros_prod, 0), 17, '0');
            --
            vn_fase_arq := 14.9;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '49',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 14.10;
            --
            if j = vt_bi_tab_tp49(i).last then
              exit;
            else
              j := vt_bi_tab_tp49(i).next(j);
            end if;
            --
            vn_fase_arq := 14.11;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 14.12;
        --
        if i = vt_bi_tab_tp49.last then
          exit;
        else
          i := vt_bi_tab_tp49.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 14.13;
      --
    end if; -- TP49 - Entradas por Unidade da Federação
    --
    vn_fase_arq := 15;
    --
    -- TP50 - Saídas por Unidade da Federação
    if nvl(vt_bi_tab_tp50.count, 0) > 0 then
      --
      vn_fase_arq := 15.1;
      --
      i := nvl(vt_bi_tab_tp50.first, 0);
      --
      loop
        --
        vn_fase_arq := 15.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 15.3;
        --
        begin
          vn_qtde_tp50 := vt_bi_tab_tp50(i).count;
        exception
          when others then
            vn_qtde_tp50 := 0;
        end;
        --
        vn_fase_arq := 15.4;
        --
        if nvl(vn_qtde_tp50, 0) > 0 then
          --
          vn_fase_arq := 15.5;
          --
          j := vt_bi_tab_tp50(i).first;
          --
          vn_fase_arq := 15.6;
          --
          loop
            --
            vn_fase_arq := 15.7;
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase_arq := 15.8;
            --
            vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
            --
            gl_conteudo := null;
            gl_conteudo := lpad(vt_bi_tab_tp50(i)(j).tp_reg, 2, '50');
            gl_conteudo := gl_conteudo || lpad(vt_bi_tab_tp50(i)(j).quadro, 2, '50');
            gl_conteudo := gl_conteudo || rpad(vt_bi_tab_tp50(i)(j).sigla_UF, 2, ' ');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp50(i)(j).vlr_cont_nao_contr, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp50(i)(j).vlr_cont_contr, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp50(i)(j).base_calc_nao_contr, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp50(i)(j).base_calc_contr, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp50(i)(j).outras, 0), 17, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_tp50(i)(j).icms_cobr_subst_trib, 0), 17, '0');
            --
            vn_fase_arq := 15.9;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => '50',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase_arq := 15.10;
            --
            if j = vt_bi_tab_tp50(i).last then
              exit;
            else
              j := vt_bi_tab_tp50(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase_arq := 15.11;
        --
        if i = vt_bi_tab_tp50.last then
          exit;
        else
          i := vt_bi_tab_tp50.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 15.12;
      --
    end if; -- TP50 - Saídas por Unidade da Federação
    --
    vn_fase_arq := 16;
    --
    -- TP80 - Resumo do Livro Registro de Inventário e Receita Bruta
    if nvl(vt_tab_tp80.count, 0) > 0 then
      --
      vn_fase_arq := 16.1;
      --
      i := nvl(vt_tab_tp80.first, 0);
      --
      loop
        --
        vn_fase_arq := 16.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 16.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp80(i).tp_reg, 2, '80');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp80(i).quadro, 2, '80');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp80(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp80(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 16.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '80',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 16.5;
        --
        if i = vt_tab_tp80.last then
          exit;
        else
          i := vt_tab_tp80.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 16.6;
      --
    end if; -- TP80 - Resumo do Livro Registro de Inventário e Receita Bruta
    --
    vn_fase_arq := 17;
    --
    -- TP81 - Ativo
    if nvl(vt_tab_tp81.count, 0) > 0 then
      --
      vn_fase_arq := 17.1;
      --
      i := nvl(vt_tab_tp81.first, 0);
      --
      loop
        --
        vn_fase_arq := 17.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 17.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp81(i).tp_reg, 2, '81');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp81(i).quadro, 2, '81');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp81(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp81(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 17.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '81',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 17.5;
        --
        if i = vt_tab_tp81.last then
          exit;
        else
          i := vt_tab_tp81.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 17.6;
      --
    end if; -- TP81 - Ativo
    --
    vn_fase_arq := 18;
    --
    -- TP82 - Passivo
    if nvl(vt_tab_tp82.count, 0) > 0 then
      --
      vn_fase_arq := 18.1;
      --
      i := nvl(vt_tab_tp82.first, 0);
      --
      loop
        --
        vn_fase_arq := 18.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 18.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp82(i).tp_reg, 2, '82');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp82(i).quadro, 2, '82');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp82(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp82(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 18.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '82',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 18.5;
        --
        if i = vt_tab_tp82.last then
          exit;
        else
          i := vt_tab_tp82.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 18.6;
      --
    end if; -- TP82 - Passivo
    --
    vn_fase_arq := 19;
    --
    -- TP83 - Demonstração de Resultados
    if nvl(vt_tab_tp83.count, 0) > 0 then
      --
      vn_fase_arq := 19.1;
      --
      i := nvl(vt_tab_tp83.first, 0);
      --
      loop
        --
        vn_fase_arq := 19.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 19.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp83(i).tp_reg, 2, '83');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp83(i).quadro, 2, '83');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp83(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp83(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 19.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '83',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 19.5;
        --
        if i = vt_tab_tp83.last then
          exit;
        else
          i := vt_tab_tp83.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 19.6;
      --
    end if; -- TP83 - Demonstração de Resultados
    --
    vn_fase_arq := 20;
    --
    -- TP84 - Detalhamento das Despesas
    if nvl(vt_tab_tp84.count, 0) > 0 then
      --
      vn_fase_arq := 20.1;
      --
      i := nvl(vt_tab_tp84.first, 0);
      --
      loop
        --
        vn_fase_arq := 20.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 20.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp84(i).tp_reg, 2, '84');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp84(i).quadro, 2, '84');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp84(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp84(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 20.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '84',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 20.5;
        --
        if i = vt_tab_tp84.last then
          exit;
        else
          i := vt_tab_tp84.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 20.6;
      --
    end if; -- TP84 - Detalhamento das Despesas
    --
    vn_fase_arq := 21;
    --
    -- TP90 - Resumo do Livro Registro de Inventário e Receita Bruta (Encerramento de Atividades)
    if nvl(vt_tab_tp90.count, 0) > 0 then
      --
      vn_fase_arq := 21.1;
      --
      i := nvl(vt_tab_tp90.first, 0);
      --
      loop
        --
        vn_fase_arq := 21.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 21.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp90(i).tp_reg, 2, '90');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp90(i).quadro, 2, '90');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp90(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp90(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 21.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '90',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 21.5;
        --
        if i = vt_tab_tp90.last then
          exit;
        else
          i := vt_tab_tp90.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 21.6;
      --
    end if; -- TP90 - Resumo do Livro Registro de Inventário e Receita Bruta (Encerramento de Atividades)
    --
    vn_fase_arq := 22;
    --
    -- TP91 - Ativo (Encerramento de Atividades)
    if nvl(vt_tab_tp91.count, 0) > 0 then
      --
      vn_fase_arq := 22.1;
      --
      i := nvl(vt_tab_tp91.first, 0);
      --
      loop
        --
        vn_fase_arq := 22.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 22.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp91(i).tp_reg, 2, '91');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp91(i).quadro, 2, '91');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp91(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp91(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 22.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '91',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 22.5;
        --
        if i = vt_tab_tp91.last then
          exit;
        else
          i := vt_tab_tp91.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 22.6;
      --
    end if; -- TP91 - Ativo (Encerramento de Atividades)
    --
    vn_fase_arq := 23;
    --
    -- TP92 - Passivo (Encerramento de Atividades)
    if nvl(vt_tab_tp92.count, 0) > 0 then
      --
      vn_fase_arq := 23.1;
      --
      i := nvl(vt_tab_tp92.first, 0);
      --
      loop
        --
        vn_fase_arq := 23.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 23.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp92(i).tp_reg, 2, '92');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp92(i).quadro, 2, '92');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp92(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp92(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 23.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '92',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 23.5;
        --
        if i = vt_tab_tp92.last then
          exit;
        else
          i := vt_tab_tp92.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 23.6;
      --
    end if; -- TP92 - Passivo (Encerramento de Atividades)
    --
    vn_fase_arq := 24;
    --
    -- TP93 - Demonstração de Resultados (Encerramento de Atividades)
    if nvl(vt_tab_tp93.count, 0) > 0 then
      --
      vn_fase_arq := 24.1;
      --
      i := nvl(vt_tab_tp93.first, 0);
      --
      loop
        --
        vn_fase_arq := 24.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 24.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp93(i).tp_reg, 2, '93');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp93(i).quadro, 2, '93');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp93(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp93(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 24.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '93',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 24.5;
        --
        if i = vt_tab_tp93.last then
          exit;
        else
          i := vt_tab_tp93.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 24.6;
      --
    end if; -- TP93 - Demonstração de Resultados (Encerramento de Atividades)
    --
    vn_fase_arq := 25;
    --
    -- TP94 - Detalhamento das Despesas (Encerramento de Atividades)
    if nvl(vt_tab_tp94.count, 0) > 0 then
      --
      vn_fase_arq := 25.1;
      --
      i := nvl(vt_tab_tp94.first, 0);
      --
      loop
        --
        vn_fase_arq := 25.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 25.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp94(i).tp_reg, 2, '94');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp94(i).quadro, 2, '94');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp94(i).item, 3, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_tp94(i).valor, 0), 17, '0');
        --
        vn_fase_arq := 25.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '94',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 25.5;
        --
        if i = vt_tab_tp94.last then
          exit;
        else
          i := vt_tab_tp94.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 25.6;
      --
    end if; -- TP94 - Detalhamento das Despesas (Encerramento de Atividades)
    --
    vn_fase_arq := 26;
    --
    -- TP98 - Encerramento da Declaração
    if nvl(vt_tab_tp98.count, 0) > 0 then
      --
      vn_fase_arq := 26.1;
      --
      i := nvl(vt_tab_tp98.first, 0);
      --
      loop
        --
        vn_fase_arq := 26.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 26.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp98(i).tp_reg, 2, '98');
        gl_conteudo := gl_conteudo || rpad(vt_tab_tp98(i).quadro, 2, ' ');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp98(i).qte_reg, 5, 0);
        --
        vn_fase_arq := 26.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '98',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 26.5;
        --
        if i = vt_tab_tp98.last then
          exit;
        else
          i := vt_tab_tp98.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 26.6;
      --
    end if; -- TP98 - Encerramento da Declaração
    --
    vn_fase_arq := 27;
    --
    -- TP99 - Fechamento do Arquivo
    if nvl(vt_tab_tp99.count, 0) > 0 then
      --
      vn_fase_arq := 27.1;
      --
      i := nvl(vt_tab_tp99.first, 0);
      --
      loop
        --
        vn_fase_arq := 27.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase_arq := 27.3;
        --
        vn_qtde_linha := nvl(vn_qtde_linha, 0) + 1;
        --
        gl_conteudo := null;
        gl_conteudo := lpad(vt_tab_tp99(i).tp_reg, 2, '99');
        gl_conteudo := gl_conteudo || lpad(vt_tab_tp99(i).quadro, 2, ' '); -- quadro
        gl_conteudo := gl_conteudo || lpad(vn_qtde_linha, 5, '0'); -- total de registros (header + registros + trailer)
        gl_conteudo := gl_conteudo || lpad('1', 5, '0'); -- total das declarações
        --
        vn_fase_arq := 27.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => '99',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase_arq := 27.5;
        --
        if i = vt_tab_tp99.last then
          exit;
        else
          i := vt_tab_tp99.next(i);
        end if;
        --
      end loop;
      --
      vn_fase_arq := 27.6;
      --
    end if; -- TP99 - Fechamento do Arquivo
    --
    vn_fase_arq := 28;
    --
    -- Final da montagem das linhas do arquivo texto
    --
    pkb_limpa_vetor_sc;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_sc fase_arq (' || vn_fase_arq || '): ' || sqlerrm);
  end pkb_monta_estr_arq_gia_sc;
  --
  -- Inicio PROCEDURE PRINCIPAL SANTA CATARINA
  --
begin
  --
  vn_fase := 1;
  --
  gn_dm_situacao := 2; -- Validado
  --
  gv_tipocodarq_cd := '7'; -- GIA-SC
  --
  pkb_limpa_vetor_sc;
  --
  vn_tot_vl_contabil_ent       := 0;
  vn_tot_vl_base_calc_icms_ent := 0;
  vn_tot_vl_imp_trib_icms_ent  := 0;
  vn_tot_vl_bc_isenta_icms_ent := 0;
  vn_tot_vl_bc_outra_icms_ent  := 0;
  vn_tot_vl_contabil_sai       := 0;
  vn_tot_vl_base_calc_icms_sai := 0;
  vn_tot_vl_imp_trib_icms_sai  := 0;
  vn_tot_vl_bc_isenta_icms_sai := 0;
  vn_tot_vl_bc_outra_icms_sai  := 0;
  --
  vn_fase := 2;
  --
  vn_qtde_tp20 := 0;
  vn_qtde_tp21 := 0;
  vn_qtde_tp22 := 0;
  vn_qtde_tp23 := 0;
  vn_qtde_tp24 := 0;
  vn_qtde_tp25 := 0;
  vn_qtde_tp26 := 0;
  vn_qtde_tp30 := 0;
  vn_qtde_tp31 := 0;
  vn_qtde_tp32 := 0;
  vn_qtde_tp33 := 0;
  vn_qtde_tp35 := 0;
  vn_qtde_tp41 := 0;
  vn_qtde_tp42 := 0;
  vn_qtde_tp46 := 0;
  vn_qtde_tp49 := 0;
  vn_qtde_tp50 := 0;
  vn_qtde_tp80 := 0;
  vn_qtde_tp81 := 0;
  vn_qtde_tp82 := 0;
  vn_qtde_tp83 := 0;
  vn_qtde_tp84 := 0;
  vn_qtde_tp90 := 0;
  vn_qtde_tp91 := 0;
  vn_qtde_tp92 := 0;
  vn_qtde_tp93 := 0;
  vn_qtde_tp94 := 0;
  --
  vn_fase := 3;
  --
  -- Registro tipo 20 - Dados do Contabilista / Responsável
  vt_tab_tp20(1).tp_reg := '20'; -- Tipo de registro
  vt_tab_tp20(1).quadro := '  '; -- Quadro (Enviado em branco)
  --
  vn_fase := 4;
  --
  begin
    select lpad(f.num_cpf, 9, '0') || lpad(f.dig_cpf, 2, '0'),
           p.nome
      into vn_cpf,
           vv_nome
      from contador a,
           contador_empresa b,
           pessoa p,
           fisica f
     where a.id         = b.contador_id
       and b.empresa_id = gt_row_abertura_gia.empresa_id
       and f.pessoa_id  = a.pessoa_id
       and p.id         = f.pessoa_id
       and rownum       = 1;
  exception
    when others then
      vn_cpf  := 0;
      vv_nome := 0;
  end;
  --
  vn_fase := 5;
  --
  vt_tab_tp20(1).cpf        := vn_cpf; -- Número do CPF do contador
  vt_tab_tp20(1).nom_contab := vv_nome; -- Nome do contabilista
  vt_tab_tp20(1).DataHora   := to_char(sysdate, 'RRRRMMDDhh24miss'); -- Data e hora da geração do arquivo
  --
  vn_qtde_tp20              := 1;
  --
  vn_fase := 6;
  --
  -- Empresa Matriz
  begin
    select count(1)
      into vn_matriz
      from empresa em,
           pessoa pe,
           juridica ju
     where em.id                = gt_row_abertura_gia.empresa_id
       and em.ar_empresa_id     is null -- Matriz
       and em.dm_ind_dec_contab = 0 -- 0 - Escrituração da Matriz / 1 - Escrituração da Filial
       and ju.num_filial        = 1
       and pe.id                = em.pessoa_id
       and pe.id                = ju.pessoa_id;
  exception
    when others then
      vn_matriz := 0;
  end;
  --
  vn_fase := 7;
  --
  -- Filial
  begin
    select count(1)
      into vn_filial
      from empresa em,
           pessoa pe,
           juridica ju
     where em.id                = gt_row_abertura_gia.empresa_id
       and em.ar_empresa_id     is not null -- Filial
       and em.dm_ind_dec_contab = 1 -- 0 - Escrituração da Matriz / 1 - Escrituração da Filial
       and ju.num_filial        <> 1
       and pe.id                = em.pessoa_id
       and pe.id                = ju.pessoa_id;
  exception
    when others then
      vn_filial := 0;
  end;
  --
  vn_fase := 8;
  --
  for rec in c_det_dime loop
    exit when c_det_dime%notfound or(c_det_dime%notfound) is null;
    --
    vn_fase := 8.1;
    --
    if rec.registro = 21 then
      --
      vn_fase := 8.2;
      --
      -- Registro tipo 21 - Dados Iniciais
      vt_tab_tp21(1).tp_reg := '21'; -- Tipo de Registro
      vt_tab_tp21(1).quadro := '00'; -- Quadro
      --
      vn_fase := 8.3;
      --
      if rec.item = '010' then -- Número de Inscrição
        vt_tab_tp21(1).num_inscr := substr(rec.conteudo, 1, 9);
      elsif rec.item = '020' then -- Nome do Contribuinte
        vt_tab_tp21(1).nom_contr := substr(rec.conteudo, 1, 50);
      elsif rec.item = '030' then -- Período de Referência da Declaração
        vt_tab_tp21(1).per_ref_decl := substr(rec.conteudo, 1, 6);
      elsif rec.item = '040' then -- Tipo de Declaração
        vt_tab_tp21(1).tp_decl := substr(rec.conteudo, 1, 1);
      elsif rec.item = '050' then -- Regime de Apuração
        vt_tab_tp21(1).reg_apur := substr(rec.conteudo, 1, 1);
      elsif rec.item = '060' then -- Porte da Empresa
        vt_tab_tp21(1).porte_emp := substr(rec.conteudo, 1, 1);
      elsif rec.item = '070' then -- Apuração Consolidada
        vt_tab_tp21(1).apur_consol := substr(rec.conteudo, 1, 1);
      elsif rec.item = '080' then -- Apuração Centralizada
        vt_tab_tp21(1).apur_central := substr(rec.conteudo, 1, 1);
      elsif rec.item = '090' then -- Transferência de Créditos no Período
        vt_tab_tp21(1).transf_cred_per := substr(rec.conteudo, 1, 1);
      elsif rec.item = '100' then -- Tem Créditos Presumidos
        vt_tab_tp21(1).cred_pres := substr(rec.conteudo, 1, 1);
      elsif rec.item = '110' then -- Tem Créditos por Incentivos Fiscais
        vt_tab_tp21(1).cred_incent_fis := substr(rec.conteudo, 1, 1);
      elsif rec.item = '120' then -- Movimento
        vt_tab_tp21(1).movimento := substr(rec.conteudo, 1, 1);
      elsif rec.item = '130' then -- Substituto Tributário
        vt_tab_tp21(1).subst_trib := substr(rec.conteudo, 1, 1);
      elsif rec.item = '140' then -- Tem Escrita Contábil
        vt_tab_tp21(1).escr_contabil := substr(rec.conteudo, 1, 1);
      elsif rec.item = '150' then -- Quantidade de Trabalhadores na Atividade
        vt_tab_tp21(1).qte_trab_ativ := substr(rec.conteudo, 1, 5);
      end if;
      --
      vn_fase := 8.4;
      --
    end if;
    --
    vn_qtde_tp21 := 1;
    --
  end loop;
  --
  vn_fase := 9;
  --
  -- Verifica se o parâmetro encontra-se
  -- habilitado para a empresa da abertura
  begin
    select nvl(p.dm_lcto_difal, 0)
      into vn_param_difal
      from param_efd_icms_ipi p
     where p.empresa_id = gt_row_abertura_gia.empresa_id;
  exception
    when others then
      vn_param_difal := 0;
  end;
  --
  vn_fase := 10;
  --
  for rec in c_det_cfop loop
    exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
    --
    vn_fase := 10.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vv_cod_st_ipi          := null;
    vn_vl_base_calc_ipi    := 0;
    vn_aliq_ipi            := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_ipi    := 0;
    vn_vl_bc_outra_ipi     := 0;
    vn_ipi_nao_recup       := 0;
    vn_outro_ipi           := 0;
    vn_vl_fcp_icmsst       := 0;
    vn_aliq_fcp_icms       := 0;
    vn_vl_fcp_icms         := 0;
    vn_icms_sub_tri        := 0;
    --
    vn_fase := 10.2;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    vv_valortipoparam_cd   := null;
    vn_ICMSCobradoST       := null;
    vn_Outros_Produtos     := null;
    --
    vn_fase := 10.3;
    --
    -- 1 - Oper. com crédito do imposto
    -- 2 - Oper. sem crédito do imposto (Isentas ou no Tributadas)
    -- 3 - Oper. sem crédito do imposto (Outras)
    -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
    pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec.itemnf_id,
                                      sn_cfop                => vn_cfop,
                                      sn_vl_operacao         => vn_vl_contabil,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                      sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                      sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                      sv_cod_st_ipi          => vv_cod_st_ipi, -- não utilizado
                                      sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi, -- não utilizado
                                      sn_aliq_ipi            => vn_aliq_ipi, -- não utilizado
                                      sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi, -- não utilizado
                                      sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi, -- não utilizado
                                      sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi, -- não utilizado
                                      sn_ipi_nao_recup       => vn_ipi_nao_recup, -- não utilizado
                                      sn_outro_ipi           => vn_outro_ipi, -- não utilizado
                                      sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                      sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                      sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                      sn_vl_fcp_icms         => vn_vl_fcp_icms);
    --
    vn_fase := 10.4;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 10.5;
      --
      -- 0 - Entradas - Registro 22 - Valores Fiscais Entradas
      if rec.dm_ind_oper = 0 then
        --
        vn_fase := 10.6;
        --
        -- Recupera o valor do imposto diferencial alíquota
        /*begin
          select sum(i.vl_dif_aliq)
            into vn_vl_dif_aliq
            from itemnf_dif_aliq i
           where i.itemnf_id = rec.itemnf_id;
        exception
          when others then
            vn_vl_dif_aliq := 0;
        end;*/
        --
        vn_fase := 10.7;
        --
        begin
          vb_achou := vt_bi_tab_tp22(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        -- Se o parâmetro estiver habilitado, utiliza as informações
        -- das observações fiscal das notas fiscais
        if vn_param_difal = 2 then
          --
          vn_fase := 10.8;
          --
          for rec in c_infor_fiscal(vn_cfop) loop
            exit when c_infor_fiscal%notfound or(c_infor_fiscal%notfound) is null;
            --
            if rec.cfop = '2551' then
              --
              vn_fase := 10.9;
              --
              vn_vl_dif_aliq20 := rec.vl_icms;
              --
              vn_vl_dif_aliq := rec.vl_icms;
              --
            elsif rec.cfop = '2556' then
              --
              vn_fase := 10.10;
              --
              vn_vl_dif_aliq30 := rec.vl_icms;
              --
              vn_vl_dif_aliq := rec.vl_icms;
              --
            end if;
            --
            vn_vl_dif_aliq40 := 0;
            --
          end loop;
          --
        else
          --
          -- Recupera o valor do imposto diferencial alíquota por CFOP
          for rec_item in c_cfop_item(rec.itemnf_id) loop
            exit when c_cfop_item%notfound or(c_cfop_item%notfound) is null;
            --
            vn_fase := 10.11;
            --
            if rec_item.cfop = '2551' then
              --
              vn_fase := 10.12;
              --
              vn_vl_dif_aliq20 := vn_vl_dif_aliq20 + rec_item.vl_dif_aliq;
              --
              vn_vl_dif_aliq := vn_vl_dif_aliq + rec_item.vl_dif_aliq;
              --
            elsif rec_item.cfop = '2556' then
              --
              vn_fase := 10.13;
              --
              vn_vl_dif_aliq30 := vn_vl_dif_aliq30 + rec_item.vl_dif_aliq;
              --
              vn_vl_dif_aliq := vn_vl_dif_aliq + rec_item.vl_dif_aliq;
              --
            elsif rec_item.cfop = '3551' then
              --
              vn_fase := 10.14;
              --
              vn_vl_dif_aliq40 := vn_vl_dif_aliq40 + rec_item.vl_dif_aliq;
              --
            elsif rec_item.cfop = '1603' then
              --
              vn_fase := 10.15;
              --
              vn_icms_sub_tri := vn_icms_sub_tri + rec_item.vl_dif_aliq;
              --
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase := 10.16;
        --
        if not vb_achou then
          --
          vn_fase := 10.17;
          --
          -- Registro tipo 22 - Valores Fiscais Entradas
          vt_bi_tab_tp22(1)(vn_cfop).tp_reg         := '22'; -- Tipo do registro
          vt_bi_tab_tp22(1)(vn_cfop).quadro         := '01'; -- Quadro
          vt_bi_tab_tp22(1)(vn_cfop).CFOP           := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp22(1)(vn_cfop).valor_contabil := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo   := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas        := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras         := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          vt_bi_tab_tp22(1)(vn_cfop).bc_imp_ret     := (nvl(vn_vl_base_calc_icmsst, 0) * 100); -- Valor da base de cálculo do imposto retido
          vt_bi_tab_tp22(1)(vn_cfop).imp_ret        := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor do imposto retido
          vt_bi_tab_tp22(1)(vn_cfop).dif_aliq       := (nvl(vn_vl_dif_aliq, 0) * 100); -- Valor do imposto diferencial de alíquota
          --
          vn_qtde_tp22 := nvl(vn_qtde_tp22, 0) + 1;
          --
        else
          --
          vn_fase := 10.18;
          --
          vt_bi_tab_tp22(1)(vn_cfop).Valor_Contabil := vt_bi_tab_tp22(1)(vn_cfop).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo   := vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado  := vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas        := vt_bi_tab_tp22(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operaces isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras         := vt_bi_tab_tp22(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          vt_bi_tab_tp22(1)(vn_cfop).bc_imp_ret     := vt_bi_tab_tp22(1)(vn_cfop).bc_imp_ret + (nvl(vn_vl_base_calc_icmsst, 0) * 100); -- Valor da base de cálculo do imposto retido
          vt_bi_tab_tp22(1)(vn_cfop).imp_ret        := vt_bi_tab_tp22(1)(vn_cfop).imp_ret + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor do imposto retido
          vt_bi_tab_tp22(1)(vn_cfop).dif_aliq       := vt_bi_tab_tp22(1)(vn_cfop).dif_aliq + (nvl(vn_vl_dif_aliq, 0) * 100); -- Valor do imposto diferencial de alíquota
          --
        end if;
        --
        vn_vl_dif_aliq := 0;
        --
        vn_fase := 10.19;
        --
        -- Totaliza valores de entrada
        vn_tot_vl_contabil_ent       := vn_tot_vl_contabil_ent + nvl(vn_vl_contabil, 0);
        vn_tot_vl_base_calc_icms_ent := vn_tot_vl_base_calc_icms_ent + nvl(vn_vl_base_calc_icms, 0);
        vn_tot_vl_imp_trib_icms_ent  := vn_tot_vl_imp_trib_icms_ent + nvl(vn_vl_imp_trib_icms, 0);
        vn_tot_vl_bc_isenta_icms_ent := vn_tot_vl_bc_isenta_icms_ent + nvl(vn_vl_bc_isenta_icms, 0);
        vn_tot_vl_bc_outra_icms_ent  := vn_tot_vl_bc_outra_icms_ent + nvl(vn_vl_bc_outra_icms, 0);
        --
      -- 1 - Saída - Registro 23 - Valores Fiscais Saídas
      elsif rec.dm_ind_oper = 1 then
        --
        vn_fase := 10.20;
        --
        begin
          vb_achou := vt_bi_tab_tp23(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 10.21;
        --
        if not vb_achou then
          --
          vn_fase := 10.22;
          --
          -- Registro tipo 23 - Valores Fiscais Saídas
          vt_bi_tab_tp23(1)(vn_cfop).tp_reg         := '23'; -- Tipo do registro
          vt_bi_tab_tp23(1)(vn_cfop).quadro         := '02'; -- Quadro
          vt_bi_tab_tp23(1)(vn_cfop).CFOP           := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp23(1)(vn_cfop).Isentas        := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp23(1)(vn_cfop).Outras         := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          vn_fase := 10.23;
          --
          -- Verifica se é operação interna e se o CFOP(5) é de saída
          if (rec.dm_id_dest = 1 and substr(vn_cfop, 1, 1) = '5') then
            --
            vn_fase := 10.24;
            --
            vt_bi_tab_tp23(1)(vn_cfop).bc_imp_ret := (nvl(vn_vl_base_calc_icmsst, 0) * 100); -- Valor da base de cálculo do imposto retido
            vt_bi_tab_tp23(1)(vn_cfop).imp_ret    := (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor do imposto retido
            --
          else
            --
            vn_fase := 10.25;
            --
            vt_bi_tab_tp23(1)(vn_cfop).bc_imp_ret := 0; -- Valor da base de cálculo do imposto retido
            vt_bi_tab_tp23(1)(vn_cfop).imp_ret    := 0; -- Valor do imposto retido
            --
          end if;
          --
          vn_fase := 10.26;
          --
          vt_bi_tab_tp23(1)(vn_cfop).brancos := 0;
          --
          vn_fase := 10.27;
          --
          vn_qtde_tp23 := nvl(vn_qtde_tp23, 0) + 1;
          --
        else
          --
          vn_fase := 10.28;
          --
          vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := vt_bi_tab_tp23(1)(vn_cfop).imp_debitado + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp23(1)(vn_cfop).Isentas        := vt_bi_tab_tp23(1)(vn_cfop).isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operacoes isentas
          vt_bi_tab_tp23(1)(vn_cfop).Outras         := vt_bi_tab_tp23(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          -- Verifica se é operação interna e se o CFOP(5) é de saída
          if (rec.dm_id_dest = 1 and substr(vn_cfop, 1, 1) = '5') then
            --
            vn_fase := 10.29;
            --
            vt_bi_tab_tp23(1)(vn_cfop).bc_imp_ret := vt_bi_tab_tp23(1)(vn_cfop).bc_imp_ret + (nvl(vn_vl_base_calc_icmsst, 0) * 100); -- Valor da base de cálculo do imposto retido
            vt_bi_tab_tp23(1)(vn_cfop).imp_ret    := vt_bi_tab_tp23(1)(vn_cfop).imp_ret + (nvl(vn_vl_imp_trib_icmsst, 0) * 100); -- Valor do imposto retido
            --
          end if;
          --
        end if;
        --
        vn_fase := 10.30;
        --
        -- Totaliza valores de saída
        vn_tot_vl_contabil_sai       := vn_tot_vl_contabil_sai + nvl(vn_vl_contabil, 0);
        vn_tot_vl_base_calc_icms_sai := vn_tot_vl_base_calc_icms_sai + nvl(vn_vl_base_calc_icms, 0);
        vn_tot_vl_imp_trib_icms_sai  := vn_tot_vl_imp_trib_icms_sai + nvl(vn_vl_imp_trib_icms, 0);
        vn_tot_vl_bc_isenta_icms_sai := vn_tot_vl_bc_isenta_icms_sai + nvl(vn_vl_bc_isenta_icms, 0);
        vn_tot_vl_bc_outra_icms_sai  := vn_tot_vl_bc_outra_icms_sai + nvl(vn_vl_bc_outra_icms, 0);
        --
      end if; -- Registros 22 e 23
      --
      vn_fase := 10.31;
      --
      begin
        select est.sigla_estado,
               est.id
          into vv_sigla_estado,
               vn_estado_id
          from pessoa p,
               cidade cid,
               estado est
         where p.id   = rec.pessoa_id
           and cid.id = p.cidade_id
           and est.id = cid.estado_id;
      exception
        when others then
          vv_sigla_estado := null;
          vn_estado_id    := null;
      end;
      --
      vn_fase := 10.33;
      --
      vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => '7'); -- Tipo de Arquivo GIA-SC
      --
      -- Pega o codigo do estado para o Tipo de Arquivo GIA-SC
      vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq(en_estado_id     => vn_estado_id,
                                                                  en_tipocodarq_id => vn_tipocodarq_id);
      vn_aux_est             := vn_estado_id;
      --
      vn_fase := 10.34;
      --
      if vv_sigla_estado is not null then
        --
        vn_fase := 10.35;
        --
        -- Verifica se o participante é contribuinte de ICMS -- para o processo de saída
        vv_valortipoparam_cd := pk_csf.fkg_pessoa_valortipoparam_cd(ev_tipoparam_cd => '5',
                                                                    en_pessoa_id    => rec.pessoa_id);
        --
        vn_fase := 10.36;
        --
        -- Participante não é contribuinte de ICMS
        if vv_valortipoparam_cd is null then
          --
          vn_fase := 10.37;
          --
          vn_vlrcontnaocontr     := nvl(vn_vl_contabil, 0);
          vn_vlrbasecalcnaocontr := nvl(vn_vl_base_calc_icms, 0);
          vn_vlrcontcontr        := 0;
          vn_vlrbasecalccontr    := 0;
          --
        -- Participante é contribuinte de ICMS
        else
          --
          vn_fase := 10.38;
          --
          vn_vlrcontnaocontr     := 0;
          vn_vlrbasecalcnaocontr := 0;
          vn_vlrcontcontr        := nvl(vn_vl_contabil, 0);
          vn_vlrbasecalccontr    := nvl(vn_vl_base_calc_icms, 0);
          --
        end if;
        --
        vn_fase := 10.39;
        --
        -- Emissão Própria
        if rec.dm_ind_emit = 0 then
          --
          vn_icmscobradost := fkg_vlr_icmsst_conf_cfop(vn_cfop, nvl(vn_vl_imp_trib_icmsst, 0));
          --
        end if;
        --
        vn_fase := 10.40;
        --
        vn_outros_produtos := fkg_vlr_icmsst_conf_cfop(vn_cfop, nvl(vn_vl_imp_trib_icmsst, 0));
        --
        vn_fase := 10.41;
        --
        -- 0 - Entradas - Registro 49 - Entradas por Unidade da Federação
        if rec.dm_ind_oper = 0 then
          --
          vn_fase := 10.42;
          --
          begin
            vb_achou := vt_bi_tab_tp49(1).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 10.43;
          --
          if not vb_achou then
            --
            vn_fase := 10.44;
            --
            -- Registro tipo 49 - Entradas por Unidade da Federação
            vt_bi_tab_tp49(1)(vn_aux_est).tp_reg           := 49; -- Tipo de registro
            vt_bi_tab_tp49(1)(vn_aux_est).quadro           := '49'; -- Quadro
            vt_bi_tab_tp49(1)(vn_aux_est).sigla_UF         := vv_sigla_estado; -- Código da UF
            vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil   := (nvl(vn_vl_contabil, 0) * 100); -- Valor Contábil
            vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo     := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de cálculo
            vt_bi_tab_tp49(1)(vn_aux_est).Outras           := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Outras operações
            vt_bi_tab_tp49(1)(vn_aux_est).Petroleo_energia := 0; -- Petróleo e Energia
            vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod      := (nvl(vn_outros_produtos, 0) * 100); -- Outros produtos
            --
            vn_qtde_tp49 := nvl(vn_qtde_tp49, 0) + 1;
            --
          else
            --
            vn_fase := 10.45;
            --
            vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil := vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor Contábil
            vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo   := vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de cálculo
            vt_bi_tab_tp49(1)(vn_aux_est).Outras         := vt_bi_tab_tp49(1)(vn_aux_est).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Outras operações
            vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod    := vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod + (nvl(vn_outros_produtos, 0) * 100); -- Outros produtos
            --
          end if;
          --
          vn_fase := 10.46;
          --
          -- Registro totalizador de estados
          begin
            vb_achou := vt_bi_tab_tp49(1).exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 10.47;
          --
          if not vb_achou then
            --
            vn_fase := 10.48;
            --
            -- Registro tipo 49 - Entradas por Unidade da Federação
            vt_bi_tab_tp49(1)(99).tp_reg           := 49; -- Tipo de registro
            vt_bi_tab_tp49(1)(99).quadro           := '49'; -- Quadro
            vt_bi_tab_tp49(1)(99).sigla_UF         := 'TT'; -- Código da UF
            vt_bi_tab_tp49(1)(99).Valor_Contabil   := (nvl(vn_vl_contabil, 0) * 100); -- Valor Contábil
            vt_bi_tab_tp49(1)(99).Base_Calculo     := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de cálculo
            vt_bi_tab_tp49(1)(99).Outras           := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Outras operações
            vt_bi_tab_tp49(1)(99).Petroleo_energia := 0; -- Petróleo e Energia
            vt_bi_tab_tp49(1)(99).Outros_Prod      := (nvl(vn_outros_produtos, 0) * 100); -- Outros produtos
            --
            vn_qtde_tp49 := nvl(vn_qtde_tp49, 0) + 1;
            --
          else
            --
            vn_fase := 10.49;
            --
            vt_bi_tab_tp49(1)(99).Valor_Contabil := vt_bi_tab_tp49(1)(99).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor Contábil
            vt_bi_tab_tp49(1)(99).Base_Calculo   := vt_bi_tab_tp49(1)(99).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Base de cálculo
            vt_bi_tab_tp49(1)(99).Outras         := vt_bi_tab_tp49(1)(99).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Outras operações
            vt_bi_tab_tp49(1)(99).Outros_Prod    := vt_bi_tab_tp49(1)(99).Outros_Prod + (nvl(vn_outros_produtos, 0) * 100); -- Outros produtos
            --
          end if;
          --
        -- 1 - Saídas - Registro 50 - Saídas por Unidade da Federação
        elsif rec.dm_ind_oper = 1 then
          --
          vn_fase := 10.50;
          --
          begin
            vb_achou := vt_bi_tab_tp50(1).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 10.51;
          --
          if not vb_achou then
            --
            vn_fase := 10.52;
            --
            -- Registro tipo 50 - Saídas por Unidade da Federação
            vt_bi_tab_tp50(1)(vn_aux_est).tp_reg               := '50'; -- Tipo de registro
            vt_bi_tab_tp50(1)(vn_aux_est).quadro               := '50'; -- Quadro
            vt_bi_tab_tp50(1)(vn_aux_est).sigla_UF             := vv_sigla_estado; -- Código da UF
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr   := (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr       := (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr  := (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr      := (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Outras               := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib := (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
            vn_qtde_tp50 := nvl(vn_qtde_tp50, 0) + 1;
            --
          else
            --
            vn_fase := 10.53;
            --
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr   := vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr + (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr       := vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr + (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr  := vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr + (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr      := vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr + (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Outras               := vt_bi_tab_tp50(1)(vn_aux_est).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib := vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib + (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
          end if;
          --
          vn_fase := 10.54;
          --
          begin
            vb_achou := vt_bi_tab_tp50(1).exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 10.55;
          --
          if not vb_achou then
            --
            vn_fase := 10.56;
            --
            -- Registro tipo 50 - Saídas por Unidade da Federação
            vt_bi_tab_tp50(1)(99).tp_reg               := '50'; -- Tipo de registro
            vt_bi_tab_tp50(1)(99).quadro               := '50'; -- Quadro
            vt_bi_tab_tp50(1)(99).sigla_UF             := 'TT'; -- Código da UF
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr   := (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr       := (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr  := (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Contr      := (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(99).Outras               := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib := (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
            vn_qtde_tp50 := nvl(vn_qtde_tp50, 0) + 1;
            --
          else
            --
            vn_fase := 10.57;
            --
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr   := vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr + (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr       := vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr + (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr  := vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr + (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Contr      := vt_bi_tab_tp50(1)(99).Base_Calc_Contr + (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(99).Outras               := vt_bi_tab_tp50(1)(99).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib := vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib + (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
          end if;
          --
        end if;
        --
      end if; -- estado <> SC
      --
    end if;
    --
    vn_fase := 10.58;
    --
  end loop; -- c_det_cfop
  --
  vn_fase := 11;
  --
  for rec in c_det_cfop_ct loop
    exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
    --
    vn_fase := 11.1;
    --
    vn_cfop               := 0;
    vn_vl_contabil        := 0;
    vv_cod_st_icms        := null;
    vn_vl_base_calc_icms  := 0;
    vn_aliq_icms          := 0;
    vn_vl_imp_trib_icms   := 0;
    vn_vl_imp_trib_icmsst := 0;
    vn_vl_bc_isenta_icms  := 0;
    vn_vl_bc_outra_icms   := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    vv_valortipoparam_cd   := null;
    --
    vn_fase := 11.2;
    --
    -- Recupera os valores de impostos
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_contabil,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 11.3;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 11.4;
      --
      -- 0 - Entradas - Registro 22 - Valores Fiscais Entradas
      if rec.dm_ind_oper = 0 then
        --
        vn_fase := 11.5;
        --
        begin
          vb_achou := vt_bi_tab_tp22(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 11.6;
        --
        if not vb_achou then
          --
          vn_fase := 11.7;
          --
          -- Registro tipo 22 - Valores Fiscais Entradas
          vt_bi_tab_tp22(1)(vn_cfop).tp_reg         := '22'; -- Tipo do registro
          vt_bi_tab_tp22(1)(vn_cfop).quadro         := '01'; -- Quadro
          vt_bi_tab_tp22(1)(vn_cfop).CFOP           := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp22(1)(vn_cfop).valor_contabil := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo   := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas        := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras         := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          vn_qtde_tp22 := nvl(vn_qtde_tp22, 0) + 1;
          --
        else
          --
          vn_fase := 11.8;
          --
          vt_bi_tab_tp22(1)(vn_cfop).Valor_Contabil := vt_bi_tab_tp22(1)(vn_cfop).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo   := vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado  := vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas        := vt_bi_tab_tp22(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras         := vt_bi_tab_tp22(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
        end if;
        --
        -- Totaliza valores de entrada
        vn_tot_vl_contabil_ent       := vn_tot_vl_contabil_ent + nvl(vn_vl_contabil, 0);
        vn_tot_vl_base_calc_icms_ent := vn_tot_vl_base_calc_icms_ent + nvl(vn_vl_base_calc_icms, 0);
        vn_tot_vl_imp_trib_icms_ent  := vn_tot_vl_imp_trib_icms_ent + nvl(vn_vl_imp_trib_icms, 0);
        vn_tot_vl_bc_isenta_icms_ent := vn_tot_vl_bc_isenta_icms_ent + nvl(vn_vl_bc_isenta_icms, 0);
        vn_tot_vl_bc_outra_icms_ent  := vn_tot_vl_bc_outra_icms_ent + nvl(vn_vl_bc_outra_icms, 0);
        --
      -- 1 - Saídas - Registro 23 - Valores Fiscais Saídas
      elsif rec.dm_ind_oper = 1 then
        --
        vn_fase := 11.9;
        --
        begin
          vb_achou := vt_bi_tab_tp23(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 11.10;
        --
        if not vb_achou then
          --
          vn_fase := 11.11;
          --
          -- Registro tipo 23 - Valores Fiscais Saídas
          vt_bi_tab_tp23(1)(vn_cfop).tp_reg         := '23'; -- Tipo do registro
          vt_bi_tab_tp23(1)(vn_cfop).quadro         := '02'; -- Quadro
          vt_bi_tab_tp23(1)(vn_cfop).CFOP           := vn_cfop; -- Codigo fiscal da operação
          vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp23(1)(vn_cfop).Isentas        := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp23(1)(vn_cfop).Outras         := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          vn_qtde_tp23 := nvl(vn_qtde_tp23, 0) + 1;
          --
        else
          --
          vn_fase := 11.12;
          --
          vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := vt_bi_tab_tp23(1)(vn_cfop).imp_debitado + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp23(1)(vn_cfop).Isentas        := vt_bi_tab_tp23(1)(vn_cfop).isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp23(1)(vn_cfop).Outras         := vt_bi_tab_tp23(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
        end if;
        --
        vn_fase := 11.13;
        --
        -- Totaliza valores de saída
        vn_tot_vl_contabil_sai       := vn_tot_vl_contabil_sai + nvl(vn_vl_contabil, 0);
        vn_tot_vl_base_calc_icms_sai := vn_tot_vl_base_calc_icms_sai + nvl(vn_vl_base_calc_icms, 0);
        vn_tot_vl_imp_trib_icms_sai  := vn_tot_vl_imp_trib_icms_sai + nvl(vn_vl_imp_trib_icms, 0);
        vn_tot_vl_bc_isenta_icms_sai := vn_tot_vl_bc_isenta_icms_sai + nvl(vn_vl_bc_isenta_icms, 0);
        vn_tot_vl_bc_outra_icms_sai  := vn_tot_vl_bc_outra_icms_sai + nvl(vn_vl_bc_outra_icms, 0);
        --
      end if; -- Indicador de Operação: 0 - Entrada, 1 - Saída
      --
      vn_fase := 11.14;
      --
      begin
        select est.id,
               est.sigla_estado
          into vn_estado_id,
               vv_sigla_estado
          from pessoa p,
               cidade cid,
               estado est
         where p.id   = rec.pessoa_id
           and cid.id = p.cidade_id
           and est.id = cid.estado_id;
      exception
        when others then
          vn_estado_id    := null;
          vv_sigla_estado := null;
      end;
      --
      vn_fase := 11.15;
      --
      vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => '7'); -- Tipo de Arquivo GIA-SC
      --
      -- Pega o codigo do estado para o Tipo de Arquivo GIA-SC
      vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq(en_estado_id     => vn_estado_id,
                                                                  en_tipocodarq_id => vn_tipocodarq_id);
      vn_aux_est             := vn_estado_id;
      --
      vn_fase := 11.16;
      --
      if vv_sigla_estado is not null then
        --
        vn_fase := 11.17;
        --
        -- Verifica se o participante e contribuindo de ICMS -- para o processo de saida
        vv_valortipoparam_cd := pk_csf.fkg_pessoa_valortipoparam_cd(ev_tipoparam_cd => '5',
                                                                    en_pessoa_id    => rec.pessoa_id);
        --
        vn_fase := 11.18;
        --
        -- Participante não é contribuinte de ICMS
        if vv_valortipoparam_cd is null then
          --
          vn_fase := 11.19;
          --
          vn_vlrcontnaocontr     := nvl(vn_vl_contabil, 0);
          vn_vlrbasecalcnaocontr := nvl(vn_vl_base_calc_icms, 0);
          vn_vlrcontcontr        := 0;
          vn_vlrbasecalccontr    := 0;
          --
        -- Participante é contribuinte de ICMS
        else
          --
          vn_fase := 11.20;
          --
          vn_vlrcontnaocontr     := 0;
          vn_vlrbasecalcnaocontr := 0;
          vn_vlrcontcontr        := nvl(vn_vl_contabil, 0);
          vn_vlrbasecalccontr    := nvl(vn_vl_base_calc_icms, 0);
          --
        end if;
        --
        vn_fase := 11.21;
        --
        -- 0 - Entradas - Registro 49 - Entradas por Unidade da Federação
        if rec.dm_ind_oper = 0 then
          --
          vn_fase := 11.22;
          --
          begin
            vb_achou := vt_bi_tab_tp49(1).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 11.23;
          --
          if not vb_achou then
            --
            vn_fase := 11.24;
            --
            -- Registro tipo 49 - Entradas por Unidade da Federação
            vt_bi_tab_tp49(1)(vn_aux_est).tp_reg           := '49'; -- Tipo de registro
            vt_bi_tab_tp49(1)(vn_aux_est).quadro           := '49'; -- Quadro
            vt_bi_tab_tp49(1)(vn_aux_est).sigla_UF         := vv_sigla_estado; -- Código da UF
            vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
            vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo     := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp49(1)(vn_aux_est).Outras           := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp49(1)(vn_aux_est).Petroleo_energia := 0; -- Valor de petróleo e energia
            vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod      := (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
            vn_qtde_tp49 := nvl(vn_qtde_tp49, 0) + 1;
            --
          else
            --
            vn_fase := 11.25;
            --
            vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil := vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
            vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo   := vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp49(1)(vn_aux_est).Outras         := vt_bi_tab_tp49(1)(vn_aux_est).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod    := vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod + (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
          end if;
          --
          begin
            vb_achou := vt_bi_tab_tp49(1).exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          if not vb_achou then
            --
            vn_fase := 11.26;
            --
            -- Registro tipo 49 - Entradas por Unidade da Federação
            vt_bi_tab_tp49(1)(99).tp_reg           := '49'; -- Tipo de registro
            vt_bi_tab_tp49(1)(99).quadro           := '49'; -- Quadro
            vt_bi_tab_tp49(1)(99).sigla_UF         := 'TT'; -- Cógido da UF
            vt_bi_tab_tp49(1)(99).Valor_Contabil   := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
            vt_bi_tab_tp49(1)(99).Base_Calculo     := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp49(1)(99).Outras           := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp49(1)(99).Petroleo_energia := 0; -- Valor de petróleo e energia
            vt_bi_tab_tp49(1)(99).Outros_Prod      := (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
            vn_qtde_tp49 := nvl(vn_qtde_tp49, 0) + 1;
            --
          else
            --
            vn_fase := 11.27;
            --
            vt_bi_tab_tp49(1)(99).Valor_Contabil := vt_bi_tab_tp49(1)(99).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor Contabil
            vt_bi_tab_tp49(1)(99).Base_Calculo   := vt_bi_tab_tp49(1)(99).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de calculo
            vt_bi_tab_tp49(1)(99).Outras         := vt_bi_tab_tp49(1)(99).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operaces
            vt_bi_tab_tp49(1)(99).Outros_Prod    := vt_bi_tab_tp49(1)(99).Outros_Prod + (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
          end if;
          --
        -- 1 - Saídas - Registro 50 - Saídas por Unidade da Federação
        elsif rec.dm_ind_oper = 1 then
          --
          vn_fase := 11.28;
          --
          begin
            vb_achou := vt_bi_tab_tp50(1).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 11.29;
          --
          if not vb_achou then
            --
            vn_fase := 11.30;
            --
            -- Registro tipo 50 - Saídas por Unidade da Federação
            vt_bi_tab_tp50(1)(vn_aux_est).tp_reg               := '50'; -- Tipo de registro
            vt_bi_tab_tp50(1)(vn_aux_est).quadro               := '50'; -- Quadro
            vt_bi_tab_tp50(1)(vn_aux_est).sigla_UF             := vv_sigla_estado; -- Código da UF
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr   := (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr       := (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr  := (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr      := (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Outras               := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operacoes
            vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib := (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
            vn_qtde_tp50 := nvl(vn_qtde_tp50, 0) + 1;
            --
          else
            --
            vn_fase := 11.31;
            --
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr   := vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr + (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr       := vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr + (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr  := vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr + (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr      := vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr + (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Outras               := vt_bi_tab_tp50(1)(vn_aux_est).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib := vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib + (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
          end if;
          --
          vn_fase := 11.32;
          --
          begin
            vb_achou := vt_bi_tab_tp50(1).exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          if not vb_achou then
            --
            vn_fase := 11.33;
            --
            -- Registro tipo 50 - Saídas por Unidade da Federação
            vt_bi_tab_tp50(1)(99).tp_reg               := '50'; -- Tipo de registro
            vt_bi_tab_tp50(1)(99).quadro               := '50'; -- Quadro
            vt_bi_tab_tp50(1)(99).sigla_UF             := 'TT'; -- Código da UF
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr   := (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr       := (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr  := (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Contr      := (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(99).Outras               := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib := (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
            vn_qtde_tp50 := nvl(vn_qtde_tp50, 0) + 1;
            --
          else
            --
            vn_fase := 11.34;
            --
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr   := vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr + (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr       := vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr + (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr  := vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr + (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Contr      := vt_bi_tab_tp50(1)(99).Base_Calc_Contr + (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(99).Outras               := vt_bi_tab_tp50(1)(99).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib := vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib + (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
          end if;
          --
        end if;
        --
      end if;
      --
    end if;
    --
    vn_fase := 11.35;
    --
  end loop; -- c_det_cfop_ct
  --
  vn_fase := 12;
  --
  -- Valores de Serviços Contínuos
  for rec in c_det_cfop_sc loop
    exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
    --
    vn_fase := 12.1;
    --
    vn_cfop                := 0;
    vn_vl_contabil         := 0;
    vv_cod_st_icms         := null;
    vn_vl_base_calc_icms   := 0;
    vn_aliq_icms           := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    vn_vl_imp_trib_ipi     := 0;
    --
    vn_estado_id           := null;
    vn_tipocodarq_id       := null;
    vv_estadotipocodarq_cd := null;
    vv_valortipoparam_cd   := null;
    vn_ICMSCobradoST       := null;
    vn_Outros_Produtos     := null;
    --
    vn_fase := 12.2;
    --
    -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviços contínuos
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_contabil,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi, -- não utilizado
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 12.3;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 12.4;
      --
      -- 0 - Entradas - Registro 22 - Valores Fiscais Entradas
      if rec.dm_ind_oper = 0 then
        --
        vn_fase := 12.5;
        --
        begin
          vb_achou := vt_bi_tab_tp22(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 12.6;
        --
        if not vb_achou then
          --
          vn_fase := 12.7;
          --
          -- Registro tipo 22 - Valores Fiscais Entradas
          vt_bi_tab_tp22(1)(vn_cfop).tp_reg         := '22'; -- Tipo do registro
          vt_bi_tab_tp22(1)(vn_cfop).quadro         := '01'; -- Quadro
          vt_bi_tab_tp22(1)(vn_cfop).CFOP           := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp22(1)(vn_cfop).valor_contabil := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo   := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado  := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas        := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras         := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          vn_qtde_tp22 := nvl(vn_qtde_tp22, 0) + 1;
          --
        else
          --
          vn_fase := 12.8;
          --
          vt_bi_tab_tp22(1)(vn_cfop).Valor_Contabil := vt_bi_tab_tp22(1)(vn_cfop).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo   := vt_bi_tab_tp22(1)(vn_cfop).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado  := vt_bi_tab_tp22(1)(vn_cfop).Imp_creditado + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp22(1)(vn_cfop).Isentas        := vt_bi_tab_tp22(1)(vn_cfop).Isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp22(1)(vn_cfop).Outras         := vt_bi_tab_tp22(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
        end if;
        --
        -- Totaliza valores de entrada
        vn_tot_vl_contabil_ent       := vn_tot_vl_contabil_ent + nvl(vn_vl_contabil, 0);
        vn_tot_vl_base_calc_icms_ent := vn_tot_vl_base_calc_icms_ent + nvl(vn_vl_base_calc_icms, 0);
        vn_tot_vl_imp_trib_icms_ent  := vn_tot_vl_imp_trib_icms_ent + nvl(vn_vl_imp_trib_icms, 0);
        vn_tot_vl_bc_isenta_icms_ent := vn_tot_vl_bc_isenta_icms_ent + nvl(vn_vl_bc_isenta_icms, 0);
        vn_tot_vl_bc_outra_icms_ent  := vn_tot_vl_bc_outra_icms_ent + nvl(vn_vl_bc_outra_icms, 0);
        --
      -- 1 - Saídas - Registro 23 - Valores Fiscais Saídas
      elsif rec.dm_ind_oper = 1 then
        --
        vn_fase := 12.9;
        --
        begin
          vb_achou := vt_bi_tab_tp23(1).exists(vn_cfop);
        exception
          when others then
            vb_achou := false;
        end;
        --
        vn_fase := 12.10;
        --
        if not vb_achou then
          --
          vn_fase := 12.11;
          --
          -- Registro tipo 23 - Valores Fiscais Saídas
          vt_bi_tab_tp23(1)(vn_cfop).tp_reg         := '23'; -- Tipo do registro
          vt_bi_tab_tp23(1)(vn_cfop).quadro         := '02'; -- Quadro
          vt_bi_tab_tp23(1)(vn_cfop).CFOP           := vn_cfop; -- Código fiscal da operação
          vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := (nvl(vn_vl_contabil, 0) * 100); -- Valor contabil
          vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp23(1)(vn_cfop).Isentas        := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operacoes isentas
          vt_bi_tab_tp23(1)(vn_cfop).Outras         := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
          vn_qtde_tp23 := nvl(vn_qtde_tp23, 0) + 1;
          --
        else
          --
          vn_fase := 12.12;
          --
          vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
          vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
          vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := vt_bi_tab_tp23(1)(vn_cfop).imp_debitado + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
          vt_bi_tab_tp23(1)(vn_cfop).Isentas        := vt_bi_tab_tp23(1)(vn_cfop).isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
          vt_bi_tab_tp23(1)(vn_cfop).Outras         := vt_bi_tab_tp23(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
          --
        end if;
        --
        vn_fase := 12.13;
        --
        -- Totaliza valores de saída
        vn_tot_vl_contabil_sai       := vn_tot_vl_contabil_sai + nvl(vn_vl_contabil, 0);
        vn_tot_vl_base_calc_icms_sai := vn_tot_vl_base_calc_icms_sai + nvl(vn_vl_base_calc_icms, 0);
        vn_tot_vl_imp_trib_icms_sai  := vn_tot_vl_imp_trib_icms_sai + nvl(vn_vl_imp_trib_icms, 0);
        vn_tot_vl_bc_isenta_icms_sai := vn_tot_vl_bc_isenta_icms_sai + nvl(vn_vl_bc_isenta_icms, 0);
        vn_tot_vl_bc_outra_icms_sai  := vn_tot_vl_bc_outra_icms_sai + nvl(vn_vl_bc_outra_icms, 0);
        --
      end if; -- Indicador de operação: 0 - Entrada, 1 - Saída
      --
      vn_fase := 12.14;
      --
      begin
        select est.id,
               est.sigla_estado
          into vn_estado_id,
               vv_sigla_estado
          from pessoa p,
               cidade cid,
               estado est
         where p.id   = rec.pessoa_id
           and cid.id = p.cidade_id
           and est.id = cid.estado_id;
      exception
        when others then
          vn_estado_id    := null;
          vv_sigla_estado := null;
      end;
      --
      vn_fase := 12.15;
      --
      vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => '7'); -- Tipo de Arquivo GIA-SC
      --
      -- Pega o código do estado para o Tipo de Arquivo GIA-SC
      vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq(en_estado_id     => vn_estado_id,
                                                                  en_tipocodarq_id => vn_tipocodarq_id);
      vn_aux_est             := vn_estado_id;
      --
      vn_fase := 12.16;
      --
      if vv_sigla_estado is not null then
        --
        vn_fase := 12.17;
        --
        -- Verifica se o participante é contribuinte de ICMS -- para o processo de saída
        vv_valortipoparam_cd := pk_csf.fkg_pessoa_valortipoparam_cd(ev_tipoparam_cd => '5',
                                                                    en_pessoa_id    => rec.pessoa_id);
        --
        vn_fase := 12.18;
        --
        -- Participante não é contribuinte de ICMS
        if vv_valortipoparam_cd is null then
          --
          vn_fase := 12.19;
          --
          vn_vlrcontnaocontr     := nvl(vn_vl_contabil, 0);
          vn_vlrbasecalcnaocontr := nvl(vn_vl_base_calc_icms, 0);
          vn_vlrcontcontr        := 0;
          vn_vlrbasecalccontr    := 0;
          --
        -- Participante é contribuinte de ICMS
        else
          --
          vn_fase := 12.20;
          --
          vn_vlrcontnaocontr     := 0;
          vn_vlrbasecalcnaocontr := 0;
          vn_vlrcontcontr        := nvl(vn_vl_contabil, 0);
          vn_vlrbasecalccontr    := nvl(vn_vl_base_calc_icms, 0);
          --
        end if;
        --
        vn_fase := 12.21;
        --
        -- Somente CFOP do Grupo 6
        if substr(vn_cfop, 1, 1) = '6' then
          --
          vn_icmscobradost := nvl(vn_vl_imp_trib_icmsst, 0);
          --
        else
          vn_icmscobradost := 0;
        end if;
        --
        vn_fase := 12.22;
        --
        -- Somente CFOP do Grupo 2
        if substr(vn_cfop, 1, 1) = '2' then
          --
          vn_Outros_Produtos := nvl(vn_vl_imp_trib_icmsst, 0);
          --
        else
          --
          vn_Outros_Produtos := 0;
          --
        end if;
        --
        vn_fase := 12.23;
        --
        -- 0 - Entradas - Registro 49 - Entradas por Unidade da Federação
        if rec.dm_ind_oper = 0 then
          --
          vn_fase := 12.24;
          --
          begin
            vb_achou := vt_bi_tab_tp49(1).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 12.25;
          --
          if not vb_achou then
            --
            vn_fase := 12.26;
            --
            -- Registro tipo 49 - Entradas por Unidade da Federação
            vt_bi_tab_tp49(1)(vn_aux_est).tp_reg           := '49'; -- Tipo de registro
            vt_bi_tab_tp49(1)(vn_aux_est).quadro           := '49'; -- Quadro
            vt_bi_tab_tp49(1)(vn_aux_est).sigla_UF         := vv_sigla_estado; -- Código da UF
            vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil   := (nvl(vn_vl_contabil, 0) * 100); -- Valor Contábil
            vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo     := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp49(1)(vn_aux_est).Outras           := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp49(1)(vn_aux_est).Petroleo_energia := 0; -- Valor de petróleo e energia
            vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod      := (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
            vn_qtde_tp49 := nvl(vn_qtde_tp49, 0) + 1;
            --
          else
            --
            vn_fase := 12.27;
            --
            vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil := vt_bi_tab_tp49(1)(vn_aux_est).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
            vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo   := vt_bi_tab_tp49(1)(vn_aux_est).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp49(1)(vn_aux_est).Outras         := vt_bi_tab_tp49(1)(vn_aux_est).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod    := vt_bi_tab_tp49(1)(vn_aux_est).Outros_Prod + (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
          end if;
          --
          begin
            vb_achou := vt_bi_tab_tp49(1).exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          if not vb_achou then
            --
            vn_fase := 12.28;
            --
            -- Registro tipo 49 - Entradas por Unidade da Federação
            vt_bi_tab_tp49(1)(99).tp_reg           := '49'; -- Tipo de registro
            vt_bi_tab_tp49(1)(99).quadro           := '49'; -- Quadro
            vt_bi_tab_tp49(1)(99).sigla_UF         := 'TT'; -- Código da UF
            vt_bi_tab_tp49(1)(99).Valor_Contabil   := (nvl(vn_vl_contabil, 0) * 100); -- Valor Contábil
            vt_bi_tab_tp49(1)(99).Base_Calculo     := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
            vt_bi_tab_tp49(1)(99).Outras           := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp49(1)(99).Petroleo_energia := 0; -- Valor de petróleo e energia
            vt_bi_tab_tp49(1)(99).Outros_Prod      := (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
            vn_qtde_tp49 := nvl(vn_qtde_tp49, 0) + 1;
            --
          else
            --
            vn_fase := 12.29;
            --
            vt_bi_tab_tp49(1)(99).Valor_Contabil := vt_bi_tab_tp49(1)(99).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor Contabil
            vt_bi_tab_tp49(1)(99).Base_Calculo   := vt_bi_tab_tp49(1)(99).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de calculo
            vt_bi_tab_tp49(1)(99).Outras         := vt_bi_tab_tp49(1)(99).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operacoes
            vt_bi_tab_tp49(1)(99).Outros_Prod    := vt_bi_tab_tp49(1)(99).Outros_Prod + (nvl(vn_outros_produtos, 0) * 100); -- Valor de outros produtos
            --
          end if;
          --
        -- 1 - Saídas - Registro 50 - Saídas por Unidade da Federação
        elsif rec.dm_ind_oper = 1 then
          --
          vn_fase := 12.30;
          --
          begin
            vb_achou := vt_bi_tab_tp50(1).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 12.31;
          --
          if not vb_achou then
            --
            vn_fase := 12.32;
            --
            -- Registro tipo 50 - Saídas por Unidade da Federação
            vt_bi_tab_tp50(1)(vn_aux_est).tp_reg               := '50'; -- Tipo de registro
            vt_bi_tab_tp50(1)(vn_aux_est).quadro               := '50'; -- Quadro
            vt_bi_tab_tp50(1)(vn_aux_est).sigla_UF             := vv_sigla_estado; -- Código da UF
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr   := (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr       := (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr  := (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr      := (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Outras               := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib := (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
            vn_qtde_tp50 := nvl(vn_qtde_tp50, 0) + 1;
            --
          else
            --
            vn_fase := 12.33;
            --
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr   := vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Nao_Contr + (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr       := vt_bi_tab_tp50(1)(vn_aux_est).Vlr_Cont_Contr + (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr  := vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Nao_Contr + (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr      := vt_bi_tab_tp50(1)(vn_aux_est).Base_Calc_Contr + (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(vn_aux_est).Outras               := vt_bi_tab_tp50(1)(vn_aux_est).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib := vt_bi_tab_tp50(1)(vn_aux_est).icms_cobr_subst_trib + (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
          end if;
          --
          begin
            vb_achou := vt_bi_tab_tp50(1).exists(99);
          exception
            when others then
              vb_achou := false;
          end;
          --
          if not vb_achou then
            --
            vn_fase := 12.34;
            --
            -- Registro tipo 50 - Saídas por Unidade da Federação
            vt_bi_tab_tp50(1)(99).tp_reg               := '50'; -- Tipo de registro
            vt_bi_tab_tp50(1)(99).quadro               := '50'; -- Quadro
            vt_bi_tab_tp50(1)(99).sigla_UF             := 'TT'; -- Código da UF
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr   := (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr       := (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr  := (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Contr      := (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(99).Outras               := ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib := (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
            vn_qtde_tp50 := nvl(vn_qtde_tp50, 0) + 1;
            --
          else
            --
            vn_fase := 12.35;
            --
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr   := vt_bi_tab_tp50(1)(99).Vlr_Cont_Nao_Contr + (nvl(vn_vlrcontnaocontr, 0) * 100); -- Valor contábil no contribuinte
            vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr       := vt_bi_tab_tp50(1)(99).Vlr_Cont_Contr + (nvl(vn_vlrcontcontr, 0) * 100); -- Valor contábil contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr  := vt_bi_tab_tp50(1)(99).Base_Calc_Nao_Contr + (nvl(vn_vlrbasecalcnaocontr, 0) * 100); -- Valor da base de cálculo no contribuinte
            vt_bi_tab_tp50(1)(99).Base_Calc_Contr      := vt_bi_tab_tp50(1)(99).Base_Calc_Contr + (nvl(vn_vlrbasecalccontr, 0) * 100); -- Valor da base de cálculo contribuinte
            vt_bi_tab_tp50(1)(99).Outras               := vt_bi_tab_tp50(1)(99).Outras + ((nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_bc_isenta_icms, 0)) * 100); -- Valor de outras operações
            vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib := vt_bi_tab_tp50(1)(99).icms_cobr_subst_trib + (nvl(vn_icmscobradost, 0) * 100); -- Valor do imposto cobrado ST
            --
          end if;
          --
        end if;
        --
      end if;
      --
    end if;
    --
    vn_fase := 12.36;
    --
  end loop; -- c_det_cfop_sc
  --
  vn_fase := 13;
  --
  -- Informações de Cupom Fiscal
  for rec in c_det_cfop_ecf loop
    exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
    --
    vn_fase := 13.1;
    --
    vn_cfop              := 0;
    vn_vl_contabil       := 0;
    vv_cod_st_icms       := null;
    vn_vl_base_calc_icms := 0;
    vn_aliq_icms         := 0;
    vn_vl_imp_trib_icms  := 0;
    vn_vl_bc_isenta_icms := 0;
    vn_vl_bc_outra_icms  := 0;
    --
    vn_fase := 13.2;
    --
    -- Recupera valores fiscais (ICMS) do conhecimento de transporte
    pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_cfop                => vn_cfop,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_opr              => vn_vl_contabil,
                                      sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                      sn_vl_icms             => vn_vl_imp_trib_icms,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
    --
    vn_fase := 13.3;
    --
    if trim(vv_cod_st_icms) is not null then
      --
      vn_fase := 13.4;
      --
      -- Sempre Saída - Registro 23 - Valores Fiscais Saídas
      begin
        vb_achou := vt_bi_tab_tp23(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 13.5;
      --
      if not vb_achou then
        --
        vn_fase := 13.6;
        --
        -- Registro tipo 23 - Valores Fiscais Saídas
        vt_bi_tab_tp23(1)(vn_cfop).tp_reg         := '23'; -- Tipo do registro
        vt_bi_tab_tp23(1)(vn_cfop).quadro         := '02'; -- Quadro
        vt_bi_tab_tp23(1)(vn_cfop).CFOP           := vn_cfop; -- Código fiscal da operação
        vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
        vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
        vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
        vt_bi_tab_tp23(1)(vn_cfop).Isentas        := (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
        vt_bi_tab_tp23(1)(vn_cfop).Outras         := (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
        --
        vn_qtde_tp23 := nvl(vn_qtde_tp23, 0) + 1;
        --
      else
        --
        vn_fase := 13.7;
        --
        vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil := vt_bi_tab_tp23(1)(vn_cfop).Valor_Contabil + (nvl(vn_vl_contabil, 0) * 100); -- Valor contábil
        vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo   := vt_bi_tab_tp23(1)(vn_cfop).Base_Calculo + (nvl(vn_vl_base_calc_icms, 0) * 100); -- Valor da base de cálculo
        vt_bi_tab_tp23(1)(vn_cfop).imp_debitado   := vt_bi_tab_tp23(1)(vn_cfop).imp_debitado + (nvl(vn_vl_imp_trib_icms, 0) * 100); -- Valor do imposto
        vt_bi_tab_tp23(1)(vn_cfop).Isentas        := vt_bi_tab_tp23(1)(vn_cfop).isentas + (nvl(vn_vl_bc_isenta_icms, 0) * 100); -- Valor de operações isentas
        vt_bi_tab_tp23(1)(vn_cfop).Outras         := vt_bi_tab_tp23(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100); -- Valor de outras operações
        --
      end if; -- Indicador de Operação: 0 - Entrada, 1 - Saída
      --
      vn_fase := 13.8;
      --
      -- Totaliza valores de saída
      vn_tot_vl_contabil_sai       := vn_tot_vl_contabil_sai + nvl(vn_vl_contabil, 0);
      vn_tot_vl_base_calc_icms_sai := vn_tot_vl_base_calc_icms_sai + nvl(vn_vl_base_calc_icms, 0);
      vn_tot_vl_imp_trib_icms_sai  := vn_tot_vl_imp_trib_icms_sai + nvl(vn_vl_imp_trib_icms, 0);
      vn_tot_vl_bc_isenta_icms_sai := vn_tot_vl_bc_isenta_icms_sai + nvl(vn_vl_bc_isenta_icms, 0);
      vn_tot_vl_bc_outra_icms_sai  := vn_tot_vl_bc_outra_icms_sai + nvl(vn_vl_bc_outra_icms, 0);
      --
    end if;
  --
  end loop; -- c_det_cfop_ecf
  --
  vn_fase := 14;
  --
  k := 0;
  --
  begin
    select nvl(na.vl_icms, 0)
      into vn_vl_icms_cfop
      from nota_fiscal nf,
            nfregist_analit na,
            cfop c
     where na.notafiscal_id = nf.id
       and na.cfop_id       = c.id
       and nf.empresa_id    = gt_row_abertura_gia.empresa_id
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and c.cd in (1601, 1602, 1603, 1605, 2603, 1406, 1551, 1552, 1553, 1554, 1555, 1604, 2406,
                    2551, 2552, 2553, 2554, 2555, 3551, 3553, 3101, 3102, 3126, 3127, 3201, 3202,
                    3205, 3206, 3207, 3211, 3251, 3301, 3351, 3352, 3353, 3354, 3355, 3356, 3556,
                    3651, 3652, 3653, 3949, 1407, 1556, 1557, 2407, 2556, 2557);
  exception
    when others then
      vn_vl_icms_cfop := 0;
  end;
  --
  for rec in c_apur_icms loop
    exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
    --
    vn_fase := 14.1;
    --
    for rec_ajust in c_ajust_apuracao(rec.id) loop
      exit when c_ajust_apuracao%notfound or(c_ajust_apuracao%notfound) is null;
      --
      vn_fase := 16.1;
      --
      if rec_ajust.cod_aj_apur = 'SC000002' then
        --
        vn_tp30_020_vl_aj_apur := nvl(rec_ajust.vl_aj_apur, 0);
        --
      end if;
      --
      vn_fase := 16.2;
      --
      if rec_ajust.cod_aj_apur = 'SC020055' then
        --
        vn_tp30_060_vl_aj_apur := nvl(rec_ajust.vl_aj_apur, 0);
        --
      end if;
      --
      vn_fase := 16.3;
      --
      if rec_ajust.cod_aj_apur = 'SC020054' then
        --
        vn_tp30_130_vl_aj_apur := nvl(rec_ajust.vl_aj_apur, 0);
        --
      end if;
      --
      vn_fase := 16.4;
      --
      if rec_ajust.cod_aj_apur = 'SC000001' then
        --
        vn_tp30_150_vl_aj_apur := nvl(rec_ajust.vl_aj_apur, 0);
        --
      end if;
      --
      vn_fase := 16.5;
      --
    end loop; -- c_ajust_apuracao
    --
    k := 0;
    --
    if nvl(rec.vl_total_debito, 0) > 0 then
      --
      vn_fase := 14.2;
      --
      k := k + 1;
      --
      -- Registro 25 - Resumo da Apuração dos Débitos - Débito pelas saídas
      vt_tab_tp25(k).tp_reg := '25'; -- Tipo de registro
      vt_tab_tp25(k).quadro := '04'; -- Quadro
      vt_tab_tp25(k).item   := '010'; -- Item
      vt_tab_tp25(k).valor  := nvl(rec.vl_total_debito, 0) * 100; -- Débito pelas saídas
      --
      vn_qtde_tp25 := nvl(vn_qtde_tp25, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.3;
    --
    if nvl(vn_vl_dif_aliq20, 0) > 0 then
      --
      vn_fase := 14.4;
      --
      k := k + 1;
      --
      -- Registro 25 - Resumo da Apuração dos Débitos - Débito por diferencial de alíquota de ativo permanente
      vt_tab_tp25(k).tp_reg  := '25'; -- Tipo de registro
      vt_tab_tp25(k).quadro  := '04'; -- Quadro
      vt_tab_tp25(k).item    := '020'; -- Item
      vt_tab_tp25(k).valor   := nvl(vn_vl_dif_aliq20, 0) * 100; -- Débito por diferencial de alíquota de ativo permanente
      --
      vn_qtde_tp25 := nvl(vn_qtde_tp25, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.5;
    --
    if nvl(vn_vl_dif_aliq30, 0) > 0 then
      --
      vn_fase := 14.6;
      --
      k := k + 1;
      --
      -- Registro 25 - Resumo da Apuração dos Débitos - Débito por diferencial de alíquota da material de uso ou consumo
      vt_tab_tp25(k).tp_reg  := '25'; -- Tipo de registro
      vt_tab_tp25(k).quadro  := '04'; -- Quadro
      vt_tab_tp25(k).item    := '030'; -- Item
      vt_tab_tp25(k).valor   := nvl(vn_vl_dif_aliq30, 0) * 100; -- Débito por diferencial de alíquota da material de uso ou consumo
      --
      vn_qtde_tp25 := nvl(vn_qtde_tp25, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.7;
    --
    if nvl(vn_vl_dif_aliq40, 0) > 0 then
      --
      vn_fase := 14.8;
      --
      k := k + 1;
      --
      -- Registro 25 - Resumo da Apuração dos Débitos - Débito de máquinas / equipamentos importados para ativo permanente
      vt_tab_tp25(k).tp_reg  := '25'; -- Tipo de registro
      vt_tab_tp25(k).quadro  := '04'; -- Quadro
      vt_tab_tp25(k).item    := '040'; -- Item
      vt_tab_tp25(k).valor   := nvl(vn_vl_dif_aliq40, 0) * 100; -- Débito de máquinas / equipamentos importados para ativo permanente
      --
      vn_qtde_tp25 := nvl(vn_qtde_tp25, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.9;
    --
    if nvl(rec.vl_estorno_credito, 0) > 0 then
      --
      vn_fase := 14.10;
      --
      k := k + 1;
      --
      -- Registro 25 - Resumo da Apuração dos Débitos - Estorno de crédito
      vt_tab_tp25(k).tp_reg := '25'; -- Tipo de registro
      vt_tab_tp25(k).quadro := '04'; -- Quadro
      vt_tab_tp25(k).item   := '050'; -- Item
      vt_tab_tp25(k).valor  := nvl(rec.vl_estorno_credito, 0) * 100; -- Estorno de crédito
      --
      vn_qtde_tp25 := nvl(vn_qtde_tp25, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.11;
    /*
    --
    k := k + 1;
    --
    -- Registro 25 - Resumo da Apuração dos Débitos - Outros estornos de crédito
    vt_tab_tp25(k).tp_reg  := '25'; -- Tipo de registro
    vt_tab_tp25(k).quadro  := '04'; -- Quadro
    vt_tab_tp25(k).item    := '060'; -- Item
    vt_tab_tp25(k).valor   := 0;  -- Outros estornos de crédito
    */
    --
    vn_fase := 14.12;
    --
    if ((nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_ajust_debito, 0)) - (nvl(vn_vl_dif_aliq20, 0) + nvl(vn_vl_dif_aliq30, 0) + nvl(vn_vl_dif_aliq40, 0)) - nvl(vn_tp30_020_vl_aj_apur, 0)) > 0 then
      --
      vn_fase := 14.13;
      --
      k := k + 1;
      --
      -- Registro 25 - Resumo da Apuração dos Débitos - Outros débitos
      vt_tab_tp25(k).tp_reg := '25'; -- Tipo de registro
      vt_tab_tp25(k).quadro := '04'; -- Quadro
      vt_tab_tp25(k).item   := '070'; -- Item
      vt_tab_tp25(k).valor  := (((nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_ajust_debito, 0)) - (nvl(vn_vl_dif_aliq20, 0) + nvl(vn_vl_dif_aliq30, 0) + nvl(vn_vl_dif_aliq40, 0))) - nvl(vn_tp30_020_vl_aj_apur, 0)) * 100; -- Outros débitos
      --
      vn_qtde_tp25 := nvl(vn_qtde_tp25, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.14;
    --
    if (nvl(rec.vl_total_debito, 0) + nvl(vn_deb_dif_aliq_ap, 0) + nvl(vn_deb_equip_import_ap, 0) + nvl(rec.vl_estorno_credito, 0) +
       (nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_ajust_debito, 0))) > 0 then
      --
      vn_fase := 14.15;
      --
      k := k + 1;
      --
      -- Registro 25 - Resumo da Apuração dos Débitos - Subtotal de Débitos
      vt_tab_tp25(k).tp_reg := '25'; -- Tipo de registro
      vt_tab_tp25(k).quadro := '04'; -- Quadro
      vt_tab_tp25(k).item   := '990'; -- Item
      vt_tab_tp25(k).valor  := ((nvl(rec.vl_total_debito, 0) + nvl(vn_deb_dif_aliq_ap, 0) + nvl(vn_deb_equip_import_ap, 0) + nvl(rec.vl_estorno_credito, 0) +
                               (nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_ajust_debito, 0))) - vn_tp30_020_vl_aj_apur) * 100; -- Subtotal de Débitos
      --
      vn_qtde_tp25 := nvl(vn_qtde_tp25, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.16;
    --
    k := 0;
    --
    if nvl(rec.vl_saldo_credor_ant, 0) > 0 then
      --
      vn_fase := 14.17;
      --
      k := k + 1;
      --
      -- Registro 26 - Resumo da Apuração dos Créditos - Saldo credor do mês anterior
      vt_tab_tp26(k).tp_reg := '26'; -- Tipo de registro
      vt_tab_tp26(k).quadro := '05'; -- Quadro
      vt_tab_tp26(k).item   := '010'; -- Item
      vt_tab_tp26(k).valor  := nvl(rec.vl_saldo_credor_ant, 0) * 100; -- Saldo credor do mês anterior
      --
      vn_qtde_tp26 := nvl(vn_qtde_tp26, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.18;
    --
    if nvl(rec.vl_total_credito, 0) > 0 then
      --
      vn_fase := 14.19;
      --
      k := k + 1;
      --
      -- Registro 26 - Resumo da Apuração dos Créditos - Crédito pelas entradas
      vt_tab_tp26(k).tp_reg := '26'; -- Tipo de registro
      vt_tab_tp26(k).quadro := '05'; -- Quadro
      vt_tab_tp26(k).item   := '020'; -- Item
      vt_tab_tp26(k).valor  := (nvl(rec.vl_total_credito, 0) - nvl(vn_vl_icms_cfop, 0)) * 100; -- Crédito pelas entradas
      --
      vn_qtde_tp26 := nvl(vn_qtde_tp26, 0) + 1;
      --
    end if;
    --
    vn_fase := 14.20;
    --
    k := k + 1;
    --
    for rec_ajust in c_ajust_apuracao(rec.id) loop
      exit when c_ajust_apuracao%notfound or(c_ajust_apuracao%notfound) is null;
      --
      vn_fase := 14.21;
      --
      if rec_ajust.cod_aj_apur = 'SC020065' then
        --
        vn_fase := 14.22;
        --
        -- Registro 26 - Resumo da Apuração dos Créditos - Crédito de ativo permanente
        vt_tab_tp26(k).tp_reg := '26'; -- Tipo de registro
        vt_tab_tp26(k).quadro := '05'; -- Quadro
        vt_tab_tp26(k).item   := '030'; -- Item
        vt_tab_tp26(k).valor  := nvl(rec_ajust.vl_aj_apur, 0) * 100; -- Crédito de ativo permanente
        --
        vn_vl_aj_apur := nvl(vn_vl_aj_apur, 0) + nvl(rec_ajust.vl_aj_apur, 0);
        --
        vn_qtde_tp26 := nvl(vn_qtde_tp26, 0) + 1;
        --
      end if;
      --
    end loop;
    --
    vn_fase := 14.23;
    /*
    --
    k := k + 1;
    --
    -- Registro 26 - Resumo da Apuração dos Créditos - Crédito por diferencial de alíquota material de uso / consumo
    vt_tab_tp26(k).tp_reg  := '26'; -- Tipo de registro
    vt_tab_tp26(k).quadro  := '05'; -- Quadro
    vt_tab_tp26(k).item    := '040'; -- Item
    vt_tab_tp26(k).valor   := 0; -- Crédito por diferencial de alíquota material de uso / consumo
    */
    --
    vn_fase := 14.24;
    /*
    --
    k := k + 1;
    --
    -- Registro 26 - Resumo da Apuração dos Créditos - Crédito de ICMS retido por substituição tributária
    vt_tab_tp26(k).tp_reg  := '26'; -- Tipo de registro
    vt_tab_tp26(k).quadro  := '05'; -- Quadro
    vt_tab_tp26(k).item    := '050'; -- Item
    vt_tab_tp26(k).valor   := 0; -- Crédito de ICMS retido por substituição tributária
    */
    --
    vn_fase := 14.25;
    --
    if (nvl(rec.vl_saldo_credor_ant, 0) + nvl(rec.vl_total_credito, 0) + nvl(vn_vl_aj_apur, 0)) > 0 then
      --
      k := k + 1;
      --
      vn_fase := 14.26;
      --
      -- Registro 26 - Resumo da Apuração dos Créditos - Subtotal de créditos
      vt_tab_tp26(k).tp_reg := '26'; -- Tipo de registro
      vt_tab_tp26(k).quadro := '05'; -- Quadro
      vt_tab_tp26(k).item   := '990'; -- Item
      vt_tab_tp26(k).valor  := (nvl(rec.vl_saldo_credor_ant, 0) + nvl(rec.vl_total_credito, 0) + nvl(vn_vl_aj_apur, 0)) * 100; -- Subtotal de créditos
      --
      vn_qtde_tp26 := nvl(vn_qtde_tp26, 0) + 1;
      --
    end if;
    --
    i := 0;
    --
    for rec in c_det_dime loop
      exit when c_det_dime%notfound or(c_det_dime%notfound) is null;
      --
      vn_fase := 15.1;
      --
      if (rec.registro = 35 and rec.conteudo is not null) then
        --
        vn_fase := 15.2;
        --
        -- Verifica se o conteúdo informado, encontra-se com valor alfanumérico
        if fkg_verifica_conteudo(rec.conteudo) = 'N' then
          --
          i := i + 1;
          --
          vn_fase := 15.4;
          --
          if nvl(rec.conteudo, 0) > 0 then
           --
           -- Registro tipo 35 - Demonstrativo da Apuração do Imposto Devido pela Apropriação de Crédito Presumido em Substituição aos Créditos pelas Entradas (DAICP)
           vt_tab_tp35(i).tp_reg := '35'; -- Tipo de Registro
           vt_tab_tp35(i).quadro := '14'; -- Quadro
           vt_tab_tp35(i).item   := rec.item; -- Item
           vt_tab_tp35(i).valor  := (rec.conteudo * 100); -- Valor
           --
           vn_qtde_tp35 := nvl(vn_qtde_tp35, 0) + 1;
           --
          end if;
          --
          if rec.item = '020' then
            --
            vv_tp35_020_conteudo := (rec.conteudo * 100);
            --
          elsif rec.item = '030' then
            --
            vv_tp35_030_conteudo := (rec.conteudo * 100);
            --
          end if;
          --
          vn_fase := 15.5;
          --
        else
          --
          vn_fase := 15.6;
          --
          vn_erro_registro := vn_erro_registro + 1;
          --
          gv_mensagem := 'O item ' || rec.item || ' do registro 35, encontra-se com valor alfanumérico e número no campo conteúdo informado na aba "DAICP" na tela de Geração DIME, onde só é permitido informar valores númericos. Erro na pk_gera_arq_gia.pkb_gera_arq_gia_sc - fase (' || vn_fase || ')';
          gv_resumo   := 'O item ' || rec.item || ' do registro 35, encontra-se com valor alfanumérico e número no campo conteúdo informado na aba "DAICP" na tela de Geração DIME, onde só é permitido informar valores númericos.';
          --
          pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                           ev_mensagem       => gv_mensagem,
                                           ev_resumo         => gv_resumo,
                                           en_tipo_log       => erro_de_sistema,
                                           en_referencia_id  => gn_referencia_id,
                                           ev_obj_referencia => gv_obj_referencia,
                                           en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                           en_dm_impressa    => 1);

          --
        end if;
        --
      end if;
      --
      -- Verifica se foi apresentado algum erro
      if vn_erro_registro > 0 then
        --
        gn_dm_situacao := 4; -- Erro de Validação
        --
      else
        --
        gn_dm_situacao := 2; -- Validado
        --
      end if;
      --
      vn_fase := 15.9;
      --
    end loop; -- c_det_dime
    --
    for rec_dcip in c_apur_dcip loop
      exit when c_apur_dcip%notfound or(c_apur_dcip%notfound) is null;
       --
       k := k + 1;
       --
       -- Registro 46 - Créditos por Autorizações Especiais
       vt_tab_tp46(k).tp_reg := 46; -- Tipo de registro
       vt_tab_tp46(k).quadro := '46'; -- Quadro
       vt_tab_tp46(k).seq    := rec_dcip.sequencia; -- Seqüência
       vt_tab_tp46(k).ident  := rec_dcip.ident_regime; -- Identificação
       vt_tab_tp46(k).valor  := (rec_dcip.valor * 100); -- Valor
       vt_tab_tp46(k).orig   := rec_dcip.dm_orig; -- Origem
       --
       vn_fase := 14.66;
       --
       vn_qtde_tp46 := nvl(vn_qtde_tp46, 0) + 1;
       --
       if rec_dcip.dm_orig = 14 then
         --
         vn_tp30_075_valor := vn_tp30_075_valor + nvl(rec_dcip.valor, 0);
         --
       elsif rec_dcip.dm_orig = 16 then
         --
         vn_tp32_105_valor := vn_tp32_105_valor + nvl(rec_dcip.valor, 0);
         --
       elsif rec_dcip.sequencia = '990' then
         --
         vn_valor_apura_dcip := (vn_valor_apura_dcip + nvl(rec_dcip.valor, 0)) * 100;
         --
       end if;
       --
    end loop; -- c_apur_dcip
    --
    vn_fase := 16;
    --
    i := 0;
    --
    if (nvl(rec.vl_total_debito, 0) + nvl(vn_deb_dif_aliq_ap, 0) + nvl(vn_deb_equip_import_ap, 0) + nvl(rec.vl_estorno_credito, 0) + (nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_ajust_debito, 0)) - vn_tp30_020_vl_aj_apur) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Subtotal de débitos
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '010'; -- Item
      vt_tab_tp30(i).valor  := (nvl(rec.vl_total_debito, 0) + nvl(vn_deb_dif_aliq_ap, 0) + nvl(vn_deb_equip_import_ap, 0) + nvl(rec.vl_estorno_credito, 0) + (nvl(rec.vl_total_ajust_deb, 0) + nvl(rec.vl_ajust_debito, 0)) - vn_tp30_020_vl_aj_apur) * 100; -- Subtotal de débitos
      --
      vn_vl_09_010 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.6;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.7;
    --
    /*
     -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Complemento de débito por mudança de regime de apuração
     vt_tab_tp30(2).tp_reg  := '30'; -- Tipo de registro
     vt_tab_tp30(2).quadro  := '09'; -- Quadro
     vt_tab_tp30(2).item    := '011'; -- Item
     vt_tab_tp30(2).valor   := 0; -- Complemento de débito por mudança de regime de apuração
     vn_vl_09_011 := 0;
    */
    --
    vn_fase := 16.8;
    --
    if nvl(vn_tp30_020_vl_aj_apur, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldos devedores recebidos de estabelecimentos consolidados
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '020'; -- Item
      vt_tab_tp30(i).valor  := (vn_tp30_020_vl_aj_apur * 100); -- Valor
      --
      vn_vl_09_020 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.9;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.10;
    --
    /*
     -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Débito por reserva de crédito acumulado
     vt_tab_tp30(4).tp_reg  := '30'; -- Tipo de registro
     vt_tab_tp30(4).quadro  := '09'; -- Quadro
     vt_tab_tp30(4).item    := '030'; -- Item
     vt_tab_tp30(4).valor   := 0; -- Débito por reserva de crédito acumulado
     vn_vl_09_030 := 0;
    */
    --
    vn_fase := 16.11;
    --
    if (nvl(vv_tp35_030_conteudo, 0)) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Segregação do Crédito Presumido Utilizado em Substituição aos Créditos pelas Entradas
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '036'; -- Item
      vt_tab_tp30(i).valor  := (nvl(vv_tp35_030_conteudo, 0)); -- Segregação do Crédito Presumido Utilizado em Substituição aos Créditos pelas Entradas
      --
      vn_fase := 16.12;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.13;
    --
    if (nvl(vn_vl_09_010, 0) + nvl(vn_vl_09_011, 0) + nvl(vn_vl_09_020, 0) + nvl(vn_vl_09_030, 0) + nvl(vv_tp35_030_conteudo, 0)) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Total de débitos
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '040'; -- Item
      vt_tab_tp30(i).valor  := (nvl(vn_vl_09_010, 0) + nvl(vn_vl_09_011, 0) + nvl(vn_vl_09_020, 0) + nvl(vn_vl_09_030, 0) + nvl(vv_tp35_030_conteudo, 0)); -- Total de debitos
      --
      vn_vl_09_040 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.14;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.15;
    --
    if (nvl(rec.vl_saldo_credor_ant, 0) + nvl(rec.vl_total_credito, 0) + nvl(vn_vl_aj_apur, 0)) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Subtotal de créditos
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '050'; -- Item
      vt_tab_tp30(i).valor  := (nvl(rec.vl_saldo_credor_ant, 0) + nvl(rec.vl_total_credito, 0) + nvl(vn_vl_aj_apur, 0)) * 100; -- Subtotal de créditos
      --
      vn_vl_09_050 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.16;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.17;
    --
    if nvl(vn_tp30_060_vl_aj_apur, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldos credores recebidos de estabelecimentos consolidados
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '060'; -- Item
      vt_tab_tp30(i).valor  := (vn_tp30_060_vl_aj_apur * 100); -- Valor
      --
      vn_vl_09_060 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.18;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.19;
    --
    /*
    -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Créditos recebidos por transferência de outros contribuintes
    vt_tab_tp30(9).tp_reg  := '30'; -- Tipo de registro
    vt_tab_tp30(9).quadro  := '09'; -- Quadro
    vt_tab_tp30(9).item    := '070'; -- Item
    vt_tab_tp30(9).valor   := 0; -- Créditos recebidos por transferência de outros contribuintes
    vn_vl_09_070 := 0;
    */
    --
    vn_fase := 16.20;
    --
    vn_fase := 16.21;
    --
    if nvl(vn_tp30_075_valor, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Créditos declarados no DCIP
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '075'; -- Item
      vt_tab_tp30(i).valor  := (vn_tp30_075_valor * 100); -- Valor
      --
      vn_fase := 16.22;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.23;
    --
    if (nvl(vv_tp35_020_conteudo, 0)) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Segregação dos Débitos Relativos às Saídas com Crédito Presumido em Substituição aos Créditos pelas Entradas
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '076'; -- Item
      vt_tab_tp30(i).valor  := (nvl(vv_tp35_020_conteudo, 0)); -- Segregação dos Débitos Relativos às Saídas com Crédito Presumido em Substituição aos Créditos pelas Entradas
      --
      vn_fase := 16.24;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.25;
    --
    if (nvl(vn_vl_09_050, 0) + nvl(vn_vl_09_060, 0) + nvl(vn_vl_09_070, 0) + nvl(vv_tp35_020_conteudo, 0) + nvl(vn_tp30_075_valor, 0)) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Total de créditos
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '080'; -- Item
      vt_tab_tp30(i).valor  := ((nvl(vn_vl_09_050, 0) + nvl(vn_vl_09_060, 0) + nvl(vn_vl_09_070, 0)) + nvl(vn_tp30_075_valor, 0) * 100 + nvl(vv_tp35_020_conteudo, 0)); -- Valor
      --
      vn_vl_09_080 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.26;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.27;
    --
    /*
    -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Imposto do 1º decêndio
    vt_tab_tp30(10).tp_reg := '30'; -- Tipo de registro
    vt_tab_tp30(10).quadro := '09'; -- Quadro
    vt_tab_tp30(10).item   := '090'; -- Item
    vt_tab_tp30(10).valor  := 0; -- Valor
    --
    vn_vl_09_090 := 0;
    --
    */
    --
    vn_fase := 16.28;
    --
    /*
    -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Imposto do 2º decêndio
    vt_tab_tp30(11).tp_reg := '30'; -- Tipo de registro
    vt_tab_tp30(11).quadro := '09'; -- Quadro
    vt_tab_tp30(11).item   := '100'; -- Item
    vt_tab_tp30(11).valor  := 0; -- Valor
    --
    vn_vl_09_100 := 0;
    --
    */
    --
    vn_fase := 16.29;
    --
    /*
    -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Total de ajustes da apuração decendial e antecipações
    vt_tab_tp30(12).tp_reg := '30'; -- Tipo de registro
    vt_tab_tp30(12).quadro := '09'; -- Quadro
    vt_tab_tp30(12).item   := '110'; -- Item
    vt_tab_tp30(12).valor  := 0; -- Valor
    --
    vn_vl_09_110 := 0;
    --
    */
    --
    vn_fase := 16.30;
    --
    if ((nvl(vn_vl_09_040, 0) - (nvl(vn_vl_09_080, 0) + nvl(vn_vl_09_110, 0))) > 0 and nvl(rec.vl_icms_recolher, 0) > 0) then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo devedor
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '120'; -- Item 
      vt_tab_tp30(i).valor  := (nvl(vn_vl_09_040, 0) - (nvl(vn_vl_09_080, 0) + nvl(vn_vl_09_110, 0))); -- Valor
      --
      vn_vl_09_120 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.31;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.32;
    --
    if nvl(vn_tp30_130_vl_aj_apur, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo devedor transferido ao estabelecimento consolidador
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '130'; -- Item
      vt_tab_tp30(i).valor  := (vn_tp30_130_vl_aj_apur * 100); -- Valor
      --
      vn_vl_09_130 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.33;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.34;
    --
    if nvl(rec.vl_saldo_credor_transp, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo Credor
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '140'; -- Item
      vt_tab_tp30(i).valor  := nvl(rec.vl_saldo_credor_transp, 0) * 100; -- Valor
      --
      vn_vl_09_140 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.35;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.36;
    --
    if nvl(vn_tp30_150_vl_aj_apur, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo credor transferido ao estabelecimento consolidador
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '150'; -- Item
      vt_tab_tp30(i).valor  := (vn_tp30_150_vl_aj_apur * 100); -- Valor
      --
      vn_vl_09_150 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.37;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.38;
    --
    /*
     -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo credor transferível relativo à exportação
     vt_tab_tp30(19).tp_reg := '30'; -- Tipo de registro
     vt_tab_tp30(19).quadro := '09'; -- Quadro
     vt_tab_tp30(19).item   := '160'; -- Item
     vt_tab_tp30(19).valor  := 0; -- Valor
     --
     vn_vl_09_160 := 0;
    --
    */
    --
    vn_fase := 16.39;
    /*
     -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo credor transferível relativo a saídas isentas
     vt_tab_tp30(20).tp_reg := '30'; -- Tipo de registro
     vt_tab_tp30(20).quadro := '09'; -- Quadro
     vt_tab_tp30(20).item   := '170'; -- Item
     vt_tab_tp30(20).valor  := 0; --
     vn_vl_09_170 := 0;
    */
    --
    vn_fase := 16.40;
    --
    /*
     -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo credor transferível relativo a saídas diferidas
     vt_tab_tp30(21).tp_reg := '30'; -- Tipo de registro
     vt_tab_tp30(21).quadro := '09'; -- Quadro
     vt_tab_tp30(21).item   := '180'; -- Item
     vt_tab_tp30(21).valor  := 0; -- Valor
     --
     vn_vl_09_180 := 0;
    --
    */
    --
    vn_fase := 16.41;
    --
    if nvl(rec.vl_saldo_credor_transp, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo credor relativo a outros créditos
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '190'; -- Item
      vt_tab_tp30(i).valor  := nvl(rec.vl_saldo_credor_transp, 0) * 100; -- Valor
      --
      vn_vl_09_190 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.42;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.43;
    --
    if (nvl(vn_vl_09_140, 0) - nvl(vn_vl_09_150, 0)) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - Saldo Credor para o mês seguinte
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '998'; -- Item
      vt_tab_tp30(i).valor  := (nvl(vn_vl_09_140, 0) - nvl(vn_vl_09_150, 0)); -- Valor
      --
      vn_vl_09_998 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.44;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.45;
    --
    if nvl(rec.vl_icms_recolher, 0) > 0 then
      --
      i := i + 1;
      --
      -- Registro 30 - Cálculo do Imposto a Pagar ou Saldo Credor - TOTAL DE DEBITOS >(TOTAL DE CREDITOS + TOTAL DE AJUSTES DA APURACAO DECENDIAL)
      vt_tab_tp30(i).tp_reg := '30'; -- Tipo de registro
      vt_tab_tp30(i).quadro := '09'; -- Quadro
      vt_tab_tp30(i).item   := '999'; -- Item
      vt_tab_tp30(i).valor  := nvl(rec.vl_icms_recolher, 0) * 100; -- Imposto a recolher
      --
      vn_vl_09_999 := vt_tab_tp30(i).valor;
      --
      vn_fase := 16.46;
      --
      vn_qtde_tp30 := nvl(vn_qtde_tp30, 0) + 1;
      --
    end if;
    --
    vn_fase := 16.47;
    --
    k := 0;
    --
    vn_fase := 14.67;
    --
    i := 0;
    --
    for rec_obrig_icms in c_obrig_rec_apur_icms loop
      exit when c_obrig_rec_apur_icms%notfound or(c_obrig_rec_apur_icms%notfound) is null;
      --
      i := i + 1;
      --
      vn_fase := 14.68;
      --
      if (rec_obrig_icms.origem_rec in ('0', '1', '2') and fkg_verifica_conteudo(rec_obrig_icms.cod_receita) = 'N')then
        --
        -- Registro tipo 33 - Discriminação dos Pagamentos do Imposto e dos Débitos Específicos
        vt_tab_tp33(i).tp_reg        := '33'; -- Tipo de registro
        vt_tab_tp33(i).quadro        := '12'; -- Quadro
        vt_tab_tp33(i).orig_recol    := rec_obrig_icms.origem_rec; -- Origem da Recolhimento
        vt_tab_tp33(i).cod_rec       := rec_obrig_icms.cod_receita; -- Código de Receita
        vt_tab_tp33(i).dt_vencto     := rec_obrig_icms.data_venc; -- Data do Vencimento do Recolhimento
        vt_tab_tp33(i).valor         := (nvl(rec_obrig_icms.vlr, 0) * 100); -- Valor do Recolhimento
        vt_tab_tp33(i).classe_vencto := fkg_ret_classe_vencto_dime(rec_obrig_icms.empresa_id,
                                                                   rec_obrig_icms.cod_receita,
                                                                   rec_obrig_icms.dia_venc,
                                                                   rec_obrig_icms.origem_rec); -- Classe do Vencimento
        vt_tab_tp33(i).nro_acord     := rec_obrig_icms.descr_proc; -- Número do Acordo
        --
        vn_fase := 14.69;
        --
        vn_qtde_tp33 := nvl(vn_qtde_tp33, 0) + 1;
        --
      elsif (rec_obrig_icms.origem_rec = '3')then
        --
        -- Registro tipo 33 - Discriminação dos Pagamentos do Imposto e dos Débitos Específicos
        begin
          select '33',
                 '12',
                 p.dm_orig_cred,
                 p.cod_receita,
                 p.dia_vencto || '/' ||to_char(ADD_MONTHS(gt_row_abertura_gia.dt_ini, 1), 'MM') || '/' || to_char(ADD_MONTHS(gt_row_abertura_gia.dt_ini, 1), 'RRRR'),
                 (nvl(rec_obrig_icms.vlr, 0) * 100),
                 p.classe_vencto,
                 rec_obrig_icms.descr_proc
            into vt_tab_tp33(i).tp_reg,
                 vt_tab_tp33(i).quadro,
                 vt_tab_tp33(i).orig_recol,
                 vt_tab_tp33(i).cod_rec,
                 vt_tab_tp33(i).dt_vencto,
                 vt_tab_tp33(i).valor,
                 vt_tab_tp33(i).classe_vencto,
                 vt_tab_tp33(i).nro_acord
            from param_classe_vencto_dime p
           where p.empresa_id   = rec_obrig_icms.empresa_id
             and p.dm_orig_cred = 3
             and rownum         = 1
           order by p.id desc;
        exception
          when others then
            vn_erro_registro := vn_erro_registro + 1;
        end;
        --
        vn_fase := 14.69;
        --
        vn_qtde_tp33 := nvl(vn_qtde_tp33, 0) + 1;
        --
      else
        --
        -- Verifica se foi informado algum valor alfanumérico no código receita - ICMS
        if vv_cod_receita = 'A' and rec_obrig_icms.tb_row = 1 then
          --
          vn_erro_registro := vn_erro_registro + 1;
          --
          vn_fase := 14.72;
          --
          gv_mensagem := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS, encontra-se com valor alfanumérico, onde só é permitido informar valores númericos. Erro na pk_gera_arq_gia.pkb_gera_arq_gia_sc - fase (' || vn_fase || ')';
          gv_resumo   := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS, encontra-se com valor alfanumérico, onde só é permitido informar valores númericos.';
          --
          --
        -- Verifica se foi informado algum valor alfanumérico no código receita - ICMS - ST
        elsif vv_cod_receita = 'A' and rec_obrig_icms.tb_row = 2 then
          --
          vn_erro_registro := vn_erro_registro + 1;
          --
          vn_fase := 14.73;
          --
          gv_mensagem := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS-ST, encontra-se com valor alfanumérico, onde só é permitido informar valores númericos. Erro na pk_gera_arq_gia.pkb_gera_arq_gia_sc - fase (' || vn_fase || ')';
          gv_resumo   := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS-ST, encontra-se com valor alfanumérico, onde só é permitido informar valores númericos.';
          --
        -- Verifica o tamanho código receita - ICMS
        elsif fkg_verifica_tamanho(rec_obrig_icms.cod_receita) > 4 and rec_obrig_icms.tb_row = 1 then
          --
          vn_erro_registro := vn_erro_registro + 1;
          --
          vn_fase := 14.74;
          --
          gv_mensagem := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS, com valor maior que o permitido (4 dígitos). Erro na pk_gera_arq_gia.pkb_gera_arq_gia_sc - fase (' || vn_fase || ')';
          gv_resumo   := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS, com valor maior que o permitido (4 dígitos).';
          --
          --
        -- Verifica o tamanho código receita - ICMS - ST
        elsif fkg_verifica_tamanho(rec_obrig_icms.cod_receita) > 4 and rec_obrig_icms.tb_row = 2 then
          --
          vn_erro_registro := vn_erro_registro + 1;
          --
          vn_fase := 14.75;
          --
          gv_mensagem := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS-ST, com valor maior que o permitido (4 dígitos). Erro na pk_gera_arq_gia.pkb_gera_arq_gia_sc - fase (' || vn_fase || ')';
          gv_resumo   := 'Código Receita informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS-ST, com valor maior que o permitido (4 dígitos).';
          --
          --
        -- ICMS
        elsif not rec_obrig_icms.origem_rec in ('0', '1') and rec_obrig_icms.tb_row = 1 then
          --
          vn_erro_registro := vn_erro_registro + 1;
          --
          vn_fase := 14.76;
          --
          gv_mensagem := 'Código do ajuste da obrigação a recolher informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS, encontra-se diferente do que é permitido (''000'', ''001'') para o Registro 33 - Apuração de ICMS.';
          gv_resumo   := 'Código do ajuste da obrigação a recolher informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS, encontra-se diferente do que é permitido (''000'', ''001'') para o Registro 33 - Apuração de ICMS. Erro na pk_gera_arq_gia.pkb_gera_arq_gia_sc - fase (' || vn_fase || ')';
          --
          --
        -- ICMS-ST
        elsif not rec_obrig_icms.origem_rec in ('2') and rec_obrig_icms.tb_row = 2 then
          --
          vn_erro_registro := vn_erro_registro + 1;
          --
          vn_fase := 14.77;
          --
          gv_mensagem := 'Código do ajuste da obrigação a recolher informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS-ST, encontra-se diferente do que é permitido (''002'') para o Registro 33 - Apuração de ICMS.';
          gv_resumo   := 'Código do ajuste da obrigação a recolher informado na aba "Obrigações do ICMS a recolher" na tela de Apuração de ICMS-ST, encontra-se diferente do que é permitido (''002'') para o Registro 33 - Apuração de ICMS. Erro na pk_gera_arq_gia.pkb_gera_arq_gia_sc - fase (' || vn_fase || ')';
          --
        end if;
        --
        pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                         ev_mensagem       => gv_mensagem,
                                         ev_resumo         => gv_resumo,
                                         en_tipo_log       => erro_de_sistema,
                                         en_referencia_id  => gn_referencia_id,
                                         ev_obj_referencia => gv_obj_referencia,
                                         en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                         en_dm_impressa    => 1);
        --
      end if;
      --
      -- Verifica se foi apresentado erro em meio
      -- ao processo do registro 33
      if vn_erro_registro > 0 then
        --
        vn_fase := 14.78;
        --
        gn_dm_situacao := 4; -- Erro de Validação
        --
      else
        --
        vn_fase := 14.79;
        --
        gn_dm_situacao := 2; -- Validado
        --
      end if;
      --
    end loop; -- c_obrig_rec_apur_icms
  --
  end loop; -- c_apur_icms
  --
  vn_fase := 15;
  --
  i := 0;
  --
  vn_fase := 16;
  --
  begin
    select sum(r.vl_operacao) vl_operacao,
           sum(r.vl_ipi) vl_ipi,
           sum(r.vl_bc_icms) vl_bc_icms,
           sum(r.vl_icms) vl_icms
      into vn_vl_operacao,
           vn_vl_ipi,
           vn_vl_bc_icms,
           vn_vl_icms
      from nota_fiscal     nf,
           sit_docto       sd,
           mod_fiscal      mf,
           pessoa          p,
           cidade          cid,
           nfregist_analit r,
           cfop            c
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_ind_emit     = 0 -- Somente emissão própria
       and nf.dm_arm_nfe_terc = 0 -- Não é nota de armazenamento fiscal
       and nf.dm_st_proc      = 4
       and ((nf.dm_ind_oper   = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin and trunc(nf.dt_emiss) < '01/08/2013') or
           (nf.dm_ind_oper    = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin and trunc(nf.dt_emiss) < '01/08/2013') or
           (nf.dm_ind_oper    = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) < '01/08/2013'))
       and sd.id              = nf.sitdocto_id
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65', '06', '29', '28', '21', '22')
       and p.id               = nf.pessoa_id
       and cid.id             = p.cidade_id
       and r.notafiscal_id    = nf.id
       and nvl(r.vl_icms_st, 0) > 0
       and c.id               = r.cfop_id
       and substr(c.cd, 1, 1) in ('5', '6');
  exception
    when others then
      vn_vl_operacao := 0;
      vn_vl_ipi      := 0;
      vn_vl_bc_icms  := 0;
      vn_vl_icms     := 0;
  end;
  --
  vn_fase := 17;
  --
  begin
    select sum(r.vl_bc_icms_st) vl_bc_icms_st,
           sum(r.vl_icms_st) vl_icms_st
      into vn_vl_bc_icms_st,
           vn_vl_icms_st
      from nota_fiscal     nf,
           sit_docto       sd,
           mod_fiscal      mf,
           pessoa          p,
           cidade          cid,
           nfregist_analit r,
           cfop            c
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_ind_emit     = 0 -- Somente emissão própria
       and nf.dm_arm_nfe_terc = 0 -- Não é nota de armazenamento fiscal
       and nf.dm_st_proc      = 4
       and ((nf.dm_ind_oper   = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) or
           (nf.dm_ind_oper    = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) or
           (nf.dm_ind_oper    = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and sd.id              = nf.sitdocto_id
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65', '06', '29', '28', '21', '22')
       and p.id               = nf.pessoa_id
       and cid.id             = p.cidade_id
       and r.notafiscal_id    = nf.id
       and nvl(r.vl_icms_st, 0) > 0
       and c.id               = r.cfop_id
       and substr(c.cd, 1, 1) in ('5');
  exception
    when others then
      vn_vl_bc_icms_st := 0;
      vn_vl_icms_st    := 0;
  end;
  --
  vn_fase := 18;
  --
  k := 0;
  --
  /*
  if nvl(vn_vl_operacao, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.1;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Valor dos produtos (não preencher a partir do período de referência agosto de 2013)
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '010'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_operacao, 0) * 100; -- Valor
    --
  end if;*/
  --
  /*
  --
  vn_fase := 18.2;
  --
  if nvl(vn_vl_ipi, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.3;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Valor do IPI (não preencher a partir do período de referência agosto de 2013)
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '020'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_ipi, 0) * 100; -- Valor
    --
  end if;*/
  --
  /*
  --
  k := k + 1;
  --
  vn_fase := 18.4;
  --
  -- Registro 32 - Informações sobre Substituição Tributária - Despesas acessórias (não preencher a partir do período de referência agosto de 2013)
  vt_tab_tp32(k).tp_reg  := '32'; -- Tipo de registro
  vt_tab_tp32(k).quadro  := '11'; -- Quadro
  vt_tab_tp32(k).item    := '030'; -- Item
  vt_tab_tp32(k).valor   := 0; -- Valor
  */
  --
  /*
  --
  vn_fase := 18.5;
  --
  if nvl(vn_vl_bc_icms, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.6;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Base de cálculo do ICMS próprio (não preencher a partir do período de referência agosto de 2013)
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '040'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_bc_icms, 0) * 100; -- Valor
    --
  end if;*/
  --
  /*
  --
  vn_fase := 18.7;
  --
  if nvl(vn_vl_icms, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.8;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - ICMS próprio (não preencher a partir do período de referência agosto de 2013)
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '050'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_icms, 0) * 100; -- ICMS próprio
    --
  end if;*/
  --
  vn_fase := 18.9;
  --
  if nvl(vn_vl_bc_icms_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.10;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Base cálculo ICMS substituição tributária
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '060'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_bc_icms_st, 0) * 100;  -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.11;
  --
  if nvl(vn_vl_icms_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.12;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Imposto retido com apuração mensal
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '070'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_icms_st, 0) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.13;
  --
  if nvl(vn_vl_icms_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.14;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Total de débitos
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '080'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_icms_st, 0) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.15;
  --
  -- Soma dos dados de apuração de ICMS-ST
  begin
    select sum(ai.vl_devol_st),
           sum(ai.vl_ressarc_st)
      into vn_vl_devol_st,
           vn_vl_ressarc_st
      from per_apur_icms_st p,
           apuracao_icms_st ai
     where p.empresa_id        = gt_row_abertura_gia.empresa_id
       and p.dm_tipo           = 0 -- Real
       and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
       and ai.perapuricmsst_id = p.id
       -- and trunc(p.dt_fim)     < '01/08/2013'
       and ai.dm_situacao      = 3; -- Processada
  exception
    when others then
      vn_vl_devol_st   := 0;
      vn_vl_ressarc_st := 0;
  end;
  --
  vn_fase := 18.16;
  --
  -- Recupera os valores do registro 32
  begin
    select sum(ai.vl_saldo_cred_ant_st),
           sum(nvl(ai.vl_outro_cred_st, 0) + nvl(ai.vl_aj_credito_st, 0)),
           sum(ai.vl_icms_recol_st),
           sum(ai.vl_saldo_cred_st_transp)
      into vn_vl_saldo_cred_ant_st,
           vn_vl_outro_cred,
           vn_vl_icms_recol_st,
           vn_vl_saldo_cred_st_transp
      from per_apur_icms_st p,
           apuracao_icms_st ai,
           estado e
     where p.empresa_id        = gt_row_abertura_gia.empresa_id
       and p.dm_tipo           = 0 -- Real
       and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
       and ai.perapuricmsst_id = p.id
       and ai.dm_situacao      = 3 -- Processada
       and e.id                = ai.estado_id
       and e.sigla_estado      = 'SC'; -- Somente Santa Catarina
  exception
    when others then
      vn_vl_saldo_cred_ant_st    := 0;
      vn_vl_outro_cred           := 0;
      vn_vl_icms_recol_st        := 0;
      vn_vl_saldo_cred_st_transp := 0;
  end;
  --
  vn_fase := 18.17;
  --
  if nvl(vn_vl_saldo_cred_ant_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.18;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Saldo credor do período anterior sobre a substituição tributária
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '090'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_saldo_cred_ant_st, 0) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.19;
  --
  if nvl(vn_tp32_105_valor, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.20;
    --
    -- Registro tipo 32 - Informações sobre Substituição Tributária - Créditos declarados no DCIP
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '105'; -- Item
    vt_tab_tp32(k).valor  := (vn_tp32_105_valor * 100); -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  /*
  if nvl(vn_vl_devol_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.20;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Devolução de mercadorias e desfazimento de venda (não preencher a partir do período de referência agosto de 2013)
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '100'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_devol_st, 0) * 100; -- Valor
    --
  end if;*/
  --
  vn_fase := 18.21;
  --
  /*
  if nvl(vn_vl_ressarc_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.19;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Ressarcimento de ICMS substituição tributária (não preencher a partir do período de referência agosto de 2013)
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '110'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_ressarc_st, 0) * 100; -- Valor
    --
  end if;*/
  --
  vn_fase := 18.20;
  --
  if nvl(vn_icms_sub_tri, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.21;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Ressarcimento do ICMS substituição tributária acobertado por NF-e
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '115'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_icms_sub_tri, 0) * 100;
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.22;
  --
  /*
  if nvl(vn_vl_outro_cred, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.23;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Outros créditos (não preencher a partir do período de referência agosto de 2013)
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '120'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_outro_cred, 0) * 100; -- Valor
    --
  end if;*/
  --
  vn_fase := 18.24;
  --
  if (nvl(vn_vl_saldo_cred_ant_st, 0) + nvl(vn_icms_sub_tri, 0) + nvl(vn_tp32_105_valor,0)) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.25;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Total de créditos
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '130'; -- Item
    vt_tab_tp32(k).valor  := (nvl(vn_vl_saldo_cred_ant_st, 0) + nvl(vn_icms_sub_tri, 0) + nvl(vn_tp32_105_valor,0)) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.26;
  --
  /*
  --
  k := k + 1;
  --
  vn_fase := 18.27;
  --
  -- Registro 32 - Informações sobre Substituição Tributária - Total de ajustes das Antecipações Combustíveis
  vt_tab_tp32(k).tp_reg  := '32'; -- Tipo de registro
  vt_tab_tp32(k).quadro  := '11'; -- Quadro
  vt_tab_tp32(k).item    := '160'; -- Item
  vt_tab_tp32(k).valor   := 0; -- Valor
  */
  --
  if nvl(vn_vl_icms_recol_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.28;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Saldo devedor
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '170'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_icms_recol_st, 0) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.29;
  --
  if nvl(vn_vl_saldo_cred_ant_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.30;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Saldo Credor
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '190'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_saldo_cred_ant_st, 0) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.31;
  --
  if nvl(vn_vl_icms_recol_st, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.32;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Imposto a recolher sobre a substituição tributária
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '999'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_icms_recol_st, 0) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 18.33;
  --
  if nvl(vn_vl_saldo_cred_st_transp, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 18.34;
    --
    -- Registro 32 - Informações sobre Substituição Tributária - Saldo Credor para o mês seguinte
    vt_tab_tp32(k).tp_reg := '32'; -- Tipo de registro
    vt_tab_tp32(k).quadro := '11'; -- Quadro
    vt_tab_tp32(k).item   := '998'; -- Item
    vt_tab_tp32(k).valor  := nvl(vn_vl_saldo_cred_st_transp, 0) * 100; -- Valor
    --
    vn_qtde_tp32 := nvl(vn_qtde_tp32, 0) + 1;
    --
  end if;
  --
  vn_fase := 19;
  --
  -- Recupera os valores de entradas e saídas a partir de cada CFOP
  for rec in c_det_cfop_es loop
    exit when c_det_cfop_es%notfound or(c_det_cfop_es%notfound) is null;
    --
    vn_fase := 19.1;
    --
    if substr(rec.cd, 1, 1) in ('1', '2', '3') then
      --
      vn_fase := 19.2;
      --
      vl_bc_icms_st_ent := vl_bc_icms_st_ent + nvl(rec.vl_bc_icms_st, 0);
      vl_icms_st_ent    := vl_icms_st_ent + nvl(rec.vl_icms_st, 0);
      --
    elsif substr(rec.cd, 1, 1) in ('5') then
      --
      vn_fase := 19.3;
      --
      vl_bc_icms_st_sai := vl_bc_icms_st_sai + nvl(rec.vl_bc_icms_st, 0);
      vl_icms_st_sai    := vl_icms_st_sai + nvl(rec.vl_icms_st, 0);
      --
    end if;
    --
  end loop; -- c_det_cfop_es
  --
  k := 0;
  --
  vn_fase := 20;
  --
  if nvl(vn_tot_vl_contabil_ent, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.1;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Valor contábil (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '010'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_contabil_ent, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.2;
  --
  if nvl(vn_tot_vl_base_calc_icms_ent, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.3;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Base de cálculo (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '020'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_base_calc_icms_ent, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.4;
  --
  if nvl(vn_tot_vl_imp_trib_icms_ent, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.5;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Imposto creditado (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '030'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_imp_trib_icms_ent, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.6;
  --
  if nvl(vn_tot_vl_bc_isenta_icms_ent, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.7;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Operações isentas ou não tributadas (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '040'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_bc_isenta_icms_ent, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.8;
  --
  if nvl(vn_tot_vl_bc_outra_icms_ent, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.9;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Outras operações sem crédito de imposto (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '050'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_bc_outra_icms_ent, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.10;
  --
  if nvl(vl_bc_icms_st_ent, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.11;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Base de Cálculo Imposto Retido (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '053'; -- Item
    vt_tab_tp24(k).valor  := nvl(vl_bc_icms_st_ent, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.12;
  --
  if nvl(vl_icms_st_ent, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.13;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Imposto Retido (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '054'; -- Item
    vt_tab_tp24(k).valor  := nvl(vl_icms_st_ent, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.14;
  --
  if (nvl(vn_vl_dif_aliq20, 0) + nvl(vn_vl_dif_aliq30, 0) + nvl(vn_vl_dif_aliq40, 0)) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.15;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Imposto Diferencial Alíquota (Entradas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '057'; -- Item
    vt_tab_tp24(k).valor  := (nvl(vn_vl_dif_aliq20, 0) + nvl(vn_vl_dif_aliq30, 0) + nvl(vn_vl_dif_aliq40, 0)) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.16;
  --
  if nvl(vn_tot_vl_contabil_sai, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.17;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Valor Contábil (Saídas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '060'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_contabil_sai, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.18;
  --
  if nvl(vn_tot_vl_base_calc_icms_sai, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.19;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Base de Cálculo (Saídas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '070'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_base_calc_icms_sai, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.20;
  --
  if nvl(vn_tot_vl_imp_trib_icms_sai, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.21;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Imposto debitado (Saídas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '080'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_imp_trib_icms_sai, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.22;
  --
  if nvl(vn_tot_vl_bc_isenta_icms_sai, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.23;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Operações isentas ou não tributadas (Saídas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '090'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_bc_isenta_icms_sai, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.24;
  --
  if nvl(vn_tot_vl_bc_outra_icms_sai, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.25;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Outras operações sem débito de imposto (Saídas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '100'; -- Item
    vt_tab_tp24(k).valor  := nvl(vn_tot_vl_bc_outra_icms_sai, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.26;
  --
  if nvl(vl_bc_icms_st_sai, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.27;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Base de Cálculo Imposto Retido
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '103'; -- Item
    vt_tab_tp24(k).valor  := nvl(vl_bc_icms_st_sai, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 20.28;
  --
  if nvl(vl_icms_st_sai, 0) > 0 then
    --
    k := k + 1;
    --
    vn_fase := 20.29;
    --
    -- Registro tipo 24 - Resumo dos Valores Fiscais - Imposto Retido (Saídas)
    vt_tab_tp24(k).tp_reg := '24'; -- Tipo de registro
    vt_tab_tp24(k).quadro := '03'; -- Quadro
    vt_tab_tp24(k).item   := '104'; -- Item
    vt_tab_tp24(k).valor  := nvl(vl_icms_st_sai, 0) * 100; -- Valor
    --
    vn_qtde_tp24 := nvl(vn_qtde_tp24, 0) + 1;
    --
  end if;
  --
  vn_fase := 21;
  --
  i := 0;
  --
  for rec_inf_comp_dime in c_inf_comp_dime loop
    exit when c_inf_comp_dime%notfound or(c_inf_comp_dime%notfound) is null;
    --
    vn_fase := 21.1;
    --
    i := i + 1;
    --
    if rec_inf_comp_dime.cod_quadro = '80' then
      --
      vn_fase := 21.2;
      --
      -- Registro 80 - Resumo do Livro Registro de Inventário e Receita Bruta
      vt_tab_tp80(i).tp_reg := '80'; -- Tipo de registro
      vt_tab_tp80(i).quadro := '80'; -- Quadro
      vt_tab_tp80(i).item   := rec_inf_comp_dime.cod_item; -- Item
      vt_tab_tp80(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
      --
      vn_qtde_tp80 := nvl(vn_qtde_tp80, 0) + 1;
      --
    elsif rec_inf_comp_dime.cod_quadro = '81' then
      --
      vn_fase := 21.3;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 then
        --
        vn_fase := 21.4;
        --
        -- Registro 81 - Ativo
        vt_tab_tp81(i).tp_reg := '81'; -- Tipo de registro
        vt_tab_tp81(i).quadro := '81'; -- Quadro
        vt_tab_tp81(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp81(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp81 := nvl(vn_qtde_tp81, 0) + 1;
        --
      end if;
      --
    elsif rec_inf_comp_dime.cod_quadro = '82' then
      --
      vn_fase := 21.5;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 then
        --
        vn_fase := 21.6;
        --
        -- Registro 82 - Passivo
        vt_tab_tp82(i).tp_reg := '82'; -- Tipo de registro
        vt_tab_tp82(i).quadro := '82'; -- Quadro
        vt_tab_tp82(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp82(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp82 := nvl(vn_qtde_tp82, 0) + 1;
        --
      end if;
      --
    elsif rec_inf_comp_dime.cod_quadro = '83' then
      --
      vn_fase := 21.7;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 and rec_inf_comp_dime.cod_item not in (398, 399) then
        --
        vn_fase := 21.8;
        --
        -- Registro 83 - Demonstração de Resultados
        vt_tab_tp83(i).tp_reg := '83'; -- Tipo de registro
        vt_tab_tp83(i).quadro := '83'; -- Quadro
        vt_tab_tp83(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp83(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp83 := nvl(vn_qtde_tp83, 0) + 1;
        --
      elsif rec_inf_comp_dime.cod_item in (398, 399) then
        --
        vn_fase := 21.17;
        --
        if (rec_inf_comp_dime.cod_item  = 398 and abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 and vn_reg_neg_pos = 0) then
        --
         vt_tab_tp83(i).tp_reg := '83'; -- Tipo de registro
         vt_tab_tp83(i).quadro := '83'; -- Quadro
         vt_tab_tp83(i).item   := rec_inf_comp_dime.cod_item; -- Item
         vt_tab_tp83(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
         --
         vn_reg_neg_pos := 1;
         --
         vn_qtde_tp83 := nvl(vn_qtde_tp83, 0) + 1;
        --
        elsif (rec_inf_comp_dime.cod_item  = 399 and abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 and vn_reg_neg_pos = 0) then
        --
        vt_tab_tp83(i).tp_reg  := '83'; -- Tipo de registro
         vt_tab_tp83(i).quadro := '83'; -- Quadro
         vt_tab_tp83(i).item   := rec_inf_comp_dime.cod_item; -- Item
         vt_tab_tp83(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
         --
         vn_reg_neg_pos := 1;
         --
         vn_qtde_tp83 := nvl(vn_qtde_tp83, 0) + 1;
        --
        elsif (rec_inf_comp_dime.cod_item  = 398 and abs(nvl(rec_inf_comp_dime.vl, 0)) = 0 and vn_reg_neg_pos = 0) then
        --
        vt_tab_tp83(i).tp_reg  := '83'; -- Tipo de registro
         vt_tab_tp83(i).quadro := '83'; -- Quadro
         vt_tab_tp83(i).item   := '399'; -- Item
         vt_tab_tp83(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
         --
         vn_reg_neg_pos := 1;
         --
         vn_qtde_tp83 := nvl(vn_qtde_tp83, 0) + 1;
        --
        end if;
        --
      end if;
      --
    elsif rec_inf_comp_dime.cod_quadro = '84' then
      --
      vn_fase := 21.9;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 or rec_inf_comp_dime.cod_item in (498, 499) then
        --
        vn_fase := 21.10;
        --
        -- Registro 84 - Detalhamento das Despesas
        vt_tab_tp84(i).tp_reg := '84'; -- Tipo de registro
        vt_tab_tp84(i).quadro := '84'; -- Quadro
        vt_tab_tp84(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp84(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp84 := nvl(vn_qtde_tp84, 0) + 1;
        --
      end if;
      --
    elsif rec_inf_comp_dime.cod_quadro = '90' then
      --
      vn_fase := 21.11;
      --
      -- Registro 90 - Resumo do Livro Registro de Inventário e Receita Bruta (Encerramento de Atividades)
      vt_tab_tp90(i).tp_reg := '90'; -- Tipo de registro
      vt_tab_tp90(i).quadro := '90'; -- Quadro
      vt_tab_tp90(i).item   := rec_inf_comp_dime.cod_item; -- Item
      vt_tab_tp90(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
      --
      vn_qtde_tp90 := nvl(vn_qtde_tp90, 0) + 1;
      --
    elsif rec_inf_comp_dime.cod_quadro = '91' then
      --
      vn_fase := 21.12;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 then
        --
        vn_fase := 21.13;
        --
        -- Registro 91 - Ativo (Encerramento de Atividades)
        vt_tab_tp91(i).tp_reg := '91'; -- Tipo de registro
        vt_tab_tp91(i).quadro := '91'; -- Quadro
        vt_tab_tp91(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp91(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp91 := nvl(vn_qtde_tp91, 0) + 1;
        --
      end if;
      --
    elsif rec_inf_comp_dime.cod_quadro = '92' then
      --
      vn_fase := 21.14;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 then
        --
        vn_fase := 21.15;
        --
        -- Registro 92 - Passivo (Encerramento de Atividades)
        vt_tab_tp92(i).tp_reg := '92'; -- Tipo de registro
        vt_tab_tp92(i).quadro := '92'; -- Quadro
        vt_tab_tp92(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp92(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp92 := nvl(vn_qtde_tp92, 0) + 1;
        --
      end if;
      --
    elsif rec_inf_comp_dime.cod_quadro = '93' then
      --
      vn_fase := 21.16;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 or rec_inf_comp_dime.cod_item in (398, 399) then
        --
        vn_fase := 21.17;
        --
        -- Registro 93 - Demonstração de Resultados (Encerramento de Atividades)
        vt_tab_tp93(i).tp_reg := '93'; -- Tipo de registro
        vt_tab_tp93(i).quadro := '93'; -- Quadro
        vt_tab_tp93(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp93(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp93 := nvl(vn_qtde_tp93, 0) + 1;
        --
      elsif rec_inf_comp_dime.cod_item in (398, 399) then
        --
        vn_fase := 21.17;
        --
        if (rec_inf_comp_dime.cod_item  = 398 and abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 and vn_reg_neg_pos = 0) then
        --
         vt_tab_tp93(i).tp_reg := '93'; -- Tipo de registro
         vt_tab_tp93(i).quadro := '93'; -- Quadro
         vt_tab_tp93(i).item   := rec_inf_comp_dime.cod_item; -- Item
         vt_tab_tp93(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
         --
         vn_reg_neg_pos := 1;
         --
         vn_qtde_tp93 := nvl(vn_qtde_tp93, 0) + 1;
        --
        elsif (rec_inf_comp_dime.cod_item  = 399 and abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 and vn_reg_neg_pos = 0) then
        --
         vt_tab_tp93(i).tp_reg := '93'; -- Tipo de registro
         vt_tab_tp93(i).quadro := '93'; -- Quadro
         vt_tab_tp93(i).item   := rec_inf_comp_dime.cod_item; -- Item
         vt_tab_tp93(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
         --
         vn_reg_neg_pos := 1;
         --
         vn_qtde_tp93 := nvl(vn_qtde_tp93, 0) + 1;
        --
        elsif (rec_inf_comp_dime.cod_item  = 398 and abs(nvl(rec_inf_comp_dime.vl, 0)) = 0 and vn_reg_neg_pos = 0) then
        --
         vt_tab_tp93(i).tp_reg := '93'; -- Tipo de registro
         vt_tab_tp93(i).quadro := '93'; -- Quadro
         vt_tab_tp93(i).item   := '399'; -- Item
         vt_tab_tp93(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
         --
         vn_reg_neg_pos := 1;
         --
         vn_qtde_tp93 := nvl(vn_qtde_tp93, 0) + 1;
        --
        end if;
        --
      end if;
      --
    elsif rec_inf_comp_dime.cod_quadro = '94' then
      --
      vn_fase := 21.18;
      --
      if abs(nvl(rec_inf_comp_dime.vl, 0)) > 0 or rec_inf_comp_dime.cod_item in (498, 499) then
        --
        vn_fase := 21.19;
        --
        -- Registro 94 - Detalhamento das Despesas (Encerramento de Atividades)
        vt_tab_tp94(i).tp_reg := '94'; -- Tipo de registro
        vt_tab_tp94(i).quadro := '94'; -- Quadro
        vt_tab_tp94(i).item   := rec_inf_comp_dime.cod_item; -- Item
        vt_tab_tp94(i).valor  := abs(nvl(rec_inf_comp_dime.vl, 0) * 100); -- Valor
        --
        vn_qtde_tp94 := nvl(vn_qtde_tp94, 0) + 1;
        --
      end if;
      --
    end if;
    --
    vn_fase := 21.20;
    --
  end loop; -- rec_inf_comp_dime
  --
  vn_fase := 22;
  --
  -- Registro 98 - Encerramento da Declaração
  vt_tab_tp98(1).tp_reg  := '98'; -- Tipo de registro
  vt_tab_tp98(1).quadro  := ' '; -- Quadro em branco
  vt_tab_tp98(1).qte_reg := (nvl(vn_qtde_tp20, 0) + nvl(vn_qtde_tp21, 0) + nvl(vn_qtde_tp22, 0) + nvl(vn_qtde_tp23, 0) + nvl(vn_qtde_tp24, 0) +
                             nvl(vn_qtde_tp25, 0) + nvl(vn_qtde_tp26, 0) + nvl(vn_qtde_tp30, 0) + nvl(vn_qtde_tp31, 0) + nvl(vn_qtde_tp32, 0) +
                             nvl(vn_qtde_tp33, 0) + nvl(vn_qtde_tp35, 0) + nvl(vn_qtde_tp41, 0) + nvl(vn_qtde_tp42, 0) + nvl(vn_qtde_tp46, 0) +
                             nvl(vn_qtde_tp49, 0) + nvl(vn_qtde_tp50, 0) + nvl(vn_qtde_tp80, 0) + nvl(vn_qtde_tp81, 0) + nvl(vn_qtde_tp82, 0) +
                             nvl(vn_qtde_tp83, 0) + nvl(vn_qtde_tp84, 0) + nvl(vn_qtde_tp90, 0) + nvl(vn_qtde_tp91, 0) + nvl(vn_qtde_tp92, 0) +
                             nvl(vn_qtde_tp93, 0) + nvl(vn_qtde_tp94, 0));
  --
  vn_fase := 23;
  --
  -- Registro 99 - Encerramento da Declaração
  vt_tab_tp99(1).tp_reg  := '99'; -- Tipo de registro
  vt_tab_tp99(1).quadro  := ' '; -- Quadro em branco
  vt_tab_tp99(1).qte_reg := (nvl(vn_qtde_tp20, 0) + nvl(vn_qtde_tp21, 0) + nvl(vn_qtde_tp22, 0) + nvl(vn_qtde_tp23, 0) + nvl(vn_qtde_tp24, 0) +
                             nvl(vn_qtde_tp25, 0) + nvl(vn_qtde_tp26, 0) + nvl(vn_qtde_tp30, 0) + nvl(vn_qtde_tp31, 0) + nvl(vn_qtde_tp32, 0) +
                             nvl(vn_qtde_tp33, 0) + nvl(vn_qtde_tp35, 0) + nvl(vn_qtde_tp41, 0) + nvl(vn_qtde_tp42, 0) + nvl(vn_qtde_tp46, 0) +
                             nvl(vn_qtde_tp49, 0) + nvl(vn_qtde_tp50, 0) + nvl(vn_qtde_tp80, 0) + nvl(vn_qtde_tp81, 0) + nvl(vn_qtde_tp82, 0) +
                             nvl(vn_qtde_tp83, 0) + nvl(vn_qtde_tp84, 0) + nvl(vn_qtde_tp90, 0) + nvl(vn_qtde_tp91, 0) + nvl(vn_qtde_tp92, 0) +
                             nvl(vn_qtde_tp93, 0) + nvl(vn_qtde_tp94, 0) + nvl(vt_tab_tp98.count, 0) + 1);
  vt_tab_tp99(1).qte_decl_icms := 1; -- Quantidade de declarações de ICMS no arquivo -- verificar
  --
  vn_fase := 24;
  --
  -- Procedimento Monta a Estrutura do Arquivo da GIA - SC
  pkb_monta_estr_arq_gia_sc;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_sc fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_arq_gia_sc;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-SP
------------------------------------------------
procedure pkb_gera_arq_gia_sp is
  --
  vn_fase  number := 0;
  vn_valor number := 0;
  --
  -- Variáveis do controle do vetor
  i pls_integer;
  j pls_integer;  
  k pls_integer;
  l pls_integer;
  --
  vb_achou    boolean;
  vn_qtde_reg number := 0;
  --
  vn_vl_saldo_credor_ant    apuracao_icms.vl_saldo_credor_ant%type;
  vn_vl_saldo_cred_ant_st   apuracao_icms_st.vl_saldo_cred_ant_st%type;
  vn_vl_icms_recolher       apuracao_icms.vl_icms_recolher%type;
  vn_dm_ind_ie_dest         nota_fiscal_dest.dm_ind_ie_dest%type;
  --
  vn_cfop                   cfop.cd%type := 0;
  vn_vl_contabil            number(15,2) := 0;
  vv_cod_st_icms            cod_st.cod_st%type := null;
  vn_vl_base_calc_icms      imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_icms              imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_icms       imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_base_calc_icmsst    imp_itemnf.vl_base_calc%type := 0;
  vn_vl_imp_trib_icmsst     imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_icms      imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_icms       imp_itemnf.vl_base_calc%type := 0;
  vv_cod_st_ipi             cod_st.cod_st%type := null;
  vn_vl_base_calc_ipi       imp_itemnf.vl_base_calc%type := 0;
  vn_aliq_ipi               imp_itemnf.aliq_apli%type := 0;
  vn_vl_imp_trib_ipi        imp_itemnf.vl_imp_trib%type := 0;
  vn_vl_bc_isenta_ipi       imp_itemnf.vl_base_calc%type := 0;
  vn_vl_bc_outra_ipi        imp_itemnf.vl_base_calc%type := 0;
  vn_ipi_nao_recup          number(15,2);
  vn_outro_ipi              number(15,2);
  vn_vl_imp_nao_dest_ipi    number(15,2);
  vn_vl_fcp_icmsst          number(15,2);
  vn_aliq_fcp_icms          number(15,2);
  vn_vl_fcp_icms            number(15,2);
  --
  vn_base_calculo           number(15,2);
  vn_imposto                number(15,2);
  vn_imp_ret_st             number(15,2);
  vn_imp_ret_substituto_st  number(15,2);
  vn_imp_ret_substituido_st number(15,2);
  --
  vn_estado_id              estado.id%type;
  vn_cidade_id              cidade.id%type;
  vn_tipocodarq_id          tipo_cod_arq.id%type;
  vv_estadotipocodarq_cd    estado_tipo_cod_arq.cd%type;
  vv_cidadetipocodarq_cd    cidade_tipo_cod_arq.cd%type;
  vn_valor_contabil_1       number(15,2);
  vn_base_calculo_1         number(15,2);
  vn_valor_contabil_2       number(15,2);
  vn_base_calculo_2         number(15,2);
  vn_ICMSCobradoST          number(15,2);
  vn_Outros_Produtos        number(15,2);
  vn_outros_impostos        number(15,2);
  vv_cnpj_dest              varchar2(14);
  vn_aux_est                number(2);
  vn_ind_nf_id              number(10);
  vn_cod_dipam              number;
  --
  vn_estado_uf              varchar2(2); 
  vn_nflocal_id             number; 
  vn_valor_mun              number(15,2);
  --
  vn_dmsmicmsstipinrecbsoutr empresa.dm_sm_icmsst_ipinrec_bs_outr%type;
  --
  -- CR01 - Registro Mestre
  type tab_cr01 is record(
    cr             varchar2(2),
    TipoDocto      varchar2(2),
    DataGeracao    varchar2(8),
    HoraGeracao    varchar2(6),
    VersaoFrontEnd varchar2(4),
    VersaoPref     varchar2(4),
    Q05            number(4));
  --
  type t_tab_cr01 is table of tab_cr01 index by binary_integer;
  vt_tab_cr01 t_tab_cr01;
  --
  -- CR05 - Cabeçalho do Documento Fiscal
  type tab_cr05 is record(
    cr                    varchar2(2),
    IE                    varchar2(12),
    CNPJ                  varchar2(14),
    CNAE                  varchar2(7),
    RegTrib               varchar2(2),
    Ref                   varchar2(6),
    RefInicial            varchar2(6),
    Tipo                  varchar2(2),
    Movimento             number(1),
    Transmitida           number(1),
    SaldoCredPeriodoAnt   number(15,2),
    SaldoCredPeriodoAntST number(15,2),
    OrigemSoftware        varchar2(14),
    OrigemPreDig          number(1),
    ICMSFixPer            number(15,2),
    ChaveInterna          varchar2(32),
    Q07                   number(4),
    Q10                   number(4),
    Q20                   number(4),
    Q30                   number(4),
    Q31                   number(4));
  --
  type t_tab_cr05 is table of tab_cr05 index by binary_integer;
  vt_tab_cr05 t_tab_cr05;
  --
  -- CR07 - Detalhes Pagamentos
  type tab_cr07 is record(
    cr          varchar2(2),
    PropriaOuST varchar2(1),
    Imposto     varchar2(15),
    Data        varchar2(8));
  --
  type t_tab_cr07 is table of tab_cr07 index by binary_integer;
  type t_bi_tab_cr07 is table of t_tab_cr07 index by binary_integer;
  vt_bi_tab_cr07 t_bi_tab_cr07;
  --
  -- CR10 - Detalhe CFOPs
  type tab_cr10 is record(
    cr                 varchar2(2),
    CFOP               varchar2(6),
    ValorContabil      number(15),
    BaseCalculo        number(15),
    Imposto            number(15),
    IsentasNaoTrib     number(15),
    Outras             number(15),
    ImpostoRetidoST    number(15),
    ImpRetSubstitutoST number(15),
    ImpRetSubstituido  number(15),
    OutrosImpostos     number(15),
    Q14                number(4));
  --
  type t_tab_cr10 is table of tab_cr10 index by binary_integer;
  type t_bi_tab_cr10 is table of t_tab_cr10 index by binary_integer;
  vt_bi_tab_cr10 t_bi_tab_cr10;
  --
  -- CR14 - Detalhes Interestaduais
  type tab_cr14 is record(
    cr               varchar2(2),
    UF               varchar2(2),
    Valor_Contabil_1 number(15),
    BaseCalculo_1    number(15),
    Valor_Contabil_2 number(15),
    BaseCalculo_2    number(15),
    Imposto          number(15),
    Outras           number(15),
    ICMSCobradoST    number(15),
    PetroleoEnergia  number(15),
    Outros_Produtos  number(15),
    Benef            number(1),
    Q18              number(4));
  --
  type t_tab_cr14 is table of tab_cr14 index by binary_integer;
  type t_bi_tab_cr14 is table of t_tab_cr14 index by binary_integer;
  type t_tri_tab_cr14 is table of t_bi_tab_cr14 index by binary_integer;
  vt_tri_tab_cr14 t_tri_tab_cr14;
  --
  -- CR18 - ZFM/ALC
  type tab_cr18 is record(
    cr            varchar2(2),
    NF            varchar2(9),
    Data          varchar2(8),
    Valor         number(15),
    CNPJDest      varchar2(14),
    MunicipioDest varchar2(5));
  --
  type t_tab_cr18 is table of tab_cr18 index by binary_integer;
  type t_bi_tab_cr18 is table of t_tab_cr18 index by binary_integer;
  type t_tri_tab_cr18 is table of t_bi_tab_cr18 index by binary_integer;
  type t_tetra_tab_cr18 is table of t_tri_tab_cr18 index by binary_integer;
  vt_tetra_tab_cr18 t_tetra_tab_cr18;
  --
  -- CR20 -Ocorrências
  type tab_cr20 is record(
    cr          varchar2(2),
    CodSubItem  varchar2(5),
    Valor       number(15),
    PropriaOuST varchar2(1),
    FLegal      varchar2(100),
    Ocorrencia  varchar2(300),
    Q25         number(4),
    Q26         number(4),
    Q27         number(4),
    Q28         number(4));
  --
  type t_tab_cr20 is table of tab_cr20 index by binary_integer;
  type t_bi_tab_cr20 is table of t_tab_cr20 index by binary_integer;
  vt_bi_tab_cr20 t_bi_tab_cr20;
  --
  -- CR25 - IEs
  type tab_cr25 is record(
    cr    varchar2(2),
    IE    varchar2(12),
    Valor varchar2(15));
  --
  type t_tab_cr25 is table of tab_cr25 index by binary_integer;
  type t_bi_tab_cr25 is table of t_tab_cr25 index by binary_integer;
  type t_tri_tab_cr25 is table of t_bi_tab_cr25 index by binary_integer;
  vt_tri_tab_cr25 t_tri_tab_cr25;
  --
  -- CR26 - IESubstituto
  type tab_cr26 is record(
    cr           varchar2(2),
    IESubstituto varchar2(12),
    NF           varchar2(9),
    DataInicio   varchar2(6),
    DataFim      varchar2(6),
    Valor        number(15));
  --
  type t_tab_cr26 is table of tab_cr26 index by binary_integer;
  type t_bi_tab_cr26 is table of t_tab_cr26 index by binary_integer;
  type t_tri_tab_cr26 is table of t_bi_tab_cr26 index by binary_integer;
  vt_tri_tab_cr26 t_tri_tab_cr26;
  --
  -- CR27 - IESubstituido
  type tab_cr27 is record(
    cr            varchar2(2),
    IESubstituido varchar2(12),
    NF            varchar2(9),
    Valor         number(15));
  --
  type t_tab_cr27 is table of tab_cr27 index by binary_integer;
  type t_bi_tab_cr27 is table of t_tab_cr27 index by binary_integer;
  type t_tri_tab_cr27 is table of t_bi_tab_cr27 index by binary_integer;
  vt_tri_tab_cr27 t_tri_tab_cr27;
  --
  -- CR28 - Crédito Acumulado / Ressarcimento ST
  type tab_cr28 is record(
    cr             varchar2(2),
    CodAutorizacao varchar2(12),
    Valor          number(15));
  --
  type t_tab_cr28 is table of tab_cr28 index by binary_integer;
  type t_bi_tab_cr28 is table of t_tab_cr28 index by binary_integer;
  type t_tri_tab_cr28 is table of t_bi_tab_cr28 index by binary_integer;
  vt_tri_tab_cr28 t_tri_tab_cr28;
  --
  -- CR30 - DIPAM-B
  type tab_cr30 is record(
    cr        varchar2(2),
    CodDIP    varchar2(2),
    Municipio varchar2(5),
    Valor     number(15));
  --
  type t_tab_cr30 is table of tab_cr30 index by binary_integer;
  type t_bi_tab_cr30 is table of t_tab_cr30 index by binary_integer;
  vt_bi_tab_cr30 t_bi_tab_cr30;
  --
  -- CR31 - Registro de Exportação
  type tab_cr31 is record(
    cr varchar2(2),
    RE varchar2(15));
  --
  type t_tab_cr31 is table of tab_cr31 index by binary_integer;
  type t_bi_tab_cr31 is table of t_tab_cr31 index by binary_integer;
  vt_bi_tab_cr31 t_bi_tab_cr31;
  --
  cursor c_apur_icms is
    select obr.dt_vencto_obrig, 
           sum(obr.vl_orig_rec) vl_orig_rec
      from apuracao_icms ai, 
           obrig_rec_apur_icms obr
     where ai.empresa_id        = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao       = 3 -- Processada
       and ai.dm_tipo           = 0 -- Real
       and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
       and obr.apuracaoicms_id  = ai.id
     group by obr.dt_vencto_obrig;
  --
  cursor c_apur_icmsst is
    select obr.dt_vencto_obrig, sum(obr.vl_orig_rec) vl_orig_rec
      from per_apur_icms_st       p,
           apuracao_icms_st       ai,
           obrig_rec_apur_icms_st obr,
           estado                 es
     where p.empresa_id          = gt_row_abertura_gia.empresa_id
       and trunc(p.dt_inicio)   >= gt_row_abertura_gia.dt_ini
       and trunc(p.dt_fim)      <= gt_row_abertura_gia.dt_fin
       and p.dm_tipo             = 0 -- Real
       and ai.perapuricmsst_id   = p.id
       and ai.dm_situacao        = 3 -- Processada
       and obr.apuracaoicmsst_id = ai.id
       and es.id                 = ai.estado_id
       and es.sigla_estado       = 'SP'
     group by obr.dt_vencto_obrig;
  --
  cursor c_ie is
    select distinct ie.nro_re
      from infor_exportacao ie
     where ie.empresa_id   = gt_row_abertura_gia.empresa_id
       and trunc(ie.dt_re) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and trim(ie.nro_re) is not null
       and ie.dm_st_proc   = 1 -- validada
    union
    select distinct ie.nro_re
      from nota_fiscal              nf,
           mod_fiscal               mf,
           item_nota_fiscal         inf,
           infor_export_nota_fiscal ienf,
           infor_exportacao         ie
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ie.dm_st_proc      = 1 -- Validada
       and trim(ie.nro_re)    is not null
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65')
       and inf.notafiscal_id  = nf.id
       and inf.cfop           not in (1602, 5602) -- #69610 retirado do not in (5927)
       and ienf.itemnf_id     = inf.id
       and ie.id              = ienf.inforexportacao_id
     order by 1;
  --
  cursor c_det_cfop is
    select nf.id          notafiscal_id,
           nf.dm_ind_emit,
           nf.dm_ind_oper,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           inf.id         itemnf_id,
           inf.cfop_id,
           inf.cfop       cd_cfop
      from nota_fiscal nf, 
           mod_fiscal mf, 
           item_nota_fiscal inf
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('01', '1B', '04', '55', '65')
       and inf.notafiscal_id  = nf.id
       and inf.cfop           not in (1602, 5602)-- #69610 retirado do not in (5927)
     order by 1, 2;
  --
  cursor c_det_cfop_ct is
    select ct.id              conhectransp_id,
           ct.dm_ind_emit,
           ct.pessoa_id,
           ct.dt_hr_emissao   dt_emiss,
           ct.nro_ct,
           ct.serie,
           ct.subserie,
           r.id               ctreganal_id,
           ct.sigla_uf_ini,
           ct.ibge_cidade_ini,
           ct.sigla_uf_fim,
           ct.ibge_cidade_fim
      from conhec_transp ct, 
           ct_reg_anal r
     where ct.empresa_id      = gt_row_abertura_gia.empresa_id
       and ct.dm_st_proc      = 4
       and ct.dm_arm_cte_terc = 0
       and ((ct.dm_ind_emit = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and r.conhectransp_id = ct.id
     order by 1;
  --
  cursor c_det_cfop_sc is
    select nf.id          notafiscal_id,
           nf.dm_ind_emit,
           nf.pessoa_id,
           nf.dt_emiss,
           nf.nro_nf,
           r.id           nfregistanalit_id
      from nota_fiscal nf, 
           mod_fiscal mf, 
           nfregist_analit r
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_st_proc      = 4
       and nf.dm_arm_nfe_terc = 0
       and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.id              = nf.modfiscal_id
       and mf.cod_mod         in ('06', '29', '28', '21', '22')
       and r.notafiscal_id    = nf.id
     order by 1;
  --
  -- Query Cupom Fiscal
  cursor c_det_cfop_ecf is
    select r.id     reducaozecf_id,
           r.dt_doc dt_emiss,
           ramd.id  reganalmovdiaecf_id
      from equip_ecf e, 
           reducao_z_ecf r, 
           reg_anal_mov_dia_ecf ramd
     where e.empresa_id        = gt_row_abertura_gia.empresa_id
       and r.equipecf_id       = e.id
       and r.dm_st_proc        = 1 -- Validada
       and trunc(r.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and ramd.reducaozecf_id = r.id
     order by 1;
  --
  -- Query Cupom Fiscal Eletrônico
  cursor c_cfe_cfop is
    select cf.id         cupomfiscal_id,
           cf.dt_emissao,
           cf.nro_cfe,
           ic.id         itemcupomfiscal_id,
           ic.cfop_id,
           co.cd         cd_cfop
      from cupom_fiscal      cf,
           mod_fiscal        mf,
           sit_docto         sd,
           item_cupom_fiscal ic,
           cfop              co
     where cf.empresa_id     = gt_row_abertura_gia.empresa_id
       and to_date(cf.dt_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
       and cf.dm_st_proc     = 4 -- 4 - Autorizado
       and mf.id             = cf.modfiscal_id
       and mf.cod_mod        = '59' -- Cupom Fiscal Eletrônico
       and sd.id             = cf.sitdocto_id
       and sd.cd             in ('00', '01', '02', '03') -- 00 - Documento regular, 01 - Documento regular extemporâneo, 02 - Documento cancelado, 03 - Documento cancelado extemporâneo
       and ic.cupomfiscal_id = cf.id
       and co.id             = ic.cfop_id;
  --
  cursor c_cr_20 is
    select s.cd codsubitem,
           aaig.vl_aj_apur,
           s.dm_apur PropriaOuST,
           nvl(aaig.flegal, s.flegal) flegal,
           nvl(aaig.descr_ocor, s.flegal) ocorr,
           aaig.id,
           ai.dt_inicio,
           ai.dt_fim
      from apuracao_icms       ai,
           ajust_apuracao_icms aai,
           ajust_apur_icms_gia aaig,
           subitem_gia         s
     where ai.empresa_id             = gt_row_abertura_gia.empresa_id
       and ai.dm_situacao            = 3 -- Processada
       and ai.dm_tipo                = 0 -- Real
       and trunc(ai.dt_inicio)      >= gt_row_abertura_gia.dt_ini
       and trunc(ai.dt_fim)         <= gt_row_abertura_gia.dt_fin
       and aai.apuracaoicms_id       = ai.id
       and aaig.ajustapuracaoicms_id = aai.id
       and s.id                      = aaig.subitemgia_id
    union all
    select s.cd            codsubitem,
           aaig.vl_aj_apur,
           s.dm_apur       PropriaOuST,
           s.flegal,
           s.descr         ocorr,
           aaig.id,
           p.dt_inicio,
           p.dt_fim
      from per_apur_icms_st       p,
           apuracao_icms_st       ai,
           estado                 est,
           ajust_apuracao_icms_st aai,
           ajust_apur_icmsst_gia  aaig,
           subitem_gia            s
     where p.empresa_id                = gt_row_abertura_gia.empresa_id
       and p.dm_tipo                   = 0 -- Real
       and trunc(p.dt_inicio)         >= gt_row_abertura_gia.dt_ini
       and trunc(p.dt_fim)            <= gt_row_abertura_gia.dt_fin
       and ai.perapuricmsst_id         = p.id
       and ai.dm_situacao              = 3 -- Processada
       and est.id                      = ai.estado_id
       and est.sigla_estado            = 'SP'
       and aai.apuracaoicmsst_id       = ai.id
       and aaig.ajustapuracaoicmsst_id = aai.id
       and s.id                        = aaig.subitemgia_id
     order by 1, 3;
  --
  cursor c_cr_25(en_ajustapuricmsgia_id in ajust_apur_icms_gia.id%type) is
    select j.ie, 
           o.valor
      from icms_ocor_gia_ie o, 
           juridica j
     where o.ajustapuricmsgia_id = en_ajustapuricmsgia_id
       and j.pessoa_id           = o.pessoa_id
     order by j.ie;
  --
  cursor c_cr_25_st(en_ajustapuricmsstgia_id in ajust_apur_icmsst_gia.id%type) is
    select j.ie, 
           o.valor
      from icmsst_ocor_gia_ie o, 
           juridica j
     where o.ajustapuricmsstgia_id = en_ajustapuricmsstgia_id
       and j.pessoa_id             = o.pessoa_id
     order by j.ie;
  --
  cursor c_cr_26(en_ajustapuricmsgia_id in ajust_apur_icms_gia.id%type) is
    select j.ie, 
           s.nro_nf, 
           s.valor
      from icms_substituto_gia s, 
           juridica j
     where s.ajustapuricmsgia_id = en_ajustapuricmsgia_id
       and j.pessoa_id           = s.pessoa_id
     order by j.ie, 
              s.nro_nf;
  --
  cursor c_cr_27(en_ajustapuricmsstgia_id in ajust_apur_icmsst_gia.id%type) is
    select j.ie, 
           s.nro_nf, 
           s.valor
      from icmsst_subst_gia s, 
           juridica j
     where s.ajustapuricmsstgia_id = en_ajustapuricmsstgia_id
       and j.pessoa_id             = s.pessoa_id
     order by j.ie, 
              s.nro_nf;
  --
  cursor c_cr_28(en_ajustapuricmsgia_id in ajust_apur_icms_gia.id%type) is
    select ca.cod_autor, 
           ca.vl_cred_acm
      from icms_cred_acm_gia ca
     where ca.ajustapuricmsgia_id = en_ajustapuricmsgia_id
     order by 1;
  --
  cursor c_cr_28_st(en_ajustapuricmsstgia_id in ajust_apur_icmsst_gia.id%type) is
    select ca.cod_autor, 
           ca.vl_cred_acm
      from icmsst_cred_acm_gia ca
     where ca.ajustapuricmsstgia_id = en_ajustapuricmsstgia_id
     order by 1;
  --
  --#72920
  cursor c_cr_30_nf is
    select coddip_empresa, municipio_empresa, round(sum(valor),2) valor 
      from (select nf.empresa_id, nf.pessoa_id,
                   dg.cd coddip_empresa,
                   case
                     when trim(dg.cd) = '2.5' then
                      ct.cd
                     else
                      decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd)
                   end municipio_empresa,
                   sum(case
                         when trim(dg.cd) = '2.5' then
                          case
                            when es.sigla_estado = 'SP' then
                             case
                               when et.sigla_estado = 'SP' then
                                inf.vl_item_bruto
                               else
                                1
                             end
                            else
                             0
                          end
                         else
                          case
                            when nvl(pdg.perc_rateio_item, 0) = 0 and c.tipooperacao_id not in (select t.id from tipo_operacao t where t.cd = 3) then
                                   (nvl(inf.vl_item_bruto, 0) +
                                    nvl(inf.vl_frete, 0) +
                                    nvl(inf.vl_seguro, 0) + nvl(inf.vl_outro, 0) +
                                    (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                       from imp_itemnf imp, tipo_imposto ti
                                      where imp.itemnf_id = inf.id
                                        and imp.tipoimp_id = ti.id
                                        and ti.cd in (2, 3, 7))) -
                                          nvl(inf.vl_desc, 0)
                            when c.tipooperacao_id not in (select t.id from tipo_operacao t where t.cd = 3) then
                                   ((nvl(inf.vl_item_bruto, 0) +
                                     nvl(inf.vl_frete, 0) + nvl(inf.vl_seguro, 0) +
                                     nvl(inf.vl_outro, 0) +
                                     (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                        from imp_itemnf imp, tipo_imposto ti
                                       where imp.itemnf_id = inf.id
                                         and imp.tipoimp_id = ti.id
                                         and ti.cd in (2, 3, 7))) -
                                     nvl(inf.vl_desc, 0)) *
                                           nvl(pdg.perc_rateio_item, 0) / 100
                            else
                             0
                          end
                       end)
                   -
                   sum(case
                         when trim(dg.cd) = '2.5' then
                          case
                            when es.sigla_estado = 'SP' then
                             case
                               when et.sigla_estado = 'SP' then
                                inf.vl_item_bruto
                               else
                                1
                             end
                            else
                             0
                          end
                         else
                          case
                            when nvl(pdg.perc_rateio_item, 0) = 0 and c.tipooperacao_id in (select t.id from tipo_operacao t where t.cd = 3) then
                                   (nvl(inf.vl_item_bruto, 0) +
                                    nvl(inf.vl_frete, 0) +
                                    nvl(inf.vl_seguro, 0) + nvl(inf.vl_outro, 0) +
                                    (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                       from imp_itemnf imp, tipo_imposto ti
                                      where imp.itemnf_id = inf.id
                                        and imp.tipoimp_id = ti.id
                                        and ti.cd in (2, 3, 7))) -
                                          nvl(inf.vl_desc, 0)
                            when c.tipooperacao_id in (select t.id from tipo_operacao t where t.cd = 3) then
                                   ((nvl(inf.vl_item_bruto, 0) +
                                     nvl(inf.vl_frete, 0) + nvl(inf.vl_seguro, 0) +
                                     nvl(inf.vl_outro, 0) +
                                     (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                        from imp_itemnf imp, tipo_imposto ti
                                       where imp.itemnf_id = inf.id
                                         and imp.tipoimp_id = ti.id
                                         and ti.cd in (2, 3, 7))) -
                                     nvl(inf.vl_desc, 0)) *
                                           nvl(pdg.perc_rateio_item, 0) / 100
                            else
                             0
                          end
                        end) valor
              from nota_fiscal         nf,
                   mod_fiscal          mf,
                   item_nota_fiscal    inf,
                   param_dipamgia      pdg,
                   dipam_gia           dg,
                   pessoa              p,
                   cidade              cid,
                   estado              es,
                   cidade_tipo_cod_arq ct1,
                   tipo_cod_arq        tc1,
                   empresa             em,
                   pessoa              ps,
                   cidade              ci,
                   estado              et,
                   cidade_tipo_cod_arq ct,
                   tipo_cod_arq        tc,
                   cfop                c
             where gn_origem_dado_pessoa = 0 -- Dados da pessoa da nota_fiscal cadastro (Padrão)
               and nf.empresa_id       = gt_row_abertura_gia.empresa_id
               and nf.dm_arm_nfe_terc  = 0
               and nf.dm_st_proc       = 4 -- Autorizada
               and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
               and mf.id               = nf.modfiscal_id
               and mf.cod_mod          in ('01', '1B', '04', '55', '65')
               and inf.notafiscal_id   = nf.id
               and pdg.empresa_id      = nf.empresa_id
               and pdg.cfop_id         = inf.cfop_id
               and (pdg.item_id = inf.item_id or pdg.ncm_id in (select n.id from ncm n where n.cod_ncm = inf.cod_ncm))
               and dg.id               = pdg.dipamgia_id
               and p.id                = nf.pessoa_id
               and cid.id              = p.cidade_id
               and es.id               = cid.estado_id
               and ct1.cidade_id       = cid.id
               and tc1.id              = ct1.tipocodarq_id
               and tc1.cd              = '1' -- GIA-SP
               and em.id               = nf.empresa_id
               and ps.id               = em.pessoa_id
               and ci.id               = ps.cidade_id
               and et.id               = ci.estado_id
               and ct.cidade_id        = ci.id
               and tc.id               = ct.tipocodarq_id
               and tc.cd               = '1' -- GIA-SP
               and inf.cfop_id         = c.id
              -- and pk_csf_gia.fkg_dipam_22_pessoa_juridica( dg.cd, nf.empresa_id, nf.pessoa_id ) = 1
              -- Para não considerar os registros relacionados à tabela inf_valor_agreg. 
               and not exists (select 1
                                 from inf_valor_agreg iva, item i
                                where iva.item_id    = i.id
                                  and i.id           = inf.item_id
                                  and iva.dm_st_proc = 1)
             group by nf.empresa_id, nf.pessoa_id,
                      dg.cd,
                      ct.cd,
                      decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd)
            --
            UNION
            --
            select nf.empresa_id, nf.pessoa_id,
                   dg.cd coddip_empresa,
                   case
                     when trim(dg.cd) = '2.5' then
                      ct.cd
                     else
                      decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd)
                   end municipio_empresa,
                   sum(case
                         when trim(dg.cd) = '2.5' then
                          case
                            when es.sigla_estado = 'SP' then
                             case
                               when et.sigla_estado = 'SP' then
                                inf.vl_item_bruto
                               else
                                1
                             end
                            else
                             0
                          end
                         else
                          case
                            when nvl(pdg.perc_rateio_item, 0) = 0 and c.tipooperacao_id not in (select t.id from tipo_operacao t where t.cd = 3) then
                                   (nvl(inf.vl_item_bruto, 0) +
                                    nvl(inf.vl_frete, 0) +
                                    nvl(inf.vl_seguro, 0) + nvl(inf.vl_outro, 0) +
                                    (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                       from imp_itemnf imp, tipo_imposto ti
                                      where imp.itemnf_id = inf.id
                                        and imp.tipoimp_id = ti.id
                                        and ti.cd in (2, 3, 7))) -
                                          nvl(inf.vl_desc, 0)
                            when c.tipooperacao_id not in (select t.id from tipo_operacao t where t.cd = 3) then
                                   ((nvl(inf.vl_item_bruto, 0) +
                                     nvl(inf.vl_frete, 0) + nvl(inf.vl_seguro, 0) +
                                     nvl(inf.vl_outro, 0) +
                                     (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                        from imp_itemnf imp, tipo_imposto ti
                                       where imp.itemnf_id = inf.id
                                         and imp.tipoimp_id = ti.id
                                         and ti.cd in (2, 3, 7))) -
                                     nvl(inf.vl_desc, 0)) *
                                           nvl(pdg.perc_rateio_item, 0) / 100
                            else
                             0
                          end
                       end)
                   -
                   sum(case
                         when trim(dg.cd) = '2.5' then
                          case
                            when es.sigla_estado = 'SP' then
                             case
                               when et.sigla_estado = 'SP' then
                                inf.vl_item_bruto
                               else
                                1
                             end
                            else
                             0
                          end
                         else
                          case
                            when nvl(pdg.perc_rateio_item, 0) = 0 and c.tipooperacao_id in (select t.id from tipo_operacao t where t.cd = 3) then
                                   (nvl(inf.vl_item_bruto, 0) +
                                    nvl(inf.vl_frete, 0) +
                                    nvl(inf.vl_seguro, 0) + nvl(inf.vl_outro, 0) +
                                    (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                       from imp_itemnf imp, tipo_imposto ti
                                      where imp.itemnf_id = inf.id
                                        and imp.tipoimp_id = ti.id
                                        and ti.cd in (2, 3, 7))) -
                                          nvl(inf.vl_desc, 0)
                            when c.tipooperacao_id in (select t.id from tipo_operacao t where t.cd = 3) then
                                   ((nvl(inf.vl_item_bruto, 0) +
                                     nvl(inf.vl_frete, 0) + nvl(inf.vl_seguro, 0) +
                                     nvl(inf.vl_outro, 0) +
                                     (select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
                                        from imp_itemnf imp, tipo_imposto ti
                                       where imp.itemnf_id = inf.id
                                         and imp.tipoimp_id = ti.id
                                         and ti.cd in (2, 3, 7))) -
                                     nvl(inf.vl_desc, 0)) *
                                           nvl(pdg.perc_rateio_item, 0) / 100
                            else
                             0
                          end
                             end) valor 
              from nota_fiscal         nf,
                   nota_fiscal_dest    nfd,
                   mod_fiscal          mf,
                   item_nota_fiscal    inf,
                   param_dipamgia      pdg,
                   dipam_gia           dg,
                   cidade              cid,
                   estado              es,
                   cidade_tipo_cod_arq ct1,
                   tipo_cod_arq        tc1,
                   empresa             em,
                   pessoa              ps,
                   cidade              ci,
                   estado              et,
                   cidade_tipo_cod_arq ct,
                   tipo_cod_arq        tc,
                   cfop                c
             where gn_origem_dado_pessoa = 1 -- Dados da nota_fiscal_dest
               and nf.empresa_id       = gt_row_abertura_gia.empresa_id
               and nf.dm_arm_nfe_terc  = 0
               and nf.dm_st_proc       = 4 -- Autorizada
               and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
               and mf.id               = nf.modfiscal_id
               and mf.cod_mod          in ('01', '1B', '04', '55', '65')
               and inf.notafiscal_id   = nf.id
               and pdg.empresa_id      = nf.empresa_id
               and pdg.cfop_id         = inf.cfop_id
               and (pdg.item_id = inf.item_id or pdg.ncm_id in (select n.id from ncm n where n.cod_ncm = inf.cod_ncm))
               and dg.id               = pdg.dipamgia_id
               and nfd.notafiscal_id   = nf.id
               and cid.ibge_cidade     = nfd.cidade_ibge
               and es.id               = cid.estado_id
               and ct1.cidade_id       = cid.id
               and tc1.id              = ct1.tipocodarq_id
               and tc1.cd              = '1' -- GIA-SP
               and em.id               = nf.empresa_id
               and ps.id               = em.pessoa_id
               and ci.id               = ps.cidade_id
               and et.id               = ci.estado_id
               and ct.cidade_id        = ci.id
               and tc.id               = ct.tipocodarq_id
               and tc.cd               = '1' -- GIA-SP
               and inf.cfop_id         = c.id
              -- and pk_csf_gia.fkg_dipam_22_pessoa_juridica( dg.cd, nf.empresa_id, nf.pessoa_id ) = 1
               -- Para não considerar os registros relacionados à tabela inf_valor_agreg. 
               and not exists (select 1
                                 from inf_valor_agreg iva, item i
                                where iva.item_id    = i.id
                                  and i.id           = inf.item_id
                                  and iva.dm_st_proc = 1)
             group by nf.empresa_id, nf.pessoa_id,
                      dg.cd,
                      ct.cd,
                      decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd))
     where pk_csf_gia.fkg_dipam_22_pessoa_juridica( coddip_empresa, empresa_id, pessoa_id ) = 1 
     group by coddip_empresa, municipio_empresa
     order by coddip_empresa, municipio_empresa;  
  --
  /* Para considerar somente os registros relacionados à tabela inf_valor_agreg. */
  cursor c_cr_30_nf_via is
    select dg.cd coddip_empresa,
           ct1.cd municipio_empresa,
           sum(iva.valor) valor
      from inf_valor_agreg     iva,
           param_dipamgia      pdg,
           dipam_gia           dg,
           cidade              cid,
           estado              es,
           cidade_tipo_cod_arq ct1,
           tipo_cod_arq        tc1
     where iva.empresa_id    = gt_row_abertura_gia.empresa_id
       and iva.dm_st_proc    = 1
       and iva.item_id       = pdg.item_id
       and dg.id             = pdg.dipamgia_id
       and iva.cidade_id     = cid.id
       and cid.estado_id     = es.id
       and ct1.cidade_id     = cid.id
       and ct1.tipocodarq_id = tc1.id
       and lpad(nvl(iva.mes, 0), 2, '0') || '/' || iva.ano = to_char(gt_row_abertura_gia.dt_ini, 'MM/YYYY')
       and tc1.cd            = '1' -- GIA-SP;
     group by dg.cd, 
              ct1.cd
     order by dg.cd, 
              ct1.cd;
  --
  cursor c_cr_30_nf_via2 is
    select coddip_empresa, municipio_empresa, sum(valor) valor
      from (select dg.cd coddip_empresa,
                   decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd) municipio_empresa,
                   sum(case
                         when trim(dg.cd) = '2.5' then
                          case
                            when es.sigla_estado = 'SP' then
                             case
                               when et.sigla_estado = 'SP' then
                                1
                               else
                                0
                             end
                            else
                             0
                          end
                         else
                          case
                            when nvl(pdg.perc_rateio_item, 0) = 0 then
                             nvl(iva.valor, 0)
                            else
                             nvl(iva.valor, 0) * nvl(pdg.perc_rateio_item, 0) / 100
                          end
                       end) valor
              from nota_fiscal         nf,
                   mod_fiscal          mf,
                   item_nota_fiscal    inf,
                   param_dipamgia      pdg,
                   dipam_gia           dg,
                   pessoa              p,
                   cidade              cid,
                   estado              es,
                   cidade_tipo_cod_arq ct1,
                   tipo_cod_arq        tc1,
                   empresa             em,
                   pessoa              ps,
                   cidade              ci,
                   estado              et,           
                   cidade_tipo_cod_arq ct,
                   tipo_cod_arq        tc,
                   inf_valor_agreg     iva,
                   item                i
             where gn_origem_dado_pessoa = 0 -- Dados da pessoa da nota_fiscal cadastro (Padrão) 
               and nf.empresa_id      = gt_row_abertura_gia.empresa_id
               and nf.dm_arm_nfe_terc =  0
               and nf.dm_st_proc      = 4 -- Autorizada
               and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
               and mf.id              = nf.modfiscal_id
               and mf.cod_mod         in ('01', '1B', '04', '55', '65')
               and inf.notafiscal_id  = nf.id
               and pdg.empresa_id     = nf.empresa_id
               and pdg.cfop_id        = inf.cfop_id
               and (pdg.item_id = inf.item_id or pdg.ncm_id in (select n.id from ncm n where n.cod_ncm = inf.cod_ncm))
               and dg.id              = pdg.dipamgia_id
               and p.id               = nf.pessoa_id
               and cid.id             = p.cidade_id
               and es.id              = cid.estado_id
               and ct1.cidade_id      = cid.id
               and tc1.id             = ct1.tipocodarq_id
               and tc1.cd             = '1' -- GIA-SP
               and em.id              = nf.empresa_id
               and ps.id              = em.pessoa_id
               and ci.id              = ps.cidade_id
               and et.id              = ci.estado_id
               and ct.cidade_id       = ci.id
               and tc.id              = ct.tipocodarq_id
               and tc.cd              = '1' -- GIA-SP
               and iva.item_id        = i.id
               and i.id               = inf.item_id
               and iva.dm_st_proc     = 1
               and pk_csf_gia.fkg_dipam_22_pessoa_juridica( dg.cd, nf.empresa_id, nf.pessoa_id ) = 1 	   
             group by dg.cd, 
                      decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd)
            --
            UNION
            -- 	
            select dg.cd coddip_empresa,
                   decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd) municipio_empresa,
                   sum(case
                         when trim(dg.cd) = '2.5' then
                          case
                            when es.sigla_estado = 'SP' then
                             case
                               when et.sigla_estado = 'SP' then
                                1
                               else
                                0
                             end
                            else
                             0
                          end
                         else
                          case
                            when nvl(pdg.perc_rateio_item, 0) = 0 then
                             nvl(iva.valor, 0)
                            else
                             nvl(iva.valor, 0) * nvl(pdg.perc_rateio_item, 0) / 100
                          end
                       end) valor
              from nota_fiscal         nf,
                   nota_fiscal_dest    nfd,	  
                   mod_fiscal          mf,
                   item_nota_fiscal    inf,
                   param_dipamgia      pdg,
                   dipam_gia           dg,
                   cidade              cid,
                   estado              es,
                   cidade_tipo_cod_arq ct1,
                   tipo_cod_arq        tc1,
                   empresa             em,
                   pessoa              ps,
                   cidade              ci,
                   estado              et,
                   cidade_tipo_cod_arq ct,
                   tipo_cod_arq        tc,
                   inf_valor_agreg     iva,
                   item                i
             where gn_origem_dado_pessoa = 1 -- Dados da nota_fiscal_dest
               and nf.empresa_id      = gt_row_abertura_gia.empresa_id
               and nf.dm_arm_nfe_terc = 0
               and nf.dm_st_proc      = 4 -- Autorizada
               and ((nf.dm_ind_emit = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(nf.dt_emiss, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
                     or
                    (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(nf.dt_sai_ent, nf.dt_emiss), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
               and mf.id              = nf.modfiscal_id
               and mf.cod_mod         in ('01', '1B', '04', '55', '65')
               and inf.notafiscal_id  = nf.id
               and pdg.empresa_id     = nf.empresa_id
               and pdg.cfop_id        = inf.cfop_id
               and (pdg.item_id = inf.item_id or pdg.ncm_id in (select n.id from ncm n where n.cod_ncm = inf.cod_ncm))
               and dg.id              = pdg.dipamgia_id
               and nfd.notafiscal_id  = nf.id	   
               and cid.ibge_cidade    = nfd.cidade_ibge       	   
               and es.id              = cid.estado_id
               and ct1.cidade_id      = cid.id
               and tc1.id             = ct1.tipocodarq_id
               and tc1.cd             = '1' -- GIA-SP
               and em.id              = nf.empresa_id
               and ps.id              = em.pessoa_id
               and ci.id              = ps.cidade_id
               and et.id              = ci.estado_id
               and ct.cidade_id       = ci.id
               and tc.id              = ct.tipocodarq_id
               and tc.cd              = '1' -- GIA-SP
               and iva.item_id        = i.id
               and i.id               = inf.item_id
               and iva.dm_st_proc     = 1
               and pk_csf_gia.fkg_dipam_22_pessoa_juridica( dg.cd, nf.empresa_id, nf.pessoa_id ) = 1 	   
             group by dg.cd, 
                      decode(nf.dm_ind_emit, 0, ct1.cd, ct.cd))
     group by coddip_empresa, municipio_empresa
     order by coddip_empresa, municipio_empresa;			  
  --
  --#74547
  -- Conhecimento de Transporte
  cursor c_cr_30_ct is
    select ctc.cd municipio_empresa,
           sum(case
                 when ct.dm_ind_emit = 0 and ((cfop.cd between 5351 and 5399) or
                      (cfop.cd between 6351 and 6399) or
                      (cfop.cd between 7351 and 7399)) then
                  ctv.vl_prest_serv
                 else
                  0
               end) vlr_part_1,
           sum(case
                 when ct.dm_ind_emit = 1 and cfop.cd in (1351, 1932, 2351, 3351) then
                  ctv.vl_prest_serv
                 else
                  0
               end) vlr_part_2
      from conhec_transp         ct,
           mod_fiscal            mf,
           conhec_transp_vlprest ctv,
           cidade                c,
           tipo_cod_arq          tc,
           cidade_tipo_cod_arq   ctc,
           ct_reg_anal           ctr, 
           cfop                  cfop 
     where ct.empresa_id       = gt_row_abertura_gia.empresa_id
       and mf.id               = ct.modfiscal_id
       and ctv.conhectransp_id = ct.id
       and ((gn_origem_dado_pessoa = 0 and c.ibge_cidade = ct.ibge_cidade_ini)
             or	   
            (gn_origem_dado_pessoa = 1 and c.ibge_cidade = ct.ibge_cidade_fim))	
       and tc.cd               = '1' -- GIA-SP (UK)
       and ctc.cidade_id       = c.id
       and ctc.tipocodarq_id   = tc.id
       and mf.cod_mod          in ('08', '09', '10', '11', '26', '57', '63', '67')
       and ct.dm_arm_cte_terc  = 0
       and ct.dm_st_proc       = 4 --#55532
       and ((ct.dm_ind_emit = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and to_date(ct.dt_hr_emissao, 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin) 
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and to_date(nvl(ct.dt_sai_ent, ct.dt_hr_emissao), 'dd/mm/rrrr') between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and ( -- parte 1
            (cfop.cd between 5351 and 5399) or
            (cfop.cd between 6351 and 6399) or
            (cfop.cd between 7351 and 7399) or
           -- parte 2
            (cfop.cd in (1351, 1932, 2351, 3351)))
       and ctr.conhectransp_id = ct.id 
       and cfop.id = ctr.cfop_id       
     group by ctc.cd
	 order by ctc.cd;
  --
  --
  procedure pkb_limpa_vetor_sp is
    --
  begin
    --
    vt_tab_cr01.delete;
    vt_tab_cr05.delete;
    vt_bi_tab_cr07.delete;
    vt_bi_tab_cr10.delete;
    vt_tri_tab_cr14.delete;
    vt_tetra_tab_cr18.delete;
    vt_bi_tab_cr20.delete;
    vt_tri_tab_cr25.delete;
    vt_tri_tab_cr26.delete;
    vt_tri_tab_cr27.delete;
    vt_tri_tab_cr28.delete;
    vt_bi_tab_cr30.delete;
    vt_bi_tab_cr31.delete;
    --
  end pkb_limpa_vetor_sp;
  --
  -- procedimento monta a estrutura do arquivo da GIA - SP
  procedure pkb_monta_estr_arq_gia_sp is
    --
    vn_qtde_cd07 number := 0;
    vn_qtde_cd10 number := 0;
    vn_qtde_cd14 number := 0;
    vn_qtde_cd18 number := 0;
    vn_qtde_cd20 number := 0;
    vn_qtde_cd25 number := 0;
    vn_qtde_cd26 number := 0;
    vn_qtde_cd27 number := 0;
    vn_qtde_cd28 number := 0;
    vn_qtde_cd30 number := 0;
    vn_qtde_cd31 number := 0;
    --
  begin
    --
    vn_fase := 1;
    --
    -- CR01 - Registro Mestre
    if nvl(vt_tab_cr01.count, 0) > 0 then
      --
      vn_fase := 1.1;
      --
      i := nvl(vt_tab_cr01.first, 0);
      --
      loop
        --
        vn_fase := 1.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase := 1.3;
        --
        gl_conteudo := vt_tab_cr01(i).cr;
        gl_conteudo := gl_conteudo || vt_tab_cr01(i).TipoDocto;
        gl_conteudo := gl_conteudo || vt_tab_cr01(i).DataGeracao;
        gl_conteudo := gl_conteudo || vt_tab_cr01(i).HoraGeracao;
        gl_conteudo := gl_conteudo || vt_tab_cr01(i).VersaoFrontEnd;
        gl_conteudo := gl_conteudo || vt_tab_cr01(i).VersaoPref;
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr01(i).Q05, 0), 4, '0');
        --
        vn_fase := 1.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => 'CR01',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase := 1.5;
        --
        if i = vt_tab_cr01.last then
          exit;
        else
          i := vt_tab_cr01.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase := 2;
    --
    -- CR05 - Cabeçalho do Documento Fiscal
    if nvl(vt_tab_cr05.count, 0) > 0 then
      --
      vn_fase := 2.1;
      --
      i := nvl(vt_tab_cr05.first, 0);
      --
      loop
        --
        vn_fase := 2.2;
        --
        if nvl(i, 0) = 0 then
          exit;
        end if;
        --
        vn_fase := 2.3;
        --
        gl_conteudo := vt_tab_cr05(i).cr;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).IE;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).CNPJ;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).CNAE;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).RegTrib;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).Ref;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).RefInicial;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).Tipo;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).Movimento;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).Transmitida;
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).SaldoCredPeriodoAnt, 0), 15, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).SaldoCredPeriodoAntST, 0), 15, '0');
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).OrigemSoftware;
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).OrigemPreDig;
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).ICMSFixPer, 0), 15, '0');
        gl_conteudo := gl_conteudo || vt_tab_cr05(i).ChaveInterna;
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).Q07, 0), 4, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).Q10, 0), 4, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).Q20, 0), 4, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).Q30, 0), 4, '0');
        gl_conteudo := gl_conteudo || lpad(nvl(vt_tab_cr05(i).Q31, 0), 4, '0');
        --
        vn_fase := 2.4;
        --
        pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                               ev_registrogia_cd => 'CR05',
                               el_conteudo       => gl_conteudo);
        --
        vn_fase := 3;
        --
        begin
          vn_qtde_cd07 := vt_bi_tab_cr07(i).count;
        exception
          when others then
            vn_qtde_cd07 := 0;
        end;
        --
        vn_fase := 3.1;
        --
        -- CR07 - Detalhes Pagamentos
        if nvl(vn_qtde_cd07, 0) > 0 then
          --
          vn_fase := 3.2;
          --
          j := vt_bi_tab_cr07(i).first;
          --
          vn_fase := 3.3;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase := 3.4;
            --
            gl_conteudo := vt_bi_tab_cr07(i)(j).cr;
            gl_conteudo := gl_conteudo || vt_bi_tab_cr07(i)(j).PropriaOuST;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr07(i)(j).Imposto, 0), 15, '0');
            gl_conteudo := gl_conteudo || vt_bi_tab_cr07(i)(j).Data;
            --
            vn_fase := 3.5;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'CR07',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase := 3.6;
            --
            if j = vt_bi_tab_cr07(i).last then
              exit;
            else
              j := vt_bi_tab_cr07(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase := 4;
        --
        begin
          vn_qtde_cd10 := vt_bi_tab_cr10(i).count;
        exception
          when others then
            vn_qtde_cd10 := 0;
        end;
        --
        vn_fase := 4.1;
        --
        -- CR10 - Detalhe CFOPs
        if nvl(vn_qtde_cd10, 0) > 0 then
          --
          j := vt_bi_tab_cr10(i).first;
          --
          vn_fase := 4.2;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase := 4.3;
            --
            gl_conteudo := vt_bi_tab_cr10(i)(j).cr;
            gl_conteudo := gl_conteudo || rpad(vt_bi_tab_cr10(i)(j).CFOP, 6, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).ValorContabil, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).BaseCalculo, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).Imposto, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).IsentasNaoTrib, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).Outras, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).ImpostoRetidoST, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).ImpRetSubstitutoST, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).ImpRetSubstituido, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).OutrosImpostos, 0), 15, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr10(i)(j).Q14, 0), 4, '0');
            --
            vn_fase := 4.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'CR10',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase := 5;
            --
            begin
              vn_qtde_cd14 := vt_tri_tab_cr14(i)(j).count;
            exception
              when others then
                vn_qtde_cd14 := 0;
            end;
            --
            vn_fase := 5.1;
            --
            -- CR14 - Detalhes Interestaduais
            if nvl(vn_qtde_cd14, 0) > 0 then
              --
              k := vt_tri_tab_cr14(i)(j).first;
              --
              vn_fase := 5.2;
              --
              loop
                --
                if nvl(k, 0) = 0 then
                  exit;
                end if;
                --
                vn_fase := 5.3;
                --
                gl_conteudo := vt_tri_tab_cr14(i) (j)(k).cr;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr14(i) (j)(k).UF;
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).Valor_Contabil_1, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).BaseCalculo_1, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).Valor_Contabil_2, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).BaseCalculo_2, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).Imposto, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).Outras, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).ICMSCobradoST, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).PetroleoEnergia, 0), 15, '0');
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).Outros_Produtos, 0), 15, '0');
                gl_conteudo := gl_conteudo || nvl(vt_tri_tab_cr14(i)(j)(k).Benef, 0);
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr14(i)(j)(k).Q18, 0), 4, '0');
                --
                vn_fase := 5.4;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'CR14',
                                       el_conteudo       => gl_conteudo);
                --
                vn_fase := 6;
                --
                begin
                  vn_qtde_cd18 := vt_tetra_tab_cr18(i) (j)(k).count;
                exception
                  when others then
                    vn_qtde_cd18 := 0;
                end;
                --
                vn_fase := 6.1;
                --
                -- CR18 - ZFM/ALC
                if nvl(vn_qtde_cd18, 0) > 0 then
                  --
                  l := vt_tetra_tab_cr18(i) (j)(k).first;
                  --
                  vn_fase := 6.2;
                  --
                  loop
                    --
                    if nvl(l, 0) = 0 then
                      exit;
                    end if;
                    --
                    vn_fase := 6.3;
                    --
                    gl_conteudo := vt_tetra_tab_cr18(i)(j)(k)(l).cr;
                    gl_conteudo := gl_conteudo || vt_tetra_tab_cr18(i)(j)(k)(l).NF;
                    gl_conteudo := gl_conteudo || vt_tetra_tab_cr18(i)(j)(k)(l).Data;
                    gl_conteudo := gl_conteudo || lpad(nvl(vt_tetra_tab_cr18(i)(j)(k)(l).Valor, 0), 15, '0');
                    gl_conteudo := gl_conteudo || vt_tetra_tab_cr18(i)(j)(k)(l).CNPJDest;
                    gl_conteudo := gl_conteudo || vt_tetra_tab_cr18(i)(j)(k)(l).MunicipioDest;
                    --
                    vn_fase := 6.4;
                    --
                    pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                           ev_registrogia_cd => 'CR18',
                                           el_conteudo       => gl_conteudo);
                    --
                    vn_fase := 6.5;
                    --
                    if l = vt_tetra_tab_cr18(i)(j)(k).last then
                      exit;
                    else
                      l := vt_tetra_tab_cr18(i)(j)(k).next(l);
                    end if;
                    --
                  end loop; -- fim CR18
                  --
                end if;
                --
                vn_fase := 6.6;
                --
                if k = vt_tri_tab_cr14(i)(j).last then
                  exit;
                else
                  k := vt_tri_tab_cr14(i)(j).next(k);
                end if;
                --
              end loop; -- fim CR14
              --
            end if;
            --
            vn_fase := 6.7;
            --
            if j = vt_bi_tab_cr10(i).last then
              exit;
            else
              j := vt_bi_tab_cr10(i).next(j);
            end if;
            --
          end loop; -- fim CR10
          --
        end if;
        --
        vn_fase := 7;
        --
        begin
          vn_qtde_cd20 := vt_bi_tab_cr20(i).count;
        exception
          when others then
            vn_qtde_cd20 := 0;
        end;
        --
        vn_fase := 7.1;
        --
        -- CR20 - Ocorrências
        if nvl(vn_qtde_cd20, 0) > 0 then
          --
          j := vt_bi_tab_cr20(i).first;
          --
          vn_fase := 7.2;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase := 7.3;
            --
            gl_conteudo := vt_bi_tab_cr20(i)(j).cr;
            gl_conteudo := gl_conteudo || vt_bi_tab_cr20(i)(j).CodSubItem;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr20(i)(j).Valor, 0), 15, '0');
            gl_conteudo := gl_conteudo || vt_bi_tab_cr20(i)(j).PropriaOuST;
            gl_conteudo := gl_conteudo || vt_bi_tab_cr20(i)(j).FLegal;
            gl_conteudo := gl_conteudo || vt_bi_tab_cr20(i)(j).Ocorrencia;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr20(i)(j).Q25, 0), 4, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr20(i)(j).Q26, 0), 4, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr20(i)(j).Q27, 0), 4, '0');
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr20(i)(j).Q28, 0), 4, '0');
            --
            vn_fase := 7.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'CR20',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase := 8;
            --
            begin
              vn_qtde_cd25 := vt_tri_tab_cr25(i)(j).count;
            exception
              when others then
                vn_qtde_cd25 := 0;
            end;
            --
            vn_fase := 8.1;
            --
            -- CR25 - IEs
            if nvl(vn_qtde_cd25, 0) > 0 then
              --
              k := vt_tri_tab_cr25(i)(j).first;
              --
              vn_fase := 8.2;
              --
              loop
                --
                if nvl(k, 0) = 0 then
                  exit;
                end if;
                --
                vn_fase := 8.3;
                --
                gl_conteudo := vt_tri_tab_cr25(i) (j)(k).cr;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr25(i)(j)(k).IE;
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr25(i)(j)(k).Valor, 0), 15, '0');
                --
                vn_fase := 8.4;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'CR25',
                                       el_conteudo       => gl_conteudo);
                --
                vn_fase := 8.5;
                --
                if k = vt_tri_tab_cr25(i)(j).last then
                  exit;
                else
                  k := vt_tri_tab_cr25(i)(j).next(k);
                end if;
                --
              end loop; -- fim CR25
              --
            end if;
            --
            vn_fase := 9;
            --
            begin
              vn_qtde_cd26 := vt_tri_tab_cr26(i)(j).count;
            exception
              when others then
                vn_qtde_cd26 := 0;
            end;
            --
            vn_fase := 9.1;
            --
            -- CR26 - IESubstituto
            if nvl(vn_qtde_cd26, 0) > 0 then
              --
              k := vt_tri_tab_cr26(i)(j).first;
              --
              vn_fase := 9.2;
              --
              loop
                --
                if nvl(k, 0) = 0 then
                  exit;
                end if;
                --
                vn_fase := 9.3;
                --
                gl_conteudo := vt_tri_tab_cr26(i)(j)(k).cr;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr26(i)(j)(k).IESubstituto;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr26(i)(j)(k).NF;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr26(i)(j)(k).DataInicio;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr26(i)(j)(k).DataFim;
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr26(i)(j)(k).Valor, 0), 15, '0');
                --
                vn_fase := 9.4;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'CR26',
                                       el_conteudo       => gl_conteudo);
                --
                vn_fase := 9.5;
                --
                if k = vt_tri_tab_cr26(i)(j).last then
                  exit;
                else
                  k := vt_tri_tab_cr26(i)(j).next(k);
                end if;
                --
              end loop; -- fim CR26
              --
            end if;
            --
            vn_fase := 10;
            --
            begin
              vn_qtde_cd27 := vt_tri_tab_cr27(i)(j).count;
            exception
              when others then
                vn_qtde_cd27 := 0;
            end;
            --
            vn_fase := 10.1;
            --
            -- CR27 - IESubstituido
            if nvl(vn_qtde_cd27, 0) > 0 then
              --
              k := vt_tri_tab_cr27(i)(j).first;
              --
              vn_fase := 10.2;
              --
              loop
                --
                if nvl(k, 0) = 0 then
                  exit;
                end if;
                --
                vn_fase := 10.3;
                --
                gl_conteudo := vt_tri_tab_cr27(i)(j)(i).cr;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr27(i)(j)(i).IESubstituido;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr27(i)(j)(i).NF;
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr27(i)(j)(i).Valor, 0), 15, '0');
                --
                vn_fase := 10.4;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'CR27',
                                       el_conteudo       => gl_conteudo);
                --
                vn_fase := 10.5;
                --
                if k = vt_tri_tab_cr27(i)(j).last then
                  exit;
                else
                  k := vt_tri_tab_cr27(i)(j).next(k);
                end if;
                --
              end loop; -- fim CR27
              --
            end if;
            --
            vn_fase := 11;
            --
            begin
              vn_qtde_cd28 := vt_tri_tab_cr28(i)(j).count;
            exception
              when others then
                vn_qtde_cd28 := 0;
            end;
            --
            vn_fase := 11.1;
            --
            -- CR28 - Crédito Acumulado / Ressarcimento ST
            if nvl(vn_qtde_cd28, 0) > 0 then
              --
              k := vt_tri_tab_cr28(i)(j).first;
              --
              vn_fase := 11.2;
              --
              loop
                --
                if nvl(k, 0) = 0 then
                  exit;
                end if;
                --
                vn_fase := 11.3;
                --
                gl_conteudo := vt_tri_tab_cr28(i)(j)(i).cr;
                gl_conteudo := gl_conteudo || vt_tri_tab_cr28(i)(j)(i).CodAutorizacao;
                gl_conteudo := gl_conteudo || lpad(nvl(vt_tri_tab_cr28(i)(j)(i).Valor, 0), 15, '0');
                --
                vn_fase := 11.4;
                --
                pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                       ev_registrogia_cd => 'CR28',
                                       el_conteudo       => gl_conteudo);
                --
                vn_fase := 11.5;
                --
                if k = vt_tri_tab_cr28(i)(j).last then
                  exit;
                else
                  k := vt_tri_tab_cr28(i)(j).next(k);
                end if;
                --
              end loop; -- fim CR28
              --
            end if;
            --
            vn_fase := 11.6;
            --
            if j = vt_bi_tab_cr20(i).last then
              exit;
            else
              j := vt_bi_tab_cr20(i).next(j);
            end if;
            --
          end loop; -- fim CR20
          --
        end if;
        --
        vn_fase := 12;
        --
        begin
          vn_qtde_cd30 := vt_bi_tab_cr30(i).count;
        exception
          when others then
            vn_qtde_cd30 := 0;
        end;
        --
        vn_fase := 12.1;
        --
        -- CR30 - DIPAM-B
        if nvl(vn_qtde_cd30, 0) > 0 then
          --
          j := vt_bi_tab_cr30(i).first;
          --
          vn_fase := 12.2;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase := 12.3;
            --
            gl_conteudo := vt_bi_tab_cr30(i)(j).cr;
            gl_conteudo := gl_conteudo || vt_bi_tab_cr30(i)(j).CodDIP;
            gl_conteudo := gl_conteudo || vt_bi_tab_cr30(i)(j).Municipio;
            gl_conteudo := gl_conteudo || lpad(nvl(vt_bi_tab_cr30(i)(j).Valor, 0), 15, '0');
            --
            vn_fase := 12.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'CR30',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase := 12.5;
            --
            if j = vt_bi_tab_cr30(i).last then
              exit;
            else
              j := vt_bi_tab_cr30(i).next(j);
            end if;
            --
          end loop; -- fim CR30
          --
        end if;
        --
        vn_fase := 13;
        --
        begin
          vn_qtde_cd31 := vt_bi_tab_cr31(i).count;
        exception
          when others then
            vn_qtde_cd31 := 0;
        end;
        --
        vn_fase := 13.1;
        --
        -- CR31 - Registro de Exportação
        if nvl(vn_qtde_cd31, 0) > 0 then
          --
          j := vt_bi_tab_cr31(i).first;
          --
          vn_fase := 13.2;
          --
          loop
            --
            if nvl(j, 0) = 0 then
              exit;
            end if;
            --
            vn_fase := 13.3;
            --
            gl_conteudo := vt_bi_tab_cr31(i)(j).cr;
            gl_conteudo := gl_conteudo || vt_bi_tab_cr31(i)(j).RE;
            --
            vn_fase := 13.4;
            --
            pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                   ev_registrogia_cd => 'CR31',
                                   el_conteudo       => gl_conteudo);
            --
            vn_fase := 13.5;
            --
            if j = vt_bi_tab_cr31(i).last then
              exit;
            else
              j := vt_bi_tab_cr31(i).next(j);
            end if;
            --
          end loop;
          --
        end if;
        --
        vn_fase := 13.6;
        --
        if i = vt_tab_cr05.last then
          exit;
        else
          i := vt_tab_cr05.next(i);
        end if;
        --
      end loop;
      --
    end if;
    --
    vn_fase := 14;
    --
    pkb_limpa_vetor_sp;
    --
  exception
    when others then
      raise_application_error(-20101, 'Erro na pkb_monta_estr_arq_gia_sp fase (' || vn_fase || '): ' || sqlerrm);
  end pkb_monta_estr_arq_gia_sp;
  --
begin
  --
  vn_fase := 1;
  --
  -- Recupera o parâmetro "somar os valores de impostos de ICMS-ST e
  -- IPI não recuperado na base de cálculo outras de ICMS"
  begin
    select e.dm_sm_icmsst_ipinrec_bs_outr
      into vn_dmsmicmsstipinrecbsoutr
      from empresa e
     where e.id = gt_row_abertura_gia.empresa_id;
  exception
    when others then
      vn_dmsmicmsstipinrecbsoutr := 0;
  end;
  --
  gv_tipocodarq_cd := '1'; -- GIA-SP
  --
  pkb_limpa_vetor_sp;
  --
  vn_fase := 1.1;
  --
  -- CR01 - Registro Mestre
  vt_tab_cr01(1).cr             := '01'; -- Código de registro
  vt_tab_cr01(1).TipoDocto      := '01'; -- TipoDocto-Identifica tipo do documento
  vt_tab_cr01(1).DataGeracao    := to_char(sysdate, 'RRRRMMDD'); -- DataGeração-Data da geração do arquivo Préformatado-NG
  vt_tab_cr01(1).HoraGeracao    := to_char(sysdate, 'hh24miss'); -- HoraGeração-Hora da geração do arquivo Préformatado-NG
  vt_tab_cr01(1).VersaoFrontEnd := '0000'; -- VersãoFrontEnd-Versão do sistema NOVA GIA
  --
  vn_fase := 1.2;
  --
  vt_tab_cr01(1).VersaoPref := pk_csf_gia.fkg_versaogia_cd(en_versaogia_id => gt_row_abertura_gia.versaogia_id); -- Versão do Layout do Pré-formatado-NG
  vt_tab_cr01(1).Q05 := 1;
  --
  vn_fase := 2;
  --
  -- CR05 - Cabeçalho do Documento Fiscal
  vt_tab_cr05(1).cr := '05'; -- Código do registro
  vt_tab_cr05(1).IE := lpad(nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0), 12, '0'); -- Inscrição Estadual
  --
  vn_fase := 2.1;
  --
  vt_tab_cr05(1).CNPJ := pk_csf.fkg_cnpj_ou_cpf_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id);
  --
  vn_fase := 2.2;
  --
  -- t_tab_cr05(1).CNAE := pk_csf.fkb_retorna_cnae ( en_empresa_id => gt_row_abertura_gia.empresa_id );
  --
  vn_fase := 2.3;
  --
  if trim(vt_tab_cr05(1).CNAE) is null then
    --
    vt_tab_cr05(1).CNAE := '0';
    --
  end if;
  --
  vn_fase := 2.4;
  --
  vt_tab_cr05(1).CNAE := lpad(vt_tab_cr05(1).CNAE, 7, '0');
  --
  vn_fase := 2.5;
  --
  -- Regime Tributário
  vt_tab_cr05(1).RegTrib := pk_csf_gia.fkg_regtribgia_cd(en_regtribgia_id => gt_row_abertura_gia.regtribgia_id);
  --
  vn_fase := 2.6;
  --
  vt_tab_cr05(1).Ref := to_char(gt_row_abertura_gia.dt_ini, 'rrrrmm');
  --
  vn_fase := 2.7;
  --
  if vt_tab_cr05(1).RegTrib in ('01', '03', '04') then
    --
    vt_tab_cr05(1).RefInicial := lpad('0', 6, '0');
    --
  else
    --
    vt_tab_cr05(1).RefInicial := to_char(gt_row_abertura_gia.dt_fin, 'rrrrmm');
    --
  end if;
  --
  vn_fase := 2.8;
  --
  vt_tab_cr05(1).Tipo        := gt_row_abertura_gia.dm_tipo_gia; -- Tipo da GIA
  vt_tab_cr05(1).Movimento   := 0; -- Indica se houve movimento
  vt_tab_cr05(1).Transmitida := 0; -- Indica se o Documento Fiscal já foi transmitido
  --
  vn_fase := 2.9;
  --
  begin
    select vl_saldo_credor_ant
      into vn_vl_saldo_credor_ant
      from apuracao_icms
     where empresa_id        = gt_row_abertura_gia.empresa_id
       and dm_situacao       = 3 -- Processada
       and dm_tipo           = 0 -- Real
       and trunc(dt_inicio) >= gt_row_abertura_gia.dt_ini
       and trunc(dt_fim)    <= gt_row_abertura_gia.dt_fin;
  exception
    when others then
      vn_vl_saldo_credor_ant := 0;
  end;
  --
  vn_fase := 2.10;
  --
  if nvl(vn_vl_saldo_credor_ant, 0) > 0 then
    --
    vt_tab_cr05(1).SaldoCredPeriodoAnt := (nvl(vn_vl_saldo_credor_ant, 0) * 100);
    --
  else
    --
    vt_tab_cr05(1).SaldoCredPeriodoAnt := 0;
    --
  end if;
  --
  vn_fase := 2.11;
  --
  if vt_tab_cr05(1).RegTrib = '04' then
    --
    vt_tab_cr05(1).SaldoCredPeriodoAntST := 0;
    --
  else
    --
    -- Soma somente de SP
    begin
      select sum(ai.vl_saldo_cred_ant_st)
        into vn_vl_saldo_cred_ant_st
        from per_apur_icms_st p, 
             apuracao_icms_st ai, 
             estado est
       where p.empresa_id        = gt_row_abertura_gia.empresa_id
         and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
         and p.dm_tipo           = 0 -- Real
         and ai.perapuricmsst_id = p.id
         and ai.dm_situacao      = 3 -- Processada
         and est.id              = ai.estado_id
         and est.sigla_estado    = 'SP';
    exception
      when others then
        vn_vl_saldo_cred_ant_st := 0;
    end;
    --
  end if;
  --
  vn_fase := 2.12;
  --
  if nvl(vn_vl_saldo_cred_ant_st, 0) > 0 then
    --
    vt_tab_cr05(1).SaldoCredPeriodoAntST := (nvl(vn_vl_saldo_cred_ant_st, 0) * 100);
    --
  else
    --
    vt_tab_cr05(1).SaldoCredPeriodoAntST := 0;
    --
  end if;
  --
  vn_fase := 2.13;
  --
  begin
    select lpad(j.num_cnpj, 8, '0') || lpad(j.num_filial, 4, '0') ||
           lpad(j.dig_cnpj, 2, '0')
      into vt_tab_cr05(1).OrigemSoftware
      from resp_tec_sist rts, 
           juridica j
     where rts.id      = gt_row_abertura_gia.resptecsist_id
       and j.pessoa_id = rts.pessoa_id;
  exception
    when others then
      vt_tab_cr05(1).OrigemSoftware := '00000000000000';
  end;
  --
  vn_fase := 2.14;
  --
  vt_tab_cr05(1).OrigemPreDig := 0; -- Indica se o arquivo Pré-formatado-NG
  --
  vn_fase := 2.15;
  --
  -- Se RegTrib = 02 Conteúdo > ZEROS
  if vt_tab_cr05(1).RegTrib = '02' then
    --
    begin
      select vl_icms_recolher
        into vn_vl_icms_recolher
        from apuracao_icms
       where empresa_id        = gt_row_abertura_gia.empresa_id
         and dm_situacao       = 3 -- Processada
         and dm_tipo           = 0 -- Real
         and trunc(dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(dt_fim)    <= gt_row_abertura_gia.dt_fin;
    exception
      when others then
        vn_vl_icms_recolher := 0;
    end;
    --
    vt_tab_cr05(1).ICMSFixPer := (nvl(vn_vl_icms_recolher, 0) * 100);
    --
  else
    --
    vt_tab_cr05(1).ICMSFixPer := 0;
    --
  end if;
  --
  vn_fase := 2.16;
  --
  vt_tab_cr05(1).ChaveInterna := lpad('0', 32, '0'); -- Chave Interna
  vt_tab_cr05(1).Q07 := 0;
  vt_tab_cr05(1).Q10 := 0;
  vt_tab_cr05(1).Q20 := 0;
  vt_tab_cr05(1).Q30 := 0;
  vt_tab_cr05(1).Q31 := 0;
  --
  vn_fase := 3;
  --
  j := 0;
  --
  vn_qtde_reg := 0;
  --
  for rec in c_apur_icms loop
    exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
    --
    vn_fase := 3.1;
    --
    j := nvl(j, 0) + 1;
    --
    -- CR07 - Detalhes Pagamentos
    vt_bi_tab_cr07(1)(j).cr          := '07';
    vt_bi_tab_cr07(1)(j).PropriaOuST := '0'; -- Própria
    vt_bi_tab_cr07(1)(j).Imposto     := (nvl(rec.vl_orig_rec, 0) * 100);
    vt_bi_tab_cr07(1)(j).Data        := to_char(rec.dt_vencto_obrig, 'rrrrmmdd');
    --
    vn_fase := 3.2;
    --
    vt_tab_cr05(1).Q07 := nvl(vt_tab_cr05(1).Q07, 0) + 1;
    --
    vn_qtde_reg := nvl(vn_qtde_reg, 0) + 1;
    --
    -- Informar no máximo 5 linhas para ST-Própria
    if vn_qtde_reg > 4 then
      --
      exit;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 4;
  --
  vn_qtde_reg := 0;
  --
  for rec2 in c_apur_icmsst loop
    exit when c_apur_icmsst%notfound or(c_apur_icmsst%notfound) is null;
    --
    vn_fase := 4.1;
    --
    j := nvl(j, 0) + 1;
    --
    -- CR07 - Detalhes Pagamentos
    vt_bi_tab_cr07(1)(j).cr          := '07';
    vt_bi_tab_cr07(1)(j).PropriaOuST := '1'; -- ST
    vt_bi_tab_cr07(1)(j).Imposto     := (nvl(rec2.vl_orig_rec, 0) * 100);
    vt_bi_tab_cr07(1)(j).Data        := to_char(rec2.dt_vencto_obrig, 'rrrrmmdd');
    --
    vn_fase := 4.2;
    --
    vt_tab_cr05(1).Q07 := nvl(vt_tab_cr05(1).Q07, 0) + 1;
    --
    vn_qtde_reg := nvl(vn_qtde_reg, 0) + 1;
    --
    -- Informar no máximo 5 linhas para ICMS-ST
    if vn_qtde_reg > 4 then
      --
      exit;
      --
    end if;
    --
  end loop;
  --
  vn_fase := 5;
  --
  for rec in c_det_cfop loop
    exit when c_det_cfop%notfound or(c_det_cfop%notfound) is null;
    --
    vn_fase := 5.1;
    --
    vn_cfop                   := 0;
    vn_vl_contabil            := 0;
    vv_cod_st_icms            := null;
    vn_vl_base_calc_icms      := 0;
    vn_aliq_icms              := 0;
    vn_vl_imp_trib_icms       := 0;
    vn_vl_base_calc_icmsst    := 0;
    vn_vl_imp_trib_icmsst     := 0;
    vn_vl_bc_isenta_icms      := 0;
    vn_vl_bc_outra_icms       := 0;
    vv_cod_st_ipi             := null;
    vn_vl_base_calc_ipi       := 0;
    vn_aliq_ipi               := 0;
    vn_vl_imp_trib_ipi        := 0;
    vn_vl_bc_isenta_ipi       := 0;
    vn_vl_bc_outra_ipi        := 0;
    vn_ipi_nao_recup          := 0;
    vn_outro_ipi              := 0;
    --
    vn_base_calculo           := null;
    vn_imposto                := null;
    vn_imp_ret_st             := null;
    vn_imp_ret_substituto_st  := null;
    vn_imp_ret_substituido_st := null;
    --
    vn_estado_id              := null;
    vn_cidade_id              := null;
    vn_tipocodarq_id          := null;
    vv_estadotipocodarq_cd    := null;
    vv_cidadetipocodarq_cd    := null;
    vn_valor_contabil_1       := null;
    vn_base_calculo_1         := null;
    vn_valor_contabil_2       := null;
    vn_base_calculo_2         := null;
    vn_ICMSCobradoST          := null;
    vn_Outros_Produtos        := null;
    vv_cnpj_dest              := null;
    vn_outros_impostos        := null;
    vn_vl_fcp_icmsst          := null;
    vn_aliq_fcp_icms          := null;
    vn_vl_fcp_icms            := null;
    --
    vn_fase := 5.2;
    --
    -- 1 - Oper.com crédito do imposto
    -- 2 - Oper.sem crédito do imposto (Isentas ou não Tributadas)
    -- 3 - Oper.sem crédito do imposto (Outras)
    -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de nota fiscal
    pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec.itemnf_id,
                                      sn_cfop                => vn_cfop,
                                      sn_vl_operacao         => vn_vl_contabil,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                      sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                      sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                      sv_cod_st_ipi          => vv_cod_st_ipi,
                                      sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi,
                                      sn_aliq_ipi            => vn_aliq_ipi,
                                      sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi,
                                      sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi,
                                      sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi,
                                      sn_ipi_nao_recup       => vn_ipi_nao_recup,
                                      sn_outro_ipi           => vn_outro_ipi,
                                      sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                      sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                      sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                      sn_vl_fcp_icms         => vn_vl_fcp_icms);
    --
    vn_fase := 5.3;
    --
    -- Inicia montagem do registro CR10
    if trim(vv_cod_st_icms) is not null and
       (nvl(vn_vl_contabil, 0) <> 0 or nvl(vn_base_calculo, 0) <> 0 or
        nvl(vn_vl_imp_trib_icms, 0) <> 0 or
        nvl(vn_vl_bc_isenta_icms, 0) <> 0 or
        nvl(vn_vl_bc_outra_icms, 0) <> 0 or
        nvl(vn_vl_imp_trib_icmsst, 0) <> 0 or
        nvl(vn_vl_imp_trib_ipi, 0) <> 0 or nvl(vn_ipi_nao_recup, 0) <> 0 or
        nvl(vn_outro_ipi, 0) <> 0) then
      --
      vn_fase := 5.4;
      --
      vn_base_calculo := nvl(vn_vl_base_calc_icms, 0); --nvl(vn_vl_base_calc_icms, 0) * 100;
      vn_imposto      := (nvl(vn_vl_imp_trib_icms, 0) + nvl(vn_vl_fcp_icms, 0)); -- * 100;
      vn_imp_ret_st   := 0;
      --
      vn_fase := 5.5;
      --
      -- Verifica se o parâmetro "Forma de geração de base isenta e outras" encontra-se como "Calculado (0)" 
      -- e o parâmetro "Somar os valores de impostos de ICMS-ST e IPI não recuperado na base de cálculo outras de ICMS" encontra-se como "Sim (1)"
      -- caso estejam, acumula os valores de IPI, ICMS-ST e FCP na Base Outras de ICMS
      if pk_csf.fkg_empresa_dmformademb_icms(en_empresa_id => gt_row_abertura_gia.empresa_id) = 0 and vn_dmsmicmsstipinrecbsoutr = 1 then
        --
        vn_vl_bc_outra_icms   := nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_imp_trib_ipi, 0) + nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0);
        vn_vl_imp_trib_ipi    := 0;
        vn_vl_imp_trib_icmsst := 0;
        vn_vl_fcp_icmsst      := 0;
        --
      else
        --
        vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0);
        --
      end if;
      --
      vn_fase := 5.6;
      --
      if nvl(fkg_vlr_icmsst_conf_cfop(vn_cfop, nvl(vn_vl_imp_trib_icmsst, 0)), 0) > 0 then
        --
        -- Emissão Própria -- o que é responsável pela apuração e recolhimento do imposto retido por substituição.
        if rec.dm_ind_emit = 0 then
          --
          vn_imp_ret_substituto_st := fkg_vlr_icmsst_conf_cfop(vn_cfop,
                                                               (nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0)));
          --
        -- NF de terceiro de operação de entrada e cfop de devolução
        elsif rec.dm_ind_emit = 1 and rec.dm_ind_oper = 0 and pk_csf.fkg_cd_tipooper_conf_cfop(rec.cd_cfop) = 3 then
          --
          vn_imp_ret_substituto_st := fkg_vlr_icmsst_conf_cfop(vn_cfop,
                                                               (nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0)));
          --
        -- Terceiros -- o que comercializa (compra e/ou vende) mercadorias sujeitas à substituição tributária, mas que o imposto já tenha sido retido em fase anterior
        elsif rec.dm_ind_emit = 1 then
          --
          vn_imp_ret_substituido_st := fkg_vlr_icmsst_conf_cfop(vn_cfop,
                                                                (nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0)));
          --
        end if;
        --
      else
        --
        vn_imp_ret_substituto_st  := 0;
        vn_imp_ret_substituido_st := 0;
        vn_outros_impostos        := nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0); --((nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0)) * 100);
        --
      end if;
      --
      vn_fase := 5.7;
      --
      -- Se o parâmetro "Forma de geração de base Isenta e Outras" estiver como "0 - Cálculado"  
      -- e o parâmetro "Somar os valores de impostos de ICMS-ST e IPI não recuperado na base de cálculo outras de ICMS" estiver como "0 - Não"
      -- e o valor outros impostos "VN_OUTROS_IMPOSTOS" estiver zerado
      -- recupera o valor outros impostos do ICMS-ST do item e desconta da base de cálculo outra do ICMS
      if pk_csf.fkg_empresa_dmformademb_icms(en_empresa_id => gt_row_abertura_gia.empresa_id) = 0 
        and vn_dmsmicmsstipinrecbsoutr = 0 
          and vn_imp_ret_substituido_st = 0 then 
        --
        begin
          select sum(nvl(ii.vl_imp_outro, 0))
            into vn_imp_ret_substituido_st 
            from imp_itemnf ii, 
                 tipo_imposto ti
           where ii.tipoimp_id = ti.id
             and ti.cd         = '2' -- ICMS-ST
             and ii.itemnf_id  = rec.itemnf_id; 
        exception
          when others then
            vn_imp_ret_substituido_st := 0;
        end;
        --
        if nvl(vn_vl_bc_outra_icms, 0) > 0 then
          vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0) - nvl(vn_imp_ret_substituido_st, 0);
        elsif nvl(vn_vl_bc_isenta_icms, 0) > 0 then
          vn_vl_bc_isenta_icms := nvl(vn_vl_bc_isenta_icms, 0) - nvl(vn_imp_ret_substituido_st, 0);
        end if;
        --
        -- Caso tenha dado algum valor negativo na subtração, trata as 
        -- variáveis para não saiam no arquivo com esse valor
        if nvl(vn_vl_bc_outra_icms, 0) < 0 then
          vn_vl_bc_outra_icms := 0;
        elsif nvl(vn_vl_bc_isenta_icms, 0) < 0 then
          vn_vl_bc_isenta_icms := 0;
        end if;
        --
      end if;
      --
      vn_fase := 5.8;
      --
      -- Se o parâmetro "Forma de geração de base Isenta e Outras" estiver como "0 - Cálculado"  
      -- e o parâmetro "Somar os valores de impostos de ICMS-ST e IPI não recuperado na base de cálculo outras de ICMS" estiver como "0 - Não"
      -- e o valor outros impostos "VN_OUTROS_IMPOSTOS" estiver zerado
      -- recupera o valor outros impostos do IPI do item e desconta da base de cálculo outra do ICMS
      if pk_csf.fkg_empresa_dmformademb_icms(en_empresa_id => gt_row_abertura_gia.empresa_id) = 0 
        and vn_dmsmicmsstipinrecbsoutr = 0 
          and vn_outros_impostos = 0 then 
        --
        begin
          select sum(nvl(ii.vl_imp_outro, 0))
            into vn_outros_impostos
            from imp_itemnf ii, 
                 tipo_imposto ti
           where ii.tipoimp_id = ti.id
             and ti.cd         = '3' -- IPI
             and ii.itemnf_id  = rec.itemnf_id; 
        exception
          when others then
            vn_outros_impostos := 0;
        end;
        --
        if nvl(vn_vl_bc_outra_icms, 0) > 0 then
          vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0) - nvl(vn_outros_impostos, 0);
        elsif nvl(vn_vl_bc_isenta_icms, 0) > 0 then
          vn_vl_bc_isenta_icms := nvl(vn_vl_bc_isenta_icms, 0) - nvl(vn_outros_impostos, 0);
        end if;
        --
        -- Caso tenha dado algum valor negativo na subtração, trata as 
        -- variáveis para não saiam no arquivo com esse valor
        if nvl(vn_vl_bc_outra_icms, 0) < 0 then
          vn_vl_bc_outra_icms := 0;
        elsif nvl(vn_vl_bc_isenta_icms, 0) < 0 then
          vn_vl_bc_isenta_icms := 0;
        end if;
        --
      end if;
      --
      vn_fase := 5.9;
      --
      begin
        vb_achou := vt_bi_tab_cr10(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 5.10;
      --
      if not vb_achou then
        --
        vn_fase := 5.11;
        --
        -- CR10 - Detalhe CFOPs -- Notas Fiscal modelos 01, 1B, 04 e 55
        vt_bi_tab_cr10(1)(vn_cfop).cr                 := '10';
        vt_bi_tab_cr10(1)(vn_cfop).CFOP               := vn_cfop;
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := (nvl(vn_base_calculo, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := (nvl(vn_imposto, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := (nvl(vn_imp_ret_st, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := (nvl(vn_imp_ret_substituto_st, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := ((nvl(vn_outros_impostos, 0) + nvl(vn_vl_imp_trib_ipi, 0) + nvl(vn_ipi_nao_recup, 0) + nvl(vn_outro_ipi, 0)) * 100); -- FCP-ICMS-ST está somado acima
        vt_bi_tab_cr10(1)(vn_cfop).Q14                := 0;
        --
        vt_tab_cr05(1).Q10 := nvl(vt_tab_cr05(1).Q10, 0) + 1;
        --
      else
        --
        vn_fase := 5.12;
        --
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := vt_bi_tab_cr10(1)(vn_cfop).ValorContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo + (nvl(vn_base_calculo, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := vt_bi_tab_cr10(1)(vn_cfop).Imposto + (nvl(vn_imposto, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := vt_bi_tab_cr10(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST + (nvl(vn_imp_ret_st, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST + (nvl(vn_imp_ret_substituto_st, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido + (nvl(vn_imp_ret_substituido_st, 0) * 100); 
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos + ((nvl(vn_outros_impostos, 0) + nvl(vn_vl_imp_trib_ipi, 0) + nvl(vn_ipi_nao_recup, 0) + nvl(vn_outro_ipi, 0)) * 100); -- FCP-ICMS-ST está somado acima
        --
      end if;
      --
      vn_fase := 6;
      --
      if substr(vn_cfop, 1, 1) in ('2', '6') then
        --
        vn_fase := 6.1;
        --
        vn_estado_id      := null;
        vn_cidade_id      := null;
        vn_dm_ind_ie_dest := null;
        --
        -- 0 - Emissão Própria
        if rec.dm_ind_emit = 0 then
          --
          -- Recuperar o estado_id, a cidade_id e o indicador de contribuinte do destinatário da nota e não do participante
          begin
            select pk_csf.fkg_estado_id(nd.uf),
                   pk_csf.fkg_cidade_ibge_id(nd.cidade_ibge),
                   nd.dm_ind_ie_dest,
                   nd.uf
              into vn_estado_id,
                   vn_cidade_id,
                   vn_dm_ind_ie_dest,
                   vn_estado_uf
              from nota_fiscal_dest nd
             where nd.notafiscal_id = rec.notafiscal_id;
          exception
            when others then
              vn_estado_id      := null;
              vn_cidade_id      := null;
              vn_dm_ind_ie_dest := null;
          end;
          --
          begin
            select max(id)
              into vn_nflocal_id
              from nota_fiscal_local
             where notafiscal_id = rec.notafiscal_id;
          exception
            when others then
              vn_nflocal_id := 0;
          end;
          --
          -- Verifica se o emitente é do mesmo estado do destinatário
          -- e se existem informações na nota fiscal local
          if vn_estado_uf = 'SP' and nvl(vn_nflocal_id, 0) > 0 then
            --
            begin
              select pk_csf.fkg_estado_id(nl.uf),
                     pk_csf.fkg_cidade_ibge_id(nl.cidade_ibge)
                into vn_estado_id, 
                     vn_cidade_id
                from nota_fiscal_local nl
               where nl.notafiscal_id = rec.notafiscal_id;
            exception
              when others then
                vn_estado_id := 0;
                vn_cidade_id := 0;
            end;
            --
          end if;
          --
          -- 1 - Terceiro
        else
          --
          -- rec.dm_ind_emit = 1 -- 0-emissão própria, 1-terceiro
          -- recuperar o indicador de contribuinte do destinatário
          begin
            select nd.dm_ind_ie_dest
              into vn_dm_ind_ie_dest
              from nota_fiscal_dest nd
             where nd.notafiscal_id = rec.notafiscal_id;
          exception
            when others then
              vn_dm_ind_ie_dest := null;
          end;
          --
        end if;
        --
        vn_fase := 6.2;
        --
        if vn_estado_id is null or vn_cidade_id is null then
          --
          begin
            select est.id, cid.id
              into vn_estado_id, 
                   vn_cidade_id
              from pessoa p, 
                   cidade cid, 
                   estado est
             where p.id   = rec.pessoa_id
               and cid.id = p.cidade_id
               and est.id = cid.estado_id;
          exception
            when others then
              vn_estado_id := null;
              vn_cidade_id := null;
          end;
          --
        end if;
        --
        vn_fase := 6.3;
        --
        vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => '1'); -- Tipo de arquivo GIA-SP
        --
        vn_fase := 6.4;
        --
        -- Pega o código do estado para o Tipo de Arquivo GIA-SP
        vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq(en_estado_id     => vn_estado_id,
                                                                    en_tipocodarq_id => vn_tipocodarq_id);
        --
        vn_fase := 6.5;
        --
        -- Auxilitar para utilizar o código do estado da GIA e gerar o arquivo ordenado por ele
        vn_aux_est := to_number(vv_estadotipocodarq_cd);
        --
        vn_fase := 6.6;
        --
        if vv_estadotipocodarq_cd is not null and vv_estadotipocodarq_cd <> '26' then -- Não é SP
          --
          vn_fase := 6.7;
          --
          -- Verifica se o participante é contribuinte de ICMS
          if vn_dm_ind_ie_dest is null then -- Não foi encontrado com o destinatário da nota fiscal
            --
            vn_dm_ind_ie_dest := to_number(nvl(pk_csf.fkg_pessoa_valortipoparam_cd(ev_tipoparam_cd => '5',
                                                                                   en_pessoa_id    => rec.pessoa_id), 1));
            --
          end if;
          --
          vn_fase := 6.8;
          --
          if vn_dm_ind_ie_dest in (9) and -- 1 - Contr ICMS, 2 - Contr isento, 9 - Não Contribuinte
             substr(vn_cfop, 1, 1) = '6' then -- Somente CFOP do Grupo 6
            --
            -- Valor de Não-Contribuinte
            vn_valor_contabil_1 := 0;
            vn_base_calculo_1   := 0;
            vn_valor_contabil_2 := nvl(vn_vl_contabil, 0); --(nvl(vn_vl_contabil, 0) * 100);
            vn_base_calculo_2   := nvl(vn_base_calculo, 0);
            --
          else
            --
            -- vn_dm_ind_ie_dest in (1,2) ou vn_dm_ind_ie_dest in (9) e substr(vn_cfop, 1, 1) = '2'
            -- Valor de Contribuinte
            --
            vn_valor_contabil_1 := nvl(vn_vl_contabil, 0); --(nvl(vn_vl_contabil, 0) * 100);
            vn_base_calculo_1   := nvl(vn_base_calculo, 0);
            vn_valor_contabil_2 := 0;
            vn_base_calculo_2   := 0;
            --
          end if;
          --
          vn_fase := 6.9;
          --
          -- Somente CFOP do Grupo 6
          if substr(vn_cfop, 1, 1) = '6' then
            --
            vn_ICMSCobradoST := (fkg_vlr_icmsst_conf_cfop(vn_cfop,
                                                          (nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0))));
            --
          else
            --
            vn_ICMSCobradoST := 0;
            --
          end if;
          --
          vn_fase := 6.10;
          --
          -- Somente CFOP do Grupo 2
          if substr(vn_cfop, 1, 1) = '2' then
            --
            vn_Outros_Produtos := (fkg_vlr_icmsst_conf_cfop(vn_cfop,
                                                            (nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_vl_fcp_icmsst, 0))));
            --
          else
            --
            vn_Outros_Produtos := 0;
            --
          end if;
          --
          vn_fase := 6.11;
          --
          --
          if (nvl(vn_imp_ret_substituido_st, 0) > 0 and nvl(vn_Outros_Produtos, 0) = 0) then
            --
            vn_fase := 6.12;
            --
            vn_Outros_Produtos := nvl(vn_imp_ret_substituido_st, 0);
            --
          elsif (nvl(vn_imp_ret_substituido_st, 0) > 0 and nvl(vn_Outros_Produtos, 0) > 0) then
            --
            vn_fase := 6.13;
            --
            vn_Outros_Produtos := nvl(vn_Outros_Produtos, 0) + nvl(vn_imp_ret_substituido_st, 0);
            --
          end if;
          --
          vn_fase := 6.14;
          --
          begin
            vb_achou := vt_tri_tab_cr14(1)(vn_cfop).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 6.12;
          --
          if not vb_achou then
            --
            vn_fase := 6.13;
            --
            -- CR14 - Detalhes Interestaduais
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).cr               := '14';
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).UF               := vv_estadotipocodarq_cd;
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 := (nvl(vn_valor_contabil_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1    := (nvl(vn_base_calculo_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 := (nvl(vn_valor_contabil_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2    := (nvl(vn_base_calculo_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto          := (nvl(vn_imposto, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras           := (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST    := (nvl(vn_ICMSCobradoST, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).PetroleoEnergia  := 0;
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outros_Produtos  := (nvl(vn_Outros_Produtos, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18              := 0;
            --
            vt_bi_tab_cr10(1)(vn_cfop).Q14 := nvl(vt_bi_tab_cr10(1)(vn_cfop).Q14, 0) + 1;
            --
          else
            --
            vn_fase := 6.14;
            --
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 + (nvl(vn_valor_contabil_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1 + (nvl(vn_base_calculo_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 + (nvl(vn_valor_contabil_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2 + (nvl(vn_base_calculo_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto          := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto + (nvl(vn_imposto, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras           := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST + (nvl(vn_ICMSCobradoST, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outros_Produtos  := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outros_Produtos + (nvl(vn_Outros_Produtos, 0) * 100);
            --
          end if;
          --
          vn_fase := 7;
          --
          -- Estados que permitem SUFRAMA
          -- 1 AC Acre / 3 AP Amapa / 4 AM Amazonas / 23 RO Rondonia / 24 RR Roraima
          if vv_estadotipocodarq_cd in ('01', '03', '04', '23', '24') and substr(vn_cfop, 1, 1) in ('6') and vn_cfop not in (6107, 6108) and
             nvl(vn_imposto, 0) <= 0 -- Somente isento de imposto
             and vn_dm_ind_ie_dest <> 9 -- 1-Contr ICMS, 2-Contr isento, 9-Não Contribuinte
           then
            --
            vn_fase := 7.1;
            --
            vv_cnpj_dest := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
            --
            vn_fase := 7.2;
            --
            if length(vv_cnpj_dest) = 14 then
              --
              vn_fase := 7.3;
              --
              vv_cidadetipocodarq_cd := pk_csf.fkg_cd_cidade_tipo_cod_arq(en_cidade_id     => vn_cidade_id,
                                                                          en_tipocodarq_id => vn_tipocodarq_id);
              --
              vn_fase := 7.4;
              --
              if trim(vv_cidadetipocodarq_cd) is not null then
                --
                if length(rec.notafiscal_id) > 10 then
                  --
                  vn_ind_nf_id := substr(lpad(rec.notafiscal_id, 12, 0), 3, 10);
                  --
                else
                  --
                  vn_ind_nf_id := rec.notafiscal_id;
                  --
                end if;
                --
                begin
                  vb_achou := vt_tetra_tab_cr18(1) (vn_cfop)(vn_aux_est).exists(vn_ind_nf_id);
                exception
                  when others then
                    vb_achou := false;
                end;
                --
                if not vb_achou then
                  --
                  -- CR18 - ZFM/ALC
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).cr            := '18';
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).NF            := lpad(rec.nro_nf, 9, '0');
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Data          := to_char(rec.dt_emiss, 'rrrrmmdd');
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Valor         := (nvl(vn_vl_contabil, 0) * 100);
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).CNPJDest      := vv_cnpj_dest;
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).MunicipioDest := lpad(nvl(trim(vv_cidadetipocodarq_cd), '0'), 5, '0');
                  --
                else
                  --
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Valor := vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Valor + (nvl(vn_vl_contabil, 0) * 100);
                  --
                end if;
                --
                vn_fase := 7.5;
                --
                if not vb_achou then
                  --
                  vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Benef := 1;
                  --
                  vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18 := nvl(vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18, 0) + 1;
                  --
                end if;
                --
              end if;
              --
            end if;
            --
          end if;
          --
        end if;
        --
      end if; -- substr(vn_cfop, 1, 1) in (2, 6) then
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_det_cfop
  --
  vn_fase := 8;
  --
  for rec in c_det_cfop_ct loop
    exit when c_det_cfop_ct%notfound or(c_det_cfop_ct%notfound) is null;
    --
    vn_fase := 8.1;
    --
    vn_cfop                   := 0;
    vn_vl_contabil            := 0;
    vv_cod_st_icms            := null;
    vn_vl_base_calc_icms      := 0;
    vn_aliq_icms              := 0;
    vn_vl_imp_trib_icms       := 0;
    vn_vl_imp_trib_icmsst     := 0;
    vn_vl_bc_isenta_icms      := 0;
    vn_vl_bc_outra_icms       := 0;
    --
    vn_base_calculo           := null;
    vn_imposto                := null;
    vn_imp_ret_st             := null;
    vn_imp_ret_substituto_st  := null;
    vn_imp_ret_substituido_st := null;
    --
    vn_estado_id              := null;
    vn_cidade_id              := null;
    vn_tipocodarq_id          := null;
    vv_estadotipocodarq_cd    := null;
    vv_cidadetipocodarq_cd    := null;
    vn_valor_contabil_1       := null;
    vn_base_calculo_1         := null;
    vn_valor_contabil_2       := null;
    vn_base_calculo_2         := null;
    vn_ICMSCobradoST          := null;
    vn_Outros_Produtos        := null;
    vv_cnpj_dest              := null;
    --
    vn_fase := 8.2;
    --
    -- Recupera os valores de impostos
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec.ctreganal_id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_contabil,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 8.3;
    --
    if vv_cod_st_icms is not null then
      --
      vn_fase := 8.4;
      --
      vn_base_calculo           := nvl(vn_vl_base_calc_icms, 0); --nvl(vn_vl_base_calc_icms, 0) * 100;
      vn_imposto                := nvl(vn_vl_imp_trib_icms, 0); --nvl(vn_vl_imp_trib_icms, 0) * 100;
      vn_imp_ret_st             := 0;
      vn_imp_ret_substituto_st  := 0;
      vn_imp_ret_substituido_st := 0;
      --
      vn_fase := 8.5;
      --
      begin
        vb_achou := vt_bi_tab_cr10(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 8.6;
      --
      if not vb_achou then
        --
        vn_fase := 8.7;
        --
        -- CR10 - Detalhe CFOPs
        vt_bi_tab_cr10(1)(vn_cfop).cr                 := '10';
        vt_bi_tab_cr10(1)(vn_cfop).CFOP               := vn_cfop;
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := 0;
        vt_bi_tab_cr10(1)(vn_cfop).Q14                := 0;
        --
        vn_fase := 8.8;
        --
        vt_tab_cr05(1).Q10 := nvl(vt_tab_cr05(1).Q10, 0) + 1;
        --
      else
        --
        vn_fase := 8.9;
        --
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := vt_bi_tab_cr10(1)(vn_cfop).ValorContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo + (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := vt_bi_tab_cr10(1)(vn_cfop).Imposto + (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := vt_bi_tab_cr10(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST + (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST + (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido + (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos + 0;
        --
      end if;
      --
      vn_fase := 9;
      --
      if substr(vn_cfop, 1, 1) in (2, 6) then
        --
        vn_fase := 9.1;
        --
        -- O registro CR14 somente será gerado se a UF for diferente de SP
        if pk_csf.fkg_uf_valida(nvl(rec.sigla_uf_ini, 'XX')) = true and rec.sigla_uf_ini <> 'SP' then
          --
          vn_fase := 9.2;
          --
          vn_estado_id := pk_csf.fkg_Estado_id(rec.sigla_uf_ini);
          vn_cidade_id := pk_csf.fkg_Cidade_ibge_id(rec.ibge_cidade_ini);
          --
        elsif pk_csf.fkg_uf_valida(nvl(rec.sigla_uf_fim, 'XX')) = true and rec.sigla_uf_fim <> 'SP' then
          --
          vn_fase := 9.3;
          --
          vn_estado_id := pk_csf.fkg_Estado_id(rec.sigla_uf_fim);
          vn_cidade_id := pk_csf.fkg_Cidade_ibge_id(rec.ibge_cidade_fim);
          --
        else
          --
          vn_fase := 9.4;
          --
          vn_estado_id := null;
          vn_cidade_id := null;
          --
        end if;
        --
        vn_fase := 9.5;
        --
        vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => '1'); -- Tipo de arquivo GIA-SP
        --
        vn_fase := 9.6;
        --
        -- Pega o código do estado para o Tipo de Arquivo GIA-SP
        vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq(en_estado_id     => vn_estado_id,
                                                                    en_tipocodarq_id => vn_tipocodarq_id);
        --
        vn_fase := 9.7;
        --
        -- Auxilitar para utilizar o código do estado da GIA e gerar o arquivo ordenado por ele
        vn_aux_est := to_number(vv_estadotipocodarq_cd);
        --
        vn_fase := 10;
        --
        if vv_estadotipocodarq_cd is not null and vv_estadotipocodarq_cd <> '26' then -- Não é SP
          --
          vn_fase := 10.1;
          --
          -- Verifica se o participante é contribuinte de ICMS
          vn_dm_ind_ie_dest := to_number(nvl(pk_csf.fkg_pessoa_valortipoparam_cd(ev_tipoparam_cd => '5',
                                                                                 en_pessoa_id    => rec.pessoa_id), 1));
          --
          vn_fase := 10.2;
          --
          if vn_dm_ind_ie_dest in (9) and -- 1-Contr ICMS, 2-Contr isento, 9-Não Contribuinte
             substr(vn_cfop, 1, 1) = '6' then -- Somente CFOP do Grupo 6
            --
            -- Valor de Não-Contribuinte
            vn_valor_contabil_1 := 0;
            vn_base_calculo_1   := 0;
            vn_valor_contabil_2 := nvl(vn_vl_contabil, 0); --(nvl(vn_vl_contabil, 0) * 100);
            vn_base_calculo_2   := nvl(vn_base_calculo, 0);
            --
          else
            --
            -- vn_dm_ind_ie_dest in (1,2) ou vn_dm_ind_ie_dest in (9) e substr(vn_cfop, 1, 1) = '2'
            -- Valor de Contribuinte
            vn_valor_contabil_1 := nvl(vn_vl_contabil, 0); --(nvl(vn_vl_contabil, 0) * 100);
            vn_base_calculo_1   := nvl(vn_base_calculo, 0);
            vn_valor_contabil_2 := 0;
            vn_base_calculo_2   := 0;
            --
          end if;
          --
          vn_fase := 10.3;
          --
          if substr(vn_cfop, 1, 1) = '6' -- Somente CFOP do Grupo 6
           then
            vn_ICMSCobradoST := 0;
          else
            vn_ICMSCobradoST := 0;
          end if;
          --
          vn_fase := 10.4;
          --
          if substr(vn_cfop, 1, 1) = '2' -- Somente CFOP do Grupo 2
           then
            vn_Outros_Produtos := 0;
          else
            vn_Outros_Produtos := 0;
          end if;
          --
          vn_fase := 11;
          --
          begin
            vb_achou := vt_tri_tab_cr14(1)(vn_cfop).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 11.1;
          --
          if not vb_achou then
            --
            vn_fase := 11.2;
            --
            -- CR14 - Detalhes Interestaduais
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).cr               := '14';
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).UF               := vv_estadotipocodarq_cd;
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 := (nvl(vn_valor_contabil_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1    := (nvl(vn_base_calculo_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 := (nvl(vn_valor_contabil_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2    := (nvl(vn_base_calculo_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto          := (nvl(vn_imposto, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras           := (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST    := (nvl(vn_ICMSCobradoST, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).PetroleoEnergia  := 0;
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outros_Produtos  := (nvl(vn_Outros_Produtos, 0) * 100);
            --
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18 := 0;
            --
            vn_fase := 11.3;
            --
            vt_bi_tab_cr10(1)(vn_cfop).Q14 := nvl(vt_bi_tab_cr10(1)(vn_cfop).Q14, 0) + 1;
            --
          else
            --
            vn_fase := 11.4;
            --
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 + (nvl(vn_valor_contabil_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1 + (nvl(vn_base_calculo_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 + (nvl(vn_valor_contabil_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2 + (nvl(vn_base_calculo_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto          := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto + (nvl(vn_imposto, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras           := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST + (nvl(vn_ICMSCobradoST, 0) * 100);
            --
          end if;
          --
          vn_fase := 12;
          --
          -- Estados que permitem SUFRAMA
          -- 1 AC Acre / 3 AP Amapa / 4 AM Amazonas / 23 RO Rondonia / 24 RR Roraima
          if vv_estadotipocodarq_cd in ('01', '03', '04', '23', '24') and substr(vn_cfop, 1, 1) in ('6') and vn_cfop not in (6107, 6108) and nvl(vn_imposto, 0) <= 0 -- Somente isento de imposto
             and vn_dm_ind_ie_dest <> 9 -- 1 - Contr ICMS, 2 - Contr isento, 9 - Não Contribuinte
           then
            --
            vn_fase := 12.1;
            --
            vv_cnpj_dest := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
            --
            vn_fase := 12.2;
            --
            if length(vv_cnpj_dest) = 14 then
              --
              vn_fase := 12.3;
              --
              vv_cidadetipocodarq_cd := pk_csf.fkg_cd_cidade_tipo_cod_arq(en_cidade_id     => vn_cidade_id,
                                                                          en_tipocodarq_id => vn_tipocodarq_id);
              --
              vn_fase := 12.4;
              --
              if trim(vv_cidadetipocodarq_cd) is not null then
                --
                begin
                  vb_achou := vt_tetra_tab_cr18(1) (vn_cfop)(vn_aux_est).exists(rec.conhectransp_id);
                exception
                  when others then
                    vb_achou := false;
                end;
                --
                if not vb_achou then
                  --
                  -- CR18 - ZFM/ALC
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).cr            := '18';
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).NF            := lpad(rec.nro_ct, 9, '0');
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).Data          := to_char(rec.dt_emiss, 'rrrrmmdd');
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).Valor         := (nvl(vn_vl_contabil, 0) * 100);
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).CNPJDest      := vv_cnpj_dest;
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).MunicipioDest := vv_cidadetipocodarq_cd;
                  --
                else
                  --
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).Valor := vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(rec.conhectransp_id).Valor + (nvl(vn_vl_contabil, 0) * 100);
                  --
                end if;
                --
                vn_fase := 12.5;
                --
                if not vb_achou then
                  --
                  vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Benef := 1;
                  vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18   := nvl(vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18, 0) + 1;
                  --
                end if;
                --
              end if; -- trim(vv_cidadetipocodarq_cd) is not null then
              --
            end if; -- length(vv_cnpj_dest) = 14 then
            --
          end if; -- vv_estadotipocodarq_cd in ('01', '03', '04', '23', '24')
          --
        end if; -- vv_estadotipocodarq_cd is not null and vv_estadotipocodarq_cd <> '26' then -- não é SP
        --
      end if; -- substr(vn_cfop, 1, 1) in (2, 6) then
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_det_cfop_ct
  --
  vn_fase := 13;
  --
  for rec in c_det_cfop_sc loop
    exit when c_det_cfop_sc%notfound or(c_det_cfop_sc%notfound) is null;
    --
    vn_fase := 13.1;
    --
    vn_cfop                   := 0;
    vn_vl_contabil            := 0;
    vv_cod_st_icms            := null;
    vn_vl_base_calc_icms      := 0;
    vn_aliq_icms              := 0;
    vn_vl_imp_trib_icms       := 0;
    vn_vl_base_calc_icmsst    := 0;
    vn_vl_imp_trib_icmsst     := 0;
    vn_vl_bc_isenta_icms      := 0;
    vn_vl_bc_outra_icms       := 0;
    vn_vl_imp_trib_ipi        := 0;
    --
    vn_base_calculo           := null;
    vn_imposto                := null;
    vn_imp_ret_st             := null;
    vn_imp_ret_substituto_st  := null;
    vn_imp_ret_substituido_st := null;
    --
    vn_estado_id              := null;
    vn_cidade_id              := null;
    vn_tipocodarq_id          := null;
    vv_estadotipocodarq_cd    := null;
    vv_cidadetipocodarq_cd    := null;
    vn_valor_contabil_1       := null;
    vn_base_calculo_1         := null;
    vn_valor_contabil_2       := null;
    vn_base_calculo_2         := null;
    vn_ICMSCobradoST          := null;
    vn_Outros_Produtos        := null;
    vv_cnpj_dest              := null;
    --
    vn_fase := 13.2;
    --
    -- Recupera valores fiscais (ICMS/ICMS-ST/IPI) de uma nota fiscal de serviço continuo
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec.nfregistanalit_id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_contabil,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi,
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 14;
    --
    if vv_cod_st_icms is not null then
      --
      vn_fase := 14.1;
      --
      vn_base_calculo := nvl(vn_vl_base_calc_icms, 0); --nvl(vn_vl_base_calc_icms, 0) * 100;
      vn_imposto      := nvl(vn_vl_imp_trib_icms, 0); --nvl(vn_vl_imp_trib_icms, 0) * 100;
      vn_imp_ret_st   := 0;
      --
      vn_fase := 14.2;
      --
      if rec.dm_ind_emit = 0 then -- Emissão Própria
        --
        vn_imp_ret_substituto_st := nvl(vn_vl_imp_trib_icmsst, 0); --nvl(vn_vl_imp_trib_icmsst, 0) * 100;
        --
      else
        --
        vn_imp_ret_substituto_st := 0;
        --
      end if;
      --
      vn_fase := 14.3;
      --
      if rec.dm_ind_emit = 1 then -- Terceiros
        --
        vn_imp_ret_substituido_st := nvl(vn_vl_imp_trib_icmsst, 0); --nvl(vn_vl_imp_trib_icmsst, 0) * 100;
        --
      else
        --
        vn_imp_ret_substituido_st := 0;
        --
      end if;
      --
      vn_fase := 15;
      --
      begin
        vb_achou := vt_bi_tab_cr10(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 15.1;
      --
      if not vb_achou then
        --
        vn_fase := 15.2;
        --
        -- CR10 - Detalhe CFOPs
        vt_bi_tab_cr10(1)(vn_cfop).cr                 := '10';
        vt_bi_tab_cr10(1)(vn_cfop).CFOP               := vn_cfop;
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := (nvl(vn_vl_imp_trib_ipi, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Q14                := 0;
        --
        vn_fase := 15.3;
        --
        vt_tab_cr05(1).Q10 := nvl(vt_tab_cr05(1).Q10, 0) + 1;
        --
      else
        --
        vn_fase := 15.4;
        --
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := vt_bi_tab_cr10(1)(vn_cfop).ValorContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo + (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := vt_bi_tab_cr10(1)(vn_cfop).Imposto + (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := vt_bi_tab_cr10(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST + (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST + (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido + (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos + (nvl(vn_vl_imp_trib_ipi, 0) * 100);
        --
      end if;
      --
      vn_fase := 16;
      --
      if substr(vn_cfop, 1, 1) in (2, 6) then
        --
        vn_fase := 16.1;
        --
        begin
          select est.id, 
                 cid.id
            into vn_estado_id, 
                 vn_cidade_id
            from pessoa p, 
                 cidade cid, 
                 estado est
           where p.id   = rec.pessoa_id
             and cid.id = p.cidade_id
             and est.id = cid.estado_id;
        exception
          when others then
            vn_estado_id := null;
            vn_cidade_id := null;
        end;
        --
        vn_fase := 16.2;
        --
        vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => '1'); -- Tipo de arquivo GIA-SP
        --
        vn_fase := 16.3;
        --
        -- Pega o código do estado para o Tipo de Arquivo GIA-SP
        vv_estadotipocodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq(en_estado_id     => vn_estado_id,
                                                                    en_tipocodarq_id => vn_tipocodarq_id);
        --
        vn_fase := 16.4;
        --
        -- Auxilitar para utilizar o código do estado da GIA e gerar o arquivo ordenado por ele
        vn_aux_est := to_number(vv_estadotipocodarq_cd);
        --
        vn_fase := 17;
        --
        if vv_estadotipocodarq_cd is not null and vv_estadotipocodarq_cd <> '26' then -- Não é SP
          --
          vn_fase := 17.1;
          --
          -- Verifica se o participante é contribuindo de ICMS
          vn_dm_ind_ie_dest := to_number(nvl(pk_csf.fkg_pessoa_valortipoparam_cd(ev_tipoparam_cd => '5',
                                                                                 en_pessoa_id    => rec.pessoa_id), 1));
          --
          vn_fase := 17.2;
          --
          if vn_dm_ind_ie_dest in (9) and -- 1-Contr ICMS, 2-Contr isento, 9-Não Contribuinte
             substr(vn_cfop, 1, 1) = '6' then -- Somente CFOP do Grupo 6
            --
            -- Valor de Não-Contribuinte
            vn_valor_contabil_1 := 0;
            vn_base_calculo_1   := 0;
            vn_valor_contabil_2 := nvl(vn_vl_contabil, 0); --(nvl(vn_vl_contabil, 0) * 100);
            vn_base_calculo_2   := nvl(vn_base_calculo, 0);
            --
          else
            --
            -- vn_dm_ind_ie_dest in (1,2) ou vn_dm_ind_ie_dest in (9) e substr(vn_cfop, 1, 1) = '2'
            -- Valor de Contribuinte
            vn_valor_contabil_1 := nvl(vn_vl_contabil, 0); --(nvl(vn_vl_contabil, 0) * 100);
            vn_base_calculo_1   := nvl(vn_base_calculo, 0);
            vn_valor_contabil_2 := 0;
            vn_base_calculo_2   := 0;
            --
          end if;
          --
          vn_fase := 17.3;
          --
          if substr(vn_cfop, 1, 1) = '6' then -- Somente CFOP do Grupo 6
            --
            vn_ICMSCobradoST := nvl(vn_vl_imp_trib_icmsst, 0); --nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            vn_ICMSCobradoST := 0;
            --
          end if;
          --
          vn_fase := 17.4;
          --
          if substr(vn_cfop, 1, 1) = '2' then -- Somente CFOP do Grupo 2
            --
            vn_Outros_Produtos := nvl(vn_vl_imp_trib_icmsst, 0); --nvl(vn_vl_imp_trib_icmsst, 0) * 100;
            --
          else
            --
            vn_Outros_Produtos := 0;
            --
          end if;
          --
          vn_fase := 18;
          --
          begin
            vb_achou := vt_tri_tab_cr14(1)(vn_cfop).exists(vn_aux_est);
          exception
            when others then
              vb_achou := false;
          end;
          --
          vn_fase := 18.1;
          --
          if not vb_achou then
            --
            vn_fase := 18.2;
            --
            -- CR14 - Detalhes Interestaduais
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).cr               := '14';
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).UF               := vv_estadotipocodarq_cd;
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 := (nvl(vn_valor_contabil_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1    := (nvl(vn_base_calculo_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 := (nvl(vn_valor_contabil_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2    := (nvl(vn_base_calculo_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto          := (nvl(vn_imposto, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras           := (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST    := (nvl(vn_ICMSCobradoST, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).PetroleoEnergia  := 0;
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outros_Produtos  := (nvl(vn_Outros_Produtos, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18              := 0;
            --
            vn_fase := 18.3;
            --
            vt_bi_tab_cr10(1)(vn_cfop).Q14 := nvl(vt_bi_tab_cr10(1)(vn_cfop).Q14, 0) + 1;
            --
          else
            --
            vn_fase := 18.4;
            --
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_1 + (nvl(vn_valor_contabil_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_1 + (nvl(vn_base_calculo_1, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Valor_Contabil_2 + (nvl(vn_valor_contabil_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).BaseCalculo_2 + (nvl(vn_base_calculo_2, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto          := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Imposto + (nvl(vn_imposto, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras           := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
            vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST    := vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).ICMSCobradoST + (nvl(vn_ICMSCobradoST, 0) * 100);
            --
          end if;
          --
          vn_fase := 19;
          --
          -- Estados que permitem SUFRAMA
          -- 1 AC Acre / 3 AP Amapa / 4 AM Amazonas / 23 RO Rondonia / 24 RR Roraima
          if vv_estadotipocodarq_cd in ('01', '03', '04', '23', '24') and substr(vn_cfop, 1, 1) in ('6') and vn_cfop not in (6107, 6108) and
             nvl(vn_imposto, 0) <= 0 -- Somente isento de imposto
             and vn_dm_ind_ie_dest <> 9 -- 1 - Contr ICMS, 2 - Contr isento, 9 - Não Contribuinte
           then
            --
            vn_fase := 19.1;
            --
            vv_cnpj_dest := pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => rec.pessoa_id);
            --
            vn_fase := 19.2;
            --
            if length(vv_cnpj_dest) = 14 then
              --
              vn_fase := 19.3;
              --
              vv_cidadetipocodarq_cd := pk_csf.fkg_cd_cidade_tipo_cod_arq(en_cidade_id     => vn_cidade_id,
                                                                          en_tipocodarq_id => vn_tipocodarq_id);
              --
              vn_fase := 19.4;
              --
              if trim(vv_cidadetipocodarq_cd) is not null then
                --
                if length(rec.notafiscal_id) > 10 then
                  --
                  vn_ind_nf_id := substr(lpad(rec.notafiscal_id, 12, 0), 3, 10);
                  --
                else
                  --
                  vn_ind_nf_id := rec.notafiscal_id;
                  --
                end if;
                --
                begin
                  vb_achou := vt_tetra_tab_cr18(1) (vn_cfop)(vn_aux_est).exists(vn_ind_nf_id);
                exception
                  when others then
                    vb_achou := false;
                end;
                --
                if not vb_achou then
                  --
                  -- CR18 - ZFM/ALC
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).cr            := '18';
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).NF            := lpad(rec.nro_nf, 9, '0');
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Data          := to_char(rec.dt_emiss, 'rrrrmmdd');
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Valor         := (nvl(vn_vl_contabil, 0) * 100);
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).CNPJDest      := vv_cnpj_dest;
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).MunicipioDest := vv_cidadetipocodarq_cd;
                  --
                else
                  --
                  vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Valor := vt_tetra_tab_cr18(1)(vn_cfop)(vn_aux_est)(vn_ind_nf_id).Valor + (nvl(vn_vl_contabil, 0) * 100);
                  --
                end if;
                --
                vn_fase := 19.5;
                --
                if not vb_achou then
                  --
                  vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Benef := 1;
                  vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18   := nvl(vt_tri_tab_cr14(1)(vn_cfop)(vn_aux_est).Q18, 0) + 1;
                  --
                end if;
                --
              end if;
              --
            end if;
            --
          end if;
          --
        end if;
        --
      end if; -- substr(vn_cfop, 1, 1) in (2, 6) then
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- fim c_det_cfop_sc
  --
  vn_fase := 20;
  --
  -- Informações de Cupom Fiscal
  for rec in c_det_cfop_ecf loop
    exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
    --
    vn_fase := 20.1;
    --
    vn_cfop                   := 0;
    vn_vl_contabil            := 0;
    vv_cod_st_icms            := null;
    vn_vl_base_calc_icms      := 0;
    vn_aliq_icms              := 0;
    vn_vl_imp_trib_icms       := 0;
    vn_vl_bc_isenta_icms      := 0;
    vn_vl_bc_outra_icms       := 0;
    --
    vn_base_calculo           := null;
    vn_imposto                := null;
    vn_imp_ret_st             := null;
    vn_imp_ret_substituto_st  := null;
    vn_imp_ret_substituido_st := null;
    --
    vn_fase := 20.2;
    --
    -- Recupera valores fiscais (ICMS) do conhecimento de transporte
    pk_csf_api_ecf.pkb_vlr_fiscal_ecf(en_reganalmovdiaecf_id => rec.reganalmovdiaecf_id,
                                      sv_cod_st_icms         => vv_cod_st_icms,
                                      sn_cfop                => vn_cfop,
                                      sn_aliq_icms           => vn_aliq_icms,
                                      sn_vl_opr              => vn_vl_contabil,
                                      sn_vl_bc_icms          => vn_vl_base_calc_icms,
                                      sn_vl_icms             => vn_vl_imp_trib_icms,
                                      sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                      sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms);
    --
    vn_fase := 21;
    --
    if vv_cod_st_icms is not null then
      --
      vn_fase := 22;
      --
      vn_base_calculo           := nvl(vn_vl_base_calc_icms, 0); --nvl(vn_vl_base_calc_icms, 0) * 100;
      vn_imposto                := nvl(vn_vl_imp_trib_icms, 0); --nvl(vn_vl_imp_trib_icms, 0) * 100;
      vn_imp_ret_st             := 0;
      vn_imp_ret_substituto_st  := 0;
      vn_imp_ret_substituido_st := 0;
      --
      vn_fase := 23;
      --
      begin
        vb_achou := vt_bi_tab_cr10(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 23.1;
      --
      if not vb_achou then
        --
        vn_fase := 23.2;
        --
        -- CR10 - Detalhe CFOPs
        vt_bi_tab_cr10(1)(vn_cfop).cr                 := '10';
        vt_bi_tab_cr10(1)(vn_cfop).CFOP               := vn_cfop;
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := 0;
        vt_bi_tab_cr10(1)(vn_cfop).Q14                := 0;
        --
        vn_fase := 23.3;
        --
        vt_tab_cr05(1).Q10 := nvl(vt_tab_cr05(1).Q10, 0) + 1;
        --
      else
        --
        vn_fase := 23.4;
        --
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := vt_bi_tab_cr10(1)(vn_cfop).ValorContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo + (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := vt_bi_tab_cr10(1)(vn_cfop).Imposto + (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := vt_bi_tab_cr10(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST + (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST + (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido + (nvl(vn_imp_ret_substituido_st, 0) * 100);
        --
      end if;
      --
    end if; -- vv_cod_st_icms is not null then
  --
  end loop; -- final c_det_cfop_ecf
  --
  vn_fase := 24;
  --
  -- Cupom Fiscal Eletrônico
  for rec in c_cfe_cfop loop
    exit when c_cfe_cfop%notfound or(c_cfe_cfop%notfound) is null;
    --
    vn_fase := 24.1;
    --
    vn_cfop                   := 0;
    vn_vl_contabil            := 0;
    vv_cod_st_icms            := null;
    vn_vl_base_calc_icms      := 0;
    vn_aliq_icms              := 0;
    vn_vl_imp_trib_icms       := 0;
    vn_vl_base_calc_icmsst    := 0;
    vn_vl_imp_trib_icmsst     := 0;
    vn_vl_bc_isenta_icms      := 0;
    vn_vl_bc_outra_icms       := 0;
    vv_cod_st_ipi             := null;
    vn_vl_base_calc_ipi       := 0;
    vn_aliq_ipi               := 0;
    vn_vl_imp_trib_ipi        := 0;
    vn_vl_bc_isenta_ipi       := 0;
    vn_vl_bc_outra_ipi        := 0;
    vn_ipi_nao_recup          := 0;
    vn_outro_ipi              := 0;
    --
    vn_base_calculo           := null;
    vn_imposto                := null;
    vn_imp_ret_st             := null;
    vn_imp_ret_substituto_st  := null;
    vn_imp_ret_substituido_st := null;
    vn_outros_impostos        := null;
    --
    vn_fase := 24.2;
    --
    -- Recupera os valores fiscais (ICMS/ICMS-ST/IPI) de um item de cupom fiscal eletrônico
    pk_csf_api.pkb_vlr_fiscal_item_cfe(en_itemcupomfiscal_id  => rec.itemcupomfiscal_id,
                                       sn_cfop                => vn_cfop,
                                       sn_vl_operacao         => vn_vl_contabil,
                                       sv_cod_st_icms         => vv_cod_st_icms,
                                       sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                       sn_aliq_icms           => vn_aliq_icms,
                                       sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                       sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                       sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                       sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                       sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                       sv_cod_st_ipi          => vv_cod_st_ipi,
                                       sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi,
                                       sn_aliq_ipi            => vn_aliq_ipi,
                                       sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi,
                                       sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi,
                                       sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi,
                                       sn_ipi_nao_recup       => vn_ipi_nao_recup,
                                       sn_outro_ipi           => vn_outro_ipi);
    --
    vn_fase := 24.3;
    --
    if trim(vv_cod_st_icms) is not null and
       (nvl(vn_vl_contabil, 0) <> 0 or nvl(vn_base_calculo, 0) <> 0 or
        nvl(vn_vl_imp_trib_icms, 0) <> 0 or
        nvl(vn_vl_bc_isenta_icms, 0) <> 0 or
        nvl(vn_vl_bc_outra_icms, 0) <> 0 or
        nvl(vn_vl_imp_trib_icmsst, 0) <> 0 or
        nvl(vn_vl_imp_trib_ipi, 0) <> 0 or nvl(vn_ipi_nao_recup, 0) <> 0 or
        nvl(vn_outro_ipi, 0) <> 0) then
      --
      vn_fase := 24.4;
      --
      vn_base_calculo := nvl(vn_vl_base_calc_icms, 0); --nvl(vn_vl_base_calc_icms, 0) * 100;
      vn_imposto      := nvl(vn_vl_imp_trib_icms, 0); --nvl(vn_vl_imp_trib_icms, 0) * 100;
      vn_imp_ret_st   := 0;
      --
      vn_fase := 24.5;
      --
      if nvl(fkg_vlr_icmsst_conf_cfop(vn_cfop, nvl(vn_vl_imp_trib_icmsst, 0)), 0) > 0 then
        --
        -- Cupom Fiscal Eletrônico: Somente Emissão Própria -- o que é responsável pela apuração e recolhimento do imposto retido por substituição.
        vn_imp_ret_substituto_st := fkg_vlr_icmsst_conf_cfop(vn_cfop,
                                                             nvl(vn_vl_imp_trib_icmsst, 0)) * 100;
        --
      else
        --
        vn_imp_ret_substituto_st  := 0;
        vn_imp_ret_substituido_st := 0;
        vn_outros_impostos        := nvl(vn_vl_imp_trib_icmsst, 0); --nvl(vn_vl_imp_trib_icmsst, 0) * 100;
        --
      end if;
      --
      vn_fase := 24.6;
      --
      begin
        vb_achou := vt_bi_tab_cr10(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      vn_fase := 24.7;
      --
      if not vb_achou then
        --
        vn_fase := 24.8;
        --
        -- CR10 - Detalhe CFOPs
        vt_bi_tab_cr10(1)(vn_cfop).cr                 := '10';
        vt_bi_tab_cr10(1)(vn_cfop).CFOP               := vn_cfop;
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := (nvl(vn_outros_impostos, 0) + nvl(vn_vl_imp_trib_ipi, 0) + nvl(vn_ipi_nao_recup, 0) + nvl(vn_outro_ipi, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Q14 := 0;
        --
        vt_tab_cr05(1).Q10 := nvl(vt_tab_cr05(1).Q10, 0) + 1;
        --
      else
        --
        vn_fase := 24.9;
        --
        vt_bi_tab_cr10(1)(vn_cfop).ValorContabil      := vt_bi_tab_cr10(1)(vn_cfop).ValorContabil + (nvl(vn_vl_contabil, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo        := vt_bi_tab_cr10(1)(vn_cfop).BaseCalculo + (nvl(vn_base_calculo, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Imposto            := vt_bi_tab_cr10(1)(vn_cfop).Imposto + (nvl(vn_imposto, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib     := vt_bi_tab_cr10(1)(vn_cfop).IsentasNaoTrib + (nvl(vn_vl_bc_isenta_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).Outras             := vt_bi_tab_cr10(1)(vn_cfop).Outras + (nvl(vn_vl_bc_outra_icms, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST    := vt_bi_tab_cr10(1)(vn_cfop).ImpostoRetidoST + (nvl(vn_imp_ret_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstitutoST + (nvl(vn_imp_ret_substituto_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido  := vt_bi_tab_cr10(1)(vn_cfop).ImpRetSubstituido + (nvl(vn_imp_ret_substituido_st, 0) * 100);
        vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos     := vt_bi_tab_cr10(1)(vn_cfop).OutrosImpostos + (nvl(vn_outros_impostos, 0) + nvl(vn_vl_imp_trib_ipi, 0) + nvl(vn_ipi_nao_recup, 0) + nvl(vn_outro_ipi, 0) * 100);
        --
      end if;
      --
    end if; -- trim(vv_cod_st_icms) is not null then
  --
  end loop; -- c_cfe_cfop
  --
  vn_fase := 25;
  --
  for rec in c_cr_20 loop
    exit when c_cr_20%notfound or(c_cr_20%notfound) is null;
    --
    vn_fase := 25.1;
    --
    j := nvl(j, 0) + 1;
    --
    vn_fase := 25.2;
    --
    -- CR20 -Ocorrências
    vt_bi_tab_cr20(1)(j).cr          := '20';
    vt_bi_tab_cr20(1)(j).CodSubItem  := rec.codsubitem;
    vt_bi_tab_cr20(1)(j).Valor       := lpad((rec.vl_aj_apur * 100), 15, '0');
    vt_bi_tab_cr20(1)(j).PropriaOuST := rec.PropriaOuST;
    --
    if substr(rec.codsubitem, 4, 2) = '99' then
      --
      vt_bi_tab_cr20(1)(j).FLegal     := rpad(trim(substr(nvl(trim(pk_csf.fkg_converte(rec.flegal)), chr(32)), 1, 100)), 100, ' ');
      vt_bi_tab_cr20(1)(j).Ocorrencia := rpad(nvl(trim(pk_csf.fkg_converte(rec.ocorr)), chr(32)), 300, chr(32));
      --
    else
      --
      vt_bi_tab_cr20(1)(j).FLegal     := rpad(chr(32), 100, chr(32)); --rpad(trim(substr(nvl(trim(pk_csf.fkg_converte(rec.flegal)), chr(32)), 1, 100)), 100, ' ');
      vt_bi_tab_cr20(1)(j).Ocorrencia := rpad(chr(32), 300, chr(32)); --rpad(nvl(trim(pk_csf.fkg_converte(rec.ocorr)), chr(32)), 300, chr(32));
      --
    end if;
    --
    vt_bi_tab_cr20(1)(j).Q25 := 0;
    vt_bi_tab_cr20(1)(j).Q26 := 0;
    vt_bi_tab_cr20(1)(j).Q27 := 0;
    vt_bi_tab_cr20(1)(j).Q28 := 0;
    --
    vn_fase := 26;
    --
    if rec.PropriaOuST = 0 then -- ICMS Normal
      --
      vn_fase := 27;
      --
      if rec.codsubitem in ('00218', '00219', '00704', '00705', '00706', '00707', '00729', '00730') then
        --
        vn_fase := 27.1;
        --
        l := 0;
        --
        for rec2 in c_cr_25(rec.id) loop
          exit when c_cr_25%notfound or(c_cr_25%notfound) is null;
          --
          vn_fase := 27.2;
          --
          l := nvl(l, 0) + 1;
          --
          -- CR25 - IEs
          vt_tri_tab_cr25(1)(j)(l).cr    := '25';
          vt_tri_tab_cr25(1)(j)(l).IE    := lpad(rec2.ie, 12, '0');
          vt_tri_tab_cr25(1)(j)(l).Valor := (nvl(rec2.valor, 0) * 100);
          --
          vn_fase := 27.3;
          --
          vt_bi_tab_cr20(1)(j).Q25 := nvl(vt_bi_tab_cr20(1)(j).Q25, 0) + 1;
          --
        end loop;
        --
      end if;
      --
      vn_fase := 28;
      --
      if rec.codsubitem in ('00210', '00211') then
        --
        vn_fase := 28.1;
        --
        l := 0;
        --
        for rec2 in c_cr_26(rec.id) loop
          exit when c_cr_26%notfound or(c_cr_26%notfound) is null;
          --
          vn_fase := 28.2;
          --
          l := nvl(l, 0) + 1;
          --
          -- CR26 - IESubstituto
          vt_tri_tab_cr26(1)(j)(l).cr           := '26';
          vt_tri_tab_cr26(1)(j)(l).IESubstituto := lpad(rec2.ie, 12, '0');
          vt_tri_tab_cr26(1)(j)(l).NF           := lpad(rec2.nro_nf, 9, '0');
          vt_tri_tab_cr26(1)(j)(l).DataInicio   := to_char(rec.dt_inicio, 'rrrrmm');
          vt_tri_tab_cr26(1)(j)(l).DataFim      := to_char(rec.dt_fim, 'rrrrmm');
          vt_tri_tab_cr26(1)(j)(l).Valor        := (nvl(rec2.valor, 0) * 100);
          --
          vn_fase := 28.3;
          --
          vt_bi_tab_cr20(1)(j).Q26 := nvl(vt_bi_tab_cr20(1)(j).Q26, 0) + 1;
          --
        end loop;
        --
      end if;
      --
      vn_fase := 29;
      --
      if rec.codsubitem in ('00220', '00221', '00740', '00741', '00223', '00744', '00745') then
        --
        vn_fase := 29.1;
        --
        l := 0;
        --
        for rec2 in c_cr_28(rec.id) loop
          exit when c_cr_28%notfound or(c_cr_28%notfound) is null;
          --
          vn_fase := 29.2;
          --
          l := nvl(l, 0) + 1;
          --
          -- CR28 - Crédito Acumulado / Ressarcimento ST
          vt_tri_tab_cr28(1)(j)(l).cr             := '28';
          vt_tri_tab_cr28(1)(j)(l).CodAutorizacao := lpad(rec2.cod_autor, 12, '0');
          vt_tri_tab_cr28(1)(j)(l).Valor          := (nvl(rec2.vl_cred_acm, 0) * 100);
          --
          vn_fase := 29.3;
          --
          vt_bi_tab_cr20(1)(j).Q28 := nvl(vt_bi_tab_cr20(1)(j).Q28, 0) + 1;
          --
        end loop;
        --
      end if;
      --
    else
      --
      -- rec.PropriaOuST = 1 -- ICMS ST
      -- Tratamento ICMS-ST
      vn_fase := 30;
      --
      -- CR25-IEs - para ST
      if rec.codsubitem in ('00218', '00219', '00704', '00705', '00706', '00707', '00729', '00730') then
        --
        vn_fase := 30.1;
        --
        l := 0;
        --
        for rec2 in c_cr_25_st(rec.id) loop
          exit when c_cr_25_st%notfound or(c_cr_25_st%notfound) is null;
          --
          vn_fase := 30.2;
          --
          l := nvl(l, 0) + 1;
          --
          -- CR25 - IEs
          vt_tri_tab_cr25(1)(j)(l).cr    := '25';
          vt_tri_tab_cr25(1)(j)(l).IE    := lpad(rec2.ie, 12, '0');
          vt_tri_tab_cr25(1)(j)(l).Valor := (nvl(rec2.valor, 0) * 100);
          --
          vn_fase := 30.3;
          --
          vt_bi_tab_cr20(1)(j).Q25 := nvl(vt_bi_tab_cr20(1)(j).Q25, 0) + 1;
          --
        end loop;
        --
      end if;
      --
      vn_fase := 31;
      --
      if rec.codsubitem in ('00701', '00702') then
        --
        vn_fase := 31.1;
        --
        l := 0;
        --
        for rec2 in c_cr_27(rec.id) loop
          exit when c_cr_27%notfound or(c_cr_27%notfound) is null;
          --
          vn_fase := 31.2;
          --
          l := nvl(l, 0) + 1;
          --
          -- CR27 - IESubstituido
          vt_tri_tab_cr27(1)(j)(l).cr            := '27';
          vt_tri_tab_cr27(1)(j)(l).IESubstituido := lpad(rec2.ie, 12, '0');
          vt_tri_tab_cr27(1)(j)(l).NF            := lpad(rec2.nro_nf, 9, '0');
          vt_tri_tab_cr27(1)(j)(l).Valor         := (nvl(rec2.valor, 0) * 100);
          --
          vn_fase := 31.3;
          --
          vt_bi_tab_cr20(1)(j).Q27 := nvl(vt_bi_tab_cr20(1)(j).Q27, 0) + 1;
          --
        end loop;
        --
      end if;
      --
      vn_fase := 32;
      --
      if rec.codsubitem in ('00220', '00221', '00740', '00741', '00223', '00744', '00745') then
        --
        vn_fase := 32.1;
        --
        l := 0;
        --
        for rec2 in c_cr_28_st(rec.id) loop
          exit when c_cr_28_st%notfound or(c_cr_28_st%notfound) is null;
          --
          vn_fase := 32.2;
          --
          l := nvl(l, 0) + 1;
          --
          -- CR28 - Crédito Acumulado / Ressarcimento ST
          vt_tri_tab_cr28(1)(j)(l).cr             := '28';
          vt_tri_tab_cr28(1)(j)(l).CodAutorizacao := lpad(rec2.cod_autor, 12, '0');
          vt_tri_tab_cr28(1)(j)(l).Valor          := (nvl(rec2.vl_cred_acm, 0) * 100);
          --
          vn_fase := 32.3;
          --
          vt_bi_tab_cr20(1)(j).Q28 := nvl(vt_bi_tab_cr20(1)(j).Q28, 0) + 1;
          --
        end loop;
        --
      end if;
      --
    end if;
    --
    vn_fase := 33;
    --
    vt_tab_cr05(1).Q20 := nvl(vt_tab_cr05(1).Q20, 0) + 1;
    --
  end loop;
  --
  vn_fase := 34;
  --
  j := 0;
  --
  /* for rec in c_cr_30_nf loop
     exit when c_cr_30_nf%notfound or (c_cr_30_nf%notfound) is null;
     --
     vn_fase := 34.1;
     --
     if nvl(rec.valor,0) > 0 then
        --
        j := nvl(j,0) + 1;
        --
        -- CR30 - DIPAM-B
        vt_bi_tab_cr30(1)(j).cr         := '30';
        vt_bi_tab_cr30(1)(j).CodDIP     := trim( pk_csf.fkg_converte(replace(rec.coddip_empresa,'.','')) );
        vt_bi_tab_cr30(1)(j).Municipio  := lpad( rec.municipio_empresa, 5, '0');
        vt_bi_tab_cr30(1)(j).Valor      := (nvl(rec.valor,0) * 100);
        --
        vn_fase := 34.2;
        --
        vt_tab_cr05(1).Q30 := nvl(vt_tab_cr05(1).Q30,0) + 1;
        --
     end if;
     --
  end loop;*/
  --
  vn_fase := 34.3;
  --
  begin
    select count(b.cd) cod_dipam
      into vn_cod_dipam
      from param_dipamgia a, 
           dipam_gia b, 
           inf_valor_agreg c
     where a.dipamgia_id = b.id
       and c.item_id     = nvl(a.item_id, 0)
       and c.ano         = substr(gt_row_abertura_gia.Dt_Ini, 7, 4)
       and c.mes         = substr(gt_row_abertura_gia.Dt_Ini, 4, 2)
       and a.empresa_id  = gt_row_abertura_gia.empresa_id
     group by b.cd;
    --
  exception
    when others then
      --
      vn_cod_dipam := null;
      --
  end;
  --
  if vn_cod_dipam > 0 then
    --
    for rec in c_cr_30_nf_via loop
      exit when c_cr_30_nf_via%notfound or(c_cr_30_nf_via%notfound) is null;
      --
      vn_fase := 34.1;
      --
      if nvl(rec.valor, 0) > 0 then
        --
        j := nvl(j, 0) + 1;
        --
        -- CR30 - DIPAM-B
        vt_bi_tab_cr30(1)(j).cr        := '30';
        vt_bi_tab_cr30(1)(j).CodDIP    := trim(pk_csf.fkg_converte(replace(rec.coddip_empresa, '.', '')));
        vt_bi_tab_cr30(1)(j).Municipio := lpad(rec.municipio_empresa, 5, '0');
        vt_bi_tab_cr30(1)(j).Valor     := (nvl(rec.valor, 0) * 100);
        --
        vn_fase := 34.2;
        --
        vt_tab_cr05(1).Q30 := nvl(vt_tab_cr05(1).Q30, 0) + 1;
        --
      end if;
      --
    end loop;
    --
  else
    --
    for rec in c_cr_30_nf_via2 loop
      exit when c_cr_30_nf_via2%notfound or(c_cr_30_nf_via2%notfound) is null;
      --
      vn_fase := 34.1;
      --
      if nvl(rec.valor, 0) > 0 then
        --
        j := nvl(j, 0) + 1;
        --
        -- CR30 - DIPAM-B
        vt_bi_tab_cr30(1)(j).cr        := '30';
        vt_bi_tab_cr30(1)(j).CodDIP    := trim(pk_csf.fkg_converte(replace(rec.coddip_empresa, '.', '')));
        vt_bi_tab_cr30(1)(j).Municipio := lpad(rec.municipio_empresa, 5, '0');
        vt_bi_tab_cr30(1)(j).Valor     := (nvl(rec.valor, 0) * 100);
        --
        vn_fase := 34.2;
        --
        vt_tab_cr05(1).Q30 := nvl(vt_tab_cr05(1).Q30, 0) + 1;
        --
      end if;
      --
    end loop;
    --
  end if;
  --
  for rec in c_cr_30_nf loop
    exit when c_cr_30_nf%notfound or(c_cr_30_nf%notfound) is null;
    --
    vn_fase := 34.1;
    --
    -- Não gera registro CD 2.5 caso parametrizado e valores forem negativos ou zerados	
    if pk_csf_gia.fkg_dipam_25_um_centavo( rec.coddip_empresa, gt_row_abertura_gia.empresa_id ) = 0 then
       --	
       if nvl(rec.valor, 0) <= 0 then	
          --	   
          goto pula_25;
          --		  
       end if;
       --	   
    end if;        
    --
    vn_fase := 34.2;
    --       
    if nvl(rec.valor, 0) <= 0 then
       vn_valor_mun := '0,01';
    else
       vn_valor_mun := nvl(rec.valor,0);
    end if; 
      --
      j := nvl(j, 0) + 1;
      --
      -- CR30 - DIPAM-B
      vt_bi_tab_cr30(1)(j).cr        := '30';
      vt_bi_tab_cr30(1)(j).CodDIP    := trim(pk_csf.fkg_converte(replace(rec.coddip_empresa, '.', '')));
      vt_bi_tab_cr30(1)(j).Municipio := lpad(rec.municipio_empresa, 5, '0');
      vt_bi_tab_cr30(1)(j).Valor     := (nvl(vn_valor_mun, 0) * 100);
      --
      vn_fase := 34.3;
      --
      vt_tab_cr05(1).Q30 := nvl(vt_tab_cr05(1).Q30, 0) + 1;
      --
    <<pula_25>>
    null;
    --   
  end loop;
  --
  vn_fase := 35;
  --
  --------------------------------------------------------------------------------------------------------
  -- CR30-DIPAM-B - CONHECIMENTO DE TRANSPORTE
  -- Regra -----------------------------------------------------------------------------------------------
  --
  -- 1ª Parte
  -- DM_IND_EMIT = 0 - Emissão Própria // DM_ARM_CTE_TERC = 0 - Não
  -- Além dos filtros acima, os valores deverão ser agrupados por município de origem da prestação
  -- do serviço (IBGE_CIDADE_INI), para cada município será totalizado o valor da prestação através
  -- do campo VL_PREST_SERV da tabela CONHEC_TRANSP_VLPREST, esses valores serão adicionados no
  -- código 2.3 da DIPAM. Buscar os intervalos de CFOP (5.351 a 5.399), (6.351 a 6.399) e (7.351 a 7.399).
  --
  -- 2ª Parte
  -- DM_IND_EMIT = 1 - Emissão Terceiros // DM_ARM_CTE_TERC = 0 - Não
  -- Somar os valores seguindo a mesma regra apresentada na primeira parte, ou seja, filtrar por
  -- IBGE_CIDADE_INI e buscar o valor do campo VL_PREST_SERV da tabela CONHEC_TRANSP_VLPREST filtrando
  -- pelos seguintes CFOP (1.932, 1.351, 2.351 e 3.351), esse valor será utilizado para deduzir
  -- o valor da primeira parte.
  --
  -- Resultado
  -- Valor DIPAM = Valor 1ª Parte - Valor 2ª Parte.
  -- Se esse valor for <= que 0, inserir o valor simbólico de 1,00.
  --------------------------------------------------------------------------------------------------------
  for rec in c_cr_30_ct loop
    exit when c_cr_30_ct%notfound or(c_cr_30_ct%notfound) is null;
    --
    vn_fase := 35.1;
    --
    if nvl(rec.vlr_part_1, 0) > 0 then 
      --
      vn_valor := nvl(rec.vlr_part_1, 0) - nvl(rec.vlr_part_2, 0);
      --
      --
      vn_fase := 35.2;
      --
      if vn_valor <= 0 then
        vn_valor := 1;
      end if;
      --
      vn_fase := 35.3;
      --
      if nvl(vn_valor, 0) > 0 then
        --
        j := nvl(j, 0) + 1;
        --
        -- CR30 - DIPAM-B
        vt_bi_tab_cr30(1)(j).cr        := '30';
        vt_bi_tab_cr30(1)(j).CodDIP    := '23';
        vt_bi_tab_cr30(1)(j).Municipio := lpad(rec.municipio_empresa, 5, '0');
        vt_bi_tab_cr30(1)(j).Valor     := (nvl(vn_valor, 0) * 100);
        --
        vn_fase := 35.4;
        --
        vt_tab_cr05(1).Q30 := nvl(vt_tab_cr05(1).Q30, 0) + 1;
        --
      end if;
      --
    end if;
    --
  end loop; -- c_cr_30_ct
  --
  vn_fase := 36;
  --
  j := 0;
  --
  for rec in c_ie loop
    exit when c_ie%notfound or(c_ie%notfound) is null;
    --
    vn_fase := 36.1;
    --
    j := nvl(j, 0) + 1;
    --
    -- CR31 - Registro de Exportação
    vt_bi_tab_cr31(1)(j).cr := '31';
    vt_bi_tab_cr31(1)(j).RE := lpad(trim(rec.nro_re), 15, '0');
    --
    vn_fase := 36.2;
    --
    vt_tab_cr05(1).Q31 := nvl(vt_tab_cr05(1).Q31, 0) + 1;
    --
  end loop;
  --
  vn_fase := 37;
  --
  -- Procedimento monta a estrutura do arquivo da GIA - SP
  pkb_monta_estr_arq_gia_sp;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_sp fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_arq_gia_sp;

------------------------------------------------
-- Procedimento de geração do arquivo da GIA-TO
------------------------------------------------
procedure pkb_gera_arq_gia_to is
   --
   -- Constantes --
   cv_branco_01  constant varchar2(1)   := lpad(' ', 1, ' ');
   cv_branco_02  constant varchar2(2)   := lpad(' ', 2, ' ');
   cv_branco_07  constant varchar2(7)   := lpad(' ', 7, ' ');
   cv_branco_08  constant varchar2(8)   := lpad(' ', 8, ' ');
   cv_branco_09  constant varchar2(9)   := lpad(' ', 9, ' ');
   cv_branco_20  constant varchar2(20)  := lpad(' ', 20, ' ');
   cv_branco_255 constant varchar2(255) := lpad(' ', 255, ' ');
   cv_zero_07    constant varchar2(14)  := lpad('0', 7, '0');
   cv_zero_08    constant varchar2(14)  := lpad('0', 8, '0');
   cv_zero_14    constant varchar2(14)  := lpad('0', 14, '0');
   --
   -- Variáveis --
   i                         pls_integer;
   j                         pls_integer;
   k                         pls_integer;
   vb_achou                  boolean;
   vn_fase                   number                              := 0;
   vv_cnae_empr              varchar2(7)                         := '';
   vn_vl_total_credito       apuracao_icms.vl_total_credito%type := 0;
   vv_Inscricao_Estadual     varchar2(9); -- Tocantins size 9 --
   vn_dummy                  number := 0;
   vn_vl_contabil            number := 0;
   vn_ValorContabil_P        number := 0;
   vn_BaseDeCalculo_P        number := 0;
   vn_DiferencialAliq_P      number := 0;
   vb_primeira_vez           boolean := true;
   vn_ValorContabil          number := 0;
   vn_BaseDeCalculo          number := 0;
   vn_DiferencialAliq        number := 0;
   vv_CodUfGia               estado_tipo_cod_arq.cd%type;
   vv_DtRef                  varchar2(12) := null;
   vn_ValorProdutos          nfregist_analit.vl_operacao%type := 0;
   vv_CdVersao               versao_gia.cd%type := null;
   --
   -- Valores utilizados para Estoque Inicial e Final
   vn_vl_trib                number := 0;
   vn_vl_isenta              number := 0;
   vn_vl_outras              number := 0;
   vn_vl_trib_ini            number := 0;
   vn_vl_isenta_ini          number := 0;
   vn_vl_outras_ini          number := 0;
   vn_vl_trib_fin            number := 0;
   vn_vl_isenta_fin          number := 0;
   vn_vl_outras_fin          number := 0;
   vn_vl_total_ini           number := 0;
   vn_vl_total_fin           number := 0;
   vn_qtd_linhas             number := 0;
   --
   vn_cfop                   number := 0;
   vn_vl_operacao            number := 0;
   vn_vl_bc_imp_param        number := 0;
   vn_vl_imp_imp_param       number := 0;
   vn_vl_bc_isenta_param     number := 0;
   vn_vl_bc_outra_param      number := 0;
   vn_vl_icms_st             number := 0;
   vn_vl_icms                number := 0;
   vn_vl_ii                  number := 0;
   vn_vl_ipi                 number := 0;
   vv_cod_st_icms            varchar2(3) := null;
   vn_aliq_icms              number := 0;
   vn_vl_base_calc_icms      number := 0;
   vn_vl_base_calc_icms_nf   number := 0;
   vn_vl_imp_trib_icms       number := 0;
   vn_vl_base_calc_icmsst    number := 0;
   vn_vl_imp_trib_icmsst     number := 0;
   vn_vl_imp_trib_ipi        number := 0;
   vn_vl_bc_isenta_icms      number := 0;
   vn_vl_bc_outra_icms       number := 0;
   vn_tot_vl_operacao        number := 0;
   vn_tot_vl_imp_trib_icmsst number := 0;
   vn_tot_vl_imp_trib_icms   number := 0;
   vn_vl_base_calc_ipi       number := 0;
   vn_aliq_ipi               number := 0;
   vn_vl_bc_isenta_ipi       number := 0;
   vn_vl_bc_outra_ipi        number := 0;
   vn_ipi_nao_recup          number := 0;
   vn_outro_ipi              number := 0;
   vn_vl_imp_nao_dest_ipi    number := 0;
   vn_vl_fcp_icmsst          number := 0;
   vn_aliq_fcp_icms          number := 0;
   vn_vl_fcp_icms            number := 0;
   vn_vl_base_calc           number := null;
   vn_vl_imp_trib            number := null;
   vn_vl_bc_isenta           number := null;
   vn_vl_bc_outra            number := null;
   vv_cod_st_ipi             varchar2(3) := null;
   --
   vn_qtde_segmB             number := 0;
   vn_qtde_segmD             number := 0;
   --
   vn_BaseDeCalc_d_s         varchar2(14); --number := 0;
   vn_VlrContabil_d_s        varchar2(14); --number := 0;
   vn_BaseDeCalc_d_e         varchar2(14); --number := 0;
   vn_VlrContabil_d_e        varchar2(14); --number := 0;
   --
   -- TYPES --------------------------------------------------------------------------------------------------
   --
   -- Segmento A - Informações Econômico-Fiscais / Identificação do Contribuinte / Apuração do Imposto
   type tab_segm_A is record(Segmento        varchar2(1),   -- A01 - Segmento
                             InscrEstadual   varchar2(9),   -- A02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),   -- A03 - Período de Referência
                             Retificacao     varchar2(2),   -- A04 - Retificação
                             AtvEconPrincip  varchar2(7),   -- A05 - Atividade Econômica Principal
                             TipoEstabelecim varchar2(1),   -- A06 - Tipo de estabelecimento
                             PortadorTare    varchar2(1),   -- A07 - Portador de TARE
                             TipoEscriturac  varchar2(1),   -- A08 - Tipo de Escrituração
                             SaldoIniCaixa   varchar2(14),  -- A09 - Saldo Inicial de Caixa
                             SaldoFinCaixa   varchar2(14),  -- A10 - Saldo Final de caixa
                             UsuariodeECF    varchar2(1),   -- A11 - Usuário de ECF
                             CPFDeclarante   varchar2(11),  -- A12 - CPF declarante
                             NomeDeclarante  varchar2(50),  -- A13 - Nome declarante
                             NroCRCContabili varchar2(10),  -- A14 - No CRC Contabilista
                             UFCRCContabili  varchar(2),    -- A15 - UF CRC Contabilista
                             Nome_Contabili  varchar(50),   -- A16 - Nome Contabilista
                             Telef_Contabili varchar(20),   -- A17 - Telefone Contabilista
                             ----------------- Débito do Imposto ----------------
                             SaiPrestDebImp  varchar2(14),  -- A18 - Saída/prestações com Débito do Imposto
                             OutrosDebitos   varchar2(14),  -- A19 - Outros Débitos
                             EstornoCreditos varchar2(14),  -- A20 - Estorno de Créditos (Incluir os créditos transferidos)
                             ----------------- Crédito do Imposto ---------------
                             EntrAquiCredImp varchar2(14),  -- A21 - Entradas/aquisições com Crédito do Imposto
                             OutrosCreditosI varchar2(14),  -- A22 - Outros Créditos (Incluir os Créditos Recebidos por Transferência)
                             EstornoDebitos  varchar2(14),  -- A23 - Estornos de Débito
                             SldCredorPerAnt varchar2(14),  -- A24 - Saldo Credor do Período Anterior
                             Deducoes        varchar2(14),  -- A25 - Deduções
                             DifAliqRecolher varchar2(14),  -- A26 - Diferencial de Alíquota a recolher
                             ----- Apuração Substituição Tributária Interna -----
                             ValorProdutos   varchar2(14),  -- A27 - Valor dos Produtos
                             BaseCalculo     varchar2(14),  -- A28 - Base de Cálculo
                             IcmsSubstTrib   varchar2(14),  -- A29 - ICMS Substituição Tributária
                             CreditoIcms     varchar2(14),  -- A30 - Crédito de ICMS
                             OutrosCreditosA varchar2(14),  -- A31 - Outros Créditos
                             -------------- Informações Adicionais --------------
                             NumeroTare      varchar2(20),  -- A32 - Numero do TARE
                             VersaoArquivo   varchar2(5),   -- A33 - Versão do Arquivo
                             DtVencimTare    varchar2(8),   -- A34 - Data Vencimento do TARE
                             DifAliqPeriodo  varchar2(14),  -- A35 - Diferencial de Alíquota do Período
                             DifAliqAnterior varchar2(14),  -- A36 - Diferencial de Alíquota a Recolher Transportado do Período Anterior
                             TipoEncerrEscri varchar2(1),   -- A37 - Tipo de Encerrante Escrituração de LMC
                             ObservEncerrG   varchar2(255), -- A38 - Observações sobre os Encerrastes informados no segmento G
                             -------------- Apuração do Período -----------------
                             CompAliqPeriodo varchar2(14),  -- A39 - Complementação de Alíquota do Período
                             DifAliqConsFin  varchar2(14),  -- A40 - Diferencial de Alíquota Consumidor Final (Saídas) do Período
                             HouveMudDomici  varchar2(1),   -- A41 - Houve Mudança de Domicílio
                             MunicipAnterior varchar2(7),   -- A42 - Município Anterior (codigo IBGE)
                             DtIniCidAtual   varchar2(8),   -- A43 - Data Inicial da Cidade Atual
                             DtFinCidAtual   varchar2(8),   -- A44 - Data Final da Cidade Atual
                             DtIniCidAnter   varchar2(8),   -- A45 - Data Inicial da Cidade Anterior
                             DtFimCidAnter   varchar2(8));  -- A46 - Data Final da Cidade Anterior
   --
   type t_tab_segm_A is table of tab_segm_A index by binary_integer;
   vt_tab_segm_A t_tab_segm_A;
   --
   -- Segmento B - Entradas e Saídas de Mercadorias, Bens e/ou Serviços no Estabelecimento do Contribuinte
   type tab_segm_B is record(Segmento        varchar2(1),  -- B01 - Segmento
                             InscriEstadual  varchar2(9),  -- B02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),  -- B03 - Período de Referência
                             Retificacao     varchar2(2),  -- B04 - Retificação
                             IndEntradaSaida varchar2(1),  -- B05 - Indica se Entrada ou Saída
                             CFOP            varchar2(4),  -- B06 - Código Fiscal de Operações e de Prestações
                             BaseDeCalculo   varchar2(14), -- B07 - Base de Cálculo
                             IsentasNaoTrib  varchar2(14), -- B08 - Isentas / Não Tributadas
                             Outras          varchar2(14), -- B09 - Outras
                             SubstTributaria varchar2(14), -- B10 - Substituição Tributária
                             ValorContabil   varchar2(14), -- B11 - Valor Contábil
                             CredDebiImposto varchar2(14), -- B12 - Crédito do Imposto no caso de Entrada e Débito do Imposto no caso da Saída
                             DomicilioFiscal varchar2(1)); -- B13 - Domicílio Fiscal
   --
   type t_tab_segm_B is table of tab_segm_B index by binary_integer;
   type t_bi_tab_segm_B is table of t_tab_segm_B index by binary_integer;
   vt_bi_tab_segm_B t_bi_tab_segm_B;
   --
   -- Segmento C - Demonstrativo do Estoque
   type tab_segm_C is record(Segmento        varchar2(1),  -- C01 - Segmento
                             InscriEstadual  varchar2(9),  -- C02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),  -- C03 - Período de Referência
                             Retificacao     varchar2(2),  -- C04 - Retificação
                             ----------------- Estoque Inicial ------------------
                             Tributadas_I    varchar2(14),  -- C05 - Tributadas
                             IsentTributad_I varchar2(14),  -- C06 - Isentas e/ou Tributadas
                             Outras_I        varchar2(14),  -- C07 - Outras
                             SubstTribut_I   varchar2(14),  -- C08 - Substituição Tributária
                             ValorTotal_I    varchar2(14),  -- C09 - Valor Total
                             ------------------- Estoque Final ------------------
                             Tributadas_F    varchar2(14),  -- C10 - Tributadas
                             IsentTributad_F varchar2(14),  -- C11 - Isentas e/ou Tributadas
                             Outras_F        varchar2(14),  -- C12 - Outras
                             SubstTribut_F   varchar2(14),  -- C13 - Substituição Tributária
                             ValorTotal_F    varchar2(14)); -- C14 - Valor Total
   --
   type t_tab_segm_C is table of tab_segm_C index by binary_integer;
   vt_tab_segm_C t_tab_segm_C;
   --
   -- Segmento D - Detalhamento das Entradas/Saídas de Mercadorias e/ou Aquisições/Prestações de Serviços por Unidade da Federação
   type tab_segm_D is record(Segmento        varchar2(1),  -- D01 - Segmento
                             InscriEstadual  varchar2(9),  -- D02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),  -- D03 - Período de Referência
                             Retificacao     varchar2(2),  -- D04 - Retificação
                             IndEntradaSaida varchar2(1),  -- D05 - Indica se Entrada ou Saída
                             CodUfGia        varchar2(2),  -- D06 - Código da UF
                             BaseDeCalcES    varchar2(14), -- D07 - Base de Cálculo Entrada ou Base de Cálculo Contribuinte Saída.
                             BaseDeCalcSai   varchar2(14), -- D08 - Base de Cálculo Não Contribuinte Saída
                             IsentasNTribut  varchar2(14), -- D09 - Isentas/Não Tributadas
                             Outras          varchar2(14), -- D10 - Outras
                             SubstTributaria varchar2(14), -- D11 - Substituição Tributária
                             VlrContabilES   varchar2(14), -- D12 - Valor Contábil Entrada ou Valor Contábil Contribuinte Saída
                             VlrContabilSai  varchar2(14), -- D13 - Valor Contábil Não Contribuinte Saída
                             CredDebImpost   varchar2(14), -- D14 - Crédito do Imposto Entrada ou Débito do Imposto Contribuinte Saída
                             DebitoImposto   varchar2(14), -- D15 - Débito do Imposto Não Contribuinte Saída
                             DomicilioFiscal varchar2(1)); -- D16 - Domicílio Fiscal

   --
   type t_tab_segm_D is table of tab_segm_D index by binary_integer;
   type t_bi_tab_segm_D is table of t_tab_segm_D index by binary_integer;
   type t_tri_tab_segm_D is table of t_bi_tab_segm_D index by binary_integer;
   vt_tri_tab_segm_D t_tri_tab_segm_D;
   --
   -- Segmento E - Demonstrativo do ICMS a Recolher
   type tab_segm_E is record(Segmento        varchar2(1),   -- E01 - Segmento
                             InscriEstadual  varchar2(9),   -- E02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),   -- E03 - Período Referencia
                             Retificacao     varchar2(2),   -- E04 - Retificação
                             TipoIcms        varchar2(1),   -- E05 - Tipo de ICMS
                             DataVencimento  varchar2(8),   -- E06 - Data de vencimento
                             VlrIcmsRecolher varchar2(14)); -- E07 - Valor do ICMS a Recolher
   --
   type t_tab_segm_E is table of tab_segm_E index by binary_integer;
   vt_tab_segm_E t_tab_segm_E;
   --
   -- Segmento J - Informações sobre TARE
   type tab_segm_J is record(Segmento       varchar2(1),  -- J01 - Segmento
                             InscriEstadual varchar2(9),  -- J02 - Inscrição Estadual
                             PeriodoRef     varchar2(6),  -- J03 - Período de Referência
                             Retificacao    varchar2(2),  -- J04 - Retificação
                             NumeroTare     varchar2(20), -- J05 - Número do TARE
                             DtVencimTare   varchar2(8)); -- J06 - Data Vencimento do TARE
   --
   type t_tab_segm_J is table of tab_segm_J index by binary_integer;
   vt_tab_segm_J t_tab_segm_J;
   --
   -- Segmento K - Especificação de Outros Créditos
   type tab_segm_K is record(Segmento       varchar2(1),   -- K01 - Segmento
                             InscriEstadual varchar2(9),   -- K02 - Inscrição Estadual
                             PeriodoRef     varchar2(6),   -- K03 - Período de Referência
                             Retificacao    varchar2(2),    -- K04 - Retificação
                             CodBaseLegal   varchar2(2),   -- K05 - Código da Base Legal
                             VlrCredito     varchar2(14)); -- K06 - Valor do Crédito
   --
   type t_tab_segm_K is table of tab_segm_K index by binary_integer;
   vt_tab_segm_K t_tab_segm_K;
   --
   -- Segmento L - Especificação das Deduções
   type tab_segm_L is record(Segmento       varchar2(1),   -- L01 - Segmento
                             InscriEstadual varchar2(9),   -- L02 - Inscrição Estadual
                             PeriodoRef     varchar2(6),   -- L03 - Período de Referência
                             Retificacao    varchar2(2),   -- L04 - Retificação
                             CodBaseLegal   varchar2(2),   -- L50 - Código da Base Legal
                             IcmsDevido     varchar2(14),  -- L60 - ICMS Devido
                             MediaIcms      varchar2(14),  -- L07 - Média ICMS
                             VlrDeducao     varchar2(14)); -- L08 - Valor da Dedução
   --
   type t_tab_segm_L is table of tab_segm_L index by binary_integer;
   vt_tab_segm_L t_tab_segm_L;
   --
   -- Segmento M - Saídas e/ou Prestações e Entradas e/ou Aquisições do Estabelecimento do Contribuinte por Município de Origem
   type tab_segm_M is record(Segmento        varchar2(1),   -- M01 - Segmento
                             InscriEstadual  varchar2(9),   -- M02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),   -- M03 - Período de Referência
                             Retificacao     varchar2(2),   -- M04 - Retificação
                             MunicipioOrigem varchar2(14),  -- M05 - Município de Origem
                             DomicilioFiscal varchar2(1),   -- M06 - Domicílio Fiscal
                             SaidasPrestacoe varchar2(14),  -- M07 - Saídas e/ou Prestações
                             EntraAquisicoes varchar2(14)); -- M08 - Entradas e/ou Aquisições
   --
   type t_tab_segm_M is table of tab_segm_M index by binary_integer;
   vt_tab_segm_M t_tab_segm_M;
   --
   -- Segmento N - Relação de Mercadorias e/ou Produtos Adquiridos De Outros Municípios Tocantinenses com Diferimento do ICMS
   type tab_segm_N is record(Segmento        varchar2(1),   -- N01 - Segmento
                             InscriEstadual  varchar2(9),   -- N02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),   -- N03 - Período de Referência
                             Retificacao     varchar2(2),   -- N40 - Retificação
                             IdentEmpresa    varchar2(9),   -- N05 - Identificação da Empresa - Número de Inscrição do CCI-TO do Remetente
                             DomicilioFiscal varchar2(1),   -- N06 - Domicílio Fiscal
                             CodIbgeMunicipi varchar2(7),   -- N07 - Município (Código IBGE)
                             VlrTotNotasFisc varchar2(14)); -- N08 - Valor Total das Notas Fiscais informadas para a inscrição indicada no campo N5
   --
   type t_tab_segm_N is table of tab_segm_N index by binary_integer;
   vt_tab_segm_N t_tab_segm_N;
   --
   --
   -- Segmento O - Relação de Mercadorias e/ou Produtos Adquiridos de Outros Municípios Tocantinenses com Diferimento de ICMS
   type tab_segm_O is record(Segmento        varchar2(1),   -- O01 - Segmento
                             InscriEstadual  varchar2(9),   -- O02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),   -- O03 - Período de Referência
                             Retificacao     varchar2(2),   -- O04 - Retificação
                             IdentEmpresa    varchar2(9),   -- O05 - Identificação da Empresa
                             DomicilioFiscal varchar2(1),   -- O06 - Domicílio Fiscal
                             NroNotaFiscal   varchar2(7),   -- O07 - Número da Nota
                             ValorDaNota     varchar2(14)); -- O08 - Valor Total da Nota Fiscal
   --
   type t_tab_segm_O is table of tab_segm_O index by binary_integer;
   vt_tab_segm_O t_tab_segm_O;
   --
   -- Segmento P - Especificação do Diferencial de Alíquotas por UF
   type tab_segm_P is record(Segmento        varchar2(1),  -- P01 - Segmento
                             InscriEstadual  varchar2(9),  -- P02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),  -- P03 - Período de Referência
                             Retificacao     varchar2(2),  -- P04 - Retificação
                             DomicilioFiscal varchar2(1),  -- P05 - Domicílio Fiscal
                             CodUfGia        varchar2(2),  -- P06 - Código da UF
                             ValorContabil   varchar2(14), -- P07 - Valor Contábil
                             BaseDeCalculo   varchar2(14), -- P08 - Base de Cálculo
                             DiferencialAliq varchar2(14), -- P09 - Diferencial de Alíquota
                             Aliquota        varchar2(4)); -- P10 - Alíquota
   --
   type t_tab_segm_P is table of tab_segm_P index by binary_integer;
   vt_tab_segm_P t_tab_segm_P;
   --
   -- Segmento R - Especificação de Outros Débitos
   type tab_segm_R is record(Segmento       varchar2(1),   -- R01 - Segmento
                             InscriEstadual varchar2(9),   -- R02 - Inscrição Estadual
                             PeriodoRef     varchar2(6),   -- R03 - Período de Referência
                             Retificacao    varchar2(2),   -- R04 - Retificação
                             CodBaseLegal   varchar2(2),   -- R05 - Código da Base Legal
                             VlrDebito      varchar2(14)); -- R06 - Valor do Débito
   --
   type t_tab_segm_R is table of tab_segm_R index by binary_integer;
   vt_tab_segm_R t_tab_segm_R;
   --
   -- Segmento S - Especificação do Diferencial de Alíquotas Consumidor Final (Saídas) por UF
   type tab_segm_S is record(Segmento        varchar2(1),   -- S01 - Segmento
                             InscriEstadual  varchar2(9),   -- S02 - Inscrição Estadual
                             PeriodoRef      varchar2(6),   -- S03 - Período de Referência
                             Retificacao     varchar2(2),   -- S04 - Retificação
                             DomicilioFiscal varchar2(1),   -- S05 - Domicílio Fiscal
                             CodUfGia        varchar2(2),   -- S06 - Código da UF
                             ValorContabil   varchar2(14),  -- S07 - Valor Contábil
                             BaseDeCalculo   varchar2(14),  -- S08 - Base de Cálculo
                             DiferencialAliq varchar2(14),  -- S09 - Diferencial de Alíquota
                             AliqConsumidor  varchar2(4),   -- S10 - Alíquota Consumidor
                             Origem          varchar2(14),  -- S11 - Origem
                             Destino         varchar2(14)); -- S12 - Destino
   --
   type t_tab_segm_S is table of tab_segm_S index by binary_integer;
   vt_tab_segm_S t_tab_segm_S;
   --
   -- Segmento Z - Indica o Final da Declaração
   type tab_segm_Z is record(Segmento       varchar2(1),  -- Z01 - Segmento
                             InscriEstadual varchar2(9),  -- Z02 - Inscrição Estadual
                             PeriodoRef     varchar2(6),  -- Z03 - Período de Referência
                             Retificacao    varchar2(2),  -- Z04 - Retificação
                             TotalRegistro  varchar2(3)); -- Z05 - Total de Registros da declaração
   --
   type t_tab_segm_Z is table of tab_segm_Z index by binary_integer;
   vt_tab_segm_Z t_tab_segm_Z;
   --
   --
   -- CURSORES -----------------------------------------------------------------------------------------------
   -- #74670 inclusao de nvl nos campos que podem ser retonar nulo
   -- Busca as informações da empresa, contator e responsável
   cursor c_segmento_A01 is
      select 'A' Segmento,
             lpad(nvl(vv_inscricao_estadual, 0), 9, 0) InscrEstadual,
             to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy') PeriodoRef,
             lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0) Retificacao,
             lpad(nvl(trim(j.cnae), '0'), 7, 0) AtvEconPrincip,
             case
               when nvl(e.ar_empresa_id, 0) > 0 then
                'F'
               else
                'M'
             end TipoEstabelecim,
             case
               when gv_num_tare is not null then
                 'S'
               else
                 'N'
             end PortadorTare,
             'F' TipoEscriturac,
             cv_zero_14 SaldoIniCaixa,
             cv_zero_14 SaldoFinCaixa,
             'N' UsuariodeECF,
             lpad(nvl(pk_csf.fkg_cnpjcpf_pessoa_id(en_pessoa_id => pr.id), 0  ), 11, 0  ) CPFDeclarante,
             lpad(nvl(pr.nome         , ' '), 50, ' ') NomeDeclarante,
             lpad(nvl(co.crc          , 0  ), 10, 0  ) NroCRCContabili,
             lpad(nvl(ec.sigla_estado , ' '), 2 , ' ') UFCRCContabili,
             lpad(nvl(pc.nome         , ' '), 50, ' ') Nome_Contabili,
             lpad(nvl(pc.fone         , ' '), 20, ' ') Telef_Contabili
        from empresa e,
             pessoa p,
             juridica j,
             contador_empresa ce,
             contador co,
             pessoa pc,
             cidade cc,
             estado ec,
             (select distinct empresa_id, pessoa_id from resp_empresa) re1 /*resp_empresa re*/,
             pessoa pr
       where p.id              = e.pessoa_id
         and j.pessoa_id       = p.id
         and ce.empresa_id(+)  = e.id
         and co.id(+)          = ce.contador_id
         and pc.id(+)          = co.pessoa_id
         and cc.id(+)          = pc.cidade_id
         and ec.id(+)          = cc.estado_id
         and re1.empresa_id(+) = e.id
         and pr.id(+)          = re1.pessoa_id
         and ce.dm_situacao(+) = 1 -- 1 - Ativo / 0 - Inativo
         and e.id              = gt_row_abertura_gia.empresa_id;
   --
   -- Busca as informações do ICMS
   cursor c_segmento_A02 is
      select lpad(sum(ai.vl_total_debito * 100), 14, 0) SaiPrestDebImp,
             --lpad(replace(nvl(sum(ai.vl_total_ajust_deb), 0), ',', ''), 14, 0) OutrosDebitos,
             lpad(0, 14, 0) OutrosDebitos,
             lpad(sum(ai.vl_estorno_credito * 100), 14, 0) EstornoCreditos,
             lpad(sum(ai.vl_total_credito * 100), 14, 0) EntrAquiCredImp,
             --, lpad(sum(nvl(ai.vl_total_ajust_cred, 0)), 14,0) OutrosCreditosI
             lpad(0, 14, 0) OutrosCreditosI,
             lpad(sum(ai.vl_estorno_debido * 100), 14, 0) EstornoDebitos,
             --lpad(replace(nvl(sum(ai.vl_saldo_credor_ant), 0),',',''), 14, 0) SldCredorPerAnt,
             lpad(0, 14, 0) SldCredorPerAnt,
             lpad(sum(ai.vl_total_deducao * 100), 14, 0) Deducoes
        from apuracao_icms ai
       where ai.empresa_id  = gt_row_abertura_gia.empresa_id
         and ai.dt_inicio  >= gt_row_abertura_gia.dt_ini
         and ai.dt_fim     <= gt_row_abertura_gia.dt_fin
         and ai.dm_tipo     = 0 -- 0 - Real / 1 - Simulada
         and ai.dm_situacao = 3; -- Processada
   --
   -- Busca as informações do ICMS c/ substituição tributária
   cursor c_segmento_A03 is
      select cv_zero_14 DifAliqRecolher,
             lpad(replace(nvl(sum(ai.vl_base_calc_icms_st), 0), ',', ''), 14, 0) BaseCalculo,
             lpad(replace(nvl(sum(ai.vl_icms_recol_st), 0), ',', ''), 14, 0) IcmsSubstTrib,
             lpad(replace(nvl(sum(vn_vl_total_credito), 0), ',', ''), 14, 0) CreditoIcms,
             lpad(replace(nvl(sum(ai.vl_aj_credito_st), 0), ',', ''), 14, 0) OutrosCreditosA,
             '10.00' VersaoArquivo,
             cv_zero_14 DifAliqPeriodo,
             cv_zero_14 DifAliqAnterior,
             cv_branco_01 TipoEncerrEscri,
             cv_branco_255 ObservEncerrG,
             cv_zero_14 CompAliqPeriodo,
             cv_zero_14 DifAliqConsFin,
             'N' HouveMudDomici,
             cv_zero_07 MunicipAnterior,
             cv_branco_08 DtIniCidAtual,
             cv_branco_08 DtFinCidAtual,
             cv_branco_08 DtIniCidAnter,
             cv_branco_08 DtFimCidAnter
        from apuracao_icms_st ai,
             per_apur_icms_st pa
       where pa.id         = ai.perapuricmsst_id
         and pa.empresa_id = gt_row_abertura_gia.empresa_id
         and pa.dt_inicio >= gt_row_abertura_gia.dt_ini
         and pa.dt_fim    <= gt_row_abertura_gia.dt_fin
         and pa.dm_tipo    = 0; -- 0 - Real / 1 - Simulada
   --
   -- Notas Fiscais - Mercantis
   cursor c_segmento_B01 is
    select nf.id,
           mf.cod_mod,
           lpad(nf.dm_ind_oper, 1, ' ') /* 0 - Entrada, 1 - Saída */ IndEntradaSaida,
           nf.dm_ind_final,
           nf.dm_ind_oper
      from nota_fiscal nf,
           mod_fiscal mf
     where nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and nf.modfiscal_id    = mf.id
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and mf.cod_mod in ('01', '1B', '04', '55', '65')
     order by 1;
   --
   cursor c_segmento_B02(en_notafiscal_id nota_fiscal.id%type) is
     select inf.id,
            inf.cfop,
            inf.vl_item_bruto,
            inf.vl_frete,
            inf.vl_seguro,
            inf.vl_outro,
            inf.vl_desc,
            substr(cf.descr, 1, 255) descr_cfop
       from item_nota_fiscal inf,
            cfop cf
      where inf.notafiscal_id = en_notafiscal_id
        and inf.cfop_id       = inf.cfop_id
        and cf.id             = inf.cfop_id
      order by inf.cfop;
   --
   -- Notas Fiscais - Serviços Contínuos
   cursor c_segmento_B03 is
    select na.id,
           c.cd cfop,
           lpad(nf.dm_ind_oper, 1, ' ') /* 0 - Entrada, 1 - Saída */ IndEntradaSaida,
           na.vl_operacao,
           na.vl_red_bc_icms,
           na.vl_ipi,
           na.vl_bc_icms,
           nf.id notafiscal_id,
           nf.dm_ind_final,
           nf.dm_ind_oper
      from nota_fiscal nf,
           nfregist_analit na,
           mod_fiscal m,
           cfop c
     where nf.id              = na.notafiscal_id
       and nf.modfiscal_id    = m.id
       and nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and c.id               = na.cfop_id
       and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
       and m.cod_mod         in ('06', '21', '22', '28', '29')
     order by 1;
   --
   -- Conhecimento de transporte
   cursor c_segmento_B04 is
      select cr.id             id,
             c.cd              CFOP,
             lpad(ct.dm_ind_oper, 1, ' ') /* 0 - Entrada, 1 - Saída */IndEntradaSaida,
             cr.vl_bc_icms     BaseDeCalculo,
             cr.vl_base_isenta IsentasNaoTrib,
             cr.vl_base_outro  Outras,
             cr.vl_opr         ValorContabil,
             ct.id             conhectransp_id,
             ct.dm_ind_oper
        from conhec_transp ct,
             ct_reg_anal cr,
             cfop c
       where ct.id         = cr.conhectransp_id
         and ct.empresa_id = gt_row_abertura_gia.empresa_id
         and c.id          = cr.cfop_id
         and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent, ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent, ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin));
   --
   -- Estoque por inventário
   cursor c_segmento_C01 is
      select iv.id inventario_id,
             trunc(iv.dt_inventario, 'mm') dt_inventario,
             nvl(iv.vl_item, 0) vl_item,
             trunc(iv.dt_ref) dt_ref
        from inventario iv
       where iv.empresa_id = gt_row_abertura_gia.empresa_id
         and iv.dm_st_proc = 1
         and ((trunc(iv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(to_date(gt_row_abertura_gia.dt_ini), 'rrrr'), 'rrrr') - 2)))
               or
              (trunc(iv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(to_date(gt_row_abertura_gia.dt_ini), 'rrrr'), 'rrrr') - 1))))
         and nvl(iv.vl_item, 0) > 0;
   --
   cursor c_segmento_C02(en_inventario_id in inventario.id%type) is
      select cs.cod_st,
             replace(nvl(sum(nvl(ic.vl_bc_icms, 0)), 0), ',', '') vl_bc_icms,
             replace(nvl(sum(nvl(ic.vl_icms, 0)), 0), ',', '') vl_icms
        from invent_cst ic,
             cod_st cs
       where ic.inventario_id = en_inventario_id
         and cs.id            = ic.codst_id
       group by cs.cod_st;
  --
  -- Detalhamento das Entradas/Saídas de Mercadorias e/ou Aquisições/Prestações de Serviços por Unidade da Federação
  cursor c_segmento_D01 is
    select 'D' Segmento,
           lpad(vv_inscricao_estadual, 9, ' ') InscriEstadual,
           to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy') PeriodoRef,
           lpad(gt_row_abertura_gia.dm_tipo_gia, 2, ' ') Retificacao,
           lpad(nf.dm_ind_oper, 1, ' ') /* 0 - Entrada, 1 - Saída */ IndEntradaSaida,
           lpad(etc.cd, 2, ' ') CodUfGia,
           lpad(replace(sum(nvl(n.vl_base_isenta, 0)), ',', ''), 14, 0) IsentasNTribut,
           lpad(replace(sum(nvl(n.vl_base_outro, 0)), ',', ''), 14, 0) Outras,
           lpad(replace(sum(nvl(n.vl_icms_st, 0)), ',', ''), 14, 0) SubstTributaria,
           lpad(replace(sum(case
                              when nf.dm_ind_final = 1 and nf.dm_ind_oper = 1 then
                               0
                              else
                               n.vl_bc_icms
                            end), ',', ''), 14, 0) BaseDeCalcES,
           lpad(replace(sum(case
                              when nf.dm_ind_final = 1 and nf.dm_ind_oper = 1 then
                               n.vl_bc_icms
                              else
                               0
                            end), ',', ''), 14, 0) BaseDeCalcSai,
           lpad(replace(sum(case
                              when nf.dm_ind_final = 1 and nf.dm_ind_oper = 1 then
                               0
                              else
                               n.vl_operacao
                            end), ',', ''), 14, 0) VlrContabilES,
           lpad(replace(sum(case
                              when nf.dm_ind_final = 1 and nf.dm_ind_oper = 1 then
                               n.vl_operacao
                              else
                               0
                            end), ',', ''), 14, 0) VlrContabilSai,
           row_number() over(order by 1) rnum
      from nota_fiscal         nf,
           mod_fiscal          mf,
           pessoa              p,
           cidade              c,
           estado_tipo_cod_arq etc,
           tipo_cod_arq        tca,
           nfregist_analit     n
     where mf.id              = nf.modfiscal_id
       and n.notafiscal_id    = nf.id
       and nf.pessoa_id       = p.id
       and p.cidade_id        = c.id
       and etc.estado_id      = c.estado_id
       and tca.id             = etc.tipocodarq_id
       and tca.cd             = 25 -- Giam-TO
       and nf.dm_arm_nfe_terc = 0
       and nf.dm_st_proc      = 4 -- Autorizada
       and mf.cod_mod         in ('01', '1B', '04', '55', '65', '06', '21', '22', '29')
       and nf.empresa_id      = gt_row_abertura_gia.empresa_id
       and ((nf.dm_ind_emit   = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent, nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
     group by nf.dm_ind_oper, etc.cd, nf.empresa_id
    union
    select 'D' Segmento,
           lpad(vv_inscricao_estadual, 9, ' ') InscriEstadual,
           to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy') PeriodoRef,
           lpad(gt_row_abertura_gia.dm_tipo_gia, 2, ' ') Retificacao,
           lpad(ct.dm_ind_oper, 1, ' ') /* 0 - Entrada, 1 - Saída */ IndEntradaSaida,
           lpad(etc.cd, 2, ' ') CodUfGia,
           lpad(replace(sum(nvl(ctr.vl_base_isenta, 0)), ',', ''), 14, 0) IsentasNTribut,
           lpad(replace(sum(nvl(ctr.vl_base_outro, 0)), ',', ''), 14, 0) Outras,
           lpad(replace(0, ',', ''), 14, 0) SubstTributaria,
           lpad(replace(sum(case
                              when ct.dm_ind_oper = 1 then
                               0
                              else
                               ctr.vl_bc_icms
                            end), ',', ''), 14, 0) BaseDeCalcES,
           lpad(replace(sum(case
                              when ct.dm_ind_oper = 1 then
                               ctr.vl_bc_icms
                              else
                               0
                            end), ',', ''), 14, 0) BaseDeCalcSai,
           lpad(replace(sum(case
                              when ct.dm_ind_oper = 1 then
                               0
                              else
                               ctr.vl_opr
                            end), ',', ''), 14, 0) VlrContabilES,
           lpad(replace(sum(case
                              when ct.dm_ind_oper = 1 then
                               ctr.vl_opr
                              else
                               0
                            end), ',', ''), 14, 0) VlrContabilSai,
           row_number() over(order by 1) rnum
      from conhec_transp       ct,
           ct_reg_anal         ctr,
           mod_fiscal          mf,
           pessoa              p,
           cidade              c,
           estado_tipo_cod_arq etc,
           tipo_cod_arq        tca
     where ct.id              = ctr.conhectransp_id
       and ct.modfiscal_id    = mf.id
       and ct.pessoa_id       = p.id
       and p.cidade_id        = c.id
       and c.estado_id        = etc.estado_id
       and etc.tipocodarq_id  = tca.id
       and tca.cd             = 25 -- Giam-TO
       and ct.dm_arm_cte_terc = 0
       and ct.dm_st_proc      = 4 -- Autorizada
       and mf.cod_mod         in ('57', '67', '07')
       and ct.empresa_id      = gt_row_abertura_gia.empresa_id
       and ((ct.dm_ind_emit = 1 and trunc(ct.dt_hr_ent_sist) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_ent_sist) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_ent_sist) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
             or
            (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(ct.dt_hr_ent_sist) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
     group by ct.dm_ind_oper,
              etc.cd;
   --
   -- Demonstrativo do ICMS a Recolher
   cursor c_segmento_E01 is
      select case
         when x.OrdemTable = 1 and x.CD = '000' then
          'N'
         when x.OrdemTable = 1 and x.CD = '003' then
          'D'
         when x.OrdemTable in (1, 2) and x.CD in ('001', '002') then
          'S'
         when x.OrdemTable = 3 and x.CD in ('003') then
          'F'
         when x.OrdemTable in (1, 2, 3) and x.CD in ('006') then
          'P'
         else
          'N'
       end TipoIcms,
       x.DataVencimento,
       x.VlrIcmsRecolher,
       x.CD,
       row_number() over(order by 1) rnum
  from (select '1' OrdemTable,
               to_char(ob.dt_vencto_obrig, 'ddmmyyyy') DataVencimento,
               lpad(sum(nvl(ai.vl_icms_recolher, 0) * 100), 14, 0) VlrIcmsRecolher,
               aj.cd
          from apuracao_icms ai,
               obrig_rec_apur_icms ob,
               aj_obrig_rec aj
         where ob.apuracaoicms_id   = ai.id
           and ob.ajobrigrec_id     = aj.id
           and ai.dm_situacao       = 3 -- Processada
           and ai.dm_tipo           = 0 -- Real
           and ai.empresa_id        = gt_row_abertura_gia.empresa_id
           and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
           and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
         group by aj.cd,
                  ob.dt_vencto_obrig
        union
        select '2' OrdemTable,
               to_char(o.dt_vencto_obrig, 'ddmmyyyy') DataVencimento,
               lpad(sum(nvl(a.vl_icms_recol_st, 0) * 100), 14, 0) VlrIcmsRecolher,
               aj.cd
          from per_apur_icms_st       p,
               apuracao_icms_st       a,
               obrig_rec_apur_icms_st o,
               aj_obrig_rec           aj
         where p.id                = a.perapuricmsst_id
           and a.id                = o.apuracaoicmsst_id
           and aj.id               = o.ajobrigrec_id
           and a.dm_situacao       = 3 -- Processada
           and p.dm_tipo           = 0 -- Real
           and p.empresa_id        = gt_row_abertura_gia.empresa_id
           and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
           and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
         group by aj.cd,
                  o.dt_vencto_obrig
        union
        select '3' OrdemTable,
               to_char(ob.dt_vcto, 'ddmmyyyy') DataVencimento,
               lpad(sum(nvl(ai.vl_recol, 0) * 100), 14, 0) VlrIcmsRecolher,
               aj.cd
          from per_apur_icms_difal     p,
               apur_icms_difal         ai,
               obr_rec_apur_icms_difal ob,
               aj_obrig_rec            aj
         where p.id                = ai.perapuricmsdifal_id
           and ai.id               = ob.apuricmsdifal_id
           and aj.id               = ob.ajobrigrec_id
           and ai.dm_situacao      = 3 -- Processada
           and p.dm_tipo           = 0 -- Real
           and p.empresa_id        = gt_row_abertura_gia.empresa_id
           and trunc(p.dt_inicio) >= gt_row_abertura_gia.dt_ini
           and trunc(p.dt_fim)    <= gt_row_abertura_gia.dt_fin
         group by aj.cd,
                  ob.dt_vcto) x;
   --
   -- Especificação de Outros Créditos
   cursor c_segmento_K01 is
      select sum(nvl(aa.vl_aj_apur, 0)) VlrCredito,
             sg.cd CodBaseLegal,
             row_number() over(order by 1) rnum
        from apuracao_icms          ai, 
             ajust_apuracao_icms    aa,
             cod_aj_saldo_apur_icms ca,
             ajust_apur_icms_gia    aai,
             subitem_gia            sg
       where aa.apuracaoicms_id   = ai.id
         and ca.id                = aa.codajsaldoapuricms_id
         and aa.id                = aai.ajustapuracaoicms_id
         and aai.subitemgia_id    = sg.id
         and ai.dm_situacao       = 3 -- 0 - Aberto, 1 - Calculada, 2 - Erro no Cálculo, 3 - Processada, 4 - Erro de Validação
         and ai.dm_tipo           = 0 -- 0 - Real, 1 - Simulada
         and ca.dm_apur           = 0 -- 0 - ICMS, 1 - ICMSST
         and ca.dm_util           = 2 -- Outros Créditos
         and ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
       group by sg.cd;
   --
   -- Especificação das Deduções
   cursor c_segmento_L01 is
      select lpad(replace(sum(nvl(ai.vl_icms_recolher, 0)), ',', ''), 14, 0) IcmsDevido,
             lpad(replace(sum(nvl(ai.vl_total_deducao, 0)), ',', ''), 14, 0) VlrDeducao,
             case
               when substr(aai.descr_compl_aj, 1, 2) = '01' then
                 '01'
                when substr(aai.descr_compl_aj, 1, 2) = '02' then
                 '02'
                when substr(aai.descr_compl_aj, 1, 2) = '03' then
                 '03'
                else
                 '99'
              end CodBaseLegal,
              row_number() over(order by 1) rnum
         from apuracao_icms ai,
              ajust_apuracao_icms aai
        where aai.apuracaoicms_id  = ai.id
          and ai.dm_situacao       = 3 -- Processada
          and ai.dm_tipo           = 0 -- Real
          and ai.empresa_id        = gt_row_abertura_gia.empresa_id
          and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
          and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
        group by substr(aai.descr_compl_aj, 1, 2);
   --
   -- Saídas e/ou Prestações e Entradas e/ou Aquisições do Estabelecimento do Contribuinte por Município de Origem
   cursor c_segmento_M01 is
      select lpad(nd.cidade_ibge, 14, 0) MunicipioOrigem,
             lpad(replace(sum(nvl(case
                            when nf.dm_ind_oper = 1 then
                             ii.vl_base_calc
                            else
                             0
                          end,
                          0)), ',', ''), 14, 0) SaidasPrestacoe,
             lpad(replace(sum(nvl(case
                            when nf.dm_ind_oper = 0 then
                             ii.vl_base_calc
                            else
                             0
                          end,
                          0)), ',', ''), 14, 0) EntraAquisicoes,
             row_number() over(order by 1) rnum
        from nota_fiscal      nf,
             mod_fiscal       mf,
             item_nota_fiscal inf,
             imp_itemnf       ii,
             tipo_imposto     ti,
             nota_fiscal_emit ne,
             nota_fiscal_dest nd
       where mf.id              = nf.modfiscal_id
         and inf.notafiscal_id  = nf.id
         and ii.itemnf_id(+)    = inf.id
         and ti.id(+)           = ii.tipoimp_id
         and ne.notafiscal_id   = nf.id
         and nd.notafiscal_id   = nf.id
         and ii.dm_tipo         = 0 -- Imposto
         and ti.cd              = 1 -- ICMS
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and mf.cod_mod         in ('01', '1B', '04', '55', '65')
         and nd.uf              = 'TO'
         and nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      group by nd.cidade_ibge;
   --
   -- Relação de Mercadorias e/ou Produtos Adquiridos de Outros Municípios Tocantinenses com Diferimento de ICMS
   cursor c_segmento_N01 is
      select lpad(nd.ie, 9, 0) IdentEmpresa,
             lpad(nd.cidade_ibge, 7, 0) CodIbgeMunicipi,
             lpad(replace(sum(nvl(ii.vl_base_calc, 0)), ',', ''), 14, 0) VlrTotNotasFisc,
             row_number() over(order by 1) rnum
        from nota_fiscal      nf,
             mod_fiscal       mf,
             item_nota_fiscal inf,
             imp_itemnf       ii,
             tipo_imposto     ti,
             nota_fiscal_emit ne,
             nota_fiscal_dest nd,
             cod_st           cs
       where mf.id              = nf.modfiscal_id
         and inf.notafiscal_id  = nf.id
         and ii.itemnf_id(+)    = inf.id
         and ti.id(+)           = ii.tipoimp_id
         and ne.notafiscal_id   = nf.id
         and nd.notafiscal_id   = nf.id
         and cs.id              = ii.codst_id
         and ii.dm_tipo         = 0 -- Imposto
         and ti.cd              = 1 -- ICMS
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and mf.cod_mod         in ('01', '55')
         and ne.uf              = 'TO'
         and cs.cod_st          = '51' -- Diferimento
         and nf.dm_ind_oper     = 0 -- Entradas (Adquiridos)
         and nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      group by nd.ie,
               nd.cidade_ibge;
   --
   -- Relação de Mercadorias e/ou Produtos Adquiridos de Outros Municípios Tocantinenses com Diferimento de ICMS
   cursor c_segmento_O01 is
      select lpad(nd.ie, 9, ' ') IdentEmpresa,
             lpad(nf.nro_nf, 7, 0) NroNotaFiscal,
             lpad(replace(sum(nvl(ii.vl_base_calc, 0)), ',', ''), 14, 0) ValorDaNota,
             row_number() over(order by 1) rnum
        from nota_fiscal      nf,
             mod_fiscal       mf,
             item_nota_fiscal inf,
             imp_itemnf       ii,
             tipo_imposto     ti,
             nota_fiscal_emit ne,
             nota_fiscal_dest nd,
             cod_st           cs
       where mf.id              = nf.modfiscal_id
         and inf.notafiscal_id  = nf.id
         and ii.itemnf_id(+)    = inf.id
         and ti.id(+)           =  ii.tipoimp_id
         and ne.notafiscal_id   = nf.id
         and nd.notafiscal_id   = nf.id
         and cs.id              = ii.codst_id
         and ii.dm_tipo         = 0 -- Imposto
         and ti.cd              = 1 -- ICMS
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and mf.cod_mod         in ('01', '55')
         and ne.uf              = 'TO'
         and cs.cod_st          = '51' -- Diferimento
         and nf.dm_ind_oper     = 0 -- Entradas (Adquiridos)
         and nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      group by nd.ie, nf.nro_nf;
   --
   -- Especificação do Diferencial de Alíquotas por UF
   cursor c_segmento_P01 is
      select lpad(etc.cd, 2, ' ') CodUfGia,
             inf.id itemnf_id,
             lpad(nf.dm_ind_oper, 1, ' ') /* 0 - Entrada, 1 - Saída */ IndEntradaSaida,
             lpad(replace(sum(nvl(ii.vl_base_calc, 0)), ',', ''), 14, 0) BaseDeCalcES,
             lpad(replace(sum(nvl(ii.vl_base_isenta, 0)), ',', ''), 14, 0) IsentasNTribut,
             lpad(replace(sum(nvl(ii.vl_base_outro, 0)), ',', ''), 14, 0) Outras,
             lpad(replace(sum(nvl(ii.vl_bc_st_dest, 0)), ',', ''), 14, 0) SubstTributaria,
             lpad(max(nvl(ii.aliq_apli, 0)), 4, ' ') Aliquota,
             lpad(replace(sum(nvl(ida.vl_bc_icms, 0)), ',', ''), 14, 0) BaseDeCalculo,
             lpad(replace(sum(nvl(ida.aliq_orig, 0)), ',', ''), 14, 0) DiferencialAliq,
             row_number() over(order by 1) rnum
        from nota_fiscal         nf,
             mod_fiscal          mf,
             item_nota_fiscal    inf,
             imp_itemnf          ii,
             tipo_imposto        ti,
             nota_fiscal_dest    nd,
             itemnf_dif_aliq     ida,
             cidade              c,
             estado_tipo_cod_arq etc,
             tipo_cod_arq        tca
       where mf.id              = nf.modfiscal_id
         and inf.notafiscal_id  = nf.id
         and ii.itemnf_id(+)    = inf.id
         and ti.id(+)           = ii.tipoimp_id
         and nd.notafiscal_id   = nf.id
         and ida.itemnf_id      = inf.id
         and c.ibge_cidade      = nd.cidade_ibge
         and etc.estado_id      = c.estado_id
         and tca.id             = etc.tipocodarq_id
         and tca.cd             = 25 -- Giam-TO
         and ii.dm_tipo         = 0 -- Imposto
         and ti.cd              = 1 -- ICMS
         and nf.dm_arm_nfe_terc = 0
         and nf.dm_st_proc      = 4 -- Autorizada
         and mf.cod_mod         in ('01', '55')
         and nf.empresa_id      = gt_row_abertura_gia.empresa_id
         and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
               or
              (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
        group by etc.cd, inf.id,
                 nf.dm_ind_oper
        having max(nvl(ii.aliq_apli, 0)) > 0
        order by 1;
   --
   -- Especificação de Outros Débitos
   cursor c_segmento_R01 is
      select sum(nvl(ag.vl_aj_apur, 0)) VlrDebito,
             case
               when substr(aa.descr_compl_aj, 1, 2) = '01' then
                 '01'
                when substr(aa.descr_compl_aj, 1, 2) = '02' then
                 '02'
                when substr(aa.descr_compl_aj, 1, 2) = '03' then
                 '03'
                else
                 '99'
              end CodBaseLegal,
             row_number() over(order by 1) rnum
        from ajust_apur_icms_gia    ag,
             ajust_apuracao_icms    aa,
             cod_aj_saldo_apur_icms ca,
             apuracao_icms          ai
       where aa.id                = ag.ajustapuracaoicms_id
         and ca.id                = aa.codajsaldoapuricms_id
         and ai.id                = aa.apuracaoicms_id
         and ai.dm_situacao       = 3 -- 0 - Aberto, 1 - Calculada, 2 - Erro no Cálculo, 3 - Processada, 4 - Erro de Validação
         and ai.dm_tipo           = 0 -- 0 - Real, 1 - Simulada
         and ca.dm_apur           = 0 -- 0 - ICMS, 1 - ICMSST
         and ca.dm_util           = 0 -- Outros Débitos
         and ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
       group by substr(aa.descr_compl_aj, 1, 2);
   --
   -- Especificação do Diferencial de Alíquotas Consumidor Final (Saídas) por UF
   cursor c_segmento_S01 is
      select lpad(x.CodUfGia, 2, ' ') CodUfGia,
             sum(x.ValorContabil) ValorContabil,
             sum(x.BaseDeCalcES) BaseDeCalcES,
             sum(x.IsentasNTribut) IsentasNTribut,
             sum(x.Outras) Outras,
             sum(x.SubstTributaria) SubstTributaria,
             x.AliqConsumidor AliqConsumidor,
             sum(x.BaseDeCalculo) BaseDeCalculo,
             sum(x.DiferencialAliq) DiferencialAliq,
             sum(x.Origem) Origem,
             sum(x.Destino) Destino,
             row_number() over(order by 1) rnum
       from (select inf.id ItemnfId,
                    lpad(nf.dm_ind_oper, 1, ' ') /* 0 - Entrada, 1 - Saída */ IndEntradaSaida,
                    etc.cd CodUfGia,
                    nvl(sum(na.vl_operacao), 0) ValorContabil,
                    nvl(sum(ii.vl_base_calc), 0) BaseDeCalcES,
                    nvl(sum(ii.vl_base_isenta), 0) IsentasNTribut,
                    nvl(sum(ii.vl_base_outro), 0) Outras,
                    nvl(sum(ii.vl_bc_st_dest), 0) SubstTributaria,
                    lpad(max(nvl(iii.perc_icms_uf_dest, 0)), 4, 0) AliqConsumidor,
                    nvl(sum(ii.vl_base_calc), 0) BaseDeCalculo,
                    nvl(sum(nvl(iii.vl_icms_uf_dest, 0) + nvl(iii.vl_icms_uf_remet,0)), 0) DiferencialAliq,
                    nvl(sum(iii.vl_icms_uf_remet), 0) /* * 0.2*/ Origem,
                    nvl(sum(iii.vl_icms_uf_dest), 0) /* * 0.8*/ Destino
               from nota_fiscal         nf,
                    mod_fiscal          mf,
                    item_nota_fiscal    inf,
                    imp_itemnf          ii,
                    tipo_imposto        ti,
                    nota_fiscal_dest    nd,
                    --itemnf_dif_aliq     ida,
                    cidade              c,
                    estado_tipo_cod_arq etc,
                    tipo_cod_arq        tca,
                    imp_itemnf_icms_dest iii,
                    nfregist_analit      na
              where mf.id              = nf.modfiscal_id
                and inf.notafiscal_id  = nf.id
                and ii.itemnf_id(+)    = inf.id
                and ti.id(+)           = ii.tipoimp_id
                and nd.notafiscal_id   = nf.id
                --and ida.itemnf_id      = inf.id
                and c.ibge_cidade      = nd.cidade_ibge
                and etc.estado_id      = c.estado_id
                and etc.tipocodarq_id  = tca.id
                and iii.impitemnf_id   = ii.id
                and na.notafiscal_id   = nf.id
                and tca.cd             = 25 -- Giam-TO
                and ii.dm_tipo         = 0 -- Imposto
                and ti.cd              = 1 -- ICMS
                and nf.dm_arm_nfe_terc = 0
                and nf.dm_st_proc      = 4 -- Autorizada
                and mf.cod_mod         in ('01', '1B', '04', '55', '65')
                and nf.dm_ind_oper     = 1
                and nf.empresa_id      = gt_row_abertura_gia.empresa_id
                and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                      or
                     (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                      or
                     (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
                      or
                     (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
               group by inf.id,
                        nf.dm_ind_oper,
                        etc.cd) x
            group by x.CodUfGia,
                     x.AliqConsumidor
            order by 1;
   --
   cursor c_conveio is
    select e.convenio,
           e.dt_ini,
           e.dt_fin
      from empresa_forma_trib e
     where e.empresa_id = gt_row_abertura_gia.empresa_id
       and e.convenio   is not null -- Existe convenio informado
     order by 3 desc;
   --
   cursor c_CodUfGia_nf(en_notafiscal_id nota_fiscal.id%type) is
     select lpad(etc.cd, 2, ' ') CodUfGia
       from nota_fiscal         nf,
            mod_fiscal          mf,
            pessoa              p,
            cidade              c,
            estado_tipo_cod_arq etc,
            tipo_cod_arq        tca,
            nfregist_analit     n
      where mf.id              = nf.modfiscal_id
        and n.notafiscal_id    = nf.id
        and nf.pessoa_id       = p.id
        and p.cidade_id        = c.id
        and etc.estado_id      = c.estado_id
        and tca.id             = etc.tipocodarq_id
        and tca.cd             = 25 -- Giam-TO
        and nf.dm_arm_nfe_terc = 0
        and nf.dm_st_proc      = 4 -- Autorizada
        and mf.cod_mod         in ('01', '1B', '04', '55', '65', '06', '21', '22', '29')
        and nf.id              = en_notafiscal_id
      group by lpad(etc.cd, 2, ' ');
      --
   cursor c_CodUfGia_ct(en_conhectransp_id conhec_transp.id%type) is
     select lpad(etc.cd, 2, ' ') CodUfGia
       from conhec_transp       ct,
            mod_fiscal          mf,
            pessoa              p,
            cidade              c,
            estado_tipo_cod_arq etc,
            tipo_cod_arq        tca,
            ct_reg_anal         cr
      where mf.id              = ct.modfiscal_id
        and cr.conhectransp_id = ct.id
        and ct.pessoa_id       = p.id
        and p.cidade_id        = c.id
        and etc.estado_id      = c.estado_id
        and tca.id             = etc.tipocodarq_id
        and tca.cd             = 25 -- Giam-TO
        and ct.dm_st_proc      = 4 -- Autorizada
        and mf.cod_mod         in ('57', '07', '67')
        and ct.id              = en_conhectransp_id
      group by lpad(etc.cd, 2, ' ');
   --
   -- PROCEDURES ----------------------
   procedure pkb_limpa_vetor_to is
     --
   begin
     --
     vt_tab_segm_A.delete;
     vt_bi_tab_segm_B.delete;
     vt_tab_segm_C.delete;
     vt_tri_tab_segm_D.delete;
     vt_tab_segm_E.delete;
     vt_tab_segm_J.delete;
     vt_tab_segm_K.delete;
     vt_tab_segm_L.delete;
     vt_tab_segm_M.delete;
     vt_tab_segm_N.delete;
     vt_tab_segm_O.delete;
     vt_tab_segm_P.delete;
     vt_tab_segm_R.delete;
     vt_tab_segm_S.delete;
     vt_tab_segm_Z.delete;
     --
   end pkb_limpa_vetor_to;
   --
   -- procedimento monta a estrutura do arquivo da GIA - TO
   procedure pkb_monta_estr_arq_gia_to is
   begin
     --
     vn_fase := 1;
     --
     -- Segmento A - Informações Econômico-Fiscais / Identificação do Contribuinte / Apuração do Imposto
     if nvl(vt_tab_segm_A.count, 0) > 0 then
       --
       vn_fase := 1.1;
       --
       i := nvl(vt_tab_segm_A.first, 0);
       --
       loop
         --
         vn_fase := 1.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 1.3;
         --
         gl_conteudo := vt_tab_segm_A(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).InscrEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).AtvEconPrincip;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).TipoEstabelecim;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).PortadorTare;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).TipoEscriturac;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).SaldoIniCaixa;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).SaldoFinCaixa;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).UsuariodeECF;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).CPFDeclarante;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).NomeDeclarante;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).NroCRCContabili;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).UFCRCContabili;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).Nome_Contabili;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).Telef_Contabili;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).SaiPrestDebImp;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).OutrosDebitos;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).EstornoCreditos;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).EntrAquiCredImp;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).OutrosCreditosI;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).EstornoDebitos;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).SldCredorPerAnt;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).Deducoes;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DifAliqRecolher;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).ValorProdutos;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).BaseCalculo;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).IcmsSubstTrib;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).CreditoIcms;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).OutrosCreditosA;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).NumeroTare;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).VersaoArquivo;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DtVencimTare;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DifAliqPeriodo;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DifAliqAnterior;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).TipoEncerrEscri;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).ObservEncerrG;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).CompAliqPeriodo;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DifAliqConsFin;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).HouveMudDomici;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).MunicipAnterior;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DtIniCidAtual;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DtFinCidAtual;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DtIniCidAnter;
         gl_conteudo := gl_conteudo || vt_tab_segm_A(i).DtFimCidAnter;
         --
         vn_fase := 1.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'A',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 1.5;
         --
         if i = vt_tab_segm_A.last then
           exit;
         else
           i := vt_tab_segm_A.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 2;
     --
     -- Segmento B - Entradas e Saídas de Mercadorias, Bens e/ou Serviços no Estabelecimento do Contribuinte
     if nvl(vt_bi_tab_segm_B.count, 0) > 0 then
       --
       i := nvl(vt_bi_tab_segm_B.first, 0);
       --
       vn_fase := 2.1;
       --
       loop
         --
         vn_fase := 2.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 2.3;
         --
         begin
           vn_qtde_segmB := vt_bi_tab_segm_B(i).count;
         exception
           when others then
             vn_qtde_segmB := 0;
         end;
         --
         if nvl(vn_qtde_segmB, 0) > 0 then
           --
           j := vt_bi_tab_segm_B(i).first;
           --
           loop
             --
             if nvl(j, 0) = 0 then
               exit;
             end if;
             --
             vn_qtd_linhas := nvl(vn_qtd_linhas, 0) + 1;
             --
             gl_conteudo := vt_bi_tab_segm_B(i)(j).Segmento;
             gl_conteudo := gl_conteudo || vt_bi_tab_segm_B(i)(j).InscriEstadual;
             gl_conteudo := gl_conteudo || cv_branco_02;
             gl_conteudo := gl_conteudo || vt_bi_tab_segm_B(i)(j).PeriodoRef;
             gl_conteudo := gl_conteudo || vt_bi_tab_segm_B(i)(j).Retificacao;
             gl_conteudo := gl_conteudo || vt_bi_tab_segm_B(i)(j).IndEntradaSaida;
             gl_conteudo := gl_conteudo || vt_bi_tab_segm_B(i)(j).CFOP;
             gl_conteudo := gl_conteudo || lpad(replace(replace(vt_bi_tab_segm_B(i)(j).BaseDeCalculo * 100, '.', ''), ',', ''), 14, 0);
             gl_conteudo := gl_conteudo || lpad(replace(replace(vt_bi_tab_segm_B(i)(j).IsentasNaoTrib * 100, '.', ''), ',', ''), 14, 0);
             gl_conteudo := gl_conteudo || lpad(replace(replace(vt_bi_tab_segm_B(i)(j).Outras * 100, '.', ''), ',', ''), 14, 0);
             gl_conteudo := gl_conteudo || lpad(replace(replace(vt_bi_tab_segm_B(i)(j).SubstTributaria * 100, '.', ''), ',', ''), 14, 0);
             gl_conteudo := gl_conteudo || lpad(replace(replace(vt_bi_tab_segm_B(i)(j).ValorContabil * 100, '.', ''), ',', ''), 14, 0);
             gl_conteudo := gl_conteudo || lpad(replace(replace(vt_bi_tab_segm_B(i)(j).CredDebiImposto * 100, '.', ''), ',', ''), 14, 0);
             gl_conteudo := gl_conteudo || vt_bi_tab_segm_B(i)(j).DomicilioFiscal;
             --
             vn_fase := 2.4;
             --
             pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                    ev_registrogia_cd => 'B',
                                    el_conteudo       => gl_conteudo);
             --
             vn_fase := 2.5;
             --
             if j = vt_bi_tab_segm_B(i).last then
               exit;
             else
               j := vt_bi_tab_segm_B(i).next(j);
             end if;
             --
           end loop;
           --
         end if;
         --
         vn_fase := 2.6;
         --
         if i = vt_bi_tab_segm_B.last then
           exit;
         else
           i := vt_bi_tab_segm_B.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 3;
     --
     -- Segmento C - Demonstrativo do Estoque
     if nvl(vt_tab_segm_C.count, 0) > 0 then
       --
       vn_fase := 3.1;
       --
       i := nvl(vt_tab_segm_C.first, 0);
       --
       loop
         --
         vn_fase := 3.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 3.3;
         --
         gl_conteudo := vt_tab_segm_C(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).Tributadas_I;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).IsentTributad_I;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).Outras_I;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).SubstTribut_I;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).ValorTotal_I;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).Tributadas_F;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).IsentTributad_F;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).Outras_F;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).SubstTribut_F;
         gl_conteudo := gl_conteudo || vt_tab_segm_C(i).ValorTotal_F;
         --
         vn_fase := 3.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'C',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 3.5;
         --
         if i = vt_tab_segm_C.last then
           exit;
         else
           i := vt_tab_segm_C.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     --
     vn_fase := 4;
     --
     -- Segmento D - Detalhamento das Entradas/Saídas de Mercadorias e/ou Aquisições/Prestações de Serviços por Unidade da Federação
     if nvl(vt_tri_tab_segm_D.count, 0) > 0 then
       --
       vn_fase := 4.1;
       --
       i := nvl(vt_tri_tab_segm_D.first, 0);
       --
       loop
         --
         if nvl(i, -1) = -1 then
           exit;
         end if;
         --
         vn_fase := 4.2;
         --
         begin
           vn_qtde_segmD := vt_tri_tab_segm_D(i).count;
         exception
           when others then
             vn_qtde_segmD := 0;
         end;
         --
         if nvl(vn_qtde_segmD, 0) > 0 then
           --
           vn_fase := 4.3;
           --
           j := vt_tri_tab_segm_D(i).first;
           --
           loop
             --
             if nvl(j, -1) = -1 then
               exit;
             end if;
             --
             vn_fase := 4.4;
             --
             begin
               vn_qtde_segmD := vt_tri_tab_segm_D(i)(j).count;
             exception
               when others then
                 vn_qtde_segmD := 0;
             end;
             --
             if nvl(vn_qtde_segmD, 0) > 0 then
               --
               vn_fase := 4.5;
               --
               k := vt_tri_tab_segm_D(i)(j).first;
               --
               loop
                 --
                 if nvl(k, -1) = -1 then
                   exit;
                 end if;
                 --
                 vn_fase := 4.6;
                 --
                 vn_qtd_linhas := nvl(vn_qtd_linhas, 0) + 1;
                 --
                 gl_conteudo := vt_tri_tab_segm_D(i)(j)(k).Segmento;
                 gl_conteudo := gl_conteudo || vt_tri_tab_segm_D(i)(j)(k).InscriEstadual;
                 gl_conteudo := gl_conteudo || cv_branco_02;
                 gl_conteudo := gl_conteudo || vt_tri_tab_segm_D(i)(j)(k).PeriodoRef;
                 gl_conteudo := gl_conteudo || vt_tri_tab_segm_D(i)(j)(k).Retificacao;
                 gl_conteudo := gl_conteudo || vt_tri_tab_segm_D(i)(j)(k).IndEntradaSaida;
                 gl_conteudo := gl_conteudo || vt_tri_tab_segm_D(i)(j)(k).CodUfGia;
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).BaseDeCalcES * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).BaseDeCalcSai * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).IsentasNTribut * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).Outras * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).SubstTributaria * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).VlrContabilES * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).VlrContabilSai * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).CredDebImpost * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || lpad(replace(replace(vt_tri_tab_segm_D(i)(j)(k).DebitoImposto * 100, '.', ''), ',', ''), 14, 0);
                 gl_conteudo := gl_conteudo || vt_tri_tab_segm_D(i)(j)(k).DomicilioFiscal;

                 pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                        ev_registrogia_cd => 'D',
                                        el_conteudo       => gl_conteudo);

                 --
                 vn_fase := 4.7;
                 --
                 if k = vt_tri_tab_segm_D(i)(j).last then
                   exit;
                 else
                   k := vt_tri_tab_segm_D(i)(j).next(k);
                 end if;
                 --
               end loop;
               --
             end if;
             --
             vn_fase := 4.8;
             --
             if j = vt_tri_tab_segm_D(i).last then
               exit;
             else
               j := vt_tri_tab_segm_D(i).next(j);
             end if;
             --
           end loop;
           --
         end if;
         --
         vn_fase := 4.9;
         --
         if i = vt_tri_tab_segm_D.last then
           exit;
         else
           i := vt_tri_tab_segm_D.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 5;
     --
     -- Segmento E - Demonstrativo do ICMS a Recolher
     if nvl(vt_tab_segm_E.count, 0) > 0 then
       --
       vn_fase := 5.1;
       --
       i := nvl(vt_tab_segm_E.first, 0);
       --
       loop
         --
         vn_fase := 5.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 5.3;
         --
         gl_conteudo := vt_tab_segm_E(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_E(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_E(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_E(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_E(i).TipoIcms;
         gl_conteudo := gl_conteudo || vt_tab_segm_E(i).DataVencimento;
         gl_conteudo := gl_conteudo || vt_tab_segm_E(i).VlrIcmsRecolher;
         --
         vn_fase := 5.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'E',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 5.5;
         --
         if i = vt_tab_segm_E.last then
           exit;
         else
           i := vt_tab_segm_E.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 6;
     --
     -- Segmento J - Informações sobre TARE
     if nvl(vt_tab_segm_J.count, 0) > 0 then
       --
       vn_fase := 6.1;
       --
       i := nvl(vt_tab_segm_J.first, 0);
       --
       loop
         --
         vn_fase := 6.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 6.3;
         --
         gl_conteudo := vt_tab_segm_J(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_J(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_J(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_J(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_J(i).NumeroTare;
         gl_conteudo := gl_conteudo || vt_tab_segm_J(i).DtVencimTare;
         --
         vn_fase := 6.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'J',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 6.5;
         --
         if i = vt_tab_segm_J.last then
           exit;
         else
           i := vt_tab_segm_J.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 7;
     --
     -- Segmento K - Especificação de Outros Créditos
     if nvl(vt_tab_segm_K.count, 0) > 0 then
       --
       vn_fase := 7.1;
       --
       i := nvl(vt_tab_segm_K.first, 0);
       --
       loop
         --
         vn_fase := 7.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 7.3;
         --
         gl_conteudo := vt_tab_segm_K(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_K(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_K(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_K(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_K(i).CodBaseLegal;
         gl_conteudo := gl_conteudo || vt_tab_segm_K(i).VlrCredito;
         --
         vn_fase := 7.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'K',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 7.5;
         --
         if i = vt_tab_segm_K.last then
           exit;
         else
           i := vt_tab_segm_K.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 8;
     --
     -- Segmento L - Especificação das Deduções
     if nvl(vt_tab_segm_L.count, 0) > 0 then
       --
       vn_fase := 8.1;
       --
       i := nvl(vt_tab_segm_L.first, 0);
       --
       loop
         --
         vn_fase := 8.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 8.3;
         --
         gl_conteudo := vt_tab_segm_L(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_L(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_L(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_L(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_L(i).CodBaseLegal;
         gl_conteudo := gl_conteudo || vt_tab_segm_L(i).IcmsDevido;
         gl_conteudo := gl_conteudo || vt_tab_segm_L(i).MediaIcms;
         gl_conteudo := gl_conteudo || vt_tab_segm_L(i).VlrDeducao;
         --
         vn_fase := 8.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'L',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 8.5;
         --
         if i = vt_tab_segm_L.last then
           exit;
         else
           i := vt_tab_segm_L.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 9;
     --
     -- Segmento M - Saídas e/ou Prestações e Entradas e/ou Aquisições do Estabelecimento do Contribuinte por Município de Origem
     if nvl(vt_tab_segm_M.count, 0) > 0 then
       --
       vn_fase := 9.1;
       --
       i := nvl(vt_tab_segm_M.first, 0);
       --
       loop
         --
         vn_fase := 9.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 9.3;
         --
         if vt_tab_segm_M.exists(i) then
           --
           gl_conteudo := vt_tab_segm_M(i).Segmento;
           gl_conteudo := gl_conteudo || vt_tab_segm_M(i).InscriEstadual;
           gl_conteudo := gl_conteudo || cv_branco_02;
           gl_conteudo := gl_conteudo || vt_tab_segm_M(i).PeriodoRef;
           gl_conteudo := gl_conteudo || vt_tab_segm_M(i).Retificacao;
           gl_conteudo := gl_conteudo || vt_tab_segm_M(i).MunicipioOrigem;
           gl_conteudo := gl_conteudo || vt_tab_segm_M(i).DomicilioFiscal;
           gl_conteudo := gl_conteudo || vt_tab_segm_M(i).SaidasPrestacoe;
           gl_conteudo := gl_conteudo || vt_tab_segm_M(i).EntraAquisicoes;
           --
         end if;
         --
         vn_fase := 9.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'M',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 9.5;
         --
         if i = vt_tab_segm_M.last then
           exit;
         else
           i := vt_tab_segm_M.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 10;
     --
     -- Segmento N - Relação de Mercadorias e/ou Produtos Adquiridos De Outros Municípios Tocantinenses com Diferimento do ICMS
     if nvl(vt_tab_segm_N.count, 0) > 0 then
       --
       vn_fase := 10.1;
       --
       i := nvl(vt_tab_segm_N.first, 0);
       --
       loop
         --
         vn_fase := 10.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 10.3;
         --
         gl_conteudo := vt_tab_segm_N(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_N(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_N(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_N(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_N(i).IdentEmpresa;
         gl_conteudo := gl_conteudo || vt_tab_segm_N(i).DomicilioFiscal;
         gl_conteudo := gl_conteudo || vt_tab_segm_N(i).CodIbgeMunicipi;
         gl_conteudo := gl_conteudo || vt_tab_segm_N(i).VlrTotNotasFisc;
         --
         vn_fase := 10.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'N',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 10.5;
         --
         if i = vt_tab_segm_N.last then
           exit;
         else
           i := vt_tab_segm_N.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 11;
     --
     -- Segmento O - Relação de Mercadorias e/ou Produtos Adquiridos De Outros Municípios Tocantinenses com Diferimento do ICMS
     if nvl(vt_tab_segm_O.count, 0) > 0 then
       --
       vn_fase := 11.1;
       --
       i := nvl(vt_tab_segm_O.first, 0);
       --
       loop
         --
         vn_fase := 11.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 11.3;
         --
         gl_conteudo := vt_tab_segm_O(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_O(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_O(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_O(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_O(i).IdentEmpresa;
         gl_conteudo := gl_conteudo || vt_tab_segm_O(i).DomicilioFiscal;
         gl_conteudo := gl_conteudo || vt_tab_segm_O(i).NroNotaFiscal;
         gl_conteudo := gl_conteudo || vt_tab_segm_O(i).ValorDaNota;
         --
         vn_fase := 11.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'O',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 11.5;
         --
         if i = vt_tab_segm_O.last then
           exit;
         else
           i := vt_tab_segm_O.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 12;
     --
     -- Segmento P - Especificação do Diferencial de Alíquotas por UF
     if nvl(vt_tab_segm_P.count, 0) > 0 then
       --
       vn_fase := 12.1;
       --
       i := nvl(vt_tab_segm_P.first, 0);
       --
       loop
         --
         vn_fase := 12.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 12.3;
         --
         gl_conteudo := vt_tab_segm_P(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).DomicilioFiscal;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).CodUfGia;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).ValorContabil;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).BaseDeCalculo;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).DiferencialAliq;
         gl_conteudo := gl_conteudo || vt_tab_segm_P(i).Aliquota;
         --
         vn_fase := 12.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'P',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 12.5;
         --
         if i = vt_tab_segm_P.last then
           exit;
         else
           i := vt_tab_segm_P.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 13;
     --
     -- Segmento R - Especificação dos Outros Débitos
     if nvl(vt_tab_segm_R.count, 0) > 0 then
       --
       vn_fase := 13.1;
       --
       i := nvl(vt_tab_segm_R.first, 0);
       --
       loop
         --
         vn_fase := 13.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 13.3;
         --
         gl_conteudo := vt_tab_segm_R(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_R(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_R(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_R(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_R(i).CodBaseLegal;
         gl_conteudo := gl_conteudo || vt_tab_segm_R(i).VlrDebito;
         --
         vn_fase := 13.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'R',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 13.5;
         --
         if i = vt_tab_segm_R.last then
           exit;
         else
           i := vt_tab_segm_R.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 14;
     --
     -- Segmento S - Especificação do Diferencial de Alíquotas Consumidor Final (Saídas) por UF
     if nvl(vt_tab_segm_S.count, 0) > 0 then
       --
       vn_fase := 14.1;
       --
       i := nvl(vt_tab_segm_S.first, 0);
       --
       loop
         --
         vn_fase := 14.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 14.3;
         --
         gl_conteudo := vt_tab_segm_S(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).DomicilioFiscal;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).CodUfGia;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).ValorContabil;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).BaseDeCalculo;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).DiferencialAliq;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).AliqConsumidor;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).Origem;
         gl_conteudo := gl_conteudo || vt_tab_segm_S(i).Destino;
         --
         vn_fase := 14.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'S',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 14.5;
         --
         if i = vt_tab_segm_S.last then
           exit;
         else
           i := vt_tab_segm_S.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 15;
     --
     -- Segmento Z - Indica o Final da Declaração
     if nvl(vt_tab_segm_Z.count, 0) > 0 then
       --
       vn_fase := 15.1;
       --
       i := nvl(vt_tab_segm_Z.first, 0);
       --
       loop
         --
         vn_fase := 15.2;
         --
         if nvl(i, 0) = 0 then
           exit;
         end if;
         --
         vn_fase := 15.3;
         --
         gl_conteudo := vt_tab_segm_Z(i).Segmento;
         gl_conteudo := gl_conteudo || vt_tab_segm_Z(i).InscriEstadual;
         gl_conteudo := gl_conteudo || cv_branco_02;
         gl_conteudo := gl_conteudo || vt_tab_segm_Z(i).PeriodoRef;
         gl_conteudo := gl_conteudo || vt_tab_segm_Z(i).Retificacao;
         gl_conteudo := gl_conteudo || vt_tab_segm_Z(i).TotalRegistro;
         --
         vn_fase := 15.4;
         --
         pkb_armaz_estr_arq_gia(ev_tipocodarq_cd  => gv_tipocodarq_cd,
                                ev_registrogia_cd => 'Z',
                                el_conteudo       => gl_conteudo);
         --
         vn_fase := 15.5;
         --
         if i = vt_tab_segm_Z.last then
           exit;
         else
           i := vt_tab_segm_Z.next(i);
         end if;
         --
       end loop;
       --
     end if;
     --
     vn_fase := 16;
     --
     pkb_limpa_vetor_to;
     --
   exception
     when others then
       raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_monta_estr_arq_gia_to fase (' || vn_fase || '): ' || sqlerrm);
   end pkb_monta_estr_arq_gia_to;
   --
   --
begin
  --
  vn_fase := 20;
  --
  -- Recupera o número e data de vencimento do TARE
  for rec in c_conveio loop
    exit when c_conveio%notfound or(c_conveio%notfound) is null;
    --
    gv_num_tare      := rec.convenio;
    gv_dt_vencimento := to_char(rec.dt_fin, 'DDMMYYYY');
    --
    exit;
    --
  end loop;
  --
  gv_tipocodarq_cd := '25'; -- 16 - GIA-TO (Novo Sequencia)
  --
  pkb_limpa_vetor_to;
  --
  vn_fase := 21;
  --
  -- Recupera a Inscrição Estadual da Empresa - Usado em vários pontos da rotina
  vv_Inscricao_Estadual := lpad(nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), 0), 9, '0');
  --
  begin
    select r.cd
      into vv_CdVersao
      from registro_gia r
     where r.id = gt_row_abertura_gia.versaogia_id;
  exception
    when others then
      vv_CdVersao := '10.00';
  end;
  --
  vn_fase := 22;
  --
  -- Segmento A - Informações Econômico-Fiscais/Identificação do Contribuinte/Apuração do Imposto
  open c_segmento_A01;
  fetch c_segmento_A01
    into vt_tab_segm_A(1).Segmento,
         vt_tab_segm_A(1).InscrEstadual,
         vt_tab_segm_A(1).PeriodoRef,
         vt_tab_segm_A(1).Retificacao,
         vt_tab_segm_A(1).AtvEconPrincip,
         vt_tab_segm_A(1).TipoEstabelecim,
         vt_tab_segm_A(1).PortadorTare,
         vt_tab_segm_A(1).TipoEscriturac,
         vt_tab_segm_A(1).SaldoIniCaixa,
         vt_tab_segm_A(1).SaldoFinCaixa,
         vt_tab_segm_A(1).UsuariodeECF,
         vt_tab_segm_A(1).CPFDeclarante,
         vt_tab_segm_A(1).NomeDeclarante,
         vt_tab_segm_A(1).NroCRCContabili,
         vt_tab_segm_A(1).UFCRCContabili,
         vt_tab_segm_A(1).Nome_Contabili,
         vt_tab_segm_A(1).Telef_Contabili;
  close c_segmento_A01;
  --
  vn_fase := 23;
  --
  vt_tab_segm_A(1).SaiPrestDebImp  := cv_zero_14;
  vt_tab_segm_A(1).OutrosDebitos   := cv_zero_14;
  vt_tab_segm_A(1).EstornoCreditos := cv_zero_14;
  vt_tab_segm_A(1).EntrAquiCredImp := cv_zero_14;
  vt_tab_segm_A(1).OutrosCreditosI := cv_zero_14;
  vt_tab_segm_A(1).EstornoDebitos  := cv_zero_14;
  vt_tab_segm_A(1).SldCredorPerAnt := cv_zero_14;
  vt_tab_segm_A(1).Deducoes        := cv_zero_14;
  --
  open c_segmento_A02;
  fetch c_segmento_A02
    into vt_tab_segm_A(1).SaiPrestDebImp,
         vt_tab_segm_A(1).OutrosDebitos,
         vt_tab_segm_A(1).EstornoCreditos,
         vt_tab_segm_A(1).EntrAquiCredImp,
         vt_tab_segm_A(1).OutrosCreditosI,
         vt_tab_segm_A(1).EstornoDebitos,
         vt_tab_segm_A(1).SldCredorPerAnt,
         vt_tab_segm_A(1).Deducoes;
  close c_segmento_A02;
  --
  vn_fase := 24;
  --
  vt_tab_segm_A(1).DifAliqRecolher := cv_zero_14;
  vt_tab_segm_A(1).ValorProdutos   := cv_zero_14;
  vt_tab_segm_A(1).BaseCalculo     := cv_zero_14;
  vt_tab_segm_A(1).IcmsSubstTrib   := cv_zero_14;
  vt_tab_segm_A(1).CreditoIcms     := cv_zero_14;
  vt_tab_segm_A(1).OutrosCreditosA := cv_zero_14;
  vt_tab_segm_A(1).VersaoArquivo   := vv_CdVersao;
  vt_tab_segm_A(1).DifAliqPeriodo  := cv_zero_14;
  vt_tab_segm_A(1).DifAliqAnterior := cv_zero_14;
  vt_tab_segm_A(1).TipoEncerrEscri := cv_branco_01;
  vt_tab_segm_A(1).ObservEncerrG   := cv_branco_255;
  vt_tab_segm_A(1).CompAliqPeriodo := cv_zero_14;
  vt_tab_segm_A(1).DifAliqConsFin  := cv_zero_14;
  vt_tab_segm_A(1).HouveMudDomici  := cv_branco_01;
  vt_tab_segm_A(1).MunicipAnterior := cv_zero_07;
  vt_tab_segm_A(1).DtIniCidAtual   := cv_branco_08;
  vt_tab_segm_A(1).DtFinCidAtual   := cv_branco_08;
  vt_tab_segm_A(1).DtIniCidAnter   := cv_branco_08;
  vt_tab_segm_A(1).DtFimCidAnter   := cv_branco_08;
  --
  vn_fase := 25;
  --
  open c_segmento_A03;
  fetch c_segmento_A03
    into vt_tab_segm_A(1).DifAliqRecolher,
         vt_tab_segm_A(1).BaseCalculo,
         vt_tab_segm_A(1).IcmsSubstTrib,
         vt_tab_segm_A(1).CreditoIcms,
         vt_tab_segm_A(1).OutrosCreditosA,
         vt_tab_segm_A(1).VersaoArquivo,
         vt_tab_segm_A(1).DifAliqPeriodo,
         vt_tab_segm_A(1).DifAliqAnterior,
         vt_tab_segm_A(1).TipoEncerrEscri,
         vt_tab_segm_A(1).ObservEncerrG,
         vt_tab_segm_A(1).CompAliqPeriodo,
         vt_tab_segm_A(1).DifAliqConsFin,
         vt_tab_segm_A(1).HouveMudDomici,
         vt_tab_segm_A(1).MunicipAnterior,
         vt_tab_segm_A(1).DtIniCidAtual,
         vt_tab_segm_A(1).DtFinCidAtual,
         vt_tab_segm_A(1).DtIniCidAnter,
         vt_tab_segm_A(1).DtFimCidAnter;
  close c_segmento_A03;
  --
  vn_fase := 26;
  --
  --#74670
  vt_tab_segm_A(1).NumeroTare   := rpad(nvl(gv_num_tare, ' '), 20, ' ');
  vt_tab_segm_A(1).DtVencimTare := rpad(nvl(gv_dt_vencimento, ' '), 8, ' ');
  --
  vn_qtd_linhas := vn_qtd_linhas + 1;
  --
  vn_fase := 27;
  --
  -- Segmento B - Entradas e Saídas de Mercadorias, Bens e/ou Serviços no Estabelecimento do Contribuinte
  for rec_nf in c_segmento_B01 loop
    exit when c_segmento_B01%notfound or(c_segmento_B01%notfound) is null;
    --
    vn_fase := 27.1;
    --
    for rec_inf in c_segmento_B02(en_notafiscal_id => rec_nf.id) loop
      exit when c_segmento_B02%notfound or(c_segmento_B02%notfound) is null;
      --
      vn_fase := 27.2;
      --
      -- Notas Fiscais de Serviço
      if rec_nf.cod_mod = '99' then
        --
        vn_fase := 27.3;
        --
        begin
          select nvl(sum(nvl(imp.vl_base_calc, 0)), 0),
                 nvl(sum(nvl(imp.vl_imp_trib, 0)), 0),
                 nvl(sum(nvl(imp.vl_base_isenta, 0)), 0),
                 nvl(sum(nvl(imp.vl_base_outro, 0)), 0)
            into vn_vl_bc_imp_param,
                 vn_vl_imp_imp_param,
                 vn_vl_bc_isenta_param,
                 vn_vl_bc_outra_param
            from imp_itemnf imp,
                 cod_st cs
           where imp.itemnf_id  = rec_nf.id
             and imp.tipoimp_id = 1 -- ICMS
             and cs.id          = imp.codst_id
             and cs.cod_st      not in ('70', '71', '72', '73', '74', '75', '99', '98');
        exception
          when others then
            vn_vl_bc_imp_param    := 0;
            vn_vl_imp_imp_param   := 0;
            vn_vl_bc_isenta_param := 0;
            vn_vl_bc_outra_param  := 0;
        end;
        --
      else
        --
        vn_fase := 27.4;
        --
        begin
          select nvl(sum(nvl(imp.vl_base_calc, 0)), 0),
                 nvl(sum(nvl(imp.vl_imp_trib, 0)), 0),
                 nvl(sum(nvl(imp.vl_base_isenta, 0)), 0),
                 nvl(sum(nvl(imp.vl_base_outro, 0)), 0)
            into vn_vl_bc_imp_param,
                 vn_vl_imp_imp_param,
                 vn_vl_bc_isenta_param,
                 vn_vl_bc_outra_param
            from imp_itemnf imp
           where imp.itemnf_id  = rec_inf.id
             and imp.tipoimp_id = 1; -- ICMS
        exception
          when others then
            vn_vl_bc_imp_param    := 0;
            vn_vl_imp_imp_param   := 0;
            vn_vl_bc_isenta_param := 0;
            vn_vl_bc_outra_param  := 0;
        end;
        --
      end if;
      --
      vn_fase := 27.5;
      --
      -- ICMS-ST
      begin
        select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
          into vn_vl_icms_st
          from imp_itemnf imp,
               tipo_imposto ti
         where imp.itemnf_id  = rec_inf.id
           and imp.tipoimp_id = ti.id
           and ti.cd          = 2;
      exception
        when others then
          vn_vl_icms_st := 0;
      end;
      --
      vn_fase := 27.6;
      --
      -- IPI
      begin
        select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
          into vn_vl_ipi
          from imp_itemnf imp,
               tipo_imposto ti
         where imp.itemnf_id  = rec_inf.id
           and imp.tipoimp_id = ti.id
           and ti.cd          = 3;
      exception
        when others then
          vn_vl_ipi := null;
      end;
      --
      vn_fase := 27.7;
      --
      -- Imposto de importação
      begin
        select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
          into vn_vl_ii
          from imp_itemnf imp,
               tipo_imposto ti
         where imp.itemnf_id  = rec_inf.id
           and imp.tipoimp_id = ti.id
           and ti.cd          = 7;
      exception
        when others then
          vn_vl_ii := 0;
      end;
      --
      vn_fase := 27.8;
      --
      -- ICMS
      begin
        select nvl(sum(nvl(imp.vl_imp_trib, 0)), 0)
          into vn_vl_icms
          from imp_itemnf imp,
               tipo_imposto ti
         where imp.itemnf_id  = rec_inf.id
           and imp.tipoimp_id = ti.id
           and ti.cd          = 1;
      exception
        when others then
          vn_vl_icms := 0;
      end;
      --
      vn_fase := 27.9;
      --
      --
      vn_vl_operacao := round((nvl(rec_inf.vl_item_bruto, 0) + nvl(rec_inf.vl_frete, 0) + nvl(rec_inf.vl_seguro, 0) + nvl(rec_inf.vl_outro, 0) + nvl(vn_vl_icms_st, 0) + nvl(vn_vl_ipi, 0) + nvl(vn_vl_ii, 0)) - nvl(rec_inf.vl_desc, 0), 2);
      --
      vn_fase := 27.10;
      --
      pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => rec_inf.id,
                                        sn_cfop                => vn_cfop,
                                        sn_vl_operacao         => vn_vl_operacao,
                                        sv_cod_st_icms         => vv_cod_st_icms,
                                        sn_vl_base_calc_icms   => vn_vl_base_calc_icms,
                                        sn_aliq_icms           => vn_aliq_icms,
                                        sn_vl_imp_trib_icms    => vn_vl_imp_trib_icms,
                                        sn_vl_base_calc_icmsst => vn_vl_base_calc_icmsst,
                                        sn_vl_imp_trib_icmsst  => vn_vl_imp_trib_icmsst,
                                        sn_vl_bc_isenta_icms   => vn_vl_bc_isenta_icms,
                                        sn_vl_bc_outra_icms    => vn_vl_bc_outra_icms,
                                        sv_cod_st_ipi          => vv_cod_st_ipi,
                                        sn_vl_base_calc_ipi    => vn_vl_base_calc_ipi,
                                        sn_aliq_ipi            => vn_aliq_ipi,
                                        sn_vl_imp_trib_ipi     => vn_vl_imp_trib_ipi,
                                        sn_vl_bc_isenta_ipi    => vn_vl_bc_isenta_ipi,
                                        sn_vl_bc_outra_ipi     => vn_vl_bc_outra_ipi,
                                        sn_ipi_nao_recup       => vn_ipi_nao_recup,
                                        sn_outro_ipi           => vn_outro_ipi,
                                        sn_vl_imp_nao_dest_ipi => vn_vl_imp_nao_dest_ipi,
                                        sn_vl_fcp_icmsst       => vn_vl_fcp_icmsst,
                                        sn_aliq_fcp_icms       => vn_aliq_fcp_icms,
                                        sn_vl_fcp_icms         => vn_vl_fcp_icms);
      --
      vn_fase := 27.11;
      --
      vn_vl_base_calc     := nvl(vn_vl_base_calc_icms, 0);
      vn_vl_imp_trib      := (nvl(vn_vl_imp_trib_icms, 0) + nvl(vn_vl_fcp_icms, 0));
      vn_vl_bc_isenta     := nvl(vn_vl_bc_isenta_icms, 0);
      vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0);
      --
      vn_fase := 27.12;
      --
      -- Se os valores das bases forem igual ao da operação,
      -- envia base outra sem imposto tributado IPI
      if vn_vl_operacao = (vn_vl_base_calc_icms + vn_vl_bc_isenta_icms + vn_vl_bc_outra_icms) then
        vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0);
      else
        vn_vl_bc_outra_icms := nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_imp_trib_ipi, 0);
      end if;
      --
      vn_vl_bc_outra := nvl(vn_vl_bc_outra_icms, 0) + nvl(vn_vl_imp_trib_icmsst, 0) + nvl(vn_ipi_nao_recup, 0) + nvl(vn_outro_ipi, 0);
      --
      vn_fase := 27.13;
      --
      begin
        vb_achou := vt_bi_tab_segm_B(1).exists(vn_cfop);
      exception
        when others then
          vb_achou := false;
      end;
      --
      if not vb_achou then
        --
        vn_fase := 27.14;
        --
        -- Segmento B - Entradas e Saídas de Mercadorias, Bens e/ou Serviços no Estabelecimento do Contribuinte
        vt_bi_tab_segm_B(1)(vn_cfop).Segmento        := 'B';
        vt_bi_tab_segm_B(1)(vn_cfop).InscriEstadual  := vv_Inscricao_Estadual;
        vt_bi_tab_segm_B(1)(vn_cfop).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
        vt_bi_tab_segm_B(1)(vn_cfop).Retificacao     := lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0);
        vt_bi_tab_segm_B(1)(vn_cfop).IndEntradaSaida := rec_nf.IndEntradaSaida;
        vt_bi_tab_segm_B(1)(vn_cfop).CFOP            := vn_cfop;
        vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo   := nvl(vn_vl_base_calc_icms, 0);
        vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib  := vn_vl_bc_isenta_icms;
        vt_bi_tab_segm_B(1)(vn_cfop).Outras          := vn_vl_bc_outra_icms;
        vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria := vn_vl_imp_trib_icmsst;
        vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil   := vn_vl_operacao;
        vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto := vn_vl_imp_trib_icms;
        vt_bi_tab_segm_B(1)(vn_cfop).DomicilioFiscal := 'A';
        --
        vn_ValorProdutos := vn_ValorProdutos + vn_vl_operacao;
        --
        vn_qtd_linhas := vn_qtd_linhas + 1;
        --
      else
        --
        vn_fase := 27.15;
        --
        vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo   := vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo + nvl(vn_vl_base_calc_icms, 0);
        vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib  := vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib + nvl(vn_vl_bc_isenta_icms, 0);
        vt_bi_tab_segm_B(1)(vn_cfop).Outras          := vt_bi_tab_segm_B(1)(vn_cfop).Outras + nvl(vn_vl_bc_outra_icms, 0);
        vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria := vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria + nvl(vn_vl_imp_trib_icmsst, 0);
        vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil   := vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil + nvl(vn_vl_operacao, 0);
        vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto := vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto + nvl(vn_vl_imp_trib_icms, 0);
        --
        vn_ValorProdutos := vn_ValorProdutos + vn_vl_operacao;
        --
      end if;
      --
      vn_fase := 27.16;
      --
      for rec_uf in c_CodUfGia_nf(rec_nf.id) loop
        exit when c_CodUfGia_nf%notfound or(c_CodUfGia_nf%notfound) is null;
        --
        vn_fase := 27.17;
        --
        begin
          vb_achou := vt_tri_tab_segm_d(1)(rec_uf.codufgia).exists(rec_nf.IndEntradaSaida);
        exception
          when others then
            vb_achou := false;
        end;
        --
        if not vb_achou then
          --
          vn_fase := 27.18;
          --
          -- Segmento D - Detalhamento das Entradas/Saídas de Mercadorias e/ou Aquisições/Prestações de Serviços por Unidade da Federação
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).Segmento         := 'D';
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).InscriEstadual   := vv_Inscricao_Estadual;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).PeriodoRef       := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).Retificacao      := lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).IndEntradaSaida  := rec_nf.IndEntradaSaida;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).CodUfGia         := rec_uf.codufgia;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).IsentasNTribut   := vn_vl_bc_isenta_icms;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).Outras           := vn_vl_bc_outra_icms;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).SubstTributaria  := vn_vl_imp_trib_icmsst;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).DomicilioFiscal  := 'A';
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).CredDebImpost    := nvl(vn_vl_imp_trib_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).DebitoImposto    := cv_zero_14;
          --
          if rec_nf.IndEntradaSaida = 1 then
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcES   := 0;
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilES  := 0;
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcSai  := nvl(vn_vl_base_calc_icms, 0);
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilSai := nvl(vn_vl_operacao, 0);
          else
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcES   := nvl(vn_vl_base_calc_icms, 0);
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilES  := nvl(vn_vl_operacao, 0);
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcSai  := 0;
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilSai := 0;
          end if;
          --
          vn_qtd_linhas := vn_qtd_linhas + 1;
          --
        else
          --
          vn_fase := 27.19;
          --
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).IsentasNTribut  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).IsentasNTribut + nvl(vn_vl_bc_isenta_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).Outras          := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).Outras + nvl(vn_vl_bc_outra_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).SubstTributaria := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).SubstTributaria + nvl(vn_vl_imp_trib_icmsst, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).CredDebImpost   := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).CredDebImpost + nvl(vn_vl_imp_trib_icms, 0);
          --
          if rec_nf.IndEntradaSaida = 1 then
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcES   := 0;
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilES  := 0;
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcSai  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcSai + nvl(vn_vl_base_calc_icms, 0);
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilSai := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilSai + nvl(vn_vl_operacao, 0);
          else
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcES   := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcES + nvl(vn_vl_base_calc_icms, 0);
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilES  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilES + nvl(vn_vl_operacao, 0);
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).BaseDeCalcSai  := 0;
            vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_nf.IndEntradaSaida).VlrContabilSai := 0;
          end if;
          --
        end if;
        --
      end loop; -- c_CodUfGia_nf
      --
    end loop; -- c_segmento_B02
    --
    vn_fase := 27.20;
    --
  end loop; -- c_segmento_B01
  --
  vn_fase := 28;
  --
  for rec_analit in c_segmento_B03 loop
    exit when c_segmento_B03%notfound or(c_segmento_B03%notfound) is null;
    --
    vn_fase := 28.1;
    --
    vv_cod_st_icms         := null;
    vn_cfop                := null;
    vn_aliq_icms           := 0;
    vn_vl_operacao         := 0;
    vn_vl_base_calc_icms   := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    pk_csf_api.pkb_vlr_fiscal_nfsc(en_nfregistanalit_id => rec_analit.id,
                                   sv_cod_st_icms       => vv_cod_st_icms,
                                   sn_cfop              => vn_cfop,
                                   sn_aliq_icms         => vn_aliq_icms,
                                   sn_vl_operacao       => vn_vl_operacao,
                                   sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                   sn_vl_icms           => vn_vl_imp_trib_icms,
                                   sn_vl_bc_icmsst      => vn_vl_base_calc_icmsst,
                                   sn_vl_icms_st        => vn_vl_imp_trib_icmsst,
                                   sn_vl_ipi            => vn_vl_imp_trib_ipi,
                                   sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                   sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);

    if rec_analit.cfop in (5929, 6929, 3551, 3949, 5602, 6602, 3556) then
      --
      vn_fase := 28.2;
      --
      if rec_analit.cfop in (5929, 6929, 5602, 6602) then
        vn_vl_operacao := 0;
      end if;
      --
      vn_vl_base_calc_icms := 0;
      vn_vl_imp_trib_icms  := 0;
      vn_vl_bc_isenta_icms := 0;
      vn_vl_bc_outra_icms  := 0;
      --
    end if;
    --
    vn_fase := 28.3;
    --
    begin
      vb_achou := vt_bi_tab_segm_B(1).exists(vn_cfop);
    exception
      when others then
        vb_achou := false;
    end;
    --
    if not vb_achou then
      --
      vn_fase := 28.4;
      --
      -- Segmento B - Entradas e Saídas de Mercadorias, Bens e/ou Serviços no Estabelecimento do Contribuinte
      vt_bi_tab_segm_B(1)(vn_cfop).Segmento        := 'B';
      vt_bi_tab_segm_B(1)(vn_cfop).InscriEstadual  := vv_Inscricao_Estadual;
      vt_bi_tab_segm_B(1)(vn_cfop).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
      vt_bi_tab_segm_B(1)(vn_cfop).Retificacao     := lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).IndEntradaSaida := rec_analit.IndEntradaSaida;
      vt_bi_tab_segm_B(1)(vn_cfop).CFOP            := rec_analit.CFOP;
      vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo   := rec_analit.vl_bc_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib  := vn_vl_bc_isenta_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).Outras          := vn_vl_bc_outra_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria := vn_vl_imp_trib_icmsst;
      vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil   := vn_vl_operacao;
      vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto := vn_vl_imp_trib_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).DomicilioFiscal := 'A';
      --
      vn_ValorProdutos := vn_ValorProdutos + vn_vl_operacao;
      --
      vn_qtd_linhas := vn_qtd_linhas + 1;
      --
    else
      --
      vn_fase := 28.5;
      --
      vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo   := vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo + rec_analit.vl_bc_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib  := vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib + nvl(vn_vl_bc_isenta_icms, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).Outras          := vt_bi_tab_segm_B(1)(vn_cfop).Outras + nvl(vn_vl_bc_outra_icms, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria := vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria + nvl(vn_vl_imp_trib_icmsst, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil   := vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil + nvl(vn_vl_operacao, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto := vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto + nvl(vn_vl_imp_trib_icms, 0);
      --
      vn_ValorProdutos := vn_ValorProdutos + vn_vl_operacao;
      --
    end if;
    --
    vn_fase := 28.5;
    --
    for rec_uf in c_CodUfGia_nf(rec_analit.notafiscal_id) loop
      exit when c_CodUfGia_nf%notfound or(c_CodUfGia_nf%notfound) is null;
      --
      begin
        vb_achou := vt_tri_tab_segm_d(1)(rec_uf.codufgia).exists(rec_analit.IndEntradaSaida);
      exception
        when others then
          vb_achou := false;
      end;
      --
      if not vb_achou then
        --
        vn_fase := 28.6;
        --
        -- Segmento D - Detalhamento das Entradas/Saídas de Mercadorias e/ou Aquisições/Prestações de Serviços por Unidade da Federação
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).Segmento        := 'D';
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).InscriEstadual  := vv_Inscricao_Estadual;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).Retificacao     := lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).IndEntradaSaida := rec_analit.IndEntradaSaida;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).CodUfGia        := rec_uf.codufgia;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).IsentasNTribut  := vn_vl_bc_isenta_icms;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).Outras          := vn_vl_bc_outra_icms;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).SubstTributaria := vn_vl_imp_trib_icmsst;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).DomicilioFiscal := 'A';
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).CredDebImpost   := nvl(vn_vl_imp_trib_icms, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).DebitoImposto   := cv_zero_14;
        --
        if rec_analit.IndEntradaSaida = 1 then
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcES   := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilES  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcSai  := nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilSai := nvl(vn_vl_operacao, 0);
        else
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcES   := nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilES  := nvl(vn_vl_operacao, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcSai  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilSai := 0;
        end if;
        --
        vn_qtd_linhas := vn_qtd_linhas + 1;
        --
      else
        --
        vn_fase := 28.7;
        --
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).IsentasNTribut   := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).IsentasNTribut + nvl(vn_vl_bc_isenta_icms, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).Outras           := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).Outras + nvl(vn_vl_bc_outra_icms, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).SubstTributaria  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).SubstTributaria + nvl(vn_vl_imp_trib_icmsst, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).CredDebImpost    := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).CredDebImpost + nvl(vn_vl_imp_trib_icms, 0);
        --
        if rec_analit.IndEntradaSaida = 1 then
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcES   := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilES  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcSai  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcSai + nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilSai := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilSai + nvl(vn_vl_operacao, 0);
        else
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcES   := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcES + nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilES  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilES + nvl(vn_vl_operacao, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).BaseDeCalcSai  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_analit.IndEntradaSaida).VlrContabilSai := 0;
        end if;
        --
      end if;
      --
    end loop; -- c_CodUfGia_nf
    --
    vn_fase := 28.8;
    --
  end loop; -- c_segmento_B03
  --
  vn_fase := 29;
  --
  for rec_ct in c_segmento_B04 loop
    exit when c_segmento_B04%notfound or(c_segmento_B04%notfound) is null;
    --
    vn_fase := 29.1;
    --
    vv_cod_st_icms         := null;
    vn_cfop                := null;
    vn_aliq_icms           := 0;
    vn_vl_operacao         := 0;
    vn_vl_base_calc_icms   := 0;
    vn_vl_imp_trib_icms    := 0;
    vn_vl_base_calc_icmsst := 0;
    vn_vl_imp_trib_icmsst  := 0;
    vn_vl_imp_trib_ipi     := 0;
    vn_vl_bc_isenta_icms   := 0;
    vn_vl_bc_outra_icms    := 0;
    --
    pk_csf_ct.pkb_vlr_fiscal_ct(en_ctreganal_id      => rec_ct.id,
                                sv_cod_st_icms       => vv_cod_st_icms,
                                sn_cfop              => vn_cfop,
                                sn_aliq_icms         => vn_aliq_icms,
                                sn_vl_opr            => vn_vl_operacao,
                                sn_vl_bc_icms        => vn_vl_base_calc_icms,
                                sn_vl_icms           => vn_vl_imp_trib_icms,
                                sn_vl_bc_isenta_icms => vn_vl_bc_isenta_icms,
                                sn_vl_bc_outra_icms  => vn_vl_bc_outra_icms);
    --
    vn_fase := 29.2;
    --
    begin
      vb_achou := vt_bi_tab_segm_B(1).exists(vn_cfop);
    exception
      when others then
        vb_achou := false;
    end;
    --
    if not vb_achou then
      --
      vn_fase := 29.3;
      --
      -- Segmento B - Entradas e Saídas de Mercadorias, Bens e/ou Serviços no Estabelecimento do Contribuinte
      vt_bi_tab_segm_B(1)(vn_cfop).Segmento        := 'B';
      vt_bi_tab_segm_B(1)(vn_cfop).InscriEstadual  := vv_Inscricao_Estadual;
      vt_bi_tab_segm_B(1)(vn_cfop).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
      vt_bi_tab_segm_B(1)(vn_cfop).Retificacao     := lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).IndEntradaSaida := rec_ct.IndEntradaSaida;
      vt_bi_tab_segm_B(1)(vn_cfop).CFOP            := rec_ct.CFOP;
      vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo   := rec_ct.BaseDeCalculo;
      vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib  := vn_vl_bc_isenta_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).Outras          := vn_vl_bc_outra_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria := vn_vl_imp_trib_icmsst;
      vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil   := vn_vl_operacao;
      vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto := vn_vl_imp_trib_icms;
      vt_bi_tab_segm_B(1)(vn_cfop).DomicilioFiscal := 'A';
      --
      vn_ValorProdutos := vn_ValorProdutos + vn_vl_operacao;
      --
      vn_qtd_linhas := vn_qtd_linhas + 1;
      --
    else
      --
      vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo   := vt_bi_tab_segm_B(1)(vn_cfop).BaseDeCalculo + rec_ct.BaseDeCalculo;
      vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib  := vt_bi_tab_segm_B(1)(vn_cfop).IsentasNaoTrib + nvl(vn_vl_bc_isenta_icms, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).Outras          := vt_bi_tab_segm_B(1)(vn_cfop).Outras + nvl(vn_vl_bc_outra_icms, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria := vt_bi_tab_segm_B(1)(vn_cfop).SubstTributaria + nvl(vn_vl_imp_trib_icmsst, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil   := vt_bi_tab_segm_B(1)(vn_cfop).ValorContabil + nvl(vn_vl_operacao, 0);
      vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto := vt_bi_tab_segm_B(1)(vn_cfop).CredDebiImposto + nvl(vn_vl_imp_trib_icms, 0);
      --
      vn_ValorProdutos := vn_ValorProdutos + nvl(vn_vl_operacao, 0);
      --
    end if;
    --
    vn_fase := 29.4;
    --
    for rec_uf in c_CodUfGia_ct(rec_ct.conhectransp_id) loop
      exit when c_CodUfGia_ct%notfound or(c_CodUfGia_ct%notfound) is null;
      --
      begin
        vb_achou := vt_tri_tab_segm_d(1)(rec_uf.codufgia).exists(rec_ct.IndEntradaSaida);
      exception
        when others then
          vb_achou := false;
      end;
      --
      if not vb_achou then
        --
        vn_fase := 29.5;
        --
        -- Segmento D - Detalhamento das Entradas/Saídas de Mercadorias e/ou Aquisições/Prestações de Serviços por Unidade da Federação
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).Segmento         := 'D';
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).InscriEstadual   := vv_Inscricao_Estadual;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).PeriodoRef       := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).Retificacao      := lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).IndEntradaSaida  := rec_ct.IndEntradaSaida;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).CodUfGia         := rec_uf.codufgia;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).IsentasNTribut   := vn_vl_bc_isenta_icms;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).Outras           := vn_vl_bc_outra_icms;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).SubstTributaria  := vn_vl_imp_trib_icmsst;
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).DomicilioFiscal  := 'A';
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).CredDebImpost    := nvl(vn_vl_imp_trib_icms, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).DebitoImposto    := cv_zero_14;
        --
        if rec_ct.IndEntradaSaida = 1  then
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcES   := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilES  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcSai  := nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilSai := nvl(vn_vl_operacao, 0);
        else
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcES   := nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilES  := nvl(vn_vl_operacao, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcSai  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilSai := 0;
        end if;
        --
        vn_qtd_linhas := vn_qtd_linhas + 1;
        --
      else
        --
        vn_fase := 29.6;
        --
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).IsentasNTribut   := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).IsentasNTribut + nvl(vn_vl_bc_isenta_icms, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).Outras           := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).Outras + nvl(vn_vl_bc_outra_icms, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).SubstTributaria  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).SubstTributaria + nvl(vn_vl_imp_trib_icmsst, 0);
        vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).CredDebImpost    := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).CredDebImpost + nvl(vn_vl_imp_trib_icms, 0);
        --
        if rec_ct.IndEntradaSaida = 1  then
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcES   := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilES  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcSai  := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcSai + nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilSai := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilSai + nvl(vn_vl_operacao, 0);
        else
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcES   := vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcES + nvl(vn_vl_base_calc_icms, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilES  := vt_tri_tab_segm_D(1) (rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilES + nvl(vn_vl_operacao, 0);
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).BaseDeCalcSai  := 0;
          vt_tri_tab_segm_D(1)(rec_uf.codufgia)(rec_ct.IndEntradaSaida).VlrContabilSai := 0;
        end if;
        --
      end if;
      --
    end loop; -- c_CodUfGia_ct
    --
    vn_fase := 29.7;
    --
  end loop; -- c_segmento_B04
  --
  vt_tab_segm_A(1).ValorProdutos := lpad(vn_ValorProdutos * 100, 14, 0); 
  --
  vn_fase := 30;
  --
  -- Segmento C - Demonstrativo do Estoque
  for r_inv in c_segmento_C01 loop
    exit when c_segmento_C01%notfound or(c_segmento_C01%notfound);
    --
    vn_fase := 30.1;
    --
    vn_vl_trib   := 0;
    vn_vl_isenta := 0;
    vn_vl_outras := 0;
    --
    vv_DtRef := r_inv.dt_ref;
    --
    for r_cst in c_segmento_C02(en_inventario_id => r_inv.inventario_id) loop
      exit when c_segmento_C02%notfound or(c_segmento_C02%notfound);
      --
      vn_fase := 30.2;
      --
      -- Valores para Base Tributada
      if r_cst.cod_st in ('00', '10', '20', '70') then -- Se CST 00, 10, 20 e 70, o valor da base de calculo ICMS deve ser levado para base tributada da DMA
        --
        vn_fase := 30.3;
        --
        vn_vl_trib := (nvl(vn_vl_trib, 0) + nvl(r_cst.vl_bc_icms, 0));
        --
      elsif r_cst.cod_st in ('51') then -- Se CST 51 e houver valor de ICMS o valor da base de calculo de ICMS deve ser levado para base tributada da DMA
        --
        vn_fase := 30.4;
        --
        if nvl(r_cst.vl_icms, 0) <> 0 then
          vn_vl_trib := (nvl(vn_vl_trib, 0) + nvl(r_cst.vl_bc_icms, 0));
        end if;
        --
      elsif r_cst.cod_st in ('90') then -- Se CST 90 e houver valor na base de calculo ICMS o mesmo deve ser levado para base tributada da DMA
        --
        vn_fase := 30.5;
        --
        if nvl(r_cst.vl_bc_icms, 0) <> 0 then
          vn_vl_trib := (nvl(vn_vl_trib, 0) + nvl(r_cst.vl_bc_icms, 0));
        end if;
        --
      end if;
      --
      vn_fase := 30.7;
      --
      -- Valores para Base Isenta
      if r_cst.cod_st in ('20', '70') then -- Se CST 20 e 70, a subtração do valor do item pela base de calculo deve ser levada para base isenta da DMA
        --
        vn_fase := 30.8;
        --
        vn_vl_isenta := (nvl(vn_vl_isenta, 0) + (nvl(r_inv.vl_item, 0) - nvl(r_cst.vl_bc_icms, 0)));
        --
      elsif r_cst.cod_st in ('40', '41') then -- Se CST 40 e 41, o valor da item deve ser levado para base isenta da DMA
        --
        vn_fase := 30.9;
        --
        vn_vl_isenta := (nvl(vn_vl_isenta, 0) + nvl(r_inv.vl_item, 0));
        --
      end if;
      --
      vn_fase := 30.10;
      --
      -- Valores para Base Outras
      if r_cst.cod_st in ('30', '50', '60') then -- Se CST 30, 50 e 60, o valor da item deve ser levado para base outras da DMA
        --
        vn_fase := 30.11;
        --
        vn_vl_outras := (nvl(vn_vl_outras, 0) + nvl(r_inv.vl_item, 0));
        --
      elsif r_cst.cod_st in ('51') then -- Se CST 51 e não houver valor de ICMS o valor da item deve ser levado para base outras da DMA
        --
        vn_fase := 30.12;
        --
        if nvl(r_cst.vl_icms, 0) = 0 then
          vn_vl_outras := (nvl(vn_vl_outras, 0) + nvl(r_inv.vl_item, 0));
        end if;
        --
      elsif r_cst.cod_st in ('90') then -- Se CST 90 e não houver valor na base de calculo ICMS o valor do item deve ser levado para base outras da DMA
        --
        vn_fase := 30.13;
        --
        if nvl(r_cst.vl_bc_icms, 0) = 0 then
          vn_vl_outras := (nvl(vn_vl_outras, 0) + nvl(r_inv.vl_item, 0));
        end if;
        --
      end if;
      --
    end loop; -- c_segmento_C02
    --
    vn_fase := 30.14;
    --
    -- Inicial
    if (trunc(r_inv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(gt_row_abertura_gia.dt_ini, 'rrrr'), 'rrrr') - 2))) then
      --
      vn_fase := 30.15;
      --
      vn_vl_trib_ini   := nvl(vn_vl_trib_ini, 0) + nvl(vn_vl_trib, 0);
      vn_vl_isenta_ini := nvl(vn_vl_isenta_ini, 0) + nvl(vn_vl_isenta, 0);
      vn_vl_outras_ini := nvl(vn_vl_outras_ini, 0) + nvl(vn_vl_outras, 0);
      vn_vl_total_ini  := vn_vl_trib_ini + vn_vl_isenta_ini + vn_vl_outras_ini;
      --
    end if;
    --
    vn_fase := 30.16;
    --
    -- Final
    if (trunc(r_inv.dt_inventario, 'mm') = to_date('01/12/' || (to_char(trunc(gt_row_abertura_gia.dt_ini, 'rrrr'), 'rrrr') - 1))) then
      --
      vn_fase := 30.17;
      --
      vn_vl_trib_fin   := nvl(vn_vl_trib_fin, 0) + nvl(vn_vl_trib, 0);
      vn_vl_isenta_fin := nvl(vn_vl_isenta_fin, 0) + nvl(vn_vl_isenta, 0);
      vn_vl_outras_fin := nvl(vn_vl_outras_fin, 0) + nvl(vn_vl_outras, 0);
      vn_vl_total_fin  := vn_vl_trib_fin + vn_vl_isenta_fin + vn_vl_outras_fin;
      --
    end if;
    --
  end loop; -- c_segmento_C01
  --
  vn_fase := 31;
  --
  -- Verifica se existe período de referência informado para a abertura
  if vv_DtRef between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin then
    --
    vn_fase := 31.1;
    --
    -- Segmento C - Demonstrativo de Estoque
    vt_tab_segm_C(1).Segmento        := 'C';
    vt_tab_segm_C(1).InscriEstadual  := vv_Inscricao_Estadual;
    vt_tab_segm_C(1).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_C(1).Retificacao     := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_C(1).Tributadas_I    := lpad(vn_vl_trib_ini * 100, 14, 0);
    vt_tab_segm_C(1).IsentTributad_I := lpad(vn_vl_isenta_ini * 100, 14, 0);
    vt_tab_segm_C(1).Outras_I        := lpad(vn_vl_outras_ini * 100, 14, 0);
    vt_tab_segm_C(1).SubstTribut_I   := cv_zero_14; -- todo
    vt_tab_segm_C(1).ValorTotal_I    := lpad(vn_vl_total_ini * 100, 14, 0);
    vt_tab_segm_C(1).Tributadas_F    := lpad(vn_vl_trib_fin * 100, 14, 0);
    vt_tab_segm_C(1).IsentTributad_F := lpad(vn_vl_isenta_fin * 100, 14, 0);
    vt_tab_segm_C(1).Outras_F        := lpad(vn_vl_outras_fin * 100, 14, 0);
    vt_tab_segm_C(1).SubstTribut_F   := cv_zero_14; -- todo
    vt_tab_segm_C(1).ValorTotal_F    := lpad(vn_vl_total_fin * 100, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end if;
  --
  vn_fase := 32;
  --
  -- Segmento D - Detalhamento das Entradas/Saídas de Mercadorias e/ou Aquisições/Prestações de Serviços por Unidade da Federação
  /*for reg in c_segmento_D01 loop
     exit when c_segmento_D01%notfound or (c_segmento_D01%notfound);
     --
     vn_fase := 32.1;
     --
     vt_tab_segm_D(reg.rnum).Segmento        := 'D';
     vt_tab_segm_D(reg.rnum).InscriEstadual  := vv_Inscricao_Estadual;
     vt_tab_segm_D(reg.rnum).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
     vt_tab_segm_D(reg.rnum).Retificacao     := gt_row_abertura_gia.dm_tipo_gia;
     vt_tab_segm_D(reg.rnum).IndEntradaSaida := reg.IndEntradaSaida;
     vt_tab_segm_D(reg.rnum).CodUfGia        := reg.CodUfGia;
     vt_tab_segm_D(reg.rnum).IsentasNTribut  := lpad(reg.IsentasNTribut, 14, 0);
     vt_tab_segm_D(reg.rnum).Outras          := lpad(reg.Outras, 14, 0);
     vt_tab_segm_D(reg.rnum).SubstTributaria := lpad(reg.SubstTributaria, 14, 0);
     vt_tab_segm_D(reg.rnum).DomicilioFiscal := 'A';

     vt_tab_segm_D(reg.rnum).BaseDeCalcES    := reg.BaseDeCalcES;
     vt_tab_segm_D(reg.rnum).VlrContabilES   := reg.VlrContabilES;
     vt_tab_segm_D(reg.rnum).CredDebImpost   := cv_zero_14;
     vt_tab_segm_D(reg.rnum).BaseDeCalcSai   := reg.BaseDeCalcSai;
     vt_tab_segm_D(reg.rnum).VlrContabilSai  := reg.VlrContabilSai;
     vt_tab_segm_D(reg.rnum).DebitoImposto   := cv_zero_14;
     --
     \*if reg.dm_ind_final = 1 then
        vt_tab_segm_D(reg.rnum).BaseDeCalcES   := lpad(0, 14, 0);
        vt_tab_segm_D(reg.rnum).VlrContabilES  := lpad(0, 14, 0);
        vt_tab_segm_D(reg.rnum).CredDebImpost  := lpad(0, 14, 0);
        vt_tab_segm_D(reg.rnum).BaseDeCalcSai  := reg.BaseDeCalcES;
        vt_tab_segm_D(reg.rnum).VlrContabilSai := reg.VlrContabilES;
        vt_tab_segm_D(reg.rnum).DebitoImposto  := cv_zero_14;
     else
        vt_tab_segm_D(reg.rnum).BaseDeCalcES   := reg.BaseDeCalcES;
        vt_tab_segm_D(reg.rnum).VlrContabilES  := reg.VlrContabilES;
        vt_tab_segm_D(reg.rnum).CredDebImpost  := cv_zero_14;
        vt_tab_segm_D(reg.rnum).BaseDeCalcSai  := lpad(0, 14, 0);
        vt_tab_segm_D(reg.rnum).VlrContabilSai := lpad(0, 14, 0);
        vt_tab_segm_D(reg.rnum).DebitoImposto  := lpad(0, 14, 0);
     end if;*\
     --
     vn_qtd_linhas := vn_qtd_linhas + 1;
     --
  end loop;*/ -- c_segmento_D01
  --
  vn_fase := 33;
  --
  for reg in c_segmento_E01 loop
    exit when c_segmento_E01%notfound or(c_segmento_E01%notfound);
    --
    vn_fase := 33.1;
    --
    -- Segmento E - Demonstrativo do ICMS a Recolher
    vt_tab_segm_E(reg.rnum).Segmento        := 'E';
    vt_tab_segm_E(reg.rnum).InscriEstadual  := vv_Inscricao_Estadual;
    vt_tab_segm_E(reg.rnum).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_E(reg.rnum).Retificacao     := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_E(reg.rnum).TipoIcms        := lpad(reg.TipoIcms, 1, ' ');
    --vt_tab_segm_E(reg.rnum).TipoIcms      := 'N';
    vt_tab_segm_E(reg.rnum).DataVencimento  := lpad(nvl(reg.DataVencimento, cv_branco_01), 8, ' ');
    vt_tab_segm_E(reg.rnum).VlrIcmsRecolher := lpad(reg.VlrIcmsRecolher, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop; -- c_segmento_E01
  --
  vn_fase := 34;
  --
  -- Segmento J - Informações sobre TARE
  vt_tab_segm_J(1).Segmento       := 'J';
  vt_tab_segm_J(1).InscriEstadual := vv_Inscricao_Estadual;
  vt_tab_segm_J(1).PeriodoRef     := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
  vt_tab_segm_J(1).Retificacao    := gt_row_abertura_gia.dm_tipo_gia;
  vt_tab_segm_J(1).NumeroTare     := rpad(nvl(gv_num_tare, ' '), 20, ' ');    -- #74670
  vt_tab_segm_J(1).DtVencimTare   := rpad(nvl(gv_dt_vencimento, ' '), 8, ' ');
  --
  vn_qtd_linhas := vn_qtd_linhas + 1;
  --
  --
  vn_fase := 35;
  --
  for reg in c_segmento_K01 loop
    exit when c_segmento_K01%notfound or(c_segmento_K01%notfound);
    --
    vn_fase := 35.1;
    --
    -- Segmento K - Especificação de Outros Créditos
    vt_tab_segm_K(reg.rnum).Segmento       := 'K';
    vt_tab_segm_K(reg.rnum).InscriEstadual := vv_Inscricao_Estadual;
    vt_tab_segm_K(reg.rnum).PeriodoRef     := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_K(reg.rnum).Retificacao    := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_K(reg.rnum).CodBaseLegal   := reg.CodBaseLegal;
    --vt_tab_segm_K(reg.rnum).CodBaseLegal := '99';
    vt_tab_segm_K(reg.rnum).VlrCredito     := lpad(nvl(reg.VlrCredito, 0) * 100, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop; -- c_segmento_K01
  --
  vn_fase := 36;
  --
  for reg in c_segmento_L01 loop
    exit when c_segmento_L01%notfound or(c_segmento_L01%notfound);
    --
    vn_fase := 36.1;
    --
    -- Segmento L - Especificação das Deduções
    vt_tab_segm_L(reg.rnum).Segmento       := 'L';
    vt_tab_segm_L(reg.rnum).InscriEstadual := vv_Inscricao_Estadual;
    vt_tab_segm_L(reg.rnum).PeriodoRef     := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_L(reg.rnum).Retificacao    := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_L(reg.rnum).CodBaseLegal   := reg.CodBaseLegal;
    --vt_tab_segm_L(reg.rnum).CodBaseLegal := '99';
    vt_tab_segm_L(reg.rnum).IcmsDevido     := lpad(nvl(reg.IcmsDevido, 0) * 100, 14, 0);
    vt_tab_segm_L(reg.rnum).MediaIcms      := cv_zero_14;
    vt_tab_segm_L(reg.rnum).VlrDeducao     := lpad(nvl(reg.VlrDeducao, 0) * 100, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop; -- c_segmento_L01
  --
  vn_fase := 37;
  --
  for reg in c_segmento_M01 loop
    exit when c_segmento_M01%notfound or(c_segmento_M01%notfound);
    --
    vn_fase := 37.1;
    --
    -- Segmento M - Saída e/ou Prestações e Entradas Aquisições do Estabelecimento do Contribuinte por munícipio de origem
    vt_tab_segm_M(reg.rnum).Segmento        := 'M';
    vt_tab_segm_M(reg.rnum).InscriEstadual  := vv_Inscricao_Estadual;
    vt_tab_segm_M(reg.rnum).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_M(reg.rnum).Retificacao     := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_M(reg.rnum).MunicipioOrigem := lpad(reg.MunicipioOrigem, 14, 0);
    vt_tab_segm_M(reg.rnum).DomicilioFiscal := 'A';
    vt_tab_segm_M(reg.rnum).SaidasPrestacoe := lpad(nvl(reg.SaidasPrestacoe, 0) * 100, 14, 0);
    vt_tab_segm_M(reg.rnum).EntraAquisicoes := lpad(nvl(reg.EntraAquisicoes, 0) * 100, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop; -- c_segmento_M01
  --
  vn_fase := 38;
  --
  for reg in c_segmento_N01 loop
    exit when c_segmento_N01%notfound or(c_segmento_N01%notfound);
    --
    vn_fase := 38.1;
    --
    -- Segmento N - Relação de Mercadorias e/ou Produtos Adquiridos de Outros Municípios Tocantinenses com Diferimento de ICMS
    vt_tab_segm_N(reg.rnum).Segmento        := 'N';
    vt_tab_segm_N(reg.rnum).InscriEstadual  := vv_Inscricao_Estadual;
    vt_tab_segm_N(reg.rnum).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_N(reg.rnum).Retificacao     := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_N(reg.rnum).IdentEmpresa    := reg.IdentEmpresa;
    vt_tab_segm_N(reg.rnum).DomicilioFiscal := 'A';
    vt_tab_segm_N(reg.rnum).CodIbgeMunicipi := lpad(nvl(reg.CodIbgeMunicipi, 0), 7, 0);
    vt_tab_segm_N(reg.rnum).VlrTotNotasFisc := lpad(nvl(reg.VlrTotNotasFisc, 0) * 100, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop; -- c_segmento_N01
  --
  vn_fase := 39;
  --
  for reg in c_segmento_O01 loop
    exit when c_segmento_O01%notfound or(c_segmento_O01%notfound);
    --
    vn_fase := 39.1;
    --
    -- Segmento O - Relação de Mercadorias e/ou Produtos Adquiridos de Outros Municípios Tocantinenses com Diferimento de ICMS
    vt_tab_segm_O(reg.rnum).Segmento        := 'O';
    vt_tab_segm_O(reg.rnum).InscriEstadual  := vv_Inscricao_Estadual;
    vt_tab_segm_O(reg.rnum).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_O(reg.rnum).Retificacao     := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_O(reg.rnum).IdentEmpresa    := lpad(nvl(reg.IdentEmpresa, cv_branco_09), 9, ' ');
    vt_tab_segm_O(reg.rnum).DomicilioFiscal := 'A';
    vt_tab_segm_O(reg.rnum).NroNotaFiscal   := lpad(nvl(reg.NroNotaFiscal, 0), 7, 0);
    vt_tab_segm_O(reg.rnum).ValorDaNota     := lpad(nvl(reg.ValorDaNota, 0) * 100, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop; -- c_segmento_O01
  --
  vn_fase := 40;
  --
  vb_primeira_vez := True;
  --
  vn_ValorContabil   := 0;
  vn_BaseDeCalculo   := 0;
  vn_DiferencialAliq := 0;
  vv_CodUfGia        := '0';
  --
  vn_fase := 41;
  --
  for reg in c_segmento_P01 loop
    exit when c_segmento_P01%notfound or(c_segmento_P01%notfound);
    --
    vn_fase := 41.1;
    --
    -- Valor contábil do item da nota
    pk_csf_api.pkb_vlr_fiscal_item_nf(en_itemnf_id           => reg.itemnf_id,
                                      sn_cfop                => vn_dummy, -- não utilizado
                                      sn_vl_operacao         => vn_vl_contabil,
                                      sv_cod_st_icms         => vn_dummy, -- não utilizado
                                      sn_vl_base_calc_icms   => vn_dummy, -- não utilizado
                                      sn_aliq_icms           => vn_dummy, -- não utilizado
                                      sn_vl_imp_trib_icms    => vn_dummy, -- não utilizado
                                      sn_vl_base_calc_icmsst => vn_dummy, -- não utilizado
                                      sn_vl_imp_trib_icmsst  => vn_dummy, -- não utilizado
                                      sn_vl_bc_isenta_icms   => vn_dummy, -- não utilizado
                                      sn_vl_bc_outra_icms    => vn_dummy, -- não utilizado
                                      sv_cod_st_ipi          => vn_dummy, -- não utilizado
                                      sn_vl_base_calc_ipi    => vn_dummy, -- não utilizado
                                      sn_aliq_ipi            => vn_dummy, -- não utilizado
                                      sn_vl_imp_trib_ipi     => vn_dummy, -- não utilizado
                                      sn_vl_bc_isenta_ipi    => vn_dummy, -- não utilizado
                                      sn_vl_bc_outra_ipi     => vn_dummy, -- não utilizado
                                      sn_ipi_nao_recup       => vn_dummy, -- não utilizado
                                      sn_outro_ipi           => vn_dummy, -- não utilizado
                                      sn_vl_imp_nao_dest_ipi => vn_dummy, -- não utilizado
                                      sn_vl_fcp_icmsst       => vn_dummy, -- não utilizado
                                      sn_aliq_fcp_icms       => vn_dummy, -- não utilizado
                                      sn_vl_fcp_icms         => vn_dummy); -- não utilizado

    -- Primeira vez no Estado Agrupado: só recebe os valoresa a ser acumulados
    if vb_primeira_vez then
      --
      vn_fase := 41.2;
      --
      vn_ValorContabil   := nvl(vn_vl_contabil, 0);
      vn_BaseDeCalculo   := nvl(reg.BaseDeCalculo, 0);
      vn_DiferencialAliq := nvl(reg.DiferencialAliq, 0);
      --
      vv_CodUfGia := reg.CodUfGia;
      --
    end if;
    --
    -- Segunda vez ou mais no Estado Agrupado: Acumula os valoes
    if reg.CodUfGia = vv_CodUfGia and not vb_primeira_vez then
      --
      vn_fase := 41.3;
      --
      if vt_tab_segm_P.exists((reg.rnum)) then
        --
        vn_ValorContabil   := vn_ValorContabil + nvl(vn_vl_contabil, 0);
        vn_BaseDeCalculo   := vn_BaseDeCalculo + nvl(vt_tab_segm_P(reg.rnum).BaseDeCalculo, 0);
        vn_DiferencialAliq := vn_DiferencialAliq + nvl(vt_tab_segm_P(reg.rnum).DiferencialAliq, 0);
        --
      end if;
      --
    end if;
    --
    -- Quando Muda o Estado Agrupado: libera os valoes para o Array
    if reg.CodUfGia <> vv_CodUfGia then
      --
      vn_fase := 41.4;
      --
      -- Segmento P - Especificação do Diferencial de Alíquotas por UF
      vt_tab_segm_P(reg.rnum).Segmento        := 'P';
      vt_tab_segm_P(reg.rnum).InscriEstadual  := vv_Inscricao_Estadual;
      vt_tab_segm_P(reg.rnum).PeriodoRef      := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
      vt_tab_segm_P(reg.rnum).Retificacao     := gt_row_abertura_gia.dm_tipo_gia;
      vt_tab_segm_P(reg.rnum).DomicilioFiscal := 'A';
      vt_tab_segm_P(reg.rnum).CodUfGia        := lpad(reg.CodUfGia, 2, '0');
      vt_tab_segm_P(reg.rnum).Aliquota        := lpad(nvl(reg.Aliquota, 0) * 100, 4, 0);
      vt_tab_segm_P(reg.rnum).ValorContabil   := lpad(nvl(vn_ValorContabil, 0) * 100, 14, 0);
      vt_tab_segm_P(reg.rnum).BaseDeCalculo   := lpad(nvl(vn_BaseDeCalculo, 0) * 100, 14, 0);
      vt_tab_segm_P(reg.rnum).DiferencialAliq := lpad(nvl(vn_DiferencialAliq, 0) * 100, 14, 0);
      --
      -- Recebe os Valoers do novo Estado
      vn_ValorContabil   := vn_vl_contabil;
      vn_BaseDeCalculo   := nvl(reg.BaseDeCalculo, 0);
      vn_DiferencialAliq := nvl(reg.DiferencialAliq, 0);
      --
      vv_CodUfGia   := reg.CodUfGia;
      vn_qtd_linhas := vn_qtd_linhas + 1;
      --
    end if;
    --
    vb_primeira_vez := False;
    --
    vn_fase := 41.5;
    --
  end loop; -- c_segmento_P01
  --
  vn_fase := 42;
  --
  for reg in c_segmento_R01 loop
    exit when c_segmento_R01%notfound or(c_segmento_R01%notfound);
    --
    vn_fase := 42.1;
    --
    -- Segmento R - Especificação dos Outros Débitos
    vt_tab_segm_R(reg.rnum).Segmento       := 'R';
    vt_tab_segm_R(reg.rnum).InscriEstadual := vv_Inscricao_Estadual;
    vt_tab_segm_R(reg.rnum).PeriodoRef     := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_R(reg.rnum).Retificacao    := gt_row_abertura_gia.dm_tipo_gia;
    vt_tab_segm_R(reg.rnum).CodBaseLegal   := reg.CodBaseLegal;
    --vt_tab_segm_R(reg.rnum).CodBaseLegal := '99';
    vt_tab_segm_R(reg.rnum).VlrDebito      := lpad(nvl(reg.VlrDebito, 0) * 100, 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop; -- c_segmento_R01
  --
  vn_fase := 43;
  --
  for reg in c_segmento_S01 loop
    exit when c_segmento_S01%notfound or(c_segmento_S01%notfound);
    --
    vn_vl_contabil := 0;
    --
    vn_fase := 43.1;
    --
    /*pk_csf_api.pkb_vlr_fiscal_item_nf( en_itemnf_id           => reg.itemnf_id
                                       , sn_cfop                => vn_dummy -- não utilizado
                                       , sn_vl_operacao         => vn_vl_contabil
                                       , sv_cod_st_icms         => vn_dummy -- não utilizado
                                       , sn_vl_base_calc_icms   => vn_dummy -- não utilizado
                                       , sn_aliq_icms           => vn_dummy -- não utilizado
                                       , sn_vl_imp_trib_icms    => vn_dummy -- não utilizado
                                       , sn_vl_base_calc_icmsst => vn_dummy -- não utilizado
                                       , sn_vl_imp_trib_icmsst  => vn_dummy -- não utilizado
                                       , sn_vl_bc_isenta_icms   => vn_dummy -- não utilizado
                                       , sn_vl_bc_outra_icms    => vn_dummy -- não utilizado
                                       , sv_cod_st_ipi          => vn_dummy -- não utilizado
                                       , sn_vl_base_calc_ipi    => vn_dummy -- não utilizado
                                       , sn_aliq_ipi            => vn_dummy -- não utilizado
                                       , sn_vl_imp_trib_ipi     => vn_dummy -- não utilizado
                                       , sn_vl_bc_isenta_ipi    => vn_dummy -- não utilizado
                                       , sn_vl_bc_outra_ipi     => vn_dummy -- não utilizado
                                       , sn_ipi_nao_recup       => vn_dummy -- não utilizado
                                       , sn_outro_ipi           => vn_dummy -- não utilizado
                                       , sn_vl_imp_nao_dest_ipi => vn_dummy -- não utilizado
                                       , sn_vl_fcp_icmsst       => vn_dummy -- não utilizado
                                       , sn_aliq_fcp_icms       => vn_dummy -- não utilizado
                                       , sn_vl_fcp_icms         => vn_dummy -- não utilizado);*/
    --
    vn_fase := 43.2;
    --
    -- Segmento S - Especificação do Diferencial de Alíquotas Consumidor Final (Saídas) por UF
    vt_tab_segm_S(reg.rnum).Segmento          := 'S';
    vt_tab_segm_S(reg.rnum).InscriEstadual    := vv_Inscricao_Estadual;
    vt_tab_segm_S(reg.rnum).PeriodoRef        := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
    vt_tab_segm_S(reg.rnum).Retificacao       := lpad(gt_row_abertura_gia.dm_tipo_gia, 2, 0);
    vt_tab_segm_S(reg.rnum).DomicilioFiscal   := 'A';
    vt_tab_segm_S(reg.rnum).CodUfGia          := lpad(nvl(reg.CodUfGia, ' '), 2, ' ');
    --vt_tab_segm_S(reg.rnum).ValorContabil   := lpad(nvl(vn_vl_contabil, 0) * 100, 14, 0);
    vt_tab_segm_S(reg.rnum).ValorContabil     := lpad((reg.ValorContabil * 100), 14, 0);
    --vt_tab_segm_S(reg.rnum).BaseDeCalculo   := lpad(nvl(reg.BaseDeCalculo, 0) * 100, 14, 0);
    --vt_tab_segm_S(reg.rnum).DiferencialAliq := lpad(nvl(reg.DiferencialAliq, 0) * 100, 14, 0);
    --vt_tab_segm_S(reg.rnum).AliqConsumidor  := lpad(nvl(reg.AliqConsumidor, 0) * 100, 4, 0);
    --vt_tab_segm_S(reg.rnum).Origem          := lpad(nvl(reg.Origem, 0) * 100, 14, 0);
    --vt_tab_segm_S(reg.rnum).Destino         := lpad(nvl(reg.Destino, 0) * 100, 14, 0);
    vt_tab_segm_S(reg.rnum).BaseDeCalculo     := lpad((reg.BaseDeCalculo * 100), 14, 0);
    vt_tab_segm_S(reg.rnum).DiferencialAliq   := lpad((reg.DiferencialAliq * 100), 14, 0);
    vt_tab_segm_S(reg.rnum).AliqConsumidor    := lpad((reg.AliqConsumidor * 100), 4, 0);
    vt_tab_segm_S(reg.rnum).Origem            := lpad((reg.Origem * 100), 14, 0);
    vt_tab_segm_S(reg.rnum).Destino           := lpad((reg.Destino * 100), 14, 0);
    --
    vn_qtd_linhas := vn_qtd_linhas + 1;
    --
  end loop;
  --
  vn_fase := 44;
  --
  -- Segmento Z - Indica o Final da Declaração
  vt_tab_segm_Z(1).Segmento       := 'Z';
  vt_tab_segm_Z(1).InscriEstadual := vv_Inscricao_Estadual;
  vt_tab_segm_Z(1).PeriodoRef     := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
  vt_tab_segm_Z(1).Retificacao    := gt_row_abertura_gia.dm_tipo_gia;
  vt_tab_segm_Z(1).TotalRegistro  := lpad(vn_qtd_linhas, 3, 0);
  --
  vn_fase := 45;
  --
  -- Procedimento monta a estrutura do arquivo da GIA - TO
  pkb_monta_estr_arq_gia_to;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pkb_gera_arq_gia_to fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_arq_gia_to;

-------------------------------------------------------------------------------------------------------
-- Recupera parâmetros da geração da gia
-------------------------------------------------------------------------------------------------------
procedure pkb_dados_abertura_gia ( en_aberturagia_id in abertura_gia.id%type ) is
begin
   select *
     into gt_row_abertura_gia
     from abertura_gia
    where id = en_aberturagia_id;
exception
   when no_data_found then
      gt_row_abertura_gia := null;
   when others then
      raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_dados_abertura_gia: '||sqlerrm);
end pkb_dados_abertura_gia;

-------------------------------------------------------------------------------------------------------
-- Procedimento de geração do arquivo
-------------------------------------------------------------------------------------------------------
procedure pkb_geracao(en_aberturagia_id in abertura_gia.id%type) is
  --
  vn_fase            number := 0;
  vn_loggenerico_id  log_generico.id%type;
  vv_dominio_descr   dominio.descr%type;
  vv_sigla_estado    estado.sigla_estado%type;
  vn_dm_situacao     abertura_gia.dm_situacao%type;
  vn_apuracaoicms_id apuracao_icms.id%type := 0;
  --
begin
  --
  vn_fase := 1;
  --
  gn_referencia_id  := en_aberturagia_id;
  gv_obj_referencia := 'ABERTURA_GIA';
  --
  -- Recupera parâmetros da geração da GIA
  pkb_dados_abertura_gia(en_aberturagia_id => en_aberturagia_id);
  --
  gv_mensagem := 'Geração da GIA do período de ' || to_char(gt_row_abertura_gia.dt_ini, 'dd/mm/rrrr') ||
                 ' até ' || to_char(gt_row_abertura_gia.dt_fin, 'dd/mm/rrrr');
  --
  vn_fase := 2;
  --
  if nvl(gt_row_abertura_gia.id, 0) > 0 then
    --
    vn_fase := 3;
    --
    begin
      delete from log_generico lg
       where lg.referencia_id  = gn_referencia_id
         and lg.obj_referencia = gv_obj_referencia
         and lg.csftipolog_id <> (select ct.id
                                    from csf_tipo_log ct
                                   where ct.cd = 'INFORMACAO');
    exception
      when others then
        raise_application_error(-20101, 'Erro ao excluir log/inconsistência - pk_gera_arq_gia.pkb_geracao: ' || sqlerrm);
    end;
    --
    vn_fase := 4;
    --
    if nvl(gt_row_abertura_gia.dm_situacao, 0) = 2 then -- Validado
      --
      vn_fase := 5;
      --
      -- Recupera a sigla do estado da empresa que vai gerar a GIA
      vv_sigla_estado      := trim(pk_csf.fkg_sigla_estado_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id));
      gn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id);
      --
      vn_fase := 5.1;
      --
      -- Recupera o parametro ORIGEM_DADO_PESSOA que será usado na DIPAM.
      gn_origem_dado_pessoa := pk_csf_gia.fkg_origem_dado_pessoa(en_empresa_id => gt_row_abertura_gia.empresa_id);
      --	  
      vn_fase := 6;
      --
      if vv_sigla_estado is not null then
        --
        vn_fase := 7;
        --
        -- Verifica se existe apuração processada no mesmo período da abertura
        begin
          select ai.id
            into vn_apuracaoicms_id
            from apuracao_icms ai
           where ai.empresa_id       = gt_row_abertura_gia.empresa_id
             and trunc(ai.dt_inicio) = gt_row_abertura_gia.dt_ini
             and trunc(ai.dt_fim)    = gt_row_abertura_gia.dt_fin
             and ai.dm_situacao      = 3 -- Processada
             and ai.dm_tipo          = 0 -- Real
             and rownum              = 1;
        exception
          when no_data_found then
            vn_apuracaoicms_id := 0;
          when others then
            raise_application_error(-20101, 'Problemas ao identificar apuração de icms no período e para a empresa. Erro na pk_gera_arq_gia.pkb_geracao - fase (' || vn_fase || '): ' || sqlerrm);
        end;
        --
        vn_fase := 8;
        --
        if nvl(vn_apuracaoicms_id, 0) = 0 then
          --
          gn_dm_situacao := 4; -- Erro na geração do arquivo
          --
          gv_resumo := 'Não existe Apuração de ICMS para a Empresa, Período, Situação=Processada e Tipo=Real, informado para GIA-' || vv_sigla_estado || '. Verifique, para que o processo seja executado. Erro na pk_gera_arq_gia.pkb_geracao - fase (' || vn_fase || ')';
          --
          pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                           ev_mensagem       => gv_mensagem,
                                           ev_resumo         => gv_resumo,
                                           en_tipo_log       => erro_de_sistema,
                                           en_referencia_id  => gn_referencia_id,
                                           ev_obj_referencia => gv_obj_referencia,
                                           en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                           en_dm_impressa    => 1);
          --
        end if;
        --
      else
        --
        vn_fase := 9;
        --
        gn_dm_situacao := 4; -- Erro na geração do arquivo
        --
        begin
          select 'Não encontrado a "Sigla do Estado" para a empresa ' || p.cod_part || '-' || p.nome
            into gv_resumo
            from empresa e,
                 pessoa p
           where e.id = gt_row_abertura_gia.empresa_id
             and p.id = e.pessoa_id;
        exception
          when others then
            gv_resumo := 'Erro ao recuperar os dados da empresa (' || gt_row_abertura_gia.empresa_id || ').';
        end;
        --
        vn_fase := 10;
        --
        pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                         ev_mensagem       => gv_mensagem,
                                         ev_resumo         => gv_resumo,
                                         en_tipo_log       => informacao,
                                         en_referencia_id  => gn_referencia_id,
                                         ev_obj_referencia => gv_obj_referencia,
                                         en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                         en_dm_impressa    => 1);
        --
      end if;
      --
      vn_fase := 11;
      --
      if vv_sigla_estado is not null and -- Existe sigla do estado
         nvl(vn_apuracaoicms_id, 0) <> 0 then -- Existe apuração de ICMS
        --
        vn_fase := 12;
        --
        -- Indica para o registro que o arquivo esta "Em Geração", assim NÃO sofre alteração ou interrupção
        begin
          update abertura_gia ag
             set ag.dm_situacao = 5 -- Em Geração
           where ag.id          = gt_row_abertura_gia.id;
        exception
          when others then
            raise_application_error(-20101, 'Problemas ao atualizar situação do registro. Erro na pk_gera_arq_gia.pkb_geracao - fase (' || vn_fase || '): ' || sqlerrm);
        end;
        --
        vn_fase := 13;
        --
        commit;
        --
        vt_estr_arq_gia.delete;
        --
        begin
          --
          vn_fase := 14;
          --
          if vv_sigla_estado = 'AL' then -- Alagoas
            --
            vn_fase := 14.1;
            --
            -- Procedimento para gerar a GIA-AL
            pkb_gera_arq_gia_al;
            --
          end if;
          --
          vn_fase := 15;
          --
          if vv_sigla_estado = 'BA' then -- Bahia
            --
            vn_fase := 15.1;
            --
            -- Procedimento para gerar a GIA-BA
            pkb_gera_arq_gia_ba;
            --
          end if;
          --
          vn_fase := 16;
          --
          if vv_sigla_estado = 'PR' then -- Paraná
            --
            vn_fase := 16.1;
            --
            -- Procedimento para gerar a GIA-PR
            pkb_gera_arq_gia_pr;
            --
          end if;
          --
          vn_fase := 17;
          --
          if vv_sigla_estado = 'PE' then -- Pernambuco
            --
            vn_fase := 17.1;
            --
            -- Procedimento para gerar a GIA-PE
            pkb_gera_arq_gia_pe;
            --
          end if;
          --
          vn_fase := 18;
          --
          if vv_sigla_estado = 'SP' then -- São Paulo
            --
            vn_fase := 18.1;
            --
            -- Procedimento para gerar a GIA-SP
            pkb_gera_arq_gia_sp;
            --
          end if;
          --
          vn_fase := 19;
          --
          if vv_sigla_estado = 'RJ' then -- Rio de Janeiro
            --
            vn_fase := 19.1;
            --
            -- Procedimento para gerar a GIA-RJ
            pkb_gera_arq_gia_rj;
            --
          end if;
          --
          vn_fase := 20;
          --
          if vv_sigla_estado = 'RN' then -- Rio Grande do Norte
            --
            vn_fase := 20.1;
            --
            -- Procedimento para gerar a GIA-RN
            pkb_gera_arq_gia_rn;
            --
          end if;
          --
          vn_fase := 21;
          --
          if vv_sigla_estado = 'SC' then -- Santa Catarina
            --
            vn_fase := 21.1;
            --
            -- Procedimento para gerar a GIA-SC
            pkb_gera_arq_gia_sc;
            --
          end if;
          --
          vn_fase := 22;
          --
          if vv_sigla_estado = 'MS' then -- Mato Grosso do Sul
            --
            vn_fase := 22.1;
            --
            -- Procedimento para gerar a GIA-MS
            pkb_gera_arq_gia_ms;
            --
          end if;
          --
          vn_fase := 23;
          --
          if vv_sigla_estado = 'MG' then -- Minas Gerais
            --
            vn_fase := 23.1;
            --
            -- Procedimento para gerar a GIA-MG
            pkb_gera_arq_gia_mg;
            --
          end if;
          --
          vn_fase := 24;
          --
          if vv_sigla_estado = 'RS' then -- Rio Grande do Sul
            --
            vn_fase := 24.1;
            --
            -- Procedimento para gerar a GIA-RS
            pkb_gera_arq_gia_rs;
            --
          end if;
          --
          vn_fase := 25;
          --
          if vv_sigla_estado = 'ES' then -- Espírito Santo
            --
            vn_fase := 25.1;
            --
            -- Procedimento para gerar a GIA-ES
            pkb_gera_arq_gia_es;
            --
          end if;
          --
          vn_fase := 26;
          --
          if vv_sigla_estado = 'TO' then -- Tocantins
            --
            vn_fase := 26.1;
            --
            -- Procedimento para gerar a GIAM-TO
            pkb_gera_arq_gia_to;
            --
          end if;
          --
          vn_fase := 27;
          --
          -- Caso seja apresentado algum erro em meio os processos de gerações da GIA,
          -- não permite que seja alterado a situação da abertura
          if nvl(gn_dm_situacao, 2) <> 4 then
            --
            gn_dm_situacao := 3; -- Gerado Arquivo
            --
            gv_resumo := 'Arquivo da GIA-' || vv_sigla_estado || ' gerado com sucesso.';
            --
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem,
                                             ev_resumo         => gv_resumo,
                                             en_tipo_log       => informacao,
                                             en_referencia_id  => gn_referencia_id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                             en_dm_impressa    => 1);

          else
            --
            gv_resumo := 'Erro na geração do arquivo da GIA-'|| vv_sigla_estado ||'. Erro na pk_gera_arq_gia.pkb_geracao - fase (' || vn_fase || ')';
            --
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem,
                                             ev_resumo         => gv_resumo,
                                             en_tipo_log       => erro_de_sistema,
                                             en_referencia_id  => gn_referencia_id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                             en_dm_impressa    => 1);
            --
          end if;
          --
        exception
          when others then
            --
            gn_dm_situacao := 4; -- Erro na geração do arquivo
            --
            gv_resumo := 'Erro na geração do arquivo da GIA-'|| vv_sigla_estado ||'. Erro na pk_gera_arq_gia.pkb_geracao - fase (' || vn_fase || ')' || sqlerrm;
            --
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem,
                                             ev_resumo         => gv_resumo,
                                             en_tipo_log       => erro_de_sistema,
                                             en_referencia_id  => gn_referencia_id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                             en_dm_impressa    => 1);
            --
        end;
        --
      end if; -- Existe sigla e apuração
      --
      vn_fase := 28;
      --
      if gn_dm_situacao = 3 then -- Gerado arquivo
        --
        vn_fase := 29;
        --
        -- Grava os dados do arquivo
        pkb_grava_estr_arq_gia;
        --
      end if;
      --
      vn_fase := 30;
      --
      begin
        update abertura_gia ag
           set ag.dm_situacao = gn_dm_situacao
         where ag.id          = gt_row_abertura_gia.id;
      exception
        when others then
          raise_application_error(-20101, 'Problemas ao atualizar situação do registro. Erro na pk_gera_arq_gia.pkb_geracao - fase (' || vn_fase || '): ' || sqlerrm);
      end;
      --
      vn_fase := 31;
      --
      commit;
      --
    else
      --
      -- Situação NÃO permite que o arquivo seja gerado
      vn_fase := 32;
      --
      vv_dominio_descr := pk_csf.fkg_dominio('ABERTURA_GIA.DM_SITUACAO', nvl(gt_row_abertura_gia.dm_situacao, 0));
      --
      gv_resumo := 'Situação da geração da GIA "' || vv_dominio_descr || '", não permite que o arquivo seja gerado.';
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => informacao,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
      --
    end if;
    --
  else
    --
    vn_fase := 33;
    --
    gv_resumo := 'Não encontrado registro de GIA relacionado ao identificador informado (id = ' || gn_referencia_id || '). Erro na pk_gera_arq_gia.pkb_geracao - fase (' || vn_fase || ')';
    --
    pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                     ev_mensagem       => gv_mensagem,
                                     ev_resumo         => gv_resumo,
                                     en_tipo_log       => informacao,
                                     en_referencia_id  => gn_referencia_id,
                                     ev_obj_referencia => gv_obj_referencia,
                                     en_empresa_id     => null,
                                     en_dm_impressa    => 1);
    --
  end if;
  --
  vn_fase := 33;
  --
  commit;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_geracao fase (' || vn_fase || '): ' || sqlerrm);
end pkb_geracao;

-------------------------------------------------------------------------------------------------------
-- Procedimento de desfazer a situação da geração da GIA
-------------------------------------------------------------------------------------------------------
procedure pkb_desfazer(en_aberturagia_id in abertura_gia.id%type) is
  --
  vn_fase     number := 0;
  vn_gia_dime number := 0;
  --
begin
  --
  vn_fase := 1;
  --
  -- Recupera parâmetros da geração da gia
  pkb_dados_abertura_gia(en_aberturagia_id => en_aberturagia_id);
  --
  vn_fase := 2;
  --
  if nvl(gt_row_abertura_gia.id, 0) > 0 then
    --
    vn_fase := 3;
    --
    if nvl(gt_row_abertura_gia.dm_situacao, 0) in (3, 4) then -- 3 - Gerado Arquivo / 4 - Erro na geração do arquivo
      --
      vn_fase := 4;
      --
      delete
        from estr_arq_gia
       where aberturagia_id = en_aberturagia_id;
      --
      vn_fase := 5;
      --
      update abertura_gia
         set dm_situacao = 2 -- Validado
       where id          = en_aberturagia_id;
      --
    elsif nvl(gt_row_abertura_gia.dm_situacao, 0) in (1, 2) then -- 1-Erro de validação / 2-Validado
      --
      vn_fase := 6;
      --
      -- Verifica se a abertura é somente GIA ou
      -- se há vínculo com o processo da DIME
      begin
        select count(*)
          into vn_gia_dime
          from abertura_gia a,
               det_dime d
         where a.id = d.aberturagia_id
           and a.id = en_aberturagia_id;
        exception
          when others then
            vn_gia_dime := 0;
      end;
      --
      if vn_gia_dime > 0 then
      --
      update abertura_gia
         set dm_situacao = 6 -- Registros Gerados
       where id          = en_aberturagia_id;
      --
      else
      --
      update abertura_gia
         set dm_situacao = 0 -- Não Gerado
       where id          = en_aberturagia_id;
      --
      end if;
      --
    elsif nvl(gt_row_abertura_gia.dm_situacao, 0) in (6) then -- 6-Registros Gerados
      --
      vn_fase := 6;
      --
      update abertura_gia
         set dm_situacao = 0 -- Não Gerado
       where id          = en_aberturagia_id;
      --
      delete
        from det_dime d
       where d.aberturagia_id = en_aberturagia_id;
      --
    end if;
    --
    vn_fase := 7;
    --
    commit;
    --
  end if;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_desfazer fase (' || vn_fase || '): ' || sqlerrm);
end pkb_desfazer;

-------------------------------------------------------------------------------------------------------
-- Procedimento de desfazer a situação das informações complementares da geração da DIME
-------------------------------------------------------------------------------------------------------
procedure pkb_desfazer_comp(en_infcompdime_id in inf_comp_dime.id%type) is
  --
  vn_fase        number := 0;
  vn_dm_situacao inf_comp_dime.dm_situacao%type;
  --
begin
  --
  vn_fase := 1;
  --
  -- Recupera a situação do registro
  begin
    select i.dm_situacao
      into vn_dm_situacao
      from inf_comp_dime i
     where i.id = en_infcompdime_id;
  exception
    when others then
      null;
  end;
  --
  vn_fase := 2;
  --
  if nvl(en_infcompdime_id, 0) > 0 then
    --
    vn_fase := 3;
    --
    if nvl(vn_dm_situacao, 0) in (4) then -- 4 - Validado
      --
      vn_fase := 4;
      --
      update inf_comp_dime i
         set i.dm_situacao = 2 -- Calculado
       where i.id          = en_infcompdime_id;
      --
    elsif nvl(vn_dm_situacao, 0) in (2) then -- 2 - Calculado
      --
      vn_fase := 5;
      --
      update inf_comp_dime i
         set i.dm_situacao = 0 -- Criado
       where i.id          = en_infcompdime_id;
      --
    elsif nvl(vn_dm_situacao, 0) in (0) then -- 0 - Criado
      --
      vn_fase := 6;
      --
      update inf_comp_dime i
         set i.dm_situacao = 6 -- Nova
       where i.id          = en_infcompdime_id;
      --
      delete det_inf_comp_dime d
       where d.infcompdime_id = en_infcompdime_id;
      --
    end if;
    --
    vn_fase := 7;
    --
    commit;
    --
  end if;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_desfazer_comp fase (' || vn_fase || '): ' || sqlerrm);
end pkb_desfazer_comp;

-------------------------------------------------------------------------------------------------------
-- Procedimento para validar os dados para geração da GIA
-------------------------------------------------------------------------------------------------------
procedure pkb_validar ( en_aberturagia_id in abertura_gia.id%type ) is
   --
   vn_fase                 number := 0;
   vn_loggenerico_id       log_generico.id%type;
   vv_sigla_estado         estado.sigla_estado%type;
   vn_tipocodarq_id        tipo_cod_arq.id%type;
   vv_cod_st_icms          cod_st.cod_st%type := null;
   vn_estado_id            estado.id%type;
   vv_esttpcodarq_cd       estado_tipo_cod_arq.cd%type;
   vv_dominio_descr        dominio.descr%type;
   vn_dm_situacao          abertura_gia.dm_situacao%type;
   vn_qtde_ai              number;
   vn_qtde_ocor_gia        number;
   vn_qtde_ocor_gia_estado number;
   vv_valida_ie            varchar2(1) := 'N';
   vn_exist_convenio       number := 0;
   --
   cursor c_dados is
   select '1' tipo -- Notas Fiscais de modelos 01, 1B, 04 e 55
        , nf.id    dados_id
        , nf.pessoa_id
        , nf.dt_emiss
        , nf.nro_nf nro_proc
        , nf.serie
        , null subserie
        , inf.id   det_dados_id
        , inf.nro_item
        , inf.cod_item
        , null cod_st_icms
        , inf.cfop
     from nota_fiscal      nf
        , mod_fiscal       mf
        , item_nota_fiscal inf
    where nf.empresa_id      = gt_row_abertura_gia.empresa_id
      and nf.dm_arm_nfe_terc = 0
      and nf.dm_st_proc      = 4 -- Autorizada
      and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('01', '1B', '04', '55', '65')
      and inf.notafiscal_id  = nf.id
      --and inf.cfop          <> 5927  -- #69610 retirada clausula
   union
   select '2' tipo
        , ct.id          dados_id
        , ct.pessoa_id
        , ct.dt_hr_emissao dt_emiss
        , ct.nro_ct nro_proc
        , ct.serie
        , ct.subserie
        , cr.id     det_dados_id
        , null      nro_item
        , null      cod_item
        , cs.cod_st cod_st_icms
        , cf.cd     cfop
     from conhec_transp ct
        , ct_reg_anal   cr
        , cod_st        cs
        , cfop          cf
    where ct.empresa_id      = gt_row_abertura_gia.empresa_id
      and ct.dm_st_proc      = 4
      and ct.dm_arm_cte_terc = 0
      and ((ct.dm_ind_emit = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 1 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(ct.dt_hr_emissao) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (ct.dm_ind_emit = 0 and ct.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(ct.dt_sai_ent,ct.dt_hr_emissao)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      and cr.conhectransp_id = ct.id
      and cs.id              = cr.codst_id
      and cf.id              = cr.cfop_id
   union
   select '3' tipo
        , nf.id       dados_id
        , nf.pessoa_id
        , nf.dt_emiss
        , nf.nro_nf nro_proc
        , nf.serie
        , null subserie
        , ra.id     det_dados_id
        , null      nro_item
        , null      cod_item
        , cs.cod_st cod_st_icms
        , cf.cd     cfop
     from nota_fiscal     nf
        , mod_fiscal      mf
        , nfregist_analit ra
        , cod_st          cs
        , cfop            cf
    where nf.empresa_id      = gt_row_abertura_gia.empresa_id
      and nf.dm_st_proc      = 4
      and nf.dm_arm_nfe_terc = 0
      and ((nf.dm_ind_emit = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 1 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 0 and trunc(nf.dt_emiss) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin)
            or
           (nf.dm_ind_emit = 0 and nf.dm_ind_oper = 0 and gn_dm_dt_escr_dfepoe = 1 and trunc(nvl(nf.dt_sai_ent,nf.dt_emiss)) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin))
      and mf.id              = nf.modfiscal_id
      and mf.cod_mod        in ('06', '29', '28', '21', '22')
      and ra.notafiscal_id   = nf.id
      and cs.id              = ra.codst_id
      and cf.id              = ra.cfop_id
    order by 1, 2, 9; -- tipo, dados_id, nro_item
   --
   cursor c_det_cfop_ecf is
   select ee.ecf_mod
        , ee.ecf_fab
        , ee.ecf_cx
        , rz.id     reducaozecf_id
        , rz.dt_doc dt_emiss
        , ra.id     reganalmovdiaecf_id
        , cs.cod_st cod_st_icms
     from equip_ecf            ee
        , reducao_z_ecf        rz
        , reg_anal_mov_dia_ecf ra
        , cod_st               cs
    where ee.empresa_id          = gt_row_abertura_gia.empresa_id
      and rz.equipecf_id         = ee.id
      and rz.dm_st_proc          = 1 -- Validada
      and trunc(rz.dt_doc) between gt_row_abertura_gia.dt_ini and gt_row_abertura_gia.dt_fin
      and ra.reducaozecf_id      = rz.id
      and cs.id                  = ra.codst_id
    order by 1, 5;
   --
   cursor c_apur_icms is
      select ai.dt_inicio
           , ai.dt_fim
           , c.cod_aj_apur
           , c.descr
           , aai.descr_compl_aj
           , aai.vl_aj_apur
           , aai.id             ajustapuracaoicms_id
        from apuracao_icms       ai
           , ajust_apuracao_icms aai
           , cod_aj_saldo_apur_icms c
       where ai.empresa_id        = gt_row_abertura_gia.empresa_id
         and ai.dm_situacao       = 3 -- Processada
         and ai.dm_tipo           = 0 -- Real
         and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
         and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin
         and aai.apuracaoicms_id  = ai.id
         and c.id                 = aai.codajsaldoapuricms_id;
   --
   cursor c_icmsgia ( en_ajustapuracaoicms_id ajust_apuracao_icms.id%type ) is
   select s.cd subitemgia_cd
        , a.vl_aj_apur
        , a.flegal
        , a.descr_ocor
        , a.id
     from ajust_apur_icms_gia a
        , subitem_gia s
    where a.ajustapuracaoicms_id = en_ajustapuracaoicms_id
      and s.id                   = a.subitemgia_id
      and s.dm_apur              = 0 -- Apuração: 0-ICMS, 1-ICMS-ST
    order by 1;
   --
   cursor c_icmsgia_ies ( en_ajustapuricmsgia_id in ajust_apur_icms_gia.id%type ) is
   select j.ie
        , o.valor
        , p.cod_part
     from icms_ocor_gia_ie o
        , pessoa p
        , juridica j
    where o.ajustapuricmsgia_id = en_ajustapuricmsgia_id
      and p.id                  = o.pessoa_id
      and j.pessoa_id           = p.id
    order by j.ie;
   --
   cursor c_icmsgia_ies2 ( en_ajustapuricmsgia_id in ajust_apur_icms_gia.id%type ) is
   select o.valor
        , p.cod_part
     from icms_ocor_gia_ie o
        , pessoa p
        , fisica f
    where o.ajustapuricmsgia_id  = en_ajustapuricmsgia_id
      and p.id                   = o.pessoa_id
      and f.pessoa_id            = p.id
    order by p.cod_part;
   --
   cursor c_icmsgia_subst ( en_ajustapuricmsgia_id in ajust_apur_icms_gia.id%type ) is
   select j.ie
        , s.nro_nf
        , s.valor
        , p.cod_part
     from icms_substituto_gia s
        , pessoa p
        , juridica j
    where s.ajustapuricmsgia_id = en_ajustapuricmsgia_id
      and p.id                  = s.pessoa_id
      and j.pessoa_id           = p.id
    order by j.ie, s.nro_nf;
   --
   cursor c_icmsgia_subst2 ( en_ajustapuricmsgia_id in ajust_apur_icms_gia.id%type ) is
   select s.nro_nf
        , s.valor
        , p.cod_part
     from icms_substituto_gia s
        , pessoa p
        , fisica f
    where s.ajustapuricmsgia_id = en_ajustapuricmsgia_id
      and p.id                  = s.pessoa_id
      and f.pessoa_id           = p.id
    order by p.cod_part, s.nro_nf;
   --
   cursor c_conveio is
    select e.convenio,
           e.dt_ini,
           e.dt_fin
      from empresa_forma_trib e
     where e.empresa_id = gt_row_abertura_gia.empresa_id
       and e.convenio   is not null -- Existe convenio informado
     order by 3 desc;
   --
begin
  --
  vn_fase := 1;
  --
  vn_dm_situacao := 2; -- Validado
  --
  begin
    delete from log_generico lg
     where lg.referencia_id = en_aberturagia_id
       and lg.obj_referencia = 'ABERTURA_GIA';
  exception
    when others then
      raise_application_error(-20101, 'Erro ao excluir log/inconsistência - pk_gera_arq_gia.pkb_validar: ' || sqlerrm);
  end;
  --
  vn_fase := 2;
  -- Recuperar parâmetros da geração da gia
  pkb_dados_abertura_gia(en_aberturagia_id => en_aberturagia_id);
  --
  vn_fase := 3;
  --
  if nvl(gt_row_abertura_gia.id, 0) > 0 then
    --
    vn_fase           := 4;
    gv_mensagem       := 'Validação da Abertura da GIA do período de ' || to_char(gt_row_abertura_gia.dt_ini, 'dd/mm/rrrr') || ' até ' || to_char(gt_row_abertura_gia.dt_fin, 'dd/mm/rrrr');
    gn_referencia_id  := gt_row_abertura_gia.id;
    gv_obj_referencia := 'ABERTURA_GIA';
    gv_resumo         := null;
    --
    vn_fase := 5;
    --
    if nvl(gt_row_abertura_gia.dm_situacao, 0) = 0 then -- Não gerado
      --
      vn_fase := 6;
      --
      -- Recuperar a sigla do estado da empresa que vai gerar a GIA
      vv_sigla_estado      := trim(pk_csf.fkg_sigla_estado_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id));
      gn_dm_dt_escr_dfepoe := pk_csf.fkg_dmdtescrdfepoe_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id);
      --
      vn_fase := 7;
      --
      -- Validar dados específicos da GIA-SP
      if vv_sigla_estado = 'SP' then
        --
        vn_fase := 8;
        --
        vn_tipocodarq_id := pk_csf.fkg_tipocodarq_id(ev_cd => '1'); -- Tipo de arquivo GIA-SP
        --
        vn_fase := 9;
        --
        for rec in c_dados loop
          --
          exit when c_dados%notfound or(c_dados%notfound) is null;
          --
          vn_fase := 10;
          --
          -- tipo = 1 - Notas Fiscais de modelos 01, 1B, 04 e 55
          -- tipo = 2 - Conhecimentos de transportes
          -- tipo = 3 - Valores de Serviços Contínuos
          --
          if rec.tipo = '1' then
            --
            vn_fase := 11;
            -- Recupera os valores de CST
            begin
              select cst.cod_st
                into vv_cod_st_icms
                from imp_itemnf imp,
                     cod_st cst,
                     tipo_imposto ti
               where imp.itemnf_id = rec.det_dados_id
                 and imp.dm_tipo   = 0 -- Imposto
                 and cst.id        = imp.codst_id
                 and ti.id         = imp.tipoimp_id
                 and ti.cd         = 1; -- ICMS
            exception
              when others then
                vv_cod_st_icms := null;
            end;
            --
          elsif rec.tipo in ('2', '3') then
            --
            vn_fase        := 12;
            vv_cod_st_icms := rec.cod_st_icms;
            --
          else
            --
            vn_fase        := 13;
            vv_cod_st_icms := null;
            --
          end if;
          --
          vn_fase := 14;
          --
          -- Recuperar a Sigla do Estado da Pessoa/Participante da Nota Fiscal/Conhecimento/NF Serviço
          begin
            select est.id,
                   est.sigla_estado
              into vn_estado_id,
                   vv_sigla_estado
              from pessoa p,
                   cidade cid,
                   estado est
             where p.id   = rec.pessoa_id
               and cid.id = p.cidade_id
               and est.id = cid.estado_id;
          exception
            when others then
              vn_estado_id    := null;
              vv_sigla_estado := null;
          end;
          --
          vn_fase := 15;
          --
          -- Pega o código do estado para o Tipo de Arquivo GIA-SP
          vv_esttpcodarq_cd := pk_csf.fkg_cd_estado_tipo_cod_arq(en_estado_id     => vn_estado_id,
                                                                 en_tipocodarq_id => vn_tipocodarq_id);
          --
          vn_fase := 16;
          --
          if trim(vv_cod_st_icms) is not null then
            --
            vn_fase := 17;
            --
            if substr(rec.cfop, 1, 1) in ('2', '6') then
              --
              vn_fase := 18;
              --
              if vv_esttpcodarq_cd is null then
                --
                vn_fase := 19;
                --
                if rec.tipo = '1' then
                  --
                  gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie || ' Data de emissão ' ||
                               to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', Nro do Item ' || rec.nro_item ||
                               ' Código do Item ' || rec.cod_item || ', não possui Sigla do Estado da Nota Fiscal/' ||
                               'Participante (' || vv_sigla_estado || '), relacionado com o tipo de arquivo da GIA-SP.';
                  --
                elsif rec.tipo = '2' then
                  --
                  gv_resumo := 'Conhecimento de transporte Nro ' || rec.nro_proc || ' Série ' || rec.serie ||
                               ' Subsérie ' || rec.subserie || ' Data de emissão ' || to_char(rec.dt_emiss, 'dd/mm/yyyy') ||
                               ', não possui Sigla do Estado do Conhecimento/Participante (' || vv_sigla_estado ||
                               '), relacionado com o tipo de arquivo da GIA-SP.';
                  --
                elsif rec.tipo = '3' then
                  --
                  gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie ||
                               ' Data de emissão ' || to_char(rec.dt_emiss, 'dd/mm/yyyy') ||
                               ', não possui Sigla do Estado da Nota Fiscal/Participante (' ||
                               vv_sigla_estado || '), relacionado com o tipo de ' || 'arquivo da GIA-SP.';
                  --
                end if;
                --
                vn_fase := 20;
                --
                pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                                 ev_mensagem       => gv_mensagem,
                                                 ev_resumo         => gv_resumo,
                                                 en_tipo_log       => informacao,
                                                 en_referencia_id  => gn_referencia_id,
                                                 ev_obj_referencia => gv_obj_referencia,
                                                 en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                                 en_dm_impressa    => 1);
                --
              elsif vv_esttpcodarq_cd = '26' then -- é SP
                --
                vn_fase := 21;
                --
                if rec.tipo = '1' then
                  --
                  gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie || ' Data de emissão ' ||
                               to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', Nro do Item ' || rec.nro_item ||
                               ' Código do Item ' || rec.cod_item || ', possui Sigla do Estado da Nota Fiscal/' ||
                               'Participante (' || vv_sigla_estado || '), relacionado com CFOP (' || rec.cfop ||
                               '), que indica ser interestadual.';
                  --
                elsif rec.tipo = '2' then
                  --
                  gv_resumo := 'Conhecimento de transporte Nro ' || rec.nro_proc || ' Série ' || rec.serie ||
                               ' Subsérie ' || rec.subserie || ' Data de ' || 'emissão ' || to_char(rec.dt_emiss, 'dd/mm/yyyy') ||
                               ', possui Sigla do Estado do Conhecimento/Participante (' || vv_sigla_estado ||
                               '), relacionado com CFOP (' || rec.cfop || '), que indica ser interestadual.';
                  --
                elsif rec.tipo = '3' then
                  --
                  gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie ||
                               ' Data de emissão ' || to_char(rec.dt_emiss, 'dd/mm/yyyy') ||
                               ', possui Sigla do Estado da Nota Fiscal/Participante (' || vv_sigla_estado ||
                               '), relacionado com CFOP (' || rec.cfop || '), que indica ser interestadual.';
                  --
                end if;
                --
                vn_fase := 22;
                --
                pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                                 ev_mensagem       => gv_mensagem,
                                                 ev_resumo         => gv_resumo,
                                                 en_tipo_log       => informacao,
                                                 en_referencia_id  => gn_referencia_id,
                                                 ev_obj_referencia => gv_obj_referencia,
                                                 en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                                 en_dm_impressa    => 1);
                --
              end if;
              --
            elsif substr(rec.cfop, 1, 1) in (1, 5) and vv_sigla_estado <> 'SP' then
              --
              vn_fase := 23;
              --
              if rec.tipo = '1' then
                --
                gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie || ' Data de emissão ' ||
                             to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', Nro do Item ' || rec.nro_item ||
                             ' Código do Item ' || rec.cod_item || ', possui Sigla do Estado da Nota Fiscal/' ||
                             'Participante (' || vv_sigla_estado || '), relacionado com CFOP (' || rec.cfop ||
                             '), que indica ser estadual e deveria ' || 'ser o estado de SP.';
                --
              elsif rec.tipo = '2' then
                --
                gv_resumo := 'Conhecimento de transporte Nro ' || rec.nro_proc || ' Série ' || rec.serie ||
                             ' Subsérie ' || rec.subserie || ' Data de emissão ' ||
                             to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', possui Sigla do Estado do Conhecimento/Participante (' ||
                             vv_sigla_estado || '), relacionado com CFOP (' || rec.cfop ||
                             '), que indica ser estadual e deveria ser o estado de SP.';
                --
              elsif rec.tipo = '3' then
                --
                gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie || ' Data de emissão ' ||
                             to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', possui Sigla do Estado da Nota Fiscal/Participante (' ||
                             vv_sigla_estado || '), relacionado com CFOP (' || rec.cfop ||
                             '), que indica ser estadual e deveria ser o estado de SP.';
                --
              end if;
              --
              vn_fase := 24;
              --
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem,
                                               ev_resumo         => gv_resumo,
                                               en_tipo_log       => informacao,
                                               en_referencia_id  => gn_referencia_id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                               en_dm_impressa    => 1);
              --
            end if;
            --
          else
            -- trim(vv_cod_st_icms) is null then
            --
            vn_fase := 25;
            --
            if rec.tipo = '1' then
              --
              gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie || ' Data de emissão ' ||
                           to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', Nro do Item ' || rec.nro_item ||
                           ' Código do Item ' || rec.cod_item || ', não possui Código ST para o imposto ICMS.';
              --
            elsif rec.tipo = '2' then
              --
              gv_resumo := 'Conhecimento de transporte Nro ' || rec.nro_proc || ' Série ' || rec.serie ||
                           ' Subsérie ' || rec.subserie || ' Data de emissão ' ||
                           to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', não possui Código ST para o imposto ICMS.';
              --
            elsif rec.tipo = '3' then
              --
              gv_resumo := 'Nota fiscal Nro ' || rec.nro_proc || ' Série ' || rec.serie || ' Data de emissão ' ||
                           to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', não possui Código ST para o imposto ICMS.';
              --
            end if;
            --
            vn_fase := 26;
            --
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem,
                                             ev_resumo         => gv_resumo,
                                             en_tipo_log       => informacao,
                                             en_referencia_id  => gn_referencia_id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                             en_dm_impressa    => 1);
            --
          end if;
          --
        end loop;
        --
        vn_fase := 27;
        -- Informações de Cupom Fiscal
        for rec in c_det_cfop_ecf loop
          --
          exit when c_det_cfop_ecf%notfound or(c_det_cfop_ecf%notfound) is null;
          --
          vn_fase := 28;
          --
          if trim(rec.cod_st_icms) is null then
            --
            vn_fase   := 29;
            gv_resumo := 'Equipamento Modelo ' || rec.ecf_mod || ' Fabricação ' || rec.ecf_fab || ' Nro Caixa ' ||
                         rec.ecf_cx || ' Data do documento ' || to_char(rec.dt_emiss, 'dd/mm/yyyy') || ', não possui Código ST para o imposto ICMS.';
            --
            pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                             ev_mensagem       => gv_mensagem,
                                             ev_resumo         => gv_resumo,
                                             en_tipo_log       => informacao,
                                             en_referencia_id  => gn_referencia_id,
                                             ev_obj_referencia => gv_obj_referencia,
                                             en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                             en_dm_impressa    => 1);
            --
          end if;
          --
        end loop; -- final c_det_cfop_ecf
        --
        -- valida situação, as mensagens de inconsistência são do tipo informação geral, por isso o registro ficará sempre como validado.
        vn_dm_situacao := 2;
        --
      end if; -- vv_sigla_estado = 'SP'
      --
      -- Validar dados específicos da GIA-TO
      if vv_sigla_estado = 'TO' then
        --
        vn_fase := 29;
        --
        for rec in c_conveio loop
          --
          exit when c_conveio%notfound or(c_conveio%notfound) is null;
          --
          vn_fase := 30;
          --
          --if (gt_row_abertura_gia.dt_ini <= rec.dt_ini or rec.dt_fin >= gt_row_abertura_gia.dt_fin) and rec.dt_fin is not null then
          if rec.dt_fin >= gt_row_abertura_gia.dt_fin and rec.dt_fin is not null then
            --
            vn_fase := 31;
            --
            gv_num_tare      := rec.convenio;
            gv_dt_vencimento := to_char(rec.dt_fin, 'DDMMYYYY');
            --
            vn_dm_situacao := 2; -- Validado
            --
            exit;
            --
          else
            --
            -- Verifica se não foi informado data final (Data de Vencimento)
            if rec.dt_fin is null then
              --
              vn_fase   := 32;
              gv_resumo := 'Data final do convênio ' || rec.convenio || ' não informada!';
              --
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem,
                                               ev_resumo         => gv_resumo,
                                               en_tipo_log       => informacao,
                                               en_referencia_id  => gn_referencia_id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                               en_dm_impressa    => 1);
              --
              vn_dm_situacao := 1; -- Erro de Validação
              --
              exit;
              --
            end if;
            --
            vn_fase := 32;
            --
            -- Verifica se a data final encontra-se venciada
            if rec.dt_fin <= gt_row_abertura_gia.dt_fin then
              --
              vn_fase   := 33;
              gv_resumo := 'Data final do convênio ' || rec.convenio || ' encontra-se com o período vencido!';
              --
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem,
                                               ev_resumo         => gv_resumo,
                                               en_tipo_log       => informacao,
                                               en_referencia_id  => gn_referencia_id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                               en_dm_impressa    => 1);
              --
              vn_dm_situacao := 1; -- Erro de Validação
              --
              exit;
              --
            end if;
            --
          end if;
          --
        end loop;
        --
      end if; -- vv_sigla_estado = 'TO'
      --
      vn_fase := 35;
      --
      --| Valida dados da Apuração de ICMS
      --
      -- Verifica se existe apuração de ICMS
      begin
        --
        select count(1)
          into vn_qtde_ai
          from apuracao_icms ai
         where ai.empresa_id        = gt_row_abertura_gia.empresa_id
           and ai.dm_situacao       = 3 -- Processada
           and ai.dm_tipo           = 0 -- Real
           and trunc(ai.dt_inicio) >= gt_row_abertura_gia.dt_ini
           and trunc(ai.dt_fim)    <= gt_row_abertura_gia.dt_fin;
        --
      exception
        when others then
          vn_qtde_ai := 0;
      end;
      --
      vn_fase := 36;
      --
      if nvl(vn_qtde_ai, 0) <= 0 then
        --
        gv_resumo := 'Não existe apuração de ICMS para o período de geração.';
        --
        pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                         ev_mensagem       => gv_mensagem,
                                         ev_resumo         => gv_resumo,
                                         en_tipo_log       => erro_de_validacao,
                                         en_referencia_id  => gn_referencia_id,
                                         ev_obj_referencia => gv_obj_referencia,
                                         en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                         en_dm_impressa    => 1);
        --
        vn_dm_situacao := 1; -- Erro de Validação
        --
      end if;
      --
      vn_fase := 37;
      --
      begin
        --
        select count(1)
          into vn_qtde_ocor_gia_estado
          from subitem_gia s,
               estado est
         where s.dm_apur        = 0 -- ICMS
           and est.id           = s.estado_id
           and est.sigla_estado = vv_sigla_estado;
        --
      exception
        when others then
          vn_qtde_ocor_gia_estado := 0;
      end;
      --
      vn_fase := 38;
      --
      for rec_apur_icms in c_apur_icms loop
        exit when c_apur_icms%notfound or(c_apur_icms%notfound) is null;
        --
        vn_fase := 38.1;
        --
        begin
          --
          select count(1)
            into vn_qtde_ocor_gia
            from ajust_apur_icms_gia
           where ajustapuracaoicms_id = rec_apur_icms.ajustapuracaoicms_id;
          --
        exception
          when others then
            vn_qtde_ocor_gia := 0;
        end;
        --
        vn_fase := 38.2;
        --
        if nvl(vn_qtde_ocor_gia, 0) <= 0 and nvl(vn_qtde_ocor_gia_estado, 0) > 0 then
          --
          gv_resumo := 'Não informado a "Ocorrencia da Gia para Apuração de ICMS", para o Código: ' ||
                       rec_apur_icms.cod_aj_apur || ' Descrição: ' || rec_apur_icms.descr || ' Complemento: ' ||
                       rec_apur_icms.descr_compl_aj || ' Valor: ' || trim(to_char(rec_apur_icms.vl_aj_apur, '999G999G999G990D00')) || '.';
          --
          pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                           ev_mensagem       => gv_mensagem,
                                           ev_resumo         => gv_resumo,
                                           en_tipo_log       => informacao,
                                           en_referencia_id  => gn_referencia_id,
                                           ev_obj_referencia => gv_obj_referencia,
                                           en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                           en_dm_impressa    => 1);
          --
        end if;
        --
        vn_fase := 38.3;
        --
        for rec_icmsgia in c_icmsgia(rec_apur_icms.ajustapuracaoicms_id) loop
          exit when c_icmsgia%notfound or(c_icmsgia%notfound) is null;
          --
          vn_fase := 38.4;
          --
          if rec_icmsgia.subitemgia_cd in ('00218',
                                           '00219',
                                           '00704',
                                           '00705',
                                           '00706',
                                           '00707',
                                           '00729',
                                           '00730') then
            --
            vn_fase      := 38.5;
            vv_valida_ie := 'N';
            --
            -- Valida Participantes de IEs - Pessoa Jurídica
            for rec_icmsgia_ies in c_icmsgia_ies(rec_icmsgia.id) loop
              exit when c_icmsgia_ies%notfound or(c_icmsgia_ies%notfound) is null;
              --
              vn_fase := 38.6;
              --
              if trim(rec_icmsgia_ies.ie) is null then
                --
                gv_resumo := 'Não informado a Inscrição Estadual do participante "' || rec_icmsgia_ies.cod_part ||
                             '" na "Ocorrencia da Gia para Apuração de ICMS/Aba IEs", para o Código: ' ||
                             rec_apur_icms.cod_aj_apur || ' Descrição: ' || rec_apur_icms.descr || ' Complemento: ' ||
                             rec_apur_icms.descr_compl_aj || ' Valor: ' || trim(to_char(rec_apur_icms.vl_aj_apur, '999G999G999G990D00')) ||
                             ', Sub-Item Gia: ' || rec_icmsgia.subitemgia_cd;
                --
                pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                                 ev_mensagem       => gv_mensagem,
                                                 ev_resumo         => gv_resumo,
                                                 en_tipo_log       => informacao,
                                                 en_referencia_id  => gn_referencia_id,
                                                 ev_obj_referencia => gv_obj_referencia,
                                                 en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                                 en_dm_impressa    => 1);
                --
              end if;
              --
              vv_valida_ie := 'S';
              --
            end loop;
            --
            vn_fase := 38.7;
            --
            -- Valida Participantes de IEs - Pessoa Física
            for rec_icmsgia_ies2 in c_icmsgia_ies2(rec_icmsgia.id) loop
              exit when c_icmsgia_ies2%notfound or(c_icmsgia_ies2%notfound) is null;
              --
              vn_fase := 38.8;
              --
              gv_resumo := 'Participante "' || rec_icmsgia_ies2.cod_part || ' não pode ser pessoa física' ||
                           '" na "Ocorrencia da Gia para Apuração de ICMS/Aba IEs", para o Código: ' || rec_apur_icms.cod_aj_apur || ' Descrição: ' ||
                           rec_apur_icms.descr || ' Complemento: ' || rec_apur_icms.descr_compl_aj || ' Valor: ' ||
                           trim(to_char(rec_apur_icms.vl_aj_apur, '999G999G999G990D00')) ||
                           ', Sub-Item Gia: ' || rec_icmsgia.subitemgia_cd;
              --
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem,
                                               ev_resumo         => gv_resumo,
                                               en_tipo_log       => informacao,
                                               en_referencia_id  => gn_referencia_id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                               en_dm_impressa    => 1);
              --
              vv_valida_ie := 'S';
              --
            end loop;
            --
            vn_fase := 38.9;
            --
            if vv_valida_ie = 'N' then
              -- Não encontrou registro de ocorrência de GIA para Pessoa Jurídica e nem Pessoa Física - IEs
              --
              gv_resumo := 'Não informado "Ocorrência da Gia para Apuração de ICMS/Aba IEs", para o Código: ' ||
                           rec_apur_icms.cod_aj_apur || ' Descrição: ' || rec_apur_icms.descr || ' Complemento: ' ||
                           rec_apur_icms.descr_compl_aj || ' Valor: ' || trim(to_char(rec_apur_icms.vl_aj_apur, '999G999G999G990D00')) ||
                           ', Sub-Item Gia: ' || rec_icmsgia.subitemgia_cd;
              --
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem,
                                               ev_resumo         => gv_resumo,
                                               en_tipo_log       => informacao,
                                               en_referencia_id  => gn_referencia_id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                               en_dm_impressa    => 1);
              --
            end if;
            --
          end if; -- subitemgia_cd in ('00218', '00219', '00704', '00705', '00706', '00707', '00729', '00730')
          --
          vn_fase := 38.10;
          --
          if rec_icmsgia.subitemgia_cd in ('00210', '00211') then
            --
            vn_fase      := 38.11;
            vv_valida_ie := 'N';
            --
            -- Valida Participantes de IESubstituto - Pessoa Jurídica
            for rec_icmsgia_subst in c_icmsgia_subst(rec_icmsgia.id) loop
              exit when c_icmsgia_subst%notfound or(c_icmsgia_subst%notfound) is null;
              --
              vn_fase := 38.12;
              --
              if trim(rec_icmsgia_subst.ie) is null then
                --
                gv_resumo := 'Não informado a Inscrição Estadual do participante "' || rec_icmsgia_subst.cod_part ||
                             '" na "Ocorrencia da Gia para Apuração de ICMS/Aba Substituto", para o Código: ' ||
                             rec_apur_icms.cod_aj_apur || ' Descrição: ' || rec_apur_icms.descr || ' Complemento: ' ||
                             rec_apur_icms.descr_compl_aj || ' Valor: ' || trim(to_char(rec_apur_icms.vl_aj_apur, '999G999G999G990D00')) ||
                             ', Sub-Item Gia: ' || rec_icmsgia.subitemgia_cd;
                --
                pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                                 ev_mensagem       => gv_mensagem,
                                                 ev_resumo         => gv_resumo,
                                                 en_tipo_log       => informacao,
                                                 en_referencia_id  => gn_referencia_id,
                                                 ev_obj_referencia => gv_obj_referencia,
                                                 en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                                 en_dm_impressa    => 1);
                --
              end if;
              --
              vv_valida_ie := 'S';
              --
            end loop;
            --
            vn_fase := 38.13;
            --
            -- Valida Participantes de IEs - Pessoa Física
            for rec_icmsgia_subst2 in c_icmsgia_subst2(rec_icmsgia.id) loop
              exit when c_icmsgia_subst2%notfound or(c_icmsgia_subst2%notfound) is null;
              --
              vn_fase := 38.14;
              --
              gv_resumo := 'Não informado a Inscrição Estadual do participante "' || rec_icmsgia_subst2.cod_part ||
                           '" na "Ocorrencia da Gia para Apuração de ICMS/Aba Substituto", para o Código: ' ||
                           rec_apur_icms.cod_aj_apur || ' Descrição: ' || rec_apur_icms.descr || ' Complemento: ' ||
                           rec_apur_icms.descr_compl_aj || ' Valor: ' || trim(to_char(rec_apur_icms.vl_aj_apur, '999G999G999G990D00')) ||
                           ', Sub-Item Gia: ' || rec_icmsgia.subitemgia_cd;
              --
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem,
                                               ev_resumo         => gv_resumo,
                                               en_tipo_log       => informacao,
                                               en_referencia_id  => gn_referencia_id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                               en_dm_impressa    => 1);
              --
              vv_valida_ie := 'S';
              --
            end loop;
            --
            vn_fase := 38.15;
            --
            if vv_valida_ie = 'N' then
              -- Não encontrou registro de ocorrência de GIA para Pessoa Jurídica e nem Pessoa Física - IESubstituto
              --
              gv_resumo := 'Não informado "Ocorrência da Gia para Apuração de ICMS/Aba Substituto", para o Código: ' ||
                           rec_apur_icms.cod_aj_apur || ' Descrição: ' || rec_apur_icms.descr || ' Complemento: ' ||
                           rec_apur_icms.descr_compl_aj || ' Valor: ' || trim(to_char(rec_apur_icms.vl_aj_apur, '999G999G999G990D00')) ||
                           ', Sub-Item Gia: ' || rec_icmsgia.subitemgia_cd;
              --
              pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                               ev_mensagem       => gv_mensagem,
                                               ev_resumo         => gv_resumo,
                                               en_tipo_log       => informacao,
                                               en_referencia_id  => gn_referencia_id,
                                               ev_obj_referencia => gv_obj_referencia,
                                               en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                               en_dm_impressa    => 1);
              --
            end if;
            --
          end if; -- subitemgia_cd in ('00210', '00211')
        --
        end loop; -- fim do ajuste da apuração de icms
      --
      end loop; -- fim da apuração do icms
      --
      vn_fase := 39;
      --
      vn_fase := 99;
      -- valida situação, as mensagens de inconsistência são do tipo informação geral, por isso o registro ficará sempre como validado.
      update abertura_gia ag
         set ag.dm_situacao = vn_dm_situacao
       where ag.id = en_aberturagia_id;
      --
    else
      -- situação NÃO permite que o arquivo seja gerado
      vn_fase := 100;
      --
      vv_dominio_descr := pk_csf.fkg_dominio('ABERTURA_GIA.DM_SITUACAO', nvl(gt_row_abertura_gia.dm_situacao, 0));
      --
      gv_resumo := 'Situação da geração da GIA "' || vv_dominio_descr || '", não permite que o arquivo seja validado.';
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => informacao,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
      --
    end if;
    --
  else
    --
    vn_fase := 32;
    --
    gv_resumo := 'Não encontrado registro de GIA relacionado ao identificador informado para Validação (id = ' || gn_referencia_id || ').';
    --
    pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                     ev_mensagem       => gv_mensagem,
                                     ev_resumo         => gv_resumo,
                                     en_tipo_log       => informacao,
                                     en_referencia_id  => gn_referencia_id,
                                     ev_obj_referencia => gv_obj_referencia,
                                     en_empresa_id     => null,
                                     en_dm_impressa    => 1);
    --
  end if;
  --
  vn_fase := 33;
  --
  commit;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_validar fase (' || vn_fase || '): ' || sqlerrm);
end pkb_validar;

-------------------------------------------------------------------------------------------------------
-- Procedimento para validar os dados para geração da DIME
-------------------------------------------------------------------------------------------------------
procedure pkb_validar_dime(en_aberturagia_id in abertura_gia.id%type) is

  vn_fase           number := 0;
  vv_error          number := 0;
  vn_loggenerico_id log_generico.id%type;
  vv_dominio_descr  dominio.descr%type;
  vn_dm_situacao    abertura_gia.dm_situacao%type;

  cursor c_det_dime is
    select q.codigo cod_quadro,
           I.descricao desc_registro,
           i.codigo cod_registro,
           d.conteudo,
           d.qtde_trab
      from det_dime d,
           registro_dime r,
           quadro_dime q,
           item_dime i
     where d.aberturagia_id  = gt_row_abertura_gia.id
       and d.registrodime_id = r.id
       and d.quadrodime_id   = q.id
       and d.itemdime_id     = i.id
       and r.codigo = '21';

begin
  --
  vn_fase := 1;
  --
  begin
    delete
      from log_generico lg
     where lg.referencia_id  = en_aberturagia_id
       and lg.obj_referencia = 'ABERTURA_GIA';
  exception
    when others then
      raise_application_error(-20101, 'Erro ao excluir log/inconsistência - pk_gera_arq_gia.pkb_validar_dime: ' || sqlerrm);
  end;
  --
  vn_fase := 2;
  --
  -- Recuperar parâmetros da geração da gia
  pkb_dados_abertura_gia(en_aberturagia_id => en_aberturagia_id);
  --
  vn_fase := 3;
  --
  if nvl(gt_row_abertura_gia.id, 0) > 0 then
    --
    vn_fase           := 4;
    --
    gv_mensagem       := 'Validação da Abertura da GIA do período de ' || to_char(gt_row_abertura_gia.dt_ini, 'dd/mm/rrrr') || ' até ' || to_char(gt_row_abertura_gia.dt_fin, 'dd/mm/rrrr');
    gn_referencia_id  := gt_row_abertura_gia.id;
    gv_obj_referencia := 'ABERTURA_GIA';
    gv_resumo         := null;
    --
    vn_fase := 5;
    --
    if nvl(gt_row_abertura_gia.dm_situacao, 6) = 6 then -- Registros Gerados
      --
      for r_det_dime in c_det_dime loop
        --
        if r_det_dime.cod_registro = '010' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.1;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '020' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.2;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '030' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.3;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '040' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.4;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '050' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.5;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '060' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.6;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '070' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.7;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '080' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.8;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '090' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.9;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '100' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.10;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '110' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.11;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '120' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.12;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '130' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.13;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '140' and r_det_dime.cod_quadro = '00' and r_det_dime.conteudo is null then
          --
          vn_fase := 5.14;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        elsif r_det_dime.cod_registro = '150' and r_det_dime.cod_quadro = '00' and r_det_dime.qtde_trab is null then
          --
          vn_fase := 5.15;
          --
          gv_resumo := 'Registro ' || r_det_dime.cod_registro || ' - ' || r_det_dime.desc_registro || ', conteúdo não informado para geração do arquivo!';
          vv_error  := vv_error + 1;
          --
        end if;
        --
        vn_fase := 6;
        --
        if vv_error > 0 then
          --
          vn_fase := 6.1;
          --
          pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                           ev_mensagem       => gv_mensagem,
                                           ev_resumo         => gv_resumo,
                                           en_tipo_log       => erro_de_validacao,
                                           en_referencia_id  => gn_referencia_id,
                                           ev_obj_referencia => gv_obj_referencia,
                                           en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                           en_dm_impressa    => 1);
          --
        end if;
        --
      end loop;
      --
      vn_fase := 7;
      --
      -- Verifica se foi apresentado algum erro
      if vv_error > 0 then
        --
        vn_fase := 7.1;
        --
        begin
          update det_dime d
             set d.dm_situacao    = 2 -- Erro de validação
           where d.aberturagia_id = gn_referencia_id;
        end;
        --
        vn_fase := 7.2;
        --
        begin
          update abertura_gia a
             set a.dm_situacao = 1 -- Erro de validação
           where a.id          = gn_referencia_id;
        end;
        --
      else
        --
        vn_fase := 7.3;
        --
        begin
          update det_dime d
             set d.dm_situacao    = 1 -- Validado
           where d.aberturagia_id = gn_referencia_id;
        end;
        --
        vn_fase := 7.4;
        --
        begin
          update abertura_gia a
             set a.dm_situacao = 2 -- Validado
           where a.id          = gn_referencia_id;
        end;
        --
      end if;
      --
      commit;
      --
    else
      --
      -- Situação NÃO permite que o arquivo seja gerado
      vn_fase := 20;
      --
      vv_dominio_descr := pk_csf.fkg_dominio('ABERTURA_GIA.DM_SITUACAO', nvl(gt_row_abertura_gia.dm_situacao, 0));
      --
      gv_resumo := 'Situação da geração da GIA "' || vv_dominio_descr || '", não permite que o arquivo seja validado.';
      --
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => informacao,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
      --
    end if;
    --
  else
    --
    vn_fase := 30;
    --
    gv_resumo := 'Não encontrado registro de GIA relacionado ao identificador informado para Validação (id = ' || gn_referencia_id || ').';
    --
    pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                     ev_mensagem       => gv_mensagem,
                                     ev_resumo         => gv_resumo,
                                     en_tipo_log       => informacao,
                                     en_referencia_id  => gn_referencia_id,
                                     ev_obj_referencia => gv_obj_referencia,
                                     en_empresa_id     => null,
                                     en_dm_impressa    => 1);
    --
  end if;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_validar_dime fase (' || vn_fase || '): ' || sqlerrm);
end pkb_validar_dime;

-------------------------------------------------------------------------------------------------------
-- Procedimento para geração dos registros para geração da DIME
-------------------------------------------------------------------------------------------------------
procedure pkb_gera_reg_dime(en_aberturagia_id in abertura_gia.id%type) is

  vn_exist_rec           number := 0;
  vn_fase                number := 0;
  vv_nome                pessoa.nome%type := null;
  vv_cd_regtribgia       reg_trib_gia.cd%type := null;
  vv_conteudo            det_dime.conteudo%type := null;
  vn_prev_aberturagia_id det_dime.aberturagia_id%type;

  -- Registro para a geração da DIME
  cursor c_registro_dime is
    select r.id        id_regigstro,
           r.codigo    cod_registro,
           q.id        id_quadro,
           q.codigo    cod_quadro,
           i.id        id_item,
           i.codigo    cod_item,
           i.descricao
      from registro_dime r,
           quadro_dime q,
           item_dime i
     where r.id = q.registrodime_id
       and q.id = i.quadrodime_id
     order by r.id,
              i.id;

  cursor c_prev_registro_dime(en_prev_aberturagia_id abertura_gia.id%type) is
    select r.id        registrodime_id,
           r.codigo    cod_registro,
           q.id        quadrodime_id,
           q.codigo    cod_quadro,
           i.id        itemdime_id,
           i.codigo    cod_item,
           i.descricao,
           d.conteudo
      from det_dime d,
           registro_dime r,
           quadro_dime q,
           item_dime i
     where d.aberturagia_id  = en_prev_aberturagia_id
       and d.registrodime_id = r.id
       and d.quadrodime_id   = q.id
       and d.itemdime_id     = i.id
     order by r.id,
              i.id;

begin
  --
  vn_fase := 1;
  --
  -- Recuperar parâmetros da geração da gia
  pkb_dados_abertura_gia(en_aberturagia_id => en_aberturagia_id);
  --
  gn_referencia_id := en_aberturagia_id;
  --
  vn_fase := 2;
  --
  if nvl(gt_row_abertura_gia.id, 0) > 0 then
    --
    -- Recupera o nome da empresa da abertura
    begin
      select substr(a.nome, 1, 50)
        into vv_nome
        from empresa em,
             pessoa a,
             juridica b
       where em.id       = gt_row_abertura_gia.empresa_id
         and a.id        = em.pessoa_id
         and b.pessoa_id = a.id;
    exception
      when others then
        vv_nome := null;
    end;
    --
    vn_fase := 3;
    --
    -- Verifica se já existem registros gerados para a abertura DIME
    begin
      select count(*)
        into vn_exist_rec
        from det_dime d
       where d.aberturagia_id = en_aberturagia_id;
    exception
      when others then
        vn_exist_rec := 0;
    end;
    --
    vn_fase := 4;
    --
    -- Verifica se existe uma abertura DIME criada no mês anterior da
    -- geração atual, para que seja utilizada na criação da mesma
    begin
      select a.id
        into vn_prev_aberturagia_id
        from abertura_gia a,
             det_dime d
       where d.aberturagia_id = a.id
         and a.empresa_id     = gt_row_abertura_gia.empresa_id
         and a.dt_ini         = to_date(add_months(gt_row_abertura_gia.dt_ini, -1), 'DD/MM/YYYY')
         and rownum           = 1
       order by 1;
    exception
      when others then
        vn_prev_aberturagia_id := 0;
    end;
    --
    vn_fase := 5;
    --
    -- Recupera código do Regime Tributário da GIA
    begin
      select r.cd
        into vv_cd_regtribgia
        from reg_trib_gia r
       where r.id = gt_row_abertura_gia.regtribgia_id;
    exception
      when others then
        vv_cd_regtribgia := null;
    end;
    --
    vn_fase := 6;
    --
    -- Caso não exista registro criado para a abertura DIME, gera registros necessários
    if vn_exist_rec = 0 then
      --
      vn_fase := 7;
      --
      -- Caso exista uma abertura criada anteriormente, utiliza para a geração da nova abertura DIME
      if vn_prev_aberturagia_id > 0 then
        --
        vn_fase := 8;
        --
        for reg_prev in c_prev_registro_dime(vn_prev_aberturagia_id) loop
          exit when c_prev_registro_dime%notfound or(c_prev_registro_dime%notfound) is null;
          --
          vn_fase := 9;
          --
          -- Cria os itens do registro 21 com os valores da abertura atual, 
          -- não utiliza as informações da abertura anterior
          if reg_prev.cod_registro = '21' and reg_prev.cod_item = '010' then
            reg_prev.conteudo := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), null);
          elsif reg_prev.cod_registro = '21' and reg_prev.cod_item = '020' then
            reg_prev.conteudo := vv_nome;
          elsif reg_prev.cod_registro = '21' and reg_prev.cod_item = '030' then
            reg_prev.conteudo := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
          elsif reg_prev.cod_registro = '21' and reg_prev.cod_item = '040' then
            reg_prev.conteudo := substr(gt_row_abertura_gia.dm_tipo_gia, 2, 1);
          elsif reg_prev.cod_registro = '21' and reg_prev.cod_item = '050' then
            reg_prev.conteudo := substr(vv_cd_regtribgia, 1, 1);
          -- Cria os itens do registro 35 com o conteudo vazio, 
          -- sem informação do mês anterior
          elsif reg_prev.cod_registro = '35' then
            reg_prev.conteudo := null;
          end if;
          --
          begin
            insert into det_dime
              (id,
               aberturagia_id,
               registrodime_id,
               quadrodime_id,
               itemdime_id,
               conteudo,
               qtde_trab,
               dm_situacao)
            values
              (csf_own.detdime_seq.nextval,
               en_aberturagia_id,
               reg_prev.registrodime_id,
               reg_prev.quadrodime_id,
               reg_prev.itemdime_id,
               reg_prev.conteudo,
               null,
               0);
          exception
            when others then
              raise_application_error(-20101, 'Erro ao gerar os registros anteriomente da abertura DIME - fase (' || vn_fase || '): ' || sqlerrm);
          end;
          --
        end loop; -- c_prev_registro_dime
        --
        commit;
        --
      -- Caso não exista uma abertura criada anteriormente, cria uma nova abertura DIME
      else 
        --
        vn_fase := 10;
        --
        for reg in c_registro_dime loop
          exit when c_registro_dime%notfound or(c_registro_dime%notfound) is null;
          --
          if reg.cod_registro = '21' and reg.cod_item = '010' then
            vv_conteudo := nvl(pk_csf.fkg_inscr_est_empresa(en_empresa_id => gt_row_abertura_gia.empresa_id), null);
          elsif reg.cod_registro = '21' and reg.cod_item = '020' then
            vv_conteudo := vv_nome;
          elsif reg.cod_registro = '21' and reg.cod_item = '030' then
            vv_conteudo := to_char(gt_row_abertura_gia.dt_ini, 'mmyyyy');
          elsif reg.cod_registro = '21' and reg.cod_item = '040' then
            vv_conteudo := substr(gt_row_abertura_gia.dm_tipo_gia, 2, 1);
          elsif reg.cod_registro = '21' and reg.cod_item = '050' then
            vv_conteudo := substr(vv_cd_regtribgia, 1, 1);
          end if;
          --
          vn_fase := 11;
          --
          begin
            insert into det_dime
              (id,
               aberturagia_id,
               registrodime_id,
               quadrodime_id,
               itemdime_id,
               conteudo,
               qtde_trab,
               dm_situacao)
            values
              (csf_own.detdime_seq.nextval,
               en_aberturagia_id,
               reg.id_regigstro,
               reg.id_quadro,
               reg.id_item,
               vv_conteudo,
               null,
               0);
          exception
            when others then
              raise_application_error(-20101, 'Erro ao gerar o registro ' || reg.cod_registro || ' quadro ' || reg.cod_quadro || ' item ' || reg.cod_item || ' DIME - fase (' || vn_fase || '): ' || sqlerrm);
          end;
          --
          vv_conteudo := null;
          --
        end loop; -- c_registro_dime
        --
      end if;
      --
      vn_fase := 12;
      --
      -- Atualiza abertura após geração dos registros DIME
      begin
        update abertura_gia a
           set a.dm_situacao = 6 -- Registros Gerados
         where a.id          = en_aberturagia_id;
      end;
      --
      commit;
      --
      vn_fase := 13;
      --
    end if;
    --
  else
    --
    vn_fase := 20;
    --
    gv_resumo := 'Não encontrado registro de DIME relacionado ao identificador informado (id = ' || gn_referencia_id || ').';
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
    exception
      when others then
        null;
    end;
    --
  end if;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_gera_reg_dime fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_reg_dime;

-------------------------------------------------------------------------------------------------------
-- Procedimento para geração dos registros de informações complementares para geração da DIME
-------------------------------------------------------------------------------------------------------
procedure pkb_gera_reg_dime_comp(en_infcompdime_id in inf_comp_dime.id%type) is
  --
  vn_fase           number := 0;
  vn_reg_inicial    number := 0;
  vn_reg_final      number := 0;
  vn_exist_det_inf  number := 0;
  vn_tp_inf         inf_comp_dime.dm_tp_inf%type;
  vn_situacao       inf_comp_dime.dm_situacao%type;
  --
  cursor c_registro_dime(en_cod_registro registro_dime.codigo%type) is
    select r.id,
           r.codigo
           cod_registro
      from registro_dime r
     where r.codigo = en_cod_registro;
  --
  cursor c_quadro_dime(en_registrodime_id quadro_dime.registrodime_id%type) is
    select q.id,
           q.codigo cod_quadro,
           q.descricao descr_quadro
      from quadro_dime q
     where q.registrodime_id = en_registrodime_id
     order by 1;
  --
  cursor c_item_dime(en_quadrodime_id item_dime.quadrodime_id%type) is
    select i.id,
           i.codigo cod_item,
           i.descricao descr_item
      from item_dime i
     where i.quadrodime_id = en_quadrodime_id
     order by 1;
  --
begin
  --
  vn_fase := 1;
  --
  gv_obj_referencia := 'INF_COMP_DIME';
  --
  if nvl(en_infcompdime_id, 0) > 0 then
    --
    vn_fase := 2;
    --
    -- Verifica se já existem registros gerados
    begin
      select count(1)
        into vn_exist_det_inf
        from det_inf_comp_dime d
       where d.infcompdime_id = en_infcompdime_id;
    exception
      when others then
        vn_exist_det_inf := 0;
    end;
    --
    vn_fase := 3;
    --
    -- Verifica o tipo do registro complementar
    begin
      select i.dm_tp_inf
        into vn_tp_inf
        from inf_comp_dime i
       where i.id = en_infcompdime_id;
    exception
      when others then
        vn_tp_inf := 0;
    end;
    --
    vn_fase := 4;
    --
    if vn_tp_inf = 1 then
      --
      vn_reg_inicial := 80;
      vn_reg_final   := 84;
      --
      vn_fase := 4.1;
      --
    else
      --
      vn_reg_inicial := 90;
      vn_reg_final   := 94;
      --
      vn_fase := 4.2;
      --
    end if;
    --
    vn_fase := 5;
    --
    if vn_exist_det_inf = 0 then
      --
      if vn_reg_inicial is not null or vn_reg_final is not null then
        --
        vn_fase := 5.1;
        --
        for c_dados in vn_reg_inicial .. vn_reg_final loop
          --
          vn_fase := 5.2;
          --
          -- Recupera as informações dos registros
          for rec_reg in c_registro_dime(c_dados) loop
            exit when c_registro_dime%notfound or(c_registro_dime%notfound) is null;
            --
            vn_fase := 5.3;
            --
            -- Recupera os quadros referente aos registros
            for rec_quadro in c_quadro_dime(rec_reg.id) loop
              exit when c_quadro_dime%notfound or(c_quadro_dime%notfound) is null;
              --
              vn_fase := 5.4;
              --
              -- Recupera os itens referente aos quadros
              for rec_item in c_item_dime(rec_quadro.id) loop
                exit when c_item_dime%notfound or(c_item_dime%notfound) is null;
                --
                vn_fase := 5.5;
                --
                begin
                  insert into det_inf_comp_dime
                    (id,
                     infcompdime_id,
                     registrodime_id,
                     quadrodime_id,
                     itemdime_id,
                     vl)
                  values
                    (csf_own.detinfcompdime_seq.nextval,
                     en_infcompdime_id,
                     rec_reg.id,
                     rec_quadro.id,
                     rec_item.id,
                     0);
                exception
                  when others then
                    raise_application_error(-20101, 'Erro ao gerar o registro ' || rec_reg.cod_registro || ' quadro ' || rec_quadro.cod_quadro || ' item ' || rec_item.cod_item || ' DIME Informações Complementares - fase (' || vn_fase || '): ' || sqlerrm);
                end;
                --
                vn_fase := 5.6;
                --
              end loop; -- rec_item
              --
              vn_fase := 5.7;
              --
            end loop; -- rec_quadro
            --
            vn_fase := 5.8;
            --
          end loop; -- rec_80
          --
          vn_fase := 5.9;
          --
        end loop; -- c_dados
        --
        vn_fase := 5.10;
        --
        begin
          update inf_comp_dime i
             set i.dm_situacao = 0 -- Criado
           where i.id          = en_infcompdime_id;
        end;
        --
        commit;
        --
        vn_fase := 5.11;
        --
      end if;
      --
    else
      --
      vn_fase := 99;
      --
      begin
        update inf_comp_dime i
           set i.dm_situacao = 1 -- Erro de criação de registro
         where i.id          = en_infcompdime_id;
      end;
      --
      commit;
      --
      gv_resumo := 'Não encontrado registro de Informações Complementares relacionado ao identificador informado (id = ' || en_infcompdime_id || '). Erro na pk_gera_arq_gia.pkb_gera_reg_dime_comp - fase (' || vn_fase || ')';
      --
      --
      declare
        vn_loggenerico_id log_generico.id%type;
      begin
        pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                         ev_mensagem       => gv_mensagem,
                                         ev_resumo         => gv_resumo,
                                         en_tipo_log       => erro_de_sistema,
                                         en_referencia_id  => gn_referencia_id,
                                         ev_obj_referencia => gv_obj_referencia,
                                         en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                         en_dm_impressa    => 1);
      exception
        when others then
          null;
      end;
      --
      --
    end if;
    --
  end if;
  --
exception
  when others then
    raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_gera_reg_dime_comp fase (' || vn_fase || '): ' || sqlerrm);
end pkb_gera_reg_dime_comp;

-------------------------------------------------------------------------------------------------------
-- Procedimento para cálculo dos registros de informações complementares para geração da DIME
-------------------------------------------------------------------------------------------------------
procedure pkb_calc_dime_comp(en_infcompdime_id in inf_comp_dime.id%type) is
  --
  vn_fase        number := 0;
  vn_tp_inf      inf_comp_dime.dm_tp_inf%type;
  vn_reg_inicial number := 0;
  vn_reg_final   number := 0;
  vn_vl_tot      number := 0;
  --
  vn_vl_110 number := 0;
  vn_vl_130 number := 0;
  vn_vl_150 number := 0;
  vn_vl_199 number := 0;
  --
  vn_vl_210         number := 0;
  vn_vl_230_240_269 number := 0;
  vn_vl_270         number := 0;
  vn_vl_299         number := 0;
  --
  vn_vl_320     number := 0;
  vn_vl_323     number := 0;
  vn_vl_330     number := 0;
  vn_vl_331     number := 0;
  vn_vl_333_335 number := 0;
  vn_vl_340     number := 0;
  vn_vl_341     number := 0;
  vn_vl_343_345 number := 0;
  vn_vl_350     number := 0;
  vn_vl_351     number := 0;
  vn_vl_353     number := 0;
  vn_vl_354     number := 0;
  vn_vl_360     number := 0;
  vn_vl_361     number := 0;
  vn_vl_363     number := 0;
  vn_vl_398     number := 0;
  vn_vl_399     number := 0;
  vn_vl_398_399 number := 0;
  --
  vn_vl_499 number := 0;
  --
  --
  cursor c_det_inf_comp_dime(en_cod_quadro quadro_dime.codigo%type) is
    select d.infcompdime_id inf_comp_id,
           q.codigo         cod_quadro,
           q.descricao      descr_quadro,
           i.id             id_item,
           i.codigo         cod_item,
           i.descricao      descr_item,
           d.vl
      from inf_comp_dime     inf,
           det_inf_comp_dime d,
           quadro_dime       q,
           item_dime         i
     where inf.id           = en_infcompdime_id
       and inf.dm_situacao  = 0 -- Criado
       and d.infcompdime_id = inf.id
       and d.quadrodime_id  = q.id
       and d.itemdime_id    = i.id
       and q.codigo         = en_cod_quadro
     order by cod_item;
  --
  -- Processo para atualização dos totalizadores
  procedure pkb_atualiza_tot_reg(en_item_id det_inf_comp_dime.id%type,
                                 en_vl      det_inf_comp_dime.vl%type) is
  begin
    --
    if nvl(en_item_id, 0) > 0 then
      --
      begin
        update det_inf_comp_dime d
           set d.vl             = en_vl
         where d.infcompdime_id = en_infcompdime_id
           and d.itemdime_id    = en_item_id;
      exception
        when no_data_found then
          raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_calc_dime_comp - ' || sqlerrm);
        when others then
          raise_application_error(-20101, 'Erro na pk_gera_arq_gia.pkb_calc_dime_comp - ' || sqlerrm);
      end;
      --
      commit;
      --
    end if;
    --
  end pkb_atualiza_tot_reg;
  --
begin
  --
  vn_fase := 1;
  --
  -- Verifica o tipo do registro complementar
  begin
    select i.dm_tp_inf
      into vn_tp_inf
      from inf_comp_dime i
     where i.id = en_infcompdime_id;
  exception
    when others then
      vn_tp_inf := 0;
  end;
  --
  vn_fase := 2;
  --
  if vn_tp_inf = 1 then
    --
    vn_reg_inicial := 80;
    vn_reg_final   := 84;
    --
    vn_fase := 2.1;
    --
  else
    --
    vn_reg_inicial := 90;
    vn_reg_final   := 94;
    --
    vn_fase := 2.2;
    --
  end if;
  --
  if nvl(en_infcompdime_id, 0) > 0 then
    --
    vn_fase := 3;
    --
    if vn_reg_inicial is not null or vn_reg_final is not null then
      --
      vn_fase := 3.1;
      --
      for c_dados in vn_reg_inicial .. vn_reg_final loop
        --
        vn_fase := 3.2;
        --
        -- Recupera as informações dos registros
        for rec in c_det_inf_comp_dime(c_dados) loop
          exit when c_det_inf_comp_dime%notfound or(c_det_inf_comp_dime%notfound) is null;
          --
          vn_fase := 3.3;
          --
          -- Registro 81 / 91
          if rec.cod_item in (111, 113, 121, 123, 128) then
            --
            vn_fase := 3.4;
            --
            vn_vl_110 := vn_vl_110 + nvl(rec.vl, 0);
            --
          elsif rec.cod_item in (131, 148) then
            --
            vn_fase := 3.5;
            --
            vn_vl_130 := vn_vl_130 + nvl(rec.vl, 0);
            --
          elsif rec.cod_item in (151, 155, 157, 159) then
            --
            vn_fase := 3.6;
            --
            vn_vl_150 := vn_vl_150 + nvl(rec.vl, 0);
            --
          -- Registro 82 / 92
          elsif rec.cod_item in (211, 213, 215) then
            --
            vn_fase := 3.7;
            --
            vn_vl_210 := vn_vl_210 + nvl(rec.vl, 0);
            --
          elsif rec.cod_item in (230, 240, 269) then
            --
            vn_fase := 3.8;
            --
            vn_vl_230_240_269 := vn_vl_230_240_269 + nvl(rec.vl, 0);
            --
          elsif rec.cod_item in (271, 278, 279) then
            --
            if rec.cod_item in (271, 278) then -- (+)
              --
              vn_fase := 3.8;
              --
              vn_vl_270 := vn_vl_270 + nvl(rec.vl, 0);
              --
            elsif rec.cod_item in (279) then -- (-)
              --
              vn_fase := 3.9;
              --
              vn_vl_270 := vn_vl_270 - nvl(rec.vl, 0);
              --
            end if;
            --
          -- Registro 83 / 93
          elsif rec.cod_item in (310, 311) then
            --
            if rec.cod_item in (310) then -- (+)
              --
              vn_fase := 3.9;
              --
              vn_vl_320 := vn_vl_320 + nvl(rec.vl, 0);
              --
            elsif rec.cod_item in (311) then -- (-)
              --
              vn_fase := 3.10;
              --
              vn_vl_320 := vn_vl_320 - nvl(rec.vl, 0);
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (323) then
            --
            vn_vl_tot := (vn_vl_320) - nvl(rec.vl, 0);
            --
            if vn_vl_tot > 0 then
              --
              vn_fase := 3.11;
              --
              vn_vl_330 := vn_vl_tot; -- Valores positivos
              --
            else
              --
              vn_fase := 3.12;
              --
              vn_vl_331 := vn_vl_tot; -- Valores negativos
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (333, 335) then
            --
            if rec.cod_item in (333) then -- (+)
              --
              vn_fase := 3.13;
              --
              vn_vl_333_335 := vn_vl_333_335 + nvl(rec.vl, 0);
              --
            elsif rec.cod_item in (335) then -- (-)
              --
              vn_fase := 3.14;
              --
              vn_vl_333_335 := vn_vl_333_335 - nvl(rec.vl, 0);
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (340, 341) then
            --
            vn_vl_tot := vn_vl_tot + vn_vl_330 + (vn_vl_331) + (vn_vl_333_335);
            --
            if vn_vl_tot > 0 then
              --
              vn_fase := 3.15;
              --
              vn_vl_340 := vn_vl_tot; -- Valores positivos
              --
            else
              --
              vn_fase := 3.16;
              --
              vn_vl_341 := vn_vl_tot; -- Valores negativos
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (343, 345) then
            --
            if rec.cod_item in (343) then -- (+)
              --
              vn_fase := 3.17;
              --
              vn_vl_343_345 := vn_vl_343_345 + nvl(rec.vl, 0);
              --
            elsif rec.cod_item in (345) then -- (-)
              --
              vn_fase := 3.18;
              --
              vn_vl_343_345 := vn_vl_343_345 - nvl(rec.vl, 0);
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (350, 351) then
            --
            vn_vl_tot := vn_vl_tot + vn_vl_340 + (vn_vl_341) + (vn_vl_343_345);
            --
            if vn_vl_tot > 0 then
              --
              vn_fase := 3.19;
              --
              vn_vl_350 := vn_vl_tot; -- Valores positivos
              --
            else
              --
              vn_fase := 3.20;
              --
              vn_vl_351 := vn_vl_tot; -- Valores negativos
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (353, 354) then
            --
            if rec.cod_item in (353) then -- (-)
              --
              vn_fase := 3.21;
              --
              vn_vl_353 := (vn_vl_353) - nvl(rec.vl, 0);
              --
            elsif rec.cod_item in (354) then -- (+)
              --
              vn_fase := 3.22;
              --
              vn_vl_354 := (vn_vl_354) + (nvl(rec.vl, 0));
              --
            end if;
            --
          elsif rec.cod_item in (360, 361) then
            --
            vn_vl_tot := vn_vl_tot + (vn_vl_350) + (vn_vl_351) - ((vn_vl_353) + vn_vl_354);
            --
            if vn_vl_tot > 0 then
              --
              vn_fase := 3.23;
              --
              vn_vl_360 := vn_vl_tot; -- Valores positivos
              --
            else
              --
              vn_fase := 3.24;
              --
              vn_vl_361 := vn_vl_tot; -- Valores negativos
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (363) then
            --
            vn_fase := 3.25;
            --
            vn_vl_363 := vn_vl_363 + nvl(rec.vl, 0);
            --
            vn_vl_tot := 0;
            --
          elsif rec.cod_item in (398, 399) then
            --
            vn_vl_tot := vn_vl_tot + vn_vl_360 + vn_vl_361 - vn_vl_363;
            --
            if vn_vl_tot > 0 then
              --
              vn_fase := 3.26;
              --
              vn_vl_398_399 := vn_vl_tot; -- Valores positivos
              --
            else
              --
              vn_fase := 3.27;
              --
              vn_vl_398_399 := vn_vl_tot; -- Valores negativos
              --
            end if;
            --
            vn_vl_tot := 0;
            --
          -- Registro 84 / 94
          elsif rec.cod_item in ('411', '412', '431', '421', '422', '423', '424', '432', '433', '441', '451', '442', '443', '461', '498') then
            --
            vn_fase := 3.28;
            --
            vn_vl_499 := vn_vl_499 + nvl(rec.vl, 0);
            --
          end if;
          --
        end loop;
        --
      end loop;
      --
      vn_fase := 4;
      --
      -- Alimenta os totalizadores com os valores informados
      vn_vl_199 := nvl(vn_vl_110, 0) + nvl(vn_vl_130, 0) + nvl(vn_vl_150, 0);
      vn_vl_299 := nvl(vn_vl_210, 0) + nvl(vn_vl_230_240_269, 0) + nvl(vn_vl_270, 0);
      --
      if nvl(vn_vl_398_399, 0) > 0 then
        --
        vn_vl_399 := vn_vl_398_399;
        --
      else
        --
        vn_vl_398 := vn_vl_398_399;
        --
      end if;
      --
      vn_fase := 5;
      --
      -- Atualiza totalizadores com valores informados
      for c_up_dados in vn_reg_inicial .. vn_reg_final loop
        --
        vn_fase := 5.1;
        --
        for rec_up in c_det_inf_comp_dime(c_up_dados) loop
          exit when c_det_inf_comp_dime%notfound or(c_det_inf_comp_dime%notfound) is null;
          --
          vn_fase := 5.2;
          --
          -- Registro 81 / 91
          if rec_up.cod_item = '110' then
            --
            vn_fase := 5.3;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_110);
            --
          elsif rec_up.cod_item = '130' then
            --
            vn_fase := 5.4;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_130);
            --
          elsif rec_up.cod_item = '150' then
            --
            vn_fase := 5.5;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_150);
            --
          elsif rec_up.cod_item = '199' then
            --
            vn_fase := 5.6;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_199);
            --
          -- Registro 82 / 92
          elsif rec_up.cod_item = '210' then
            --
            vn_fase := 5.7;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_210);
            --
          elsif rec_up.cod_item = '270' then
            --
            vn_fase := 5.8;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_270);
            --
          elsif rec_up.cod_item = '299' then
            --
            vn_fase := 5.9;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_299);
            --
          -- Registro 83 / 93
          elsif rec_up.cod_item = '320' then
            --
            vn_fase := 5.10;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_320);
            --
          elsif rec_up.cod_item = '330' then
            --
            vn_fase := 5.11;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_330);
            --
          elsif rec_up.cod_item = '331' then
            --
            vn_fase := 5.12;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_331);
            --
          elsif rec_up.cod_item = '340' then
            --
            vn_fase := 5.13;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_340);
            --
          elsif rec_up.cod_item = '341' then
            --
            vn_fase := 5.14;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_341);
            --
          elsif rec_up.cod_item = '350' then
            --
            vn_fase := 5.15;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_350);
            --
          elsif rec_up.cod_item = '351' then
            --
            vn_fase := 5.16;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_351);
            --
          elsif rec_up.cod_item = '360' then
            --
            vn_fase := 5.17;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_360);
            --
          elsif rec_up.cod_item = '361' then
            --
            vn_fase := 5.18;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_361);
            --
          elsif rec_up.cod_item = '398' then
            --
            vn_fase := 5.19;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_398);
            --
          elsif rec_up.cod_item = '399' then
            --
            vn_fase := 5.20;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_399);
            --
          -- Registro 84 / 94
          elsif rec_up.cod_item = '499' then
            --
            vn_fase := 5.21;
            --
            pkb_atualiza_tot_reg(rec_up.id_item, vn_vl_499);
            --
          end if;
          --
        end loop; -- rec_up
        --
        vn_fase := 5.22;
        --
      end loop; -- c_up_dados
      --
      -- Atualiza o registro após calculos realizados
      begin
        update inf_comp_dime i
           set i.dm_situacao = 2 -- Calculado
         where i.id          = en_infcompdime_id;
      exception
        when others then
          gv_resumo := 'Problemas ao atualizar informações complementares (ID: ' || en_infcompdime_id || '). Erro na pk_gera_arq_gia.pkb_calc_dime_comp fase (' || vn_fase || '): ' || sqlerrm;
      end;
      --
      commit;
      --
      vn_fase := 5.23;
      --
    end if;
    --
  end if;
  --
exception
  when others then
    begin
      update inf_comp_dime i
         set i.dm_situacao = 3 -- Erro de Cálculo
       where i.id          = en_infcompdime_id;
    exception
      when others then
        gv_resumo := 'Problemas ao atualizar informações complementares (ID: ' || en_infcompdime_id || '). Erro na pk_gera_arq_gia.pkb_calc_dime_comp fase (' || vn_fase || '): ' || sqlerrm;
    end;
    --
    commit;
    --
    declare
      vn_loggenerico_id log_generico.id%type;
    begin
      pk_log_generico.pkb_log_generico(sn_loggenerico_id => vn_loggenerico_id,
                                       ev_mensagem       => gv_mensagem,
                                       ev_resumo         => gv_resumo,
                                       en_tipo_log       => erro_de_sistema,
                                       en_referencia_id  => gn_referencia_id,
                                       ev_obj_referencia => gv_obj_referencia,
                                       en_empresa_id     => gt_row_abertura_gia.empresa_id,
                                       en_dm_impressa    => 1);
    exception
      when others then
        null;
    end;
    --
    raise_application_error(-20101, gv_resumo);
    --
end pkb_calc_dime_comp;

-------------------------------------------------------------------------------------------------------
end pk_gera_arq_gia;
/
